:host {
  --modal-bg: #1e1e1e;
  --text-primary: #ffffff;
  --text-secondary: #a0a0a0;
  --accent-red: #e53935;
  --border-color: #333333;
  --input-bg: #2a2a2a;
  --shaft-color: #d0d0d0;
  --collar-color: #9e9e9e;
}

.modal-overlay {
  position: fixed;
  inset: 0;
  background-color: rgba(0, 0, 0, 0.7);
  display: flex;
  justify-content: center;
  align-items: center;
  backdrop-filter: blur(10px);
  z-index: 1050;
}

.calculator-modal {
  background-color: var(--modal-bg);
  color: var(--text-primary);
  width: 90%;
  max-width: 420px;
  border-radius: 16px;
  border: 1px solid var(--border-color);
  display: flex;
  flex-direction: column;
  max-height: 90vh;
}

.header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 8px 16px;
  border-bottom: 1px solid var(--border-color);
  flex-shrink: 0;
}

.mode-toggle {
  display: flex;
  background-color: var(--input-bg);
  border-radius: 8px;
  padding: 4px;

  button {
    background: none;
    border: none;
    color: var(--text-secondary);
    padding: 6px 16px;
    border-radius: 6px;
    cursor: pointer;
    font-weight: bold;
    transition: all 0.2s ease-in-out;

    &.active {
      background-color: var(--accent-red);
      color: var(--text-primary);
    }
  }
}

.close-btn {
  background: none;
  border: none;
  font-size: 2rem;
  color: var(--text-secondary);
  cursor: pointer;
}

.modal-body {
  padding: 16px;
  display: flex;
  flex-direction: column;
  gap: 16px;
  overflow-y: auto;
}

.visualization-container {
  height: 80px;
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 0 10px;
  flex-shrink: 0;
}

.barbell {
  display: flex;
  align-items: center;
  width: 100%;
  height: 8px;

  .sleeve {
    display: flex;
    align-items: center;
    height: 60px;

    &.left {
      flex-direction: row-reverse;
    }
  }

  .shaft {
    flex-grow: 1;
    height: 100%;
    background-color: var(--shaft-color);
  }

  // +++ FIX: Simplified collar styling +++
  .collar {
    height: 24px;
    min-width: 10px;
    background-color: var(--collar-color);
    border-radius: 2px;
    margin: 0 4px;
    flex-shrink: 0;
  }
}

.plate {
  border: 1px solid #000;
  box-sizing: border-box;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 0.7rem;
  font-weight: bold;
  color: #111;
  border-radius: 4px;
  cursor: pointer;
  flex-shrink: 0;
  margin-left: 1px;
  margin-right: 1px;

  &.plate-50 {
    height: 100%;
    width: 25px;
  }

  &.plate-25 {
    height: 95%;
    width: 22px;
  }

  &.plate-20 {
    height: 90%;
    width: 20px;
  }

  &.plate-15 {
    height: 85%;
    width: 18px;
  }

  &.plate-10 {
    height: 80%;
    width: 18px;
  }

  &.plate-5 {
    height: 70%;
    width: 14px;
  }

  &.plate-2-5 {
    height: 60%;
    width: 18px;
  }

  &.plate-2 {
    height: 55%;
    width: 12px;
  }

  &.plate-1-5 {
    height: 50%;
    width: 18px;
  }

  &.plate-1 {
    height: 45%;
    width: 10px;
  }

  &.plate-0-5 {
    height: 40%;
    width: 18px;
  }
}

.total-weight-display {
  text-align: center;

  h2 {
    margin: 0;
    font-size: 2.5rem;
    font-weight: bold;
  }
}

.input-group {
  display: flex;
  flex-direction: column; // This is the line that stacks the elements
  gap: 8px;

  .weight-input {
    flex-grow: 1;
    background-color: var(--input-bg);
    border: 1px solid var(--border-color);
    border-radius: 8px;
    color: var(--text-primary);
    font-size: 1.5rem;
    text-align: center;
    padding: 8px;
    -moz-appearance: textfield;

    &::-webkit-outer-spin-button,
    &::-webkit-inner-spin-button {
      -webkit-appearance: none;
      margin: 0;
    }
  }

  .unit-toggle {
    display: flex;

    button {
      flex: 1; // Allows buttons to fill the width evenly
      padding: 12px 20px;
      font-weight: bold;
      border: 1px solid var(--border-color);
      background-color: var(--input-bg);
      color: var(--text-secondary);
      cursor: pointer;

      &:first-child {
        border-radius: 8px 0 0 8px;
      }

      &:last-child {
        border-radius: 0 8px 8px 0;
      }

      &.active {
        background-color: var(--text-primary);
        color: var(--modal-bg);
      }
    }
  }
}

.reverse-mode-controls {
  text-align: center;
  background-color: #e8e8e8;
  // color: var(--text-secondary);
  color: black;
  font-size: 0.8rem;
  border: 1px solid var(--border-color);
  border-radius: 12px;
  padding: 16px;

  p {
    margin: 0 0 12px 0;
  }

  .plate-selection {
    display: flex;
    justify-content: center;
    gap: 12px;
    flex-wrap: wrap;
  }

  .plate-option {
    cursor: pointer;
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 4px;
    transition: transform 0.1s ease-in-out;
    position: relative;

    span {
      font-size: 0.9rem;
      font-weight: bold;
    }

    &:hover {
      transform: scale(1.05);
    }

    .plate-visual {
      width: 44px;
      height: 44px;
      border-radius: 50%;
      border: 2px solid;
      position: relative;

      &::before {
        content: '';
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        width: 12px;
        height: 12px;
        // background-color: var(--modal-bg);
        background-color: #e8e8e8;
        border-radius: 50%;
        border: 1px solid var(--border-color);
      }
    }
  }

  .plate-quantity {
    position: absolute;
    bottom: 20px;
    right: -1px;
    background-color: rgba(0, 0, 0, 0.65);
    color: #ffffff;
    font-size: 0.65rem;
    font-weight: bold;
    line-height: 1;
    padding: 2px 5px;
    border-radius: 8px;
    pointer-events: none;
    /* Prevents the badge from interfering with click events on the plate */
  }

  .clear-btn {
    background: rgb(246, 77, 77);
    border: 1px solid var(--accent-red);
    color: white;
    padding: 8px 16px;
    border-radius: 8px;
    cursor: pointer;
    margin-top: 16px;
    font-weight: bold;
  }
}

.config-settings {
  display: flex;
  flex-wrap: wrap; // Allow items to wrap
  gap: 0.2rem;
  align-items: center; // Align items vertically
}

.form-group {
  display: flex;
  flex-direction: column;

  label {
    font-size: 0.8rem;
    color: var(--text-secondary);
    margin-bottom: 4px;
  }

  select {
    background-color: var(--input-bg);
    border: 1px solid var(--border-color);
    color: var(--text-primary);
    padding: 8px;
    border-radius: 8px;
  }

  flex: 1 1 150px;
}

.loadout-summary {
  flex-shrink: 0;

  h4 {
    color: var(--text-secondary);
    margin: 0 0 8px 0;
    font-size: 0.9rem;
  }

  .summary-list {
    display: flex;
    gap: 12px;
    overflow-x: auto;
    padding-bottom: 8px;
  }

  .summary-item {
    background-color: var(--input-bg);
    padding: 8px;
    border-radius: 8px;
    text-align: center;

    .plate-count {
      font-weight: bold;
      font-size: 1.1rem;
    }

    .plate-weight {
      font-size: 0.8rem;
      color: var(--text-secondary);
    }
  }

  .summary-item-empty {
    color: var(--text-secondary);
    font-style: italic;
  }

  .math-breakdown {
    margin-top: 1rem;
    padding-top: 0.75rem;
    border-top: 1px solid var(--border-color-soft, #e5e7eb);
    font-size: 0.8rem;
    color: var(--text-color-secondary, #6b7280);

    .title {
      font-weight: 500;
      margin-bottom: 0.25rem;
      color: white
    }

    .formula {
      display: flex;
      flex-wrap: wrap; // Allows wrapping on small screens
      align-items: center;
      gap: 0.35rem;

      .label {
        font-style: italic;
        color: var(--text-color-secondary, #9ca3af);
      }
    }
  }
}

.toggle-group {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  flex: 1 1 100%; // Make toggles take full width on smaller screens
  justify-content: space-between;
  padding: 0.5rem 0;

  label {
    margin-bottom: 0;
    font-size: 0.9rem;
  }
}

.toggle-switch {
  position: relative;
  display: inline-block;
  width: 50px;
  height: 28px;

  input {
    opacity: 0;
    width: 0;
    height: 0;
  }

  .slider {
    position: absolute;
    cursor: pointer;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: #ccc;
    transition: .4s;

    &.round {
      border-radius: 28px;
    }

    &:before {
      position: absolute;
      content: "";
      height: 20px;
      width: 20px;
      left: 4px;
      bottom: 4px;
      background-color: white;
      transition: .4s;
      border-radius: 50%;
    }
  }

  input:checked+.slider {
    background-color: #2196F3; // Or your app's primary color
  }

  input:checked+.slider:before {
    transform: translateX(22px);
  }
}

.input-group.calculate-mode-input {
  display: flex;
  align-items: stretch; // Makes items the same height
  gap: 8px;

  // NEW: Wrapper for the input and its buttons
  .weight-control {
    display: flex;
    flex-grow: 1; // Allows this group to take up available space
  }

  // ADJUSTED: The weight input now has no border-radius
  .weight-input {
    flex-grow: 1;
    background-color: var(--input-bg);
    border: 1px solid var(--border-color);
    border-radius: 0; // The container will handle the rounding
    color: var(--text-primary);
    font-size: 1.5rem;
    text-align: center;
    padding: 8px;
    width: 100%; // Ensure it fills the space
    -moz-appearance: textfield;

    &::-webkit-outer-spin-button,
    &::-webkit-inner-spin-button {
      -webkit-appearance: none;
      margin: 0;
    }
  }

  // NEW: Styles for the stepper buttons
  .stepper-btn {
    display: flex;
    justify-content: center;
    align-items: center;
    flex-shrink: 0;
    width: 50px; // A good touch-target size
    background-color: var(--input-bg);
    border: 1px solid var(--border-color);
    color: var(--text-primary);
    cursor: pointer;
    user-select: none; // Prevents highlighting text when holding
    transition: background-color 0.2s ease;

    &:hover {
      background-color: #3a3a3a; // A slightly lighter shade for hover
    }

    &:first-of-type {
      border-top-left-radius: 8px;
      border-bottom-left-radius: 8px;
      border-right: none; // Creates a seamless look with the input
    }

    &:last-of-type {
      border-top-right-radius: 8px;
      border-bottom-right-radius: 8px;
    }
  }

  // No changes needed for .unit-toggle, but it's here for context
  .unit-toggle {
    display: flex;
    flex-shrink: 0; // Prevent it from shrinking

    button {
      flex: 1;
      padding: 12px 20px;
      font-weight: bold;
      border: 1px solid var(--border-color);
      background-color: var(--input-bg);
      color: var(--text-secondary);
      cursor: pointer;

      &:first-child {
        border-radius: 8px 0 0 8px;
      }

      &:last-child {
        border-radius: 0 8px 8px 0;
      }

      &.active {
        background-color: var(--text-primary);
        color: var(--modal-bg);
      }
    }
  }
}