/* Import Tailwind's base, components, and utilities */
@tailwind base;
@tailwind components;
@tailwind utilities;

// * {
//   outline: 1px solid red !important; /* The !important helps override other styles */
// }

/* Your other global styles can go here */
body {
  /* Example: applied via Tailwind classes in app.component.html now, 
     but base font-family is good. You might also apply base bg/text colors here 
     if not handled by a root component, though Tailwind's preflight (base) often does enough.
  */
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
}

.your-swipeable-card-class {
  /* Add a specific class to the div if needed */
  touch-action: pan-y pan-x;
  /* Or just 'auto' if that works, but pan-y pan-x is often good */
}

@layer components {

  /* Modal Appear Animation */
  @keyframes modal-appear-animation {
    0% {
      opacity: 0;
      transform: scale(0.95) translateY(10px);
    }

    100% {
      opacity: 1;
      transform: scale(1) translateY(0);
    }
  }

  .animate-modal-appear {
    animation: modal-appear-animation 0.3s ease-out forwards;
  }

  /* Optional: Custom Scrollbar (Tailwind doesn't have great utilities for this yet) */
  .custom-scrollbar::-webkit-scrollbar {
    width: 6px;
    /* For vertical scrollbars */
    height: 6px;
    /* For horizontal scrollbars */
  }

  .custom-scrollbar::-webkit-scrollbar-track {
    background: transparent;
    border-radius: 3px;
  }

  .custom-scrollbar::-webkit-scrollbar-thumb {
    background-color: rgba(0, 0, 0, 0.2);
    border-radius: 3px;
  }

  .dark .custom-scrollbar::-webkit-scrollbar-thumb {
    background-color: rgba(255, 255, 255, 0.2);
  }

  .custom-scrollbar::-webkit-scrollbar-thumb:hover {
    background-color: rgba(0, 0, 0, 0.3);
  }

  .dark .custom-scrollbar::-webkit-scrollbar-thumb:hover {
    background-color: rgba(255, 255, 255, 0.3);
  }
}

.is-pressed {
  transform: scale(0.95);
  filter: brightness(0.9);
  transition: transform 150ms cubic-bezier(0.4, 0, 0.2, 1);
}


// TOOLTIP CSS START
// .tooltip-container {
//   position: absolute; /* Crucial for positioning */
//   background-color: #333;
//   color: #fff;
//   padding: 6px 12px;
//   border-radius: 6px;
//   font-size: 0.875rem;
//   z-index: 1000; /* Ensure it appears on top */
//   pointer-events: none; /* Prevent the tooltip from blocking mouse events */

//   /* Fade-in / Fade-out transition */
//   opacity: 0;
//   transition: opacity 0.2s ease-in-out;
// }

.tooltip-container {
  position: absolute;
  background-color: #333;
  color: #fff;
  padding: 6px 12px;
  border-radius: 6px;
  font-size: 0.875rem;
  z-index: 1000;
  pointer-events: none;
  
  /* Use a consistent width */
  width: 12rem; 
  text-align: center;
  /* Or use max-width for more flexibility */
  /* max-width: 200px; */

  /* Set initial opacity to 0 and transition it */
  opacity: 0;
  transition: opacity 0.2s ease-in-out;
}

/* --- NEW CLASS --- */
/* This class forces the browser to calculate the layout while keeping it invisible */
.tooltip-container.tooltip-preparing {
  visibility: hidden;
  opacity: 0;
}

/* This class is added by the directive to trigger the fade-in transition */
.tooltip-container.tooltip-active {
  opacity: 1;
}

/* DARK MODE - No changes needed here, it will still work */
@media (prefers-color-scheme: dark) {
  .tooltip-container {
    background-color: #393939;
  }
}

// TOOLTIP CSS END