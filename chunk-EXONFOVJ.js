import{a as $d,b as wS,c as CS}from"./chunk-W5ZEIFSV.js";import{a as SS}from"./chunk-Y4QL4AFW.js";import"./chunk-E2BFC26J.js";import{a as vS}from"./chunk-PH47XWUK.js";import{a as Ca}from"./chunk-YM4NT5EE.js";import{a as hS,b as gS,c as xS,d as yS,e as bS}from"./chunk-VWHJU726.js";import"./chunk-NB565UJK.js";import{f as mS,h as fr}from"./chunk-X2TWKFBB.js";import{a as Xn}from"./chunk-SMIN5TMQ.js";import{c as W0,d as gd,g as Zc,h as Jc,i as xd,n as z0,o as jn,p as fS}from"./chunk-O2CXEU7D.js";import{a as Rd}from"./chunk-76RJK3JZ.js";import{$ as ca,$b as yd,Aa as E,Ab as bo,B as kr,Ba as pe,Ca as Ro,Da as $o,Eb as iS,F as ua,Fa as ke,Fb as ma,Ga as ie,Gb as sS,H as Zi,Ha as L,Hb as fa,Ib as Kn,Jb as vo,Kb as Ir,La as Un,Ma as Gn,N as Ve,Na as Hn,Oa as jo,P as re,Pa as Qc,Q as oe,Qa as Po,R as _e,Rb as aS,S as Ge,Sa as O,Sb as ha,Ta as We,Ua as $e,Ub as qn,Va as Gt,Vb as ga,W as De,X as Zv,Xa as nS,Ya as Ji,Z as Jv,Za as es,Zb as _t,_a as ts,a as ar,ab as hd,ac as mt,b as _r,bb as M0,bc as xa,ca as fd,cb as rs,cc as bd,d as io,da as eS,db as xo,dc as lS,e as ct,ea as Xc,ec as ya,f as O0,fa as D,fb as B0,fc as vd,g as X,gc as Sd,hc as wd,ib as pt,ic as uS,ja as tS,jb as Vt,jc as cS,kb as yo,kc as Cd,lb as V0,lc as _d,mb as Xo,mc as kd,n as Qi,na as go,nc as Id,ob as At,p as zn,pa as rS,pc as pS,q as jc,qc as dS,rc as Td,s as Xv,sa as ae,sc as ba,ta as Yc,tc as Ed,u as md,ua as oS,ub as pa,uc as va,v as Yv,vc as Nd,wc as Sa,x as Qv,xa as L0,xc as wa,ya as B,yb as da,za as I,zb as Yo}from"./chunk-VOSM6FWT.js";var NS=io(ES=>{"use strict";(function(){"use strict";var r;function t(h){var b=0;return function(){return b<h.length?{done:!1,value:h[b++]}:{done:!0}}}var e=typeof Object.defineProperties=="function"?Object.defineProperty:function(h,b,_){return h==Array.prototype||h==Object.prototype||(h[b]=_.value),h};function o(h){h=[typeof globalThis=="object"&&globalThis,h,typeof window=="object"&&window,typeof self=="object"&&self,typeof global=="object"&&global];for(var b=0;b<h.length;++b){var _=h[b];if(_&&_.Math==Math)return _}throw Error("Cannot find global object")}var n=o(this);function i(h,b){if(b)e:{var _=n;h=h.split(".");for(var $=0;$<h.length-1;$++){var V=h[$];if(!(V in _))break e;_=_[V]}h=h[h.length-1],$=_[h],b=b($),b!=$&&b!=null&&e(_,h,{configurable:!0,writable:!0,value:b})}}i("Symbol",function(h){function b(U){if(this instanceof b)throw new TypeError("Symbol is not a constructor");return new _($+(U||"")+"_"+V++,U)}function _(U,W){this.h=U,e(this,"description",{configurable:!0,writable:!0,value:W})}if(h)return h;_.prototype.toString=function(){return this.h};var $="jscomp_symbol_"+(1e9*Math.random()>>>0)+"_",V=0;return b}),i("Symbol.iterator",function(h){if(h)return h;h=Symbol("Symbol.iterator");for(var b="Array Int8Array Uint8Array Uint8ClampedArray Int16Array Uint16Array Int32Array Uint32Array Float32Array Float64Array".split(" "),_=0;_<b.length;_++){var $=n[b[_]];typeof $=="function"&&typeof $.prototype[h]!="function"&&e($.prototype,h,{configurable:!0,writable:!0,value:function(){return s(t(this))}})}return h});function s(h){return h={next:h},h[Symbol.iterator]=function(){return this},h}function a(h){var b=typeof Symbol<"u"&&Symbol.iterator&&h[Symbol.iterator];return b?b.call(h):{next:t(h)}}function l(h){if(!(h instanceof Array)){h=a(h);for(var b,_=[];!(b=h.next()).done;)_.push(b.value);h=_}return h}var u=typeof Object.assign=="function"?Object.assign:function(h,b){for(var _=1;_<arguments.length;_++){var $=arguments[_];if($)for(var V in $)Object.prototype.hasOwnProperty.call($,V)&&(h[V]=$[V])}return h};i("Object.assign",function(h){return h||u});var c=typeof Object.create=="function"?Object.create:function(h){function b(){}return b.prototype=h,new b},p;if(typeof Object.setPrototypeOf=="function")p=Object.setPrototypeOf;else{var d;e:{var m={a:!0},f={};try{f.__proto__=m,d=f.a;break e}catch{}d=!1}p=d?function(h,b){if(h.__proto__=b,h.__proto__!==b)throw new TypeError(h+" is not extensible");return h}:null}var g=p;function x(h,b){if(h.prototype=c(b.prototype),h.prototype.constructor=h,g)g(h,b);else for(var _ in b)if(_!="prototype")if(Object.defineProperties){var $=Object.getOwnPropertyDescriptor(b,_);$&&Object.defineProperty(h,_,$)}else h[_]=b[_];h.za=b.prototype}function y(){this.m=!1,this.j=null,this.i=void 0,this.h=1,this.v=this.s=0,this.l=null}function v(h){if(h.m)throw new TypeError("Generator is already running");h.m=!0}y.prototype.u=function(h){this.i=h};function k(h,b){h.l={ma:b,na:!0},h.h=h.s||h.v}y.prototype.return=function(h){this.l={return:h},this.h=this.v};function N(h,b,_){return h.h=_,{value:b}}function F(h){this.h=new y,this.i=h}function M(h,b){v(h.h);var _=h.h.j;return _?z(h,"return"in _?_.return:function($){return{value:$,done:!0}},b,h.h.return):(h.h.return(b),H(h))}function z(h,b,_,$){try{var V=b.call(h.h.j,_);if(!(V instanceof Object))throw new TypeError("Iterator result "+V+" is not an object");if(!V.done)return h.h.m=!1,V;var U=V.value}catch(W){return h.h.j=null,k(h.h,W),H(h)}return h.h.j=null,$.call(h.h,U),H(h)}function H(h){for(;h.h.h;)try{var b=h.i(h.h);if(b)return h.h.m=!1,{value:b.value,done:!1}}catch(_){h.h.i=void 0,k(h.h,_)}if(h.h.m=!1,h.h.l){if(b=h.h.l,h.h.l=null,b.na)throw b.ma;return{value:b.return,done:!0}}return{value:void 0,done:!0}}function K(h){this.next=function(b){return v(h.h),h.h.j?b=z(h,h.h.j.next,b,h.h.u):(h.h.u(b),b=H(h)),b},this.throw=function(b){return v(h.h),h.h.j?b=z(h,h.h.j.throw,b,h.h.u):(k(h.h,b),b=H(h)),b},this.return=function(b){return M(h,b)},this[Symbol.iterator]=function(){return this}}function j(h){function b($){return h.next($)}function _($){return h.throw($)}return new Promise(function($,V){function U(W){W.done?$(W.value):Promise.resolve(W.value).then(b,_).then(U,V)}U(h.next())})}function J(h){return j(new K(new F(h)))}i("Promise",function(h){function b(W){this.i=0,this.j=void 0,this.h=[],this.u=!1;var q=this.l();try{W(q.resolve,q.reject)}catch(ee){q.reject(ee)}}function _(){this.h=null}function $(W){return W instanceof b?W:new b(function(q){q(W)})}if(h)return h;_.prototype.i=function(W){if(this.h==null){this.h=[];var q=this;this.j(function(){q.m()})}this.h.push(W)};var V=n.setTimeout;_.prototype.j=function(W){V(W,0)},_.prototype.m=function(){for(;this.h&&this.h.length;){var W=this.h;this.h=[];for(var q=0;q<W.length;++q){var ee=W[q];W[q]=null;try{ee()}catch(de){this.l(de)}}}this.h=null},_.prototype.l=function(W){this.j(function(){throw W})},b.prototype.l=function(){function W(de){return function(he){ee||(ee=!0,de.call(q,he))}}var q=this,ee=!1;return{resolve:W(this.I),reject:W(this.m)}},b.prototype.I=function(W){if(W===this)this.m(new TypeError("A Promise cannot resolve to itself"));else if(W instanceof b)this.L(W);else{e:switch(typeof W){case"object":var q=W!=null;break e;case"function":q=!0;break e;default:q=!1}q?this.F(W):this.s(W)}},b.prototype.F=function(W){var q=void 0;try{q=W.then}catch(ee){this.m(ee);return}typeof q=="function"?this.M(q,W):this.s(W)},b.prototype.m=function(W){this.v(2,W)},b.prototype.s=function(W){this.v(1,W)},b.prototype.v=function(W,q){if(this.i!=0)throw Error("Cannot settle("+W+", "+q+"): Promise already settled in state"+this.i);this.i=W,this.j=q,this.i===2&&this.K(),this.H()},b.prototype.K=function(){var W=this;V(function(){if(W.D()){var q=n.console;typeof q<"u"&&q.error(W.j)}},1)},b.prototype.D=function(){if(this.u)return!1;var W=n.CustomEvent,q=n.Event,ee=n.dispatchEvent;return typeof ee>"u"?!0:(typeof W=="function"?W=new W("unhandledrejection",{cancelable:!0}):typeof q=="function"?W=new q("unhandledrejection",{cancelable:!0}):(W=n.document.createEvent("CustomEvent"),W.initCustomEvent("unhandledrejection",!1,!0,W)),W.promise=this,W.reason=this.j,ee(W))},b.prototype.H=function(){if(this.h!=null){for(var W=0;W<this.h.length;++W)U.i(this.h[W]);this.h=null}};var U=new _;return b.prototype.L=function(W){var q=this.l();W.T(q.resolve,q.reject)},b.prototype.M=function(W,q){var ee=this.l();try{W.call(q,ee.resolve,ee.reject)}catch(de){ee.reject(de)}},b.prototype.then=function(W,q){function ee(Pe,ve){return typeof Pe=="function"?function(Be){try{de(Pe(Be))}catch(Ye){he(Ye)}}:ve}var de,he,Me=new b(function(Pe,ve){de=Pe,he=ve});return this.T(ee(W,de),ee(q,he)),Me},b.prototype.catch=function(W){return this.then(void 0,W)},b.prototype.T=function(W,q){function ee(){switch(de.i){case 1:W(de.j);break;case 2:q(de.j);break;default:throw Error("Unexpected state: "+de.i)}}var de=this;this.h==null?U.i(ee):this.h.push(ee),this.u=!0},b.resolve=$,b.reject=function(W){return new b(function(q,ee){ee(W)})},b.race=function(W){return new b(function(q,ee){for(var de=a(W),he=de.next();!he.done;he=de.next())$(he.value).T(q,ee)})},b.all=function(W){var q=a(W),ee=q.next();return ee.done?$([]):new b(function(de,he){function Me(Be){return function(Ye){Pe[Be]=Ye,ve--,ve==0&&de(Pe)}}var Pe=[],ve=0;do Pe.push(void 0),ve++,$(ee.value).T(Me(Pe.length-1),he),ee=q.next();while(!ee.done)})},b});function ue(h,b){h instanceof String&&(h+="");var _=0,$=!1,V={next:function(){if(!$&&_<h.length){var U=_++;return{value:b(U,h[U]),done:!1}}return $=!0,{done:!0,value:void 0}}};return V[Symbol.iterator]=function(){return V},V}i("Array.prototype.keys",function(h){return h||function(){return ue(this,function(b){return b})}}),i("Array.prototype.fill",function(h){return h||function(b,_,$){var V=this.length||0;for(0>_&&(_=Math.max(0,V+_)),($==null||$>V)&&($=V),$=Number($),0>$&&($=Math.max(0,V+$)),_=Number(_||0);_<$;_++)this[_]=b;return this}});function ce(h){return h||Array.prototype.fill}i("Int8Array.prototype.fill",ce),i("Uint8Array.prototype.fill",ce),i("Uint8ClampedArray.prototype.fill",ce),i("Int16Array.prototype.fill",ce),i("Uint16Array.prototype.fill",ce),i("Int32Array.prototype.fill",ce),i("Uint32Array.prototype.fill",ce),i("Float32Array.prototype.fill",ce),i("Float64Array.prototype.fill",ce),i("Object.is",function(h){return h||function(b,_){return b===_?b!==0||1/b===1/_:b!==b&&_!==_}}),i("Array.prototype.includes",function(h){return h||function(b,_){var $=this;$ instanceof String&&($=String($));var V=$.length;for(_=_||0,0>_&&(_=Math.max(_+V,0));_<V;_++){var U=$[_];if(U===b||Object.is(U,b))return!0}return!1}}),i("String.prototype.includes",function(h){return h||function(b,_){if(this==null)throw new TypeError("The 'this' value for String.prototype.includes must not be null or undefined");if(b instanceof RegExp)throw new TypeError("First argument to String.prototype.includes must not be a regular expression");return this.indexOf(b,_||0)!==-1}});var xe=this||self;function be(h,b){h=h.split(".");var _=xe;h[0]in _||typeof _.execScript>"u"||_.execScript("var "+h[0]);for(var $;h.length&&($=h.shift());)h.length||b===void 0?_[$]&&_[$]!==Object.prototype[$]?_=_[$]:_=_[$]={}:_[$]=b}function Ie(h){var b;e:{if((b=xe.navigator)&&(b=b.userAgent))break e;b=""}return b.indexOf(h)!=-1}var qe=Array.prototype.map?function(h,b){return Array.prototype.map.call(h,b,void 0)}:function(h,b){for(var _=h.length,$=Array(_),V=typeof h=="string"?h.split(""):h,U=0;U<_;U++)U in V&&($[U]=b.call(void 0,V[U],U,h));return $},je={},it=null;function qt(h){var b=h.length,_=3*b/4;_%3?_=Math.floor(_):"=.".indexOf(h[b-1])!=-1&&(_="=.".indexOf(h[b-2])!=-1?_-2:_-1);var $=new Uint8Array(_),V=0;return Zt(h,function(U){$[V++]=U}),V!==_?$.subarray(0,V):$}function Zt(h,b){function _(ee){for(;$<h.length;){var de=h.charAt($++),he=it[de];if(he!=null)return he;if(!/^[\s\xa0]*$/.test(de))throw Error("Unknown base64 encoding at char: "+de)}return ee}Uo();for(var $=0;;){var V=_(-1),U=_(0),W=_(64),q=_(64);if(q===64&&V===-1)break;b(V<<2|U>>4),W!=64&&(b(U<<4&240|W>>2),q!=64&&b(W<<6&192|q))}}function Uo(){if(!it){it={};for(var h="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789".split(""),b=["+/=","+/","-_=","-_.","-_"],_=0;5>_;_++){var $=h.concat(b[_].split(""));je[_]=$;for(var V=0;V<$.length;V++){var U=$[V];it[U]===void 0&&(it[U]=V)}}}}var fn=typeof Uint8Array<"u",ia=!(Ie("Trident")||Ie("MSIE"))&&typeof xe.btoa=="function";function sa(h){if(!ia){var b;b===void 0&&(b=0),Uo(),b=je[b];for(var _=Array(Math.floor(h.length/3)),$=b[64]||"",V=0,U=0;V<h.length-2;V+=3){var W=h[V],q=h[V+1],ee=h[V+2],de=b[W>>2];W=b[(W&3)<<4|q>>4],q=b[(q&15)<<2|ee>>6],ee=b[ee&63],_[U++]=de+W+q+ee}switch(de=0,ee=$,h.length-V){case 2:de=h[V+1],ee=b[(de&15)<<2]||$;case 1:h=h[V],_[U]=b[h>>2]+b[(h&3)<<4|de>>4]+ee+$}return _.join("")}for(b="";10240<h.length;)b+=String.fromCharCode.apply(null,h.subarray(0,10240)),h=h.subarray(10240);return b+=String.fromCharCode.apply(null,h),btoa(b)}var Mc=RegExp("[-_.]","g");function hO(h){switch(h){case"-":return"+";case"_":return"/";case".":return"=";default:return""}}function Jb(h){if(!ia)return qt(h);Mc.test(h)&&(h=h.replace(Mc,hO)),h=atob(h);for(var b=new Uint8Array(h.length),_=0;_<h.length;_++)b[_]=h.charCodeAt(_);return b}var ev;function m0(){return ev||(ev=new Uint8Array(0))}var Bc={},gO=typeof Uint8Array.prototype.slice=="function",jt=0,Cr=0;function tv(h){var b=0>h;h=Math.abs(h);var _=h>>>0;h=Math.floor((h-_)/4294967296),b&&(_=a(rv(_,h)),b=_.next().value,h=_.next().value,_=b),jt=_>>>0,Cr=h>>>0}var xO=typeof BigInt=="function";function rv(h,b){return b=~b,h?h=~h+1:b+=1,[h,b]}function ov(h,b){this.i=h>>>0,this.h=b>>>0}function nv(h){if(!h)return iv||(iv=new ov(0,0));if(!/^-?\d+$/.test(h))return null;if(16>h.length)tv(Number(h));else if(xO)h=BigInt(h),jt=Number(h&BigInt(4294967295))>>>0,Cr=Number(h>>BigInt(32)&BigInt(4294967295));else{var b=+(h[0]==="-");Cr=jt=0;for(var _=h.length,$=b,V=(_-b)%6+b;V<=_;$=V,V+=6)$=Number(h.slice($,V)),Cr*=1e6,jt=1e6*jt+$,4294967296<=jt&&(Cr+=jt/4294967296|0,jt%=4294967296);b&&(b=a(rv(jt,Cr)),h=b.next().value,b=b.next().value,jt=h,Cr=b)}return new ov(jt,Cr)}var iv;function sv(h,b){return Error("Invalid wire type: "+h+" (at position "+b+")")}function f0(){return Error("Failed to read varint, encoding is invalid.")}function av(h,b){return Error("Tried to read past the end of the data "+b+" > "+h)}function qi(){throw Error("Invalid UTF8")}function lv(h,b){return b=String.fromCharCode.apply(null,b),h==null?b:h+b}var td=void 0,h0,yO=typeof TextDecoder<"u",uv,bO=typeof TextEncoder<"u",cv;function pv(h){if(h!==Bc)throw Error("illegal external caller")}function Vc(h,b){if(pv(b),this.V=h,h!=null&&h.length===0)throw Error("ByteString should be constructed with non-empty values")}function g0(){return cv||(cv=new Vc(null,Bc))}function dv(h){pv(Bc);var b=h.V;return b=b==null||fn&&b!=null&&b instanceof Uint8Array?b:typeof b=="string"?Jb(b):null,b==null?b:h.V=b}function vO(h){if(typeof h=="string")return{buffer:Jb(h),C:!1};if(Array.isArray(h))return{buffer:new Uint8Array(h),C:!1};if(h.constructor===Uint8Array)return{buffer:h,C:!1};if(h.constructor===ArrayBuffer)return{buffer:new Uint8Array(h),C:!1};if(h.constructor===Vc)return{buffer:dv(h)||m0(),C:!0};if(h instanceof Uint8Array)return{buffer:new Uint8Array(h.buffer,h.byteOffset,h.byteLength),C:!1};throw Error("Type not convertible to a Uint8Array, expected a Uint8Array, an ArrayBuffer, a base64 encoded string, a ByteString or an Array of numbers")}function mv(h,b){this.i=null,this.m=!1,this.h=this.j=this.l=0,x0(this,h,b)}function x0(h,b,_){_=_===void 0?{}:_,h.S=_.S===void 0?!1:_.S,b&&(b=vO(b),h.i=b.buffer,h.m=b.C,h.l=0,h.j=h.i.length,h.h=h.l)}mv.prototype.reset=function(){this.h=this.l};function ji(h,b){if(h.h=b,b>h.j)throw av(h.j,b)}function Wc(h){var b=h.i,_=h.h,$=b[_++],V=$&127;if($&128&&($=b[_++],V|=($&127)<<7,$&128&&($=b[_++],V|=($&127)<<14,$&128&&($=b[_++],V|=($&127)<<21,$&128&&($=b[_++],V|=$<<28,$&128&&b[_++]&128&&b[_++]&128&&b[_++]&128&&b[_++]&128&&b[_++]&128)))))throw f0();return ji(h,_),V}function fv(h,b){if(0>b)throw Error("Tried to read a negative byte length: "+b);var _=h.h,$=_+b;if($>h.j)throw av(b,h.j-_);return h.h=$,_}var hv=[];function y0(){this.h=[]}y0.prototype.length=function(){return this.h.length},y0.prototype.end=function(){var h=this.h;return this.h=[],h};function gv(h,b,_){for(;0<_||127<b;)h.h.push(b&127|128),b=(b>>>7|_<<25)>>>0,_>>>=7;h.h.push(b)}function Xi(h,b){for(;127<b;)h.h.push(b&127|128),b>>>=7;h.h.push(b)}function b0(h,b){if(hv.length){var _=hv.pop();x0(_,h,b),h=_}else h=new mv(h,b);this.h=h,this.j=this.h.h,this.i=this.l=-1,this.setOptions(b)}b0.prototype.setOptions=function(h){h=h===void 0?{}:h,this.ca=h.ca===void 0?!1:h.ca},b0.prototype.reset=function(){this.h.reset(),this.j=this.h.h,this.i=this.l=-1};function xv(h){var b=h.h;if(b.h==b.j)return!1;h.j=h.h.h;var _=Wc(h.h)>>>0;if(b=_>>>3,_&=7,!(0<=_&&5>=_))throw sv(_,h.j);if(1>b)throw Error("Invalid field number: "+b+" (at position "+h.j+")");return h.l=b,h.i=_,!0}function rd(h){switch(h.i){case 0:if(h.i!=0)rd(h);else e:{h=h.h;for(var b=h.h,_=b+10,$=h.i;b<_;)if(($[b++]&128)===0){ji(h,b);break e}throw f0()}break;case 1:h=h.h,ji(h,h.h+8);break;case 2:h.i!=2?rd(h):(b=Wc(h.h)>>>0,h=h.h,ji(h,h.h+b));break;case 5:h=h.h,ji(h,h.h+4);break;case 3:b=h.l;do{if(!xv(h))throw Error("Unmatched start-group tag: stream EOF");if(h.i==4){if(h.l!=b)throw Error("Unmatched end-group tag");break}rd(h)}while(!0);break;default:throw sv(h.i,h.j)}}var od=[];function SO(){this.j=[],this.i=0,this.h=new y0}function aa(h,b){b.length!==0&&(h.j.push(b),h.i+=b.length)}function wO(h,b){if(b=b.R){aa(h,h.h.end());for(var _=0;_<b.length;_++)aa(h,dv(b[_])||m0())}}var hn=typeof Symbol=="function"&&typeof Symbol()=="symbol"?Symbol():void 0;function Yi(h,b){return hn?h[hn]|=b:h.A!==void 0?h.A|=b:(Object.defineProperties(h,{A:{value:b,configurable:!0,writable:!0,enumerable:!1}}),b)}function yv(h,b){hn?h[hn]&&(h[hn]&=~b):h.A!==void 0&&(h.A&=~b)}function Bt(h){var b;return hn?b=h[hn]:b=h.A,b??0}function Go(h,b){hn?h[hn]=b:h.A!==void 0?h.A=b:Object.defineProperties(h,{A:{value:b,configurable:!0,writable:!0,enumerable:!1}})}function v0(h){return Yi(h,1),h}function CO(h,b){Go(b,(h|0)&-51)}function nd(h,b){Go(b,(h|18)&-41)}var S0={};function id(h){return h!==null&&typeof h=="object"&&!Array.isArray(h)&&h.constructor===Object}var zc,bv=[];Go(bv,23),zc=Object.freeze(bv);function w0(h){if(Bt(h.o)&2)throw Error("Cannot mutate an immutable Message")}function C0(h){var b=h.length;(b=b?h[b-1]:void 0)&&id(b)?b.g=1:(b={},h.push((b.g=1,b)))}function vv(h){var b=h.i+h.G;return h.B||(h.B=h.o[b]={})}function Eo(h,b){return b===-1?null:b>=h.i?h.B?h.B[b]:void 0:h.o[b+h.G]}function Ho(h,b,_,$){w0(h),Uc(h,b,_,$)}function Uc(h,b,_,$){h.j&&(h.j=void 0),b>=h.i||$?vv(h)[b]=_:(h.o[b+h.G]=_,(h=h.B)&&b in h&&delete h[b])}function _0(h,b,_,$){var V=Eo(h,b);Array.isArray(V)||(V=zc);var U=Bt(V);if(U&1||v0(V),$)U&2||Yi(V,2),_&1||Object.freeze(V);else{$=!(_&2);var W=U&2;_&1||!W?$&&U&16&&!W&&yv(V,16):(V=v0(Array.prototype.slice.call(V)),Uc(h,b,V))}return V}function k0(h,b){var _=Eo(h,b),$=_==null?_:typeof _=="number"||_==="NaN"||_==="Infinity"||_==="-Infinity"?Number(_):void 0;return $!=null&&$!==_&&Uc(h,b,$),$}function Sv(h,b,_,$,V){h.h||(h.h={});var U=h.h[_],W=_0(h,_,3,V);if(!U){var q=W;U=[];var ee=!!(Bt(h.o)&16);W=!!(Bt(q)&2);var de=q;!V&&W&&(q=Array.prototype.slice.call(q));for(var he=W,Me=0;Me<q.length;Me++){var Pe=q[Me],ve=b,Be=!1;if(Be=Be===void 0?!1:Be,Pe=Array.isArray(Pe)?new ve(Pe):Be?new ve:void 0,Pe!==void 0){ve=Pe.o;var Ye=Be=Bt(ve);W&&(Ye|=2),ee&&(Ye|=16),Ye!=Be&&Go(ve,Ye),ve=Ye,he=he||!!(2&ve),U.push(Pe)}}return h.h[_]=U,ee=Bt(q),b=ee|33,b=he?b&-9:b|8,ee!=b&&(he=q,Object.isFrozen(he)&&(he=Array.prototype.slice.call(he)),Go(he,b),q=he),de!==q&&Uc(h,_,q),(V||$&&W)&&Yi(U,2),$&&Object.freeze(U),U}return V||(V=Object.isFrozen(U),$&&!V?Object.freeze(U):!$&&V&&(U=Array.prototype.slice.call(U),h.h[_]=U)),U}function I0(h,b,_){var $=!!(Bt(h.o)&2);if(b=Sv(h,b,_,$,$),h=_0(h,_,3,$),!($||Bt(h)&8)){for($=0;$<b.length;$++){if(_=b[$],Bt(_.o)&2){var V=Tv(_,!1);V.j=_}else V=_;_!==V&&(b[$]=V,h[$]=V.o)}Yi(h,8)}return b}function Ko(h,b,_){if(_!=null&&typeof _!="number")throw Error("Value of float/double field must be a number|null|undefined, found "+typeof _+": "+_);Ho(h,b,_)}function wv(h,b,_,$,V){w0(h);var U=Sv(h,_,b,!1,!1);return _=$??new _,h=_0(h,b,2,!1),V!=null?(U.splice(V,0,_),h.splice(V,0,_.o)):(U.push(_),h.push(_.o)),_.C()&&yv(h,8),_}function sd(h,b){return h??b}function qo(h,b,_){return _=_===void 0?0:_,sd(k0(h,b),_)}var ad;function _O(h){switch(typeof h){case"number":return isFinite(h)?h:String(h);case"object":if(h)if(Array.isArray(h)){if((Bt(h)&128)!==0)return h=Array.prototype.slice.call(h),C0(h),h}else{if(fn&&h!=null&&h instanceof Uint8Array)return sa(h);if(h instanceof Vc){var b=h.V;return b==null?"":typeof b=="string"?b:h.V=sa(b)}}}return h}function Cv(h,b,_,$){if(h!=null){if(Array.isArray(h))h=T0(h,b,_,$!==void 0);else if(id(h)){var V={},U;for(U in h)V[U]=Cv(h[U],b,_,$);h=V}else h=b(h,$);return h}}function T0(h,b,_,$){var V=Bt(h);$=$?!!(V&16):void 0,h=Array.prototype.slice.call(h);for(var U=0;U<h.length;U++)h[U]=Cv(h[U],b,_,$);return _(V,h),h}function kO(h){return h.ja===S0?h.toJSON():_O(h)}function IO(h,b){h&128&&C0(b)}function _v(h,b,_){if(_=_===void 0?nd:_,h!=null){if(fn&&h instanceof Uint8Array)return h.length?new Vc(new Uint8Array(h),Bc):g0();if(Array.isArray(h)){var $=Bt(h);return $&2?h:b&&!($&32)&&($&16||$===0)?(Go(h,$|2),h):(h=T0(h,_v,$&4?nd:_,!0),b=Bt(h),b&4&&b&2&&Object.freeze(h),h)}return h.ja===S0?Iv(h):h}}function kv(h,b,_,$,V,U,W){if(h=h.h&&h.h[_]){if($=Bt(h),$&2?$=h:(U=qe(h,Iv),nd($,U),Object.freeze(U),$=U),w0(b),W=$==null?zc:v0([]),$!=null){for(U=!!$.length,h=0;h<$.length;h++){var q=$[h];U=U&&!(Bt(q.o)&2),W[h]=q.o}U=(U?8:0)|1,h=Bt(W),(h&U)!==U&&(Object.isFrozen(W)&&(W=Array.prototype.slice.call(W)),Go(W,h|U)),b.h||(b.h={}),b.h[_]=$}else b.h&&(b.h[_]=void 0);Uc(b,_,W,V)}else Ho(b,_,_v($,U,W),V)}function Iv(h){return Bt(h.o)&2||(h=Tv(h,!0),Yi(h.o,2)),h}function Tv(h,b){var _=h.o,$=[];Yi($,16);var V=h.constructor.h;if(V&&$.push(V),V=h.B,V){$.length=_.length,$.fill(void 0,$.length,_.length);var U={};$[$.length-1]=U}(Bt(_)&128)!==0&&C0($),b=b||h.C()?nd:CO,U=h.constructor,ad=$,$=new U($),ad=void 0,h.R&&($.R=h.R.slice()),U=!!(Bt(_)&16);for(var W=V?_.length-1:_.length,q=0;q<W;q++)kv(h,$,q-h.G,_[q],!1,U,b);if(V)for(var ee in V)kv(h,$,+ee,V[ee],!0,U,b);return $}function Br(h,b,_){h==null&&(h=ad),ad=void 0;var $=this.constructor.i||0,V=0<$,U=this.constructor.h,W=!1;if(h==null){h=U?[U]:[];var q=48,ee=!0;V&&($=0,q|=128),Go(h,q)}else{if(!Array.isArray(h)||U&&U!==h[0])throw Error();var de=q=Yi(h,0);if((ee=(16&de)!==0)&&((W=(32&de)!==0)||(de|=32)),V){if(128&de)$=0;else if(0<h.length){var he=h[h.length-1];if(id(he)&&"g"in he){$=0,de|=128,delete he.g;var Me=!0,Pe;for(Pe in he){Me=!1;break}Me&&h.pop()}}}else if(128&de)throw Error();q!==de&&Go(h,de)}this.G=(U?0:-1)-$,this.h=void 0,this.o=h;e:{if(U=this.o.length,$=U-1,U&&(U=this.o[$],id(U))){this.B=U,this.i=$-this.G;break e}b!==void 0&&-1<b?(this.i=Math.max(b,$+1-this.G),this.B=void 0):this.i=Number.MAX_VALUE}if(!V&&this.B&&"g"in this.B)throw Error('Unexpected "g" flag in sparse object of message that is not a group type.');if(_){b=ee&&!W&&!0,V=this.i;var ve;for(ee=0;ee<_.length;ee++)W=_[ee],W<V?(W+=this.G,($=h[W])?Ev($,b):h[W]=zc):(ve||(ve=vv(this)),($=ve[W])?Ev($,b):ve[W]=zc)}}Br.prototype.toJSON=function(){return T0(this.o,kO,IO)},Br.prototype.C=function(){return!!(Bt(this.o)&2)};function Ev(h,b){if(Array.isArray(h)){var _=Bt(h),$=1;!b||_&2||($|=16),(_&$)!==$&&Go(h,_|$)}}Br.prototype.ja=S0,Br.prototype.toString=function(){return this.o.toString()};function Nv(h,b,_){if(_){var $={},V;for(V in _){var U=_[V],W=U.ra;W||($.J=U.xa||U.oa.W,U.ia?($.aa=Av(U.ia),W=function(q){return function(ee,de,he){return q.J(ee,de,he,q.aa)}}($)):U.ka?($.Z=Fv(U.da.P,U.ka),W=function(q){return function(ee,de,he){return q.J(ee,de,he,q.Z)}}($)):W=$.J,U.ra=W),W(b,h,U.da),$={J:$.J,aa:$.aa,Z:$.Z}}}wO(b,h)}var ld=Symbol();function Rv(h,b,_){return h[ld]||(h[ld]=function($,V){return b($,V,_)})}function $v(h){var b=h[ld];if(!b){var _=N0(h);b=function($,V){return Ov($,V,_)},h[ld]=b}return b}function TO(h){var b=h.ia;if(b)return $v(b);if(b=h.wa)return Rv(h.da.P,b,h.ka)}function EO(h){var b=TO(h),_=h.da,$=h.oa.U;return b?function(V,U){return $(V,U,_,b)}:function(V,U){return $(V,U,_)}}function Pv(h,b){var _=h[b];return typeof _=="function"&&_.length===0&&(_=_(),h[b]=_),Array.isArray(_)&&(Hc in _||Gc in _||0<_.length&&typeof _[0]=="function")?_:void 0}function Dv(h,b,_,$,V,U){b.P=h[0];var W=1;if(h.length>W&&typeof h[W]!="number"){var q=h[W++];_(b,q)}for(;W<h.length;){_=h[W++];for(var ee=W+1;ee<h.length&&typeof h[ee]!="number";)ee++;switch(q=h[W++],ee-=W,ee){case 0:$(b,_,q);break;case 1:(ee=Pv(h,W))?(W++,V(b,_,q,ee)):$(b,_,q,h[W++]);break;case 2:ee=W++,ee=Pv(h,ee),V(b,_,q,ee,h[W++]);break;case 3:U(b,_,q,h[W++],h[W++],h[W++]);break;case 4:U(b,_,q,h[W++],h[W++],h[W++],h[W++]);break;default:throw Error("unexpected number of binary field arguments: "+ee)}}return b}var ud=Symbol();function Av(h){var b=h[ud];if(!b){var _=E0(h);b=function($,V){return Lv($,V,_)},h[ud]=b}return b}function Fv(h,b){var _=h[ud];return _||(_=function($,V){return Nv($,V,b)},h[ud]=_),_}var Gc=Symbol();function NO(h,b){h.push(b)}function RO(h,b,_){h.push(b,_.W)}function $O(h,b,_,$){var V=Av($),U=E0($).P,W=_.W;h.push(b,function(q,ee,de){return W(q,ee,de,U,V)})}function PO(h,b,_,$,V,U){var W=Fv($,U),q=_.W;h.push(b,function(ee,de,he){return q(ee,de,he,$,W)})}function E0(h){var b=h[Gc];return b||(b=Dv(h,h[Gc]=[],NO,RO,$O,PO),Hc in h&&Gc in h&&(h.length=0),b)}var Hc=Symbol();function DO(h,b){h[0]=b}function AO(h,b,_,$){var V=_.U;h[b]=$?function(U,W,q){return V(U,W,q,$)}:V}function FO(h,b,_,$,V){var U=_.U,W=$v($),q=N0($).P;h[b]=function(ee,de,he){return U(ee,de,he,q,W,V)}}function OO(h,b,_,$,V,U,W){var q=_.U,ee=Rv($,V,U);h[b]=function(de,he,Me){return q(de,he,Me,$,ee,W)}}function N0(h){var b=h[Hc];return b||(b=Dv(h,h[Hc]={},DO,AO,FO,OO),Hc in h&&Gc in h&&(h.length=0),b)}function Ov(h,b,_){for(;xv(b)&&b.i!=4;){var $=b.l,V=_[$];if(!V){var U=_[0];U&&(U=U[$])&&(V=_[$]=EO(U))}if(!V||!V(b,h,$)){V=b,$=h,U=V.j,rd(V);var W=V;if(!W.ca){if(V=W.h.h-U,W.h.h=U,W=W.h,V==0)V=g0();else{if(U=fv(W,V),W.S&&W.m)V=W.i.subarray(U,U+V);else{W=W.i;var q=U;V=U+V,V=q===V?m0():gO?W.slice(q,V):new Uint8Array(W.subarray(q,V))}V=V.length==0?g0():new Vc(V,Bc)}(U=$.R)?U.push(V):$.R=[V]}}}return h}function Lv(h,b,_){for(var $=_.length,V=$%2==1,U=V?1:0;U<$;U+=2)(0,_[U+1])(b,h,_[U]);Nv(h,b,V?_[0]:void 0)}function Kc(h,b){return{U:h,W:b}}var No=Kc(function(h,b,_){if(h.i!==5)return!1;h=h.h;var $=h.i,V=h.h,U=$[V],W=$[V+1],q=$[V+2];return $=$[V+3],ji(h,h.h+4),W=(U<<0|W<<8|q<<16|$<<24)>>>0,h=2*(W>>31)+1,U=W>>>23&255,W&=8388607,Ho(b,_,U==255?W?NaN:1/0*h:U==0?h*Math.pow(2,-149)*W:h*Math.pow(2,U-150)*(W+Math.pow(2,23))),!0},function(h,b,_){if(b=k0(b,_),b!=null){Xi(h.h,8*_+5),h=h.h;var $=+b;$===0?0<1/$?jt=Cr=0:(Cr=0,jt=2147483648):isNaN($)?(Cr=0,jt=2147483647):($=(_=0>$?-2147483648:0)?-$:$,34028234663852886e22<$?(Cr=0,jt=(_|2139095040)>>>0):11754943508222875e-54>$?($=Math.round($/Math.pow(2,-149)),Cr=0,jt=(_|$)>>>0):(b=Math.floor(Math.log($)/Math.LN2),$*=Math.pow(2,-b),$=Math.round(8388608*$),16777216<=$&&++b,Cr=0,jt=(_|b+127<<23|$&8388607)>>>0)),_=jt,h.h.push(_>>>0&255),h.h.push(_>>>8&255),h.h.push(_>>>16&255),h.h.push(_>>>24&255)}}),LO=Kc(function(h,b,_){if(h.i!==0)return!1;var $=h.h,V=0,U=h=0,W=$.i,q=$.h;do{var ee=W[q++];V|=(ee&127)<<U,U+=7}while(32>U&&ee&128);for(32<U&&(h|=(ee&127)>>4),U=3;32>U&&ee&128;U+=7)ee=W[q++],h|=(ee&127)<<U;if(ji($,q),128>ee)$=V>>>0,ee=h>>>0,(h=ee&2147483648)&&($=~$+1>>>0,ee=~ee>>>0,$==0&&(ee=ee+1>>>0)),$=4294967296*ee+($>>>0);else throw f0();return Ho(b,_,h?-$:$),!0},function(h,b,_){b=Eo(b,_),b!=null&&(typeof b=="string"&&nv(b),b!=null&&(Xi(h.h,8*_),typeof b=="number"?(h=h.h,tv(b),gv(h,jt,Cr)):(_=nv(b),gv(h.h,_.i,_.h))))}),MO=Kc(function(h,b,_){return h.i!==0?!1:(Ho(b,_,Wc(h.h)),!0)},function(h,b,_){if(b=Eo(b,_),b!=null&&b!=null)if(Xi(h.h,8*_),h=h.h,_=b,0<=_)Xi(h,_);else{for(b=0;9>b;b++)h.h.push(_&127|128),_>>=7;h.h.push(1)}}),Mv=Kc(function(h,b,_){if(h.i!==2)return!1;var $=Wc(h.h)>>>0;h=h.h;var V=fv(h,$);if(h=h.i,yO){var U=h,W;(W=h0)||(W=h0=new TextDecoder("utf-8",{fatal:!0})),h=V+$,U=V===0&&h===U.length?U:U.subarray(V,h);try{var q=W.decode(U)}catch(Me){if(td===void 0){try{W.decode(new Uint8Array([128]))}catch{}try{W.decode(new Uint8Array([97])),td=!0}catch{td=!1}}throw!td&&(h0=void 0),Me}}else{q=V,$=q+$,V=[];for(var ee=null,de,he;q<$;)de=h[q++],128>de?V.push(de):224>de?q>=$?qi():(he=h[q++],194>de||(he&192)!==128?(q--,qi()):V.push((de&31)<<6|he&63)):240>de?q>=$-1?qi():(he=h[q++],(he&192)!==128||de===224&&160>he||de===237&&160<=he||((U=h[q++])&192)!==128?(q--,qi()):V.push((de&15)<<12|(he&63)<<6|U&63)):244>=de?q>=$-2?qi():(he=h[q++],(he&192)!==128||(de<<28)+(he-144)>>30!==0||((U=h[q++])&192)!==128||((W=h[q++])&192)!==128?(q--,qi()):(de=(de&7)<<18|(he&63)<<12|(U&63)<<6|W&63,de-=65536,V.push((de>>10&1023)+55296,(de&1023)+56320))):qi(),8192<=V.length&&(ee=lv(ee,V),V.length=0);q=lv(ee,V)}return Ho(b,_,q),!0},function(h,b,_){if(b=Eo(b,_),b!=null){var $=!1;if($=$===void 0?!1:$,bO){if($&&/(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])/.test(b))throw Error("Found an unpaired surrogate");b=(uv||(uv=new TextEncoder)).encode(b)}else{for(var V=0,U=new Uint8Array(3*b.length),W=0;W<b.length;W++){var q=b.charCodeAt(W);if(128>q)U[V++]=q;else{if(2048>q)U[V++]=q>>6|192;else{if(55296<=q&&57343>=q){if(56319>=q&&W<b.length){var ee=b.charCodeAt(++W);if(56320<=ee&&57343>=ee){q=1024*(q-55296)+ee-56320+65536,U[V++]=q>>18|240,U[V++]=q>>12&63|128,U[V++]=q>>6&63|128,U[V++]=q&63|128;continue}else W--}if($)throw Error("Found an unpaired surrogate");q=65533}U[V++]=q>>12|224,U[V++]=q>>6&63|128}U[V++]=q&63|128}}b=V===U.length?U:U.subarray(0,V)}Xi(h.h,8*_+2),Xi(h.h,b.length),aa(h,h.h.end()),aa(h,b)}}),Bv=Kc(function(h,b,_,$,V){if(h.i!==2)return!1;b=wv(b,_,$),_=h.h.j,$=Wc(h.h)>>>0;var U=h.h.h+$,W=U-_;if(0>=W&&(h.h.j=U,V(b,h,void 0,void 0,void 0),W=U-h.h.h),W)throw Error("Message parsing ended unexpectedly. Expected to read "+($+" bytes, instead read "+($-W)+" bytes, either the data ended unexpectedly or the message misreported its own length"));return h.h.h=U,h.h.j=_,!0},function(h,b,_,$,V){if(b=I0(b,$,_),b!=null)for($=0;$<b.length;$++){var U=h;Xi(U.h,8*_+2);var W=U.h.end();aa(U,W),W.push(U.i),U=W,V(b[$],h),W=h;var q=U.pop();for(q=W.i+W.h.length()-q;127<q;)U.push(q&127|128),q>>>=7,W.i++;U.push(q),W.i++}});function R0(h){return function(b,_){e:{if(od.length){var $=od.pop();$.setOptions(_),x0($.h,b,_),b=$}else b=new b0(b,_);try{var V=N0(h),U=Ov(new V.P,b,V);break e}finally{V=b.h,V.i=null,V.m=!1,V.l=0,V.j=0,V.h=0,V.S=!1,b.l=-1,b.i=-1,100>od.length&&od.push(b)}U=void 0}return U}}function $0(h){return function(){var b=new SO;Lv(this,b,E0(h)),aa(b,b.h.end());for(var _=new Uint8Array(b.i),$=b.j,V=$.length,U=0,W=0;W<V;W++){var q=$[W];_.set(q,U),U+=q.length}return b.j=[_],_}}function la(h){Br.call(this,h)}x(la,Br);var Vv=[la,1,MO,2,No,3,Mv,4,Mv];la.prototype.l=$0(Vv);function P0(h){Br.call(this,h,-1,BO)}x(P0,Br),P0.prototype.addClassification=function(h,b){return wv(this,1,la,h,b),this};var BO=[1],VO=R0([P0,1,Bv,Vv]);function qc(h){Br.call(this,h)}x(qc,Br);var Wv=[qc,1,No,2,No,3,No,4,No,5,No];qc.prototype.l=$0(Wv);function zv(h){Br.call(this,h,-1,WO)}x(zv,Br);var WO=[1],zO=R0([zv,1,Bv,Wv]);function cd(h){Br.call(this,h)}x(cd,Br);var Uv=[cd,1,No,2,No,3,No,4,No,5,No,6,LO],UO=R0(Uv);cd.prototype.l=$0(Uv);function Gv(h,b,_){if(_=h.createShader(_===0?h.VERTEX_SHADER:h.FRAGMENT_SHADER),h.shaderSource(_,b),h.compileShader(_),!h.getShaderParameter(_,h.COMPILE_STATUS))throw Error(`Could not compile WebGL shader.

`+h.getShaderInfoLog(_));return _}function GO(h){return I0(h,la,1).map(function(b){var _=Eo(b,1);return{index:_??0,qa:qo(b,2),label:Eo(b,3)!=null?sd(Eo(b,3),""):void 0,displayName:Eo(b,4)!=null?sd(Eo(b,4),""):void 0}})}function HO(h){return{x:qo(h,1),y:qo(h,2),z:qo(h,3),visibility:k0(h,4)!=null?qo(h,4):void 0}}function D0(h){return I0(zO(h),qc,1).map(HO)}function A0(h,b){this.i=h,this.h=b,this.m=0}function Hv(h,b,_){return KO(h,b),typeof h.h.canvas.transferToImageBitmap=="function"?Promise.resolve(h.h.canvas.transferToImageBitmap()):_?Promise.resolve(h.h.canvas):typeof createImageBitmap=="function"?createImageBitmap(h.h.canvas):(h.j===void 0&&(h.j=document.createElement("canvas")),new Promise(function($){h.j.height=h.h.canvas.height,h.j.width=h.h.canvas.width,h.j.getContext("2d",{}).drawImage(h.h.canvas,0,0,h.h.canvas.width,h.h.canvas.height),$(h.j)}))}function KO(h,b){var _=h.h;if(h.s===void 0){var $=Gv(_,`
  attribute vec2 aVertex;
  attribute vec2 aTex;
  varying vec2 vTex;
  void main(void) {
    gl_Position = vec4(aVertex, 0.0, 1.0);
    vTex = aTex;
  }`,0),V=Gv(_,`
  precision mediump float;
  varying vec2 vTex;
  uniform sampler2D sampler0;
  void main(){
    gl_FragColor = texture2D(sampler0, vTex);
  }`,1),U=_.createProgram();if(_.attachShader(U,$),_.attachShader(U,V),_.linkProgram(U),!_.getProgramParameter(U,_.LINK_STATUS))throw Error(`Could not compile WebGL program.

`+_.getProgramInfoLog(U));$=h.s=U,_.useProgram($),V=_.getUniformLocation($,"sampler0"),h.l={O:_.getAttribLocation($,"aVertex"),N:_.getAttribLocation($,"aTex"),ya:V},h.v=_.createBuffer(),_.bindBuffer(_.ARRAY_BUFFER,h.v),_.enableVertexAttribArray(h.l.O),_.vertexAttribPointer(h.l.O,2,_.FLOAT,!1,0,0),_.bufferData(_.ARRAY_BUFFER,new Float32Array([-1,-1,-1,1,1,1,1,-1]),_.STATIC_DRAW),_.bindBuffer(_.ARRAY_BUFFER,null),h.u=_.createBuffer(),_.bindBuffer(_.ARRAY_BUFFER,h.u),_.enableVertexAttribArray(h.l.N),_.vertexAttribPointer(h.l.N,2,_.FLOAT,!1,0,0),_.bufferData(_.ARRAY_BUFFER,new Float32Array([0,1,0,0,1,0,1,1]),_.STATIC_DRAW),_.bindBuffer(_.ARRAY_BUFFER,null),_.uniform1i(V,0)}$=h.l,_.useProgram(h.s),_.canvas.width=b.width,_.canvas.height=b.height,_.viewport(0,0,b.width,b.height),_.activeTexture(_.TEXTURE0),h.i.bindTexture2d(b.glName),_.enableVertexAttribArray($.O),_.bindBuffer(_.ARRAY_BUFFER,h.v),_.vertexAttribPointer($.O,2,_.FLOAT,!1,0,0),_.enableVertexAttribArray($.N),_.bindBuffer(_.ARRAY_BUFFER,h.u),_.vertexAttribPointer($.N,2,_.FLOAT,!1,0,0),_.bindFramebuffer(_.DRAW_FRAMEBUFFER?_.DRAW_FRAMEBUFFER:_.FRAMEBUFFER,null),_.clearColor(0,0,0,0),_.clear(_.COLOR_BUFFER_BIT),_.colorMask(!0,!0,!0,!0),_.drawArrays(_.TRIANGLE_FAN,0,4),_.disableVertexAttribArray($.O),_.disableVertexAttribArray($.N),_.bindBuffer(_.ARRAY_BUFFER,null),h.i.bindTexture2d(0)}function qO(h){this.h=h}var jO=new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11]);function XO(h,b){return b+h}function Kv(h,b){window[h]=b}function YO(h){var b=document.createElement("script");return b.setAttribute("src",h),b.setAttribute("crossorigin","anonymous"),new Promise(function(_){b.addEventListener("load",function(){_()},!1),b.addEventListener("error",function(){_()},!1),document.body.appendChild(b)})}function QO(){return J(function(h){switch(h.h){case 1:return h.s=2,N(h,WebAssembly.instantiate(jO),4);case 4:h.h=3,h.s=0;break;case 2:return h.s=0,h.l=null,h.return(!1);case 3:return h.return(!0)}})}function F0(h){if(this.h=h,this.listeners={},this.l={},this.L={},this.s={},this.v={},this.M=this.u=this.ga=!0,this.I=Promise.resolve(),this.fa="",this.D={},this.locateFile=h&&h.locateFile||XO,typeof window=="object")var b=window.location.pathname.toString().substring(0,window.location.pathname.toString().lastIndexOf("/"))+"/";else if(typeof location<"u")b=location.pathname.toString().substring(0,location.pathname.toString().lastIndexOf("/"))+"/";else throw Error("solutions can only be loaded on a web page or in a web worker");if(this.ha=b,h.options){b=a(Object.keys(h.options));for(var _=b.next();!_.done;_=b.next()){_=_.value;var $=h.options[_].default;$!==void 0&&(this.l[_]=typeof $=="function"?$():$)}}}r=F0.prototype,r.close=function(){return this.j&&this.j.delete(),Promise.resolve()};function ZO(h){var b,_,$,V,U,W,q,ee,de,he,Me;return J(function(Pe){switch(Pe.h){case 1:return h.ga?(b=h.h.files===void 0?[]:typeof h.h.files=="function"?h.h.files(h.l):h.h.files,N(Pe,QO(),2)):Pe.return();case 2:if(_=Pe.i,typeof window=="object")return Kv("createMediapipeSolutionsWasm",{locateFile:h.locateFile}),Kv("createMediapipeSolutionsPackedAssets",{locateFile:h.locateFile}),W=b.filter(function(ve){return ve.data!==void 0}),q=b.filter(function(ve){return ve.data===void 0}),ee=Promise.all(W.map(function(ve){var Be=pd(h,ve.url);if(ve.path!==void 0){var Ye=ve.path;Be=Be.then(function(Et){return h.overrideFile(Ye,Et),Promise.resolve(Et)})}return Be})),de=Promise.all(q.map(function(ve){return ve.simd===void 0||ve.simd&&_||!ve.simd&&!_?YO(h.locateFile(ve.url,h.ha)):Promise.resolve()})).then(function(){var ve,Be,Ye;return J(function(Et){if(Et.h==1)return ve=window.createMediapipeSolutionsWasm,Be=window.createMediapipeSolutionsPackedAssets,Ye=h,N(Et,ve(Be),2);Ye.i=Et.i,Et.h=0})}),he=function(){return J(function(ve){return h.h.graph&&h.h.graph.url?ve=N(ve,pd(h,h.h.graph.url),0):(ve.h=0,ve=void 0),ve})}(),N(Pe,Promise.all([de,ee,he]),7);if(typeof importScripts!="function")throw Error("solutions can only be loaded on a web page or in a web worker");return $=b.filter(function(ve){return ve.simd===void 0||ve.simd&&_||!ve.simd&&!_}).map(function(ve){return h.locateFile(ve.url,h.ha)}),importScripts.apply(null,l($)),V=h,N(Pe,createMediapipeSolutionsWasm(Module),6);case 6:V.i=Pe.i,h.m=new OffscreenCanvas(1,1),h.i.canvas=h.m,U=h.i.GL.createContext(h.m,{antialias:!1,alpha:!1,va:typeof WebGL2RenderingContext<"u"?2:1}),h.i.GL.makeContextCurrent(U),Pe.h=4;break;case 7:if(h.m=document.createElement("canvas"),Me=h.m.getContext("webgl2",{}),!Me&&(Me=h.m.getContext("webgl",{}),!Me))return alert("Failed to create WebGL canvas context when passing video frame."),Pe.return();h.K=Me,h.i.canvas=h.m,h.i.createContext(h.m,!0,!0,{});case 4:h.j=new h.i.SolutionWasm,h.ga=!1,Pe.h=0}})}function JO(h){var b,_,$,V,U,W,q,ee;return J(function(de){if(de.h==1){if(h.h.graph&&h.h.graph.url&&h.fa===h.h.graph.url)return de.return();if(h.u=!0,!h.h.graph||!h.h.graph.url){de.h=2;return}return h.fa=h.h.graph.url,N(de,pd(h,h.h.graph.url),3)}for(de.h!=2&&(b=de.i,h.j.loadGraph(b)),_=a(Object.keys(h.D)),$=_.next();!$.done;$=_.next())V=$.value,h.j.overrideFile(V,h.D[V]);if(h.D={},h.h.listeners)for(U=a(h.h.listeners),W=U.next();!W.done;W=U.next())q=W.value,oL(h,q);ee=h.l,h.l={},h.setOptions(ee),de.h=0})}r.reset=function(){var h=this;return J(function(b){h.j&&(h.j.reset(),h.s={},h.v={}),b.h=0})},r.setOptions=function(h,b){var _=this;if(b=b||this.h.options){for(var $=[],V=[],U={},W=a(Object.keys(h)),q=W.next();!q.done;U={X:U.X,Y:U.Y},q=W.next())if(q=q.value,!(q in this.l&&this.l[q]===h[q])){this.l[q]=h[q];var ee=b[q];ee!==void 0&&(ee.onChange&&(U.X=ee.onChange,U.Y=h[q],$.push(function(de){return function(){var he;return J(function(Me){if(Me.h==1)return N(Me,de.X(de.Y),2);he=Me.i,he===!0&&(_.u=!0),Me.h=0})}}(U))),ee.graphOptionXref&&(q=Object.assign({},{calculatorName:"",calculatorIndex:0},ee.graphOptionXref,{valueNumber:ee.type===1?h[q]:0,valueBoolean:ee.type===0?h[q]:!1,valueString:ee.type===2?h[q]:""}),V.push(q)))}($.length!==0||V.length!==0)&&(this.u=!0,this.H=(this.H===void 0?[]:this.H).concat(V),this.F=(this.F===void 0?[]:this.F).concat($))}};function eL(h){var b,_,$,V,U,W,q;return J(function(ee){switch(ee.h){case 1:if(!h.u)return ee.return();if(!h.F){ee.h=2;break}b=a(h.F),_=b.next();case 3:if(_.done){ee.h=5;break}return $=_.value,N(ee,$(),4);case 4:_=b.next(),ee.h=3;break;case 5:h.F=void 0;case 2:if(h.H){for(V=new h.i.GraphOptionChangeRequestList,U=a(h.H),W=U.next();!W.done;W=U.next())q=W.value,V.push_back(q);h.j.changeOptions(V),V.delete(),h.H=void 0}h.u=!1,ee.h=0}})}r.initialize=function(){var h=this;return J(function(b){return b.h==1?N(b,ZO(h),2):b.h!=3?N(b,JO(h),3):N(b,eL(h),0)})};function pd(h,b){var _,$;return J(function(V){return b in h.L?V.return(h.L[b]):(_=h.locateFile(b,""),$=fetch(_).then(function(U){return U.arrayBuffer()}),h.L[b]=$,V.return($))})}r.overrideFile=function(h,b){this.j?this.j.overrideFile(h,b):this.D[h]=b},r.clearOverriddenFiles=function(){this.D={},this.j&&this.j.clearOverriddenFiles()},r.send=function(h,b){var _=this,$,V,U,W,q,ee,de,he,Me;return J(function(Pe){switch(Pe.h){case 1:return _.h.inputs?($=1e3*(b??performance.now()),N(Pe,_.I,2)):Pe.return();case 2:return N(Pe,_.initialize(),3);case 3:for(V=new _.i.PacketDataList,U=a(Object.keys(h)),W=U.next();!W.done;W=U.next())if(q=W.value,ee=_.h.inputs[q]){e:{var ve=h[q];switch(ee.type){case"video":var Be=_.s[ee.stream];if(Be||(Be=new A0(_.i,_.K),_.s[ee.stream]=Be),Be.m===0&&(Be.m=Be.i.createTexture()),typeof HTMLVideoElement<"u"&&ve instanceof HTMLVideoElement)var Ye=ve.videoWidth,Et=ve.videoHeight;else typeof HTMLImageElement<"u"&&ve instanceof HTMLImageElement?(Ye=ve.naturalWidth,Et=ve.naturalHeight):(Ye=ve.width,Et=ve.height);Et={glName:Be.m,width:Ye,height:Et},Ye=Be.h,Ye.canvas.width=Et.width,Ye.canvas.height=Et.height,Ye.activeTexture(Ye.TEXTURE0),Be.i.bindTexture2d(Be.m),Ye.texImage2D(Ye.TEXTURE_2D,0,Ye.RGBA,Ye.RGBA,Ye.UNSIGNED_BYTE,ve),Be.i.bindTexture2d(0),Be=Et;break e;case"detections":for(Be=_.s[ee.stream],Be||(Be=new qO(_.i),_.s[ee.stream]=Be),Be.data||(Be.data=new Be.h.DetectionListData),Be.data.reset(ve.length),Et=0;Et<ve.length;++Et){Ye=ve[Et];var Ct=Be.data,ir=Ct.setBoundingBox,ho=Et,Vr=Ye.la,ut=new cd;if(Ko(ut,1,Vr.sa),Ko(ut,2,Vr.ta),Ko(ut,3,Vr.height),Ko(ut,4,Vr.width),Ko(ut,5,Vr.rotation),Ho(ut,6,Vr.pa),Vr=ut.l(),ir.call(Ct,ho,Vr),Ye.ea)for(Ct=0;Ct<Ye.ea.length;++Ct){ut=Ye.ea[Ct],ir=Be.data,ho=ir.addNormalizedLandmark,Vr=Et,ut=Object.assign({},ut,{visibility:ut.visibility?ut.visibility:0});var sr=new qc;Ko(sr,1,ut.x),Ko(sr,2,ut.y),Ko(sr,3,ut.z),ut.visibility&&Ko(sr,4,ut.visibility),ut=sr.l(),ho.call(ir,Vr,ut)}if(Ye.ba)for(Ct=0;Ct<Ye.ba.length;++Ct)ir=Be.data,ho=ir.addClassification,Vr=Et,ut=Ye.ba[Ct],sr=new la,Ko(sr,2,ut.qa),ut.index&&Ho(sr,1,ut.index),ut.label&&Ho(sr,3,ut.label),ut.displayName&&Ho(sr,4,ut.displayName),ut=sr.l(),ho.call(ir,Vr,ut)}Be=Be.data;break e;default:Be={}}}switch(de=Be,he=ee.stream,ee.type){case"video":V.pushTexture2d(Object.assign({},de,{stream:he,timestamp:$}));break;case"detections":Me=de,Me.stream=he,Me.timestamp=$,V.pushDetectionList(Me);break;default:throw Error("Unknown input config type: '"+ee.type+"'")}}return _.j.send(V),N(Pe,_.I,4);case 4:V.delete(),Pe.h=0}})};function tL(h,b,_){var $,V,U,W,q,ee,de,he,Me,Pe,ve,Be,Ye,Et;return J(function(Ct){switch(Ct.h){case 1:if(!_)return Ct.return(b);for($={},V=0,U=a(Object.keys(_)),W=U.next();!W.done;W=U.next())q=W.value,ee=_[q],typeof ee!="string"&&ee.type==="texture"&&b[ee.stream]!==void 0&&++V;1<V&&(h.M=!1),de=a(Object.keys(_)),W=de.next();case 2:if(W.done){Ct.h=4;break}if(he=W.value,Me=_[he],typeof Me=="string")return Ye=$,Et=he,N(Ct,rL(h,he,b[Me]),14);if(Pe=b[Me.stream],Me.type==="detection_list"){if(Pe){for(var ir=Pe.getRectList(),ho=Pe.getLandmarksList(),Vr=Pe.getClassificationsList(),ut=[],sr=0;sr<ir.size();++sr){var Wn=UO(ir.get(sr)),nL=qo(Wn,1),iL=qo(Wn,2),sL=qo(Wn,3),aL=qo(Wn,4),lL=qo(Wn,5,0),dd=void 0;dd=dd===void 0?0:dd,Wn={la:{sa:nL,ta:iL,height:sL,width:aL,rotation:lL,pa:sd(Eo(Wn,6),dd)},ea:D0(ho.get(sr)),ba:GO(VO(Vr.get(sr)))},ut.push(Wn)}ir=ut}else ir=[];$[he]=ir,Ct.h=7;break}if(Me.type==="proto_list"){if(Pe){for(ir=Array(Pe.size()),ho=0;ho<Pe.size();ho++)ir[ho]=Pe.get(ho);Pe.delete()}else ir=[];$[he]=ir,Ct.h=7;break}if(Pe===void 0){Ct.h=3;break}if(Me.type==="float_list"){$[he]=Pe,Ct.h=7;break}if(Me.type==="proto"){$[he]=Pe,Ct.h=7;break}if(Me.type!=="texture")throw Error("Unknown output config type: '"+Me.type+"'");return ve=h.v[he],ve||(ve=new A0(h.i,h.K),h.v[he]=ve),N(Ct,Hv(ve,Pe,h.M),13);case 13:Be=Ct.i,$[he]=Be;case 7:Me.transform&&$[he]&&($[he]=Me.transform($[he])),Ct.h=3;break;case 14:Ye[Et]=Ct.i;case 3:W=de.next(),Ct.h=2;break;case 4:return Ct.return($)}})}function rL(h,b,_){var $;return J(function(V){return typeof _=="number"||_ instanceof Uint8Array||_ instanceof h.i.Uint8BlobList?V.return(_):_ instanceof h.i.Texture2dDataOut?($=h.v[b],$||($=new A0(h.i,h.K),h.v[b]=$),V.return(Hv($,_,h.M))):V.return(void 0)})}function oL(h,b){for(var _=b.name||"$",$=[].concat(l(b.wants)),V=new h.i.StringList,U=a(b.wants),W=U.next();!W.done;W=U.next())V.push_back(W.value);U=h.i.PacketListener.implement({onResults:function(q){for(var ee={},de=0;de<b.wants.length;++de)ee[$[de]]=q.get(de);var he=h.listeners[_];he&&(h.I=tL(h,ee,b.outs).then(function(Me){Me=he(Me);for(var Pe=0;Pe<b.wants.length;++Pe){var ve=ee[$[Pe]];typeof ve=="object"&&ve.hasOwnProperty&&ve.hasOwnProperty("delete")&&ve.delete()}Me&&(h.I=Me)}))}}),h.j.attachMultiListener(V,U),V.delete()}r.onResults=function(h,b){this.listeners[b||"$"]=h},be("Solution",F0),be("OptionType",{BOOL:0,NUMBER:1,ua:2,0:"BOOL",1:"NUMBER",2:"STRING"});function qv(h){switch(h===void 0&&(h=0),h){case 1:return"pose_landmark_full.tflite";case 2:return"pose_landmark_heavy.tflite";default:return"pose_landmark_lite.tflite"}}function jv(h){var b=this;h=h||{},this.h=new F0({locateFile:h.locateFile,files:function(_){return[{url:"pose_solution_packed_assets_loader.js"},{simd:!1,url:"pose_solution_wasm_bin.js"},{simd:!0,url:"pose_solution_simd_wasm_bin.js"},{data:!0,url:qv(_.modelComplexity)}]},graph:{url:"pose_web.binarypb"},listeners:[{wants:["pose_landmarks","world_landmarks","segmentation_mask","image_transformed"],outs:{image:{type:"texture",stream:"image_transformed"},poseLandmarks:{type:"proto",stream:"pose_landmarks",transform:D0},poseWorldLandmarks:{type:"proto",stream:"world_landmarks",transform:D0},segmentationMask:{type:"texture",stream:"segmentation_mask"}}}],inputs:{image:{type:"video",stream:"input_frames_gpu"}},options:{useCpuInference:{type:0,graphOptionXref:{calculatorType:"InferenceCalculator",fieldName:"use_cpu_inference"},default:typeof window!="object"||window.navigator===void 0?!1:"iPad Simulator;iPhone Simulator;iPod Simulator;iPad;iPhone;iPod".split(";").includes(navigator.platform)||navigator.userAgent.includes("Mac")&&"ontouchend"in document},selfieMode:{type:0,graphOptionXref:{calculatorType:"GlScalerCalculator",calculatorIndex:1,fieldName:"flip_horizontal"}},modelComplexity:{type:1,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculatorModelComplexity",fieldName:"int_value"},onChange:function(_){var $,V,U;return J(function(W){return W.h==1?($=qv(_),V="third_party/mediapipe/modules/pose_landmark/"+$,N(W,pd(b.h,$),2)):(U=W.i,b.h.overrideFile(V,U),W.return(!0))})}},smoothLandmarks:{type:0,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculatorSmoothLandmarks",fieldName:"bool_value"}},enableSegmentation:{type:0,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculatorEnableSegmentation",fieldName:"bool_value"}},smoothSegmentation:{type:0,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculatorSmoothSegmentation",fieldName:"bool_value"}},minDetectionConfidence:{type:1,graphOptionXref:{calculatorType:"TensorsToDetectionsCalculator",calculatorName:"poselandmarkgpu__posedetectiongpu__TensorsToDetectionsCalculator",fieldName:"min_score_thresh"}},minTrackingConfidence:{type:1,graphOptionXref:{calculatorType:"ThresholdingCalculator",calculatorName:"poselandmarkgpu__poselandmarkbyroigpu__tensorstoposelandmarksandsegmentation__ThresholdingCalculator",fieldName:"threshold"}}}})}r=jv.prototype,r.reset=function(){this.h.reset()},r.close=function(){return this.h.close(),Promise.resolve()},r.onResults=function(h){this.h.onResults(h)},r.initialize=function(){var h=this;return J(function(b){return N(b,h.h.initialize(),0)})},r.send=function(h,b){var _=this;return J(function($){return N($,_.h.send(h,b),0)})},r.setOptions=function(h){this.h.setOptions(h)},be("Pose",jv),be("POSE_CONNECTIONS",[[0,1],[1,2],[2,3],[3,7],[0,4],[4,5],[5,6],[6,8],[9,10],[11,12],[11,13],[13,15],[15,17],[15,19],[15,21],[17,19],[12,14],[14,16],[16,18],[16,20],[16,22],[18,20],[11,23],[12,24],[23,24],[23,25],[24,26],[25,27],[26,28],[27,29],[28,30],[29,31],[30,32],[27,31],[28,32]]),be("POSE_LANDMARKS",{NOSE:0,LEFT_EYE_INNER:1,LEFT_EYE:2,LEFT_EYE_OUTER:3,RIGHT_EYE_INNER:4,RIGHT_EYE:5,RIGHT_EYE_OUTER:6,LEFT_EAR:7,RIGHT_EAR:8,LEFT_RIGHT:9,RIGHT_LEFT:10,LEFT_SHOULDER:11,RIGHT_SHOULDER:12,LEFT_ELBOW:13,RIGHT_ELBOW:14,LEFT_WRIST:15,RIGHT_WRIST:16,LEFT_PINKY:17,RIGHT_PINKY:18,LEFT_INDEX:19,RIGHT_INDEX:20,LEFT_THUMB:21,RIGHT_THUMB:22,LEFT_HIP:23,RIGHT_HIP:24,LEFT_KNEE:25,RIGHT_KNEE:26,LEFT_ANKLE:27,RIGHT_ANKLE:28,LEFT_HEEL:29,RIGHT_HEEL:30,LEFT_FOOT_INDEX:31,RIGHT_FOOT_INDEX:32}),be("POSE_LANDMARKS_LEFT",{LEFT_EYE_INNER:1,LEFT_EYE:2,LEFT_EYE_OUTER:3,LEFT_EAR:7,LEFT_RIGHT:9,LEFT_SHOULDER:11,LEFT_ELBOW:13,LEFT_WRIST:15,LEFT_PINKY:17,LEFT_INDEX:19,LEFT_THUMB:21,LEFT_HIP:23,LEFT_KNEE:25,LEFT_ANKLE:27,LEFT_HEEL:29,LEFT_FOOT_INDEX:31}),be("POSE_LANDMARKS_RIGHT",{RIGHT_EYE_INNER:4,RIGHT_EYE:5,RIGHT_EYE_OUTER:6,RIGHT_EAR:8,RIGHT_LEFT:10,RIGHT_SHOULDER:12,RIGHT_ELBOW:14,RIGHT_WRIST:16,RIGHT_PINKY:18,RIGHT_INDEX:20,RIGHT_THUMB:22,RIGHT_HIP:24,RIGHT_KNEE:26,RIGHT_ANKLE:28,RIGHT_HEEL:30,RIGHT_FOOT_INDEX:32}),be("POSE_LANDMARKS_NEUTRAL",{NOSE:0}),be("VERSION","0.5.1675469404")}).call(ES)});var YS=io((Ioe,XS)=>{"use strict";XS.exports=kt;var So=null;try{So=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}function kt(r,t,e){this.low=r|0,this.high=t|0,this.unsigned=!!e}kt.prototype.__isLong__;Object.defineProperty(kt.prototype,"__isLong__",{value:!0});function Gr(r){return(r&&r.__isLong__)===!0}kt.isLong=Gr;var VS={},WS={};function ys(r,t){var e,o,n;return t?(r>>>=0,(n=0<=r&&r<256)&&(o=WS[r],o)?o:(e=It(r,(r|0)<0?-1:0,!0),n&&(WS[r]=e),e)):(r|=0,(n=-128<=r&&r<128)&&(o=VS[r],o)?o:(e=It(r,r<0?-1:0,!1),n&&(VS[r]=e),e))}kt.fromInt=ys;function wo(r,t){if(isNaN(r))return t?xs:Co;if(t){if(r<0)return xs;if(r>=HS)return jS}else{if(r<=-US)return Ur;if(r+1>=US)return qS}return r<0?wo(-r,t).neg():It(r%Wu|0,r/Wu|0,t)}kt.fromNumber=wo;function It(r,t,e){return new kt(r,t,e)}kt.fromBits=It;var lm=Math.pow;function ty(r,t,e){if(r.length===0)throw Error("empty string");if(r==="NaN"||r==="Infinity"||r==="+Infinity"||r==="-Infinity")return Co;if(typeof t=="number"?(e=t,t=!1):t=!!t,e=e||10,e<2||36<e)throw RangeError("radix");var o;if((o=r.indexOf("-"))>0)throw Error("interior hyphen");if(o===0)return ty(r.substring(1),t,e).neg();for(var n=wo(lm(e,8)),i=Co,s=0;s<r.length;s+=8){var a=Math.min(8,r.length-s),l=parseInt(r.substring(s,s+a),e);if(a<8){var u=wo(lm(e,a));i=i.mul(u).add(wo(l))}else i=i.mul(n),i=i.add(wo(l))}return i.unsigned=t,i}kt.fromString=ty;function Do(r,t){return typeof r=="number"?wo(r,t):typeof r=="string"?ty(r,t):It(r.low,r.high,typeof t=="boolean"?t:r.unsigned)}kt.fromValue=Do;var zS=65536,ZB=1<<24,Wu=zS*zS,HS=Wu*Wu,US=HS/2,GS=ys(ZB),Co=ys(0);kt.ZERO=Co;var xs=ys(0,!0);kt.UZERO=xs;var Vu=ys(1);kt.ONE=Vu;var KS=ys(1,!0);kt.UONE=KS;var ey=ys(-1);kt.NEG_ONE=ey;var qS=It(-1,2147483647,!1);kt.MAX_VALUE=qS;var jS=It(-1,-1,!0);kt.MAX_UNSIGNED_VALUE=jS;var Ur=It(0,-2147483648,!1);kt.MIN_VALUE=Ur;var ge=kt.prototype;ge.toInt=function(){return this.unsigned?this.low>>>0:this.low};ge.toNumber=function(){return this.unsigned?(this.high>>>0)*Wu+(this.low>>>0):this.high*Wu+(this.low>>>0)};ge.toString=function(t){if(t=t||10,t<2||36<t)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(Ur)){var e=wo(t),o=this.div(e),n=o.mul(e).sub(this);return o.toString(t)+n.toInt().toString(t)}else return"-"+this.neg().toString(t);for(var i=wo(lm(t,6),this.unsigned),s=this,a="";;){var l=s.div(i),u=s.sub(l.mul(i)).toInt()>>>0,c=u.toString(t);if(s=l,s.isZero())return c+a;for(;c.length<6;)c="0"+c;a=""+c+a}};ge.getHighBits=function(){return this.high};ge.getHighBitsUnsigned=function(){return this.high>>>0};ge.getLowBits=function(){return this.low};ge.getLowBitsUnsigned=function(){return this.low>>>0};ge.getNumBitsAbs=function(){if(this.isNegative())return this.eq(Ur)?64:this.neg().getNumBitsAbs();for(var t=this.high!=0?this.high:this.low,e=31;e>0&&(t&1<<e)==0;e--);return this.high!=0?e+33:e+1};ge.isZero=function(){return this.high===0&&this.low===0};ge.eqz=ge.isZero;ge.isNegative=function(){return!this.unsigned&&this.high<0};ge.isPositive=function(){return this.unsigned||this.high>=0};ge.isOdd=function(){return(this.low&1)===1};ge.isEven=function(){return(this.low&1)===0};ge.equals=function(t){return Gr(t)||(t=Do(t)),this.unsigned!==t.unsigned&&this.high>>>31===1&&t.high>>>31===1?!1:this.high===t.high&&this.low===t.low};ge.eq=ge.equals;ge.notEquals=function(t){return!this.eq(t)};ge.neq=ge.notEquals;ge.ne=ge.notEquals;ge.lessThan=function(t){return this.comp(t)<0};ge.lt=ge.lessThan;ge.lessThanOrEqual=function(t){return this.comp(t)<=0};ge.lte=ge.lessThanOrEqual;ge.le=ge.lessThanOrEqual;ge.greaterThan=function(t){return this.comp(t)>0};ge.gt=ge.greaterThan;ge.greaterThanOrEqual=function(t){return this.comp(t)>=0};ge.gte=ge.greaterThanOrEqual;ge.ge=ge.greaterThanOrEqual;ge.compare=function(t){if(Gr(t)||(t=Do(t)),this.eq(t))return 0;var e=this.isNegative(),o=t.isNegative();return e&&!o?-1:!e&&o?1:this.unsigned?t.high>>>0>this.high>>>0||t.high===this.high&&t.low>>>0>this.low>>>0?-1:1:this.sub(t).isNegative()?-1:1};ge.comp=ge.compare;ge.negate=function(){return!this.unsigned&&this.eq(Ur)?Ur:this.not().add(Vu)};ge.neg=ge.negate;ge.add=function(t){Gr(t)||(t=Do(t));var e=this.high>>>16,o=this.high&65535,n=this.low>>>16,i=this.low&65535,s=t.high>>>16,a=t.high&65535,l=t.low>>>16,u=t.low&65535,c=0,p=0,d=0,m=0;return m+=i+u,d+=m>>>16,m&=65535,d+=n+l,p+=d>>>16,d&=65535,p+=o+a,c+=p>>>16,p&=65535,c+=e+s,c&=65535,It(d<<16|m,c<<16|p,this.unsigned)};ge.subtract=function(t){return Gr(t)||(t=Do(t)),this.add(t.neg())};ge.sub=ge.subtract;ge.multiply=function(t){if(this.isZero())return Co;if(Gr(t)||(t=Do(t)),So){var e=So.mul(this.low,this.high,t.low,t.high);return It(e,So.get_high(),this.unsigned)}if(t.isZero())return Co;if(this.eq(Ur))return t.isOdd()?Ur:Co;if(t.eq(Ur))return this.isOdd()?Ur:Co;if(this.isNegative())return t.isNegative()?this.neg().mul(t.neg()):this.neg().mul(t).neg();if(t.isNegative())return this.mul(t.neg()).neg();if(this.lt(GS)&&t.lt(GS))return wo(this.toNumber()*t.toNumber(),this.unsigned);var o=this.high>>>16,n=this.high&65535,i=this.low>>>16,s=this.low&65535,a=t.high>>>16,l=t.high&65535,u=t.low>>>16,c=t.low&65535,p=0,d=0,m=0,f=0;return f+=s*c,m+=f>>>16,f&=65535,m+=i*c,d+=m>>>16,m&=65535,m+=s*u,d+=m>>>16,m&=65535,d+=n*c,p+=d>>>16,d&=65535,d+=i*u,p+=d>>>16,d&=65535,d+=s*l,p+=d>>>16,d&=65535,p+=o*c+n*u+i*l+s*a,p&=65535,It(m<<16|f,p<<16|d,this.unsigned)};ge.mul=ge.multiply;ge.divide=function(t){if(Gr(t)||(t=Do(t)),t.isZero())throw Error("division by zero");if(So){if(!this.unsigned&&this.high===-2147483648&&t.low===-1&&t.high===-1)return this;var e=(this.unsigned?So.div_u:So.div_s)(this.low,this.high,t.low,t.high);return It(e,So.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?xs:Co;var o,n,i;if(this.unsigned){if(t.unsigned||(t=t.toUnsigned()),t.gt(this))return xs;if(t.gt(this.shru(1)))return KS;i=xs}else{if(this.eq(Ur)){if(t.eq(Vu)||t.eq(ey))return Ur;if(t.eq(Ur))return Vu;var s=this.shr(1);return o=s.div(t).shl(1),o.eq(Co)?t.isNegative()?Vu:ey:(n=this.sub(t.mul(o)),i=o.add(n.div(t)),i)}else if(t.eq(Ur))return this.unsigned?xs:Co;if(this.isNegative())return t.isNegative()?this.neg().div(t.neg()):this.neg().div(t).neg();if(t.isNegative())return this.div(t.neg()).neg();i=Co}for(n=this;n.gte(t);){o=Math.max(1,Math.floor(n.toNumber()/t.toNumber()));for(var a=Math.ceil(Math.log(o)/Math.LN2),l=a<=48?1:lm(2,a-48),u=wo(o),c=u.mul(t);c.isNegative()||c.gt(n);)o-=l,u=wo(o,this.unsigned),c=u.mul(t);u.isZero()&&(u=Vu),i=i.add(u),n=n.sub(c)}return i};ge.div=ge.divide;ge.modulo=function(t){if(Gr(t)||(t=Do(t)),So){var e=(this.unsigned?So.rem_u:So.rem_s)(this.low,this.high,t.low,t.high);return It(e,So.get_high(),this.unsigned)}return this.sub(this.div(t).mul(t))};ge.mod=ge.modulo;ge.rem=ge.modulo;ge.not=function(){return It(~this.low,~this.high,this.unsigned)};ge.and=function(t){return Gr(t)||(t=Do(t)),It(this.low&t.low,this.high&t.high,this.unsigned)};ge.or=function(t){return Gr(t)||(t=Do(t)),It(this.low|t.low,this.high|t.high,this.unsigned)};ge.xor=function(t){return Gr(t)||(t=Do(t)),It(this.low^t.low,this.high^t.high,this.unsigned)};ge.shiftLeft=function(t){return Gr(t)&&(t=t.toInt()),(t&=63)===0?this:t<32?It(this.low<<t,this.high<<t|this.low>>>32-t,this.unsigned):It(0,this.low<<t-32,this.unsigned)};ge.shl=ge.shiftLeft;ge.shiftRight=function(t){return Gr(t)&&(t=t.toInt()),(t&=63)===0?this:t<32?It(this.low>>>t|this.high<<32-t,this.high>>t,this.unsigned):It(this.high>>t-32,this.high>=0?0:-1,this.unsigned)};ge.shr=ge.shiftRight;ge.shiftRightUnsigned=function(t){if(Gr(t)&&(t=t.toInt()),t&=63,t===0)return this;var e=this.high;if(t<32){var o=this.low;return It(o>>>t|e<<32-t,e>>>t,this.unsigned)}else return t===32?It(e,0,this.unsigned):It(e>>>t-32,0,this.unsigned)};ge.shru=ge.shiftRightUnsigned;ge.shr_u=ge.shiftRightUnsigned;ge.toSigned=function(){return this.unsigned?It(this.low,this.high,!1):this};ge.toUnsigned=function(){return this.unsigned?this:It(this.low,this.high,!0)};ge.toBytes=function(t){return t?this.toBytesLE():this.toBytesBE()};ge.toBytesLE=function(){var t=this.high,e=this.low;return[e&255,e>>>8&255,e>>>16&255,e>>>24,t&255,t>>>8&255,t>>>16&255,t>>>24]};ge.toBytesBE=function(){var t=this.high,e=this.low;return[t>>>24,t>>>16&255,t>>>8&255,t&255,e>>>24,e>>>16&255,e>>>8&255,e&255]};kt.fromBytes=function(t,e,o){return o?kt.fromBytesLE(t,e):kt.fromBytesBE(t,e)};kt.fromBytesLE=function(t,e){return new kt(t[0]|t[1]<<8|t[2]<<16|t[3]<<24,t[4]|t[5]<<8|t[6]<<16|t[7]<<24,e)};kt.fromBytesBE=function(t,e){return new kt(t[4]<<24|t[5]<<16|t[6]<<8|t[7],t[0]<<24|t[1]<<16|t[2]<<8|t[3],e)}});var Bw=io((Xu,Mw)=>{"use strict";var LV=function(){if(typeof self<"u")return self;if(typeof window<"u")return window;if(typeof global<"u")return global;throw new Error("unable to locate global object")},Is=LV();Mw.exports=Xu=Is.fetch;Is.fetch&&(Xu.default=Is.fetch.bind(Is));Xu.Headers=Is.Headers;Xu.Request=Is.Request;Xu.Response=Is.Response});var Vw=io(()=>{"use strict"});var dC=io((pC,Ty)=>{"use strict";(function(r,t,e){function o(a){var l=this,u=s();l.next=function(){var c=2091639*l.s0+l.c*23283064365386963e-26;return l.s0=l.s1,l.s1=l.s2,l.s2=c-(l.c=c|0)},l.c=1,l.s0=u(" "),l.s1=u(" "),l.s2=u(" "),l.s0-=u(a),l.s0<0&&(l.s0+=1),l.s1-=u(a),l.s1<0&&(l.s1+=1),l.s2-=u(a),l.s2<0&&(l.s2+=1),u=null}function n(a,l){return l.c=a.c,l.s0=a.s0,l.s1=a.s1,l.s2=a.s2,l}function i(a,l){var u=new o(a),c=l&&l.state,p=u.next;return p.int32=function(){return u.next()*4294967296|0},p.double=function(){return p()+(p()*2097152|0)*11102230246251565e-32},p.quick=p,c&&(typeof c=="object"&&n(c,u),p.state=function(){return n(u,{})}),p}function s(){var a=4022871197,l=function(u){u=String(u);for(var c=0;c<u.length;c++){a+=u.charCodeAt(c);var p=.02519603282416938*a;a=p>>>0,p-=a,p*=a,a=p>>>0,p-=a,a+=p*4294967296}return(a>>>0)*23283064365386963e-26};return l}t&&t.exports?t.exports=i:e&&e.amd?e(function(){return i}):this.alea=i})(pC,typeof Ty=="object"&&Ty,typeof define=="function"&&define)});var fC=io((mC,Ey)=>{"use strict";(function(r,t,e){function o(s){var a=this,l="";a.x=0,a.y=0,a.z=0,a.w=0,a.next=function(){var c=a.x^a.x<<11;return a.x=a.y,a.y=a.z,a.z=a.w,a.w^=a.w>>>19^c^c>>>8},s===(s|0)?a.x=s:l+=s;for(var u=0;u<l.length+64;u++)a.x^=l.charCodeAt(u)|0,a.next()}function n(s,a){return a.x=s.x,a.y=s.y,a.z=s.z,a.w=s.w,a}function i(s,a){var l=new o(s),u=a&&a.state,c=function(){return(l.next()>>>0)/4294967296};return c.double=function(){do var p=l.next()>>>11,d=(l.next()>>>0)/4294967296,m=(p+d)/(1<<21);while(m===0);return m},c.int32=l.next,c.quick=c,u&&(typeof u=="object"&&n(u,l),c.state=function(){return n(l,{})}),c}t&&t.exports?t.exports=i:e&&e.amd?e(function(){return i}):this.xor128=i})(mC,typeof Ey=="object"&&Ey,typeof define=="function"&&define)});var gC=io((hC,Ny)=>{"use strict";(function(r,t,e){function o(s){var a=this,l="";a.next=function(){var c=a.x^a.x>>>2;return a.x=a.y,a.y=a.z,a.z=a.w,a.w=a.v,(a.d=a.d+362437|0)+(a.v=a.v^a.v<<4^(c^c<<1))|0},a.x=0,a.y=0,a.z=0,a.w=0,a.v=0,s===(s|0)?a.x=s:l+=s;for(var u=0;u<l.length+64;u++)a.x^=l.charCodeAt(u)|0,u==l.length&&(a.d=a.x<<10^a.x>>>4),a.next()}function n(s,a){return a.x=s.x,a.y=s.y,a.z=s.z,a.w=s.w,a.v=s.v,a.d=s.d,a}function i(s,a){var l=new o(s),u=a&&a.state,c=function(){return(l.next()>>>0)/4294967296};return c.double=function(){do var p=l.next()>>>11,d=(l.next()>>>0)/4294967296,m=(p+d)/(1<<21);while(m===0);return m},c.int32=l.next,c.quick=c,u&&(typeof u=="object"&&n(u,l),c.state=function(){return n(l,{})}),c}t&&t.exports?t.exports=i:e&&e.amd?e(function(){return i}):this.xorwow=i})(hC,typeof Ny=="object"&&Ny,typeof define=="function"&&define)});var yC=io((xC,Ry)=>{"use strict";(function(r,t,e){function o(s){var a=this;a.next=function(){var u=a.x,c=a.i,p,d,m;return p=u[c],p^=p>>>7,d=p^p<<24,p=u[c+1&7],d^=p^p>>>10,p=u[c+3&7],d^=p^p>>>3,p=u[c+4&7],d^=p^p<<7,p=u[c+7&7],p=p^p<<13,d^=p^p<<9,u[c]=d,a.i=c+1&7,d};function l(u,c){var p,d,m=[];if(c===(c|0))d=m[0]=c;else for(c=""+c,p=0;p<c.length;++p)m[p&7]=m[p&7]<<15^c.charCodeAt(p)+m[p+1&7]<<13;for(;m.length<8;)m.push(0);for(p=0;p<8&&m[p]===0;++p);for(p==8?d=m[7]=-1:d=m[p],u.x=m,u.i=0,p=256;p>0;--p)u.next()}l(a,s)}function n(s,a){return a.x=s.x.slice(),a.i=s.i,a}function i(s,a){s==null&&(s=+new Date);var l=new o(s),u=a&&a.state,c=function(){return(l.next()>>>0)/4294967296};return c.double=function(){do var p=l.next()>>>11,d=(l.next()>>>0)/4294967296,m=(p+d)/(1<<21);while(m===0);return m},c.int32=l.next,c.quick=c,u&&(u.x&&n(u,l),c.state=function(){return n(l,{})}),c}t&&t.exports?t.exports=i:e&&e.amd?e(function(){return i}):this.xorshift7=i})(xC,typeof Ry=="object"&&Ry,typeof define=="function"&&define)});var vC=io((bC,$y)=>{"use strict";(function(r,t,e){function o(s){var a=this;a.next=function(){var u=a.w,c=a.X,p=a.i,d,m;return a.w=u=u+1640531527|0,m=c[p+34&127],d=c[p=p+1&127],m^=m<<13,d^=d<<17,m^=m>>>15,d^=d>>>12,m=c[p]=m^d,a.i=p,m+(u^u>>>16)|0};function l(u,c){var p,d,m,f,g,x=[],y=128;for(c===(c|0)?(d=c,c=null):(c=c+"\0",d=0,y=Math.max(y,c.length)),m=0,f=-32;f<y;++f)c&&(d^=c.charCodeAt((f+32)%c.length)),f===0&&(g=d),d^=d<<10,d^=d>>>15,d^=d<<4,d^=d>>>13,f>=0&&(g=g+1640531527|0,p=x[f&127]^=d+g,m=p==0?m+1:0);for(m>=128&&(x[(c&&c.length||0)&127]=-1),m=127,f=4*128;f>0;--f)d=x[m+34&127],p=x[m=m+1&127],d^=d<<13,p^=p<<17,d^=d>>>15,p^=p>>>12,x[m]=d^p;u.w=g,u.X=x,u.i=m}l(a,s)}function n(s,a){return a.i=s.i,a.w=s.w,a.X=s.X.slice(),a}function i(s,a){s==null&&(s=+new Date);var l=new o(s),u=a&&a.state,c=function(){return(l.next()>>>0)/4294967296};return c.double=function(){do var p=l.next()>>>11,d=(l.next()>>>0)/4294967296,m=(p+d)/(1<<21);while(m===0);return m},c.int32=l.next,c.quick=c,u&&(u.X&&n(u,l),c.state=function(){return n(l,{})}),c}t&&t.exports?t.exports=i:e&&e.amd?e(function(){return i}):this.xor4096=i})(bC,typeof $y=="object"&&$y,typeof define=="function"&&define)});var wC=io((SC,Py)=>{"use strict";(function(r,t,e){function o(s){var a=this,l="";a.next=function(){var c=a.b,p=a.c,d=a.d,m=a.a;return c=c<<25^c>>>7^p,p=p-d|0,d=d<<24^d>>>8^m,m=m-c|0,a.b=c=c<<20^c>>>12^p,a.c=p=p-d|0,a.d=d<<16^p>>>16^m,a.a=m-c|0},a.a=0,a.b=0,a.c=-1640531527,a.d=1367130551,s===Math.floor(s)?(a.a=s/4294967296|0,a.b=s|0):l+=s;for(var u=0;u<l.length+20;u++)a.b^=l.charCodeAt(u)|0,a.next()}function n(s,a){return a.a=s.a,a.b=s.b,a.c=s.c,a.d=s.d,a}function i(s,a){var l=new o(s),u=a&&a.state,c=function(){return(l.next()>>>0)/4294967296};return c.double=function(){do var p=l.next()>>>11,d=(l.next()>>>0)/4294967296,m=(p+d)/(1<<21);while(m===0);return m},c.int32=l.next,c.quick=c,u&&(typeof u=="object"&&n(u,l),c.state=function(){return n(l,{})}),c}t&&t.exports?t.exports=i:e&&e.amd?e(function(){return i}):this.tychei=i})(SC,typeof Py=="object"&&Py,typeof define=="function"&&define)});var CC=io(()=>{"use strict"});var kC=io((_C,Qm)=>{"use strict";(function(r,t,e){var o=256,n=6,i=52,s="random",a=e.pow(o,n),l=e.pow(2,i),u=l*2,c=o-1,p;function d(k,N,F){var M=[];N=N==!0?{entropy:!0}:N||{};var z=x(g(N.entropy?[k,v(t)]:k??y(),3),M),H=new m(M),K=function(){for(var j=H.g(n),J=a,ue=0;j<l;)j=(j+ue)*o,J*=o,ue=H.g(1);for(;j>=u;)j/=2,J/=2,ue>>>=1;return(j+ue)/J};return K.int32=function(){return H.g(4)|0},K.quick=function(){return H.g(4)/4294967296},K.double=K,x(v(H.S),t),(N.pass||F||function(j,J,ue,ce){return ce&&(ce.S&&f(ce,H),j.state=function(){return f(H,{})}),ue?(e[s]=j,J):j})(K,z,"global"in N?N.global:this==e,N.state)}function m(k){var N,F=k.length,M=this,z=0,H=M.i=M.j=0,K=M.S=[];for(F||(k=[F++]);z<o;)K[z]=z++;for(z=0;z<o;z++)K[z]=K[H=c&H+k[z%F]+(N=K[z])],K[H]=N;(M.g=function(j){for(var J,ue=0,ce=M.i,xe=M.j,be=M.S;j--;)J=be[ce=c&ce+1],ue=ue*o+be[c&(be[ce]=be[xe=c&xe+J])+(be[xe]=J)];return M.i=ce,M.j=xe,ue})(o)}function f(k,N){return N.i=k.i,N.j=k.j,N.S=k.S.slice(),N}function g(k,N){var F=[],M=typeof k,z;if(N&&M=="object")for(z in k)try{F.push(g(k[z],N-1))}catch{}return F.length?F:M=="string"?k:k+"\0"}function x(k,N){for(var F=k+"",M,z=0;z<F.length;)N[c&z]=c&(M^=N[c&z]*19)+F.charCodeAt(z++);return v(N)}function y(){try{var k;return p&&(k=p.randomBytes)?k=k(o):(k=new Uint8Array(o),(r.crypto||r.msCrypto).getRandomValues(k)),v(k)}catch{var N=r.navigator,F=N&&N.plugins;return[+new Date,r,F,r.screen,v(t)]}}function v(k){return String.fromCharCode.apply(0,k)}if(x(e.random(),t),typeof Qm=="object"&&Qm.exports){Qm.exports=d;try{p=CC()}catch{}}else typeof define=="function"&&define.amd?define(function(){return d}):e["seed"+s]=d})(typeof self<"u"?self:_C,[],Math)});var TC=io((m1e,IC)=>{"use strict";var IU=dC(),TU=fC(),EU=gC(),NU=yC(),RU=vC(),$U=wC(),Ds=kC();Ds.alea=IU;Ds.xor128=TU;Ds.xorwow=EU;Ds.xorshift7=NU;Ds.xor4096=RU;Ds.tychei=$U;IC.exports=Ds});function uL(r,t){if(r&1&&(I(0,"option",32),O(1),pt(2,"titlecase"),E()),r&2){let e=t.$implicit;B("value",e),D(),We(Vt(2,2,e))}}function cL(r,t){if(r&1&&(I(0,"option",32),O(1),pt(2,"titlecase"),E()),r&2){let e=t.$implicit;B("value",e),D(),We(Vt(2,2,e))}}function pL(r,t){if(r&1&&(I(0,"span"),O(1," of "),I(2,"strong",34),O(3),E()()),r&2){let e=L(2);D(3),We(e.allRoutinesForList().length)}}function dL(r,t){if(r&1&&(I(0,"div",33),O(1," Showing "),I(2,"strong",34),O(3),E(),ae(4,pL,4,1,"span",35),O(5," routines "),E()),r&2){let e=L();D(3),We(e.filteredRoutines().length),D(),B("ngIf",e.routineSearchTerm()||e.selectedRoutineGoal()||e.selectedRoutineMuscleGroup())}}function mL(r,t){if(r&1&&(I(0,"p",56),O(1),E()),r&2){let e=L().$implicit;B("title",e.description),D(),We(e.description)}}function fL(r,t){if(r&1&&(I(0,"div")(1,"span",45),O(2,"Goal:"),E(),I(3,"span",57),O(4),pt(5,"titlecase"),E()()),r&2){let e=L().$implicit;D(4),$e(" ",Vt(5,1,e.goal)," ")}}function hL(r,t){if(r&1&&(I(0,"span",60),O(1),pt(2,"titlecase"),E()),r&2){let e=t.$implicit;D(),$e(" ",Vt(2,1,e)," ")}}function gL(r,t){if(r&1&&(I(0,"div",58)(1,"span",45),O(2,"Muscles:"),E(),ae(3,hL,3,3,"span",59),E()),r&2){let e=L().$implicit,o=L(3);D(3),B("ngForOf",o.getRoutineMainMuscleGroups(e))}}function xL(r,t){if(r&1&&(I(0,"div",61)(1,"span",45),O(2,"Last:"),E(),O(3),pt(4,"date"),E()),r&2){let e=L().$implicit;D(3),$e(" ",yo(4,1,e.lastPerformed,"dd/MM/yy HH:mm")," ")}}function yL(r,t){r&1&&(I(0,"div",62),O(1," Not performed "),E())}function bL(r,t){if(r&1){let e=ke();I(0,"div",63)(1,"button",64),ie("click",function(n){re(e);let i=L().$implicit,s=L(3);return oe(s.viewRoutineDetails(i.id,n))}),_e(),I(2,"svg",65),pe(3,"path",66)(4,"path",67),E(),O(5," VIEW "),E(),Ge(),I(6,"button",68),ie("click",function(n){re(e);let i=L().$implicit,s=L(3);return oe(s.startWorkout(i.id,n))}),_e(),I(7,"svg",69),pe(8,"path",70),E(),O(9," START "),E(),Ge(),I(10,"button",64),ie("click",function(n){re(e);let i=L().$implicit,s=L(3);return oe(s.editRoutine(i.id,n))}),_e(),I(11,"svg",69),pe(12,"path",71),E(),O(13," EDIT "),E(),Ge(),I(14,"button",64),ie("click",function(n){re(e);let i=L().$implicit,s=L(3);return oe(s.cloneAndEditRoutine(i.id,n))}),_e(),I(15,"svg",72),pe(16,"path",73),E(),O(17," CLONE "),E(),Ge(),pe(18,"div",74),I(19,"button",75),ie("click",function(n){re(e);let i=L().$implicit,s=L(3);return oe(s.deleteRoutine(i.id,n))}),_e(),I(20,"svg",76),pe(21,"path",77),E(),O(22," DELETE "),E()()}r&2&&B("@dropdownMenu",void 0)}function vL(r,t){if(r&1){let e=ke();I(0,"div",78)(1,"button",79),ie("click",function(n){re(e);let i=L().$implicit,s=L(3);return oe(s.viewRoutineDetails(i.id,n))}),_e(),I(2,"svg",69),pe(3,"path",80)(4,"path",81),E(),O(5," VIEW "),E(),Ge(),I(6,"button",82),ie("click",function(n){re(e);let i=L().$implicit,s=L(3);return oe(s.startWorkout(i.id,n))}),_e(),I(7,"svg",69),pe(8,"path",70),E(),O(9," START "),E(),Ge(),I(10,"button",83),ie("click",function(n){re(e);let i=L().$implicit,s=L(3);return oe(s.editRoutine(i.id,n))}),_e(),I(11,"svg",69),pe(12,"path",71),E(),O(13," EDIT "),E(),Ge(),I(14,"button",84),ie("click",function(n){re(e);let i=L().$implicit,s=L(3);return oe(s.cloneAndEditRoutine(i.id,n))}),_e(),I(15,"svg",72),pe(16,"path",73),E(),O(17," CLONE "),E(),Ge(),I(18,"button",84),ie("click",function(n){re(e);let i=L().$implicit,s=L(3);return oe(s.deleteRoutine(i.id,n))}),_e(),I(19,"svg",85),pe(20,"path",27),E(),O(21," DELETE "),E()()}r&2&&B("@slideInOutActions",void 0)}function SL(r,t){if(r&1){let e=ke();I(0,"div",39)(1,"div",40),ie("click",function(){let n=re(e).$implicit,i=L(3);return oe(i.viewRoutineDetails(n.id))}),I(2,"div",41)(3,"h2",42),O(4),E()(),ae(5,mL,2,2,"p",43),I(6,"div",44),ae(7,fL,6,3,"div",35),I(8,"span")(9,"span",45),O(10,"Ex:"),E(),O(11),E()(),ae(12,gL,4,1,"div",46)(13,xL,5,4,"div",47)(14,yL,2,0,"div",48),E(),I(15,"div",49)(16,"div",50)(17,"button",51),ie("click",function(n){let i=re(e).$implicit,s=L(3);return oe(s.toggleActions(i.id,n))}),_e(),I(18,"svg",52),pe(19,"path",53),E()(),ae(20,bL,23,1,"div",54),E()(),ae(21,vL,22,1,"div",55),E()}if(r&2){let e=t.$implicit,o=L(3);Qc("z-index",o.areActionsVisible(e.id)?50:"auto"),D(3),B("title",e.name),D(),We(e.name),D(),B("ngIf",e.description),D(2),B("ngIf",e.goal),D(4),$e(" ",e.exercises.length," "),D(),B("ngIf",o.getRoutineMainMuscleGroups(e).length>0),D(),B("ngIf",e.lastPerformed),D(),B("ngIf",!e.lastPerformed),D(6),B("ngIf",o.areActionsVisible(e.id)&&!o.menuModeCompact),D(),B("ngIf",o.areActionsVisible(e.id)&&o.menuModeCompact)}}function wL(r,t){if(r&1&&(I(0,"div",37),ae(1,SL,22,12,"div",38),E()),r&2){let e=L(2);D(),B("ngForOf",e.filteredRoutines())}}function CL(r,t){if(r&1){let e=ke();I(0,"button",92),ie("click",function(){re(e);let n=L(3);return oe(n.navigateToCreateRoutine())}),O(1," Create Your First Routine "),E()}}function _L(r,t){if(r&1&&(I(0,"div",86),_e(),I(1,"svg",87),pe(2,"path",88),E(),Ge(),I(3,"h3",89),O(4),E(),I(5,"p",90),O(6),E(),ae(7,CL,2,0,"button",91),E()),r&2){let e=L(2);D(4),$e(" ",e.routineSearchTerm()||e.selectedRoutineGoal()||e.selectedRoutineMuscleGroup()?"No Routines Match Filters":"No Routines Yet!"," "),D(2),$e(" ",e.routineSearchTerm()||e.selectedRoutineGoal()||e.selectedRoutineMuscleGroup()?"Try adjusting your filters.":"Get started by creating your first workout routine."," "),D(),B("ngIf",!(e.routineSearchTerm()||e.selectedRoutineGoal()||e.selectedRoutineMuscleGroup()))}}function kL(r,t){if(r&1&&(I(0,"div"),ae(1,wL,2,1,"div",36)(2,_L,8,3,"ng-template",null,1,Xo),E()),r&2){let e=jo(3),o=L();D(),B("ngIf",o.filteredRoutines().length>0)("ngIfElse",e)}}function IL(r,t){r&1&&(I(0,"div",93),_e(),I(1,"svg",94),pe(2,"circle",95)(3,"path",96),E(),Ge(),I(4,"p",97),O(5,"Loading routines..."),E()())}var Pd=class r{workoutService=Ve(Sa);exerciseService=Ve(Xn);trackingService=Ve(jn);router=Ve(qn);alertService=Ve(va);spinnerService=Ve(Rd);toastService=Ve(wa);storageService=Ve(Nd);themeService=Ve(fS);platformId=Ve(ca);routines$;allRoutinesForList=De([]);routinesSubscription;exercisesSubscription;visibleActionsRutineId=De(null);menuModeCompact=!1;isFilterAccordionOpen=De(!1);routineSearchTerm=De("");selectedRoutineGoal=De(null);selectedRoutineMuscleGroup=De(null);uniqueRoutineGoals=De([]);uniqueRoutineMuscleGroups=De([]);allExercisesMap=new Map;PAUSED_WORKOUT_KEY="fitTrackPro_pausedWorkoutState";filteredRoutines=At(()=>{let t=this.allRoutinesForList(),e=this.routineSearchTerm().toLowerCase(),o=this.selectedRoutineGoal(),n=this.selectedRoutineMuscleGroup();return e&&(t=t.filter(i=>i.name.toLowerCase().includes(e)||i.description&&i.description.toLowerCase().includes(e))),o&&(t=t.filter(i=>i.goal?.toLowerCase()===o.toLowerCase())),n&&(t=t.filter(i=>i.exercises.some(s=>this.allExercisesMap.get(s.exerciseId)?.primaryMuscleGroup.toLowerCase()===n.toLowerCase()))),t});ngOnInit(){Ir(this.platformId)&&window.scrollTo(0,0),this.menuModeCompact=this.themeService.isMenuModeCompact(),this.exercisesSubscription=this.exerciseService.getExercises().subscribe(t=>{t.forEach(e=>this.allExercisesMap.set(e.id,e)),this.loadRoutinesAndPopulateFilters()}),this.routines$=this.workoutService.routines$}loadRoutinesAndPopulateFilters(){this.routinesSubscription=this.workoutService.routines$.subscribe(t=>{this.allRoutinesForList.set(t),this.populateRoutineFilterOptions(t)})}populateRoutineFilterOptions(t){if(!t)return;let e=new Set,o=new Set;t.forEach(n=>{n.goal&&e.add(n.goal),n.exercises.forEach(i=>{let s=this.allExercisesMap.get(i.exerciseId);s?.primaryMuscleGroup&&o.add(s.primaryMuscleGroup)})}),this.uniqueRoutineGoals.set(Array.from(e).sort()),this.uniqueRoutineMuscleGroups.set(Array.from(o).sort())}toggleFilterAccordion(){this.isFilterAccordionOpen.update(t=>!t)}onRoutineSearchTermChange(t){let e=t.target;this.routineSearchTerm.set(e.value)}onRoutineGoalChange(t){let e=t.target;this.selectedRoutineGoal.set(e.value||null)}onRoutineMuscleGroupChange(t){let e=t.target;this.selectedRoutineMuscleGroup.set(e.value||null)}clearRoutineFilters(){this.routineSearchTerm.set(""),this.selectedRoutineGoal.set(null),this.selectedRoutineMuscleGroup.set(null);let t=document.getElementById("routine-search-term");t&&(t.value="");let e=document.getElementById("routine-goal-filter");e&&(e.value="");let o=document.getElementById("routine-muscle-filter");o&&(o.value="")}navigateToCreateRoutine(){this.router.navigate(["/workout/routine/new"])}editRoutine(t,e){e.stopPropagation(),this.router.navigate(["/workout/routine/edit",t]),this.visibleActionsRutineId.set(null)}deleteRoutine(t,e){return X(this,null,function*(){e.stopPropagation(),this.visibleActionsRutineId.set(null);let o=this.allRoutinesForList().find(a=>a.id===t);if(!o){this.toastService.error("Routine not found for deletion.",0,"Error");return}let n=(yield zn(this.trackingService.getWorkoutLogsByRoutineId(t).pipe(kr(1))))||[],i=`Are you sure you want to delete the routine "${o.name}"?`;n.length>0&&(i+=` This will also delete ${n.length} associated workout log(s). This action cannot be undone.`);let s=yield this.alertService.showConfirm("Delete Routine",i,"Delete");if(s&&s.data)try{this.spinnerService.show(),n.length>0&&(yield this.trackingService.clearWorkoutLogsByRoutineId(t)),yield this.workoutService.deleteRoutine(t),this.toastService.success(`Routine "${o.name}" deleted successfully.`,4e3,"Routine Deleted")}catch(a){console.error("Error during deletion:",a),this.toastService.error("Failed to delete routine or its logs.",0,"Deletion Failed")}finally{this.spinnerService.hide()}})}startWorkout(t,e){return X(this,null,function*(){if(e.stopPropagation(),this.visibleActionsRutineId.set(null),!Ir(this.platformId)){this.router.navigate(["/workout/play",t]);return}let o=this.storageService.getItem(this.PAUSED_WORKOUT_KEY);if(o){let n=o.sessionRoutine?.name||"a previous session",i=o.workoutDate?` from ${fr(new Date(o.workoutDate),"MMM d, HH:mm")}`:"",s=[{text:"Cancel",role:"cancel",data:"cancel"},{text:"Discard Paused & Start New",role:"confirm",data:"discard_start_new",cssClass:"bg-red-500 hover:bg-red-600 text-white"},{text:`Resume: ${n.substring(0,15)}${n.length>15?"...":""}`,role:"confirm",data:"resume_paused",cssClass:"bg-green-500 hover:bg-green-600 text-white"}],a=yield this.alertService.showConfirmationDialog("Workout in Progress",`You have a paused workout ("${n}"${i}). What would you like to do?`,s);if(a&&a.data==="resume_paused"){let l=o.routineId||"ad-hoc";this.router.navigate(["/workout/play",o.routineId||""],{queryParams:{resume:"true"}})}else a&&a.data==="discard_start_new"?(this.storageService.removeItem(this.PAUSED_WORKOUT_KEY),this.toastService.info("Previous paused workout discarded.",3e3),this.router.navigate(["/workout/play",t])):this.toastService.info("Starting new workout cancelled.",2e3)}else this.router.navigate(["/workout/play",t])})}viewRoutineDetails(t,e){e?.stopPropagation(),this.router.navigate(["/workout/routine/view",t,{isView:"routineBuilder"}]),this.visibleActionsRutineId.set(null)}toggleActions(t,e){e.stopPropagation(),this.visibleActionsRutineId.update(o=>o===t?null:t)}areActionsVisible(t){return this.visibleActionsRutineId()===t}getRoutineMainMuscleGroups(t){if(!this.allExercisesMap.size||!t.exercises.length)return[];let e=new Set;return t.exercises.forEach(o=>{let n=this.allExercisesMap.get(o.exerciseId);n?.primaryMuscleGroup&&e.add(n.primaryMuscleGroup)}),Array.from(e).slice(0,3)}cloneAndEditRoutine(t,e){return X(this,null,function*(){e.stopPropagation(),this.visibleActionsRutineId.set(null);let o=this.allRoutinesForList().find(i=>i.id===t);if(!o){this.toastService.error("Routine not found for cloning.",0,"Error");return}let n=_r(ar({},structuredClone(o)),{name:o.name+" (Copy)",createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()});try{this.spinnerService.show(),n=yield this.workoutService.addRoutine(n),this.toastService.success(`Routine "${n.name}" cloned successfully.`,3e3,"Routine Cloned"),this.router.navigate(["/workout/routine/edit",n.id]),this.visibleActionsRutineId.set(null)}catch(i){console.error("Error during routine cloning:",i),this.toastService.error("Failed to clone routine.",0,"Clone Failed")}finally{this.spinnerService.hide()}})}ngOnDestroy(){this.routinesSubscription?.unsubscribe(),this.exercisesSubscription?.unsubscribe()}startKB(){this.router.navigate(["/workout/routine/kb-workout-tracker"])}getIconPath(t){return this.exerciseService.getIconPath(t)}static \u0275fac=function(e){return new(e||r)};static \u0275cmp=go({type:r,selectors:[["app-routine-list"]],decls:49,vars:17,consts:[["loadingRoutines",""],["noRoutines",""],[1,"container","mx-auto","p-1","sm:p-4"],[1,"flex","justify-between","items-center","mb-2","pb-2","border-b","border-gray-200","dark:border-gray-700"],[1,"text-2xl","font-bold","text-gray-800","dark:text-gray-200"],["type","button",1,"p-3","rounded-lg","text-gray-600","dark:text-gray-300","hover:bg-gray-200","dark:hover:bg-gray-700","focus:outline-none","focus:ring-2","focus:ring-primary","dark:focus:ring-primary-light","transition-all","duration-300","ease-in-out",3,"click"],["xmlns","http://www.w3.org/2000/svg","fill","none","viewBox","0 0 24 24","stroke-width","1.5","stroke","currentColor",1,"w-8","h-8","transition-transform","duration-300"],["stroke-linecap","round","stroke-linejoin","round","d","M10.5 6h9.75M10.5 6a1.5 1.5 0 1 1-3 0m3 0a1.5 1.5 0 1 0-3 0M3.75 6H7.5m3 12h9.75m-9.75 0a1.5 1.5 0 0 1-3 0m3 0a1.5 1.5 0 0 0-3 0M3.75 18H7.5m3-6h9.75m-9.75 0a1.5 1.5 0 0 1-3 0m3 0a1.5 1.5 0 0 0-3 0M3.75 12H7.5"],[1,"sr-only"],[1,"bg-primary","hover:bg-primary-dark","text-white","font-semibold","py-2","px-3","rounded-md","shadow-sm","hover:shadow-md","transition-all","duration-200","focus:outline-none","focus:ring-2","focus:ring-primary-light","focus:ring-opacity-75","text-sm","mb-2",3,"click"],["xmlns","http://www.w3.org/2000/svg","viewBox","0 0 20 20","fill","currentColor",1,"w-4","h-4","mr-1.5","inline-block"],["d","M10.75 4.75a.75.75 0 0 0-1.5 0v4.5h-4.5a.75.75 0 0 0 0 1.5h4.5v4.5a.75.75 0 0 0 1.5 0v-4.5h4.5a.75.75 0 0 0 0-1.5h-4.5v-4.5Z"],[1,"overflow-hidden","transition-all","duration-500","ease-in-out"],[1,"p-4","bg-white","dark:bg-gray-700","rounded-lg","shadow-md","border","dark:border-gray-600"],[1,"text-xl","font-semibold","text-gray-700","dark:text-gray-300","mb-4"],[1,"grid","grid-cols-1","md:grid-cols-3","gap-4","items-end"],["for","routine-search-term",1,"block","text-sm","font-medium","text-gray-700","dark:text-gray-300","mb-1"],["type","text","id","routine-search-term","placeholder","Enter routine name or description...",1,"block","w-full","p-2","border","border-gray-300","dark:border-gray-600","rounded-md","shadow-sm","focus:ring-primary","focus:border-primary","dark:bg-gray-600","dark:text-gray-200",3,"input","value"],["for","routine-goal-filter",1,"block","text-sm","font-medium","text-gray-700","dark:text-gray-300","mb-1"],["id","routine-goal-filter",1,"block","w-full","p-2","border","border-gray-300","dark:border-gray-600","rounded-md","shadow-sm","focus:ring-primary","focus:border-primary","dark:bg-gray-600","dark:text-gray-200",3,"change","value"],["value",""],[3,"value",4,"ngFor","ngForOf"],["for","routine-muscle-filter",1,"block","text-sm","font-medium","text-gray-700","dark:text-gray-300","mb-1"],["id","routine-muscle-filter",1,"block","w-full","p-2","border","border-gray-300","dark:border-gray-600","rounded-md","shadow-sm","focus:ring-primary","focus:border-primary","dark:bg-gray-600","dark:text-gray-200",3,"change","value"],[1,"mt-4","flex","justify-between","items-center"],[1,"flex","px-4","py-2","bg-yellow-200","dark:bg-yellow-700","text-gray-700","dark:text-gray-200","rounded-md","hover:bg-yellow-300","dark:hover:bg-yellow-500","text-sm","items-center",3,"click"],["xmlns","http://www.w3.org/2000/svg","fill","none","viewBox","0 0 24 24","stroke-width","1.5","stroke","currentColor",1,"size-5","mr-2"],["stroke-linecap","round","stroke-linejoin","round","d","m14.74 9-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 0 1-2.244 2.077H8.084a2.25 2.25 0 0 1-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 0 0-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 0 1 3.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 0 0-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 0 0-7.5 0"],["class","text-sm text-gray-600 dark:text-gray-400",4,"ngIf"],[4,"ngIf","ngIfElse"],["type","button",1,"p-2","rounded-md","mt-5","text-gray-600","dark:text-gray-300","hover:bg-gray-200","dark:hover:bg-gray-700","focus:outline-none","focus:ring-2","focus:ring-primary","dark:focus:ring-primary-light","transition-all","duration-300","ease-in-out",3,"click"],[1,"w-6","h-6","sm:w-8","sm:h-8","object-contain",3,"src"],[3,"value"],[1,"text-sm","text-gray-600","dark:text-gray-400"],[1,"text-gray-800","dark:text-gray-200"],[4,"ngIf"],["class","grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 mt-4",4,"ngIf","ngIfElse"],[1,"grid","grid-cols-1","md:grid-cols-2","lg:grid-cols-3","gap-4","mt-4"],["class","bg-white dark:bg-gray-700 rounded-lg shadow-md hover:shadow-lg transition-shadow duration-200 relative group transform hover:-translate-y-1",3,"zIndex",4,"ngFor","ngForOf"],[1,"bg-white","dark:bg-gray-700","rounded-lg","shadow-md","hover:shadow-lg","transition-shadow","duration-200","relative","group","transform","hover:-translate-y-1"],[1,"p-3","cursor-pointer",3,"click"],[1,"flex","justify-between","items-start","mb-1.5"],[1,"text-lg","font-semibold","text-primary","dark:text-primary-light","truncate","pr-8",3,"title"],["class","text-gray-600 dark:text-gray-400 mb-2 line-clamp-2 text-sm sm:text-xs",3,"title",4,"ngIf"],[1,"flex","justify-between","text-xs","text-gray-500","dark:text-gray-300","mb-2","space-x-2"],[1,"font-medium"],["class","text-sm sm:text-xs text-gray-500 dark:text-gray-300 mb-2",4,"ngIf"],["class","text-sm sm:text-xs text-gray-500 dark:text-gray-300",4,"ngIf"],["class","text-sm sm:text-xs text-gray-500 dark:text-gray-300 italic",4,"ngIf"],[1,"absolute","top-2","right-2"],[1,"relative"],[1,"p-1.5","text-gray-500","dark:text-gray-400","hover:bg-gray-200","dark:hover:bg-gray-700","rounded-full","focus:outline-none",3,"click"],["xmlns","http://www.w3.org/2000/svg","fill","none","viewBox","0 0 24 24","stroke","currentColor","stroke-width","2",1,"h-5","w-5"],["stroke-linecap","round","stroke-linejoin","round","d","M12 5v.01M12 12v.01M12 19v.01M12 6a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2z"],["class",`origin-top-right absolute right-0 top-full mt-1 sm:mt-2 w-40 sm:w-48 rounded-md shadow-lg bg-white dark:bg-gray-800 ring-1 ring-black dark:ring-gray-600 ring-opacity-5 focus:outline-none py-1 z-50 sm:z-50
                             z-[60]`,4,"ngIf"],["class",`absolute inset-x-0 bottom-0 p-2 bg-gray-100 dark:bg-gray-700 border-t border-gray-200 dark:border-gray-700
                           flex flex-wrap gap-1.5 justify-center z-20 rounded-b-lg`,4,"ngIf"],[1,"text-gray-600","dark:text-gray-400","mb-2","line-clamp-2","text-sm","sm:text-xs",3,"title"],[1,"text-2xs","bg-blue-100","text-blue-700","dark:bg-blue-700","dark:text-blue-200","px-1.5","py-0.5","rounded-full","mx-1","inline-block"],[1,"text-sm","sm:text-xs","text-gray-500","dark:text-gray-300","mb-2"],["class","text-2xs bg-purple-100 text-purple-700 dark:bg-purple-700 dark:text-purple-200 px-1.5 py-0.5 rounded-full mx-1 mb-1 inline-block",4,"ngFor","ngForOf"],[1,"text-2xs","bg-purple-100","text-purple-700","dark:bg-purple-700","dark:text-purple-200","px-1.5","py-0.5","rounded-full","mx-1","mb-1","inline-block"],[1,"text-sm","sm:text-xs","text-gray-500","dark:text-gray-300"],[1,"text-sm","sm:text-xs","text-gray-500","dark:text-gray-300","italic"],[1,"origin-top-right","absolute","right-0","top-full","mt-1","sm:mt-2","w-40","sm:w-48","rounded-md","shadow-lg","bg-white","dark:bg-gray-800","ring-1","ring-black","dark:ring-gray-600","ring-opacity-5","focus:outline-none","py-1","z-50","sm:z-50","z-[60]"],[1,"w-full","text-left","px-3","py-1.5","sm:px-4","sm:py-2","text-gray-700","dark:text-gray-200","hover:bg-gray-100","dark:hover:bg-gray-500","flex","items-center",3,"click"],["xmlns","http://www.w3.org/2000/svg","viewBox","0 0 20 20","fill","currentColor",1,"w-5","h-5","mr-2"],["d","M10 12.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5Z"],["fill-rule","evenodd","d","M.664 10.59a1.651 1.651 0 010-1.186A10.004 10.004 0 0110 3c4.257 0 7.893 2.66 9.336 6.41.147.381.146.804 0 1.186A10.004 10.004 0 0110 17c-4.257 0-7.893-2.66-9.336-6.41ZM14 10a4 4 0 11-8 0 4 4 0 018 0Z","clip-rule","evenodd"],[1,"w-full","text-left","px-3","py-1.5","sm:px-4","sm:py-2","font-medium","text-green-600","dark:text-green-400","hover:bg-green-50","dark:hover:bg-green-700/30","flex","items-center",3,"click"],["xmlns","http://www.w3.org/2000/svg","fill","none","viewBox","0 0 24 24","stroke-width","2","stroke","currentColor",1,"w-5","h-5","mr-2"],["stroke-linecap","round","stroke-linejoin","round","d","M5.25 5.653c0-.856.917-1.398 1.667-.986l11.54 6.347a1.125 1.125 0 0 1 0 1.972l-11.54 6.347a1.125 1.125 0 0 1-1.667-.986V5.653Z"],["stroke-linecap","round","stroke-linejoin","round","d","m16.862 4.487 1.687-1.688a1.875 1.875 0 1 1 2.652 2.652L10.582 16.07a4.5 4.5 0 0 1-1.897 1.13L6 18l.8-2.685a4.5 4.5 0 0 1 1.13-1.897l8.932-8.931Zm0 0L19.5 7.125M18 14v4.75A2.25 2.25 0 0 1 15.75 21H5.25A2.25 2.25 0 0 1 3 18.75V8.25A2.25 2.25 0 0 1 5.25 6H10"],["xmlns","http://www.w3.org/2000/svg","viewBox","0 0 24 24",1,"w-5","h-5","mr-2"],["d","M 5 3 H 16 A 2 2 0 0 1 18 5 V 16 A 2 2 0 0 1 16 18 H 5 A 2 2 0 0 1 3 16 V 5 A 2 2 0 0 1 5 3 Z M 8 6 H 19 A 2 2 0 0 1 21 8 V 19 A 2 2 0 0 1 19 21 H 8 A 2 2 0 0 1 6 19 V 8 A 2 2 0 0 1 8 6 Z","fill","none","stroke","currentColor","stroke-width","1.5","stroke-linecap","round","stroke-linejoin","round",1,"ng-tns-c238015746-6"],[1,"my-0.5","sm:my-1","border-t","border-gray-200","dark:border-gray-600"],[1,"w-full","text-left","px-3","py-1.5","sm:px-4","sm:py-2","text-red-600","dark:text-red-400","hover:bg-red-50","dark:hover:bg-red-600/50","flex","items-center",3,"click"],["xmlns","http://www.w3.org/2000/svg","viewBox","0 0 20 20","fill","currentColor",1,"w-3.5","h-3.5","sm:w-4","sm:h-4","mr-2"],["fill-rule","evenodd","d","M8.75 1A2.75 2.75 0 006 3.75v.443c-.795.077-1.58.177-2.365.298a.75.75 0 10.23 1.482l.149-.022.841 10.518A2.75 2.75 0 007.596 19h4.807a2.75 2.75 0 002.742-2.53l.841-10.52.149.023a.75.75 0 00.23-1.482A41.03 41.03 0 0014 4.193V3.75A2.75 2.75 0 0011.25 1h-2.5ZM10 4c.84 0 1.673.025 2.5.075V3.75c0-.69-.56-1.25-1.25-1.25h-2.5c-.69 0-1.25.56-1.25 1.25v.325C8.327 4.025 9.16 4 10 4ZM8.58 7.72a.75.75 0 00-1.5.06l.3 7.5a.75.75 0 101.5-.06l-.3-7.5Zm4.34.06a.75.75 0 10-1.5-.06l-.3 7.5a.75.75 0 101.5.06l.3-7.5Z","clip-rule","evenodd"],[1,"absolute","inset-x-0","bottom-0","p-2","bg-gray-100","dark:bg-gray-700","border-t","border-gray-200","dark:border-gray-700","flex","flex-wrap","gap-1.5","justify-center","z-20","rounded-b-lg"],["title","View Details",1,"flex-1","text-xs","min-w-[70px]","flex","items-center","justify-center","p-1.5","bg-cyan-500","text-white","rounded-md","hover:bg-cyan-600","transition-colors",3,"click"],["stroke-linecap","round","stroke-linejoin","round","d","M2.036 12.322a1.012 1.012 0 0 1 0-.639C3.423 7.51 7.36 4.5 12 4.5c4.638 0 8.573 3.007 9.963 7.178.07.207.07.431 0 .639C20.577 16.49 16.64 19.5 12 19.5c-4.638 0-8.573-3.007-9.963-7.178Z"],["stroke-linecap","round","stroke-linejoin","round","d","M15 12a3 3 0 1 1-6 0 3 3 0 0 1 6 0Z"],["title","Start Workout",1,"flex-1","text-xs","min-w-[70px]","flex","items-center","justify-center","p-1.5","bg-green-500","text-white","rounded-md","hover:bg-green-600","transition-colors",3,"click"],["title","Edit Routine",1,"flex-1","text-xs","min-w-[70px]","flex","items-center","justify-center","p-1.5","bg-yellow-500","text-white","rounded-md","hover:bg-yellow-600","transition-colors",3,"click"],["title","Delete Routine",1,"flex-1","text-xs","min-w-[70px]","flex","items-center","justify-center","p-1.5","bg-red-500","text-white","rounded-md","hover:bg-red-600","transition-colors",3,"click"],["xmlns","http://www.w3.org/2000/svg","fill","none","viewBox","0 0 24 24","stroke-width","2","stroke","currentColor",1,"w-5","h-5","mr-1"],[1,"text-center","py-12","px-6","bg-white","dark:bg-gray-700","rounded-lg","shadow-md"],["xmlns","http://www.w3.org/2000/svg","fill","none","viewBox","0 0 24 24","stroke-width","1.5","stroke","currentColor",1,"w-16","h-16","mx-auto","text-gray-400","dark:text-gray-200","mb-4"],["stroke-linecap","round","stroke-linejoin","round","d","M3.75 12h16.5m-16.5 3.75h16.5M3.75 19.5h16.5M5.625 4.5h12.75a1.875 1.875 0 0 1 0 3.75H5.625a1.875 1.875 0 0 1 0-3.75Z"],[1,"text-xl","font-semibold","text-gray-700","dark:text-gray-300","mb-2"],[1,"text-gray-500","dark:text-gray-400","mb-6"],["class","bg-primary hover:bg-primary-dark text-white font-semibold py-2 px-6 rounded-md shadow-md hover:shadow-lg transition-all duration-300 focus:outline-none focus:ring-2 focus:ring-primary-light focus:ring-opacity-75",3,"click",4,"ngIf"],[1,"bg-primary","hover:bg-primary-dark","text-white","font-semibold","py-2","px-6","rounded-md","shadow-md","hover:shadow-lg","transition-all","duration-300","focus:outline-none","focus:ring-2","focus:ring-primary-light","focus:ring-opacity-75",3,"click"],[1,"text-center","py-10"],["xmlns","http://www.w3.org/2000/svg","fill","none","viewBox","0 0 24 24",1,"animate-spin","h-8","w-8","text-primary","dark:text-primary-light","mx-auto"],["cx","12","cy","12","r","10","stroke","currentColor","stroke-width","4",1,"opacity-25"],["fill","currentColor","d","M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z",1,"opacity-75"],[1,"text-lg","text-gray-600","dark:text-gray-400","mt-3"]],template:function(e,o){if(e&1){let n=ke();I(0,"div",2)(1,"header",3)(2,"h1",4),O(3,"My Routines"),E(),I(4,"button",5),ie("click",function(){return re(n),oe(o.toggleFilterAccordion())}),_e(),I(5,"svg",6),pe(6,"path",7),E(),Ge(),I(7,"span",8),O(8,"Toggle Filters"),E()()(),I(9,"button",9),ie("click",function(){return re(n),oe(o.navigateToCreateRoutine())}),_e(),I(10,"svg",10),pe(11,"path",11),E(),O(12," NEW ROUTINE "),E(),Ge(),I(13,"div",12)(14,"div",13)(15,"h2",14),O(16,"Filter Routines"),E(),I(17,"div",15)(18,"div")(19,"label",16),O(20,"Search Name/Desc."),E(),I(21,"input",17),ie("input",function(s){return re(n),oe(o.onRoutineSearchTermChange(s))}),E()(),I(22,"div")(23,"label",18),O(24,"Goal"),E(),I(25,"select",19),ie("change",function(s){return re(n),oe(o.onRoutineGoalChange(s))}),I(26,"option",20),O(27,"Any Goal"),E(),ae(28,uL,3,4,"option",21),E()(),I(29,"div")(30,"label",22),O(31,"Targets Muscle"),E(),I(32,"select",23),ie("change",function(s){return re(n),oe(o.onRoutineMuscleGroupChange(s))}),I(33,"option",20),O(34,"Any Muscle Group"),E(),ae(35,cL,3,4,"option",21),E()()(),I(36,"div",24)(37,"button",25),ie("click",function(){return re(n),oe(o.clearRoutineFilters())}),_e(),I(38,"svg",26),pe(39,"path",27),E(),O(40," Clear Routine Filters "),E(),ae(41,dL,6,2,"div",28),E()()(),ae(42,kL,4,2,"div",29),pt(43,"async"),ae(44,IL,6,0,"ng-template",null,0,Xo),Ge(),I(46,"button",30),ie("click",function(){return re(n),oe(o.startKB())}),pe(47,"img",31),O(48," START KB "),E()()}if(e&2){let n=jo(45);D(5),Po("rotate-180",o.isFilterAccordionOpen()),D(8),Qc("max-height",o.isFilterAccordionOpen()?"1000px":"0px"),Po("mb-6",o.isFilterAccordionOpen()),D(8),B("value",o.routineSearchTerm()),D(4),B("value",o.selectedRoutineGoal()||""),D(3),B("ngForOf",o.uniqueRoutineGoals()),D(4),B("value",o.selectedRoutineMuscleGroup()||""),D(3),B("ngForOf",o.uniqueRoutineMuscleGroups()),D(6),B("ngIf",o.allRoutinesForList().length>0),D(),B("ngIf",Vt(43,15,o.routines$))("ngIfElse",n),D(5),B("src",o.getIconPath("kettlebell"),fd)}},dependencies:[vo,Yo,bo,iS,ma,fa],encapsulation:2,data:{animation:[W0("slideInOutActions",[Jc("void",Zc({height:"0px",opacity:0,overflow:"hidden",paddingTop:"0",paddingBottom:"0",marginTop:"0",marginBottom:"0"})),Jc("*",Zc({height:"*",opacity:1,overflow:"hidden",paddingTop:"0.5rem",paddingBottom:"0.5rem"})),xd("void <=> *",gd("200ms ease-in-out"))]),W0("dropdownMenu",[Jc("void",Zc({opacity:0,transform:"scale(0.75) translateY(-10px)",transformOrigin:"top right"})),Jc("*",Zc({opacity:1,transform:"scale(1) translateY(0)",transformOrigin:"top right"})),xd("void => *",[gd("150ms cubic-bezier(0.25, 0.8, 0.25, 1)")]),xd("* => void",[gd("100ms cubic-bezier(0.25, 0.8, 0.25, 1)")])])]}})};var TL=["setRepsInput"],EL=["expandedSetElement"],Dd=(r,t)=>({"border-red-500 dark:border-red-400":r,"border-gray-300 dark:border-gray-500":t}),NL=r=>({"superset-spacing":r}),RL=(r,t)=>({"absolute top-1 right-1 sm:static":r,"absolute top-2 right-2":t}),$L=(r,t)=>({"text-m":r,"text-lg":t}),PL=(r,t)=>({"sm:inline sm:mr-1":r,"block text-xs leading-tight":t}),DL=(r,t)=>({"border-b border-orange-300 dark:border-orange-600":r,"border-b border-gray-200 dark:border-gray-600":t}),kS=()=>["warmup","dropset","failure","amrap","myorep","restpause"],AL=(r,t)=>({"bg-gray-50 dark:bg-gray-700/50 text-gray-800 dark:text-gray-200":r,"cursor-default":t}),FL=r=>({"bg-gray-100 dark:bg-gray-800/50":r});function OL(r,t){if(r&1&&(I(0,"div",18),O(1),E()),r&2){let e=L();D(),$e(" ",e.errorMessage(),`
`)}}function LL(r,t){if(r&1){let e=ke();I(0,"button",27),ie("click",function(){re(e);let n=L(2);return oe(n.enableEditMode())}),_e(),I(1,"svg",25),pe(2,"path",28),E(),O(3," EDIT "),E()}}function ML(r,t){if(r&1){let e=ke();I(0,"div",19)(1,"button",20),ie("click",function(){re(e);let n=L();return oe(n.startCurrentWorkout())}),_e(),I(2,"svg",21),pe(3,"path",22),E(),O(4," START "),E(),ae(5,LL,4,0,"button",23),Ge(),I(6,"button",24),ie("click",function(){re(e);let n=L();return oe(n.deleteCurrentRoutine())}),_e(),I(7,"svg",25),pe(8,"path",26),E(),O(9," DELETE "),E()()}if(r&2){let e=L();D(5),B("ngIf",e.isViewMode)}}function BL(r,t){r&1&&(I(0,"span"),O(1,"Routine name is required."),E())}function VL(r,t){if(r&1&&(I(0,"div",37),ae(1,BL,2,0,"span",13),E()),r&2){let e,o=L(2);D(),B("ngIf",(e=o.builderForm.get("name"))==null||e.errors==null?null:e.errors.required)}}function WL(r,t){if(r&1&&(I(0,"option",38),O(1),E()),r&2){let e=t.$implicit;B("value",e.value),D(),$e("",e.label," ")}}function zL(r,t){if(r&1&&(Ro(0),I(1,"div")(2,"label",29),O(3,"Routine Name"),E(),pe(4,"input",30),ae(5,VL,2,1,"div",31),E(),I(6,"div")(7,"label",32),O(8,"Description (Optional)"),E(),pe(9,"textarea",33),E(),I(10,"div")(11,"label",34),O(12,"Primary Goal"),E(),I(13,"select",35),ae(14,WL,2,2,"option",36),E()(),$o()),r&2){let e,o,n=L();D(4),B("ngClass",xo(3,Dd,((e=n.builderForm.get("name"))==null?null:e.invalid)&&((e=n.builderForm.get("name"))==null?null:e.touched),!((e=n.builderForm.get("name"))!=null&&e.invalid&&((e=n.builderForm.get("name"))!=null&&e.touched)))),D(),B("ngIf",((o=n.builderForm.get("name"))==null?null:o.invalid)&&(((o=n.builderForm.get("name"))==null?null:o.dirty)||((o=n.builderForm.get("name"))==null?null:o.touched))),D(9),B("ngForOf",n.routineGoals)}}function UL(r,t){r&1&&(I(0,"span"),O(1,"Date is required."),E())}function GL(r,t){if(r&1&&(I(0,"div",37),ae(1,UL,2,0,"span",13),E()),r&2){let e,o=L(2);D(),B("ngIf",(e=o.builderForm.get("workoutDate"))==null||e.errors==null?null:e.errors.required)}}function HL(r,t){r&1&&(I(0,"span"),O(1,"Start time is required."),E())}function KL(r,t){if(r&1&&(I(0,"div",37),ae(1,HL,2,0,"span",13),E()),r&2){let e,o=L(2);D(),B("ngIf",(e=o.builderForm.get("startTime"))==null||e.errors==null?null:e.errors.required)}}function qL(r,t){r&1&&(I(0,"span"),O(1,"Min duration is 1."),E())}function jL(r,t){if(r&1&&(I(0,"div",37),ae(1,qL,2,0,"span",13),E()),r&2){let e,o=L(2);D(),B("ngIf",(e=o.builderForm.get("durationMinutes"))==null||e.errors==null?null:e.errors.min)}}function XL(r,t){if(r&1&&(I(0,"option",38),O(1),E()),r&2){let e=t.$implicit;B("value",e.id),D(),We(e.name)}}function YL(r,t){if(r&1&&(Ro(0),I(1,"div",39)(2,"div")(3,"label",40),O(4,"Workout Date"),E(),pe(5,"input",41),ae(6,GL,2,1,"div",31),E(),I(7,"div")(8,"label",42),O(9,"Start Time"),E(),pe(10,"input",43),ae(11,KL,2,1,"div",31),E(),I(12,"div")(13,"label",44),O(14,"Duration (min)"),E(),pe(15,"input",45),ae(16,jL,2,1,"div",31),E()(),I(17,"div")(18,"label",46),O(19,"Workout Title (Optional)"),E(),pe(20,"input",47),E(),I(21,"div")(22,"label",48),O(23,"Based on Routine (Optional)"),E(),I(24,"select",49)(25,"option",50),O(26,"-- Log Ad-hoc Exercises --"),E(),ae(27,XL,2,2,"option",36),E()(),I(28,"div")(29,"label",51),O(30,"Overall Notes (Optional)"),E(),pe(31,"textarea",52),E(),$o()),r&2){let e,o,n,i,s,a,l=L();D(5),B("ngClass",xo(7,Dd,((e=l.builderForm.get("workoutDate"))==null?null:e.invalid)&&((e=l.builderForm.get("workoutDate"))==null?null:e.touched),!((e=l.builderForm.get("workoutDate"))!=null&&e.invalid&&((e=l.builderForm.get("workoutDate"))!=null&&e.touched)))),D(),B("ngIf",((o=l.builderForm.get("workoutDate"))==null?null:o.invalid)&&(((o=l.builderForm.get("workoutDate"))==null?null:o.dirty)||((o=l.builderForm.get("workoutDate"))==null?null:o.touched))),D(4),B("ngClass",xo(10,Dd,((n=l.builderForm.get("startTime"))==null?null:n.invalid)&&((n=l.builderForm.get("startTime"))==null?null:n.touched),!((n=l.builderForm.get("startTime"))!=null&&n.invalid&&((n=l.builderForm.get("startTime"))!=null&&n.touched)))),D(),B("ngIf",((i=l.builderForm.get("startTime"))==null?null:i.invalid)&&(((i=l.builderForm.get("startTime"))==null?null:i.dirty)||((i=l.builderForm.get("startTime"))==null?null:i.touched))),D(4),B("ngClass",xo(13,Dd,((s=l.builderForm.get("durationMinutes"))==null?null:s.invalid)&&((s=l.builderForm.get("durationMinutes"))==null?null:s.touched),!((s=l.builderForm.get("durationMinutes"))!=null&&s.invalid&&((s=l.builderForm.get("durationMinutes"))!=null&&s.touched)))),D(),B("ngIf",((a=l.builderForm.get("durationMinutes"))==null?null:a.invalid)&&(((a=l.builderForm.get("durationMinutes"))==null?null:a.dirty)||((a=l.builderForm.get("durationMinutes"))==null?null:a.touched))),D(11),B("ngForOf",l.availableRoutines)}}function QL(r,t){if(r&1){let e=ke();I(0,"button",61),ie("click",function(){re(e);let n=L(2);return oe(n.openExerciseSelectionModal())}),O(1," + Add Exercise "),E()}}function ZL(r,t){if(r&1){let e=ke();I(0,"button",77),ie("click",function(){re(e);let n=L(5);return oe(n.groupSelectedAsSuperset())}),O(1),E()}if(r&2){let e=L(5);B("disabled",e.isViewMode),D(),$e(" Group Superset (",e.selectedExerciseIndicesForSuperset().length,") ")}}function JL(r,t){if(r&1){let e=ke();I(0,"button",78),ie("click",function(){re(e);let n=L(2).index,i=L(3);return oe(i.ungroupSuperset(n))}),O(1),E()}if(r&2){let e=L(5);B("disabled",e.isViewMode),D(),$e(" Ungroup Superset (",e.selectedExerciseIndicesForSuperset().length,") ")}}function e4(r,t){if(r&1&&(I(0,"div",74),ae(1,ZL,2,2,"button",75)(2,JL,2,2,"button",76),E()),r&2){let e=L(4);D(),B("ngIf",!e.canUngroupSelectedExercises()),D(),B("ngIf",e.canUngroupSelectedExercises())}}function t4(r,t){if(r&1&&(I(0,"div",79),_e(),I(1,"svg",80),pe(2,"path",81),E()()),r&2){let e=L(4);B("ngClass",xo(1,RL,e.isCompactView,!e.isCompactView&&(e.mode!=="routineBuilder"||!e.isEditMode||e.isViewMode)))}}function r4(r,t){if(r&1){let e=ke();I(0,"input",82),ie("change",function(n){re(e);let i=L().index,s=L(3);return oe(s.toggleExerciseSelectionForSuperset(i,n))}),E()}if(r&2){let e=L().index,o=L(3);B("id","superset-select-"+e)("checked",o.selectedExerciseIndicesForSuperset().includes(e))("disabled",o.isViewMode)}}function o4(r,t){if(r&1&&(I(0,"span",88),O(1),E()),r&2){let e,o,n=L(2),i=n.$implicit,s=n.index,a=L(3);B("ngClass",xo(3,PL,!a.isCompactView&&((e=a.expandedSetPath())==null?null:e.exerciseIndex)===s,a.isCompactView&&((e=a.expandedSetPath())==null?null:e.exerciseIndex)!==s)),D(),Gt(" Superset (",(((o=i.get("supersetOrder"))==null?null:o.value)??0)+1," of ",(o=i.get("supersetSize"))==null?null:o.value,") ")}}function n4(r,t){if(r&1&&(I(0,"div",89),O(1),E()),r&2){let e,o=L(2).$implicit;D(),Gt(" ",((e=o.get("rounds"))==null?null:e.value)||1," ",(((e=o.get("rounds"))==null?null:e.value)||1)===1?"round":"rounds"," ")}}function i4(r,t){if(r&1&&(I(0,"div",90),O(1),E()),r&2){let e=L(2).$implicit,o=L(3);D(),Gt(" ",o.getSetsFormArray(e).controls.length," ",o.getSetsFormArray(e).controls.length===1?"set":"sets"," ")}}function s4(r,t){if(r&1&&(I(0,"div",83)(1,"h3",84),ae(2,o4,2,6,"span",85),O(3),E(),ae(4,n4,2,2,"div",86)(5,i4,2,2,"div",87),E()),r&2){let e,o,n,i,s,a=L(),l=a.$implicit,u=a.index,c=L(3);D(),B("ngClass",xo(5,$L,c.isCompactView&&((e=c.expandedSetPath())==null?null:e.exerciseIndex)!==u,!c.isCompactView&&((e=c.expandedSetPath())==null?null:e.exerciseIndex)===u)),D(),B("ngIf",c.mode==="routineBuilder"&&((o=l.get("supersetId"))==null?null:o.value)),D(),$e(" ",((n=l.get("exerciseName"))==null?null:n.value)||"Select Exercise"," "),D(),B("ngIf",((i=l.get("supersetId"))==null?null:i.value)&&c.getSetsFormArray(l).controls.length>0),D(),B("ngIf",(c.isCompactView||!c.isCompactView&&((s=c.expandedSetPath())==null?null:s.exerciseIndex)!==u)&&c.getSetsFormArray(l).controls.length>0)}}function a4(r,t){if(r&1){let e=ke();I(0,"div",91)(1,"button",92),ie("click",function(n){re(e);let i=L().index;return L(3).removeExercise(i),oe(n.stopPropagation())}),_e(),I(2,"svg",93),pe(3,"rect",94)(4,"path",95),E()()()}}function l4(r,t){if(r&1&&(I(0,"span",108),O(1),E()),r&2){let e,o=L(2).$implicit;D(),Gt(" Superset (",(((e=o.get("supersetOrder"))==null?null:e.value)??0)+1," of ",(e=o.get("supersetSize"))==null?null:e.value,") ")}}function u4(r,t){if(r&1){let e=ke();I(0,"div",109)(1,"label",110),O(2,"Rounds:"),E(),I(3,"input",111),ie("change",function(){let n;re(e);let i=L(2),s=i.$implicit,a=i.index,l=L(3);return oe(l.syncSupersetRounds((n=s.get("supersetId"))==null?null:n.value,(n=s.get("rounds"))==null?null:n.value,a))}),E()()}if(r&2){let e,o=L(2),n=o.$implicit,i=o.index,s=L(3);D(),B("for","rounds-"+i),D(2),B("id","rounds-"+i)("readonly",((e=n.get("supersetId"))==null?null:e.value)&&(((e=n.get("supersetOrder"))==null?null:e.value)??0)>0||s.isViewMode)}}function c4(r,t){if(r&1){let e=ke();I(0,"button",112),ie("click",function(){re(e);let n=L(2).index,i=L(3);return oe(i.removeExercise(n))}),_e(),I(1,"svg",113),pe(2,"rect",94)(3,"path",95),E(),O(4," Remove "),E()}}function p4(r,t){if(r&1){let e=ke();I(0,"button",114),ie("click",function(){re(e);let n=L(2).index,i=L(3);return oe(i.ungroupSuperset(n))}),_e(),I(1,"svg",115),pe(2,"path",116),E(),O(3," Ungroup "),E()}if(r&2){let e=L(5);B("disabled",e.isViewMode)}}function d4(r,t){if(r&1){let e=ke();I(0,"button",124),ie("click",function(n){re(e);let i=L(3),s=i.$implicit,a=i.index;return L(3).addSet(s,a),oe(n.stopPropagation())}),O(1," + Add Set "),E()}}function m4(r,t){if(r&1&&(I(0,"div",125)(1,"div",126),O(2,"#"),E(),I(3,"div",127),O(4,"Type"),E(),I(5,"div",128),O(6),E(),I(7,"div",127),O(8),E(),I(9,"div",126),O(10),E(),I(11,"div",128),O(12),E(),I(13,"div",126),O(14),E(),pe(15,"div",129),E()),r&2){let e=L(6);D(6),We(e.mode==="manualLogEntry"?"Reps Ach.":"Reps"),D(2),Gt("",e.mode==="manualLogEntry"?"Wt Used":"Weight"," (",e.unitsService.getUnitLabel(),")"),D(2),We(e.mode==="manualLogEntry"?"Time Perf.":"Time"),D(2),We(e.mode==="routineBuilder"?"Rest":"Notes"),D(2),We(e.mode==="routineBuilder"?"Tempo":"")}}function f4(r,t){if(r&1&&(Ro(0),O(1),$o()),r&2){let e,o=L(2).$implicit;D(),$e("",(e=o.get("restAfterSet"))==null?null:e.value,"s")}}function h4(r,t){if(r&1&&(Ro(0),O(1),$o()),r&2){let e,o=L(2).$implicit;D(),We(((e=o.get("notes"))==null?null:e.value)||"-")}}function g4(r,t){if(r&1&&(Ro(0),O(1),$o()),r&2){let e,o=L(2).$implicit;D(),We(((e=o.get("tempo"))==null?null:e.value)||"-")}}function x4(r,t){if(r&1){let e=ke();I(0,"div",141)(1,"button",142),ie("click",function(n){re(e);let i=L(2).index,s=L(3),a=s.$implicit,l=s.index;return L(3).removeSet(a,l,i),oe(n.stopPropagation())}),_e(),I(2,"svg",93),pe(3,"rect",94)(4,"path",95),E()()()}}function y4(r,t){r&1&&pe(0,"div",129)}function b4(r,t){if(r&1){let e=ke();I(0,"div",133),ie("click",function(n){re(e);let i=L().index,s=L(3).index,a=L(3);return oe(a.toggleSetExpansion(s,i,n))}),I(1,"div",134),O(2),E(),I(3,"div",135),pt(4,"titlecase"),O(5),pt(6,"titlecase"),E(),I(7,"div",136),O(8),E(),I(9,"div",136),O(10),pt(11,"weightUnit"),E(),I(12,"div",137),O(13),E(),I(14,"div",135),ae(15,f4,2,1,"ng-container",13)(16,h4,2,1,"ng-container",13),E(),I(17,"div",138),ae(18,g4,2,1,"ng-container",13),E(),ae(19,x4,5,0,"div",139)(20,y4,1,0,"div",140),E()}if(r&2){let e,o,n,i,s,a,l,u,c=L(),p=c.$implicit,d=c.index,m=L(6);B("ngClass",xo(22,AL,!M0(21,kS).includes(((e=p.get("type"))==null?null:e.value)??"")&&!m.isViewMode,m.isViewMode)),D(2),We(d+1),D(),B("title",Vt(4,14,(o=p.get("type"))==null?null:o.value)),D(2),We(Vt(6,16,(n=p.get("type"))==null?null:n.value)||"Standard"),D(3),We((i=p.get(m.mode==="manualLogEntry"?"repsAchieved":"reps"))==null?null:i.value??"-"),D(2),We(yo(11,18,(s=p.get(m.mode==="manualLogEntry"?"weightUsed":"weight"))==null?null:s.value,"1.0-2")),D(3),We((a=p.get(m.mode==="manualLogEntry"?"durationPerformed":"duration"))!=null&&a.value?((a=p.get(m.mode==="manualLogEntry"?"durationPerformed":"duration"))==null?null:a.value)+"s":"-"),D(),B("title",m.mode==="routineBuilder"?((l=p.get("restAfterSet"))==null?null:l.value)+"s":(l=p.get("notes"))==null?null:l.value),D(),B("ngIf",m.mode==="routineBuilder"),D(),B("ngIf",m.mode==="manualLogEntry"),D(),B("title",(u=p.get("tempo"))==null?null:u.value),D(),B("ngIf",m.mode==="routineBuilder"),D(),B("ngIf",!m.isViewMode),D(),B("ngIf",m.isViewMode)}}function v4(r,t){if(r&1&&(I(0,"option",38),O(1),E()),r&2){let e=t.$implicit;B("value",e.value),D(),We(e.label)}}function S4(r,t){if(r&1&&(I(0,"div")(1,"label",146),O(2,"Tempo"),E(),pe(3,"input",157),E()),r&2){let e=L(2).index,o=L(3).index,n=L(3);D(),B("for","tempo-exp-"+o+"-"+e),D(2),B("id","tempo-exp-"+o+"-"+e)("readonly",n.isViewMode)}}function w4(r,t){if(r&1&&(I(0,"div")(1,"label",146),O(2,"Rest (s)"),E(),pe(3,"input",158),E()),r&2){let e=L(2).index,o=L(3).index,n=L(3);D(),B("for","rest-exp-"+o+"-"+e),D(2),B("id","rest-exp-"+o+"-"+e)("readonly",n.isViewMode)}}function C4(r,t){if(r&1){let e=ke();I(0,"div",143,0)(2,"div",144)(3,"div",145)(4,"label",146),O(5,"Set Type"),E(),I(6,"select",147),ae(7,v4,2,2,"option",36),E()(),I(8,"div")(9,"label",146),O(10),E(),pe(11,"input",148),E(),I(12,"div")(13,"label",146),O(14),E(),pe(15,"input",149),E(),I(16,"div")(17,"label",146),O(18),E(),pe(19,"input",150),E(),ae(20,S4,4,3,"div",13)(21,w4,4,3,"div",13),I(22,"div",151)(23,"label",146),O(24,"Set Notes"),E(),pe(25,"input",152),E()(),I(26,"div",153)(27,"button",154),ie("click",function(n){re(e);let i=L(7);return oe(i.collapseExpandedSet(!1,n))}),_e(),I(28,"svg",155),pe(29,"path",156),E()()()()}if(r&2){let e,o=L(),n=o.$implicit,i=o.index,s=L(3).index,a=L(3);B("ngClass",rs(27,FL,!M0(26,kS).includes(((e=n.get("type"))==null?null:e.value)??""))),D(4),B("for","setType-exp-"+s+"-"+i),D(2),B("id","setType-exp-"+s+"-"+i)("disabled",a.isViewMode),D(),B("ngForOf",a.availableSetTypes),D(2),B("for","reps-exp-"+s+"-"+i),D(),$e("Reps ",a.mode==="manualLogEntry"?"(Achieved)":""),D(),B("id","reps-exp-"+s+"-"+i)("formControlName",a.mode==="manualLogEntry"?"repsAchieved":"reps")("readonly",a.isViewMode),D(2),B("for","weight-exp-"+s+"-"+i),D(),Gt("Weight (",a.unitsService.getUnitLabel(),") ",a.mode==="manualLogEntry"?"(Used)":""),D(),B("id","weight-exp-"+s+"-"+i)("formControlName",a.mode==="manualLogEntry"?"weightUsed":"weight")("readonly",a.isViewMode),D(2),B("for","duration-exp-"+s+"-"+i),D(),$e("Time (s) ",a.mode==="manualLogEntry"?"(Performed)":""),D(),B("id","duration-exp-"+s+"-"+i)("formControlName",a.mode==="manualLogEntry"?"durationPerformed":"duration")("readonly",a.isViewMode),D(),B("ngIf",a.mode==="routineBuilder"),D(),B("ngIf",a.mode==="routineBuilder"),D(2),B("for","setNotes-exp-"+s+"-"+i),D(2),B("id","setNotes-exp-"+s+"-"+i)("readonly",a.isViewMode)}}function _4(r,t){if(r&1&&(I(0,"div",130),ae(1,b4,21,25,"div",131)(2,C4,30,29,"div",132),E()),r&2){let e=t.index,o=L(3).index,n=L(3);B("formGroupName",e),D(),B("ngIf",!n.isSetExpanded(o,e)),D(),B("ngIf",n.isSetExpanded(o,e))}}function k4(r,t){if(r&1&&(I(0,"div",117)(1,"div",118)(2,"h4",119),O(3,"Sets:"),E(),ae(4,d4,2,0,"button",120),E(),I(5,"div",121),ae(6,m4,16,6,"div",122)(7,_4,3,3,"div",123),E()()),r&2){let e,o=L(2),n=o.$implicit,i=o.index,s=L(3);D(4),B("ngIf",!s.isViewMode),D(2),B("ngIf",s.getSetsFormArray(n).controls.length>0&&((e=s.expandedSetPath())==null?null:e.exerciseIndex)!==i),D(),B("ngForOf",s.getSetsFormArray(n).controls)}}function I4(r,t){if(r&1&&(I(0,"div",96)(1,"div",97)(2,"div",98)(3,"h3",99),ae(4,l4,2,2,"span",100),O(5),E()(),I(6,"div",101),ae(7,u4,4,3,"div",102)(8,c4,5,0,"button",103)(9,p4,4,1,"button",104),E()(),I(10,"div")(11,"label",105),O(12),E(),pe(13,"textarea",106),E(),ae(14,k4,8,3,"div",107),E()),r&2){let e,o,n,i,s,a=L(),l=a.$implicit,u=a.index,c=L(3);D(),B("ngClass",xo(11,DL,c.mode==="routineBuilder"&&((e=l.get("supersetId"))==null?null:e.value)&&(((e=l.get("supersetOrder"))==null?null:e.value)??-1)<(((e=l.get("supersetSize"))==null?null:e.value)??0)-1,!(c.mode==="routineBuilder"&&((e=l.get("supersetId"))!=null&&e.value))||c.mode==="routineBuilder"&&(((e=l.get("supersetOrder"))==null?null:e.value)??-1)===(((e=l.get("supersetSize"))==null?null:e.value)??0)-1)),D(3),B("ngIf",c.mode==="routineBuilder"&&((o=l.get("supersetId"))==null?null:o.value)),D(),$e(" ",((n=l.get("exerciseName"))==null?null:n.value)||"Select Exercise"," "),D(2),B("ngIf",c.mode==="routineBuilder"&&((i=l.get("supersetId"))==null?null:i.value)),D(),B("ngIf",!c.isViewMode),D(),B("ngIf",c.mode==="routineBuilder"&&(c.isEditMode||c.isNewMode)&&((s=l.get("supersetId"))==null?null:s.value)),D(2),B("for","exerciseNotes-"+u),D(),$e(" ",c.mode==="routineBuilder"?"Exercise Notes (Optional)":"Notes for this Logged Exercise (Optional)"," "),D(),B("id","exerciseNotes-"+u)("readonly",c.isViewMode),D(),B("ngIf",!c.isCompactView)}}function T4(r,t){if(r&1){let e=ke();I(0,"button",159),ie("click",function(n){re(e);let i=L(4);return oe(i.collapseExpandedSet(!0,n))}),_e(),I(1,"svg",155),pe(2,"path",156),E()()}}function E4(r,t){if(r&1){let e=ke();Ro(0),I(1,"div",64),ie("click",function(n){let i=re(e).index,s=L(3);return oe(s.toggleSetExpansion(i,0,n))}),ae(2,e4,3,2,"div",65),I(3,"div",66)(4,"div",67),ae(5,t4,3,4,"div",68)(6,r4,1,3,"input",69)(7,s4,6,8,"div",70)(8,a4,5,0,"div",71),E(),ae(9,I4,15,14,"div",72)(10,T4,3,0,"button",73),E()(),$o()}if(r&2){let e,o,n,i,s=t.$implicit,a=t.index,l=L(3);D(),B("ngClass",rs(12,NL,l.isSupersetSpacing(a))),D(),B("ngIf",l.mode==="routineBuilder"&&(l.isEditMode||l.isNewMode)&&l.selectedExerciseIndicesForSuperset().length>=2&&a===l.firstSelectedExerciseIndexForSuperset),D(),B("cdkDragDisabled",l.mode!=="routineBuilder"||l.isViewMode||!l.isEditMode)("cdkDragData",s)("formGroupName",a)("ngClass",l.getExerciseCardClasses(s,a)),D(2),B("ngIf",l.mode==="routineBuilder"&&l.isEditMode&&!l.isViewMode),D(),B("ngIf",l.mode==="routineBuilder"&&(l.isEditMode||l.isNewMode)&&!l.isViewMode),D(),B("ngIf",l.isCompactView||!l.isCompactView&&((e=l.expandedSetPath())==null?null:e.exerciseIndex)!==a),D(),B("ngIf",(l.isCompactView||!l.isCompactView&&((o=l.expandedSetPath())==null?null:o.exerciseIndex)!==a)&&!l.isViewMode),D(),B("ngIf",((n=l.expandedSetPath())==null?null:n.exerciseIndex)===a),D(),B("ngIf",!l.isCompactView&&((i=l.expandedSetPath())==null?null:i.exerciseIndex)===a)}}function N4(r,t){if(r&1){let e=ke();I(0,"div",62),ie("cdkDropListDropped",function(n){re(e);let i=L(2);return oe(i.onExerciseDrop(n))}),ae(1,E4,11,14,"ng-container",63),E()}if(r&2){let e=L(2);B("cdkDropListData",e.exercisesFormArray.controls)("cdkDropListDisabled",e.mode!=="routineBuilder"||e.isViewMode),D(),B("ngForOf",e.exercisesFormArray.controls)}}function R4(r,t){if(r&1){let e=ke();I(0,"div",160)(1,"p",161),O(2,"No exercises added yet."),E(),I(3,"button",162),ie("click",function(){re(e);let n=L(2);return oe(n.openExerciseSelectionModal())}),O(4," + Add First Exercise "),E()()}}function $4(r,t){if(r&1){let e=ke();I(0,"div",160)(1,"p",161),O(2,"Select a routine or add exercises manually to log."),E(),I(3,"button",162),ie("click",function(){re(e);let n=L(2);return oe(n.openExerciseSelectionModal())}),O(4," + Add First Exercise to Log "),E()()}}function P4(r,t){r&1&&(I(0,"div",163),O(1," The selected routine has no exercises. Add them manually or edit the routine template. "),E())}function D4(r,t){if(r&1){let e=ke();I(0,"div",164)(1,"button",165),ie("click",function(){re(e);let n=L(2);return oe(n.openExerciseSelectionModal())}),_e(),I(2,"svg",166),pe(3,"path",167),E(),O(4," Add Another Exercise "),E()()}}function A4(r,t){if(r&1&&(I(0,"section",53)(1,"div",54)(2,"h2",55),O(3),E(),ae(4,QL,2,0,"button",56),E(),ae(5,N4,2,3,"div",57)(6,R4,5,0,"div",58)(7,$4,5,0,"div",58)(8,P4,2,0,"div",59)(9,D4,5,0,"div",60),E()),r&2){let e,o,n,i=L();D(3),We(i.mode==="routineBuilder"?"Exercises":"Logged Exercises"),D(),B("ngIf",!i.isViewMode&&(!i.exercisesFormArray.controls||i.exercisesFormArray.controls.length>0)),D(),B("ngIf",i.exercisesFormArray.length>0),D(),B("ngIf",!i.isViewMode&&i.exercisesFormArray.length===0&&i.mode==="routineBuilder"&&((e=i.builderForm.get("goal"))==null?null:e.value)!=="rest"),D(),B("ngIf",i.mode==="manualLogEntry"&&i.exercisesFormArray.length===0&&!((o=i.builderForm.get("routineIdForLog"))!=null&&o.value)),D(),B("ngIf",i.mode==="manualLogEntry"&&i.exercisesFormArray.length===0&&((n=i.builderForm.get("routineIdForLog"))==null?null:n.value)),D(),B("ngIf",!i.isViewMode&&i.exercisesFormArray.length>0)}}function F4(r,t){r&1&&(I(0,"section",168)(1,"p",169),O(2,"This is a rest day routine. No exercises are needed."),E()())}function O4(r,t){if(r&1&&(I(0,"div",170)(1,"button",171),O(2," Cancel "),E(),I(3,"button",172),O(4),E()()),r&2){let e,o=L();D(),B("routerLink",o.mode==="routineBuilder"?"/workout":"/history/list"),D(2),B("disabled",o.builderForm.invalid||o.exercisesFormArray.length===0&&!(o.mode==="routineBuilder"&&((e=o.builderForm.get("goal"))==null?null:e.value)==="rest")),D(),$e(" ",o.mode==="routineBuilder"?o.isNewMode?"CREATE ROUTINE":"SAVE CHANGES":o.isNewMode?"Log Workout":"Save Log Changes"," ")}}function L4(r,t){if(r&1){let e=ke();I(0,"li",190),ie("click",function(){let n=re(e).$implicit,i=L(2);return oe(i.mode==="routineBuilder"?i.selectExercise(n):i.selectExerciseForLog(n))}),I(1,"div")(2,"span",191),O(3),E(),I(4,"span",192),O(5),pt(6,"titlecase"),pt(7,"titlecase"),E()(),_e(),I(8,"svg",193),pe(9,"path",194),E()()}if(r&2){let e=t.$implicit;D(3),We(e.name),D(2),Gt("",Vt(6,3,e.category)," - ",Vt(7,5,e.primaryMuscleGroup))}}function M4(r,t){r&1&&(I(0,"li",195),O(1,"No exercises match your search or library is empty."),E())}function B4(r,t){if(r&1){let e=ke();I(0,"div",173),ie("click",function(){re(e);let n=L();return oe(n.closeExerciseSelectionModal())}),I(1,"div",174),ie("click",function(n){return re(e),oe(n.stopPropagation())}),I(2,"div",175)(3,"div",176)(4,"h3",177),O(5,"Add Exercise"),E(),I(6,"button",178),ie("click",function(){re(e);let n=L();return oe(n.closeExerciseSelectionModal())}),_e(),I(7,"svg",179),pe(8,"path",180),E()()(),Ge(),I(9,"div",181)(10,"input",182),ie("ngModelChange",function(n){re(e);let i=L();return oe(i.modalSearchTerm.set(n))}),E()(),I(11,"div",183)(12,"ul",117),ae(13,L4,10,7,"li",184)(14,M4,2,0,"li",185),E()(),I(15,"div",186)(16,"button",187),ie("click",function(){re(e);let n=L();return oe(n.handleTrulyCustomExerciseEntry())}),O(17," Or, create a new custom exercise entry... "),E()()(),I(18,"div",188)(19,"button",189),ie("click",function(){re(e);let n=L();return oe(n.closeExerciseSelectionModal())}),O(20,"Cancel"),E()()()()}if(r&2){let e=L();D(10),B("ngModel",e.modalSearchTerm()),D(3),B("ngForOf",e.filteredAvailableExercises()),D(),B("ngIf",e.filteredAvailableExercises().length===0)}}var gn=class r{fb=Ve(Td);router=Ve(qn);route=Ve(ha);workoutService=Ve(Sa);exerciseService=Ve(Xn);unitsService=Ve(Ca);spinnerService=Ve(Rd);alertService=Ve(va);toastService=Ve(wa);trackingService=Ve(jn);cdr=Ve(pa);platformId=Ve(ca);setRepsInputs;expandedSetElements;builderForm;mode="routineBuilder";isEditMode=!1;isNewMode=!0;isViewMode=!1;currentRoutineId=null;currentLogId=null;routeSub;initialRoutineIdForLogEdit=void 0;isCompactView=!0;expandedSetPath=De(null);availableSetTypes=[{value:"standard",label:"Standard"},{value:"warmup",label:"Warm-up"},{value:"superset",label:"Superset"},{value:"amrap",label:"AMRAP"},{value:"dropset",label:"Dropset"},{value:"failure",label:"To Failure"},{value:"myorep",label:"Myo-rep"},{value:"restpause",label:"Rest-Pause"},{value:"custom",label:"Custom Type"}];routineGoals=[{value:"hypertrophy",label:"Hypertrophy"},{value:"strength",label:"Strength"},{value:"muscular endurance",label:"Muscular endurance"},{value:"cardiovascular endurance",label:"Cardiovascular endurance"},{value:"fat loss / body composition",label:"Fat loss / body composition"},{value:"mobility & flexibility",label:"Mobility & flexibility"},{value:"power / explosiveness",label:"Power / explosiveness"},{value:"speed & agility",label:"Speed & agility"},{value:"balance & coordination",label:"Balance & coordination"},{value:"skill acquisition",label:"Skill acquisition"},{value:"rehabilitation / injury prevention",label:"Rehabilitation / injury prevention"},{value:"mental health / stress relief",label:"Mental health"},{value:"general health & longevity",label:"General health & longevity"},{value:"sport-specific performance",label:"Sport-specific performance"},{value:"maintenance",label:"Maintenance"},{value:"rest",label:"Rest"},{value:"custom",label:"Custom"}];isExerciseModalOpen=!1;availableExercises=[];availableRoutines=[];modalSearchTerm=De("");filteredAvailableExercises=At(()=>{let t=this.modalSearchTerm().toLowerCase();return t?this.availableExercises.filter(e=>e.name.toLowerCase().includes(t)||e.category.toLowerCase().includes(t)||e.primaryMuscleGroup&&e.primaryMuscleGroup.toLowerCase().includes(t)):this.availableExercises});selectedExerciseIndicesForSuperset=De([]);constructor(){this.builderForm=this.fb.group({name:[""],description:[""],goal:["custom"],workoutDate:[""],startTime:[""],durationMinutes:[60,[mt.min(1)]],overallNotesLog:[""],routineIdForLog:[""],exercises:this.fb.array([])})}ngOnInit(){Ir(this.platformId)&&window.scrollTo(0,0),this.loadAvailableExercises(),this.workoutService.routines$.pipe(kr(1)).subscribe(t=>this.availableRoutines=t),this.routeSub=this.route.data.pipe(ua(t=>{if(this.mode=t.mode||"routineBuilder",this.isNewMode=t.isNew===!0,console.log(`Builder ngOnInit: Mode=${this.mode}, isNewMode=${this.isNewMode}`),this.currentRoutineId=this.route.snapshot.paramMap.get("routineId"),this.currentLogId=this.route.snapshot.paramMap.get("logId"),this.isViewMode=this.mode==="routineBuilder"&&!!this.currentRoutineId&&!this.isNewMode&&this.route.snapshot.routeConfig?.path?.includes("view")||!1,this.isEditMode=!this.isNewMode&&!this.isViewMode,this.configureFormValidatorsAndFieldsForMode(),this.expandedSetPath.set(null),this.exercisesFormArray.clear({emitEvent:!1}),this.builderForm.reset(this.getDefaultFormValuesForMode(),{emitEvent:!1}),this.mode==="routineBuilder"){if(this.currentRoutineId&&(this.isEditMode||this.isViewMode))return this.workoutService.getRoutineById(this.currentRoutineId)}else if(this.mode==="manualLogEntry"){if(this.currentLogId&&this.isEditMode)return this.trackingService.getWorkoutLogById(this.currentLogId);if(this.currentRoutineId&&this.isNewMode)return this.workoutService.getRoutineById(this.currentRoutineId)}return Qi(null)}),Zi(t=>{t?this.mode==="routineBuilder"?this.patchFormWithRoutineData(t):this.mode==="manualLogEntry"&&this.isEditMode&&this.currentLogId?this.patchFormWithLogData(t):this.mode==="manualLogEntry"&&this.isNewMode&&this.currentRoutineId&&this.prefillLogFormFromRoutine(t):!this.isNewMode&&(this.currentRoutineId||this.currentLogId)&&(this.toastService.error("Data not found.",0,"Error"),this.router.navigate([this.mode==="routineBuilder"?"/workout":"/history/list"])),this.isViewMode?this.toggleFormState(!0):this.toggleFormState(!1)})).subscribe(),this.mode==="manualLogEntry"&&this.builderForm.get("routineIdForLog")?.valueChanges.subscribe(t=>{if(this.isEditMode&&t===this.initialRoutineIdForLogEdit&&!this.builderForm.get("routineIdForLog")?.dirty)return;let e=this.availableRoutines.find(o=>o.id===t);e?this.prefillLogFormFromRoutine(e,!1):(this.exercisesFormArray.clear(),this.isEditMode||this.builderForm.get("name")?.setValue("Ad-hoc Workout"))}),this.builderForm.get("goal")?.valueChanges.subscribe(t=>{if(this.mode==="routineBuilder"&&t==="rest"){for(;this.exercisesFormArray.length;)this.exercisesFormArray.removeAt(0);this.exercisesFormArray.clearValidators()}this.exercisesFormArray.updateValueAndValidity()})}getDefaultFormValuesForMode(){if(this.mode==="manualLogEntry"){let t=new Date;return{name:"",description:"",goal:"custom",workoutDate:fr(t,"yyyy-MM-dd"),startTime:fr(t,"HH:mm"),durationMinutes:60,overallNotesLog:"",routineIdForLog:"",exercises:[]}}else return{name:"",description:"",goal:"custom",workoutDate:"",startTime:"",durationMinutes:60,overallNotesLog:"",routineIdForLog:"",exercises:[]}}configureFormValidatorsAndFieldsForMode(){let t=this.builderForm.get("name"),e=this.builderForm.get("goal"),o=this.builderForm.get("workoutDate"),n=this.builderForm.get("startTime"),i=this.builderForm.get("durationMinutes");t?.clearValidators(),e?.clearValidators(),o?.clearValidators(),n?.clearValidators(),i?.clearValidators(),this.mode==="routineBuilder"?(t?.setValidators(mt.required),e?.setValidators(mt.required),this.builderForm.get("exercises")?.setValidators(mt.nullValidator)):(o?.setValidators(mt.required),n?.setValidators(mt.required),i?.setValidators([mt.required,mt.min(1)]),this.builderForm.get("exercises")?.setValidators(mt.required)),this.builderForm.updateValueAndValidity({emitEvent:!1})}toggleFormState(t){t?this.builderForm.disable({emitEvent:!1}):(this.builderForm.enable({emitEvent:!1}),this.mode==="routineBuilder"?(this.builderForm.get("workoutDate")?.disable({emitEvent:!1}),this.builderForm.get("startTime")?.disable({emitEvent:!1}),this.builderForm.get("durationMinutes")?.disable({emitEvent:!1}),this.builderForm.get("overallNotesLog")?.disable({emitEvent:!1}),this.builderForm.get("routineIdForLog")?.disable({emitEvent:!1})):(this.builderForm.get("description")?.disable({emitEvent:!1}),this.builderForm.get("goal")?.disable({emitEvent:!1})),this.exercisesFormArray.controls.forEach(e=>{this.updateRoundsControlability(e)}))}get exercisesFormArray(){return this.builderForm.get("exercises")}getSetsFormArray(t){return t.get("sets")}loadAvailableExercises(){this.exerciseService.getExercises().pipe(kr(1)).subscribe(t=>this.availableExercises=t)}patchFormWithRoutineData(t){this.builderForm.patchValue({name:t.name,description:t.description,goal:t.goal},{emitEvent:!1}),this.exercisesFormArray.clear({emitEvent:!1}),t.exercises.forEach(e=>{this.exercisesFormArray.push(this.createExerciseFormGroup(e,!0,!1),{emitEvent:!1})}),this.builderForm.markAsPristine()}patchFormWithLogData(t){this.initialRoutineIdForLogEdit=t.routineId,this.builderForm.patchValue({name:t.routineName||"Logged Workout",workoutDate:fr(z0(t.date),"yyyy-MM-dd"),startTime:fr(new Date(t.startTime),"HH:mm"),durationMinutes:t.durationMinutes||60,overallNotesLog:t.notes||"",routineIdForLog:t.routineId||""},{emitEvent:!1}),this.exercisesFormArray.clear({emitEvent:!1}),t.exercises.forEach(e=>{this.exercisesFormArray.push(this.createExerciseFormGroupFromLog(e),{emitEvent:!1})}),this.toggleFormState(!1),this.expandedSetPath.set(null),this.builderForm.markAsPristine()}prefillLogFormFromRoutine(t,e=!0){let o={name:`Log: ${t.name}`,routineIdForLog:t.id};if(e){let n=new Date;o.workoutDate=fr(n,"yyyy-MM-dd"),o.startTime=fr(n,"HH:mm"),o.durationMinutes=60}this.builderForm.patchValue(o,{emitEvent:!1}),this.exercisesFormArray.clear({emitEvent:!1}),t.exercises.forEach(n=>{this.exercisesFormArray.push(this.createExerciseFormGroup(n,!1,!0),{emitEvent:!1})}),this.builderForm.markAsDirty()}createExerciseFormGroup(t,e=!1,o=!1){let n=t?.exerciseId?this.availableExercises.find(a=>a.id===t.exerciseId):null,i=t?.sets||[],s=this.fb.group({id:[t?.id||this.workoutService.generateWorkoutExerciseId()],exerciseId:[t?.exerciseId||"",mt.required],exerciseName:[t?.exerciseName||n?.name||"Select Exercise"],notes:[t?.notes||""],sets:this.fb.array(i.map(a=>this.createSetFormGroup(a,o))),supersetId:[e?t?.supersetId:null],supersetOrder:[e?t?.supersetOrder:null],supersetSize:[e?t?.supersetSize:null],rounds:[e?t?.rounds??0:0,[mt.min(0)]]});return e?(s.get("supersetId")?.valueChanges.subscribe(()=>this.updateRoundsControlability(s)),s.get("supersetOrder")?.valueChanges.subscribe(()=>this.updateRoundsControlability(s)),this.updateRoundsControlability(s)):s.get("rounds")?.enable({emitEvent:!1}),s.get("exerciseId")?.valueChanges.subscribe(a=>{let l=this.availableExercises.find(u=>u.id===a);s.get("exerciseName")?.setValue(l?.name||"Unknown Exercise",{emitEvent:!1})}),s}createExerciseFormGroupFromLog(t){return this.fb.group({id:[t.exerciseId||_t()],exerciseId:[t.exerciseId,mt.required],exerciseName:[t.exerciseName,mt.required],notes:[t.notes||""],sets:this.fb.array(t.sets.map(e=>this.createSetFormGroup(e,!0))),supersetId:[null],supersetOrder:[null],supersetSize:[null],rounds:[0]})}createSetFormGroup(t,e=!1){let o,n,i,s,a,l,u,c=_t(),p,d=new Date().toISOString();if(t)if(c=t.id||c,"repsAchieved"in t){let f=t;o=f.repsAchieved,n=f.weightUsed,i=f.durationPerformed,s=f.notes,a=f.type||"standard",p=f.plannedSetId,d=f.timestamp,l=f.targetTempo||"",u=60}else{let f=t;o=f.reps,n=f.weight,i=f.duration,s=f.notes,a=f.type||"standard",l=f.tempo,u=f.restAfterSet,p=f.id}else o=null,n=null,i=null,s="",a="standard",l="",u=60;let m={id:[c],type:[a,mt.required],notes:[s||""]};return e?(m.repsAchieved=[o??null,[mt.required,mt.min(0)]],m.weightUsed=[this.unitsService.convertFromKg(n,this.unitsService.currentUnit())??null,[mt.min(0)]],m.durationPerformed=[i??null,[mt.min(0)]],m.plannedSetId=[p],m.timestamp=[d]):(m.reps=[o??null,[mt.min(0)]],m.weight=[this.unitsService.convertFromKg(n,this.unitsService.currentUnit())??null,[mt.min(0)]],m.duration=[i??null,[mt.min(0)]],m.tempo=[l||""],m.restAfterSet=[u??60,[mt.required,mt.min(0)]]),this.fb.group(m)}openExerciseSelectionModal(){this.isViewMode||(this.modalSearchTerm.set(""),this.isExerciseModalOpen=!0)}closeExerciseSelectionModal(){this.isExerciseModalOpen=!1}onModalSearchTermChange(t){let e=t.target;this.modalSearchTerm.set(e.value)}selectExercise(t){let e=this.createExerciseFormGroup({id:this.workoutService.generateWorkoutExerciseId(),exerciseId:t.id,exerciseName:t.name,sets:[{id:this.workoutService.generateExerciseSetId(),type:"standard",reps:8,weight:0,restAfterSet:60,duration:void 0,tempo:"",notes:""}],supersetId:null,supersetOrder:null,supersetSize:null,rounds:0,type:"standard"},!0,!1);this.exercisesFormArray.push(e),this.closeExerciseSelectionModal(),this.toggleSetExpansion(this.exercisesFormArray.length-1,0)}selectExerciseForLog(t){let e={id:this.workoutService.generateWorkoutExerciseId(),exerciseId:t.id,exerciseName:t.name,sets:[{id:this.workoutService.generateExerciseSetId(),type:"standard",reps:8,weight:0,restAfterSet:60,duration:void 0,tempo:"",notes:""}],type:"standard",supersetId:null,supersetOrder:null,supersetSize:null,rounds:0};this.exercisesFormArray.push(this.createExerciseFormGroup(e,!1,!0)),this.closeExerciseSelectionModal()}ngAfterViewInit(){this.expandedSetElements.changes.subscribe(t=>{t.first&&this.expandedSetPath()&&setTimeout(()=>{t.first.nativeElement.scrollIntoView({behavior:"smooth",block:"center"})},0)})}addSet(t,e){if(this.isViewMode)return;let o=this.getSetsFormArray(t),n;if(o.length>0){let s=o.at(o.length-1).value,a=ar({},s);if(delete a.id,this.mode==="manualLogEntry"){let l=t.get("exerciseId")?.value;n=this.createSetFormGroup({id:a.id??this.workoutService.generateExerciseSetId(),exerciseId:l,exerciseName:a.exerciseName,repsAchieved:a.repsAchieved,weightUsed:a.weightUsed,durationPerformed:a.durationPerformed,notes:a.notes,type:a.type,plannedSetId:a.plannedSetId,timestamp:new Date().toISOString(),targetReps:a.targetReps,targetWeight:a.targetWeight,targetDuration:a.targetDuration,targetTempo:a.targetTempo},!0)}else n=this.createSetFormGroup({id:a.id??this.workoutService.generateExerciseSetId(),reps:a.reps,weight:a.weight,duration:a.duration,notes:a.notes,type:a.type,tempo:a.tempo,restAfterSet:a.restAfterSet},!1)}else n=this.createSetFormGroup(void 0,this.mode==="manualLogEntry");o.push(n),this.cdr.detectChanges();let i=o.length-1;this.toggleSetExpansion(e,i)}removeSet(t,e,o,n){if(n?.stopPropagation(),this.isViewMode)return;this.getSetsFormArray(t).removeAt(o);let s=this.expandedSetPath();s&&s.exerciseIndex===e&&s.setIndex===o?this.expandedSetPath.set(null):s&&s.exerciseIndex===e&&s.setIndex>o&&this.expandedSetPath.set({exerciseIndex:e,setIndex:s.setIndex-1})}toggleSetExpansion(t,e,o){if(o?.stopPropagation(),o&&(o.target instanceof HTMLInputElement||o.target instanceof HTMLTextAreaElement||o.target instanceof HTMLSelectElement))return;if(this.isViewMode&&!(this.expandedSetPath()?.exerciseIndex===t&&this.expandedSetPath()?.setIndex===e)){this.expandedSetPath.set({exerciseIndex:t,setIndex:e}),this.isCompactView=!1;return}else if(this.isViewMode){this.expandedSetPath.set(null);return}let n=this.expandedSetPath();if(n?.exerciseIndex===t&&n?.setIndex===e){if(this.expandedSetPath.set(null),!this.isCompactView)return}else this.expandedSetPath.set({exerciseIndex:t,setIndex:e}),this.isCompactView=!1,this.cdr.detectChanges(),setTimeout(()=>{let i=this.expandedSetElements.first?.nativeElement;if(i){let s=i.querySelector('input[type="text"], input[type="number"]');s&&s.focus()}},50)}isSetExpanded(t,e){let o=this.expandedSetPath();return o?.exerciseIndex===t&&o?.setIndex===e}collapseExpandedSet(t=!1,e){this.expandedSetPath.set(null),this.isCompactView=t,e?.stopPropagation()}getFormErrors(t){let e={};return Object.keys(t.controls).forEach(o=>{let n=t.get(o).errors;if(n&&(e[o]=n),t.get(o)instanceof lS||t.get(o)instanceof dS){let i=this.getFormErrors(t.get(o));Object.keys(i).length>0&&(e[o]=i)}}),e}get f(){return this.builderForm.controls}toggleExerciseSelectionForSuperset(t,e){if(this.isViewMode)return;let o=e.target;this.selectedExerciseIndicesForSuperset.update(n=>{let i;return o.checked?i=n.includes(t)?n:[...n,t]:i=n.filter(s=>s!==t),i.sort((s,a)=>s-a)}),this.isCompactView}canGroupSelectedExercises(){let t=this.selectedExerciseIndicesForSuperset();if(t.length<2)return!1;let e=this.exercisesFormArray.at(t[0]).get("supersetId")?.value;for(let o=1;o<t.length;o++){let n=t[o],i=this.exercisesFormArray.at(n).get("supersetId")?.value;if(e&&i&&e!==i||!e&&i)return!1}return!0}canUngroupSelectedExercises(){let t=this.selectedExerciseIndicesForSuperset();if(t.length===0)return!1;let e=Array.from(new Set(t.map(n=>this.exercisesFormArray.at(n).get("supersetId")?.value).filter(n=>!!n)));return Array.from(new Set(e)).length===1}onExerciseDrop(t){if(!this.isViewMode&&t.previousContainer===t.container){let e=this.exercisesFormArray;hS(e.controls,t.previousIndex,t.currentIndex),e.updateValueAndValidity(),this.selectedExerciseIndicesForSuperset.set([]),this.handleSupersetIntegrityAfterDrag(t.previousIndex,t.currentIndex),this.recalculateSupersetOrders(),this.expandedSetPath.set(null)}}handleSupersetIntegrityAfterDrag(t,e){let o=new Set;if(o.add(t),o.add(e),t<e)for(let i=t;i<=e;i++)o.add(i);else for(let i=e;i<=t;i++)o.add(i);let n=new Set;o.forEach(i=>{if(i<this.exercisesFormArray.length){let a=this.exercisesFormArray.at(i).get("supersetId")?.value;a&&n.add(a)}}),n.forEach(i=>{this.exercisesFormArray.controls.forEach(s=>{let a=s;a.get("supersetId")?.value===i&&a.patchValue({supersetId:null,supersetOrder:null,supersetSize:null})})}),this.recalculateSupersetOrders()}recalculateSupersetOrders(){let t=new Map;this.exercisesFormArray.controls.forEach(e=>{let o=e,n=o.get("supersetId")?.value;n?(t.has(n)||t.set(n,[]),t.get(n).push(o)):(o.patchValue({supersetOrder:null,supersetSize:null},{emitEvent:!1}),this.updateRoundsControlability(o))}),t.forEach((e,o)=>{e.length<2?e.forEach(n=>{n.patchValue({supersetId:null,supersetOrder:null,supersetSize:null}),this.updateRoundsControlability(n)}):(e.sort((n,i)=>this.exercisesFormArray.controls.indexOf(n)-this.exercisesFormArray.controls.indexOf(i)),e.forEach((n,i)=>{n.patchValue({supersetOrder:i,supersetSize:e.length},{emitEvent:!1}),this.updateRoundsControlability(n)}))}),this.exercisesFormArray.updateValueAndValidity({emitEvent:!1})}groupSelectedAsSuperset(){if(this.isViewMode)return;let t=this.selectedExerciseIndicesForSuperset().sort((i,s)=>i-s);if(t.length<2){this.toastService.warning("Select at least two exercises.",3e3,"Superset Error");return}for(let i=1;i<t.length;i++)if(t[i]!==t[i-1]+1){this.toastService.warning("Selected exercises must be next to each other to form a superset.",5e3,"Superset Error");return}let e=_t(),o=t.length,n=1;t.forEach((i,s)=>{let a=this.exercisesFormArray.at(i);a.patchValue({supersetId:e,supersetOrder:s,supersetSize:o,rounds:n}),this.updateRoundsControlability(a),a.get("sets").controls.forEach(u=>{s<o-1&&u.get("restAfterSet")?.setValue(0)})}),this.selectedExerciseIndicesForSuperset.set([]),this.toastService.success("Superset created!",3e3,"Success")}ungroupSuperset(t){if(this.isViewMode)return;let o=this.exercisesFormArray.at(t).get("supersetId")?.value;o&&(this.exercisesFormArray.controls.forEach(n=>{let i=n;i.get("supersetId")?.value===o&&(i.patchValue({supersetId:null,supersetOrder:null,supersetSize:null}),this.updateRoundsControlability(i))}),this.selectedExerciseIndicesForSuperset.set([]),this.toastService.info("Superset ungrouped.",3e3,"Ungrouped"))}removeExercise(t){if(this.isViewMode)return;let o=this.exercisesFormArray.at(t).get("supersetId")?.value;this.exercisesFormArray.removeAt(t),this.selectedExerciseIndicesForSuperset.set([]),o&&this.recalculateSupersetOrders(),this.toastService.info("Exercise removed.",2e3),this.expandedSetPath.set(null)}errorMessage=De(null);onSubmit(){return X(this,null,function*(){if(this.isViewMode){this.toastService.info("View mode. No changes.",3e3,"View Mode");return}this.mode==="routineBuilder"&&this.recalculateSupersetOrders();let t=this.mode==="routineBuilder"&&this.builderForm.get("goal")?.value==="rest";if(this.mode==="routineBuilder"&&(this.builderForm.get("name")?.invalid||this.builderForm.get("goal")?.invalid)||this.mode==="manualLogEntry"&&(this.builderForm.get("workoutDate")?.invalid||this.builderForm.get("startTime")?.invalid||this.builderForm.get("durationMinutes")?.invalid)){this.builderForm.markAllAsTouched(),this.toastService.error("Please fill all required details.",0,"Validation Error");return}if(!t&&this.exercisesFormArray.length===0){this.toastService.error(this.mode==="manualLogEntry"?"Log must have exercises.":"Routine needs exercises.",0,"Validation Error");return}if(this.mode==="routineBuilder"&&!t&&!this.validateSupersetIntegrity()){this.toastService.error("Invalid superset configuration.",0,"Validation Error");return}if(this.builderForm.invalid){this.toastService.error("Please correct validation errors.",0,"Validation Error"),this.builderForm.markAllAsTouched();return}let e=this.builderForm.getRawValue();this.spinnerService.show(this.isNewMode?"Saving...":"Updating...");try{if(this.mode==="routineBuilder"){let o={id:this.currentRoutineId||_t(),name:e.name,description:e.description,goal:e.goal,exercises:e.goal==="rest"?[]:e.exercises.map(n=>_r(ar({},n),{sets:n.sets.map(i=>_r(ar({},i),{weight:this.unitsService.convertToKg(i.weight,this.unitsService.currentUnit())??null}))}))};this.isNewMode?this.workoutService.addRoutine(o):this.workoutService.updateRoutine(o),this.toastService.success(`Routine ${this.isNewMode?"created":"updated"}!`,4e3,"Success"),this.router.navigate(["/workout"])}else{let o=e.workoutDate,n=e.startTime,i=`${o}T${n}:00`,s;try{let c=z0(i);if(!mS(c))throw new Error("Invalid date/time for log entry");s=c.getTime()}catch{this.toastService.error("Invalid date or time format.",0,"Error"),this.spinnerService.hide();return}let a;e.durationMinutes&&(a=new Date(s).setMinutes(new Date(s).getMinutes()+e.durationMinutes));let l=e.exercises.map(c=>({id:c.id,exerciseId:c.exerciseId,exerciseName:c.exerciseName,notes:c.notes,sets:c.sets.map(p=>({id:p.id||_t(),exerciseName:c.exerciseName,plannedSetId:p.plannedSetId,exerciseId:c.exerciseId,type:p.type,repsAchieved:p.repsAchieved,weightUsed:this.unitsService.convertToKg(p.weightUsed,this.unitsService.currentUnit())??void 0,durationPerformed:p.durationPerformed,notes:p.notes,targetReps:p.targetReps,targetWeight:p.targetWeight,targetDuration:p.targetDuration,targetTempo:p.targetTempo,rpe:void 0,timestamp:p.timestamp||new Date().toISOString()})),rounds:c.rounds||0,type:c.type||"standard"})),u={date:fr(new Date(s),"yyyy-MM-dd"),startTime:s,endTime:a,durationMinutes:e.durationMinutes,routineId:e.routineIdForLog||void 0,routineName:e.routineIdForLog?this.availableRoutines.find(c=>c.id===e.routineIdForLog)?.name||e.name||"Workout from Routine":e.name||"Ad-hoc Workout",notes:e.overallNotesLog,exercises:l};if(this.isEditMode&&this.currentLogId){let c=_r(ar({},u),{id:this.currentLogId});yield this.trackingService.updateWorkoutLog(c),this.toastService.success("Log updated!",4e3,"Success"),this.router.navigate(["/history/log",this.currentLogId])}else{let c=u,p=this.trackingService.addWorkoutLog(c);this.toastService.success("Workout logged!",4e3,"Success"),this.router.navigate(["/history/log",p.id])}}this.builderForm.markAsPristine()}catch(o){console.error("Error saving:",o),this.toastService.error(`Failed to save: ${o.message||"Unknown error"}`,0,"Save Error")}finally{this.spinnerService.hide()}})}validateSupersetIntegrity(){let t=this.exercisesFormArray.value,e=new Map;for(let o of t)o.supersetId&&(e.has(o.supersetId)||e.set(o.supersetId,[]),e.get(o.supersetId).push(o));for(let[o,n]of e.entries()){if(n.length<2)return!1;let i=n.sort((a,l)=>(a.supersetOrder??1/0)-(l.supersetOrder??1/0));for(let a=0;a<i.length;a++)if(i[a].supersetOrder!==a)return!1;let s=i.map(a=>this.exercisesFormArray.controls.findIndex(l=>l.get("id")?.value===a.id));for(let a=1;a<s.length;a++)if(s[a]!==s[a-1]+1)return!1}return!0}get firstSelectedExerciseIndexForSuperset(){let t=this.selectedExerciseIndicesForSuperset();return t.length>0?t[0]:null}updateRoundsControlability(t){let e=t.get("supersetId")?.value,o=t.get("supersetOrder")?.value,n=t.get("rounds");if(this.isViewMode){n?.disable({emitEvent:!1});return}if(e&&o!==null&&o>0){n?.disable({emitEvent:!1});let i=this.exercisesFormArray.controls.find(s=>s.get("supersetId")?.value===e&&s.get("supersetOrder")?.value===0);i&&n?.setValue(i.get("rounds")?.value??1,{emitEvent:!1})}else n?.enable({emitEvent:!1})}syncSupersetRounds(t,e,o){this.isViewMode||!t||e===null||e===void 0||e<1||this.exercisesFormArray.at(o).get("supersetOrder")?.value!==0||this.exercisesFormArray.controls.forEach(i=>{let s=i;s.get("supersetId")?.value===t&&s.get("rounds")?.value!==e&&s.get("rounds")?.setValue(e,{emitEvent:!1})})}startCurrentWorkout(){this.currentRoutineId?this.router.navigate(["/workout/play",this.currentRoutineId]):this.toastService.error("Cannot start workout: Routine ID is missing.",0,"Error")}enableEditMode(){this.isViewMode&&this.currentRoutineId&&(this.isViewMode=!1,this.isEditMode=!0,this.toggleFormState(!1),this.toastService.info("Edit mode enabled.",3e3,"Mode Changed"))}deleteCurrentRoutine(){return X(this,null,function*(){if(!this.currentRoutineId){this.toastService.error("Cannot delete: Routine ID is missing.",0,"Error");return}let t=yield zn(this.workoutService.getRoutineById(this.currentRoutineId).pipe(kr(1)));if(!t){this.toastService.error("Routine not found for deletion.",0,"Error");return}let e=(yield zn(this.trackingService.getWorkoutLogsByRoutineId(this.currentRoutineId).pipe(kr(1))))||[],o=`Are you sure you want to delete the routine "${t.name}"?`;e.length>0&&(o+=` This will also delete ${e.length} associated workout log(s). This action cannot be undone.`);let n=yield this.alertService.showConfirm("Delete Routine",o,"Delete");if(n&&n.data)try{this.spinnerService.show(),e.length>0&&(yield this.trackingService.clearWorkoutLogsByRoutineId(this.currentRoutineId),this.toastService.info(`${e.length} workout log(s) deleted.`,3e3,"Logs Cleared")),yield this.workoutService.deleteRoutine(this.currentRoutineId),this.toastService.success(`Routine "${t.name}" deleted.`,4e3,"Routine Deleted"),this.router.navigate(["/workout"])}catch(i){console.error("Error during deletion:",i),this.toastService.error("Failed to delete routine or logs. Please try again.",0,"Deletion Failed")}finally{this.spinnerService.hide()}})}ngOnDestroy(){this.routeSub&&this.routeSub.unsubscribe()}getExerciseCardClasses(t,e){let o=this.mode==="routineBuilder"&&!!t.get("supersetId")?.value,n=t.get("supersetOrder")?.value??-1,i=t.get("exerciseName")?.value,s=t.get("supersetSize")?.value??0,a=this.mode==="routineBuilder"&&this.selectedExerciseIndicesForSuperset().includes(e),l=o&&n===0,u=o&&n===s-1,c=o&&!l&&!u,p=this.isCompactView,d=this.isEditMode,m=this.firstSelectedExerciseIndexForSuperset,f=t.get("sets")?.value||[],g=f.length>0&&f.every(y=>y.type==="warmup");return{"p-1.5 sm:p-2":!0,"border rounded":!0,"shadow-sm":!0,"border-orange-500 dark:border-orange-400 bg-orange-50 dark:bg-orange-800/30":o,"ring-2 ring-orange-400 dark:ring-orange-300 shadow-md":a,"dark:bg-orange-800/40":o&&a,"bg-blue-800/40":g,"border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-800":!o&&!a&&!g,"rounded-b-none border-b-transparent dark:border-b-transparent":this.mode==="routineBuilder"&&o&&(l||c),"rounded-t-none border-t-transparent dark:border-t-transparent":o&&(u||c),"border-x border-t":o&&l,"mb-2":!o||o&&u}}hasAdjacentSupersets(t){let e=this.exercisesFormArray;if(t<0||t>=e.length)return!1;let o=e.at(t).get("supersetId")?.value;if(!o)return!1;if(t>0){let n=e.at(t-1).get("supersetId")?.value;if(n&&n===o)return!0}if(t<e.length-1){let n=e.at(t+1).get("supersetId")?.value;if(n&&n===o)return!0}return!1}isSupersetSpacing(t){if(t<=0)return!1;let e=this.exercisesFormArray.at(t).get("id")?.value,o=this.exercisesFormArray.at(t-1).get("id")?.value;return t>0&&e&&e!==o}handleTrulyCustomExerciseEntry(t=!1){return X(this,null,function*(){let e=[{name:"exerciseName",type:"text",placeholder:"Custom Exercise Name",value:"",attributes:{required:!0},label:"Custom Exercise Name"},{name:"numSets",type:"number",placeholder:"Number of Sets (e.g., 3)",value:"3",attributes:{min:"1",required:!0},label:"Number of Sets"},{name:"equipmentNeeded",type:"text",placeholder:"Equipment",value:"",attributes:{required:!1},label:"Equipment"},{name:"description",type:"textarea",placeholder:"Description",value:"",attributes:{required:!1},label:"Description"}];t&&this.toastService.error("Invalid input for custom exercise.",0,"Error");let o=yield this.alertService.showPromptDialog("Add New Custom Exercise","Define exercise name and sets:",e,"Add Exercise");if(o&&o.exerciseName){let n=String(o.exerciseName).trim(),i=String(o.description).trim(),s=o.numSets?parseInt(String(o.numSets),10):3;if(!n||s<=0){this.toastService.error("Invalid input for custom exercise.",0,"Error");return}let a=Array.from({length:s},()=>({id:`custom-adhoc-set-${_t()}`,reps:8,weight:null,duration:void 0,restAfterSet:60,type:"standard",notes:""})),u={id:`custom-adhoc-ex-${n.trim().toLowerCase().replace(/\s+/g,"-")}-${_t()}`,name:n,description:i,category:"custom",muscleGroups:[],primaryMuscleGroup:"",imageUrls:[]};this.closeExerciseSelectionModal(),this.exerciseService.addExercise(u);let c={id:this.workoutService.generateWorkoutExerciseId(),exerciseId:u.id,exerciseName:u.name,sets:a,type:"standard",supersetId:null,supersetOrder:null,supersetSize:null,rounds:0};this.exercisesFormArray.push(this.createExerciseFormGroup(c,!0,!1)),this.toggleSetExpansion(this.exercisesFormArray.length-1,0)}else{if(!o)return;this.handleTrulyCustomExerciseEntry(!0);return}})}static \u0275fac=function(e){return new(e||r)};static \u0275cmp=go({type:r,selectors:[["app-workout-builder"]],viewQuery:function(e,o){if(e&1&&(Un(TL,5),Un(EL,5)),e&2){let n;Gn(n=Hn())&&(o.setRepsInputs=n),Gn(n=Hn())&&(o.expandedSetElements=n)}},features:[hd([Kn])],decls:19,vars:11,consts:[["expandedSetElement",""],["class","my-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded-md dark:bg-red-900/30 dark:border-red-600 dark:text-red-300",4,"ngIf"],[1,"container","mx-auto","p-1","sm:p-4"],[1,"mb-6","pb-4","border-b","border-gray-200","dark:border-gray-700"],[1,"flex","justify-between","items-center"],[1,"text-gray-600","dark:text-gray-300","hover:text-primary","dark:hover:text-primary-light","p-2","-ml-1",3,"routerLink"],["fill","none","stroke","currentColor","viewBox","0 0 24 24","xmlns","http://www.w3.org/2000/svg",1,"w-6","h-6"],["stroke-linecap","round","stroke-linejoin","round","stroke-width","2","d","M15 19l-7-7 7-7"],[1,"text-xl","sm:text-2xl","md:text-2xl","font-bold","text-gray-800","dark:text-gray-200","text-center","flex-grow","truncate","px-2"],[1,"w-10","h-10"],["class","mt-4 flex flex-wrap gap-2 justify-center",4,"ngIf"],[1,"space-y-6","mb-6",3,"ngSubmit","formGroup"],[1,"space-y-4","p-4","bg-white","dark:bg-gray-800","rounded-lg","shadow-sm"],[4,"ngIf"],["class","pt-4 px-1",4,"ngIf"],["class","p-4 bg-blue-50 dark:bg-blue-900/30 rounded-lg text-center",4,"ngIf"],["class","pt-6 flex justify-end space-x-3",4,"ngIf"],["class","fixed inset-0 bg-gray-700 bg-opacity-75 transition-opacity overflow-y-auto h-full w-full z-[70] flex items-center justify-center p-4",3,"click",4,"ngIf"],[1,"my-4","p-3","bg-red-100","border","border-red-400","text-red-700","rounded-md","dark:bg-red-900/30","dark:border-red-600","dark:text-red-300"],[1,"mt-4","flex","flex-wrap","gap-2","justify-center"],["type","button",1,"bg-green-500","hover:bg-green-600","text-white","font-semibold","py-3","px-3","rounded-md","shadow-sm","text-m","flex","items-center",3,"click"],["xmlns","http://www.w3.org/2000/svg","fill","none","viewBox","0 0 24 24","stroke-width","3","stroke","currentColor",1,"size-4","sm:size-5","mr-1"],["stroke-linecap","round","stroke-linejoin","round","d","M5.25 5.653c0-.856.917-1.398 1.667-.986l11.54 6.347a1.125 1.125 0 0 1 0 1.972l-11.54 6.347a1.125 1.125 0 0 1-1.667-.986V5.653Z"],["type","button","class","bg-yellow-500 hover:bg-yellow-600 text-white font-semibold py-3 px-3 rounded-md shadow-sm text-m flex items-center",3,"click",4,"ngIf"],["type","button",1,"bg-red-500","hover:bg-red-600","text-white","font-semibold","py-3","px-3","rounded-md","shadow-sm","text-m","flex","items-center",3,"click"],["xmlns","http://www.w3.org/2000/svg","fill","none","viewBox","0 0 24 24","stroke-width","2","stroke","currentColor",1,"size-4","sm:size-5","mr-1"],["stroke-linecap","round","stroke-linejoin","round","d","m14.74 9-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 0 1-2.244 2.077H8.084a2.25 2.25 0 0 1-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 0 0-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 0 1 3.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 0 0-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 0 0-7.5 0"],["type","button",1,"bg-yellow-500","hover:bg-yellow-600","text-white","font-semibold","py-3","px-3","rounded-md","shadow-sm","text-m","flex","items-center",3,"click"],["stroke-linecap","round","stroke-linejoin","round","d","m16.862 4.487 1.687-1.688a1.875 1.875 0 1 1 2.652 2.652L10.582 16.07a4.5 4.5 0 0 1-1.897 1.13L6 18l.8-2.685a4.5 4.5 0 0 1 1.13-1.897l8.932-8.931Zm0 0L19.5 7.125M18 14v4.75A2.25 2.25 0 0 1 15.75 21H5.25A2.25 2.25 0 0 1 3 18.75V8.25A2.25 2.25 0 0 1 5.25 6H10"],["for","routineName",1,"block","text-m","font-medium","text-gray-700","dark:text-gray-300"],["type","text","id","routineName","formControlName","name",1,"mt-1","block","w-full","p-2","border","rounded-md","shadow-sm","focus:ring-primary","focus:border-primary","dark:bg-gray-600","dark:border-gray-500","dark:text-gray-200",3,"ngClass"],["class","text-red-500 dark:text-red-400 text-xs mt-1",4,"ngIf"],["for","description",1,"block","text-m","font-medium","text-gray-700","dark:text-gray-300"],["id","description","formControlName","description","rows","3",1,"mt-1","block","w-full","p-2","border","border-gray-300","dark:border-gray-500","rounded-md","shadow-sm","dark:bg-gray-600","dark:text-gray-200"],["for","goal",1,"block","text-m","font-medium","text-gray-700","dark:text-gray-300"],["id","goal","formControlName","goal",1,"mt-1","block","w-full","p-2","border","border-gray-300","dark:border-gray-500","rounded-md","shadow-sm","dark:bg-gray-600","dark:text-gray-200"],[3,"value",4,"ngFor","ngForOf"],[1,"text-red-500","dark:text-red-400","text-xs","mt-1"],[3,"value"],[1,"grid","grid-cols-1","md:grid-cols-3","gap-4"],["for","workoutDate",1,"block","text-sm","font-medium","text-gray-700","dark:text-gray-300"],["type","date","id","workoutDate","formControlName","workoutDate",1,"mt-1","block","w-full","p-2","border","rounded-md","shadow-sm","dark:bg-gray-600","dark:border-gray-500","dark:text-gray-200",3,"ngClass"],["for","startTime",1,"block","text-sm","font-medium","text-gray-700","dark:text-gray-300"],["type","time","id","startTime","formControlName","startTime",1,"mt-1","block","w-full","p-2","border","rounded-md","shadow-sm","dark:bg-gray-600","dark:border-gray-500","dark:text-gray-200",3,"ngClass"],["for","durationMinutes",1,"block","text-sm","font-medium","text-gray-700","dark:text-gray-300"],["type","number","id","durationMinutes","formControlName","durationMinutes",1,"mt-1","block","w-full","p-2","border","rounded-md","shadow-sm","dark:bg-gray-600","dark:border-gray-500","dark:text-gray-200",3,"ngClass"],["for","logWorkoutName",1,"block","text-sm","font-medium","text-gray-700","dark:text-gray-300"],["type","text","id","logWorkoutName","formControlName","name","placeholder","e.g., Morning Chest Session",1,"mt-1","block","w-full","p-2","border","border-gray-300","dark:border-gray-500","rounded-md","shadow-sm","dark:bg-gray-600","dark:text-gray-200"],["for","routineIdForLog",1,"block","text-sm","font-medium","text-gray-700","dark:text-gray-300"],["id","routineIdForLog","formControlName","routineIdForLog",1,"mt-1","block","w-full","p-2","border","border-gray-300","dark:border-gray-500","rounded-md","shadow-sm","dark:bg-gray-600","dark:text-gray-200"],["value",""],["for","overallNotesLog",1,"block","text-sm","font-medium","text-gray-700","dark:text-gray-300"],["id","overallNotesLog","formControlName","overallNotesLog","rows","2",1,"mt-1","block","w-full","p-2","border","border-gray-300","dark:border-gray-500","rounded-md","shadow-sm","dark:bg-gray-600","dark:text-gray-200"],[1,"pt-4","px-1"],[1,"flex","justify-between","items-center","mb-4"],[1,"text-xl","font-semibold","text-gray-700","dark:text-gray-300"],["type","button","class","bg-green-500 hover:enabled:bg-green-600 text-white text-m font-medium py-2 px-3 rounded-md transition-all duration-150 ease-in-out disabled:opacity-50 disabled:cursor-not-allowed",3,"click",4,"ngIf"],["cdkDropList","","formArrayName","exercises","class","exercise-list-container space-y-4",3,"cdkDropListData","cdkDropListDisabled","cdkDropListDropped",4,"ngIf"],["class","text-center py-6 text-gray-500 dark:text-gray-400 border border-dashed dark:border-gray-700 rounded-md mt-4",4,"ngIf"],["class","text-center py-4 text-gray-500 dark:text-gray-400",4,"ngIf"],["class","mt-6 text-center",4,"ngIf"],["type","button",1,"bg-green-500","hover:enabled:bg-green-600","text-white","text-m","font-medium","py-2","px-3","rounded-md","transition-all","duration-150","ease-in-out","disabled:opacity-50","disabled:cursor-not-allowed",3,"click"],["cdkDropList","","formArrayName","exercises",1,"exercise-list-container","space-y-4",3,"cdkDropListDropped","cdkDropListData","cdkDropListDisabled"],[4,"ngFor","ngForOf"],[1,"relative","group","exercise-card-wrapper",3,"click","ngClass"],["class","absolute left-1/2 -translate-x-1/2 z-20","style","top: -1.25rem;",4,"ngIf"],["cdkDrag","",1,"exercise-item","relative","transition-all",3,"cdkDragDisabled","cdkDragData","formGroupName","ngClass"],[1,"flex","items-center","space-x-2"],["cdkDragHandle","","class","cdk-drag-handle cursor-grab p-1 text-gray-400 hover:text-gray-600 dark:text-gray-500 dark:hover:text-gray-300 flex-shrink-0 top-1 right-1 sm:static","title","Drag to reorder",3,"ngClass",4,"ngIf"],["type","checkbox","title","Select the exercise for the Superset","class","h-4 w-4 text-orange-600 border-gray-300 dark:border-gray-600 rounded focus:ring-orange-500 flex-shrink-0 disabled:opacity-50",3,"id","checked","disabled","change",4,"ngIf"],["class","flex-grow min-w-0",4,"ngIf"],["class","flex-shrink-0 ml-auto",4,"ngIf"],["class","space-y-3",4,"ngIf"],["type","button","title","Collapse exercise","class","bg-blue-200 mt-1 p-1 text-blue-600 hover:text-gray-500 dark:text-gray-400 dark:hover:text-gray-200 flex-shrink-0  rounded-md",3,"click",4,"ngIf"],[1,"absolute","left-1/2","-translate-x-1/2","z-20",2,"top","-1.25rem"],["type","button","class","bg-orange-600 hover:bg-orange-700 text-white text-xs font-semibold py-1.5 px-3 rounded-full shadow-lg",3,"disabled","click",4,"ngIf"],["type","button","class","bg-violet-600 hover:bg-violet-700 text-white text-xs font-semibold py-1.5 px-3 rounded-full shadow-lg",3,"disabled","click",4,"ngIf"],["type","button",1,"bg-orange-600","hover:bg-orange-700","text-white","text-xs","font-semibold","py-1.5","px-3","rounded-full","shadow-lg",3,"click","disabled"],["type","button",1,"bg-violet-600","hover:bg-violet-700","text-white","text-xs","font-semibold","py-1.5","px-3","rounded-full","shadow-lg",3,"click","disabled"],["cdkDragHandle","","title","Drag to reorder",1,"cdk-drag-handle","cursor-grab","p-1","text-gray-400","hover:text-gray-600","dark:text-gray-500","dark:hover:text-gray-300","flex-shrink-0","top-1","right-1","sm:static",3,"ngClass"],["xmlns","http://www.w3.org/2000/svg","viewBox","0 0 24 24",1,"w-5","h-5"],["d","M 7 17 L 7 3 M 4 6 L 7 3 L 10 6 M 17 7 L 17 21 M 14 18 L 17 21 L 20 18","fill","none","stroke","currentColor","stroke-width","2","stroke-linecap","round","stroke-linejoin","round"],["type","checkbox","title","Select the exercise for the Superset",1,"h-4","w-4","text-orange-600","border-gray-300","dark:border-gray-600","rounded","focus:ring-orange-500","flex-shrink-0","disabled:opacity-50",3,"change","id","checked","disabled"],[1,"flex-grow","min-w-0"],[1,"font-semibold","text-gray-800","dark:text-gray-100","truncate",3,"ngClass"],["class","text-xs text-orange-600 dark:text-orange-400 font-normal block",3,"ngClass",4,"ngIf"],["class","text-xs text-orange-600 dark:text-orange-400 mt-0.5",4,"ngIf"],["class","text-s text-gray-500 dark:text-gray-400 mt-0.5",4,"ngIf"],[1,"text-xs","text-orange-600","dark:text-orange-400","font-normal","block",3,"ngClass"],[1,"text-xs","text-orange-600","dark:text-orange-400","mt-0.5"],[1,"text-s","text-gray-500","dark:text-gray-400","mt-0.5"],[1,"flex-shrink-0","ml-auto"],["type","button","title","Remove Exercise",1,"p-1","text-red-500","hover:text-red-700","dark:text-red-400","dark:hover:text-red-300","rounded-full","hover:bg-red-100","dark:hover:bg-red-900/30","disabled:opacity-50",3,"click"],["xmlns","http://www.w3.org/2000/svg","viewBox","0 0 16 16",1,"w-4","h-4"],["width","16","height","16","rx","3","ry","3","fill","red"],["fill","#ffffff","fill-rule","evenodd","clip-rule","evenodd","d","M4.22 4.22a.75.75 0 0 1 1.06 0L8 7.94l2.72-2.72a.75.75 0 1 1 1.06 1.06L9.06 9l2.72 2.72a.75.75 0 1 1-1.06 1.06L8 10.06 5.28 12.78a.75.75 0 0 1-1.06-1.06L6.94 9 4.22 6.28a.75.75 0 0 1 0-1.06z"],[1,"space-y-3"],[1,"flex","flex-col","sm:flex-row","justify-between","items-start","sm:items-center","pb-2","pt-1","sm:pt-0",3,"ngClass"],[1,"flex-grow"],[1,"text-lg","font-semibold","text-gray-800","dark:text-gray-100"],["class","text-xs text-orange-600 dark:text-orange-400 font-normal block",4,"ngIf"],[1,"flex","flex-col","items-start","sm:items-end","space-y-1","flex-shrink-0","w-full","sm:w-auto","mt-2","sm:mt-0"],["class","flex items-center space-x-1",4,"ngIf"],["type","button","class","flex items-center text-xs text-red-600 bg-red-200 hover:text-red-700 dark:text-red-400 dark:hover:text-red-300 font-medium py-1 px-2 rounded-md hover:enabled:bg-red-100 dark:enabled:hover:bg-red-900/50 disabled:opacity-50",3,"click",4,"ngIf"],["type","button","class","flex bg-violet-200 items-center text-xs text-violet-600 hover:text-violet-700 dark:text-violet-400 dark:hover:text-violet-300 font-medium py-1 px-2 rounded-md hover:bg-violet-100 dark:hover:bg-violet-900/50 disabled:opacity-50",3,"disabled","click",4,"ngIf"],[1,"block","text-s","font-medium","text-gray-600","dark:text-gray-400","mb-0.5",3,"for"],["formControlName","notes","rows","1",1,"mt-0.5","block","w-full","p-1.5","text-sm","border-gray-300","dark:border-gray-500","rounded-md","shadow-sm","dark:bg-gray-600","dark:text-gray-200",3,"id","readonly"],["class","space-y-1",4,"ngIf"],[1,"text-xs","text-orange-600","dark:text-orange-400","font-normal","block"],[1,"flex","items-center","space-x-1"],[1,"text-xs","font-medium","text-gray-600","dark:text-gray-400","whitespace-nowrap",3,"for"],["type","number","formControlName","rounds","min","1",1,"w-16","p-1","text-m","border-gray-300","dark:border-gray-500","border-2","rounded-md","focus:ring-primary","focus:border-primary","dark:bg-gray-600","dark:text-gray-200","disabled:opacity-50","disabled:bg-gray-300","dark:disabled:bg-gray-500",3,"change","id","readonly"],["type","button",1,"flex","items-center","text-xs","text-red-600","bg-red-200","hover:text-red-700","dark:text-red-400","dark:hover:text-red-300","font-medium","py-1","px-2","rounded-md","hover:enabled:bg-red-100","dark:enabled:hover:bg-red-900/50","disabled:opacity-50",3,"click"],["xmlns","http://www.w3.org/2000/svg","viewBox","0 0 16 16",1,"w-4","h-4","mr-2"],["type","button",1,"flex","bg-violet-200","items-center","text-xs","text-violet-600","hover:text-violet-700","dark:text-violet-400","dark:hover:text-violet-300","font-medium","py-1","px-2","rounded-md","hover:bg-violet-100","dark:hover:bg-violet-900/50","disabled:opacity-50",3,"click","disabled"],["xmlns","http://www.w3.org/2000/svg","fill","none","viewBox","0 0 24 24","stroke-width","1.5","stroke","currentColor",1,"w-4","h-4","mr-1"],["stroke-linecap","round","stroke-linejoin","round","d","M3.75 3.75v4.5m0-4.5h4.5m-4.5 0L9 9M3.75 20.25v-4.5m0 4.5h4.5m-4.5 0L9 15M20.25 3.75v4.5m0-4.5h-4.5m4.5 0L15 9m5.25 11.25v-4.5m0 4.5h-4.5m4.5 0L15 15"],[1,"space-y-1"],[1,"flex","justify-between","items-center","mb-1"],[1,"text-m","font-semibold","text-gray-700","dark:text-gray-300"],["type","button","class","text-xs bg-blue-200 text-blue-600 hover:text-blue-700 dark:text-blue-400 dark:hover:text-blue-300 font-medium py-0.5 px-1.5 rounded-md hover:enabled:bg-blue-100 dark:hover:bg-blue-900/50",3,"click",4,"ngIf"],["formArrayName","sets",1,"space-y-1.5"],["class","grid grid-cols-12 gap-x-1 py-1 px-1.5 text-xs font-medium text-gray-500 dark:text-gray-400 border-b dark:border-gray-600",4,"ngIf"],[3,"formGroupName",4,"ngFor","ngForOf"],["type","button",1,"text-xs","bg-blue-200","text-blue-600","hover:text-blue-700","dark:text-blue-400","dark:hover:text-blue-300","font-medium","py-0.5","px-1.5","rounded-md","hover:enabled:bg-blue-100","dark:hover:bg-blue-900/50",3,"click"],[1,"grid","grid-cols-12","gap-x-1","py-1","px-1.5","text-xs","font-medium","text-gray-500","dark:text-gray-400","border-b","dark:border-gray-600"],[1,"col-span-1","text-center"],[1,"col-span-2","text-center","truncate"],[1,"col-span-2","text-center"],[1,"col-span-1"],[3,"formGroupName"],["class","grid grid-cols-12 gap-x-1 items-center py-1.5 px-1.5 rounded-md hover:bg-gray-100 dark:hover:bg-gray-800/60 cursor-pointer border dark:border-gray-700 dark:text-white",3,"ngClass","click",4,"ngIf"],["class","mt-1 p-3 rounded-md border border-gray-300 dark:border-gray-500 shadow-inner space-y-2",3,"ngClass",4,"ngIf"],[1,"grid","grid-cols-12","gap-x-1","items-center","py-1.5","px-1.5","rounded-md","hover:bg-gray-100","dark:hover:bg-gray-800/60","cursor-pointer","border","dark:border-gray-700","dark:text-white",3,"click","ngClass"],[1,"col-span-1","text-xs","text-center","font-medium"],[1,"col-span-2","text-xs","text-center","truncate",3,"title"],[1,"col-span-2","text-xs","text-center"],[1,"col-span-1","text-xs","text-center"],[1,"col-span-1","text-xs","text-center","truncate",3,"title"],["class","col-span-1 flex items-center justify-end",4,"ngIf"],["class","col-span-1",4,"ngIf"],[1,"col-span-1","flex","items-center","justify-end"],["type","button","title","Remove Set",1,"flex","items-center","text-red-500","hover:text-red-600","dark:text-red-400","dark:hover:text-red-300","p-0.5","rounded-full","hover:bg-red-100","dark:hover:bg-red-900/30","disabled:opacity-50",3,"click"],[1,"mt-1","p-3","rounded-md","border","border-gray-300","dark:border-gray-500","shadow-inner","space-y-2",3,"ngClass"],[1,"grid","grid-cols-2","sm:grid-cols-3","gap-x-3","gap-y-2","items-end"],[1,"col-span-full","sm:col-span-1"],[1,"block","text-s","font-medium","text-gray-600","dark:text-gray-400",3,"for"],["formControlName","type",1,"mt-0.5","w-full","p-1.5","text-m","border-gray-300","dark:border-gray-500","rounded-md","dark:bg-gray-600","dark:text-gray-200","disabled:opacity-70","disabled:cursor-not-allowed",3,"id","disabled"],["type","number","placeholder","Reps",1,"mt-0.5","w-full","p-1.5","text-m","border-gray-300","dark:border-gray-500","rounded-md","dark:bg-gray-600","dark:text-gray-200","disabled:opacity-70","disabled:cursor-not-allowed",3,"id","formControlName","readonly"],["type","number","placeholder","Weight",1,"mt-0.5","w-full","p-1.5","text-m","border-gray-300","dark:border-gray-500","rounded-md","dark:bg-gray-600","dark:text-gray-200","disabled:opacity-70","disabled:cursor-not-allowed",3,"id","formControlName","readonly"],["type","number","placeholder","Secs",1,"mt-0.5","w-full","p-1.5","text-m","border-gray-300","dark:border-gray-500","rounded-md","dark:bg-gray-600","dark:text-gray-200","disabled:opacity-70","disabled:cursor-not-allowed",3,"id","formControlName","readonly"],[1,"col-span-full"],["type","text","formControlName","notes","placeholder","e.g. Good form",1,"mt-0.5","w-full","p-1.5","text-m","border-gray-300","dark:border-gray-500","rounded-md","dark:bg-gray-600","dark:text-gray-200","disabled:opacity-70","disabled:cursor-not-allowed",3,"id","readonly"],[1,"mt-2","text-right"],["type","button","title","Collapse set",1,"bg-blue-200","text-xs","text-blue-600","hover:text-blue-700","dark:text-blue-400","dark:hover:text-blue-300","font-medium","py-1","px-2","rounded-md",3,"click"],["xmlns","http://www.w3.org/2000/svg","viewBox","0 0 24 24","width","24","height","24"],["d","M 12 5 L 12 10 M 9 7 L 12 10 L 15 7 M 12 19 L 12 14 M 9 17 L 12 14 L 15 17","fill","none","stroke","currentColor","stroke-width","1.5","stroke-linecap","round","stroke-linejoin","round"],["type","text","formControlName","tempo","placeholder","e.g. 2010",1,"mt-0.5","w-full","p-1.5","text-m","border-gray-300","dark:border-gray-500","rounded-md","dark:bg-gray-600","dark:text-gray-200","disabled:opacity-70","disabled:cursor-not-allowed",3,"id","readonly"],["type","number","formControlName","restAfterSet","placeholder","Rest",1,"mt-0.5","w-full","p-1.5","text-m","border-gray-300","dark:border-gray-500","rounded-md","dark:bg-gray-600","dark:text-gray-200","disabled:opacity-70","disabled:cursor-not-allowed",3,"id","readonly"],["type","button","title","Collapse exercise",1,"bg-blue-200","mt-1","p-1","text-blue-600","hover:text-gray-500","dark:text-gray-400","dark:hover:text-gray-200","flex-shrink-0","rounded-md",3,"click"],[1,"text-center","py-6","text-gray-500","dark:text-gray-400","border","border-dashed","dark:border-gray-700","rounded-md","mt-4"],[1,"mb-2"],["type","button",1,"bg-green-500","hover:bg-green-600","text-white","text-m","font-medium","py-2","px-3","rounded-md",3,"click"],[1,"text-center","py-4","text-gray-500","dark:text-gray-400"],[1,"mt-6","text-center"],["type","button",1,"bg-green-500","hover:bg-green-600","text-white","font-semibold","py-2","px-6","rounded-md","shadow-md","hover:shadow-lg","transition-all","duration-300","focus:outline-none","focus:ring-2","focus:ring-green-400","focus:ring-opacity-75",3,"click"],["xmlns","http://www.w3.org/2000/svg","viewBox","0 0 20 20","fill","currentColor",1,"w-5","h-5","mr-2","inline-block"],["d","M10.75 4.75a.75.75 0 0 0-1.5 0v4.5h-4.5a.75.75 0 0 0 0 1.5h4.5v4.5a.75.75 0 0 0 1.5 0v-4.5h4.5a.75.75 0 0 0 0-1.5h-4.5v-4.5Z"],[1,"p-4","bg-blue-50","dark:bg-blue-900/30","rounded-lg","text-center"],[1,"text-m","text-blue-700","dark:text-blue-300"],[1,"pt-6","flex","justify-end","space-x-3"],["type","button",1,"px-4","py-2","border","border-gray-300","dark:border-gray-600","rounded-md","shadow-sm","text-m","font-medium","text-gray-700","dark:text-gray-200","hover:bg-gray-50","dark:hover:bg-gray-700",3,"routerLink"],["type","submit",1,"px-4","py-2","border","border-transparent","rounded-md","shadow-sm","text-sm","font-medium","text-white","bg-primary","hover:bg-primary-dark","focus:outline-none","focus:ring-2","focus:ring-offset-2","focus:ring-primary-dark","disabled:opacity-50",3,"disabled"],[1,"fixed","inset-0","bg-gray-700","bg-opacity-75","transition-opacity","overflow-y-auto","h-full","w-full","z-[70]","flex","items-center","justify-center","p-4",3,"click"],[1,"relative","transform","overflow-hidden","rounded-lg","bg-white","dark:bg-gray-700","text-left","shadow-xl","transition-all","sm:my-8","sm:w-full","sm:max-w-lg",3,"click"],[1,"bg-white","dark:bg-gray-700","px-4","pt-5","pb-4","sm:p-6","sm:pb-4"],[1,"flex","justify-between","items-center","pb-3"],[1,"text-xl","font-semibold","text-gray-900","dark:text-gray-100"],["type","button",1,"p-1","rounded-full","text-gray-400","hover:text-gray-600",3,"click"],["xmlns","http://www.w3.org/2000/svg","fill","none","viewBox","0 0 24 24","stroke-width","1.5","stroke","currentColor",1,"w-6","h-6"],["stroke-linecap","round","stroke-linejoin","round","d","M6 18 18 6M6 6l12 12"],[1,"my-4"],["type","text","placeholder","Search exercises...",1,"w-full","p-2","border","border-gray-300","dark:border-gray-600","rounded-md","dark:bg-gray-700","dark:text-gray-200",3,"ngModelChange","ngModel"],[1,"mt-2","max-h-80","overflow-y-auto"],["class","p-3 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-md cursor-pointer flex justify-between items-center",3,"click",4,"ngFor","ngForOf"],["class","text-gray-500 dark:text-gray-400 text-center p-4",4,"ngIf"],[1,"mt-4","pt-4","border-t","border-gray-200","dark:border-gray-600","text-center"],["type","button",1,"text-sm","text-primary","dark:text-primary-light","hover:underline",3,"click"],[1,"bg-gray-50","dark:bg-gray-700","px-4","py-3","sm:flex","sm:flex-row-reverse","sm:px-6"],["type","button",1,"mt-3","inline-flex","w-full","justify-center","rounded-md","bg-white","dark:bg-gray-700","px-3","py-2","text-sm","font-semibold","text-gray-900","dark:text-gray-200","shadow-sm","ring-1","ring-inset","ring-gray-300","dark:ring-gray-500","hover:bg-gray-50","dark:hover:bg-gray-500","sm:mt-0","sm:w-auto",3,"click"],[1,"p-3","hover:bg-gray-100","dark:hover:bg-gray-700","rounded-md","cursor-pointer","flex","justify-between","items-center",3,"click"],[1,"font-medium","text-gray-800","dark:text-gray-200"],[1,"block","text-xs","text-gray-500","dark:text-gray-400"],["xmlns","http://www.w3.org/2000/svg","viewBox","0 0 20 20","fill","currentColor",1,"w-5","h-5","text-primary","dark:text-primary-light"],["fill-rule","evenodd","d","M8.22 5.22a.75.75 0 0 1 1.06 0l4.25 4.25a.75.75 0 0 1 0 1.06l-4.25 4.25a.75.75 0 0 1-1.06-1.06L11.94 10 8.22 6.28a.75.75 0 0 1 0-1.06Z","clip-rule","evenodd"],[1,"text-gray-500","dark:text-gray-400","text-center","p-4"]],template:function(e,o){if(e&1&&(ae(0,OL,2,1,"div",1),I(1,"div",2)(2,"header",3)(3,"div",4)(4,"button",5),_e(),I(5,"svg",6),pe(6,"path",7),E()(),Ge(),I(7,"h1",8),O(8),E(),pe(9,"div",9),E(),ae(10,ML,10,1,"div",10),E(),I(11,"form",11),ie("ngSubmit",function(){return o.onSubmit()}),I(12,"section",12),ae(13,zL,15,6,"ng-container",13)(14,YL,32,16,"ng-container",13),E(),ae(15,A4,10,7,"section",14)(16,F4,3,0,"section",15)(17,O4,5,3,"div",16),E(),ae(18,B4,21,3,"div",17),E()),e&2){let n,i,s;B("ngIf",o.errorMessage()),D(4),B("routerLink",o.mode==="routineBuilder"?"/workout":"/history/list"),D(4),$e(" ",o.mode==="routineBuilder"?o.isNewMode?"New Routine":o.isViewMode?((n=o.builderForm.get("name"))==null?null:n.value)||"View Routine":"Edit: "+(((n=o.builderForm.get("name"))==null?null:n.value)||"Routine"):o.isNewMode?"Log Past Workout":"Edit Log: "+(((n=o.builderForm.get("name"))==null?null:n.value)||"Workout")," "),D(2),B("ngIf",o.mode==="routineBuilder"&&!o.isNewMode&&o.currentRoutineId),D(),B("formGroup",o.builderForm),D(2),B("ngIf",o.mode==="routineBuilder"),D(),B("ngIf",o.mode==="manualLogEntry"),D(),B("ngIf",o.mode==="manualLogEntry"||((i=o.builderForm.get("goal"))==null?null:i.value)!=="rest"),D(),B("ngIf",o.mode==="routineBuilder"&&((s=o.builderForm.get("goal"))==null?null:s.value)==="rest"),D(),B("ngIf",!o.isViewMode),D(),B("ngIf",o.isExerciseModalOpen)}},dependencies:[vo,da,Yo,bo,ma,Ed,vd,kd,Id,yd,Sd,_d,xa,bd,pS,wd,Cd,uS,cS,ga,ba,ya,bS,yS,xS,gS,$d],styles:[".exercise-list-container[_ngcontent-%COMP%]{min-height:60px}.exercise-item[_ngcontent-%COMP%]{transition:box-shadow .2s ease-in-out}.cdk-drag-placeholder[_ngcontent-%COMP%]{opacity:.4;background:#ccc;border:dotted 2px #999;min-height:100px;transition:transform .25s cubic-bezier(0,0,.2,1);display:block;margin-bottom:.5rem}.cdk-drag-preview[_ngcontent-%COMP%]{box-shadow:0 5px 5px -3px #0003,0 8px 10px 1px #00000024,0 3px 14px 2px #0000001f;border-radius:.5rem;background-color:var(--card-background-color, white)}body.dark[_ngcontent-%COMP%]   .cdk-drag-preview[_ngcontent-%COMP%]{background-color:var(--dark-card-background-color, #1f2937)}.cdk-drop-list-dragging[_ngcontent-%COMP%]   .exercise-item[_ngcontent-%COMP%]:not(.cdk-drag-placeholder){transition:transform .25s cubic-bezier(0,0,.2,1)}.cdk-drag-handle[_ngcontent-%COMP%]{cursor:grab;padding:.25rem;color:#9ca3af;display:flex;flex-shrink:0;position:relative;top:.25rem;right:.25rem}.cdk-drag-handle[_ngcontent-%COMP%]:hover{color:#4b5563}.dark[_ngcontent-%COMP%]   .cdk-drag-handle[_ngcontent-%COMP%]{color:#6b7280}.dark[_ngcontent-%COMP%]   .cdk-drag-handle[_ngcontent-%COMP%]:hover{color:#d1d5db}@media (min-width: 640px){.cdk-drag-handle[_ngcontent-%COMP%]{position:static}}.superset-spacing[_ngcontent-%COMP%]{margin-top:0!important}"]})};var V4=["progressCircleSvg"];function W4(r,t){if(r&1&&(I(0,"div",13),O(1),E()),r&2){let e=L(2);D(),$e(" Prepare for: ",e.nextUpText," ")}}function z4(r,t){if(r&1){let e=ke();I(0,"div",2)(1,"div",3),_e(),I(2,"svg",4,0),pe(4,"circle",5)(5,"circle",6),E(),Ge(),I(6,"div",7)(7,"div",8),O(8),I(9,"span",9),O(10),E()(),I(11,"div",10),O(12),E()()(),I(13,"button",11),ie("click",function(){re(e);let n=L();return oe(n.skipTimer())}),O(14," Skip "),E(),ae(15,W4,2,1,"div",12),E()}if(r&2){let e=L();Po("opacity-100",e.isVisible)("opacity-0",!e.isVisible),D(4),L0("r",e.getCircleRadius()),D(),L0("r",e.getCircleRadius())("stroke-dasharray",e.getCircleCircumference())("stroke-dashoffset",e.strokeDashoffset()),D(3),$e(" ",e.displayTime()),D(2),We(e.displayTentsTime()),D(2),$e(" ",e.mainText," "),D(3),B("ngIf",e.nextUpText)}}var Ad=class r{isVisible=!1;durationSeconds=60;mainText="RESTING";nextUpText=null;timerFinished=new Yc;timerSkipped=new Yc;progressCircleSvg;timerIntervalId;circleRadius=90;circumference=2*Math.PI*this.circleRadius;timerUpdateIntervalMs=100;remainingTime=De(0);initialDuration=De(0);strokeDashoffset=At(()=>{let t=this.initialDuration();if(t<=0)return this.circumference;let e=Math.max(0,this.remainingTime())/t;return this.circumference*(1-e)});displayTime=At(()=>{let t=Math.max(0,this.remainingTime()),e=Math.floor(t/60),o=Math.floor(t%60);return e>0?`${e}:${o.toString().padStart(2,"0")}`:`${o}`});displayTentsTime=At(()=>`.${Math.floor(Math.max(0,this.remainingTime())*10)%10}`);ngOnChanges(t){t.isVisible&&(this.isVisible?this.startTimer():this.stopTimer()),t.durationSeconds&&this.isVisible?this.startTimer():t.durationSeconds&&!this.isVisible&&(this.initialDuration.set(this.durationSeconds),this.remainingTime.set(this.durationSeconds))}ngAfterViewInit(){}startTimer(){if(this.stopTimer(),this.initialDuration.set(this.durationSeconds),this.remainingTime.set(this.durationSeconds),this.durationSeconds<=0){this.timerFinished.emit();return}let t=this.timerUpdateIntervalMs/1e3;this.timerIntervalId=setInterval(()=>{this.remainingTime.update(e=>{let o=e-t;return o<=0?(this.stopTimer(),this.timerFinished.emit(),0):o})},this.timerUpdateIntervalMs)}stopTimer(){this.timerIntervalId&&(clearInterval(this.timerIntervalId),this.timerIntervalId=null)}skipTimer(){this.stopTimer(),this.timerSkipped.emit()}ngOnDestroy(){this.stopTimer()}getCircleCircumference(){return this.circumference}getCircleRadius(){return this.circleRadius}static \u0275fac=function(e){return new(e||r)};static \u0275cmp=go({type:r,selectors:[["app-full-screen-rest-timer"]],viewQuery:function(e,o){if(e&1&&Un(V4,5),e&2){let n;Gn(n=Hn())&&(o.progressCircleSvg=n.first)}},inputs:{isVisible:"isVisible",durationSeconds:"durationSeconds",mainText:"mainText",nextUpText:"nextUpText"},outputs:{timerFinished:"timerFinished",timerSkipped:"timerSkipped"},features:[Zv],decls:1,vars:1,consts:[["progressCircleSvg",""],["class","fixed inset-0 z-50 flex flex-col items-center justify-center bg-black/70 backdrop-blur-sm transition-opacity duration-300 ease-in-out",3,"opacity-100","opacity-0",4,"ngIf"],[1,"fixed","inset-0","z-50","flex","flex-col","items-center","justify-center","bg-black/70","backdrop-blur-sm","transition-opacity","duration-300","ease-in-out"],[1,"relative","flex","flex-col","items-center","justify-center","text-white"],["viewBox","0 0 200 200",1,"w-64","h-64","md:w-80","md:h-80","transform","-rotate-90"],["cx","100","cy","100","fill","transparent","stroke","rgba(255, 255, 255, 0.2)","stroke-width","12"],["cx","100","cy","100","fill","transparent","stroke","currentColor","stroke-width","14","stroke-linecap","round",1,"text-primary"],[1,"absolute","inset-0","flex","flex-col","items-center","justify-center","text-center"],[1,"text-6xl","md:text-7xl","font-bold","tabular-nums"],[1,"text-4xl","md:text-5xl","font-bold","tabular-nums"],[1,"mt-2","text-xl","md:text-2xl","font-medium","uppercase","tracking-wider"],[1,"mt-12","py-3","px-8","bg-white/20","hover:bg-white/30","text-white","font-semibold","rounded-lg","shadow-md","transition-colors","duration-150","text-lg",3,"click"],["class","mt-5 text-center text-m md:text-base text-gray-300",4,"ngIf"],[1,"mt-5","text-center","text-m","md:text-base","text-gray-300"]],template:function(e,o){e&1&&ae(0,z4,16,12,"div",1),e&2&&B("ngIf",o.isVisible)},dependencies:[vo,bo],encapsulation:2,changeDetection:0})};var Fd=class r{longPress=new Yc;pressTimer;longPressDuration=500;onPressStart(t){this.clearTimeout(),this.pressTimer=setTimeout(()=>{this.longPress.emit(t)},this.longPressDuration)}onPressEnd(){this.clearTimeout()}clearTimeout(){this.pressTimer&&(clearTimeout(this.pressTimer),this.pressTimer=null)}static \u0275fac=function(e){return new(e||r)};static \u0275dir=rS({type:r,selectors:[["","appLongPress",""]],hostBindings:function(e,o){e&1&&ie("mousedown",function(i){return o.onPressStart(i)})("touchstart",function(i){return o.onPressStart(i)})("mouseup",function(){return o.onPressEnd()})("mouseleave",function(){return o.onPressEnd()})("touchend",function(){return o.onPressEnd()})("touchcancel",function(){return o.onPressEnd()})},outputs:{longPress:"longPress"}})};var U4=r=>({"filter dark:invert":r}),G4=(r,t,e,o)=>({"text-red-500":r,"animate-pulse":t,"text-green-500 dark:text-green-400":e,"text-gray-800 dark:text-gray-100":o}),H4=(r,t)=>({"bg-green-500 hover:bg-green-600":r,"bg-yellow-500 hover:bg-yellow-600 text-black":t}),K4=(r,t,e,o)=>({"bg-red-500 hover:bg-red-600 focus:ring-red-400":r,"bg-green-500 hover:bg-green-600 focus:ring-green-400":t,"bg-blue-500 hover:bg-blue-600 focus:ring-blue-400":e,"bg-gray-400 dark:bg-gray-600 text-gray-800 dark:text-gray-200 cursor-not-allowed":o}),IS=r=>({"rotate-180":r});function q4(r,t){if(r&1){let e=ke();I(0,"div",13)(1,"h2",14),O(2,"Session Paused"),E(),I(3,"p",15),O(4),E(),I(5,"button",16),ie("click",function(){re(e);let n=L(2);return oe(n.resumeSession())}),O(6," Resume Workout "),E(),I(7,"button",17),ie("click",function(){re(e);let n=L(2);return oe(n.quitWorkout())}),O(8," Quit Workout (No Save) "),E()()}if(r&2){let e=L(2);D(4),$e("Elapsed Time: ",e.sessionTimerDisplay())}}function j4(r,t){if(r&1&&pe(0,"img",48),r&2){let e=L().ngIf,o=L(4);B("src",o.getIconPath(e.iconName),fd)("alt",e.name+" icon")("ngClass",rs(3,U4,e.iconName!=="default-exercise"&&e.iconName!==""&&e.iconName!==null))}}function X4(r,t){if(r&1&&(I(0,"div",46),ae(1,j4,1,5,"img",47),E()),r&2){let e=t.ngIf;D(),B("ngIf",e.iconName)}}function Y4(r,t){r&1&&pe(0,"div",49)}function Q4(r,t){if(r&1){let e=ke();_e(),I(0,"svg",50),ie("click",function(){re(e);let n=L().ngIf,i=L(3);return oe(i.openModal(n.exerciseData))}),pe(1,"circle",51)(2,"circle",52)(3,"rect",53),E()}}function Z4(r,t){if(r&1&&(I(0,"span"),O(1),E()),r&2){let e=L(5);D(),$e("/",e.getTotalWarmupSetsForCurrentExercise())}}function J4(r,t){if(r&1&&(I(0,"span",54),O(1),ae(2,Z4,2,1,"span",39),E()),r&2){let e=L(4);D(),$e(" Warm-up Set ",e.getCurrentWarmupSetNumber()," "),D(),B("ngIf",e.getTotalWarmupSetsForCurrentExercise()>0)}}function eM(r,t){if(r&1&&(I(0,"span"),O(1),E()),r&2){let e=L(4);D(),Gt(" Set ",e.getCurrentWorkingSetNumber(),"/",e.getWorkingSetCountForCurrentExercise()," ")}}function tM(r,t){if(r&1&&(I(0,"span",55),O(1),E()),r&2){let e=L(4);D(),Gt(" (Round ",e.currentBlockRound(),"/",e.totalBlockRounds(),") ")}}function rM(r,t){if(r&1&&(I(0,"span",56),O(1),E()),r&2){let e=L().ngIf;D(),Gt(" (Superset ",(e.exerciseData.supersetOrder??0)+1,"/",e.exerciseData.supersetSize??"?",") ")}}function oM(r,t){r&1&&(I(0,"span",60),O(1,"Marked as Skipped"),E())}function nM(r,t){r&1&&(I(0,"span",61),O(1,"Marked for Later"),E())}function iM(r,t){if(r&1&&(I(0,"div",57),ae(1,oM,2,0,"span",58)(2,nM,2,0,"span",59),E()),r&2){let e=L().ngIf;D(),B("ngIf",e.exerciseData.sessionStatus==="skipped"),D(),B("ngIf",e.exerciseData.sessionStatus==="do_later")}}function sM(r,t){if(r&1){let e=ke();I(0,"div",62)(1,"h3",63),O(2,"Get Ready!"),E(),I(3,"p",64),O(4),E(),I(5,"p",65),O(6),pt(7,"weightUnit"),E(),I(8,"button",66),ie("click",function(){re(e);let n=L(4);return oe(n.skipPresetTimer())}),O(9," Skip Countdown & Start Set "),E()()}if(r&2){let e=L().ngIf,o=L(3);D(4),$e("",o.presetTimerCountdownDisplay(),"s"),D(2),nS(" Upcoming: ",e.setData.reps?e.setData.reps+" reps":""," ",e.setData.reps&&e.setData.weight?" at ":""," ",e.setData.weight?Vt(7,5,e.setData.weight):""," ",e.setData.duration?e.setData.duration+"s":""," ")}}function aM(r,t){if(r&1){let e=ke();I(0,"div")(1,"label",71),O(2,"Weight"),E(),I(3,"div",72)(4,"button",73),ie("mousedown",function(n){re(e);let i=L(5);return oe(i.onWeightDecrementPointerDown(n))})("longPress",function(n){re(e);let i=L(5);return oe(i.onWeightDecrementPointerDown(n))}),_e(),I(5,"svg",74),pe(6,"path",75),E()(),Ge(),I(7,"div",76),ie("click",function(){re(e);let n=L(5);return oe(n.editWeightWithPrompt())}),O(8),pt(9,"number"),E(),pe(10,"input",77),I(11,"span",78),O(12),E(),I(13,"button",73),ie("mousedown",function(n){re(e);let i=L(5);return oe(i.onWeightIncrementPointerDown(n))})("longPress",function(n){re(e);let i=L(5);return oe(i.onWeightIncrementPointerDown(n))}),_e(),I(14,"svg",74),pe(15,"path",79),E()()()()}if(r&2){let e=L(5);D(4),B("disabled",e.getDisabled()),D(4),$e(" ",yo(9,4,e.csf.actualWeight.value,"1.0-2")??"0"," "),D(4),We(e.weightUnitDisplaySymbol),D(),B("disabled",e.getDisabled())}}function lM(r,t){if(r&1){let e=ke();I(0,"div")(1,"label",71),O(2,"Reps"),E(),I(3,"div",72)(4,"button",80),ie("click",function(){re(e);let n=L(5);return oe(n.decrementReps(1))}),_e(),I(5,"svg",74),pe(6,"path",75),E()(),Ge(),pe(7,"input",81),I(8,"button",80),ie("click",function(){re(e);let n=L(5);return oe(n.incrementReps(1))}),_e(),I(9,"svg",74),pe(10,"path",79),E()()()()}if(r&2){let e=L(5);D(4),B("disabled",e.getDisabled()),D(4),B("disabled",e.getDisabled())}}function uM(r,t){if(r&1&&(I(0,"span"),O(1),pt(2,"date"),E()),r&2){let e=L(3).ngIf;D(),$e("(Target: ",V0(2,1,e.setData.duration*1e3,"mm:ss","UTC"),")")}}function cM(r,t){r&1&&(I(0,"span"),O(1,"Start Timer"),E())}function pM(r,t){r&1&&(I(0,"span"),O(1,"Pause Timer"),E())}function dM(r,t){r&1&&(I(0,"span"),O(1,"Resume Timer"),E())}function mM(r,t){if(r&1){let e=ke();I(0,"button",88),ie("click",function(){re(e);let n=L(6);return oe(n.resetTimedSet())}),O(1," Reset "),E()}if(r&2){let e=L(6);B("disabled",e.getDisabled())}}function fM(r,t){if(r&1){let e=ke();I(0,"div")(1,"label",82),O(2," Time (seconds) "),ae(3,uM,3,5,"span",39),E(),I(4,"div",83),O(5),pt(6,"date"),E(),pe(7,"input",84),I(8,"div",85)(9,"button",86),ie("click",function(){re(e);let n=L(5);return oe(n.toggleTimedSetTimer())}),ae(10,cM,2,0,"span",39)(11,pM,2,0,"span",39)(12,dM,2,0,"span",39),E(),ae(13,mM,2,1,"button",87),E()()}if(r&2){let e,o=L(2).ngIf,n=L(3);D(3),B("ngIf",o.setData.duration>0),D(),B("ngClass",B0(13,G4,n.isTimedSetOvertime(),n.isTimedSetOvertime()&&n.timedSetTimerState()==="running",!n.isTimedSetOvertime()&&n.timedSetTimerState()==="running"&&(((e=n.activeSetInfo())==null||e.setData==null?null:e.setData.duration)??0)>0&&n.timedSetElapsedSeconds()>0,n.timedSetTimerState()==="idle"||n.timedSetTimerState()==="paused"||!((((e=n.activeSetInfo())==null||e.setData==null?null:e.setData.duration)??0)>0&&n.timedSetElapsedSeconds()>0&&!n.isTimedSetOvertime()))),D(),$e(" ",V0(6,9,n.timedSetDisplay()*1e3,"mm:ss","UTC")," "),D(4),B("disabled",n.getDisabled())("ngClass",xo(18,H4,n.timedSetTimerState()==="idle"||n.timedSetTimerState()==="paused",n.timedSetTimerState()==="running")),D(),B("ngIf",n.timedSetTimerState()==="idle"),D(),B("ngIf",n.timedSetTimerState()==="running"),D(),B("ngIf",n.timedSetTimerState()==="paused"),D(),B("ngIf",n.timedSetTimerState()!=="idle")}}function hM(r,t){if(r&1&&(I(0,"div")(1,"form",67),ae(2,aM,16,7,"div",39)(3,lM,11,2,"div",39)(4,fM,14,21,"div",39),I(5,"div",68)(6,"label",69),O(7,"Set Notes (Optional)"),E(),pe(8,"textarea",70),E()()()),r&2){let e=L().ngIf,o=L(3);D(),B("formGroup",o.currentSetForm),D(),B("ngIf",o.csf.actualWeight),D(),B("ngIf",o.csf.actualReps&&e.setData.reps!==void 0),D(),B("ngIf",e.setData.duration!==void 0),D(4),B("disabled",o.getDisabled())}}function gM(r,t){if(r&1){let e=ke();I(0,"div",89)(1,"div",90)(2,"button",91),ie("click",function(){re(e);let n=L(4);return oe(n.handleMainAction())}),O(3),E()()()}if(r&2){let e=L(4);D(2),B("disabled",e.sessionState()==="paused"||e.playerSubState()===e.PlayerSubState.PresetCountdown&&e.presetTimerCountdownDisplay()!=="0"&&e.presetTimerCountdownDisplay()!==null||e.playerSubState()===e.PlayerSubState.Resting&&e.isRestTimerVisible())("ngClass",B0(3,K4,e.playerSubState()===e.PlayerSubState.PerformingSet&&!e.checkIfLatestSetOfWorkoutConsideringPending(),e.playerSubState()===e.PlayerSubState.PerformingSet&&e.checkIfLatestSetOfWorkoutConsideringPending(),e.playerSubState()===e.PlayerSubState.PresetCountdown,e.playerSubState()===e.PlayerSubState.Resting&&e.isRestTimerVisible())),D(),$e(" ",e.mainActionButtonLabel()," ")}}function xM(r,t){if(r&1&&(I(0,"div",92)(1,"span",93),O(2,"Next up: "),E(),I(3,"span"),O(4),E()()),r&2){let e=L(4);B("title",e.getNextUpText(e.activeSetInfo(),e.routine()??null)||"Next Exercise"),D(4),We(e.getNextUpText(e.activeSetInfo(),e.routine()??null)||"Next Exercise")}}function yM(r,t){if(r&1&&(I(0,"div",31)(1,"div",32),ae(2,X4,2,1,"div",33)(3,Y4,1,0,"ng-template",null,3,Xo),I(5,"h2",34),O(6),E(),ae(7,Q4,4,0,"svg",35),E(),I(8,"div",36)(9,"p",37),ae(10,J4,3,2,"span",38)(11,eM,2,2,"span",39)(12,tM,2,2,"span",40)(13,rM,2,2,"span",41),E()(),ae(14,iM,3,2,"div",42)(15,sM,10,7,"div",43)(16,hM,9,5,"div",39)(17,gM,4,8,"div",44)(18,xM,5,2,"div",45),E()),r&2){let e=t.ngIf,o=jo(4),n=L(3);D(2),B("ngIf",n.currentBaseExercise())("ngIfElse",o),D(3),B("title",e.exerciseData.exerciseName),D(),$e(" ",e.exerciseData.exerciseName||"Loading Exercise..."," "),D(),B("ngIf",e.exerciseData.id),D(3),B("ngIf",e.type==="warmup"),D(),B("ngIf",e.type!=="warmup"),D(),B("ngIf",n.totalBlockRounds()>=1&&n.currentBlockRound()>0),D(),B("ngIf",e.exerciseData.supersetId),D(),B("ngIf",e.exerciseData.sessionStatus&&e.exerciseData.sessionStatus!=="pending"),D(),B("ngIf",n.playerSubState()===n.PlayerSubState.PresetCountdown),D(),B("ngIf",n.playerSubState()===n.PlayerSubState.PerformingSet),D(),B("ngIf",n.routine()&&n.sessionState()==="playing"&&n.activeSetInfo()),D(),B("ngIf",n.getNextUpText(n.activeSetInfo(),n.routine()??null))}}function bM(r,t){if(r&1&&(I(0,"p",100),O(1),E()),r&2){let e=L(4);D(),$e(" ",e.currentWorkoutLogExercises().length===0?"No sets were logged.":"All planned sets are done. Well done!"," ")}}function vM(r,t){if(r&1){let e=ke();I(0,"button",101),ie("click",function(){re(e);let n=L(4);return oe(n.finishWorkoutAndReportStatus())}),O(1," Confirm & Save Workout "),E()}}function SM(r,t){r&1&&(I(0,"button",102),O(1," Back to Workouts "),E())}function wM(r,t){r&1&&(I(0,"button",103),O(1," Go Back "),E())}function CM(r,t){if(r&1&&(I(0,"div",94)(1,"h2",95),O(2),E(),ae(3,bM,2,1,"p",96)(4,vM,2,0,"button",97)(5,SM,2,0,"button",98)(6,wM,2,0,"button",99),E()),r&2){let e=L(3);D(2),$e(" ",e.sessionState()==="error"?"Error Loading Workout":e.currentWorkoutLogExercises().length===0?"Workout Ended":"Workout Complete!"," "),D(),B("ngIf",e.sessionState()!=="error"),D(),B("ngIf",e.sessionState()!=="error"&&e.currentWorkoutLogExercises().length>0),D(),B("ngIf",e.sessionState()!=="error"&&e.currentWorkoutLogExercises().length===0),D(),B("ngIf",e.sessionState()==="error")}}function _M(r,t){if(r&1){let e=ke();I(0,"div")(1,"div",106),O(2,"UP NEXT"),E(),I(3,"div",107),O(4),E(),I(5,"div",108),O(6),pt(7,"number"),I(8,"button",109),ie("click",function(){re(e);let n=L(4);return oe(n.skipRest())}),O(9,"(Skip)"),E()()()}if(r&2){let e=L(4);D(3),B("title",e.restTimerNextUpText()),D(),$e(" ",e.restTimerNextUpText()||"Next Exercise"," "),D(2),$e(" Rest: ",e.restTimerDisplay()||yo(7,3,e.restDuration(),"1.0-0")+"s"," ")}}function kM(r,t){if(r&1){let e=ke();I(0,"div")(1,"div",107),O(2),E(),I(3,"div",110),O(4),E(),I(5,"button",111),ie("click",function(){re(e);let n=L(4);return oe(n.skipPresetTimer())}),O(6,"(Skip Countdown)"),E()()}if(r&2){let e=L(4);D(),B("title",e.restTimerMainText()),D(),$e(" ",e.restTimerMainText()," "),D(2),$e(" ",e.presetTimerCountdownDisplay(),"s ")}}function IM(r,t){if(r&1&&(I(0,"footer",104)(1,"div",105),ae(2,_M,10,6,"div",39)(3,kM,7,3,"div",39),E()()),r&2){let e=L(3);D(2),B("ngIf",e.playerSubState()===e.PlayerSubState.Resting&&!e.isRestTimerVisible()),D(),B("ngIf",e.playerSubState()===e.PlayerSubState.PresetCountdown)}}function TM(r,t){if(r&1){let e=ke();Ro(0),I(1,"header",18)(2,"button",19),ie("click",function(){re(e);let n=L(2);return oe(n.goBack())}),_e(),I(3,"svg",20),pe(4,"path",21),E()(),Ge(),I(5,"div",22)(6,"h1",23),O(7),E(),I(8,"div",24),O(9),E()(),I(10,"button",25),ie("click",function(){re(e);let n=L(2);return oe(n.toggleWorkoutMenu())}),_e(),I(11,"svg",26),pe(12,"path",27),E()()(),Ge(),I(13,"main",28),ae(14,yM,19,14,"div",29)(15,CM,7,5,"ng-template",null,2,Xo),E(),ae(17,IM,4,2,"footer",30),$o()}if(r&2){let e=t.ngIf,o=jo(16),n=L(2);D(6),B("title",e.name),D(),$e(" ",e.name||"Workout"," "),D(2),We(n.sessionTimerDisplay()),D(),B("disabled",n.sessionState()==="loading"||n.sessionState()==="error"||n.sessionState()==="paused"&&!n.isWorkoutMenuVisible()),D(3),Po("pb-24",!0),D(),B("ngIf",n.activeSetInfo())("ngIfElse",o),D(3),B("ngIf",n.routine()&&n.sessionState()==="playing"&&n.activeSetInfo()&&(n.playerSubState()===n.PlayerSubState.Resting&&!n.isRestTimerVisible()||n.playerSubState()===n.PlayerSubState.PresetCountdown))}}function EM(r,t){if(r&1){let e=ke();I(0,"div",112)(1,"button",113),ie("click",function(){re(e);let n=L(2);return oe(n.goBack())}),_e(),I(2,"svg",20),pe(3,"path",21),E()(),Ge(),I(4,"div",22)(5,"h1",114),O(6,"Error"),E()(),pe(7,"div",115),E(),I(8,"div",116)(9,"h2",117),O(10,"Routine Not Found"),E(),I(11,"p",118),O(12,"The selected routine could not be loaded."),E(),I(13,"button",119),_e(),I(14,"svg",20),pe(15,"path",21),E()()()}}function NM(r,t){if(r&1&&(I(0,"div",10),ae(1,q4,9,1,"div",11)(2,TM,18,9,"ng-container",12)(3,EM,16,0,"ng-template",null,1,Xo),E()),r&2){let e=jo(4),o=L();D(),B("ngIf",o.sessionState()==="paused"),D(),B("ngIf",o.routine())("ngIfElse",e)}}function RM(r,t){r&1&&(I(0,"span",145),O(1,"(already started main sets)"),E())}function $M(r,t){if(r&1){let e=ke();I(0,"div",120)(1,"div",121),pe(2,"div"),I(3,"button",122),ie("click",function(){re(e);let n=L();return oe(n.closeWorkoutMenu())}),_e(),I(4,"svg",123),pe(5,"path",124),E()(),Ge(),pe(6,"div"),E(),I(7,"h2",125),O(8,"Workout Menu"),E(),I(9,"button",126),ie("click",function(){re(e);let n=L();return oe(n.pauseSession())}),_e(),I(10,"svg",127),pe(11,"circle",128)(12,"rect",129)(13,"rect",130),E(),O(14," Pause Workout "),E(),Ge(),I(15,"button",131),ie("click",function(){re(e);let n=L();return oe(n.jumpToExercise())}),_e(),I(16,"svg",132),pe(17,"path",133),E(),O(18," Jump to Exercise "),E(),Ge(),I(19,"button",134),ie("click",function(){re(e);let n=L();return oe(n.openPerformanceInsightsFromMenu())}),_e(),I(20,"svg",135),pe(21,"path",136),E(),O(22," Performance Insights "),E(),Ge(),I(23,"button",137),ie("click",function(){re(e);let n=L();return oe(n.addWarmupSet())}),I(24,"p"),O(25,"+ Add Warm-up Set"),E(),ae(26,RM,2,0,"span",138),E(),I(27,"button",139),ie("click",function(){re(e);let n=L();return oe(n.addExerciseDuringSession())}),O(28," + Add Exercise to Session "),E(),I(29,"button",140),ie("click",function(){re(e);let n=L();return oe(n.skipCurrentSet())}),O(30," Skip Current Set "),E(),I(31,"button",141),ie("click",function(){re(e);let n=L();return oe(n.skipCurrentExercise())}),O(32," Mark Exercise as Skipped "),E(),I(33,"button",142),ie("click",function(){re(e);let n=L();return oe(n.markCurrentExerciseDoLater())}),O(34," Mark Exercise for Later "),E(),I(35,"button",143),ie("click",function(){re(e);let n=L();return oe(n.finishWorkoutEarly())}),O(36," Finish Workout Early "),E(),I(37,"button",144),ie("click",function(){re(e);let n=L();return oe(n.quitWorkout())}),O(38," Quit Workout (No Save) "),E()()}if(r&2){let e,o=L();D(9),B("disabled",o.sessionState()!=="playing"),D(6),B("disabled",o.sessionState()==="paused"||!(!((e=o.routine())==null||e.exercises==null)&&e.exercises.length)),D(4),B("disabled",o.sessionState()==="paused"||!o.activeSetInfo()),D(4),B("disabled",!o.canAddWarmupSet()||o.sessionState()==="paused"||!o.activeSetInfo()),D(3),B("ngIf",!o.canAddWarmupSet()),D(),B("disabled",o.sessionState()==="paused"),D(2),B("disabled",!o.activeSetInfo()||o.sessionState()==="paused"),D(2),B("disabled",!o.activeSetInfo()||o.sessionState()==="paused"),D(2),B("disabled",!o.activeSetInfo()||o.sessionState()==="paused"),D(2),B("disabled",o.sessionState()==="paused")}}function PM(r,t){r&1&&(I(0,"span",185),O(1,"(Warm-up) "),E())}function DM(r,t){if(r&1&&(I(0,"span"),O(1,"Reps: "),I(2,"strong",186),O(3),E()()),r&2){let e=L().$implicit;D(3),We(e.repsAchieved)}}function AM(r,t){if(r&1&&(I(0,"span"),O(1,"Weight: "),I(2,"strong",186),O(3),pt(4,"weightUnit"),E()()),r&2){let e=L().$implicit;D(3),We(Vt(4,1,e.weightUsed))}}function FM(r,t){if(r&1&&(I(0,"span",187),O(1,"Time: "),I(2,"strong",186),O(3),E()()),r&2){let e=L().$implicit;D(3),$e("",e.durationPerformed,"s")}}function OM(r,t){if(r&1&&(I(0,"p",188),O(1),E()),r&2){let e=L().$implicit;D(),$e(" ",e.notes," ")}}function LM(r,t){if(r&1&&(I(0,"div",179)(1,"p",180),ae(2,PM,2,0,"span",181),O(3),E(),I(4,"div",182),ae(5,DM,4,1,"span",39)(6,AM,5,3,"span",39)(7,FM,4,1,"span",183),E(),ae(8,OM,2,1,"p",184),E()),r&2){let e=t.$implicit,o=t.index;D(2),B("ngIf",e.type==="warmup"),D(),$e(" Set #",o+1,": "),D(2),B("ngIf",e.repsAchieved!==void 0),D(),B("ngIf",e.weightUsed!==void 0&&e.weightUsed!==null),D(),B("ngIf",e.durationPerformed!==void 0),D(),B("ngIf",e.notes)}}function MM(r,t){if(r&1&&(I(0,"div",177),ae(1,LM,9,6,"div",178),E()),r&2){let e=L(3);D(),B("ngForOf",e.allPreviousLoggedSetsForCurrentExercise())}}function BM(r,t){r&1&&(I(0,"div",189),O(1," No sets completed yet for this exercise in this workout. "),E())}function VM(r,t){r&1&&(I(0,"span",185),O(1," (Warm-up)"),E())}function WM(r,t){if(r&1&&(I(0,"span"),O(1,"Reps: "),I(2,"strong",186),O(3),E()()),r&2){let e=L().$implicit;D(3),We(e.repsAchieved)}}function zM(r,t){if(r&1&&(I(0,"span"),O(1,"Weight: "),I(2,"strong",186),O(3),pt(4,"weightUnit"),E()()),r&2){let e=L().$implicit;D(3),We(Vt(4,1,e.weightUsed))}}function UM(r,t){if(r&1&&(I(0,"span",187),O(1,"Time: "),I(2,"strong",186),O(3),E()()),r&2){let e=L().$implicit;D(3),$e("",e.durationPerformed,"s")}}function GM(r,t){if(r&1&&(I(0,"p",188),O(1),E()),r&2){let e=L().$implicit;D(),$e(" ",e.notes," ")}}function HM(r,t){if(r&1&&(I(0,"div",179)(1,"p",180)(2,"span",191),O(3),E(),ae(4,VM,2,0,"span",181),O(5),E(),I(6,"div",182),ae(7,WM,4,1,"span",39)(8,zM,5,3,"span",39)(9,UM,4,1,"span",183),E(),ae(10,GM,2,1,"p",184),E()),r&2){let e=t.$implicit,o=t.index;D(3),$e("",e.exerciseName||"Exercise",":"),D(),B("ngIf",e.type==="warmup"),D(),$e(" Set #",o+1,": "),D(2),B("ngIf",e.repsAchieved!==void 0),D(),B("ngIf",e.weightUsed!==void 0&&e.weightUsed!==null),D(),B("ngIf",e.durationPerformed!==void 0),D(),B("ngIf",e.notes)}}function KM(r,t){if(r&1&&(I(0,"div",190),ae(1,HM,11,7,"div",178),E()),r&2){let e=L(3);D(),B("ngForOf",e.allPreviousLoggedSetsForCurrentSession())}}function qM(r,t){r&1&&(I(0,"div",189),O(1," No sets logged today for any exercise yet. "),E())}function jM(r,t){if(r&1&&(I(0,"li",200)(1,"span",201),O(2,"Reps:"),E(),I(3,"strong",202),O(4),E()()),r&2){let e=L().ngIf;D(4),We(e.repsAchieved)}}function XM(r,t){if(r&1&&(I(0,"li",200)(1,"span",201),O(2,"Weight:"),E(),I(3,"strong",202),O(4),pt(5,"weightUnit"),E()()),r&2){let e=L().ngIf;D(4),We(Vt(5,1,e.weightUsed))}}function YM(r,t){if(r&1&&(I(0,"li",200)(1,"span",201),O(2,"Time:"),E(),I(3,"strong",202),O(4),E()()),r&2){let e=L().ngIf;D(4),$e("",e.durationPerformed,"s")}}function QM(r,t){if(r&1&&(I(0,"li",203),O(1),E()),r&2){let e=L().ngIf;D(),$e("Notes: ",e.notes)}}function ZM(r,t){if(r&1&&(I(0,"div",192)(1,"p",193)(2,"span",194),_e(),I(3,"svg",195),pe(4,"path",196),E(),O(5),pt(6,"date"),E()(),Ge(),I(7,"ul",197),ae(8,jM,5,1,"li",198)(9,XM,6,3,"li",198)(10,YM,5,1,"li",198)(11,QM,2,1,"li",199),E()()),r&2){let e=t.ngIf,o=L(3);D(5),$e(" Last time (",yo(6,5,o.lastPerformanceForCurrentExercise==null?null:o.lastPerformanceForCurrentExercise.lastPerformedDate,"dd/MM/yy HH:mm"),"): "),D(3),B("ngIf",e.repsAchieved!==void 0),D(),B("ngIf",e.weightUsed!==void 0&&e.weightUsed!==null),D(),B("ngIf",e.durationPerformed!==void 0),D(),B("ngIf",e.notes)}}function JM(r,t){r&1&&(I(0,"div",204),O(1," No previous performance recorded for this exercise yet. "),E())}function eB(r,t){if(r&1&&(I(0,"div")(1,"span"),O(2),E(),I(3,"strong",212),O(4),E(),I(5,"em",213),O(6),pt(7,"date"),E()()),r&2){let e=t.$implicit,o=L(5);D(2),$e("",e.pbType,": "),D(2),We(o.formatPbValue(e)),D(2),$e(" (",yo(7,3,e.timestamp,"shortDate"),")")}}function tB(r,t){if(r&1&&(I(0,"div",210),ae(1,eB,8,6,"div",211),E()),r&2){let e=L(4);D(),B("ngForOf",e.exercisePBs())}}function rB(r,t){if(r&1&&(I(0,"div",214),O(1),E()),r&2){let e,o=L(4);D(),$e(" No personal bests recorded yet for ",(e=o.currentBaseExercise())==null?null:e.name,". ")}}function oB(r,t){if(r&1&&(I(0,"div",205)(1,"p",206)(2,"span",194),_e(),I(3,"svg",195),pe(4,"path",207),E(),O(5),E()(),ae(6,tB,2,1,"div",208)(7,rB,2,1,"div",209),E()),r&2){let e,o,n=L(3);D(5),$e(" Personal Bests for ",((e=n.currentBaseExercise())==null?null:e.name)||"this exercise",": "),D(),B("ngIf",n.exercisePBs().length>0),D(),B("ngIf",n.currentBaseExercise()&&n.exercisePBs().length===0&&!(!((o=n.currentBaseExercise())==null||o.id==null)&&o.id.startsWith("custom-")))}}function nB(r,t){if(r&1){let e=ke();I(0,"div",219),ie("click",function(){re(e);let n=L(4);return oe(n.startEditTarget("reps"))}),O(1),E()}if(r&2){let e=L(2).ngIf;D(),$e(" ",e.setData.reps," ")}}function iB(r,t){if(r&1){let e=ke();I(0,"div",220)(1,"input",221),ts("ngModelChange",function(n){re(e);let i=L(4);return es(i.editingTargetValue,n)||(i.editingTargetValue=n),oe(n)}),ie("keyup.enter",function(){re(e);let n=L(4);return oe(n.confirmEditTarget())})("keyup.escape",function(){re(e);let n=L(4);return oe(n.cancelEditTarget())}),E(),I(2,"button",222),ie("click",function(){re(e);let n=L(4);return oe(n.confirmEditTarget())}),_e(),I(3,"svg",223),pe(4,"path",224),E()(),Ge(),I(5,"button",225),ie("click",function(){re(e);let n=L(4);return oe(n.cancelEditTarget())}),_e(),I(6,"svg",223),pe(7,"path",226),E()()()}if(r&2){let e=L(4);D(),Ji("ngModel",e.editingTargetValue)}}function sB(r,t){if(r&1&&(I(0,"div",215)(1,"label",216),O(2,"Target Reps"),E(),ae(3,nB,2,1,"div",217)(4,iB,8,1,"div",218),E()),r&2){let e=L(3);D(3),B("ngIf",e.editingTarget!=="reps"),D(),B("ngIf",e.editingTarget==="reps")}}function aB(r,t){if(r&1){let e=ke();I(0,"div",219),ie("click",function(){re(e);let n=L(4);return oe(n.startEditTarget("weight"))}),O(1),pt(2,"weightUnit"),E()}if(r&2){let e=L(2).ngIf;D(),$e(" ",Vt(2,1,e.setData.weight)," ")}}function lB(r,t){if(r&1){let e=ke();I(0,"div",220)(1,"input",221),ts("ngModelChange",function(n){re(e);let i=L(4);return es(i.editingTargetValue,n)||(i.editingTargetValue=n),oe(n)}),ie("keyup.enter",function(){re(e);let n=L(4);return oe(n.confirmEditTarget())})("keyup.escape",function(){re(e);let n=L(4);return oe(n.cancelEditTarget())}),E(),I(2,"button",222),ie("click",function(){re(e);let n=L(4);return oe(n.confirmEditTarget())}),_e(),I(3,"svg",223),pe(4,"path",224),E()(),Ge(),I(5,"button",225),ie("click",function(){re(e);let n=L(4);return oe(n.cancelEditTarget())}),_e(),I(6,"svg",223),pe(7,"path",226),E()()()}if(r&2){let e=L(4);D(),Ji("ngModel",e.editingTargetValue)}}function uB(r,t){if(r&1&&(I(0,"div",215)(1,"label",216),O(2,"Target Weight"),E(),ae(3,aB,3,3,"div",217)(4,lB,8,1,"div",218),E()),r&2){let e=L(3);D(3),B("ngIf",e.editingTarget!=="weight"),D(),B("ngIf",e.editingTarget==="weight")}}function cB(r,t){if(r&1){let e=ke();I(0,"div",219),ie("click",function(){re(e);let n=L(4);return oe(n.startEditTarget("duration"))}),O(1),I(2,"span",227),O(3,"s"),E()()}if(r&2){let e=L(2).ngIf;D(),$e(" ",e.setData.duration)}}function pB(r,t){if(r&1){let e=ke();I(0,"div",220)(1,"input",221),ts("ngModelChange",function(n){re(e);let i=L(4);return es(i.editingTargetValue,n)||(i.editingTargetValue=n),oe(n)}),ie("keyup.enter",function(){re(e);let n=L(4);return oe(n.confirmEditTarget())})("keyup.escape",function(){re(e);let n=L(4);return oe(n.cancelEditTarget())}),E(),I(2,"button",222),ie("click",function(){re(e);let n=L(4);return oe(n.confirmEditTarget())}),_e(),I(3,"svg",223),pe(4,"path",224),E()(),Ge(),I(5,"button",225),ie("click",function(){re(e);let n=L(4);return oe(n.cancelEditTarget())}),_e(),I(6,"svg",223),pe(7,"path",226),E()()()}if(r&2){let e=L(4);D(),Ji("ngModel",e.editingTargetValue)}}function dB(r,t){if(r&1&&(I(0,"div",215)(1,"label",216),O(2,"Target Time"),E(),ae(3,cB,4,1,"div",217)(4,pB,8,1,"div",218),E()),r&2){let e=L(3);D(3),B("ngIf",e.editingTarget!=="duration"),D(),B("ngIf",e.editingTarget==="duration")}}function mB(r,t){if(r&1&&(I(0,"div",215)(1,"label",216),O(2,"Target Tempo"),E(),I(3,"span",228),O(4),E()()),r&2){let e=L().ngIf;D(4),We(e.setData.tempo)}}function fB(r,t){if(r&1&&(I(0,"div",229)(1,"p",230)(2,"span",194),_e(),I(3,"svg",195),pe(4,"path",231),E(),O(5," Planned Notes for this Set: "),E()(),Ge(),I(6,"p",232),O(7),E()()),r&2){let e=L().ngIf;D(7),We(e.setData.notes)}}function hB(r,t){if(r&1){let e=ke();I(0,"div",158)(1,"div",159)(2,"button",160),ie("click",function(){re(e);let n=L(2);return oe(n.toggleCompletedSetsForExerciseInfo())}),I(3,"span",161),_e(),I(4,"svg",162),pe(5,"path",136),E(),O(6),E(),I(7,"svg",163),pe(8,"path",164),E()(),ae(9,MM,2,1,"div",165)(10,BM,2,0,"div",166),E(),Ge(),I(11,"div",159)(12,"button",160),ie("click",function(){re(e);let n=L(2);return oe(n.toggleCompletedSetsForDayInfo())}),I(13,"span",161),_e(),I(14,"svg",162),pe(15,"path",167),E(),O(16),E(),I(17,"svg",163),pe(18,"path",164),E()(),ae(19,KM,2,1,"div",168)(20,qM,2,0,"div",166),E(),ae(21,ZM,12,8,"div",169)(22,JM,2,0,"div",170)(23,oB,8,3,"div",171),Ge(),I(24,"div",172)(25,"h4",173),O(26,"Set Targets:"),E(),I(27,"div",174),ae(28,sB,5,2,"div",175)(29,uB,5,2,"div",175)(30,dB,5,2,"div",175)(31,mB,5,1,"div",175),E()(),ae(32,fB,8,1,"div",176),E()}if(r&2){let e,o,n,i=t.ngIf,s=L(2);D(6),Gt(" This Exercise (",((e=s.currentBaseExercise())==null?null:e.name)||"Current",") - Completed Sets (",s.allPreviousLoggedSetsForCurrentExercise().length,") "),D(),B("ngClass",rs(17,IS,s.showCompletedSetsForExerciseInfo())),D(2),B("ngIf",s.allPreviousLoggedSetsForCurrentExercise().length>0&&s.showCompletedSetsForExerciseInfo()),D(),B("ngIf",s.allPreviousLoggedSetsForCurrentExercise().length===0&&s.showCompletedSetsForExerciseInfo()),D(6),$e(" Today's Logged Sets (All Exercises) (",s.allPreviousLoggedSetsForCurrentSession().length,") "),D(),B("ngClass",rs(19,IS,s.showCompletedSetsForDayInfo())),D(2),B("ngIf",s.allPreviousLoggedSetsForCurrentSession().length>0&&s.showCompletedSetsForDayInfo()),D(),B("ngIf",s.allPreviousLoggedSetsForCurrentSession().length===0&&s.showCompletedSetsForDayInfo()),D(),B("ngIf",s.trackingService.findPreviousSetPerformance(s.lastPerformanceForCurrentExercise,i.setData,i.setIndex)),D(),B("ngIf",!s.lastPerformanceForCurrentExercise&&s.activeSetInfo()&&!(!((o=s.activeSetInfo())==null||o.exerciseData==null||o.exerciseData.exerciseId==null)&&o.exerciseData.exerciseId.startsWith("custom-"))),D(),B("ngIf",s.exercisePBs().length>0||s.currentBaseExercise()&&!(!((n=s.currentBaseExercise())==null||n.id==null)&&n.id.startsWith("custom-"))),D(5),B("ngIf",i.setData.reps!==void 0),D(),B("ngIf",i.setData.weight!==void 0&&i.setData.weight!==null),D(),B("ngIf",i.setData.duration!==void 0),D(),B("ngIf",i.setData.tempo),D(),B("ngIf",i.setData.notes)}}function gB(r,t){if(r&1){let e=ke();I(0,"div",146)(1,"div",147)(2,"header",148)(3,"div",149),_e(),I(4,"svg",150),pe(5,"path",151),E(),Ge(),I(6,"h3",152),O(7,"Performance Insights & Targets"),E()(),I(8,"button",122),ie("click",function(){re(e);let n=L();return oe(n.closePerformanceInsights())}),_e(),I(9,"svg",153),pe(10,"path",154),E()()(),ae(11,hB,33,21,"div",155),Ge(),I(12,"footer",156)(13,"button",157),ie("click",function(){re(e);let n=L();return oe(n.closePerformanceInsights())}),O(14," Done "),E()()()()}if(r&2){let e=L();D(11),B("ngIf",e.activeSetInfo())}}function xB(r,t){if(r&1){let e=ke();I(0,"li",251),ie("click",function(){let n=re(e).$implicit,i=L(2);return oe(i.selectExerciseToAddFromModal(n))}),I(1,"div")(2,"span",252),O(3),E(),I(4,"span",253),O(5),pt(6,"titlecase"),pt(7,"titlecase"),E()(),_e(),I(8,"svg",254),pe(9,"path",255),E()()}if(r&2){let e=t.$implicit;D(3),We(e.name),D(2),Gt("",Vt(6,3,e.category)," - ",Vt(7,5,e.primaryMuscleGroup))}}function yB(r,t){r&1&&(I(0,"li",256),O(1,"No exercises match your search."),E())}function bB(r,t){r&1&&(I(0,"li",256),O(1,"Exercise library is empty or still loading."),E())}function vB(r,t){if(r&1){let e=ke();I(0,"div",233),ie("click",function(){re(e);let n=L();return oe(n.closeExerciseSelectionModal())}),I(1,"div",234),ie("click",function(n){return re(e),oe(n.stopPropagation())}),I(2,"div",235)(3,"div",236)(4,"h3",237),O(5,"Add Exercise to Session"),E(),I(6,"button",238),ie("click",function(){re(e);let n=L();return oe(n.closeExerciseSelectionModal())}),_e(),I(7,"svg",239),pe(8,"path",240),E()()(),Ge(),I(9,"div",241)(10,"input",242),ie("ngModelChange",function(n){re(e);let i=L();return oe(i.modalSearchTerm.set(n))}),E()(),I(11,"div",243)(12,"ul",244),ae(13,xB,10,7,"li",245)(14,yB,2,0,"li",246)(15,bB,2,0,"li",246),E()(),I(16,"div",247)(17,"button",248),ie("click",function(){re(e);let n=L();return oe(n.handleTrulyCustomExerciseEntry())}),O(18," Or, create a new custom exercise entry... "),E()()(),I(19,"div",249)(20,"button",250),ie("click",function(){re(e);let n=L();return oe(n.closeExerciseSelectionModal())}),O(21," Cancel "),E()()()()}if(r&2){let e=L();D(10),B("ngModel",e.modalSearchTerm()),D(3),B("ngForOf",e.filteredAvailableExercises()),D(),B("ngIf",e.filteredAvailableExercises().length===0&&e.availableExercises.length>0),D(),B("ngIf",e.availableExercises.length===0)}}function SB(r,t){r&1&&(I(0,"div",257)(1,"p",258),O(2,"Loading workout player..."),E()())}function wB(r,t){if(r&1){let e=ke();I(0,"app-modal",259),ts("isOpenChange",function(n){re(e);let i=L();return es(i.isSimpleModalOpen,n)||(i.isSimpleModalOpen=n),oe(n)}),pe(1,"app-exercise-detail",260),E()}if(r&2){let e=L();Ji("isOpen",e.isSimpleModalOpen),B("modalTitle",e.exerciseDetailsName),D(),B("id",e.exerciseDetailsId)("isModal",!0)}}var TS=(o=>(o.PerformingSet="performing_set",o.PresetCountdown="preset_countdown",o.Resting="resting",o))(TS||{}),Od=class r{route=Ve(ha);router=Ve(qn);workoutService=Ve(Sa);exerciseService=Ve(Xn);trackingService=Ve(jn);alertService=Ve(va);toastService=Ve(wa);fb=Ve(Td);storageService=Ve(Nd);cdr=Ve(pa);unitService=Ve(Ca);appSettingsService=Ve(vS);platformId=Ve(ca);routine=De(void 0);program=De(void 0);sessionState=De("loading");PlayerSubState=TS;playerSubState=De("performing_set");currentExerciseIndex=De(0);currentSetIndex=De(0);currentBlockRound=De(1);totalBlockRounds=De(1);sessionTimerDisplay=De("00:00:00");workoutStartTime=0;sessionTimerElapsedSecondsBeforePause=0;timerSub;timedSetTimerState=De("idle");timedSetElapsedSeconds=De(0);timedSetIntervalSub;soundPlayedForThisCountdownSegment=!1;presetTimerCountdownDisplay=De(null);presetTimerDuration=De(0);presetTimerSub;isRestTimerVisible=De(!1);restDuration=De(0);restTimerDisplay=De(null);restTimerMainText=De("RESTING");restTimerNextUpText=De(null);nextActionButtonLabel=At(()=>{switch(this.playerSubState()){case"preset_countdown":return"GETTING READY...";case"resting":return"RESTING...";case"performing_set":default:return"SET DONE"}});currentSetForm;lastPerformanceForCurrentExercise=null;editingTarget=null;editingTargetValue="";routineId=null;isExerciseModalOpen=De(!1);availableExercises=[];modalSearchTerm=De("");filteredAvailableExercises=At(()=>{let t=this.modalSearchTerm().toLowerCase();return t?this.availableExercises.filter(e=>e.name.toLowerCase().includes(t)||e.category.toLowerCase().includes(t)||e.primaryMuscleGroup&&e.primaryMuscleGroup.toLowerCase().includes(t)):this.availableExercises});PAUSED_WORKOUT_KEY="fitTrackPro_pausedWorkoutState";PAUSED_STATE_VERSION="1.2";originalRoutineSnapshot=[];currentWorkoutLogExercises=De([]);wasRestTimerVisibleOnPause=!1;restTimerRemainingSecondsOnPause=0;restTimerInitialDurationOnPause=0;restTimerMainTextOnPause="RESTING";restTimerNextUpTextOnPause=null;wasTimedSetRunningOnPause=!1;autoSaveSub;AUTO_SAVE_INTERVAL_MS=8e3;isSessionConcluded=!1;routerEventsSub;isInitialLoadComplete=!1;exercisesProposedThisCycle={doLater:!1,skipped:!1};shouldStartWithPresetTimer=At(()=>{let t=this.activeSetInfo();if(!t)return!1;let e=this.appSettingsService.enablePresetTimer(),o=this.appSettingsService.presetTimerDurationSeconds();if(!e||o<=0)return!1;let n=this.routine(),i=t.exerciseIndex,s=t.setIndex;if(!n||!n.exercises[i]||!n.exercises[i].sets[s])return!1;let a=i===0&&s===0&&this.currentBlockRound()===1,l=1/0;if(s>0)l=n.exercises[i].sets[s-1].restAfterSet;else if(i>0){let u=n.exercises[i-1];l=u.sets[u.sets.length-1].restAfterSet}return a||l===0});mainActionButtonLabel=At(()=>{let t=this.activeSetInfo(),e=this.routine();switch(this.playerSubState()){case"preset_countdown":return`PREPARING... ${this.presetTimerCountdownDisplay()}s`;case"resting":return`RESTING: ${this.restTimerDisplay()}`;case"performing_set":if(this.checkIfLatestSetOfWorkoutConsideringPending()){let o=this.activeSetInfo()?.exerciseData.sessionStatus;if(o==="skipped"||o==="do_later"){if(t&&e&&t.exerciseData.sets.length>0){let n=this.currentWorkoutLogExercises().find(s=>s.exerciseId===t.exerciseData.exerciseId);if(!(n&&n.sets.length===t.exerciseData.sets.length))return this.checkIfSetIsPartOfRounds()?this.checkIfLatestSetOfRound()?"COMPLETE ROUND":"SET DONE":this.checkIfLatestSetOfExercise()?"COMPLETE EXERCISE":"SET DONE"}return o==="skipped"?"SKIPPED":"DO LATER"}if(t!==null){let n=this.currentWorkoutLogExercises().find(s=>s.exerciseId===t.exerciseData.exerciseId);if(n&&n.sets.length===t.exerciseData.sets.length){if(this.checkIfLatestSetOfExercise())return this.checkIfSetIsPartOfRounds()?this.checkIfLatestSetOfRound()?this.checkIfLatestRoundOfRounds()?"FINISH WORKOUT":"COMPLETE ROUND":"COMPLETE EXERCISE":"SET DONE"}else return this.checkIfSetIsPartOfRounds()?this.checkIfLatestSetOfRound()?"COMPLETE ROUND":"SET DONE":this.checkIfLatestSetOfExercise()?"COMPLETE EXERCISE":"SET DONE"}return"FINISH WORKOUT"}else return this.checkIfLatestSetOfExercise()?this.checkIfSetIsPartOfRounds()&&this.checkIfLatestSetOfRound()?"COMPLETE ROUND":"COMPLETE EXERCISE":"SET DONE";default:return"SET DONE"}});routeSub;rpeValue=De(null);rpeOptions=Array.from({length:10},(t,e)=>e+1);showRpeSlider=De(!1);timedSetDisplay=At(()=>{let t=this.timedSetTimerState(),e=this.timedSetElapsedSeconds(),n=this.activeSetInfo()?.setData?.duration;return t==="idle"?(n!==void 0&&n>0?n:this.csf?.actualDuration?.value??0).toString():n!==void 0&&n>0?(n-e).toString():e.toString()});isTimedSetOvertime=At(()=>{if(this.timedSetTimerState()==="idle")return!1;let e=this.timedSetElapsedSeconds(),o=this.activeSetInfo()?.setData?.duration;return o!==void 0&&o>0&&e>o});unloadNotification(t){this.sessionState()==="playing"&&this.routine()&&this.currentWorkoutLogExercises().length>0&&this.captureAndSaveStateForUnload()}get weightUnitDisplaySymbol(){return this.unitService.getUnitLabel()}getWorkingSetCountForCurrentExercise=At(()=>{let t=this.routine(),e=this.currentExerciseIndex();return t&&t.exercises[e]?t.exercises[e].sets.filter(o=>o.type!=="warmup").length:0});getCurrentWorkingSetNumber=At(()=>{let t=this.activeSetInfo(),e=this.routine();if(!t||!e||t.type==="warmup")return 0;let o=e.exercises[t.exerciseIndex],n=0;for(let i=0;i<=t.setIndex;i++)o.sets[i].type!=="warmup"&&n++;return n});getCurrentWarmupSetNumber=At(()=>{let t=this.activeSetInfo(),e=this.routine();if(!t||!e||t.type!=="warmup")return 0;let o=e.exercises[t.exerciseIndex],n=0;for(let i=0;i<=t.setIndex;i++)o.sets[i].type==="warmup"&&n++;return n});activeSetInfo=At(()=>{let t=this.routine(),e=this.currentExerciseIndex(),o=this.currentSetIndex();if(t&&t.exercises[e]&&t.exercises[e].sets[o]){let n=t.exercises[e],i=t.exercises[e].sets[o],a=this.currentWorkoutLogExercises().find(l=>l.exerciseId===n.exerciseId)?.sets.find(l=>l.plannedSetId===i.id);return{exerciseIndex:e,setIndex:o,exerciseData:n,setData:i,type:i.type??"standard",baseExerciseInfo:void 0,isCompleted:!!a,actualReps:a?.repsAchieved,actualWeight:a?.weightUsed,actualDuration:a?.durationPerformed,notes:a?.notes}}return null});currentBaseExercise=De(void 0);exercisePBs=De([]);allPreviousLoggedSetsForCurrentExercise=At(()=>{let t=this.activeSetInfo();if(!t||t.setIndex===0)return[];let e=this.currentWorkoutLogExercises().find(o=>o.exerciseId===t.exerciseData.exerciseId);if(e&&e.sets.length>0){let o=[];for(let n=0;n<t.setIndex;n++){let i=t.exerciseData.sets[n]?.id;if(i){let s=e.sets.find(a=>a.plannedSetId===i);s&&o.push(s)}}return o}return[]});allPreviousLoggedSetsForCurrentSession=At(()=>{let t=this.activeSetInfo();if(!t)return[];let e=[];for(let o of this.currentWorkoutLogExercises())for(let n of o.sets){let i=this.routine();if(!i)continue;let s=i.exercises.findIndex(a=>a.exerciseId===o.exerciseId);if(!(s<0)){if(s<t.exerciseIndex)e.push(n);else if(s===t.exerciseIndex){let a=i.exercises[s].sets.findIndex(l=>l.id===n.plannedSetId);a>-1&&a<t.setIndex&&e.push(n)}}}return e});isWorkoutMenuVisible=De(!1);isPerformanceInsightsVisible=De(!1);showCompletedSetsInfo=De(!1);isPerformingDeferredExercise=!1;lastActivatedDeferredExerciseId=null;constructor(){this.initializeCurrentSetForm()}resetAndPatchCurrentSetForm(){this.currentSetForm.reset({rpe:null,setNotes:""}),this.rpeValue.set(null),this.showRpeSlider.set(!1),this.resetTimedSet(),this.patchActualsFormBasedOnSessionTargets()}startSessionTimer(){this.sessionState()!=="paused"&&(this.timerSub&&this.timerSub.unsubscribe(),this.timerSub=md(0,1e3).subscribe(()=>{if(this.sessionState()==="playing"){let t=Math.floor((Date.now()-this.workoutStartTime)/1e3),e=this.sessionTimerElapsedSecondsBeforePause+t,o=Math.floor(e/3600),n=Math.floor(e%3600/60),i=e%60;this.sessionTimerDisplay.set(`${String(o).padStart(2,"0")}:${String(n).padStart(2,"0")}:${String(i).padStart(2,"0")}`)}}))}updateRestTimerDisplay(t){let e=Math.floor(t/60),o=t%60;this.restTimerDisplay.set(`${String(e).padStart(2,"0")}:${String(o).padStart(2,"0")}`)}addLoggedSetToCurrentLog(t,e){let o=this.currentWorkoutLogExercises(),n=this.routine()?.exercises.findIndex(a=>a.id===t.id),i,s=-1;for(let a=0;a<o.length;a++){let l=o[a],u=this.routine()?.exercises.find(c=>c.id===t.id);if(l.exerciseId===t.exerciseId&&u&&u.id===t.id&&u.id===l.id){i=l,s=a;break}}if(i){let a=i.sets.findIndex(l=>l.plannedSetId===e.plannedSetId);a>-1?i.sets[a]=e:i.sets.push(e)}else{let a=this.currentBaseExercise()?.name||t.exerciseName||"Unknown Exercise",l={id:t.id,exerciseId:t.exerciseId,exerciseName:a,sets:[e],rounds:t.rounds||0,type:e.type||"standard"};typeof n=="number"&&n>=0&&n<=o.length?o.splice(n,0,l):o.push(l)}this.currentWorkoutLogExercises.set([...o])}finishWorkout(){return X(this,null,function*(){yield this.finishWorkoutAndReportStatus()})}comparePerformedToOriginal(t,e){let o=[],n=!1,i=e.filter(l=>t.some(u=>u.exerciseId===l.exerciseId)),s=t.filter(l=>e.some(u=>(u.exerciseId===l.exerciseId||l.exerciseName===u.exerciseName)&&u.type!==l.type)),a=t.filter(l=>!e.some(u=>u.exerciseId===l.exerciseId)&&l.exerciseId.startsWith("custom-exercise-"));(s.length!==e.length||a.length>0)&&(o.push("Number of exercises or their content changed."),n=!0),a.length>0&&o.push(`${a.length} custom exercise(s) added.`);for(let l of e){let u=t.find(c=>c.exerciseId===l.exerciseId);if(!u){o.push(`Exercise "${l.exerciseName||l.exerciseId}" was in the plan but not performed.`),n=!0;continue}if(u.sets.length!==l.sets.length&&u.rounds!==l.rounds)o.push(`Set count for "${u.exerciseName||u.exerciseId}" changed (was ${l.sets.length}, now ${u.sets.length}).`),n=!0;else for(let c=0;c<u.sets.length;c++){let p=l.sets[c]?.type==="warmup",d=u.sets[c]?.type==="warmup";if(p!==d){o.push(`Warm-up status for set ${c+1} of "${u.exerciseName}" changed.`),n=!0;break}}}return{majorDifference:n,details:o}}convertLoggedToWorkoutExercises(t){let e=this.routine();return t.map(o=>{let n=e?.exercises.find(s=>s.exerciseId===o.exerciseId);return{id:_t(),exerciseId:o.exerciseId,exerciseName:o.exerciseName,supersetId:n?.supersetId||null,supersetOrder:n?.supersetOrder??null,supersetSize:n?.supersetSize??null,rounds:n?.rounds??1,notes:n?.notes,sets:o.sets.map(s=>{let a=n?.sets.find(l=>l.id===s.plannedSetId);return{id:_t(),reps:s.targetReps??s.repsAchieved,weight:s.targetWeight??s.weightUsed,duration:s.targetDuration??s.durationPerformed,tempo:s.targetTempo||a?.tempo,restAfterSet:a?.restAfterSet||60,notes:s.notes,type:s.type}}),type:(n?.supersetSize??0)>=1?"superset":"standard"}})}get csf(){return this.currentSetForm.controls}toggleTimedSetTimer(){if(this.sessionState()==="paused"){this.toastService.warning("Session is paused. Please resume to use the timer.",3e3,"Paused");return}let t=this.timedSetTimerState();t==="idle"||t==="paused"?this.startOrResumeTimedSet():t==="running"&&this.pauseTimedSet()}startOrResumeTimedSet(){if(this.timedSetTimerState()==="idle"){this.timedSetElapsedSeconds.set(0);let t=this.activeSetInfo()?.setData?.duration;t!==void 0&&t>0&&this.currentSetForm.get("actualDuration")?.setValue(t,{emitEvent:!1}),this.soundPlayedForThisCountdownSegment=!1}this.timedSetTimerState.set("running"),this.timedSetIntervalSub&&this.timedSetIntervalSub.unsubscribe(),this.timedSetIntervalSub=md(0,1e3).subscribe(()=>{if(this.timedSetTimerState()==="running"){this.timedSetElapsedSeconds.update(s=>s+1);let t=this.timedSetElapsedSeconds();this.currentSetForm.get("actualDuration")?.setValue(t,{emitEvent:!1});let o=this.activeSetInfo()?.setData?.duration,n=this.appSettingsService.enableTimerCountdownSound(),i=this.appSettingsService.countdownSoundSeconds();if(n&&o&&o>20&&t>0){let s=o-t;s<=i&&s>=0&&(s===0?(this.playClientGong(),this.soundPlayedForThisCountdownSegment=!0):this.playClientBeep())}}else this.timedSetIntervalSub&&this.timedSetIntervalSub.unsubscribe()})}pauseTimedSet(){this.timedSetIntervalSub&&(this.timedSetIntervalSub.unsubscribe(),this.timedSetIntervalSub=void 0),this.timedSetTimerState.set("paused")}resetTimedSet(){this.timedSetIntervalSub&&(this.timedSetIntervalSub.unsubscribe(),this.timedSetIntervalSub=void 0),this.timedSetTimerState.set("idle"),this.timedSetElapsedSeconds.set(0);let t=this.activeSetInfo()?.setData?.duration;this.currentSetForm.get("actualDuration")?.setValue(t??0,{emitEvent:!1}),this.soundPlayedForThisCountdownSegment=!1}stopAndLogTimedSet(){(this.timedSetTimerState()==="running"||this.timedSetTimerState()==="paused")&&this.pauseTimedSet()}checkIfLatestSetOfExercise(){let t=this.activeSetInfo(),e=this.routine();if(!t||!e)return!1;if(t.exerciseData.sessionStatus&&t.exerciseData.sessionStatus!=="pending")return!0;let o=e.exercises[t.exerciseIndex];if(t.setIndex===o.sets.length-1)return!0;for(let n=t.setIndex+1;n<o.sets.length;n++)if(o.sets[n].type!=="warmup")return!1;return!0}checkIfLatestSetOfRound(){let t=this.activeSetInfo(),e=this.routine();if(!t||!e)return!1;let o=e.exercises[t.exerciseIndex];if(!o.supersetId&&(!o.rounds||o.rounds<=1))return!1;let n=t.exerciseIndex,i=t.exerciseIndex;return o.supersetId&&o.supersetOrder!==null&&(n=t.exerciseIndex-o.supersetOrder,i=n+(o.supersetSize?o.supersetSize-1:0)),t.exerciseIndex===i&&t.setIndex===e.exercises[i].sets.length-1}checkIfLatestRoundOfRounds(){let t=this.routine(),e=this.activeSetInfo();if(!t||!e)return!1;let o=t.exercises[e.exerciseIndex];if(!o)return!1;let n=o.rounds??1;return o.supersetId&&o.supersetOrder!==null&&(n=t.exercises.find(s=>s.supersetId===o.supersetId&&s.supersetOrder===0)?.rounds??1),this.currentBlockRound()===n}checkIfSetIsPartOfRounds(){let t=this.activeSetInfo(),e=this.routine();if(!t||!e)return!1;let o=e.exercises[t.exerciseIndex];return o?o.supersetId&&o.supersetOrder!==null?(e.exercises.find(a=>a.supersetId===o.supersetId&&a.supersetOrder===0)?.rounds??1)>0:(o.rounds&&o.supersetId!==void 0&&o.supersetId!==null?1:0)>0:!1}checkIfLatestSetOfWorkout(){return this.checkIfLatestSetOfWorkoutConsideringPending()}checkIfLatestSetOfWorkoutConsideringPending(){let t=this.activeSetInfo(),e=this.routine();if(!t||!e)return!1;if(t.exerciseData.sessionStatus&&t.exerciseData.sessionStatus!=="pending"){for(let i=t.exerciseIndex+1;i<e.exercises.length;i++)if(e.exercises[i].sessionStatus==="pending")return!1;return!e.exercises.some(i=>(i.sessionStatus==="do_later"||i.sessionStatus==="skipped")&&!this.isExerciseFullyLogged(i.exerciseId,t.exerciseIndex,i.id))}if(!this.checkIfLatestSetOfExercise())return!1;for(let n=t.exerciseIndex+1;n<e.exercises.length;n++)if(e.exercises[n].sessionStatus==="pending"&&e.exercises[n].sets.length>0)return!1;return!e.exercises.some((n,i)=>(n.sessionStatus==="do_later"||n.sessionStatus==="skipped")&&!this.isExerciseFullyLogged(n.exerciseId,i,n.id))}getUnfinishedOrDeferredExercises(t){let e=t.exercises[this.currentExerciseIndex()],o=this.getUnfinishedExercises().filter(a=>a.id!==e.id);console.log("Unfinished exercises (excluding current):",o.map(a=>a.exerciseName));let n=t.exercises.map((a,l)=>_r(ar({},a),{originalIndex:l})).filter((a,l)=>(a.sessionStatus==="do_later"||a.sessionStatus==="skipped")&&!this.isExerciseFullyLogged(a.exerciseId,l,a.id)).sort((a,l)=>a.sessionStatus==="do_later"&&l.sessionStatus==="skipped"?-1:a.sessionStatus==="skipped"&&l.sessionStatus==="do_later"?1:a.originalIndex-l.originalIndex),i=o.map((a,l)=>_r(ar({},a),{originalIndex:t.exercises.findIndex(u=>u.id===a.id)})),s=[...n,...i].filter((a,l,u)=>u.findIndex(c=>c.id===a.id)===l);return s.sort((a,l)=>{let u=t.exercises.findIndex(p=>p.id===a.id),c=t.exercises.findIndex(p=>p.id===l.id);return u-c}),s}tryProceedToDeferredExercisesOrFinish(t){return X(this,null,function*(){console.log("tryProceedToDeferredExercisesOrFinish: ENTERED. Proposed flags before:",JSON.stringify(this.exercisesProposedThisCycle));let e=this.getUnfinishedOrDeferredExercises(t);if(console.log("tryProceedToDeferredExercisesOrFinish: Found unfinished deferred/skipped:",e.map(o=>`${o.exerciseName} (${o.sessionStatus})`)),e.length>0){let o=!1,n,i=!1,s=!1;if(e.length===1){let a=e[0],l=yield this.alertService.showConfirmationDialog(`Unfinished: ${a.exerciseName}`,`You have "${a.exerciseName}" (${a.sessionStatus==="do_later"?"Do Later":"Skipped"}) remaining. Complete it now?`,[{text:"Complete It",role:"confirm",data:a.originalIndex,cssClass:"bg-blue-500 hover:bg-blue-600 text-white"},{text:"Finish Workout",role:"destructive",data:"finish_now",cssClass:"bg-green-500 hover:bg-green-600 text-white"},{text:"Cancel (Decide Later)",role:"cancel",data:"cancel_deferred_choice"}]);l&&typeof l.data=="number"?(o=!0,n=l.data):l&&l.data==="finish_now"?i=!0:s=!0}else{let l=[...e.map(c=>{let p="",d="bg-gray-500 dark:bg-gray-700 dark:text-gray-100 hover:bg-gray-300 hover:text-gray-500 hover:dark:bg-gray-300 hover:dark:text-gray-500";switch(c.sessionStatus){case"do_later":p="Do Later",d="bg-orange-500 hover:bg-orange-600 text-white";break;case"skipped":p="Skipped",d="bg-yellow-500 hover:bg-yellow-600 text-black";break;case"pending":p="Pending",d="bg-violet-500 hover:bg-violet-600 text-black";break;default:p=c.sessionStatus||""}return{text:`${c.exerciseName} (${p})`,role:"confirm",data:c.originalIndex,cssClass:d}}),{text:"Finish Workout Now",role:"destructive",data:"finish_now",cssClass:"bg-green-500 hover:bg-green-600 text-white mt-4"},{text:"Cancel (Decide Later)",role:"cancel",data:"cancel_deferred_choice"}],u=yield this.alertService.showConfirmationDialog("Unfinished Exercises","You have unfinished exercises. Would you like to complete any of them now, or finish the workout?",l);u&&typeof u.data=="number"?(o=!0,n=u.data):u&&u.data==="finish_now"?i=!0:s=!0}if(i){console.log("tryProceedToDeferredExercisesOrFinish: User chose 'Finish Workout Now'."),yield this.finishWorkoutAndReportStatus();return}if(s){console.log("tryProceedToDeferredExercisesOrFinish: User cancelled choice of deferred exercises. Setting proposal flags."),e.forEach(a=>{a.sessionStatus==="do_later"&&(this.exercisesProposedThisCycle.doLater=!0),a.sessionStatus==="skipped"&&(this.exercisesProposedThisCycle.skipped=!0)}),console.log("tryProceedToDeferredExercisesOrFinish: Proposed flags after cancel:",JSON.stringify(this.exercisesProposedThisCycle)),this.cdr.detectChanges();return}if(o&&n!==void 0){let a=t.exercises[n];console.log(`tryProceedToDeferredExercisesOrFinish: User selected exercise: ${a.exerciseName}`),this.isPerformingDeferredExercise=!0,this.lastActivatedDeferredExerciseId=a.id;let l=JSON.parse(JSON.stringify(t));l.exercises[n].sessionStatus="pending",this.routine.set(l),this.currentExerciseIndex.set(n),this.currentSetIndex.set(this.findFirstUnloggedSetIndex(a.exerciseId,a.sets.map(c=>c.id))||0),this.currentBlockRound.set(1);let u=l.exercises[n];if(!u.supersetId||u.supersetOrder===0)this.totalBlockRounds.set(u.rounds??1);else{let c=l.exercises.find(p=>p.supersetId===u.supersetId&&p.supersetOrder===0);this.totalBlockRounds.set(c?.rounds??1)}this.lastPerformanceForCurrentExercise=null,this.playerSubState.set("performing_set"),yield this.prepareCurrentSet();return}}console.log("tryProceedToDeferredExercisesOrFinish: No unfinished exercises to propose or all paths handled. Finishing workout."),yield this.finishWorkoutAndReportStatus()})}isExerciseFullyLogged(t,e,o){let n=this.routine();if(!n)return!1;let i=n.exercises.find(c=>c.exerciseId===t&&c.id===o);if(!i)return!1;let s=this.currentWorkoutLogExercises().find(c=>c.exerciseId===t&&i.exerciseId===c.exerciseId&&c.id===o);if(!s)return!1;let a=i.rounds??1;i.supersetId&&i.supersetOrder!==null&&(a=n.exercises.find(p=>p.supersetId===i.supersetId&&p.supersetOrder===0)?.rounds??1);let l=i.sets.length,u=l*a;return s.sets.length>=l}findFirstUnloggedSetIndex(t,e){let o=this.currentWorkoutLogExercises().find(i=>i.exerciseId===t);if(!o)return 0;let n=new Set(o.sets.map(i=>i.plannedSetId));for(let i=0;i<e.length;i++)if(!n.has(e[i]))return i;return null}fetchLastPerformanceAndPatchForm(){return X(this,null,function*(){yield this.prepareCurrentSet()})}patchCurrentSetFormWithData(t){this.patchActualsFormBasedOnSessionTargets()}startEditTarget(t){let e=this.activeSetInfo();if(e)switch(this.editingTarget=t,t){case"reps":this.editingTargetValue=e.setData.reps??"";break;case"weight":this.editingTargetValue=e.setData.weight??"";break;case"duration":this.editingTargetValue=e.setData.duration??"";break}}cancelEditTarget(){this.editingTarget=null,this.editingTargetValue=""}formatPbValue(t){let e="";return t.weightUsed!==void 0&&t.weightUsed!==null?(e+=`${t.weightUsed}${this.unitService.getUnitSuffix()}`,t.repsAchieved>1&&!t.pbType.includes("RM (Actual)")&&(e+=` x ${t.repsAchieved}`)):t.repsAchieved>0&&t.pbType.includes("Max Reps")?e=`${t.repsAchieved} reps`:t.durationPerformed&&t.durationPerformed>0&&t.pbType.includes("Max Duration")&&(e=`${t.durationPerformed}s`),e||"N/A"}initializeCurrentSetForm(){this.currentSetForm=this.fb.group({actualReps:[null,[mt.min(0)]],actualWeight:[null,[mt.min(0)]],actualDuration:[null,[mt.min(0)]],setNotes:[""],rpe:[null,[mt.min(1),mt.max(10)]]})}prepareCurrentSet(){return X(this,null,function*(){if(console.log("prepareCurrentSet: START"),this.sessionState()==="paused"){console.log("prepareCurrentSet: Session is paused, deferring preparation.");return}let t=this.routine();if(!t||t.exercises.length===0){console.warn("prepareCurrentSet: No sessionRoutine or no exercises in routine. Current routine:",t),this.sessionState.set("error"),this.toastService.error("Cannot prepare set: Routine data is missing or empty.",0,"Error");return}let e=this.currentExerciseIndex(),o=this.currentSetIndex();if(console.log(`prepareCurrentSet: Initial target - exIndex: ${e}, sIndex: ${o}, sessionStatus: ${t.exercises[e]?.sessionStatus}`),t.exercises[e]?.sessionStatus!=="pending"){console.log(`prepareCurrentSet: Initial target Ex ${e} (name: ${t.exercises[e]?.exerciseName}) is ${t.exercises[e]?.sessionStatus}. Finding first 'pending'.`);let y=this.findFirstPendingExerciseAndSet(t);if(y)e=y.exerciseIndex,o=y.setIndex,this.currentExerciseIndex.set(e),this.currentSetIndex.set(o),this.isPerformingDeferredExercise=!1,console.log(`prepareCurrentSet: Found first pending - exIndex: ${e} (name: ${t.exercises[e]?.exerciseName}), sIndex: ${o}`);else{console.log("prepareCurrentSet: No 'pending' exercises found in the entire routine. Proceeding to deferred/finish evaluation."),this.exercisesProposedThisCycle={doLater:!1,skipped:!1},yield this.tryProceedToDeferredExercisesOrFinish(t);return}}if(e>=t.exercises.length||!t.exercises[e]||o>=t.exercises[e].sets.length||!t.exercises[e].sets[o]){this.currentSetForm.reset({rpe:null,setNotes:""}),this.resetTimedSet(),this.currentBaseExercise.set(null),this.exercisePBs.set([]),this.lastPerformanceForCurrentExercise=null,this.rpeValue.set(null),this.showRpeSlider.set(!1),console.error(`prepareCurrentSet: CRITICAL ERROR - Calculated exIndex ${e} or sIndex ${o} is out of bounds or data is invalid.`),this.sessionState.set("error"),this.toastService.error("Error preparing set: Invalid exercise or set index.",0,"Load Error");return}let n=t.exercises[e],i=n.sets[o];console.log(`prepareCurrentSet: Preparing for Ex: "${n.exerciseName}", Set: ${o+1}, Type: ${i.type}`);let a=(this.originalRoutineSnapshot.find(y=>y.exerciseId===n.exerciseId)||n)?.sets[o]||i;this.loadBaseExerciseAndPBs(n.exerciseId),(!this.lastPerformanceForCurrentExercise||this.lastPerformanceForCurrentExercise.sets[0]?.exerciseId!==n.exerciseId)&&(this.lastPerformanceForCurrentExercise=yield zn(this.trackingService.getLastPerformanceForExercise(n.exerciseId).pipe(kr(1))));let l=this.trackingService.findPreviousSetPerformance(this.lastPerformanceForCurrentExercise,a,o),u;a.type==="warmup"?u=ar({},a):u=this.workoutService.suggestNextSetParameters(l,a,t.goal),u.id=i.id,u.type=i.type,u.notes=i.notes||u.notes;let c=JSON.parse(JSON.stringify(t));c.exercises[e].sets[o]=u,this.routine.set(c),this.patchActualsFormBasedOnSessionTargets();let p=this.appSettingsService.enablePresetTimer(),d=this.appSettingsService.enablePresetTimerAfterRest(),m=this.appSettingsService.presetTimerDurationSeconds(),f=this.currentWorkoutLogExercises().length===0&&this.currentBlockRound()===1&&e===this.findFirstPendingExerciseAndSet(t)?.exerciseIndex&&o===this.findFirstPendingExerciseAndSet(t)?.setIndex,g=1/0;if(o>0)g=n.sets[o-1].restAfterSet;else if(e>0){let y=e-1,v=!1;for(;y>=0;){if(this.isExerciseFullyLogged(t.exercises[y].exerciseId,y,t.exercises[y].id)||t.exercises[y].sessionStatus==="pending"&&this.currentWorkoutLogExercises().some(k=>k.exerciseId===t.exercises[y].exerciseId)){let k=t.exercises[y];k.sets.length>0&&(g=k.sets[k.sets.length-1].restAfterSet,v=!0);break}y--}v||(g=1/0)}if(p&&m>0&&(this.playerSubState()!=="resting"&&(f||g===0)||d)){console.log("prepareCurrentSet: Starting pre-set timer for:",n.exerciseName,"Set:",o+1),this.playerSubState.set("preset_countdown");let y=this.activeSetInfo();y?this.startPresetTimer(m,y):(console.error("prepareCurrentSet: ActiveSetInfo is null before starting preset timer. Aborting preset."),this.playerSubState.set("performing_set"))}else console.log("prepareCurrentSet: No pre-set timer, setting to PerformingSet for:",n.exerciseName,"Set:",o+1),this.playerSubState.set("performing_set");this.sessionState()!=="playing"&&this.sessionState()!=="paused"&&(console.log("prepareCurrentSet: Setting sessionState to Playing."),this.sessionState.set("playing")),console.log("prepareCurrentSet: END")})}findFirstPendingExerciseAndSet(t){if(!t||!t.exercises)return null;for(let e=0;e<t.exercises.length;e++){let o=t.exercises[e];if(o.sessionStatus==="pending"&&o.sets&&o.sets.length>0){let n=this.findFirstUnloggedSetIndex(o.exerciseId,o.sets.map(i=>i.id))??0;if(n<o.sets.length)return{exerciseIndex:e,setIndex:n};console.warn(`Exercise ${o.exerciseName} is pending, but all sets appear logged or index is invalid.`)}}return null}patchActualsFormBasedOnSessionTargets(){if(this.sessionState()==="paused"){console.log("patchActualsFormBasedOnSessionTargets: Session is paused, deferring preparation.");return}this.currentSetForm.patchValue({rpe:null},{emitEvent:!1}),this.rpeValue.set(null),this.showRpeSlider.set(!1),this.resetTimedSet();let t=this.activeSetInfo();if(!t)return;let o=this.currentWorkoutLogExercises().find(s=>s.exerciseId===t.exerciseData.exerciseId)?.sets.find(s=>s.plannedSetId===t.setData.id),n=t.setData.duration??null;o&&o.durationPerformed!==void 0&&(n=o.durationPerformed);let i=t.setData.weight;if(i==null){let a=(this.currentWorkoutLogExercises().find(l=>l.exerciseId===t.exerciseData.exerciseId)?.sets||[]).filter(l=>{let u=t.exerciseData.sets.find(c=>c.id===l.plannedSetId);return u&&t.exerciseData.sets.indexOf(u)<t.setIndex}).sort((l,u)=>t.exerciseData.sets.findIndex(c=>c.id===l.plannedSetId)-t.exerciseData.sets.findIndex(c=>c.id===u.plannedSetId));if(a.length>0){let l=a[a.length-1];l.weightUsed!==null&&l.weightUsed!==void 0&&(i=l.weightUsed,t.type)}else t.type==="warmup"&&(t.setData.weight===null||t.setData.weight===void 0)&&(i=t.setData.weight??null)}o?(this.currentSetForm.patchValue({actualReps:o.repsAchieved,actualWeight:o.weightUsed,actualDuration:n,setNotes:o.notes??"",rpe:o.rpe},{emitEvent:!1}),o.rpe&&this.rpeValue.set(o.rpe)):this.currentSetForm.patchValue({actualReps:t.setData.reps??(t.type==="warmup"?8:null),actualWeight:i??null,actualDuration:n,setNotes:t.setData.notes||(t.type==="warmup"?"Warm-up":""),rpe:null},{emitEvent:!1})}editWeightWithPrompt(){return X(this,null,function*(){if(this.getDisabled()||this.playerSubState()!=="performing_set"){this.toastService.warning("Cannot edit weight now.",2e3);return}if(!this.activeSetInfo())return;let e=this.csf.actualWeight.value,o=yield this.alertService.showPromptDialog("Enter Weight","",[{name:"newWeight",type:"number",placeholder:`Current: ${e??"0"} ${this.weightUnitDisplaySymbol}`,value:e??void 0,attributes:{step:1,min:"0",inputmode:"decimal"}}],"Set Weight");if(o&&o.newWeight!==void 0&&o.newWeight!==null){let n=parseFloat(String(o.newWeight));!isNaN(n)&&n>=0?this.currentSetForm.patchValue({actualWeight:n}):this.toastService.error("Invalid weight entered.",3e3,"Error")}})}loadBaseExerciseAndPBs(t){if(t.startsWith("custom-exercise-")){this.currentBaseExercise.set({id:t,name:this.activeSetInfo()?.exerciseData.exerciseName||"Custom Exercise",category:"custom",description:"",iconName:"custom-exercise",muscleGroups:[],primaryMuscleGroup:"",equipment:"",imageUrls:[]}),this.exercisePBs.set([]);return}this.currentBaseExercise.set(void 0),this.exercisePBs.set([]),this.exerciseService.getExerciseById(t).subscribe(e=>{this.currentBaseExercise.set(e?_r(ar({},e),{iconName:this.exerciseService.determineExerciseIcon(e,e?.name)}):null)}),this.trackingService.getAllPersonalBestsForExercise(t).pipe(kr(1)).subscribe(e=>this.exercisePBs.set(e))}confirmEditTarget(){let t=this.activeSetInfo();if(!t||this.editingTarget===null)return;let e=parseFloat(this.editingTargetValue);if(isNaN(e)||e<0){this.toastService.error(`Invalid value for ${this.editingTarget}. Must be non-negative.`,3e3,"Input Error");return}let o=this.routine,n=o();if(!n)return;let i=JSON.parse(JSON.stringify(n)),a=i.exercises[t.exerciseIndex].sets[t.setIndex];switch(this.editingTarget){case"reps":a.reps=e;break;case"weight":a.weight=e;break;case"duration":a.duration=e;break}o.set(i),this.toastService.success(`Target ${this.editingTarget} updated to ${e}.`,3e3,"Target Updated"),this.cancelEditTarget(),this.patchActualsFormBasedOnSessionTargets()}completeAndLogCurrentSet(){let t=this.activeSetInfo(),e=this.routine();if(!t||!e){this.toastService.error("Cannot log set: data unavailable.",0);return}if(t.setData.duration&&t.setData.duration>0&&(this.timedSetTimerState()==="running"||this.timedSetTimerState()==="paused")&&this.stopAndLogTimedSet(),this.soundPlayedForThisCountdownSegment=!1,this.currentSetForm.invalid){this.currentSetForm.markAllAsTouched();let s="";for(let a of Object.keys(this.currentSetForm.controls))if(this.currentSetForm.controls[a].invalid){s=a;break}this.toastService.error(`Please correct input: ${s?s+" is invalid.":"form invalid."}`,0,"Validation Error");return}let o=this.currentSetForm.value,n=o.actualDuration;t.setData.duration&&t.setData.duration>0&&this.timedSetElapsedSeconds()>0?n=this.timedSetElapsedSeconds():o.actualDuration===null&&t.setData.duration&&(n=t.setData.duration);let i={id:_t(),exerciseName:t.exerciseData.exerciseName,plannedSetId:t.setData.id,exerciseId:t.exerciseData.exerciseId,type:t.setData.type,repsAchieved:o.actualReps??(t.setData.type==="warmup"?0:t.setData.reps??0),weightUsed:o.actualWeight??(t.setData.type==="warmup"?null:t.setData.weight),durationPerformed:n,rpe:o.rpe??void 0,targetReps:t.setData.reps,targetWeight:t.setData.weight,targetDuration:t.setData.duration,targetTempo:t.setData.tempo,notes:o.setNotes?.trim()||void 0,timestamp:new Date().toISOString()};this.addLoggedSetToCurrentLog(t.exerciseData,i),this.sessionState()==="playing"&&this.captureAndSaveStateForUnload(),this.rpeValue.set(null),this.showRpeSlider.set(!1),this.editingTarget=null,this.currentSetForm.patchValue({setNotes:""},{emitEvent:!1}),this.navigateToNextStepInWorkout(t,e)}findNextExerciseBlockStartIndex(t,e){for(let o=t+1;o<e.exercises.length;o++){let n=e.exercises[o];if(n.sessionStatus==="pending"&&(!n.supersetId||n.supersetOrder===0))return o}return-1}getNextUpText(t,e){if(!t||!e)return"Next Set/Exercise";let o=e.exercises,n=t.exerciseIndex,i=t.setIndex,s=(f,g)=>{let x=this.currentWorkoutLogExercises().find(k=>k.exerciseId===f.exerciseId&&e.exercises[g].id===f.id),y=(f.sets?.length??0)*(f.rounds??1),v=x?.sets?.length??0;return f.sessionStatus==="pending"&&v<y},a=f=>{let g=f.rounds??1;return f.supersetId&&f.supersetOrder!==null&&(g=o.find(v=>v.supersetId===f.supersetId&&v.supersetOrder===0)?.rounds??1),{round:this.currentBlockRound?this.currentBlockRound():1,totalRounds:g}},l=o[n];if(l){if(i+1<l.sets.length){let f=l.sets[i+1],g=1;f.type==="warmup"?g=l.sets.slice(0,i+2).filter(N=>N.type==="warmup").length:g=l.sets.slice(0,i+2).filter(N=>N.type!=="warmup").length;let x=f.type==="warmup"?"Warm-up":"Set",{round:y,totalRounds:v}=a(l),k=v>1?` (Round ${y}/${v})`:"";return`${x} ${g}/${l.sets.length} of ${l.exerciseName}${k}`}for(let f=n+1;f<o.length;f++){let g=o[f];if(s(g,f)){let y=g.sets[0].type==="warmup"?"Warm-up":"Set",v=1,{round:k,totalRounds:N}=a(g),F=N>1?` (Round ${k}/${N})`:"";return`${y} ${v} of ${g.exerciseName}${F}`}}}if(o.some(f=>f.sessionStatus==="do_later"&&!this.exercisesProposedThisCycle.doLater))return"Do Later Exercises";if(o.some(f=>f.sessionStatus==="skipped"&&!this.exercisesProposedThisCycle.skipped))return"Skipped Exercises";let{round:p,totalRounds:d}=a(l);if(d>1&&p<d){let f="";if(l.supersetId&&l.supersetOrder!==null){let g=o.filter(y=>y.supersetId===l.supersetId),x=l.supersetOrder??0;x+1<g.length?f=g[x+1].exerciseName||"":f=g[0].exerciseName||""}else f=l.exerciseName||"";return`Complete Round ${p}/${d}${f?` [Next exercise: ${f}]`:""}${l.sets?.length?` (${l.sets.length} sets)`:""}`}let m=this.getUnfinishedOrDeferredExercises(e);if(m.length>0){let f=t.exerciseIndex,g=m.slice().sort((y,v)=>y.originalIndex-v.originalIndex),x=g.find(y=>y.originalIndex>f)??g[0];if(x){let y="";switch(x.sessionStatus){case"do_later":y="Do Later";break;case"skipped":y="Skipped";break;case"pending":y="Pending";break;default:y=x.sessionStatus||""}return`Next: ${x.exerciseName} (${y})`}}return d>=1?"":"Complete"}skipRest(){if(this.sessionState()==="paused"){this.toastService.warning("Session is paused. Resume to skip rest.",3e3,"Paused");return}(this.isRestTimerVisible()||this.playerSubState()==="resting")&&this.handleRestTimerSkipped()}pauseSession(){return X(this,null,function*(){this.sessionState()==="playing"&&(this.isPerformanceInsightsVisible.set(!1),this.closeWorkoutMenu(),this.sessionTimerElapsedSecondsBeforePause+=Math.floor((Date.now()-this.workoutStartTime)/1e3),this.timerSub&&this.timerSub.unsubscribe(),this.wasTimedSetRunningOnPause=this.timedSetTimerState()==="running",this.timedSetTimerState()==="running"&&this.pauseTimedSet(),this.wasRestTimerVisibleOnPause=this.isRestTimerVisible(),this.wasRestTimerVisibleOnPause&&(this.restTimerRemainingSecondsOnPause=this.restDuration(),this.restTimerInitialDurationOnPause=this.restDuration(),this.restTimerMainTextOnPause=this.restTimerMainText(),this.restTimerNextUpTextOnPause=this.restTimerNextUpText(),this.isRestTimerVisible.set(!1)),this.stopAutoSave(),this.sessionState.set("paused"),this.savePausedSessionState(),this.toastService.info("Workout Paused",3e3))})}loadStateFromPausedSession(t){return X(this,null,function*(){this.routineId=t.routineId,this.routine.set(t.sessionRoutine),this.originalRoutineSnapshot=t.originalRoutineSnapshot?JSON.parse(JSON.stringify(t.originalRoutineSnapshot)):[],this.currentExerciseIndex.set(t.currentExerciseIndex),this.currentSetIndex.set(t.currentSetIndex),this.currentWorkoutLogExercises.set(t.currentWorkoutLogExercises),this.workoutStartTime=Date.now(),this.sessionTimerElapsedSecondsBeforePause=t.sessionTimerElapsedSecondsBeforePause,this.currentBlockRound.set(t.currentBlockRound),this.totalBlockRounds.set(t.totalBlockRounds),this.timedSetTimerState.set(t.timedSetTimerState),this.timedSetElapsedSeconds.set(t.timedSetElapsedSeconds),this.wasTimedSetRunningOnPause=t.timedSetTimerState==="running"||t.timedSetTimerState==="paused",this.lastPerformanceForCurrentExercise=t.lastPerformanceForCurrentExercise,this.wasRestTimerVisibleOnPause=t.isRestTimerVisibleOnPause,this.restTimerRemainingSecondsOnPause=t.restTimerRemainingSecondsOnPause,this.restTimerInitialDurationOnPause=t.restTimerInitialDurationOnPause,this.restTimerMainTextOnPause=t.restTimerMainTextOnPause,this.restTimerNextUpTextOnPause=t.restTimerNextUpTextOnPause,this.exercisesProposedThisCycle={doLater:!1,skipped:!1},this.isPerformingDeferredExercise=!1,this.lastActivatedDeferredExerciseId=null,yield this.prepareCurrentSet(),this.sessionState()!=="error"&&this.routine()&&(this.sessionState.set("playing"),this.startSessionTimer(),this.startAutoSave()),(t.timedSetTimerState==="running"||t.timedSetTimerState==="paused")&&(this.startOrResumeTimedSet(),t.timedSetTimerState==="paused"&&this.pauseTimedSet()),this.wasRestTimerVisibleOnPause&&this.restTimerRemainingSecondsOnPause>0&&this.startRestPeriod(this.restTimerRemainingSecondsOnPause,!0),this.cdr.detectChanges(),this.toastService.success("Workout session resumed.",3e3,"Resumed")})}savePausedSessionState(){let t=this.routine();if(!t){console.warn("Cannot save paused state: routine data is not available.");return}let e=this.sessionTimerElapsedSecondsBeforePause;this.sessionState()==="playing"&&this.workoutStartTime>0&&(e+=Math.floor((Date.now()-this.workoutStartTime)/1e3));let o,n=this.currentWorkoutLogExercises()[0]?.sets[0]?.timestamp,i=n?new Date(n):this.workoutStartTime>0?new Date(this.workoutStartTime-this.sessionTimerElapsedSecondsBeforePause*1e3):new Date;o=fr(i,"yyyy-MM-dd");let s={version:this.PAUSED_STATE_VERSION,routineId:this.routineId,sessionRoutine:JSON.parse(JSON.stringify(t)),originalRoutineSnapshot:JSON.parse(JSON.stringify(this.originalRoutineSnapshot)),currentExerciseIndex:this.currentExerciseIndex(),currentSetIndex:this.currentSetIndex(),currentWorkoutLogExercises:JSON.parse(JSON.stringify(this.currentWorkoutLogExercises())),workoutStartTimeOriginal:this.workoutStartTime,sessionTimerElapsedSecondsBeforePause:e,currentBlockRound:this.currentBlockRound(),totalBlockRounds:this.totalBlockRounds(),timedSetTimerState:this.timedSetTimerState(),timedSetElapsedSeconds:this.timedSetElapsedSeconds(),isResting:this.isRestTimerVisible(),isRestTimerVisibleOnPause:this.playerSubState()==="resting",restTimerRemainingSecondsOnPause:this.restDuration(),restTimerInitialDurationOnPause:this.restTimerInitialDurationOnPause,restTimerMainTextOnPause:this.restTimerMainText(),restTimerNextUpTextOnPause:this.restTimerNextUpText(),lastPerformanceForCurrentExercise:this.lastPerformanceForCurrentExercise?JSON.parse(JSON.stringify(this.lastPerformanceForCurrentExercise)):null,workoutDate:o};this.storageService.setItem(this.PAUSED_WORKOUT_KEY,s),console.log("Paused session state saved.",s)}captureAndSaveStateForUnload(){let t=this.sessionTimerElapsedSecondsBeforePause;this.sessionState()==="playing"&&this.workoutStartTime>0&&(t+=Math.floor((Date.now()-this.workoutStartTime)/1e3));let e=this.sessionTimerElapsedSecondsBeforePause;this.sessionTimerElapsedSecondsBeforePause=t,this.savePausedSessionState(),this.sessionTimerElapsedSecondsBeforePause=e,console.log("Session state attempt saved via beforeunload.")}addWarmupSet(){return X(this,null,function*(){if(this.sessionState()==="paused"){this.toastService.warning("Session is paused. Resume to add warm-up.",3e3,"Paused");return}let t=this.routine(),e=this.activeSetInfo();if(!t||!e){this.toastService.error("Cannot add warm-up: data unavailable.",0,"Error");return}let o=t.exercises[e.exerciseIndex],n=o.sets.findIndex(c=>c.type!=="warmup"),i=o.supersetId&&o.supersetOrder!==null,s=e.setIndex===n&&n!==-1;if(i&&s){let c={id:`warmup-${_t()}`,type:"warmup",reps:8,weight:0,duration:void 0,restAfterSet:30,notes:"Warm-up set"},p=JSON.parse(JSON.stringify(t)),d=e.exerciseIndex-(o.supersetOrder??0);d<0&&(d=0);let m={id:`warmup-ex-${_t()}`,exerciseId:o.exerciseId,exerciseName:`${o.exerciseName} (Warm-up)`,sets:[c],rounds:1,supersetId:null,supersetOrder:null,supersetSize:null,sessionStatus:"pending",type:"standard"};this.addExerciseToCurrentRoutine(m,d),this.toastService.success("Warm-up set added as a separate exercise before superset.",4e3,"Warm-up Added"),this.closeWorkoutMenu(),this.closePerformanceInsights();return}if(e.setIndex>0&&e.setIndex>n&&n!==-1){let c=yield this.alertService.showConfirm("Add Warm-up Set","You are past the first working set. Adding a warm-up set now will insert it before the current set. Continue?");if(!c||!c.data)return}let a={id:`warmup-${_t()}`,type:"warmup",reps:8,weight:0,duration:void 0,restAfterSet:30,notes:"Warm-up set"},l=JSON.parse(JSON.stringify(t));l.exercises[e.exerciseIndex].sets.splice(e.setIndex,0,a),this.routine.set(l),this.toastService.success("Warm-up set added. Fill details & complete.",4e3,"Warm-up Added"),yield this.prepareCurrentSet(),this.closeWorkoutMenu(),this.closePerformanceInsights()})}getSets(){let t=this.activeSetInfo(),e=t?.exerciseData.sets||[];return t?.setData.type==="warmup"?e.filter(o=>o.type!=="warmup"):e}getWarmUpSets(){let t=this.activeSetInfo(),e=t?.exerciseData.sets||[];return t?.setData.type==="warmup"?e.filter(o=>o.type==="warmup"):[]}getTotalWarmupSetsForCurrentExercise=At(()=>{let t=this.routine(),e=this.currentExerciseIndex();return t&&t.exercises[e]?t.exercises[e].sets.filter(o=>o.type==="warmup").length:0});canAddWarmupSet=At(()=>{let t=this.activeSetInfo(),e=this.routine();if(!t||!e||this.sessionState()==="paused")return!1;let o=e.exercises[t.exerciseIndex].sets;return!(this.currentWorkoutLogExercises().find(i=>i.exerciseId===t.exerciseData.exerciseId)?.sets.some(i=>i.plannedSetId===t.setData.id)&&t.type!=="warmup")});getIconPath(t){return this.exerciseService.getIconPath(t)}toggleWorkoutMenu(){this.sessionState()==="paused"&&!this.isWorkoutMenuVisible()||(this.isWorkoutMenuVisible.update(t=>!t),this.isWorkoutMenuVisible()&&this.isPerformanceInsightsVisible.set(!1))}closeWorkoutMenu(){this.isWorkoutMenuVisible.set(!1),window.scrollTo(0,0)}skipCurrentSet(){return X(this,null,function*(){if(this.sessionState()==="paused"){this.toastService.warning("Session is paused. Resume to skip set.",3e3,"Paused");return}let t=this.activeSetInfo(),e=this.routine();if(!t||!e){this.toastService.error("Cannot skip set: No active set information.",0,"Error");return}if(t.setIndex===t.exerciseData.sets.length-1&&t.exerciseData.sessionStatus==="pending"){let o=yield this.alertService.showConfirmationDialog("Last Set",`This is the last set of "${t.exerciseData.exerciseName}". Skip the entire exercise instead?`,[{text:"Skip Set Only",role:"cancel",data:"skip_set"},{text:"Skip Exercise",role:"confirm",data:"skip_exercise",cssClass:"bg-orange-500"}]);if(o&&o.data==="skip_exercise"){yield this.markCurrentExerciseStatus("skipped"),this.closeWorkoutMenu();return}else if(!o||o.role==="cancel"&&o.data!=="skip_set")return}else{let o=yield this.alertService.showConfirm("Skip Current Set",`Skip current ${t.type==="warmup"?"warm-up":"set "+this.getCurrentWorkingSetNumber()} of "${t.exerciseData.exerciseName}"? It won't be logged.`);if(!o||!o.data)return}this.soundPlayedForThisCountdownSegment=!1,this.toastService.info(`Skipped set of ${t.exerciseData.exerciseName}.`,2e3),this.resetTimedSet(),this.navigateToNextStepInWorkout(t,e),this.closeWorkoutMenu(),this.closePerformanceInsights()})}skipCurrentExercise(){return X(this,null,function*(){yield this.markCurrentExerciseStatus("skipped")})}markCurrentExerciseDoLater(){return X(this,null,function*(){yield this.markCurrentExerciseStatus("do_later")})}markCurrentExerciseStatus(t){return X(this,null,function*(){if(this.sessionState()==="paused"){this.toastService.warning("Session is paused. Resume to mark exercise.",3e3,"Paused");return}let e=this.routine(),o=this.activeSetInfo();if(!e||!o){this.toastService.error("Cannot update exercise status: data unavailable.",0,"Error");return}let n=o.exerciseData.exerciseName,i=t==="skipped"?"Skip":"Mark for Later",s=JSON.parse(JSON.stringify(e)),a=s.exercises.find(l=>l.id===o.exerciseData.id);if(a){let l=a.sessionStatus;a.sessionStatus=t,this.routine.set(s),this.toastService.info(`"${n}" marked as ${t}.`,2e3),this.resetTimedSet(),this.isPerformingDeferredExercise&&o.exerciseData.id===this.lastActivatedDeferredExerciseId?(console.log(`markCurrentExerciseStatus: Re-marking a deferred exercise (${n}) as ${t}. Re-evaluating all deferred.`),this.isPerformingDeferredExercise=!1,this.lastActivatedDeferredExerciseId=null,this.exercisesProposedThisCycle={doLater:!1,skipped:!1},yield this.tryProceedToDeferredExercisesOrFinish(s)):(console.log(`markCurrentExerciseStatus: Marking main sequence exercise (${n}) as ${t}. Advancing.`),yield this.navigateToNextStepInWorkout(o,s,!0))}this.closeWorkoutMenu(),this.closePerformanceInsights()})}addExerciseDuringSession(){return X(this,null,function*(){if(this.sessionState()==="paused"){this.toastService.warning("Session is paused. Resume to add exercise.",3e3,"Paused"),this.closeWorkoutMenu();return}this.openExerciseSelectionModal()})}selectExerciseToAddFromModal(t){return X(this,null,function*(){if(this.closeExerciseSelectionModal(),!this.routine()){this.toastService.error("Cannot add exercise: routine data unavailable.",0,"Error");return}let o=yield this.alertService.showPromptDialog(`Add ${t.name}`,"How many sets?",[{name:"numSets",type:"number",placeholder:"e.g., 3",value:"3",attributes:{min:"1",required:!0}}],"Next");if(!o||!o.numSets||parseInt(String(o.numSets),10)<=0){this.toastService.info("Exercise addition cancelled or invalid set count.",2e3);return}let n=parseInt(String(o.numSets),10),i=[];for(let a=0;a<n;a++)i.push({id:`custom-set-${_t()}`,reps:8,weight:null,duration:void 0,restAfterSet:60,type:"standard",notes:""});let s={id:`session-ex-${_t()}`,exerciseId:t.id,exerciseName:t.name,sets:i,rounds:1,supersetId:null,supersetOrder:null,supersetSize:null,sessionStatus:"pending",type:"standard"};this.addExerciseToCurrentRoutine(s)})}handleTrulyCustomExerciseEntry(){return X(this,null,function*(){if(this.closeExerciseSelectionModal(),!this.routine())return;let e=[{name:"exerciseName",type:"text",placeholder:"Custom Exercise Name",value:"",attributes:{required:!0}},{name:"numSets",type:"number",placeholder:"Number of Sets (e.g., 3)",value:"3",attributes:{min:"1",required:!0}}],o=yield this.alertService.showPromptDialog("Add New Custom Exercise","Define exercise name and sets:",e,"Add Exercise");if(o&&o.exerciseName&&o.numSets){let n=String(o.exerciseName).trim(),i=parseInt(String(o.numSets),10);if(!n||i<=0){this.toastService.error("Invalid input for custom exercise.",0,"Error");return}let s=Array.from({length:i},()=>({id:`custom-adhoc-set-${_t()}`,reps:8,weight:null,duration:void 0,restAfterSet:60,type:"standard",notes:""})),a={id:`custom-adhoc-ex-${_t()}`,exerciseId:`custom-exercise-${_t()}`,exerciseName:n,sets:s,rounds:1,supersetId:null,sessionStatus:"pending",supersetOrder:null,type:"standard"};this.addExerciseToCurrentRoutine(a)}})}addExerciseToCurrentRoutine(t,e){return X(this,null,function*(){let o=this.routine();if(!o)return;let n=e!=null,i=JSON.parse(JSON.stringify(o)),s=e??this.currentExerciseIndex()+1,a=this.activeSetInfo();if(!n&&a&&a.exerciseData.supersetId&&a.exerciseData.supersetOrder!==null&&a.exerciseData.supersetSize&&(s=a.exerciseIndex-a.exerciseData.supersetOrder+a.exerciseData.supersetSize),i.exercises.splice(s,0,t),this.routine.set(i),n)this.currentExerciseIndex.set(s),this.currentSetIndex.set(0),this.currentBlockRound.set(1),this.totalBlockRounds.set(t.rounds??1),this.lastPerformanceForCurrentExercise=null,this.isPerformingDeferredExercise=!0,this.playerSubState.set("performing_set"),yield this.prepareCurrentSet();else{let l=yield this.alertService.showConfirm("Exercise Added",`"${t.exerciseName}" added. Start it now? (Otherwise, it will appear after your current block)`);l&&l.data?(this.currentExerciseIndex.set(s),this.currentSetIndex.set(0),this.currentBlockRound.set(1),this.totalBlockRounds.set(t.rounds??1),this.lastPerformanceForCurrentExercise=null,this.isPerformingDeferredExercise=!0,this.lastActivatedDeferredExerciseId=t.id,this.playerSubState.set("performing_set"),yield this.prepareCurrentSet()):this.toastService.success(`"${t.exerciseName}" added to the queue.`,3e3,"Exercise Added")}})}addCustomExercise(){return X(this,null,function*(){if(this.sessionState()==="paused"){this.toastService.warning("Session is paused. Resume to add exercise.",3e3,"Paused");return}let t=this.routine();if(!t){this.toastService.error("Cannot add exercise: routine data unavailable.",0,"Error");return}let e=[{name:"exerciseName",type:"text",placeholder:"Exercise Name (e.g., Custom Bicep Curl)",value:"",attributes:{required:!0}},{name:"numSets",type:"number",placeholder:"Number of Sets (e.g., 3)",value:"3",attributes:{min:"1",required:!0}},{name:"repsPerSet",type:"number",placeholder:"Reps per Set (e.g., 10)",value:"10",attributes:{min:"0"}},{name:"weightPerSet",type:"number",placeholder:"Weight (optional)",value:"",attributes:{min:"0",step:"any"}},{name:"restAfterSet",type:"number",placeholder:"Rest after set (sec, e.g., 60)",value:"60",attributes:{min:"0"}}],o=yield this.alertService.showPromptDialog("Add Custom Exercise","Define the new exercise:",e,"Add Exercise");if(o&&o.exerciseName&&o.numSets){let n=String(o.exerciseName).trim(),i=parseInt(String(o.numSets),10),s=o.repsPerSet?parseInt(String(o.repsPerSet),10):null,a=o.weightPerSet!==""&&o.weightPerSet!==null?parseFloat(String(o.weightPerSet)):null,l=o.restAfterSet?parseInt(String(o.restAfterSet),10):60;if(!n||i<=0){this.toastService.error("Invalid input for custom exercise.",0,"Error");return}let u=[];for(let g=0;g<i;g++)u.push({id:`custom-set-${_t()}`,reps:s||8,weight:a,duration:void 0,restAfterSet:l,type:"standard",notes:""});let c={id:`custom-ex-${_t()}`,exerciseId:`custom-exercise-${_t()}`,exerciseName:n,sets:u,rounds:1,supersetId:null,sessionStatus:"pending",supersetOrder:null,type:"standard"},p=JSON.parse(JSON.stringify(t)),d=this.currentExerciseIndex()+1,m=this.activeSetInfo();m&&m.exerciseData.supersetId&&m.exerciseData.supersetOrder!==null&&m.exerciseData.supersetSize&&(d=m.exerciseIndex-m.exerciseData.supersetOrder+m.exerciseData.supersetSize),p.exercises.splice(d,0,c),this.routine.set(p);let f=yield this.alertService.showConfirm("Exercise Added",`"${n}" added. Start it now? (Otherwise, it will appear after your current block)`);f&&f.data?(this.currentExerciseIndex.set(d),this.currentSetIndex.set(0),this.currentBlockRound.set(1),this.totalBlockRounds.set(c.rounds??1),this.lastPerformanceForCurrentExercise=null,this.playerSubState.set("performing_set"),yield this.prepareCurrentSet()):this.toastService.success(`"${n}" added to the queue.`,3e3,"Exercise Added")}this.closeWorkoutMenu()})}finishWorkoutEarly(){return X(this,null,function*(){if(this.sessionState()==="paused"){this.toastService.warning("Please resume before finishing early.",3e3,"Paused");return}let t=yield this.alertService.showConfirm("Finish Workout Early","Finish workout now? Current progress will be saved.");t&&t.data&&(this.closeWorkoutMenu(),this.closePerformanceInsights(),(yield this.finishWorkoutAndReportStatus())||(this.toastService.info("Workout finished early. Paused session cleared.",4e3),this.storageService.removeItem(this.PAUSED_WORKOUT_KEY),this.router.url.includes("/play")&&this.router.navigate(["/workout"])))})}mapWorkoutExerciseToLoggedWorkoutExercise(t){return{id:t.id,exerciseId:t.exerciseId,exerciseName:t.exerciseName||"",sets:t.sets.map(e=>({id:_t(),exerciseName:t.exerciseName,plannedSetId:e.id,exerciseId:t.exerciseId,type:t.type,repsAchieved:0,weightUsed:void 0,durationPerformed:void 0,rpe:void 0,targetReps:e.reps,targetWeight:e.weight,targetDuration:e.duration,targetTempo:e.tempo,notes:e.notes,timestamp:new Date().toISOString()})),rounds:t.rounds??1,type:(t.sets&&t.sets[0]&&t.sets[0].type||t.type)??"standard"}}finishWorkoutAndReportStatus(){return X(this,null,function*(){if(this.stopAutoSave(),this.sessionState()==="paused")return this.toastService.warning("Please resume workout before finishing.",3e3,"Session Paused"),!1;if(this.sessionState()==="loading")return this.toastService.info("Workout is still loading.",3e3,"Loading"),!1;let t=this.currentWorkoutLogExercises().filter(x=>x.sets.length>0);if(t===void 0||t.length===0)return!1;if(t.length===0)return this.toastService.info("No sets logged. Workout not saved.",3e3,"Empty Workout"),this.storageService.removeItem(this.PAUSED_WORKOUT_KEY),this.router.url.includes("/play")&&this.router.navigate(["/workout"]),!1;this.storageService.removeItem(this.PAUSED_WORKOUT_KEY),this.timerSub&&this.timerSub.unsubscribe();let e=this.routine(),o=this.program(),n=!0,i=!1,s=!1,a=e?.name?`${e.name} - ${fr(new Date,"MMM d")}`:`Ad-hoc Workout - ${fr(new Date,"MMM d, HH:mm")}`,l=this.originalRoutineSnapshot.filter(x=>e?.exercises.find(y=>y.id===x.id&&y.sessionStatus==="pending")||t.some(y=>y.exerciseId===x.exerciseId));if(this.routineId&&this.originalRoutineSnapshot&&this.originalRoutineSnapshot.length>0&&e){let x=this.comparePerformedToOriginal(t,l);if(x.majorDifference){let y=yield this.alertService.showConfirmationDialog("Routine Structure Changed",`You made significant changes to the routine structure:

${x.details.join(`
`)}

Would you like to save this as a new routine, update the original, or cancel?`,[{text:"Save as New Routine",role:"confirm",data:"new",cssClass:"bg-green-600"},{text:"Update Original Routine",role:"destructive",data:"update",cssClass:"bg-blue-600"},{text:"Cancel",role:"cancel",data:"cancel"}]);if(y&&y.data==="new"){let v=yield this.alertService.showPromptDialog("New Routine Name","Enter a name for your new routine:",[{name:"newRoutineName",type:"text",placeholder:a,value:a,attributes:{required:!0}}],"Save Routine");v&&String(v.newRoutineName).trim()?(a=String(v.newRoutineName).trim(),i=!0):n=!1}else y&&y.data==="update"?s=!0:n=!1}}else if(!this.routineId&&t.length>0){i=!0;let x=yield this.alertService.showPromptDialog("Save as New Routine","Enter a name for your new routine:",[{name:"newRoutineName",type:"text",placeholder:a,value:a,attributes:{required:!0}}],"Save Routine");x&&String(x.newRoutineName).trim()?a=String(x.newRoutineName).trim():x||(n=!1)}if(!n)return this.toastService.info("Finish workout cancelled. Session remains active/paused.",3e3,"Cancelled"),this.sessionState()==="playing"&&this.startAutoSave(),!1;let u=Date.now(),c=this.workoutStartTime-this.sessionTimerElapsedSecondsBeforePause*1e3,p=Math.round((u-c)/(1e3*60)),d=this.routineId||void 0,m=e?.name||"Ad-hoc Workout";if(i){let x={name:a,description:e?.description||"Workout performed on "+fr(new Date,"MMM d, yyyy"),goal:e?.goal||"custom",exercises:this.convertLoggedToWorkoutExercises(t)},y=this.workoutService.addRoutine(x);d=y.id,m=y.name,this.toastService.success(`New routine "${y.name}" created.`,4e3)}let f={routineId:d,routineName:m,date:fr(new Date(c),"yyyy-MM-dd"),startTime:c,endTime:u,durationMinutes:p,exercises:t,notes:e?.notes,programId:o?.id},g=this.trackingService.addWorkoutLog(f);if(this.toastService.success("Congrats! Workout completed!",5e3,"Workout Finished"),d){let x=yield zn(this.workoutService.getRoutineById(d).pipe(kr(1)));if(x){let y=_r(ar({},x),{lastPerformed:new Date(c).toISOString()});s&&!i&&this.routineId===d&&(y.exercises=this.convertLoggedToWorkoutExercises(t)),this.workoutService.updateRoutine(y)}}return this.isSessionConcluded=!0,this.storageService.removeItem(this.PAUSED_WORKOUT_KEY),this.router.navigate(["/workout/summary",g.id]),!0})}quitWorkout(){return X(this,null,function*(){let t=yield this.alertService.showConfirm("Quit Workout","Quit workout? Unsaved progress (if not paused) will be lost.");t&&t.data&&(this.stopAllActivity(),this.isSessionConcluded=!0,this.storageService.removeItem(this.PAUSED_WORKOUT_KEY),this.closeWorkoutMenu(),this.closePerformanceInsights(),this.router.navigate(["/workout"]),this.toastService.info("Workout quit. No progress saved for this session.",4e3))})}toggleCompletedSetsInfo(){this.showCompletedSetsInfo.update(t=>!t)}openPerformanceInsights(){if(this.sessionState()==="paused"){this.toastService.warning("Session is paused. Resume to view insights.",3e3,"Paused");return}this.isPerformanceInsightsVisible.set(!0),this.isWorkoutMenuVisible.set(!1)}closePerformanceInsights(){this.isPerformanceInsightsVisible.set(!1),this.editingTarget&&this.cancelEditTarget()}openPerformanceInsightsFromMenu(){this.closeWorkoutMenu(),this.openPerformanceInsights()}goBack(){this.currentWorkoutLogExercises().length>0&&this.sessionState()==="playing"?this.alertService.showConfirm("Exit Workout?","You have an active workout. Are you sure you want to exit? Your progress might be lost unless you pause first.").then(t=>{t&&t.data&&this.router.navigate(["/workout"])}):this.router.navigate(["/workout"])}incrementWeight(t=.5){let e=this.appSettingsService.getSettings().weightStep||t,o=this.csf.actualWeight.value??0;this.currentSetForm.patchValue({actualWeight:parseFloat((o+e).toFixed(2))})}pressStartTime=null;weightIncrementIntervalId=null;weightDecrementIntervalId=null;onWeightIncrementPointerDown(t){if(this.weightIncrementIntervalId!==null)return;this.incrementWeight(),this.weightIncrementIntervalId=setInterval(()=>{this.incrementWeight()},100);let e=()=>{this.weightIncrementIntervalId!==null&&(clearInterval(this.weightIncrementIntervalId),this.weightIncrementIntervalId=null),document.removeEventListener("mouseup",e),document.removeEventListener("touchend",e),document.removeEventListener("mouseleave",e)};document.addEventListener("mouseup",e),document.addEventListener("touchend",e),document.addEventListener("mouseleave",e)}onWeightIncrementPointerUp(t){this.weightIncrementIntervalId!==null&&(clearInterval(this.weightIncrementIntervalId),this.weightIncrementIntervalId=null),document.removeEventListener("mouseup",this.onWeightIncrementPointerUp),document.removeEventListener("touchend",this.onWeightIncrementPointerUp),document.removeEventListener("mouseleave",this.onWeightIncrementPointerUp)}onWeightDecrementPointerDown(t){if(this.weightDecrementIntervalId!==null)return;this.decrementWeight(),this.weightDecrementIntervalId=setInterval(()=>{this.decrementWeight()},100);let e=()=>{this.weightDecrementIntervalId!==null&&(clearInterval(this.weightDecrementIntervalId),this.weightDecrementIntervalId=null),document.removeEventListener("mouseup",e),document.removeEventListener("touchend",e),document.removeEventListener("mouseleave",e)};document.addEventListener("mouseup",e),document.addEventListener("touchend",e),document.addEventListener("mouseleave",e)}onWeightDecrementPointerUp(t){this.weightDecrementIntervalId!==null&&(clearInterval(this.weightDecrementIntervalId),this.weightDecrementIntervalId=null),document.removeEventListener("mouseup",this.onWeightDecrementPointerUp),document.removeEventListener("touchend",this.onWeightDecrementPointerUp),document.removeEventListener("mouseleave",this.onWeightDecrementPointerUp)}decrementWeight(t=.5){let e=this.appSettingsService.getSettings().weightStep||t,o=this.csf.actualWeight.value??0;this.currentSetForm.patchValue({actualWeight:Math.max(0,parseFloat((o-e).toFixed(2)))})}incrementReps(t=1){let e=t,o=this.csf.actualReps.value??0;this.currentSetForm.patchValue({actualReps:o+e})}decrementReps(t=1){let e=t,o=this.csf.actualReps.value??0;this.currentSetForm.patchValue({actualReps:Math.max(0,o-e)})}toggleRpeInput(){this.showRpeSlider.update(t=>!t)}updateRpe(t){let e=typeof t=="string"?parseInt(t,10):t;e!==null&&!isNaN(e)&&e>=1&&e<=10?(this.rpeValue.set(e),this.currentSetForm.patchValue({rpe:e})):e===null&&(this.rpeValue.set(null),this.currentSetForm.patchValue({rpe:null}))}startAutoSave(){Ir(this.platformId)&&(this.autoSaveSub&&this.autoSaveSub.unsubscribe(),this.autoSaveSub=Yv(this.AUTO_SAVE_INTERVAL_MS).subscribe(()=>{this.sessionState()==="playing"&&this.routine()&&(console.log("Auto-saving workout state..."),this.savePausedSessionState())}))}stopAutoSave(){this.autoSaveSub&&(this.autoSaveSub.unsubscribe(),this.autoSaveSub=void 0)}ngOnInit(){return X(this,null,function*(){Ir(this.platformId)&&window.scrollTo(0,0),(yield this.checkForPausedSession(!1))?this.isInitialLoadComplete=!0:this.loadNewWorkoutFromRoute(),Ir(this.platformId)&&(this.routerEventsSub=this.router.events.pipe(Qv(e=>e instanceof aS),Zi(e=>X(this,null,function*(){let o=this.route.snapshot,n=e.urlAfterRedirects.startsWith("/workout/play/"),i=o.paramMap.get("routineId");n&&(this.routineId===i&&this.isInitialLoadComplete&&this.sessionState()!=="playing"?!(yield this.checkForPausedSession(!0))&&this.sessionState()!=="playing"&&this.loadNewWorkoutFromRoute():this.routineId)}))).subscribe()),this.loadAvailableExercises()})}loadNewWorkoutFromRoute(){return X(this,null,function*(){console.log("loadNewWorkoutFromRoute - START"),this.isInitialLoadComplete=!1,this.sessionState.set("loading"),this.exercisesProposedThisCycle={doLater:!1,skipped:!1},this.isPerformingDeferredExercise=!1,this.lastActivatedDeferredExerciseId=null,this.stopAllActivity(),this.workoutStartTime=Date.now(),this.sessionTimerElapsedSecondsBeforePause=0,this.originalRoutineSnapshot=[],this.currentWorkoutLogExercises.set([]),this.currentSetIndex.set(0),this.currentBlockRound.set(1),this.routine.set(void 0),this.program.set(void 0),this.routeSub&&this.routeSub.unsubscribe(),this.routeSub=this.route.paramMap.pipe(ua(t=>{let e=t.get("routineId");return console.log("loadNewWorkoutFromRoute - paramMap emitted, newRoutineId:",e),e?(this.routineId=e,this.workoutService.getRoutineById(this.routineId).pipe(jc(o=>{if(o){console.log("loadNewWorkoutFromRoute: Fetched original routine -",o.name),this.originalRoutineSnapshot=JSON.parse(JSON.stringify(o.exercises));let n=JSON.parse(JSON.stringify(o));return n.exercises.forEach(i=>{i.sessionStatus="pending",i.id||(i.id=_t()),i.sets.forEach(s=>{s.id||(s.id=_t()),s.type||(s.type="standard")})}),n}return console.warn("loadNewWorkoutFromRoute: No original routine found for ID:",this.routineId),null}))):(this.toastService.error("No routine specified to play.",0,"Error"),this.router.navigate(["/workout"]),this.sessionState.set("error"),Qi(null))}),Zi(t=>X(this,null,function*(){if(console.log("loadNewWorkoutFromRoute - tap operator. Session routine copy:",t?t.name:"null"),this.sessionState()==="paused"){console.log("loadNewWorkoutFromRoute - tap: Session is paused, skipping setup."),this.isInitialLoadComplete=!0;return}if(t){this.exercisesProposedThisCycle={doLater:!1,skipped:!1},this.isPerformingDeferredExercise=!1,this.lastActivatedDeferredExerciseId=null,this.routine.set(t);let e=this.findFirstPendingExerciseAndSet(t);if(e){this.currentExerciseIndex.set(e.exerciseIndex),this.currentSetIndex.set(e.setIndex),console.log(`loadNewWorkoutFromRoute - Initial pending set to Ex: ${e.exerciseIndex}, Set: ${e.setIndex}`);let o=t.exercises[e.exerciseIndex];if(!o.supersetId||o.supersetOrder===0)this.totalBlockRounds.set(o.rounds??1);else{let n=t.exercises.find(i=>i.supersetId===o.supersetId&&i.supersetOrder===0);this.totalBlockRounds.set(n?.rounds??1)}}else{console.log("loadNewWorkoutFromRoute: Routine loaded but no initial pending exercises. Will try deferred/finish."),this.currentExerciseIndex.set(0),this.currentSetIndex.set(0),this.totalBlockRounds.set(1),this.exercisesProposedThisCycle={doLater:!1,skipped:!1},yield this.tryProceedToDeferredExercisesOrFinish(t),this.isInitialLoadComplete=!0;return}this.currentBlockRound.set(1),this.currentWorkoutLogExercises.set([]),yield this.prepareCurrentSet(),this.sessionState()!=="error"&&this.sessionState()!=="paused"&&(this.startSessionTimer(),this.startAutoSave())}else this.routineId&&(console.error("loadNewWorkoutFromRoute - tap: Failed to load routine for ID or routine was null:",this.routineId),this.routine.set(null),this.sessionState.set("error"),this.toastService.error("Failed to load workout routine.",0,"Load Error"),Ir(this.platformId)&&this.router.navigate(["/workout"]),this.stopAutoSave());this.isInitialLoadComplete=!0,console.log("loadNewWorkoutFromRoute - END tap operator. Final sessionState:",this.sessionState())}))).subscribe({error:t=>{console.error("loadNewWorkoutFromRoute - Error in observable pipeline:",t),this.routine.set(null),this.sessionState.set("error"),this.toastService.error("Critical error loading workout.",0,"Load Error"),Ir(this.platformId)&&this.router.navigate(["/workout"]),this.isInitialLoadComplete=!0}})})}checkForPausedSession(t=!1){return X(this,null,function*(){let e=this.storageService.getItem(this.PAUSED_WORKOUT_KEY),o=this.route.snapshot.paramMap.get("routineId"),n=this.route.snapshot.queryParamMap.get("resume")==="true";if(console.log("WorkoutPlayer.checkForPausedSession ...",!!e),e&&e.version===this.PAUSED_STATE_VERSION){if(o&&e.routineId===null)return console.log("WorkoutPlayer.checkForPausedSession - Current route is for a specific routine, but paused session was ad-hoc. Discarding paused session."),this.storageService.removeItem(this.PAUSED_WORKOUT_KEY),!1;if(!o&&e.routineId!==null)return console.log("WorkoutPlayer.checkForPausedSession - Current route is ad-hoc, but paused session was for a specific routine. Discarding paused session."),this.storageService.removeItem(this.PAUSED_WORKOUT_KEY),!1;if(o&&e.routineId&&o!==e.routineId)return console.log("WorkoutPlayer.checkForPausedSession - Paused session routine ID does not match current route routine ID. Discarding paused session."),this.storageService.removeItem(this.PAUSED_WORKOUT_KEY),!1;let i=!1;if(n)i=!0,this.router.navigate([],{relativeTo:this.route,queryParams:{resume:null},queryParamsHandling:"merge",replaceUrl:!0});else if(t)i=!0;else{let s=yield this.alertService.showConfirmationDialog("Resume Paused Workout?","You have a paused workout session. Would you like to resume it?",[{text:"Resume",role:"confirm",data:!0,cssClass:"bg-green-600"},{text:"Discard",role:"cancel",data:!1,cssClass:"bg-red-600"}]);i=!!(s&&s.data===!0)}return i?(this.stopAllActivity(),this.routeSub&&this.routeSub.unsubscribe(),yield this.loadStateFromPausedSession(e),this.storageService.removeItem(this.PAUSED_WORKOUT_KEY),this.isInitialLoadComplete=!0,!0):(this.storageService.removeItem(this.PAUSED_WORKOUT_KEY),this.toastService.info("Paused session discarded.",3e3),!1)}return!1})}stopAllActivity(){console.log("stopAllActivity - Stopping timers and auto-save."),this.stopAutoSave(),this.timerSub&&this.timerSub.unsubscribe(),this.timedSetIntervalSub&&this.timedSetIntervalSub.unsubscribe(),this.isRestTimerVisible.set(!1)}resumeSession(){return X(this,null,function*(){this.sessionState()==="paused"?(console.log("resumeSession button clicked - transitioning from Paused to Playing"),this.workoutStartTime=Date.now(),this.sessionState.set("playing"),this.startSessionTimer(),this.startAutoSave(),this.wasTimedSetRunningOnPause&&this.timedSetTimerState()==="paused"&&this.startOrResumeTimedSet(),this.wasTimedSetRunningOnPause=!1,this.wasRestTimerVisibleOnPause&&this.restTimerRemainingSecondsOnPause>0&&this.startRestPeriod(this.restTimerRemainingSecondsOnPause,!0),this.wasRestTimerVisibleOnPause=!1,this.closeWorkoutMenu(),this.closePerformanceInsights(),this.toastService.info("Workout session resumed.",3e3)):!(yield this.checkForPausedSession(!0))&&this.sessionState()!=="playing"&&this.routineId&&this.loadNewWorkoutFromRoute()})}ngOnDestroy(){this.routeSub&&this.routeSub.unsubscribe(),this.timerSub&&this.timerSub.unsubscribe(),this.timedSetIntervalSub&&this.timedSetIntervalSub.unsubscribe(),this.routerEventsSub&&this.routerEventsSub.unsubscribe(),this.presetTimerSub&&this.presetTimerSub.unsubscribe(),this.stopAutoSave(),this.isRestTimerVisible.set(!1),Ir(this.platformId)&&!this.isSessionConcluded&&(this.sessionState()==="playing"||this.sessionState()==="paused")&&this.routine()&&this.currentWorkoutLogExercises().length>0&&(console.log("WorkoutPlayer ngOnDestroy - Saving state..."),this.savePausedSessionState())}playClientBeep(t=800,e=150){if(Ir(this.platformId))try{let o=window.AudioContext||window.webkitAudioContext;if(!o){console.warn("Web Audio API not supported in this browser.");return}let n=new o,i=n.createOscillator();i.type="sine",i.frequency.setValueAtTime(t,n.currentTime),i.connect(n.destination),i.start(),i.stop(n.currentTime+e/1e3),setTimeout(()=>{n.state!=="closed"&&n.close()},e+50)}catch(o){console.error("Error playing beep sound:",o)}}playClientGong(t=440,e=700){if(Ir(this.platformId))try{let o=window.AudioContext||window.webkitAudioContext;if(!o){console.warn("Web Audio API not supported in this browser.");return}let n=new o,i=n.createOscillator(),s=n.createGain();i.type="triangle",i.frequency.setValueAtTime(200,n.currentTime),s.gain.setValueAtTime(1,n.currentTime),s.gain.exponentialRampToValueAtTime(.001,n.currentTime+2),i.connect(s),s.connect(n.destination),i.start(),i.stop(n.currentTime+2)}catch(o){console.error("Error playing gong sound:",o)}}startPresetTimer(t,e){this.playerSubState.set("preset_countdown"),this.presetTimerDuration.set(t);let o=t;this.presetTimerCountdownDisplay.set(String(o)),this.restTimerMainText.set(`GET READY: ${e.exerciseData.exerciseName}`);let n=e.type==="warmup"?`Warm-up ${this.getWarmupSetNumberForDisplay(e.exerciseData,e.setIndex)}/${this.getTotalWarmupSetsForExercise(e.exerciseData)}`:`Set ${this.getWorkingSetNumberForDisplay(e.exerciseData,e.setIndex)}/${this.getWorkingSetCountForExercise(e.exerciseData)}`;this.restTimerNextUpText.set(n),this.presetTimerSub&&this.presetTimerSub.unsubscribe(),this.presetTimerSub=md(0,1e3).pipe(kr(t+1)).subscribe({next:()=>{this.presetTimerCountdownDisplay.set(String(o)),o<=this.appSettingsService.countdownSoundSeconds()&&o>0&&this.appSettingsService.enableTimerCountdownSound()&&t>5&&this.playClientBeep(600,150),o--},complete:()=>{this.playerSubState()==="preset_countdown"&&(this.playClientBeep(1e3,250),this.handlePresetTimerFinished())}})}handlePresetTimerFinished(){this.presetTimerSub&&(this.presetTimerSub.unsubscribe(),this.presetTimerSub=void 0),this.presetTimerCountdownDisplay.set(null),this.playerSubState.set("performing_set"),this.cdr.detectChanges(),console.log("Pre-set timer finished. Player state set to PerformingSet.")}skipPresetTimer(){this.playerSubState()==="preset_countdown"&&(this.presetTimerSub&&(this.presetTimerSub.unsubscribe(),this.presetTimerSub=void 0),this.handlePresetTimerFinished())}getWarmupSetNumberForDisplay(t,e){let o=0;for(let n=0;n<=e;n++)t.sets[n].type==="warmup"&&o++;return o}getTotalWarmupSetsForExercise(t){return t.sets.filter(e=>e.type==="warmup").length}getWorkingSetNumberForDisplay(t,e){let o=0;for(let n=0;n<=e;n++)t.sets[n].type!=="warmup"&&o++;return o}getWorkingSetCountForExercise(t){return t.sets.filter(e=>e.type!=="warmup").length}findNextPlayableItemIndices(t,e,o,n=!1){let i=t,s=e,a=!1,l=!1,u=!1,c=o.exercises[t];if(n||s>=c.sets.length-1){if(s=0,!n&&c.supersetId&&c.supersetOrder!==null&&c.supersetOrder<(c.supersetSize||1)-1){let m=t+1;for(;m<o.exercises.length&&(o.exercises[m].supersetId!==c.supersetId||o.exercises[m].sessionStatus!=="pending");)m++;if(m<o.exercises.length&&o.exercises[m].supersetId===c.supersetId)return i=m,{nextExIdx:i,nextSetIdx:s,blockChanged:a,isEndOfAllPending:l,roundIncremented:u}}let p=this.totalBlockRounds();if(!n&&this.currentBlockRound()<p){this.currentBlockRound.update(x=>x+1),u=!0;let m=t;c.supersetId&&c.supersetOrder!==null&&(m=t-c.supersetOrder);let f=m,g=!1;for(;f<o.exercises.length&&(c.supersetId?o.exercises[f].supersetId===c.supersetId:f===m);){if(o.exercises[f].sessionStatus==="pending"){i=f,g=!0;break}f++}if(!g)this.currentBlockRound.set(p),u=!1;else return{nextExIdx:i,nextSetIdx:s,blockChanged:a,isEndOfAllPending:l,roundIncremented:u}}a=!0,this.currentBlockRound.set(1),u=!1;let d=t+1;c.supersetId&&c.supersetOrder!==null&&(d=t-c.supersetOrder+(c.supersetSize||1)),i=-1;for(let m=d;m<o.exercises.length;m++){let f=o.exercises[m];if(f.sessionStatus==="pending"){if(!f.supersetId||f.supersetOrder===0){i=m;break}let g=m-(f.supersetOrder||0);if(g>=0&&o.exercises[g].sessionStatus==="pending"&&o.exercises[g].supersetId===f.supersetId){i=g;break}}}}else s++;return(i===-1||i>=o.exercises.length||i!==-1&&o.exercises[i].sessionStatus!=="pending")&&(l=!0,i=-1),{nextExIdx:i,nextSetIdx:s,blockChanged:a,isEndOfAllPending:l,roundIncremented:u}}getUnfinishedExercises(){let t=this.routine();return t?t.exercises.filter((e,o)=>!this.isExerciseFullyLogged(e.exerciseId,o,e.id)):[]}getFinishedExercises(){let t=this.routine(),e=this.currentWorkoutLogExercises();return t?t.exercises.filter((o,n)=>{let i=e.find(s=>s.exerciseId===o.exerciseId&&t.exercises[n].id===o.id);return i&&i.sets.length>=o.sets.length}):[]}navigateToNextStepInWorkout(t,e,o=!1){return X(this,null,function*(){let n=t.exerciseData,i=this.isExerciseFullyLogged(n.exerciseId,t.exerciseIndex,n.id);if(this.isPerformingDeferredExercise&&n.id===this.lastActivatedDeferredExerciseId&&i){console.log("navigateToNextStepInWorkout: Completed an explicitly chosen deferred/skipped exercise. Re-evaluating all remaining."),this.isPerformingDeferredExercise=!1,this.lastActivatedDeferredExerciseId=null,this.exercisesProposedThisCycle={doLater:!1,skipped:!1},yield this.tryProceedToDeferredExercisesOrFinish(e);return}let s=this.checkIfLatestSetOfRound();if(this.getUnfinishedOrDeferredExercises(e).length>0&&s&&this.currentBlockRound()<this.totalBlockRounds()){if(this.currentBlockRound()<this.totalBlockRounds()){this.currentBlockRound.update(F=>F+1);let v=t.exerciseIndex,k=e.exercises[t.exerciseIndex];k.supersetId&&k.supersetOrder!==null&&(v=t.exerciseIndex-k.supersetOrder);let N=!1;for(let F=v;F<e.exercises.length;F++){let M=e.exercises[F];if((k.supersetId?M.supersetId===k.supersetId:F===v)&&M.sessionStatus==="pending"){this.currentExerciseIndex.set(F),this.currentSetIndex.set(0),this.lastPerformanceForCurrentExercise=null,N=!0;break}if(k.supersetId&&M.supersetId!==k.supersetId||!k.supersetId&&F>v)break}if(N){yield this.prepareCurrentSet();return}}let x=-1;for(let v=t.exerciseIndex+1;v<e.exercises.length;v++)if(e.exercises[v].sessionStatus==="pending"&&!this.isExerciseFullyLogged(e.exercises[v].exerciseId,v,e.exercises[v].id)){x=v;break}if(x!==-1){this.currentExerciseIndex.set(x),this.currentSetIndex.set(0),this.currentBlockRound.set(1),this.lastPerformanceForCurrentExercise=null,yield this.prepareCurrentSet();return}let y=yield this.alertService.showConfirmationDialog("End of Round","You have unfinished exercises in this round. What would you like to do?",[{text:"Continue to Next Round",role:"confirm",data:"continue",cssClass:"bg-blue-600 text-white"},{text:"Review Unfinished Exercises",role:"destructive",data:"review",cssClass:"bg-orange-500 text-white"}]);if(y&&y.data==="review"){yield this.jumpToExercise();return}}let{nextExIdx:l,nextSetIdx:u,blockChanged:c,isEndOfAllPending:p,roundIncremented:d}=this.findNextPlayableItemIndices(t.exerciseIndex,t.setIndex,e,o);if(p){console.log("navigateToNextStepInWorkout: No more 'pending' exercises in main sequence. Attempting to proceed to deferred or finish."),this.isPerformingDeferredExercise=!1,this.lastActivatedDeferredExerciseId=null,this.exercisesProposedThisCycle={doLater:!1,skipped:!1},yield this.tryProceedToDeferredExercisesOrFinish(e);return}if(l===-1)return;let m=e.exercises[l];if(m&&n&&m.id===n.id&&console.log("Next exercise is the same as just completed:",m.exerciseName),this.currentWorkoutLogExercises().some(x=>x.exerciseId===m?.exerciseId&&e.exercises.find(y=>y.id===m?.id)&&this.isExerciseFullyLogged(m?.exerciseId,l,m.id))&&!this.checkIfSetIsPartOfRounds()&&(console.log("Next exercise is already logged in currentWorkoutLogExercises:",m?.exerciseName),this.tryProceedToDeferredExercisesOrFinish(e)),this.currentExerciseIndex.set(l),this.currentSetIndex.set(u),t.exerciseIndex!==l&&e.exercises[l].id!==this.lastActivatedDeferredExerciseId&&(this.isPerformingDeferredExercise=!1,this.lastActivatedDeferredExerciseId=null),(c||d||o||t.exerciseIndex!==l)&&(this.lastPerformanceForCurrentExercise=null),c){let x=e.exercises[l];if(!x.supersetId||x.supersetOrder===0)this.totalBlockRounds.set(x.rounds??1);else{let y=e.exercises.find(v=>v.supersetId===x.supersetId&&v.supersetOrder===0);this.totalBlockRounds.set(y?.rounds??1)}}let g=t.setData.restAfterSet;g>0&&!o?this.startRestPeriod(g):(this.playerSubState.set("performing_set"),yield this.prepareCurrentSet())})}startRestPeriod(t,e=!1){if(this.playerSubState.set("resting"),this.restDuration.set(t),Ir(this.platformId)&&t>0){let o=this.routine();if(e)this.restTimerMainText.set(this.restTimerMainTextOnPause),this.restTimerNextUpText.set(this.restTimerNextUpTextOnPause);else{this.restTimerMainText.set("RESTING");let n=this.peekNextSetInfo(),i="Next Exercise";if(n&&n.exerciseData&&n.exerciseData.sets){let s=n.type==="warmup",a=s?this.getWarmupSetNumberForDisplay(n.exerciseData,n.setIndex):this.getWorkingSetNumberForDisplay(n.exerciseData,n.setIndex),l=s?this.getTotalWarmupSetsForExercise(n.exerciseData):this.getWorkingSetCountForExercise(n.exerciseData),u=n.exerciseData.exerciseName||"Exercise",c="";if(o){let p=n.exerciseData,d=p.rounds??0;if(p.supersetId&&p.supersetOrder!==null){let m=o.exercises.find(f=>f.supersetId===p.supersetId&&f.supersetOrder===0);m&&(d=m.rounds??1)}d>=1&&p.supersetSize!==void 0&&p.supersetSize!==null&&p.supersetSize>0&&(c=` (Round ${this.currentBlockRound()}/${d})`)}i=`${s?"Warm-up ":""}Set ${a}/${l} of ${u}${c}`}this.restTimerNextUpText.set(i)}this.playerSubState.set("resting"),this.restDuration.set(t),this.isRestTimerVisible.set(!0),this.updateRestTimerDisplay(t)}else this.isRestTimerVisible.set(!1),this.playerSubState.set("performing_set"),this.prepareCurrentSet()}peekNextSetInfo(){let t=this.routine(),e=this.currentExerciseIndex(),o=this.currentSetIndex();if(t&&t.exercises[e]&&t.exercises[e].sets[o]){let n=t.exercises[e],i=t.exercises[e].sets[o];return{exerciseIndex:e,setIndex:o,exerciseData:n,setData:i,type:i.type??"standard",isCompleted:!1}}return null}handleRestTimerFinished(){console.log("Rest timer finished."),this.isRestTimerVisible.set(!1),this.prepareCurrentSet()}handleRestTimerSkipped(){console.log("Rest timer skipped."),this.isRestTimerVisible.set(!1),this.toastService.info("Rest skipped.",2e3),this.playerSubState.set("performing_set"),this.prepareCurrentSet()}getDisabled(){return this.timedSetTimerState()==="running"||this.sessionState()==="paused"||this.playerSubState()==="preset_countdown"||this.playerSubState()==="resting"}handleMainAction(){if(this.sessionState()==="paused"){this.toastService.warning("Session is paused. Please resume to continue.",3e3,"Paused");return}switch(this.playerSubState()){case"performing_set":{this.completeAndLogCurrentSet();break}case"preset_countdown":this.skipPresetTimer();break;case"resting":this.skipRest();break}}shouldRunPresetTimerForCurrentSet=At(()=>{let t=this.appSettingsService.enablePresetTimer(),e=this.appSettingsService.presetTimerDurationSeconds();if(!t||e<=0)return!1;let o=this.routine(),n=this.currentExerciseIndex(),i=this.currentSetIndex();if(!o||!o.exercises[n]||!o.exercises[n].sets[i])return!1;let s=n===0&&i===0&&this.currentBlockRound()===1,a=1/0;if(i>0)a=o.exercises[n].sets[i-1].restAfterSet;else if(n>0){let l=o.exercises[n-1];a=l.sets[l.sets.length-1].restAfterSet}return s||a===0});getIncompleteExercises(){let t=this.routine(),e=this.currentWorkoutLogExercises();return t?t.exercises.filter(o=>{if(o.sessionStatus!=="pending")return!1;let n=e.find(i=>i.exerciseId===o.exerciseId);return n?n.sets.length<o.sets.length:!0}):[]}jumpToExercise(){return X(this,null,function*(){if(this.sessionState()==="paused"){this.toastService.warning("Session is paused. Resume to jump to an exercise.",3e3,"Paused"),this.closeWorkoutMenu();return}let t=this.routine();if(!t||!t.exercises||t.exercises.length===0){this.toastService.error("No exercises available to jump to.",0,"Error"),this.closeWorkoutMenu();return}let e=t.exercises.map((i,s)=>_r(ar({},i),{originalIndex:s,isFullyLogged:this.isExerciseFullyLogged(i.exerciseId,s,i.id)})).filter(i=>!i.isFullyLogged||i.sessionStatus==="pending"||i.sessionStatus==="do_later"||i.sessionStatus==="skipped");if(e.length===0){this.toastService.info("All exercises are completed or no suitable exercises to jump to.",3e3),this.closeWorkoutMenu();return}let o=e.map(i=>{let s="",a="";i.id===this.activeSetInfo()?.exerciseData.id&&i.sessionStatus==="pending"&&!i.isFullyLogged?s=" (Current)":i.isFullyLogged&&i.sessionStatus!=="skipped"&&i.sessionStatus!=="do_later"?s=" (Completed - Restart?)":i.sessionStatus==="skipped"?s=" (Skipped)":i.sessionStatus==="do_later"&&(s=" (Do Later)");let l="";i.supersetId&&i.supersetOrder!==null&&(l=" border-2 border-primary bg-primary/50 text-white");let u="bg-gray-500 dark:bg-gray-700 dark:text-gray-100 hover:bg-gray-300 hover:text-gray-500 hover:dark:bg-gray-300 hover:dark:text-gray-500";switch(i.sessionStatus){case"pending":u=s.includes("Current")?"bg-blue-600 text-white":u;break;case"do_later":u="bg-orange-500 hover:bg-orange-600 text-white";break;case"skipped":u="bg-yellow-500 hover:bg-yellow-600 text-black";break;default:u="bg-gray-500 dark:bg-gray-700 dark:text-gray-100 hover:bg-gray-300 hover:text-gray-500 hover:dark:bg-gray-300 hover:dark:text-gray-500";break}l&&!s.includes("Current")?u=l:s.includes("Current")&&(u=u+" bg-blue-600 text-white"+(l?" border-2 border-primary":""));let c="",p;if(i.supersetId){let m=t.exercises.filter(g=>g.supersetId===i.supersetId).findIndex(g=>g.id===i.id),f=1;if(i.rounds&&i.rounds>1){let g=this.currentWorkoutLogExercises().find(x=>x.exerciseId===i.exerciseId&&x.id===i.id);g&&typeof g.rounds=="number"&&g.rounds>1?f=g.rounds:f=this.currentBlockRound?this.currentBlockRound():1}m!==-1&&(c=` [SuperSet #${m+1}${i.rounds&&i.rounds>1?`, Round ${f}/${i.rounds}`:""}]`),p=`${i.supersetId}-round${f}`}return p&&(u+=` superset-group-${p}`),{text:`${i.exerciseName}${s}${c}`,role:"confirm",data:i.originalIndex,cssClass:u,groupKey:p}});o.push({text:"Cancel",role:"cancel",data:"cancel_jump"}),this.closeWorkoutMenu();let n=yield this.alertService.showConfirmationDialog("Jump to Exercise","Select an exercise to start or continue:",o);if(n&&n.data!=="cancel_jump"&&typeof n.data=="number"){let i=n.data,s=t.exercises[i];if(!s){this.toastService.error("Selected exercise not found.",0,"Error");return}console.log(`Jumping to exercise: ${s.exerciseName} at index ${i}`),this.stopOngoingTimers();let a=JSON.parse(JSON.stringify(t)),l=a.exercises[i],u=l.sessionStatus==="do_later"||l.sessionStatus==="skipped";if(l.sessionStatus="pending",this.routine.set(a),this.currentExerciseIndex.set(i),this.currentSetIndex.set(this.findFirstUnloggedSetIndex(s.exerciseId,s.sets.map(c=>c.id))||0),this.currentBlockRound.set(1),!s.supersetId||s.supersetOrder===0)this.totalBlockRounds.set(s.rounds??1);else{let c=a.exercises.find(p=>p.supersetId===s.supersetId&&p.supersetOrder===0);this.totalBlockRounds.set(c?.rounds??1)}this.lastPerformanceForCurrentExercise=null,this.isPerformingDeferredExercise=u,this.lastActivatedDeferredExerciseId=u?s.id:null,this.playerSubState.set("performing_set"),yield this.prepareCurrentSet(),this.toastService.info(`Jumped to ${s.exerciseName}.`,2500)}})}stopOngoingTimers(){this.isRestTimerVisible()&&this.isRestTimerVisible.set(!1),this.playerSubState(),this.playerSubState()==="preset_countdown"&&this.presetTimerSub&&(this.presetTimerSub.unsubscribe(),this.presetTimerSub=void 0,this.presetTimerCountdownDisplay.set(null)),this.timedSetTimerState()!=="idle"&&this.timedSetIntervalSub&&this.resetTimedSet()}loadAvailableExercises(){this.exerciseService.getExercises().pipe(kr(1)).subscribe(t=>{this.availableExercises=t})}openExerciseSelectionModal(){if(this.sessionState()==="paused"){this.toastService.warning("Session is paused. Resume to add exercise.",3e3,"Paused");return}this.availableExercises.length===0&&this.loadAvailableExercises(),this.modalSearchTerm.set(""),this.isExerciseModalOpen.set(!0),this.closeWorkoutMenu()}closeExerciseSelectionModal(){this.isExerciseModalOpen.set(!1)}onModalSearchTermChange(t){let e=t.target;this.modalSearchTerm.set(e.value)}isExerciseDetailModalOpen=De(!1);isSimpleModalOpen=De(!1);exerciseDetailsId="";exerciseDetailsName="";performAction(){console.log("Action performed from modal footer!"),this.isExerciseDetailModalOpen.set(!1)}openModal(t){this.exerciseDetailsId=t.exerciseId,this.exerciseDetailsName=t.exerciseName||"Exercise details",this.isSimpleModalOpen.set(!0)}showCompletedSetsForExerciseInfo=De(!1);toggleCompletedSetsForExerciseInfo(){this.showCompletedSetsForExerciseInfo.update(t=>!t)}showCompletedSetsForDayInfo=De(!1);toggleCompletedSetsForDayInfo(){this.showCompletedSetsForDayInfo.update(t=>!t)}static \u0275fac=function(e){return new(e||r)};static \u0275cmp=go({type:r,selectors:[["app-workout-player"]],hostBindings:function(e,o){e&1&&ie("beforeunload",function(i){return o.unloadNotification(i)},eS)},features:[hd([Kn])],decls:8,vars:10,consts:[["loadingOrError",""],["routineNotFound",""],["workoutCompleteOrError",""],["loadingBaseExIcon",""],["class","workout-player-container bg-gray-50 dark:bg-gray-950 min-h-screen flex flex-col",4,"ngIf","ngIfElse"],[3,"timerFinished","timerSkipped","isVisible","durationSeconds","mainText","nextUpText"],["class","fixed inset-0 z-50 bg-black/70 backdrop-blur-md flex flex-col items-center justify-center p-4 space-y-2 sm:space-y-3","style","padding-top: env(safe-area-inset-top); padding-bottom: env(safe-area-inset-bottom);",4,"ngIf"],["style","z-index: 100","class","fixed inset-0 bg-gray-900/70 dark:bg-black/80 backdrop-blur-md flex items-center justify-center p-4 transition-opacity duration-300 ease-in-out",4,"ngIf"],["class","fixed inset-0 bg-gray-700 bg-opacity-75 transition-opacity overflow-y-auto h-full w-full z-[70] flex items-center justify-center p-4",3,"click",4,"ngIf"],[3,"isOpen","modalTitle","isOpenChange",4,"ngIf"],[1,"workout-player-container","bg-gray-50","dark:bg-gray-950","min-h-screen","flex","flex-col"],["class","fixed inset-0 z-[60] bg-black/70 backdrop-blur-sm flex flex-col items-center justify-center space-y-6 p-4",4,"ngIf"],[4,"ngIf","ngIfElse"],[1,"fixed","inset-0","z-[60]","bg-black/70","backdrop-blur-sm","flex","flex-col","items-center","justify-center","space-y-6","p-4"],[1,"text-4xl","font-bold","text-white"],[1,"text-lg","text-gray-200"],[1,"bg-green-500","hover:bg-green-600","text-white","font-bold","py-3","px-8","rounded-lg","text-xl","shadow-lg","w-full","max-w-xs",3,"click"],[1,"text-m","text-red-300","hover:text-red-100","font-medium","py-2","px-4","rounded-md","border","border-red-300","hover:bg-red-700/30","w-full","max-w-xs","mt-2",3,"click"],[1,"fixed","top-0","left-0","right-0","z-30","bg-gray-50","dark:bg-gray-950","border-b","border-gray-200","dark:border-gray-800","p-2","flex","items-center","justify-between","h-14"],[1,"text-gray-600","dark:text-gray-300","hover:text-primary","dark:hover:text-primary-light","p-2","-ml-1",3,"click"],["fill","none","stroke","currentColor","viewBox","0 0 24 24","xmlns","http://www.w3.org/2000/svg",1,"w-6","h-6"],["stroke-linecap","round","stroke-linejoin","round","stroke-width","2","d","M15 19l-7-7 7-7"],[1,"text-center"],[1,"text-m","font-semibold","text-gray-700","dark:text-gray-300","uppercase","tracking-wider","truncate","max-w-[calc(100vw-120px)]",3,"title"],[1,"text-xs","text-gray-500","dark:text-gray-400"],[1,"text-gray-600","dark:text-gray-300","hover:text-primary","dark:hover:text-primary-light","p-2","-mr-1","disabled:opacity-50",3,"click","disabled"],["xmlns","http://www.w3.org/2000/svg","fill","none","viewBox","0 0 24 24","stroke","currentColor","stroke-width","2",1,"h-6","w-6"],["stroke-linecap","round","stroke-linejoin","round","d","M12 5v.01M12 12v.01M12 19v.01M12 6a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2z"],[1,"flex-grow","overflow-y-auto","pt-10"],["class","p-4 max-w-md mx-auto",4,"ngIf","ngIfElse"],["class","fixed bottom-[76px] left-0 right-0 z-10 bg-gray-100 dark:bg-gray-900 border-t border-gray-200 dark:border-gray-700 p-2 text-center h-auto min-h-[60px] flex flex-col justify-center shadow-[0_-1px_3px_rgba(0,0,0,0.07)]",4,"ngIf"],[1,"p-4","max-w-md","mx-auto"],[1,"flex","text-center","justify-center","items-center","mb-1"],["class","mr-2 h-8 w-8 flex-shrink-0",4,"ngIf","ngIfElse"],[1,"text-2xl","font-bold","text-gray-800","dark:text-gray-100","truncate",3,"title"],["class","ml-2 cursor-pointer dark:text-white","title","Exercise details","width","20","height","20","viewBox","0 0 20 20","xmlns","http://www.w3.org/2000/svg",3,"click",4,"ngIf"],[1,"text-center","mb-2"],[1,"text-m","text-gray-500","dark:text-gray-400"],["class","text-blue-500 dark:text-blue-400",4,"ngIf"],[4,"ngIf"],["class","ml-2",4,"ngIf"],["class","ml-2 text-purple-500 dark:text-purple-400 italic",4,"ngIf"],["class","text-center mb-3",4,"ngIf"],["class","text-center mb-6 animate-fadeIn",4,"ngIf"],["class","left-0 right-0 z-20 p-3",4,"ngIf"],["class","text-wrap text-sm text-center text-gray-800 dark:text-gray-100 px-2 text-s",3,"title",4,"ngIf"],[1,"mr-2","h-8","w-8","flex-shrink-0"],["class","w-full h-full object-contain",3,"src","alt","ngClass",4,"ngIf"],[1,"w-full","h-full","object-contain",3,"src","alt","ngClass"],[1,"w-8","h-8","bg-gray-200","dark:bg-gray-700","rounded-md","animate-pulse","mr-2","flex-shrink-0"],["title","Exercise details","width","20","height","20","viewBox","0 0 20 20","xmlns","http://www.w3.org/2000/svg",1,"ml-2","cursor-pointer","dark:text-white",3,"click"],["cx","10","cy","10","r","9","stroke","currentColor","stroke-width","2","fill","none"],["cx","10","cy","6","r","1.5","fill","currentColor"],["x","9","y","9","width","2","height","7","fill","currentColor"],[1,"text-blue-500","dark:text-blue-400"],[1,"ml-2"],[1,"ml-2","text-purple-500","dark:text-purple-400","italic"],[1,"text-center","mb-3"],["class","px-2 py-0.5 text-xs font-semibold text-red-700 bg-red-100 dark:bg-red-900 dark:text-red-200 rounded-full",4,"ngIf"],["class","px-2 py-0.5 text-xs font-semibold text-yellow-700 bg-yellow-100 dark:bg-yellow-800 dark:text-yellow-200 rounded-full",4,"ngIf"],[1,"px-2","py-0.5","text-xs","font-semibold","text-red-700","bg-red-100","dark:bg-red-900","dark:text-red-200","rounded-full"],[1,"px-2","py-0.5","text-xs","font-semibold","text-yellow-700","bg-yellow-100","dark:bg-yellow-800","dark:text-yellow-200","rounded-full"],[1,"text-center","mb-6","animate-fadeIn"],[1,"text-xl","font-semibold","text-blue-600","dark:text-blue-400"],[1,"text-4xl","sm:text-5xl","font-bold","text-blue-500","dark:text-blue-300","my-3"],[1,"text-m","text-gray-600","dark:text-gray-400"],[1,"mt-4","text-xs","text-primary","dark:text-primary-light","hover:underline",3,"click"],[1,"space-y-4","mb-2",3,"formGroup"],[1,"mt-3"],["for","setNotes",1,"block","text-xs","font-medium","text-gray-500","dark:text-gray-400","uppercase","tracking-wider","text-center","mb-1"],["id","setNotes","formControlName","setNotes","rows","2","placeholder","e.g., felt good, struggled on last rep...",1,"w-full","p-2","border","border-gray-300","dark:border-gray-600","rounded-md","shadow-sm","focus:ring-primary","focus:border-primary","dark:bg-gray-800","dark:text-gray-200","text-m","disabled:opacity-60",3,"disabled"],[1,"block","text-xs","font-medium","text-gray-500","dark:text-gray-400","uppercase","tracking-wider","text-center","mb-1"],[1,"flex","items-center","justify-center","space-x-2"],["type","button","appLongPress","",1,"p-3","bg-gray-200","dark:bg-gray-700","rounded-lg","text-gray-700","dark:text-gray-200","hover:bg-gray-300","dark:hover:bg-gray-600","disabled:opacity-50",3,"mousedown","longPress","disabled"],["fill","none","stroke","currentColor","viewBox","0 0 24 24",1,"w-5","h-5"],["stroke-linecap","round","stroke-linejoin","round","stroke-width","2","d","M20 12H4"],[1,"w-28","text-center","text-3xl","font-bold","bg-transparent","p-0","text-gray-800","dark:text-gray-100","cursor-pointer","hover:bg-gray-100","dark:hover:bg-gray-800","rounded-md","py-1",3,"click"],["type","number","formControlName","actualWeight",1,"hidden"],[1,"text-lg","text-gray-700","dark:text-gray-200","-ml-1"],["stroke-linecap","round","stroke-linejoin","round","stroke-width","2","d","M12 4v16m8-8H4"],["type","button",1,"p-3","bg-gray-200","dark:bg-gray-700","rounded-lg","text-gray-700","dark:text-gray-200","hover:bg-gray-300","dark:hover:bg-gray-600","disabled:opacity-50",3,"click","disabled"],["type","number","formControlName","actualReps","readonly","","placeholder","0",1,"w-28","text-center","text-3xl","font-bold","bg-transparent","border-none","p-0","focus:ring-0","text-gray-800","dark:text-gray-100"],["for","timedSetDisplay",1,"block","text-xs","font-medium","text-gray-500","dark:text-gray-400","uppercase","tracking-wider","text-center","mb-2"],["id","timedSetDisplay",1,"mt-1","block","w-full","p-3","border-none","text-3xl","font-bold","text-center","bg-transparent","focus:ring-0",3,"ngClass"],["type","number","formControlName","actualDuration",1,"hidden"],[1,"flex","space-x-2","mt-2","justify-center"],["type","button",1,"flex-grow","max-w-[150px]","text-white","font-medium","py-2","px-3","rounded-full","transition-colors","text-m","disabled:opacity-50",3,"click","disabled","ngClass"],["type","button","class","flex-grow max-w-[150px] bg-gray-300 hover:bg-gray-400 dark:bg-gray-700 dark:hover:bg-gray-500 text-gray-800 dark:text-gray-200 font-medium py-2 px-3 rounded-md transition-colors text-m disabled:opacity-50",3,"disabled","click",4,"ngIf"],["type","button",1,"flex-grow","max-w-[150px]","bg-gray-300","hover:bg-gray-400","dark:bg-gray-700","dark:hover:bg-gray-500","text-gray-800","dark:text-gray-200","font-medium","py-2","px-3","rounded-md","transition-colors","text-m","disabled:opacity-50",3,"click","disabled"],[1,"left-0","right-0","z-20","p-3"],[1,"max-w-md","mx-auto"],[1,"w-full","font-bold","py-3.5","px-4","rounded-full","shadow-md","text-lg","transition-colors","focus:outline-none","focus:ring-2","disabled:opacity-70","text-white",3,"click","disabled","ngClass"],[1,"text-wrap","text-sm","text-center","text-gray-800","dark:text-gray-100","px-2","text-s",3,"title"],[1,"font-medium"],[1,"text-center","py-10","pt-16"],[1,"text-2xl","font-semibold","text-gray-700","dark:text-gray-200"],["class","text-gray-600 dark:text-gray-400 mt-2",4,"ngIf"],["class","mt-6 bg-primary hover:bg-primary-dark text-white font-bold py-3 px-6 rounded-lg shadow-md text-lg transition-colors",3,"click",4,"ngIf"],["routerLink","/workout","class","mt-6 bg-gray-500 hover:bg-gray-600 text-white font-bold py-3 px-6 rounded-lg shadow-md text-lg transition-colors",4,"ngIf"],["routerLink","/workout","class","mt-6 text-primary dark:text-primary-light hover:underline p-2",4,"ngIf"],[1,"text-gray-600","dark:text-gray-400","mt-2"],[1,"mt-6","bg-primary","hover:bg-primary-dark","text-white","font-bold","py-3","px-6","rounded-lg","shadow-md","text-lg","transition-colors",3,"click"],["routerLink","/workout",1,"mt-6","bg-gray-500","hover:bg-gray-600","text-white","font-bold","py-3","px-6","rounded-lg","shadow-md","text-lg","transition-colors"],["routerLink","/workout",1,"mt-6","text-primary","dark:text-primary-light","hover:underline","p-2"],[1,"fixed","bottom-[76px]","left-0","right-0","z-10","bg-gray-100","dark:bg-gray-900","border-t","border-gray-200","dark:border-gray-700","p-2","text-center","h-auto","min-h-[60px]","flex","flex-col","justify-center","shadow-[0_-1px_3px_rgba(0,0,0,0.07)]"],[1,"max-w-md","mx-auto","w-full"],[1,"text-xs","font-semibold","text-gray-500","dark:text-gray-400","uppercase","tracking-wider"],[1,"text-base","font-medium","text-gray-800","dark:text-gray-100","truncate","px-4",3,"title"],[1,"text-m","text-gray-600","dark:text-gray-300"],[1,"ml-2","text-xs","text-primary","dark:text-primary-light","hover:underline",3,"click"],[1,"text-xl","font-bold","text-blue-600","dark:text-blue-300"],[1,"mt-0.5","text-xs","text-primary","dark:text-primary-light","hover:underline",3,"click"],[1,"fixed","top-0","left-0","right-0","z-30","bg-gray-50","dark:bg-gray-950","border-b","border-gray-200","dark:border-gray-800","p-4","flex","items-center","justify-between","h-16"],[1,"text-gray-600","dark:text-gray-300","hover:text-primary","dark:hover:text-primary-light","p-2","-ml-2",3,"click"],[1,"text-m","font-semibold","text-gray-700","dark:text-gray-300","uppercase","tracking-wider"],[1,"w-6"],[1,"text-center","py-20","pt-24"],[1,"text-2xl","font-semibold","text-red-600","dark:text-red-400","mb-4"],[1,"text-gray-600","dark:text-gray-400"],["routerLink","/workout",1,"text-gray-600","dark:text-gray-300","hover:text-primary","dark:hover:text-primary-light","p-2","-ml-1"],[1,"fixed","inset-0","z-50","bg-black/70","backdrop-blur-md","flex","flex-col","items-center","justify-center","p-4","space-y-2","sm:space-y-3",2,"padding-top","env(safe-area-inset-top)","padding-bottom","env(safe-area-inset-bottom)"],[1,"flex","columns-3"],[1,"p-1.5","rounded-full","text-gray-500","hover:text-gray-700","dark:text-gray-400","dark:hover:text-gray-200","hover:bg-gray-100","dark:hover:bg-gray-700/70","focus:outline-none","transition-colors",3,"click"],["_ngcontent-ng-c2442506092","","xmlns","http://www.w3.org/2000/svg","fill","none","viewBox","0 0 24 24","stroke","currentColor","stroke-width","2.5",1,"h-6","w-6"],["_ngcontent-ng-c2442506092","","stroke-linecap","round","stroke-linejoin","round","d","M6 18L18 6M6 6l12 12"],[1,"text-2xl","sm:text-3xl","font-bold","text-white","mb-2"],[1,"flex","justify-center","items-center","w-full","max-w-xs","bg-yellow-500","hover:bg-yellow-600","text-white","font-bold","py-2.5","px-6","rounded-lg","text-lg","shadow-lg","disabled:opacity-60","disabled:cursor-not-allowed",3,"click","disabled"],["viewBox","0 0 24 24","xmlns","http://www.w3.org/2000/svg",1,"h-5","w-5","text-white"],["cx","10","cy","10","r","8","fill","none","stroke","currentColor","stroke-width","2"],["x","7","y","7","width","2","height","7","rx","4","ry","4","fill","currentColor"],["x","11","y","7","width","2","height","7","rx","4","ry","4","fill","currentColor"],[1,"flex","justify-center","items-center","w-full","max-w-xs","bg-fuchsia-500","hover:bg-fuchsia-600","text-white","font-semibold","py-2","px-6","rounded-lg","text-md","shadow-md","disabled:opacity-60","disabled:cursor-not-allowed",3,"click","disabled"],["xmlns","http://www.w3.org/2000/svg","viewBox","0 0 400 500","width","55","height","20","fill","white"],["d","M96 64c0-17.7 14.3-32 32-32l32 0c17.7 0 32 14.3 32 32l0 160 0 64 0 160c0 17.7-14.3 32-32 32l-32 0c-17.7 0-32-14.3-32-32l0-64-32 0c-17.7 0-32-14.3-32-32l0-64c-17.7 0-32-14.3-32-32s14.3-32 32-32l0-64c0-17.7 14.3-32 32-32l32 0 0-64zm448 0l0 64 32 0c17.7 0 32 14.3 32 32l0 64c17.7 0 32 14.3 32 32s-14.3 32-32 32l0 64c0 17.7-14.3 32-32 32l-32 0 0 64c0 17.7-14.3 32-32 32l-32 0c-17.7 0-32-14.3-32-32l0-160 0-64 0-160c0-17.7 14.3-32 32-32l32 0c17.7 0 32 14.3 32 32zM416 224l0 64-192 0 0-64 192 0z"],[1,"flex","justify-center","align-center","w-full","max-w-xs","bg-cyan-500","hover:bg-cyan-600","text-white","font-semibold","py-2","px-6","rounded-lg","text-md","shadow-md","disabled:opacity-60","disabled:cursor-not-allowed",3,"click","disabled"],["xmlns","http://www.w3.org/2000/svg","fill","none","viewBox","0 0 24 24","stroke","white","stroke-width","2",1,"h-5","w-5","text-gray-500","dark:text-gray-400"],["stroke-linecap","round","stroke-linejoin","round","d","M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-3 7h3m-3 4h3m-6-4h.01M9 16h.01"],[1,"w-full","max-w-xs","bg-sky-500","hover:bg-sky-600","text-white","font-semibold","py-2","px-6","rounded-lg","text-md","shadow-md","disabled:opacity-60","disabled:cursor-not-allowed",3,"click","disabled"],["class","text-xs text-white ml-2",4,"ngIf"],[1,"w-full","max-w-xs","bg-purple-500","hover:bg-purple-600","text-white","font-semibold","py-2","px-6","rounded-lg","text-md","shadow-md","disabled:opacity-60","disabled:cursor-not-allowed",3,"click","disabled"],[1,"w-full","max-w-xs","bg-blue-500","hover:bg-blue-600","text-white","font-semibold","py-2","px-6","rounded-lg","text-md","shadow-md","disabled:opacity-60","disabled:cursor-not-allowed",3,"click","disabled"],[1,"w-full","max-w-xs","bg-indigo-500","hover:bg-indigo-600","text-white","font-semibold","py-2","px-6","rounded-lg","text-md","shadow-md","disabled:opacity-60","disabled:cursor-not-allowed",3,"click","disabled"],[1,"w-full","max-w-xs","bg-orange-500","hover:bg-orange-600","text-white","font-semibold","py-2","px-6","rounded-lg","text-md","shadow-md","disabled:opacity-60","disabled:cursor-not-allowed",3,"click","disabled"],[1,"w-full","max-w-xs","bg-teal-500","hover:bg-teal-600","text-white","font-semibold","py-2","px-6","rounded-lg","text-md","shadow-md","disabled:opacity-60","disabled:cursor-not-allowed",3,"click","disabled"],[1,"w-full","max-w-xs","text-red-300","hover:text-red-100","font-medium","py-2","px-6","rounded-lg","border","border-red-400","hover:bg-red-700/50","text-md",3,"click"],[1,"text-xs","text-white","ml-2"],[1,"fixed","inset-0","bg-gray-900/70","dark:bg-black/80","backdrop-blur-md","flex","items-center","justify-center","p-4","transition-opacity","duration-300","ease-in-out",2,"z-index","100"],[1,"bg-white","dark:bg-gray-800","rounded-xl","shadow-2xl","w-full","max-w-xl","max-h-[90vh]","flex","flex-col","overflow-hidden","transform","transition-all","duration-300","ease-in-out","scale-95","opacity-0","animate-modal-appear"],[1,"p-5","border-b","border-gray-200","dark:border-gray-700","flex","justify-between","items-center"],[1,"flex","items-center","gap-3"],["xmlns","http://www.w3.org/2000/svg","fill","none","viewBox","0 0 24 24","stroke","currentColor","stroke-width","2",1,"h-7","w-7","text-primary","dark:text-primary-light"],["stroke-linecap","round","stroke-linejoin","round","d","M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"],[1,"text-xl","font-semibold","text-gray-800","dark:text-gray-100"],["xmlns","http://www.w3.org/2000/svg","fill","none","viewBox","0 0 24 24","stroke","currentColor","stroke-width","2.5",1,"h-6","w-6"],["stroke-linecap","round","stroke-linejoin","round","d","M6 18L18 6M6 6l12 12"],["class","p-5 overflow-y-auto space-y-6 flex-grow custom-scrollbar",4,"ngIf"],[1,"p-4","bg-gray-50","dark:bg-gray-800","border-t","border-gray-200","dark:border-gray-700","text-right"],[1,"bg-primary","hover:bg-primary-dark","focus:ring-4","focus:ring-primary-focus","text-white","font-semibold","py-2.5","px-6","rounded-lg","text-sm","transition-colors","shadow-md","hover:shadow-lg",3,"click"],[1,"p-5","overflow-y-auto","space-y-6","flex-grow","custom-scrollbar"],[1,"rounded-lg","border","border-gray-200","dark:border-gray-700/80"],[1,"w-full","flex","items-center","justify-between","p-3","text-left","text-sm","font-medium","text-gray-700","dark:text-gray-300","hover:bg-gray-50","dark:hover:bg-gray-700/50","transition-colors","rounded-t-lg",3,"click"],[1,"flex","items-center","gap-2"],["xmlns","http://www.w3.org/2000/svg","fill","none","viewBox","0 0 24 24","stroke","currentColor","stroke-width","2",1,"h-5","w-5","text-gray-500","dark:text-gray-400"],["xmlns","http://www.w3.org/2000/svg","fill","none","viewBox","0 0 24 24","stroke","currentColor","stroke-width","2",1,"h-5","w-5","transform","transition-transform","duration-200",3,"ngClass"],["stroke-linecap","round","stroke-linejoin","round","d","M19 9l-7 7-7-7"],["class","bg-gray-50 dark:bg-gray-700/30 p-3 border-t border-gray-200 dark:border-gray-700/80 space-y-3 max-h-40 overflow-y-auto custom-scrollbar rounded-b-lg",4,"ngIf"],["class","p-3 text-xs text-center text-gray-500 dark:text-gray-400 border-t border-gray-200 dark:border-gray-700/80 rounded-b-lg",4,"ngIf"],["stroke-linecap","round","stroke-linejoin","round","d","M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"],["class","bg-gray-50 dark:bg-gray-700/30 p-3 border-t border-gray-200 dark:border-gray-700/80 space-y-3 max-h-48 overflow-y-auto custom-scrollbar rounded-b-lg",4,"ngIf"],["class","p-3 bg-blue-50 dark:bg-blue-900/30 border border-blue-200 dark:border-blue-700 rounded-lg text-xs",4,"ngIf"],["class","p-3 bg-gray-50 dark:bg-gray-700/50 border border-gray-200 dark:border-gray-600 rounded-lg text-xs text-center text-gray-500 dark:text-gray-400 italic",4,"ngIf"],["class","p-3 bg-yellow-50 dark:bg-yellow-900/30 border border-yellow-200 dark:border-yellow-700 rounded-lg text-xs",4,"ngIf"],[1,"space-y-4","pt-4","border-t","border-gray-200","dark:border-gray-700"],[1,"text-sm","font-semibold","text-gray-700","dark:text-gray-200"],[1,"grid","grid-cols-1","sm:grid-cols-2","gap-4"],["class","p-3 bg-gray-50 dark:bg-gray-700/80 rounded-lg shadow",4,"ngIf"],["class","mt-4 p-3 bg-gray-100 dark:bg-gray-700/60 rounded-lg text-xs",4,"ngIf"],[1,"bg-gray-50","dark:bg-gray-700/30","p-3","border-t","border-gray-200","dark:border-gray-700/80","space-y-3","max-h-40","overflow-y-auto","custom-scrollbar","rounded-b-lg"],["class","text-xs p-2 bg-white dark:bg-gray-700 rounded-md shadow-sm border border-gray-200 dark:border-gray-600",4,"ngFor","ngForOf"],[1,"text-xs","p-2","bg-white","dark:bg-gray-700","rounded-md","shadow-sm","border","border-gray-200","dark:border-gray-600"],[1,"font-semibold","text-gray-700","dark:text-gray-200","mb-1"],["class","text-blue-600 dark:text-blue-400 font-normal",4,"ngIf"],[1,"grid","grid-cols-2","gap-x-2","gap-y-1","text-gray-600","dark:text-gray-300"],["class","col-span-2",4,"ngIf"],["class","mt-1.5 text-gray-500 dark:text-gray-400 italic text-2xs border-t border-gray-100 dark:border-gray-600 pt-1.5",4,"ngIf"],[1,"text-blue-600","dark:text-blue-400","font-normal"],[1,"dark:text-gray-100"],[1,"col-span-2"],[1,"mt-1.5","text-gray-500","dark:text-gray-400","italic","text-2xs","border-t","border-gray-100","dark:border-gray-600","pt-1.5"],[1,"p-3","text-xs","text-center","text-gray-500","dark:text-gray-400","border-t","border-gray-200","dark:border-gray-700/80","rounded-b-lg"],[1,"bg-gray-50","dark:bg-gray-700/30","p-3","border-t","border-gray-200","dark:border-gray-700/80","space-y-3","max-h-48","overflow-y-auto","custom-scrollbar","rounded-b-lg"],[1,"text-sm","text-primary","dark:text-primary-light"],[1,"p-3","bg-blue-50","dark:bg-blue-900/30","border","border-blue-200","dark:border-blue-700","rounded-lg","text-xs"],[1,"font-medium","text-blue-700","dark:text-blue-300","mb-1"],[1,"flex","items-center","gap-1.5"],["xmlns","http://www.w3.org/2000/svg","fill","none","viewBox","0 0 24 24","stroke","currentColor","stroke-width","2",1,"h-4","w-4"],["stroke-linecap","round","stroke-linejoin","round","d","M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"],[1,"list-none","space-y-0.5","ml-1","text-blue-600","dark:text-blue-400"],["class","flex items-center",4,"ngIf"],["class","mt-1 italic border-t border-blue-200 dark:border-blue-600 pt-1",4,"ngIf"],[1,"flex","items-center"],[1,"w-16"],[1,"dark:text-blue-200"],[1,"mt-1","italic","border-t","border-blue-200","dark:border-blue-600","pt-1"],[1,"p-3","bg-gray-50","dark:bg-gray-700/50","border","border-gray-200","dark:border-gray-600","rounded-lg","text-xs","text-center","text-gray-500","dark:text-gray-400","italic"],[1,"p-3","bg-yellow-50","dark:bg-yellow-900/30","border","border-yellow-200","dark:border-yellow-700","rounded-lg","text-xs"],[1,"font-medium","text-yellow-700","dark:text-yellow-300","mb-2"],["stroke-linecap","round","stroke-linejoin","round","d","M5 3v4M3 5h4M6 17v4m-2-2h4m5-12v4m-2-2h4m5 10v4m-2-2h4M5 3a2 2 0 00-2 2v1c0 1.1.9 2 2 2h4a2 2 0 002-2V6a2 2 0 00-2-2H5zm14 0a2 2 0 00-2 2v1c0 1.1.9 2 2 2h4a2 2 0 002-2V6a2 2 0 00-2-2h-4zM5 17a2 2 0 00-2 2v1c0 1.1.9 2 2 2h4a2 2 0 002-2v-1a2 2 0 00-2-2H5zm14 0a2 2 0 00-2 2v1c0 1.1.9 2 2 2h4a2 2 0 002-2v-1a2 2 0 00-2-2h-4z"],["class","grid grid-cols-1 sm:grid-cols-2 gap-x-4 gap-y-1 text-yellow-600 dark:text-yellow-400",4,"ngIf"],["class","italic text-yellow-600 dark:text-yellow-400",4,"ngIf"],[1,"grid","grid-cols-1","sm:grid-cols-2","gap-x-4","gap-y-1","text-yellow-600","dark:text-yellow-400"],[4,"ngFor","ngForOf"],[1,"dark:text-yellow-200"],[1,"text-yellow-500","dark:text-yellow-500","text-2xs","ml-1"],[1,"italic","text-yellow-600","dark:text-yellow-400"],[1,"p-3","bg-gray-50","dark:bg-gray-700/80","rounded-lg","shadow"],[1,"block","text-xs","font-medium","text-gray-500","dark:text-gray-400","mb-1"],["class","text-3xl font-bold text-primary dark:text-primary-light cursor-pointer hover:opacity-80 p-1.5 rounded-md min-h-[48px] flex items-center",3,"click",4,"ngIf"],["class","flex items-center space-x-2",4,"ngIf"],[1,"text-3xl","font-bold","text-primary","dark:text-primary-light","cursor-pointer","hover:opacity-80","p-1.5","rounded-md","min-h-[48px]","flex","items-center",3,"click"],[1,"flex","items-center","space-x-2"],["type","number","autofocus","",1,"w-24","p-2","text-2xl","border-gray-300","dark:border-gray-600","rounded-md","focus:ring-primary-focus","focus:border-primary-focus","dark:bg-gray-600","dark:text-gray-100","shadow-sm",3,"ngModelChange","keyup.enter","keyup.escape","ngModel"],[1,"p-2","text-green-600","hover:text-green-500","dark:text-green-400","dark:hover:text-green-300","rounded-full","hover:bg-green-100","dark:hover:bg-green-700/50",3,"click"],["fill","currentColor","viewBox","0 0 20 20",1,"w-5","h-5"],["fill-rule","evenodd","d","M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z","clip-rule","evenodd"],[1,"p-2","text-red-600","hover:text-red-500","dark:text-red-400","dark:hover:text-red-300","rounded-full","hover:bg-red-100","dark:hover:bg-red-700/50",3,"click"],["fill-rule","evenodd","d","M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z","clip-rule","evenodd"],[1,"text-xl","ml-0.5"],[1,"text-xl","font-semibold","text-gray-700","dark:text-gray-100","p-1.5","block","min-h-[48px]","flex","items-center"],[1,"mt-4","p-3","bg-gray-100","dark:bg-gray-700/60","rounded-lg","text-xs"],[1,"font-medium","text-gray-600","dark:text-gray-300","mb-1"],["stroke-linecap","round","stroke-linejoin","round","d","M7 8h10M7 12h4m1 8l-4-4H5a2 2 0 01-2-2V6a2 2 0 012-2h14a2 2 0 012 2v8a2 2 0 01-2 2h-3l-4 4z"],[1,"text-gray-700","dark:text-gray-200","italic"],[1,"fixed","inset-0","bg-gray-700","bg-opacity-75","transition-opacity","overflow-y-auto","h-full","w-full","z-[70]","flex","items-center","justify-center","p-4",3,"click"],[1,"relative","transform","overflow-hidden","rounded-lg","bg-white","dark:bg-gray-700","text-left","shadow-xl","transition-all","sm:my-8","sm:w-full","sm:max-w-lg",3,"click"],[1,"bg-white","dark:bg-gray-700","px-4","pt-5","pb-4","sm:p-6","sm:pb-4"],[1,"flex","justify-between","items-center","pb-3"],[1,"text-xl","font-semibold","text-gray-900","dark:text-gray-100"],["type","button",1,"p-1","rounded-full","text-gray-400","hover:text-gray-600","dark:hover:text-gray-300","focus:outline-none",3,"click"],["xmlns","http://www.w3.org/2000/svg","fill","none","viewBox","0 0 24 24","stroke-width","1.5","stroke","currentColor",1,"w-6","h-6"],["stroke-linecap","round","stroke-linejoin","round","d","M6 18 18 6M6 6l12 12"],[1,"my-4"],["type","text","placeholder","Search exercises...",1,"w-full","p-2","border","border-gray-300","dark:border-gray-600","rounded-md","dark:bg-gray-700","dark:text-gray-200",3,"ngModelChange","ngModel"],[1,"mt-2","max-h-60","sm:max-h-80","overflow-y-auto","pr-2"],[1,"space-y-1"],["class","p-3 hover:bg-gray-100 dark:hover:bg-gray-800 rounded-md cursor-pointer transition-all duration-150 ease-in-out flex justify-between items-center",3,"click",4,"ngFor","ngForOf"],["class","text-gray-500 dark:text-gray-400 text-center p-4",4,"ngIf"],[1,"mt-4","pt-4","border-t","border-gray-200","dark:border-gray-600","text-center"],["type","button",1,"text-sm","text-primary","dark:text-primary-light","hover:underline",3,"click"],[1,"bg-gray-50","dark:bg-gray-800","px-4","py-3","sm:flex","sm:flex-row-reverse","sm:px-6"],["type","button",1,"mt-3","inline-flex","w-full","justify-center","rounded-md","bg-white","dark:bg-gray-600","px-3","py-2","text-sm","font-semibold","text-gray-900","dark:text-gray-200","shadow-sm","ring-1","ring-inset","ring-gray-300","dark:ring-gray-500","hover:bg-gray-50","dark:hover:bg-gray-500","sm:mt-0","sm:w-auto",3,"click"],[1,"p-3","hover:bg-gray-100","dark:hover:bg-gray-800","rounded-md","cursor-pointer","transition-all","duration-150","ease-in-out","flex","justify-between","items-center",3,"click"],[1,"font-medium","text-gray-800","dark:text-gray-200"],[1,"block","text-xs","text-gray-500","dark:text-gray-400"],["xmlns","http://www.w3.org/2000/svg","viewBox","0 0 20 20","fill","currentColor",1,"w-5","h-5","text-primary","dark:text-primary-light"],["fill-rule","evenodd","d","M10.75 4.75a.75.75 0 0 0-1.5 0v4.5h-4.5a.75.75 0 0 0 0 1.5h4.5v4.5a.75.75 0 0 0 1.5 0v-4.5h4.5a.75.75 0 0 0 0-1.5h-4.5V4.75Z","clip-rule","evenodd"],[1,"text-gray-500","dark:text-gray-400","text-center","p-4"],[1,"text-center","py-20"],[1,"text-xl","text-gray-600","dark:text-gray-400"],[3,"isOpenChange","isOpen","modalTitle"],[3,"id","isModal"]],template:function(e,o){if(e&1){let n=ke();ae(0,NM,5,3,"div",4),I(1,"app-full-screen-rest-timer",5),ie("timerFinished",function(){return re(n),oe(o.handleRestTimerFinished())})("timerSkipped",function(){return re(n),oe(o.handleRestTimerSkipped())}),E(),ae(2,$M,39,10,"div",6)(3,gB,15,1,"div",7)(4,vB,22,4,"div",8)(5,SB,3,0,"ng-template",null,0,Xo)(7,wB,2,4,"app-modal",9)}if(e&2){let n=jo(6);B("ngIf",o.routine()!==void 0)("ngIfElse",n),D(),B("isVisible",o.playerSubState()===o.PlayerSubState.Resting&&o.isRestTimerVisible())("durationSeconds",o.restDuration())("mainText",o.restTimerMainText())("nextUpText",o.restTimerNextUpText()),D(),B("ngIf",o.isWorkoutMenuVisible()),D(),B("ngIf",o.isPerformanceInsightsVisible()),D(),B("ngIf",o.isExerciseModalOpen()),D(3),B("ngIf",o.exerciseDetailsId)}},dependencies:[vo,da,Yo,bo,Kn,ma,fa,ga,Ed,vd,yd,Sd,xa,bd,wd,Cd,ba,ya,$d,Ad,Fd,wS,SS],styles:["@keyframes _ngcontent-%COMP%_modal-appear-animation{0%{opacity:0;transform:scale(.95) translateY(10px)}to{opacity:1;transform:scale(1) translateY(0)}}.animate-modal-appear[_ngcontent-%COMP%]{animation:_ngcontent-%COMP%_modal-appear-animation .3s ease-out forwards}.custom-scrollbar[_ngcontent-%COMP%]::-webkit-scrollbar{width:6px;height:6px}.custom-scrollbar[_ngcontent-%COMP%]::-webkit-scrollbar-track{background:transparent;border-radius:3px}.custom-scrollbar[_ngcontent-%COMP%]::-webkit-scrollbar-thumb{background-color:#0003;border-radius:3px}.dark[_ngcontent-%COMP%]   .custom-scrollbar[_ngcontent-%COMP%]::-webkit-scrollbar-thumb{background-color:#fff3}.custom-scrollbar[_ngcontent-%COMP%]::-webkit-scrollbar-thumb:hover{background-color:#0000004d}.dark[_ngcontent-%COMP%]   .custom-scrollbar[_ngcontent-%COMP%]::-webkit-scrollbar-thumb:hover{background-color:#ffffff4d}"]})};function CB(r,t){if(r&1&&(I(0,"div",17)(1,"span",18),O(2,"Total Volume:"),E(),I(3,"span",19),O(4),pt(5,"number"),E()()),r&2){let e=L(2);D(4),Gt("",yo(5,2,e.sessionTotalVolume(),"1.0-0")," ",e.unitsService.getUnitLabel())}}function _B(r,t){if(r&1&&(I(0,"li",29)(1,"p",30),O(2),E(),I(3,"p",31),O(4),E()()),r&2){let e=t.$implicit;D(2),Gt("",e.exerciseName," - ",e.pbType," "),D(2),We(e.value)}}function kB(r,t){if(r&1&&(I(0,"div",25)(1,"h2",26),O(2," \u{1F389} New Personal Bests! \u{1F389} "),E(),I(3,"ul",27),ae(4,_B,5,3,"li",28),E()()),r&2){let e=L(2);D(4),B("ngForOf",e.sessionPBs())}}function IB(r,t){if(r&1&&(I(0,"div",32)(1,"h3",33),O(2,"Your Notes for this Session:"),E(),I(3,"p",34),O(4),E()()),r&2){let e=L().ngIf;D(4),We(e.notes)}}function TB(r,t){if(r&1){let e=ke();Ro(0),I(1,"div",3)(2,"button",4),_e(),I(3,"svg",5),pe(4,"path",6),E()(),Ge(),I(5,"div",7)(6,"div",8),_e(),I(7,"svg",9)(8,"defs")(9,"mask",10),pe(10,"rect",11)(11,"path",12),E()(),pe(12,"circle",13),E()(),Ge(),I(13,"h1",14),O(14,"Workout Complete!"),E(),I(15,"p",15),O(16,"Great job on finishing your session."),E()(),I(17,"div",16)(18,"div",17)(19,"span",18),O(20,"Routine:"),E(),I(21,"span",19),O(22),E()(),I(23,"div",17)(24,"span",18),O(25,"Date:"),E(),I(26,"span",19),O(27),pt(28,"date"),E()(),I(29,"div",17)(30,"span",18),O(31,"Duration:"),E(),I(32,"span",19),O(33),E()(),ae(34,CB,6,5,"div",20),E(),ae(35,kB,5,1,"div",21)(36,IB,5,1,"div",22),I(37,"div",23)(38,"button",24),ie("click",function(){re(e);let n=L();return oe(n.viewFullLog())}),O(39," View Full Log Details "),E()()(),$o()}if(r&2){let e=t.ngIf,o=L();D(22),We(e.routineName||"Ad-hoc Workout"),D(5),We(yo(28,6,e.startTime,"fullDate")),D(6),$e("",e.durationMinutes," minutes"),D(),B("ngIf",o.sessionTotalVolume()>0),D(),B("ngIf",o.sessionPBs().length>0),D(),B("ngIf",e.notes)}}function EB(r,t){r&1&&(I(0,"div",35)(1,"p",36),O(2,"Loading workout summary..."),E()())}var Ld=class r{route=Ve(ha);router=Ve(qn);trackingService=Ve(jn);exerciseService=Ve(Xn);statsService=Ve(CS);unitsService=Ve(Ca);workoutLog=De(void 0);displayExercisesSummary=De([]);sessionPBs=De([]);sessionTotalVolume=De(0);logId;ngOnInit(){(this.logId?Qi(this.logId):this.route.paramMap.pipe(jc(e=>e.get("logId")))).pipe(ua(e=>e?this.trackingService.getWorkoutLogById(e):Qi(null)),Zi(e=>{e?(this.workoutLog.set(e),this.sessionTotalVolume.set(this.statsService.calculateWorkoutVolume(e)),this.prepareDisplayExercisesSummary(e.exercises),this.identifySessionPBs(e)):(this.workoutLog.set(null),this.displayExercisesSummary.set([]),this.sessionPBs.set([]))})).subscribe()}prepareDisplayExercisesSummary(t){if(!t||t.length===0){this.displayExercisesSummary.set([]);return}let e=t.map(o=>this.exerciseService.getExerciseById(o.exerciseId).pipe(jc(n=>{let i=0;return o.sets.forEach(s=>{i+=(s.repsAchieved||0)*(s.weightUsed||0)}),_r(ar({},o),{baseExercise:n||null,sessionVolume:i})})));Xv(e).subscribe({next:o=>this.displayExercisesSummary.set(o),error:o=>{console.error("Error fetching exercise details for summary:",o),this.displayExercisesSummary.set(t.map(n=>_r(ar({},n),{baseExercise:null,sessionVolume:0})))}})}identifySessionPBs(t){let e=[];this.trackingService.personalBests$.pipe(kr(1)).subscribe(o=>{t.exercises.forEach(i=>{let s=o[i.exerciseId];s&&i.sets.forEach(a=>{s.forEach(l=>{l.id===a.id&&l.timestamp===a.timestamp&&a.weightUsed===l.weightUsed&&a.repsAchieved===l.repsAchieved&&e.push({exerciseName:i.exerciseName,pbType:l.pbType,value:this.formatPbValueForSummary(l),isNewOrImproved:!0})})})});let n=Array.from(new Map(e.map(i=>[`${i.exerciseName}-${i.pbType}`,i])).values());this.sessionPBs.set(n)})}formatPbValueForSummary(t){let e="";return t.weightUsed!==void 0&&t.weightUsed!==null&&t.weightUsed!==0?(e+=`${t.weightUsed}kg`,t.repsAchieved>0&&(t.pbType.includes("Heaviest")||t.repsAchieved>1&&!t.pbType.includes("RM"))&&(e+=` x ${t.repsAchieved}`)):t.repsAchieved>0&&t.pbType.includes("Max Reps")?e=`${t.repsAchieved} reps`:t.durationPerformed&&t.durationPerformed>0&&t.pbType.includes("Max Duration")&&(e=`${t.durationPerformed}s`),e||"N/A"}viewFullLog(){this.workoutLog()&&this.router.navigate(["/history/log",this.workoutLog().id])}navigateToRoutines(){this.router.navigate(["/workout"])}startNewWorkout(){this.router.navigate(["/workout"])}static \u0275fac=function(e){return new(e||r)};static \u0275cmp=go({type:r,selectors:[["app-workout-summary"]],inputs:{logId:"logId"},decls:4,vars:2,consts:[["loadingOrNotFoundSummary",""],[1,"container","mx-auto","p-1"],[4,"ngIf","ngIfElse"],[1,"bg-white","dark:bg-gray-700","rounded-xl","shadow-2xl","p-6","md:p-8","max-w-2xl","mx-auto"],["routerLink","/history/list",1,"text-gray-600","dark:text-gray-300","hover:text-primary","dark:hover:text-primary-light","p-2","-ml-1"],["fill","none","stroke","currentColor","viewBox","0 0 24 24","xmlns","http://www.w3.org/2000/svg",1,"w-6","h-6"],["stroke-linecap","round","stroke-linejoin","round","stroke-width","2","d","M15 19l-7-7 7-7"],[1,"text-center","mb-8"],[1,"flex","justify-center","text-center"],["width","36","height","36","viewBox","0 0 24 24","fill","none","xmlns","http://www.w3.org/2000/svg",1,"w-16","h-16","text-green-500","mx-auto","mb-3"],["id","tickCutoutMask"],["x","0","y","0","width","24","height","24","fill","white"],["d","M7.5 12.5L10.5 15.5L16.5 9.5","stroke","black","stroke-width","2.5","stroke-linecap","round","stroke-linejoin","round","fill","none"],["cx","12","cy","12","r","10","fill","#2fd636","mask","url(#tickCutoutMask)"],[1,"text-4xl","font-bold","text-gray-800","dark:text-gray-100"],[1,"text-lg","text-gray-600","dark:text-gray-400","mt-1"],[1,"space-y-4","mb-8"],[1,"flex","justify-between","items-baseline","p-3","bg-gray-50","dark:bg-gray-700","rounded-md"],[1,"text-m","font-medium","text-gray-600","dark:text-gray-300"],[1,"text-md","font-semibold","text-gray-800","dark:text-gray-100"],["class","flex justify-between items-baseline p-3 bg-gray-50 dark:bg-gray-700 rounded-md",4,"ngIf"],["class","mb-8",4,"ngIf"],["class","mb-8 p-3 bg-yellow-50 dark:bg-yellow-900/30 rounded-md",4,"ngIf"],[1,"mt-8","pt-6","border-t","border-gray-200","dark:border-gray-700","space-y-3","md:space-y-0","md:flex","md:justify-center","md:space-x-4"],[1,"w-full","md:w-auto","flex","items-center","justify-center","px-6","py-3","border","border-transparent","rounded-md","shadow-sm","text-base","font-medium","text-white","bg-primary","hover:bg-primary-dark","focus:outline-none","focus:ring-2","focus:ring-offset-2","focus:ring-primary-dark",3,"click"],[1,"mb-8"],[1,"text-xl","font-semibold","text-gray-700","dark:text-gray-300","mb-3","text-center","border-b","pb-2","dark:border-gray-700"],[1,"space-y-2","mt-3"],["class","p-2 bg-green-50 dark:bg-green-900/30 rounded-md text-center",4,"ngFor","ngForOf"],[1,"p-2","bg-green-50","dark:bg-green-900/30","rounded-md","text-center"],[1,"text-m","font-medium","text-green-700","dark:text-green-300"],[1,"text-lg","font-bold","text-green-600","dark:text-green-200"],[1,"mb-8","p-3","bg-yellow-50","dark:bg-yellow-900/30","rounded-md"],[1,"text-m","font-medium","text-yellow-800","dark:text-yellow-300","mb-1"],[1,"text-m","text-yellow-700","dark:text-yellow-200","italic","whitespace-pre-line"],[1,"text-center","py-20"],[1,"text-xl","text-gray-600","dark:text-gray-400"]],template:function(e,o){if(e&1&&(I(0,"div",1),ae(1,TB,40,9,"ng-container",2)(2,EB,3,0,"ng-template",null,0,Xo),E()),e&2){let n=jo(3);D(),B("ngIf",o.workoutLog())("ngIfElse",n)}},dependencies:[vo,Yo,bo,Kn,fa,ga],encapsulation:2})};var f3=O0(NS());var os=class{constructor(t,e){this.backend=t,this.dataMover=e,this.data=new WeakMap,this.dataIdsCount=0}get(t){return this.data.has(t)||this.dataMover.moveData(this.backend,t),this.data.get(t)}set(t,e){this.dataIdsCount++,this.data.set(t,e)}has(t){return this.data.has(t)}delete(t){return this.dataIdsCount--,this.data.delete(t)}numDataIds(){return this.dataIdsCount}},xn=class{refCount(t){return Wr("refCount")}incRef(t){return Wr("incRef")}timerAvailable(){return!0}time(t){return Wr("time")}read(t){return Wr("read")}readSync(t){return Wr("readSync")}readToGPU(t,e){return Wr("readToGPU")}numDataIds(){return Wr("numDataIds")}disposeData(t,e){return Wr("disposeData")}write(t,e,o){return Wr("write")}move(t,e,o,n,i){return Wr("move")}createTensorFromGPUData(t,e,o){return Wr("createTensorFromGPUData")}memory(){return Wr("memory")}floatPrecision(){return Wr("floatPrecision")}epsilon(){return this.floatPrecision()===32?1e-7:1e-4}dispose(){return Wr("dispose")}};function Wr(r){throw new Error(`'${r}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function RS(r){let t=r.length,e=0;for(;t>0;)e=Math.random()*t|0,t--,Md(r,t,e)}function NB(r,t){if(r.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${r.length}Second array length was ${t.length}`);let e=r.length,o=0;for(;e>0;)o=Math.random()*e|0,e--,Md(r,e,o),Md(t,e,o)}function ka(r,t,e){return Math.max(r,Math.min(t,e))}function RB(r){return r%2===0?r:r+1}function Md(r,t,e){let o=r[t];r[t]=r[e],r[e]=o}function $B(r){let t=0;for(let e=0;e<r.length;e++)t+=r[e];return t}function PB(r,t){let e=Math.random();return t*e+(1-e)*r}function DB(r,t){let e=0;for(let o=0;o<r.length;o++){let n=Number(r[o])-Number(t[o]);e+=n*n}return e}function A(r,t){if(!r)throw new Error(typeof t=="string"?t:t())}function Nt(r,t,e=""){A(zr(r,t),()=>e+` Shapes ${r} and ${t} must match`)}function so(r){A(r!=null,()=>"The input to the tensor constructor must be a non-null value.")}function Ke(r){if(r.length===0)return 1;let t=r[0];for(let e=1;e<r.length;e++)t*=r[e];return t}function AB(r){return r.length===0}function U0(r,t){if(r===t)return!0;if(r==null||t==null||r.length!==t.length)return!1;for(let e=0;e<r.length;e++)if(r[e]!==null&&t[e]!==null&&r[e]!==t[e])return!1;return!0}function zr(r,t){if(r===t)return!0;if(r==null||t==null||r.length!==t.length)return!1;for(let e=0;e<r.length;e++)if(r[e]!==t[e])return!1;return!0}function yn(r){return r%1===0}function FB(r){if(Math.tanh!=null)return Math.tanh(r);if(r===1/0)return 1;if(r===-1/0)return-1;{let t=Math.exp(2*r);return(t-1)/(t+1)}}function OB(r){let t=Math.ceil(Math.sqrt(r));return[t,Math.ceil(r/t)]}function LB(r){let t=new Uint32Array(r);for(let e=0;e<r;++e)t[e]=e;return RS(t),t}function is(r,t){return t<=r.length?r:r+" ".repeat(t-r.length)}function MB(r,t=n=>0,e,o){return new Promise((n,i)=>{let s=0,a=()=>{if(r()){n();return}s++;let l=t(s);if(e!=null&&s>=e){i();return}o!=null?o(a,l):setTimeout(a,l)};a()})}function BB(r,t){let e=1,o=-1;for(let i=0;i<r.length;++i)if(r[i]>=0)e*=r[i];else if(r[i]===-1){if(o!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${o} and dim ${i}`);o=i}else if(r[i]<0)throw Error(`Shapes can not be < 0. Found ${r[i]} at dim ${i}`);if(o===-1){if(t>0&&t!==e)throw Error(`Size(${t}) must match the product of shape ${r}`);return r}if(e===0)throw Error(`Cannot infer the missing size in [${r}] when there are 0 elements`);if(t%e!==0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${e}`);let n=r.slice();return n[o]=t/e,n}function Yn(r,t){let e=t.length;return r=r==null?t.map((o,n)=>n):[].concat(r),A(r.every(o=>o>=-e&&o<e),()=>`All values in axis param must be in range [-${e}, ${e}) but got axis ${r}`),A(r.every(o=>yn(o)),()=>`All values in axis param must be integers but got axis ${r}`),r.map(o=>o<0?e+o:o)}function G0(r,t){let e=[],o=[],n=t!=null&&Array.isArray(t)&&t.length===0,i=t==null||n?null:Yn(t,r).sort(),s=0;for(let a=0;a<r.length;++a){if(i!=null){if(i[s]===a&&r[a]!==1)throw new Error(`Can't squeeze axis ${a} since its dim '${r[a]}' is not 1`);(i[s]==null||i[s]>a)&&r[a]===1&&(e.push(r[a]),o.push(a)),i[s]<=a&&s++}r[a]!==1&&(e.push(r[a]),o.push(a))}return{newShape:e,keptDims:o}}function H0(r,t){return Bd(r,t)}function Bd(r,t){let e=null;if(r==null||r==="float32")e=new Float32Array(t);else if(r==="int32")e=new Int32Array(t);else if(r==="bool")e=new Uint8Array(t);else if(r==="string")e=new Array(t);else throw new Error(`Unknown data type ${r}`);return e}function K0(r,t){for(let e=0;e<r.length;e++){let o=r[e];if(isNaN(o)||!isFinite(o))throw Error(`A tensor of type ${t} being uploaded contains ${o}.`)}}function q0(r){return r==="bool"||r==="complex64"||r==="float32"||r==="int32"||r==="string"}function VB(r,t){return!(t==="complex64"||t==="float32"&&r!=="complex64"||t==="int32"&&r!=="float32"&&r!=="complex64"||t==="bool"&&r==="bool")}function Ia(r){if(r==="float32"||r==="int32")return 4;if(r==="complex64")return 8;if(r==="bool")return 1;throw new Error(`Unknown dtype ${r}`)}function j0(r){if(r==null)return 0;let t=0;return r.forEach(e=>t+=e.length),t}function Ta(r){return typeof r=="string"||r instanceof String}function $S(r){return typeof r=="boolean"}function PS(r){return typeof r=="number"}function Qn(r){return Array.isArray(r)?Qn(r[0]):r instanceof Float32Array?"float32":r instanceof Int32Array||r instanceof Uint8Array||r instanceof Uint8ClampedArray?"int32":PS(r)?"float32":Ta(r)?"string":$S(r)?"bool":"float32"}function Ea(r){return!!(r&&r.constructor&&r.call&&r.apply)}function Na(r,t){for(let e=t;e<r;++e)if(r%e===0)return e;return r}function Qo(r){let t=r.length;if(t<2)return[];let e=new Array(t-1);e[t-2]=r[t-1];for(let o=t-3;o>=0;--o)e[o]=e[o+1]*r[o+1];return e}function DS(r,t,e,o=!1){let n=new Array;if(t.length===1){let i=t[0]*(o?2:1);for(let s=0;s<i;s++)n[s]=e[r+s]}else{let i=t[0],s=t.slice(1),a=s.reduce((l,u)=>l*u)*(o?2:1);for(let l=0;l<i;l++)n[l]=DS(r+l*a,s,e,o)}return n}function ns(r,t,e=!1){if(r.length===0)return t[0];let o=r.reduce((n,i)=>n*i)*(e?2:1);if(o===0)return[];if(o!==t.length)throw new Error(`[${r}] does not match the input size ${t.length}${e?" for a complex tensor":""}.`);return DS(0,r,t,e)}function WB(r,t){if(Array.isArray(r))return r;if(t==="float32")return r instanceof Float32Array?r:new Float32Array(r);if(t==="int32")return r instanceof Int32Array?r:new Int32Array(r);if(t==="bool"||t==="string")return Uint8Array.from(new Int32Array(r));throw new Error(`Unknown dtype ${t}`)}function rp(r,t){let e=Ra(r,t);for(let o=0;o<e.length;o++)e[o]=1;return e}function Ra(r,t){if(t==null||t==="float32"||t==="complex64")return new Float32Array(r);if(t==="int32")return new Int32Array(r);if(t==="bool")return new Uint8Array(r);throw new Error(`Unknown data type ${t}`)}function zB(r,t){let e=r.reduce((o,n)=>o*n,1);if(t==null||t==="float32")return ns(r,new Float32Array(e));if(t==="int32")return ns(r,new Int32Array(e));if(t==="bool")return ns(r,new Uint8Array(e));throw new Error(`Unknown data type ${t}`)}function bt(r){r.forEach(t=>{A(Number.isInteger(t)&&t>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${r}].`)})}function UB(r,t,e){if(t===0)return 0;if(t===1)return r[0];let o=r[r.length-1];for(let n=0;n<r.length-1;++n)o+=e[n]*r[n];return o}function GB(r,t,e){if(t===0)return[];if(t===1)return[r];let o=new Array(t);for(let n=0;n<o.length-1;++n)o[n]=Math.floor(r/e[n]),r-=o[n]*e[n];return o[o.length-1]=r,o}function ss(r){return r&&r.then&&typeof r.then=="function"}var AS="tfjsflags",op=class{constructor(t){this.global=t,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=KB,this.populateURLFlags()}setPlatform(t,e){this.platform!=null&&(G().getBool("IS_TEST")||G().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`)),this.platformName=t,this.platform=e}registerFlag(t,e,o){if(this.flagRegistry[t]={evaluationFn:e,setHook:o},this.urlFlags[t]!=null){let n=this.urlFlags[t];G().getBool("IS_TEST")||G().getBool("PROD")||console.warn(`Setting feature override from URL ${t}: ${n}.`),this.set(t,n)}}getAsync(t){return X(this,null,function*(){return t in this.flags?this.flags[t]:(this.flags[t]=yield this.evaluateFlag(t),this.flags[t])})}get(t){if(t in this.flags)return this.flags[t];let e=this.evaluateFlag(t);if(ss(e))throw new Error(`Flag ${t} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[t]=e,this.flags[t]}getNumber(t){return this.get(t)}getBool(t){return this.get(t)}getString(t){return this.get(t)}getFlags(){return this.flags}get features(){return this.flags}set(t,e){if(this.flagRegistry[t]==null)throw new Error(`Cannot set flag ${t} as it has not been registered.`);this.flags[t]=e,this.flagRegistry[t].setHook!=null&&this.flagRegistry[t].setHook(e)}evaluateFlag(t){if(this.flagRegistry[t]==null)throw new Error(`Cannot evaluate flag '${t}': no evaluation function found.`);return this.flagRegistry[t].evaluationFn()}setFlags(t){this.flags=Object.assign({},t)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global>"u"||typeof this.global.location>"u"||typeof this.global.location.search>"u")return;let t=this.getQueryParams(this.global.location.search);AS in t&&t[AS].split(",").forEach(o=>{let[n,i]=o.split(":");this.urlFlags[n]=jB(n,i)})}};function KB(r){let t={};return r.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(e,...o)=>(qB(t,o[0],o[1]),o.join("="))),t}function qB(r,t,e){r[decodeURIComponent(t)]=decodeURIComponent(e||"")}function jB(r,t){let e=t.toLowerCase();return e==="true"||e==="false"?e==="true":`${+e}`===e?+e:t}function G(){return X0}var X0=null;function FS(r){X0=r}var Y0;function Q0(){if(Y0==null){let r;if(typeof window<"u")r=window;else if(typeof global<"u")r=global;else if(typeof process<"u")r=process;else if(typeof self<"u")r=self;else throw new Error("Could not find a global object");Y0=r}return Y0}function XB(){let r=Q0();return r._tfGlobals==null&&(r._tfGlobals=new Map),r._tfGlobals}function np(r,t){let e=XB();if(e.has(r))return e.get(r);{let o=t();return e.set(r,o),e.get(r)}}var as="Abs",$a="Acos",Pa="Acosh",Zo="Add",Da="AddN",Aa="All",Fa="Any",Oa="ArgMax",La="ArgMin",Ma="Asin",Ba="Asinh",Va="Atan",Wa="Atanh",za="Atan2",Ua="AvgPool",Vd="AvgPoolGrad",Ga="AvgPool3D",Wd="AvgPool3DGrad",Ha="BatchMatMul",Ka="BatchToSpaceND",qa="Bincount",ja="BitwiseAnd";var Xa="BroadcastArgs",bn="Cast",Zn="Ceil",Ya="ClipByValue",ls="Complex",Qa="ComplexAbs",Za="Concat",Ja="Conv2D",el="Conv2DBackpropFilter",tl="Conv2DBackpropInput",rl="Conv3D",zd="Conv3DBackpropFilterV2",ol="Conv3DBackpropInputV2",nl="Cos",il="Cosh",sl="Cumprod",al="Cumsum",ll="CropAndResize",ul="DenseBincount",cl="DepthToSpace",pl="DepthwiseConv2dNative",dl="DepthwiseConv2dNativeBackpropFilter",ml="DepthwiseConv2dNativeBackpropInput",fl="Diag",hl="Dilation2D",OS="Dilation2DBackpropInput",LS="Dilation2DBackpropFilter",ip="Draw",gl="RealDiv",xl="Einsum",yl="Elu",Ud="EluGrad",bl="Erf",Jn="Equal",ei="Exp",vl="ExpandDims",ti="Expm1",Sl="FFT",wl="Fill",Cl="FlipLeftRight",ri="Floor",oi="FloorDiv",_l="FusedBatchNorm",kl="GatherV2",Il="GatherNd",ni="Greater",ii="GreaterEqual",vn="Identity",Tl="IFFT",El="Imag",Nl="IsFinite",Rl="IsInf",$l="IsNan",Pl="LeakyRelu",si="Less",ai="LessEqual",Dl="LinSpace",li="Log",Al="Log1p",Fl="LogicalAnd",Ol="LogicalNot",Ll="LogicalOr";var Ml="LRN",Gd="LRNGrad";var Bl="Max",ui="Maximum",Vl="MaxPool",Hd="MaxPoolGrad",Wl="MaxPool3D",Kd="MaxPool3DGrad",zl="MaxPoolWithArgmax",Ul="Mean",Gl="Min",ci="Minimum",Hl="MirrorPad",Kl="Mod",ql="Multinomial",pi="Multiply",us="Neg",di="NotEqual",jl="NonMaxSuppressionV3",qd="NonMaxSuppressionV4",Xl="NonMaxSuppressionV5",Yl="OnesLike",Ql="OneHot",Zl="Pack",Jl="PadV2";var eu="Pow",tu="Prelu",cs="Prod",jd="RaggedGather",Xd="RaggedRange",Yd="RaggedTensorToTensor",ru="Range",ps="Real",ou="Reciprocal",nu="Relu",iu="Reshape",su="ResizeNearestNeighbor",Qd="ResizeNearestNeighborGrad",au="ResizeBilinear",Zd="ResizeBilinearGrad",lu="Relu6",uu="Reverse",cu="Round",mi="Rsqrt",pu="ScatterNd",du="TensorScatterUpdate",mu="SearchSorted",fu="Select",hu="Selu",ds="Slice",gu="Sin",xu="Sinh",yu="Sign",fi="Sigmoid",bu="Softplus",hi="Sqrt",vu="Sum",Su="SpaceToBatchND",wu="SplitV",Cu="Softmax",Jd="SparseFillEmptyRows",em="SparseReshape",_u="SparseSegmentMean",ku="SparseSegmentSum",Iu="SparseToDense",gi="SquaredDifference",tm="Square",Tu="StaticRegexReplace",Eu="StridedSlice",Nu="StringNGrams",rm="StringSplit",om="StringToHashBucketFast",xi="Sub",Ru="Tan",$u="Tanh",yi="Tile",Pu="TopK",Du="Transform",bi="Transpose",nm="Unique",Au="Unpack",Fu="UnsortedSegmentSum";var Ou="ZerosLike",Lu="Step",ms="FromPixels",Mu="RotateWithOffset",fs="_FusedMatMul",hs="FusedConv2D",gs="FusedDepthwiseConv2D";function Sn(...r){G().getBool("IS_TEST")||G().getBool("PROD")||console.warn(...r)}function YB(...r){G().getBool("IS_TEST")||G().getBool("PROD")||console.log(...r)}var im=np("kernelRegistry",()=>new Map),QB=np("gradRegistry",()=>new Map);function Bu(r,t){let e=BS(r,t);return im.get(e)}function Z0(r){return QB.get(r)}function J0(r){let t=im.entries(),e=[];for(;;){let{done:o,value:n}=t.next();if(o)break;let[i,s]=n,[a]=i.split("_");a===r&&e.push(s)}return e}function sm(r){let{kernelName:t,backendName:e}=r,o=BS(t,e);im.has(o)&&Sn(`The kernel '${t}' for backend '${e}' is already registered`),im.set(o,r)}function BS(r,t){return`${t}_${r}`}var S={};ct(S,{arraysEqual:()=>zr,arraysEqualWithNull:()=>U0,assert:()=>A,assertNonNegativeIntegerDimensions:()=>bt,assertNonNull:()=>so,assertShapesMatch:()=>Nt,bytesFromStringArray:()=>j0,bytesPerElement:()=>Ia,checkConversionForErrors:()=>K0,clamp:()=>ka,computeStrides:()=>Qo,convertBackendValuesAndArrayBuffer:()=>WB,createScalarValue:()=>nV,createShuffledIndices:()=>LB,decodeString:()=>Gu,distSquared:()=>DB,encodeString:()=>Uu,fetch:()=>sV,fingerPrint64:()=>oV,flatten:()=>Si,getArrayFromDType:()=>Bd,getTypedArrayFromDType:()=>H0,hasEncodingLoss:()=>VB,hexToLong:()=>sp,indexToLoc:()=>GB,inferDtype:()=>Qn,inferFromImplicitShape:()=>BB,isBoolean:()=>$S,isFunction:()=>Ea,isInt:()=>yn,isNumber:()=>PS,isPromise:()=>ss,isScalarShape:()=>AB,isString:()=>Ta,isTypedArray:()=>lr,isValidDtype:()=>q0,locToIndex:()=>UB,makeOnesTypedArray:()=>rp,makeZerosNestedTypedArray:()=>zB,makeZerosTypedArray:()=>Ra,nearestDivisor:()=>Na,nearestLargerEven:()=>RB,now:()=>Ss,parseAxisParam:()=>Yn,randUniform:()=>PB,repeatedTry:()=>MB,rightPad:()=>is,shuffle:()=>RS,shuffleCombo:()=>NB,sizeFromShape:()=>Ke,sizeToSquarishShape:()=>OB,squeezeShape:()=>G0,sum:()=>$B,swap:()=>Md,tanh:()=>FB,toNestedArray:()=>ns,toTypedArray:()=>zu});function am(r){return r instanceof Float32Array||r instanceof Int32Array||r instanceof Uint8Array||r instanceof Uint8ClampedArray}var oy=O0(YS());var vs=oy.default||oy;function sp(r){return vs.fromString(r,!0,16)}var ZS=sp("c3a5c85c97cb3127"),bs=sp("b492b66fbe98f273"),hr=sp("9ae16a3b2f90404f");function ry(r){return r.xor(r.shru(47))}function JS(r,t,e){let o=r.slice(t,t+e);return vs.fromBytes(Array.from(o),!0,!0)}function vt(r,t){return JS(r,t,8)}function QS(r,t){return JS(r,t,4)}function Xt(r,t){return t===0?r:r.shru(t).or(r.shl(64-t))}function vi(r,t,e=sp("9ddfea08eb382d69")){let o=r.xor(t).mul(e);o=o.xor(o.shru(47));let n=t.xor(o).mul(e);return n=n.xor(n.shru(47)),n=n.mul(e),n}function JB(r,t,e,o,n,i){n=n.add(r),i=Xt(i.add(n).add(o),21);let s=n;return n=n.add(t),n=n.add(e),i=i.add(Xt(n,44)),[n.add(o),i.add(s)]}function um(r,t,e,o){return JB(vt(r,t),vt(r,t+8),vt(r,t+16),vt(r,t+24),e,o)}function eV(r,t=r.length){if(t>=8){let e=hr.add(t*2),o=vt(r,0).add(hr),n=vt(r,t-8),i=Xt(n,37).mul(e).add(o),s=Xt(o,25).add(n).mul(e);return vi(i,s,e)}if(t>=4){let e=hr.add(t*2),o=QS(r,0);return vi(o.shl(3).add(t),QS(r,t-4),e)}if(t>0){let e=r[0],o=r[t>>1],n=r[t-1],i=e+(o<<8),s=t+(n<<2);return ry(hr.mul(i).xor(ZS.mul(s))).mul(hr)}return hr}function tV(r,t=r.length){let e=hr.add(t*2),o=vt(r,0).mul(bs),n=vt(r,8),i=vt(r,t-8).mul(e),s=vt(r,t-16).mul(hr);return vi(Xt(o.add(n),43).add(Xt(i,30)).add(s),o.add(Xt(n.add(hr),18)).add(i),e)}function rV(r,t=r.length){let e=hr.add(t*2),o=vt(r,0).mul(hr),n=vt(r,8),i=vt(r,t-8).mul(e),s=vt(r,t-16).mul(hr),a=Xt(o.add(n),43).add(Xt(i,30)).add(s),l=vi(a,o.add(Xt(n.add(hr),18)).add(i),e),u=vt(r,16).mul(e),c=vt(r,24),p=a.add(vt(r,t-32)).mul(e),d=l.add(vt(r,t-24)).mul(e);return vi(Xt(u.add(c),43).add(Xt(p,30)).add(d),u.add(Xt(c.add(o),18)).add(p),e)}function oV(r,t=r.length){let e=vs.fromNumber(81,!0);if(t<=32)return t<=16?eV(r,t):tV(r,t);if(t<=64)return rV(r,t);let o=e,n=e.mul(bs).add(113),i=ry(n.mul(hr).add(113)).mul(hr),s=[vs.UZERO,vs.UZERO],a=[vs.UZERO,vs.UZERO];o=o.mul(hr).add(vt(r,0));let l=0,u=(t-1>>6)*64,c=u+(t-1&63)-63;do o=Xt(o.add(n).add(s[0]).add(vt(r,l+8)),37).mul(bs),n=Xt(n.add(s[1]).add(vt(r,l+48)),42).mul(bs),o=o.xor(a[1]),n=n.add(s[0]).add(vt(r,l+40)),i=Xt(i.add(a[0]),33).mul(bs),s=um(r,l,s[1].mul(bs),o.add(a[0])),a=um(r,l+32,i.add(a[1]),n.add(vt(r,l+16))),[i,o]=[o,i],l+=64;while(l!==u);let p=bs.add(i.and(255).shl(1));return l=c,a[0]=a[0].add(t-1&63),s[0]=s[0].add(a[0]),a[0]=a[0].add(s[0]),o=Xt(o.add(n).add(s[0]).add(vt(r,l+8)),37).mul(p),n=Xt(n.add(s[1]).add(vt(r,l+48)),42).mul(p),o=o.xor(a[1].mul(9)),n=n.add(s[0].mul(9).add(vt(r,l+40))),i=Xt(i.add(a[0]),33).mul(p),s=um(r,l,s[1].mul(p),o.add(a[0])),a=um(r,l+32,i.add(a[1]),n.add(vt(r,l+16))),[i,o]=[o,i],vi(vi(s[0],a[0],p).add(ry(n).mul(ZS)).add(i),vi(s[1],a[1],p).add(o),p)}function nV(r,t){return t==="string"?Uu(r):zu([r],t)}function iV(r,t){return r instanceof Float32Array&&t==="float32"||r instanceof Int32Array&&t==="int32"||r instanceof Uint8Array&&t==="bool"}function zu(r,t){if(t==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(r)&&(r=Si(r)),G().getBool("DEBUG")&&K0(r,t),iV(r,t))return r;if(t==null||t==="float32"||t==="complex64")return new Float32Array(r);if(t==="int32")return new Int32Array(r);if(t==="bool"){let e=new Uint8Array(r.length);for(let o=0;o<e.length;++o)Math.round(r[o])!==0&&(e[o]=1);return e}else throw new Error(`Unknown data type ${t}`)}function Ss(){return G().platform.now()}function sV(r,t){return G().platform.fetch(r,t)}function Uu(r,t="utf-8"){return t=t||"utf-8",G().platform.encode(r,t)}function Gu(r,t="utf-8"){return t=t||"utf-8",G().platform.decode(r,t)}function lr(r){return G().platform.isTypedArray!=null?G().platform.isTypedArray(r):am(r)}function Si(r,t=[],e=!1){if(t==null&&(t=[]),typeof r=="boolean"||typeof r=="number"||typeof r=="string"||ss(r)||r==null||lr(r)&&e)t.push(r);else if(Array.isArray(r)||lr(r))for(let o=0;o<r.length;++o)Si(r[o],t,e);else{let o=-1;for(let n of Object.keys(r))/^([1-9]+[0-9]*|0)$/.test(n)&&(o=Math.max(o,Number(n)));for(let n=0;n<=o;n++)Si(r[n],t,e)}return t}var cm=class{constructor(t,e){this.backendTimer=t,this.logger=e,e==null&&(this.logger=new ny)}profileKernel(t,e,o){let n,i=()=>{n=o()},s,a=Ss();if(this.backendTimer.timerAvailable())s=this.backendTimer.time(i);else{i();for(let u of n)u.dataSync();s=Promise.resolve({kernelMs:Ss()-a})}if(G().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let u=0;u<n.length;u++){let c=n[u];c.data().then(p=>{aV(p,c.dtype,t)})}return{kernelName:t,outputs:n,inputs:e,timeMs:s.then(u=>u.kernelMs),extraInfo:s.then(u=>u.getExtraProfileInfo!=null?u.getExtraProfileInfo():"")}}logKernelProfile(t){let{kernelName:e,outputs:o,timeMs:n,inputs:i,extraInfo:s}=t;o.forEach(a=>{Promise.all([a.data(),n,s]).then(l=>{this.logger.logKernelProfile(e,a,l[0],l[1],i,l[2])})})}};function aV(r,t,e){if(t!=="float32")return!1;for(let o=0;o<r.length;o++){let n=r[o];if(isNaN(n)||!isFinite(n))return console.warn(`Found ${n} in the result of '${e}'`),!0}return!1}var ny=class{logKernelProfile(t,e,o,n,i,s){let a=typeof n=="number"?is(`${n}ms`,9):n.error,l=is(t,25),u=e.rank,c=e.size,p=is(e.shape.toString(),14),d="";for(let m in i){let f=i[m];if(f!=null){let g=f.shape||e.shape,x=g.length;d+=`${m}: ${x}D ${x>0?g:""} `}}console.log(`%c${l}	%c${a}	%c${u}D ${p}	%c${c}	%c${d}	%c${s}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}};function ew(r,t,e){let o={},n={};for(let l=0;l<t.length;l++)o[t[l].id]=!0;for(let l=0;l<r.length;l++){let u=r[l],c=u.inputs;for(let p in c){let d=c[p],m=!1;for(let f=0;f<t.length;f++)if(o[d.id]){u.outputs.forEach(g=>o[g.id]=!0),m=!0,n[u.id]=!0;break}if(m)break}}let i={};i[e.id]=!0;let s={};for(let l=r.length-1;l>=0;l--){let u=r[l],c=u.inputs;for(let p=0;p<u.outputs.length;p++)if(i[u.outputs[p].id]){for(let d in c)i[c[d].id]=!0,s[u.id]=!0;break}}let a=[];for(let l=0;l<r.length;l++){let u=r[l];if(n[u.id]&&s[u.id]){let c={};for(let d in u.inputs){let m=u.inputs[d];o[m.id]&&(c[d]=m)}let p=Object.assign({},u);p.inputs=c,p.outputs=u.outputs,a.push(p)}}return a}function tw(r,t,e,o){for(let n=t.length-1;n>=0;n--){let i=t[n],s=[];if(i.outputs.forEach(l=>{let u=r[l.id];u!=null?s.push(u):s.push(null)}),i.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${i.kernelName}.`);let a=i.gradient(s);for(let l in i.inputs){if(!(l in a))throw new Error(`Cannot backprop through input ${l}. Available gradients found: ${Object.keys(a)}.`);let u=e(()=>a[l]());if(u.dtype!=="float32")throw new Error(`Error in gradient for op ${i.kernelName}. The gradient of input ${l} must have 'float32' dtype, but has '${u.dtype}'`);let c=i.inputs[l];if(!zr(u.shape,c.shape))throw new Error(`Error in gradient for op ${i.kernelName}. The gradient of input '${l}' has shape '${u.shape}', which does not match the shape of the input '${c.shape}'`);if(r[c.id]==null)r[c.id]=u;else{let p=r[c.id];r[c.id]=o(p,u),p.dispose()}}}}var rw=20,ap=3,iy=7;function ow(r,t,e,o){let n=Qo(t),i=lV(r,t,e,n),s=t.length,a=pm(r,t,e,n,i),l=["Tensor"];return o&&(l.push(`  dtype: ${e}`),l.push(`  rank: ${s}`),l.push(`  shape: [${t}]`),l.push("  values:")),l.push(a.map(u=>"    "+u).join(`
`)),l.join(`
`)}function lV(r,t,e,o){let n=Ke(t),i=o[o.length-1],s=new Array(i).fill(0),a=t.length,l=e==="complex64"?up(r):r;if(a>1)for(let u=0;u<n/i;u++){let c=u*i;for(let p=0;p<i;p++)s[p]=Math.max(s[p],lp(l[c+p],0,e).length)}return s}function lp(r,t,e){let o;return Array.isArray(r)?o=`${parseFloat(r[0].toFixed(iy))} + ${parseFloat(r[1].toFixed(iy))}j`:Ta(r)?o=`'${r}'`:e==="bool"?o=nw(r):o=parseFloat(r.toFixed(iy)).toString(),is(o,t)}function nw(r){return r===0?"false":"true"}function pm(r,t,e,o,n,i=!0){let s=e==="complex64"?2:1,a=t[0],l=t.length;if(l===0){if(e==="complex64"){let g=up(r);return[lp(g[0],0,e)]}return e==="bool"?[nw(r[0])]:[r[0].toString()]}if(l===1){if(a>rw){let x=ap*s,y=Array.from(r.slice(0,x)),v=Array.from(r.slice((a-ap)*s,a*s));return e==="complex64"&&(y=up(y),v=up(v)),["["+y.map((k,N)=>lp(k,n[N],e)).join(", ")+", ..., "+v.map((k,N)=>lp(k,n[a-ap+N],e)).join(", ")+"]"]}return["["+(e==="complex64"?up(r):Array.from(r)).map((x,y)=>lp(x,n[y],e)).join(", ")+"]"]}let u=t.slice(1),c=o.slice(1),p=o[0]*s,d=[];if(a>rw){for(let g=0;g<ap;g++){let x=g*p,y=x+p;d.push(...pm(r.slice(x,y),u,e,c,n,!1))}d.push("...");for(let g=a-ap;g<a;g++){let x=g*p,y=x+p;d.push(...pm(r.slice(x,y),u,e,c,n,g===a-1))}}else for(let g=0;g<a;g++){let x=g*p,y=x+p;d.push(...pm(r.slice(x,y),u,e,c,n,g===a-1))}let m=l===2?",":"";d[0]="["+(a>0?d[0]+m:"");for(let g=1;g<d.length-1;g++)d[g]=" "+d[g]+m;let f=`,
`;for(let g=2;g<l;g++)f+=`
`;return d[d.length-1]=" "+d[d.length-1]+"]"+(i?"":f),d}function up(r){let t=[];for(let e=0;e<r.length;e+=2)t.push([r[e],r[e+1]]);return t}var ao=class{constructor(t,e,o){if(this.dtype=e,this.shape=t.slice(),this.size=Ke(t),o!=null){let n=o.length;A(n===this.size,()=>`Length of values '${n}' does not match the size inferred by the shape '${this.size}'.`)}if(e==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=o||Bd(e,this.size),this.strides=Qo(t)}set(t,...e){e.length===0&&(e=[0]),A(e.length===this.rank,()=>`The number of provided coordinates (${e.length}) must match the rank (${this.rank})`);let o=this.locToIndex(e);this.values[o]=t}get(...t){t.length===0&&(t=[0]);let e=0;for(let n of t){if(n<0||n>=this.shape[e]){let i=`Requested out of range element at ${t}.   Buffer shape=${this.shape}`;throw new Error(i)}e++}let o=t[t.length-1];for(let n=0;n<t.length-1;++n)o+=this.strides[n]*t[n];return this.values[o]}locToIndex(t){if(this.rank===0)return 0;if(this.rank===1)return t[0];let e=t[t.length-1];for(let o=0;o<t.length-1;++o)e+=this.strides[o]*t[o];return e}indexToLoc(t){if(this.rank===0)return[];if(this.rank===1)return[t];let e=new Array(this.shape.length);for(let o=0;o<e.length-1;++o)e[o]=Math.floor(t/this.strides[o]),t-=e[o]*this.strides[o];return e[e.length-1]=t,e}get rank(){return this.shape.length}toTensor(){return Ao().makeTensor(this.values,this.shape,this.dtype)}},Ao=null,Hu=null,uV=null;function iw(r){Ao=r}function sw(r){Hu=r}function aw(r){uV=r}var st=class{constructor(t,e,o,n){this.kept=!1,this.isDisposedInternal=!1,this.shape=t.slice(),this.dtype=e||"float32",this.size=Ke(t),this.strides=Qo(t),this.dataId=o,this.id=n,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}buffer(){return X(this,null,function*(){let t=yield this.data();return Hu.buffer(this.shape,this.dtype,t)})}bufferSync(){return Hu.buffer(this.shape,this.dtype,this.dataSync())}array(){return X(this,null,function*(){let t=yield this.data();return ns(this.shape,t,this.dtype==="complex64")})}arraySync(){return ns(this.shape,this.dataSync(),this.dtype==="complex64")}data(){return X(this,null,function*(){this.throwIfDisposed();let t=Ao().read(this.dataId);if(this.dtype==="string"){let e=yield t;try{return e.map(o=>Gu(o))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return t})}dataToGPU(t){return this.throwIfDisposed(),Ao().readToGPU(this.dataId,t)}dataSync(){this.throwIfDisposed();let t=Ao().readSync(this.dataId);if(this.dtype==="string")try{return t.map(e=>Gu(e))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return t}bytes(){return X(this,null,function*(){this.throwIfDisposed();let t=yield Ao().read(this.dataId);return this.dtype==="string"?t:new Uint8Array(t.buffer)})}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),Ao().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(t=!1){return Hu.print(this,t)}clone(){return this.throwIfDisposed(),Hu.clone(this)}toString(t=!1){let e=this.dataSync();return ow(e,this.shape,this.dtype,t)}cast(t){return this.throwIfDisposed(),Hu.cast(this,t)}variable(t=!0,e,o){return this.throwIfDisposed(),Ao().makeVariable(this,t,e,o)}};Object.defineProperty(st,Symbol.hasInstance,{value:r=>!!r&&r.data!=null&&r.dataSync!=null&&r.throwIfDisposed!=null});function sy(){return np("Tensor",()=>st)}sy();var wn=class extends st{constructor(t,e,o,n){super(t.shape,t.dtype,t.dataId,n),this.trainable=e,this.name=o}assign(t){if(t.dtype!==this.dtype)throw new Error(`dtype of the new value (${t.dtype}) and previous value (${this.dtype}) must match`);if(!zr(t.shape,this.shape))throw new Error(`shape of the new value (${t.shape}) and previous value (${this.shape}) must match`);Ao().disposeTensor(this),this.dataId=t.dataId,Ao().incRef(this,null)}dispose(){Ao().disposeVariable(this),this.isDisposedInternal=!0}};Object.defineProperty(wn,Symbol.hasInstance,{value:r=>r instanceof st&&r.assign!=null&&r.assign instanceof Function});var lw=function(r){return r.float32="float32",r.int32="int32",r.bool="int32",r.complex64="complex64",r}(lw||{}),uw=function(r){return r.float32="float32",r.int32="int32",r.bool="bool",r.complex64="complex64",r}(uw||{}),cw=function(r){return r.float32="float32",r.int32="float32",r.bool="float32",r.complex64="complex64",r}(cw||{}),pw=function(r){return r.float32="complex64",r.int32="complex64",r.bool="complex64",r.complex64="complex64",r}(pw||{}),cV={float32:cw,int32:lw,bool:uw,complex64:pw};function Tt(r,t){if(r==="string"||t==="string"){if(r==="string"&&t==="string")return"string";throw new Error(`Can not upcast ${r} with ${t}`)}return cV[r][t]}function Cn(r){return Tt(r,"int32")}function dm(r){return r!=null&&typeof r=="object"&&"texture"in r&&r.texture instanceof WebGLTexture}function mm(r){return typeof GPUBuffer<"u"&&r!=null&&typeof r=="object"&&"buffer"in r&&r.buffer instanceof GPUBuffer}function He(r,t){if(r.dtype===t.dtype)return[r,t];let e=Tt(r.dtype,t.dtype);return[r.cast(e),t.cast(e)]}function dw(r,t){A(r.dtype===t.dtype,()=>`The dtypes of the first(${r.dtype}) and second(${t.dtype}) input must match`)}function fm(r){let t=[];return mw(r,t,new Set),t}function mw(r,t,e){if(r==null)return;if(r instanceof st){t.push(r);return}if(!pV(r))return;let o=r;for(let n in o){let i=o[n];e.has(i)||(e.add(i),mw(i,t,e))}}function pV(r){return Array.isArray(r)||typeof r=="object"}function ay(r){return r.kernelName!=null}var hm=class{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(t=>t.name)))}}}dispose(){for(let t in this.registeredVariables)this.registeredVariables[t].dispose()}},dV=(()=>{class r{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new hm}ready(){return X(this,null,function*(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;let e=this.getSortedBackends();for(let o=0;o<e.length;o++){let n=e[o];if(yield this.initializeBackend(n).success){yield this.setBackend(n);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")})}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){let{name:e,asyncInit:o}=this.initializeBackendsAndReturnBest();if(o)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry))if(e in this.registryFactory){let{asyncInit:o}=this.initializeBackend(e);if(o)return null}else return null;return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,o,n=1){return e in this.registryFactory?(Sn(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:o,priority:n},!0)}setBackend(e){return X(this,null,function*(){if(this.registryFactory[e]==null)throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,this.registry[e]==null){this.backendInstance=null;let{success:o,asyncInit:n}=this.initializeBackend(e);if(!(n?yield o:o))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new cm(this.backendInstance),!0})}setupRegisteredKernels(){J0(this.backendName).forEach(o=>{o.setupFunc!=null&&o.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){J0(e).forEach(n=>{n.disposeFunc!=null&&n.disposeFunc(this.registry[e])})}initializeBackend(e){let o=this.registryFactory[e];if(o==null)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{let n=o.factory();if(n&&!(n instanceof xn)&&typeof n.then=="function"){let i=++this.pendingBackendInitId,s=n.then(a=>i<this.pendingBackendInitId?!1:(this.registry[e]=a,this.pendingBackendInit=null,!0)).catch(a=>(i<this.pendingBackendInitId||(this.pendingBackendInit=null,Sn(`Initialization of backend ${e} failed`),Sn(a.stack||a.message)),!1));return this.pendingBackendInit=s,{success:s,asyncInit:!0}}else return this.registry[e]=n,{success:!0,asyncInit:!1}}catch(n){return Sn(`Initialization of backend ${e} failed`),Sn(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,o)=>this.registryFactory[o].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){let e=this.getSortedBackends();for(let o=0;o<e.length;o++){let n=e[o],{success:i,asyncInit:s}=this.initializeBackend(n);if(s||i)return{name:n,asyncInit:s}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,o){let n=this.state.tensorInfo.get(o),i=n.backend,s=this.readSync(o),a=i.refCount(o);i.disposeData(o,!0),n.backend=e,e.move(o,s,n.shape,n.dtype,a),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,o){let n=null;if(o==null){if(typeof e!="function")throw new Error("Please provide a function to tidy()");o=e}else{if(typeof e!="string"&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof o!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");n=e}let i;return this.scopedRun(()=>this.startScope(n),()=>this.endScope(i),()=>(i=o(),i instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),i))}scopedRun(e,o,n){e();try{let i=n();return o(),i}catch(i){throw o(),i}}nextTensorId(){return r.nextTensorId++}nextVariableId(){return r.nextVariableId++}clone(e){let o=P.runKernel(vn,{x:e}),n={x:e},i=a=>({x:()=>{let l="float32",u={x:a},c={dtype:l};return P.runKernel(bn,u,c)}}),s=[];return this.addTapeNode(this.state.activeScope.name,n,[o],i,s,{}),o}runKernel(e,o,n){if(this.backendName==null&&this.backend,!(Bu(e,this.backendName)!=null))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:o,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,o,n){let i=this.backend.numDataIds(),s=0;n.forEach(u=>{s+=u.dtype==="complex64"?3:1});let a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],l=i-o-s-a;if(l>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${l} data ids) after running '${e}'`)}runKernelFunc(e){let o,n=[],i=this.isTapeOn(),s=this.state.numBytes,a=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let l;this.backendName==null&&this.backend;let u,c=ay(e)?e.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(ay(e)){let{kernelName:g,inputs:x,attrs:y}=e;this.backendName==null&&this.backend;let v=Bu(g,this.backendName);A(v!=null,()=>`Cannot find registered kernel '${g}' for backend '${this.backendName}'`),l=()=>{let k=this.backend.numDataIds();u=v.kernelFunc({inputs:x,attrs:y,backend:this.backend});let N=Array.isArray(u)?u:[u];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(g,k,N);let F=N.map(M=>M.rank!=null?M:this.makeTensorFromTensorInfo(M));if(i){let M=this.getTensorsForGradient(g,x,F);n=this.saveTensorsForBackwardMode(M)}return F}}else{let{forwardFunc:g}=e,x=y=>{i&&(n=y.map(v=>this.keep(this.clone(v))))};l=()=>{let y=this.backend.numDataIds();u=this.tidy(()=>g(this.backend,x));let v=Array.isArray(u)?u:[u];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(c,y,v),v}}let{inputs:p,attrs:d}=e,m=ay(e)?null:e.backwardsFunc,f;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?o=l():(f=this.profiler.profileKernel(c,p,()=>l()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(f),o=f.outputs)}),i&&this.addTapeNode(c,p,o,m,n,d),this.state.profiling&&this.state.activeProfile.kernels.push({name:c,bytesAdded:this.state.numBytes-s,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-a,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(p).map(g=>p[g]!=null?p[g].shape:null),outputShapes:o.map(g=>g.shape),kernelTimeMs:f.timeMs,extraInfo:f.extraInfo}),Array.isArray(u)?o:o[0]}saveTensorsForBackwardMode(e){return e.map(n=>this.keep(this.clone(n)))}getTensorsForGradient(e,o,n){let i=Z0(e);if(i!=null){let s=i.inputsToSave||[],a=i.outputsToSave||[],l;i.saveAllInputs?(A(Array.isArray(o),()=>"saveAllInputs is true, expected inputs to be an array."),l=Object.keys(o).map(c=>o[c])):l=s.map(c=>o[c]);let u=n.filter((c,p)=>a[p]);return l.concat(u)}return[]}makeTensor(e,o,n,i){if(e==null)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",i=i||this.backend;let s=e;n==="string"&&Ta(e[0])&&(s=e.map(u=>Uu(u)));let a=i.write(s,o,n),l=new st(o,n,a,this.nextTensorId());if(this.trackTensor(l,i),n==="string"){let u=this.state.tensorInfo.get(a),c=j0(s);this.state.numBytes+=c-u.bytes,u.bytes=c}return l}makeTensorFromDataId(e,o,n,i){n=n||"float32";let s={dataId:e,shape:o,dtype:n};return this.makeTensorFromTensorInfo(s,i)}makeTensorFromTensorInfo(e,o){let{dataId:n,shape:i,dtype:s}=e,a=new st(i,s,n,this.nextTensorId());return this.trackTensor(a,o),a}makeVariable(e,o=!0,n,i){n=n||this.nextVariableId().toString(),i!=null&&i!==e.dtype&&(e=e.cast(i));let s=new wn(e,o,n,this.nextTensorId());if(this.state.registeredVariables[s.name]!=null)throw new Error(`Variable with name ${s.name} was already registered`);return this.state.registeredVariables[s.name]=s,this.incRef(s,this.backend),s}trackTensor(e,o){this.state.numTensors++,e.dtype==="string"&&this.state.numStringTensors++;let n=0;e.dtype!=="complex64"&&e.dtype!=="string"&&(n=e.size*Ia(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:o||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof wn||this.track(e)}incRef(e,o){this.trackTensor(e,o),this.backend.incRef(e.dataId)}removeDataId(e,o){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===o&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;let o=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,e.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=o.bytes),e.dtype!=="complex64"&&e.dtype!=="string"){let n=e.size*Ia(e.dtype);this.state.numBytes-=n}o.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,o.backend)}disposeVariables(){for(let e in this.state.registeredVariables){let o=this.state.registeredVariables[e];this.disposeVariable(o)}}disposeVariable(e){this.disposeTensor(e),this.state.registeredVariables[e.name]!=null&&delete this.state.registeredVariables[e.name]}memory(){let e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,e.reasons==null&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}profile(e){return X(this,null,function*(){this.state.profiling=!0;let o=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=yield e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(i=>i.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-o,this.state.activeProfile.newTensors=this.state.numTensors-n;for(let i of this.state.activeProfile.kernels)i.kernelTimeMs=yield i.kernelTimeMs,i.extraInfo=yield i.extraInfo;return this.state.activeProfile})}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(e,o,n,i,s,a){let l={id:this.state.nextTapeNodeId++,kernelName:e,inputs:o,outputs:n,saved:s},u=Z0(e);u!=null&&(i=u.gradFunc),i!=null&&(l.gradient=c=>(c=c.map((p,d)=>{if(p==null){let m=n[d],f=Ra(m.size,m.dtype);return this.makeTensor(f,m.shape,m.dtype)}return p}),i(c.length>1?c:c[0],s,a))),this.state.activeTape.push(l)}keep(e){return e.kept=!0,e}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){let o={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(o.name=e),this.state.scopeStack.push(o),this.state.activeScope=o}endScope(e){let o=fm(e),n=new Set(o.map(s=>s.id));for(let s=0;s<this.state.activeScope.track.length;s++){let a=this.state.activeScope.track[s];!a.kept&&!n.has(a.id)&&a.dispose()}let i=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],o.forEach(s=>{!s.kept&&s.scopeId===i.id&&this.track(s)})}gradients(e,o,n,i=!1){if(A(o.length>0,()=>"gradients() received an empty list of xs."),n!=null&&n.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);let s=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));A(s instanceof st,()=>"The result y returned by f() must be a tensor.");let a=ew(this.state.activeTape,o,s);if(!i&&a.length===0&&o.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{let l={};l[s.id]=n??mV(s.shape),tw(l,a,c=>this.tidy(c),fV);let u=o.map(c=>l[c.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(c=>{for(let p of c.saved)p.dispose()}),this.state.activeTape=null),{value:s,grads:u}})}customGrad(e){return A(Ea(e),()=>"The f passed in customGrad(f) must be a function."),(...o)=>{A(o.every(l=>l instanceof st),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let n,i={};o.forEach((l,u)=>{i[u]=l});let s=(l,u)=>(n=e(...o,u),A(n.value instanceof st,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),A(Ea(n.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),n.value),a=(l,u)=>{let c=n.gradFunc(l,u),p=Array.isArray(c)?c:[c];A(p.length===o.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),A(p.every(m=>m instanceof st),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");let d={};return p.forEach((m,f)=>{d[f]=()=>m}),d};return this.runKernelFunc({forwardFunc:s,backwardsFunc:a,inputs:i})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,o){return this.state.tensorInfo.get(e).backend.readToGPU(e,o)}time(e){return X(this,null,function*(){let o=Ss(),n=yield this.backend.time(e);return n.wallMs=Ss()-o,n})}track(e){return this.state.activeScope!=null&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new hm;for(let e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}return r.nextTensorId=0,r.nextVariableId=0,r})();function mV(r){let t=rp(Ke(r),"float32");return P.makeTensor(t,r,"float32")}function ly(){let r=Q0();if(r._tfengine==null){let t=new op(r);r._tfengine=new dV(t)}return FS(r._tfengine.ENV),iw(()=>r._tfengine),r._tfengine}var P=ly();function fV(r,t){let e={a:r,b:t};return P.runKernel(Zo,e)}var wi={};ct(wi,{isBrowser:()=>cy,isMobile:()=>xV,mockIsMobile:()=>gV});function hV(){return typeof navigator<"u"&&navigator!=null}var uy;function gV(r){uy=r}function xV(r){if(uy!==void 0)return uy;if(r||hV()){if(r||(r=navigator),r.product==="ReactNative")return!0;let t=r.userAgent||r.vendor||(typeof window<"u"?window.opera:"");if(!t){let e=r;return e.userAgentData&&e.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function cy(){return typeof window<"u"&&window.document!=null||typeof WorkerGlobalScope<"u"}var Tr=G();Tr.registerFlag("DEBUG",()=>!1,r=>{r&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});Tr.registerFlag("IS_BROWSER",()=>cy());Tr.registerFlag("IS_NODE",()=>typeof process<"u"&&typeof process.versions<"u"&&typeof process.versions.node<"u");Tr.registerFlag("IS_CHROME",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));Tr.registerFlag("IS_SAFARI",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor));Tr.registerFlag("PROD",()=>!1);Tr.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>Tr.getBool("DEBUG"));Tr.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);Tr.registerFlag("IS_TEST",()=>!1);Tr.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>Tr.getBool("DEBUG"));Tr.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);Tr.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1);Tr.registerFlag("USE_SETTIMEOUTCUSTOM",()=>!1);function Er(r,t){let e=r;if(lr(r))return t==="string"?[]:[r.length];if(dm(r)){let n=r.channels||"RGBA";return[r.height,r.width*n.length]}else if(mm(r))return[r.buffer.size/(t==null?4:Ia(t))];if(!Array.isArray(r))return[];let o=[];for(;Array.isArray(e)||lr(e)&&t!=="string";)o.push(e.length),e=e[0];return Array.isArray(r)&&G().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&hw(r,o,[]),o}function hw(r,t,e){if(e=e||[],!Array.isArray(r)&&!lr(r)){A(t.length===0,()=>`Element arr[${e.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`);return}A(t.length>0,()=>`Element arr[${e.join("][")}] should be a primitive, but is an array of ${r.length} elements`),A(r.length===t[0],()=>`Element arr[${e.join("][")}] should have ${t[0]} elements, but has ${r.length} elements`);let o=t.slice(1);for(let n=0;n<r.length;++n)hw(r[n],o,e.concat(n))}function fw(r,t,e,o){if(r!=="string_or_numeric"){if(r==null)throw new Error("Expected dtype cannot be null.");if(r!=="numeric"&&r!==t||r==="numeric"&&t==="string")throw new Error(`Argument '${e}' passed to '${o}' must be ${r} tensor, but got ${t} tensor`)}}function C(r,t,e,o="numeric"){if(r instanceof sy())return fw(o,r.dtype,t,e),r;let n=Qn(r);if(n!=="string"&&["bool","int32","float32"].indexOf(o)>=0&&(n=o),fw(o,n,t,e),r==null||!lr(r)&&!Array.isArray(r)&&typeof r!="number"&&typeof r!="boolean"&&typeof r!="string"){let l=r==null?"null":r.constructor.name;throw new Error(`Argument '${t}' passed to '${e}' must be a Tensor or TensorLike, but got '${l}'`)}let i=Er(r,n);!lr(r)&&!Array.isArray(r)&&(r=[r]);let a=n!=="string"?zu(r,n):Si(r,[],!0);return P.makeTensor(a,i,n)}function ws(r,t,e,o="numeric"){if(!Array.isArray(r))throw new Error(`Argument ${t} passed to ${e} must be a \`Tensor[]\` or \`TensorLike[]\``);return r.map((i,s)=>C(i,`${t}[${s}]`,e,o))}var py="__op";function T(r){let t=Object.keys(r);if(t.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let e=t[0],o=r[e];e.endsWith("_")&&(e=e.substring(0,e.length-1)),e=e+py;let n=(...i)=>{P.startScope(e);try{let s=o(...i);return ss(s)&&console.error("Cannot return a Promise inside of tidy."),P.endScope(s),s}catch(s){throw P.endScope(null),s}};return Object.defineProperty(n,"name",{value:e,configurable:!0}),n}function yV(r,t){let e=C(r,"real","complex"),o=C(t,"imag","complex");Nt(e.shape,o.shape,`real and imag shapes, ${e.shape} and ${o.shape}, must match in call to tf.complex().`);let n={real:e,imag:o};return P.runKernel(ls,n)}var Nr=T({complex_:yV});function gr(r,t,e,o){if(o==null)o=Qn(r);else if(o==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(mm(r)||dm(r)){if(o!=="float32"&&o!=="int32")throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${o}.`);return P.backend.createTensorFromGPUData(r,t||e,o)}if(!lr(r)&&!Array.isArray(r)&&typeof r!="number"&&typeof r!="boolean"&&typeof r!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(t!=null){bt(t);let n=Ke(t),i=Ke(e);A(n===i,()=>`Based on the provided shape, [${t}], the tensor should have ${n} values but has ${i}`);for(let s=0;s<e.length;++s){let a=e[s],l=s===e.length-1?a!==Ke(t.slice(s)):!0;A(e[s]===t[s]||!l,()=>`Error creating a new Tensor. Inferred shape (${e}) does not match the provided shape (${t}). `)}}return!lr(r)&&!Array.isArray(r)&&(r=[r]),t=t||e,r=o!=="string"?zu(r,o):Si(r,[],!0),P.makeTensor(r,t,o)}function xr(r,t,e){let o=Er(r,e);return gr(r,t,o,e)}var _n={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};var Jt=class r{static join(t){return new r(t).slice()}constructor(t){if(this.shards=[],this.previousShardIndex=0,t==null||(t instanceof Array||(t=[t]),t=t.map(o=>lr(o)?o.buffer:o),t.length===0))return;this.bufferUniformSize=t[0].byteLength;let e=0;for(let o=0;o<t.length;o++){let n=t[o];o!==t.length-1&&n.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);let i=e+n.byteLength;this.shards.push({buffer:n,start:e,end:i}),e=i}this.shards.length===0&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(t=0,e=this.byteLength){if(this.shards.length===0)return new ArrayBuffer(0);if(t=isNaN(Number(t))?0:t,e=isNaN(Number(e))?0:e,t=Math.max(0,t),e=Math.min(this.byteLength,e),e<=t)return new ArrayBuffer(0);let o=this.findShardForByte(t);if(o===-1)throw new Error(`Could not find start shard for byte ${t}`);let n=e-t,i=new ArrayBuffer(n),s=new Uint8Array(i),a=0;for(let l=o;l<this.shards.length;l++){let u=this.shards[l],p=t+a-u.start,d=a,f=Math.min(e,u.end)-u.start,g=new Uint8Array(u.buffer,p,f-p);if(s.set(g,d),a+=g.length,e<u.end)break}return i}findShardForByte(t){if(this.shards.length===0||t<0||t>=this.byteLength)return-1;if(this.bufferUniformSize!=null)return this.previousShardIndex=Math.floor(t/this.bufferUniformSize),this.previousShardIndex;function e(n){return t<n.start?-1:t>=n.end?1:0}if(e(this.shards[this.previousShardIndex])===0)return this.previousShardIndex;let o=bV(this.shards,e);return o===-1?-1:(this.previousShardIndex=o,this.previousShardIndex)}};function bV(r,t){let e=0,o=r.length;for(;e<=o;){let n=Math.floor((o-e)/2)+e,i=t(r[n]);if(i===0)return n;i<0?o=n:e=n+1}return-1}function vV(r){G().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(r+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}aw(vV);function ur(){return P}function Te(r,t){return P.tidy(r,t)}function Xe(r){fm(r).forEach(e=>e.dispose())}function Rr(r){return P.keep(r)}function dy(r){return P.setBackend(r)}function my(){return P.ready()}function Jo(){return P.backendName}function gm(r,t,e=1){return P.registerBackend(r,t,e)}function Ci(){return P.backend}var _i=4;function yw(r,t){return X(this,null,function*(){let e=[],o=[],n=Array.isArray(r)?r.map(s=>s.name):Object.keys(r);for(let s=0;s<n.length;++s){let a=n[s],l=Array.isArray(r)?r[s].tensor:r[a];if(l.dtype!=="float32"&&l.dtype!=="int32"&&l.dtype!=="bool"&&l.dtype!=="string"&&l.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${a}': ${l.dtype}`);let u={name:a,shape:l.shape,dtype:l.dtype};if(l.dtype==="string"){let c=new Promise(p=>X(null,null,function*(){let d=yield l.bytes(),m=d.reduce((x,y)=>x+y.length,0)+_i*d.length,f=new Uint8Array(m),g=0;for(let x=0;x<d.length;x++){let y=d[x],v=new Uint8Array(new Uint32Array([y.length]).buffer);f.set(v,g),g+=_i,f.set(y,g),g+=y.length}p(f)}));o.push(c)}else o.push(l.data());t!=null&&(u.group=t),e.push(u)}let i=yield Promise.all(o);return{data:CV(i),specs:e}})}function xm(r,t){let e=new Jt(r),o={},n=0;for(let i of t){let s=SV(i,(a,l)=>e.slice(n+a,n+l));o[i.name]=bw(i,e.slice(n,n+s)),n+=s}return o}function SV(r,t){let e=Ke(r.shape),o;if("quantization"in r){let n=r.quantization;o=_n[n.dtype]}else if(r.dtype==="string"){let n=0;for(let i=0;i<e;i++)n+=_i+new Uint32Array(t(n,n+_i))[0];return n}else o=_n[r.dtype];return e*o}function wV(r,t){return X(this,null,function*(){let e=Ke(r.shape),o;if("quantization"in r){let n=r.quantization;o=_n[n.dtype]}else if(r.dtype==="string"){let n=0;for(let i=0;i<e;i++)n+=_i+new Uint32Array(yield t(n,n+_i))[0];return n}else o=_n[r.dtype];return e*o})}function bw(r,t){let e=r.name,o=r.dtype,n=r.shape,i=Ke(n),s,a=0;if("quantization"in r){let l=r.quantization;if(l.dtype==="uint8"||l.dtype==="uint16"){if(!("min"in l&&"scale"in l))throw new Error(`Weight ${r.name} with quantization ${l.dtype} doesn't have corresponding metadata min and scale.`)}else if(l.dtype==="float16"){if(o!=="float32")throw new Error(`Weight ${r.name} is quantized with ${l.dtype} which only supports weights of type float32 not ${o}.`)}else throw new Error(`Weight ${r.name} has unknown quantization dtype ${l.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);let u=_n[l.dtype],c=l.dtype==="uint8"?new Uint8Array(t):new Uint16Array(t);if(o==="float32")if(l.dtype==="uint8"||l.dtype==="uint16"){s=new Float32Array(c.length);for(let p=0;p<c.length;p++){let d=c[p];s[p]=d*l.scale+l.min}}else if(l.dtype==="float16")s=TV()(c);else throw new Error(`Unsupported quantization type ${l.dtype} for weight type float32.`);else if(o==="int32"){if(l.dtype!=="uint8"&&l.dtype!=="uint16")throw new Error(`Unsupported quantization type ${l.dtype} for weight type int32.`);s=new Int32Array(c.length);for(let p=0;p<c.length;p++){let d=c[p];s[p]=Math.round(d*l.scale+l.min)}}else throw new Error(`Unsupported dtype in weight '${e}': ${o}`);a+=i*u}else if(o==="string"){let l=Ke(r.shape);s=[];for(let u=0;u<l;u++){let c=new Uint32Array(t.slice(a,a+_i))[0];a+=_i;let p=new Uint8Array(t.slice(a,a+c));s.push(p),a+=c}}else{let l=_n[o];if(o==="float32")s=new Float32Array(t);else if(o==="int32")s=new Int32Array(t);else if(o==="bool")s=new Uint8Array(t);else if(o==="complex64"){s=new Float32Array(t);let u=new Float32Array(s.length/2),c=new Float32Array(s.length/2);for(let f=0;f<u.length;f++)u[f]=s[f*2],c[f]=s[f*2+1];let p=xr(u,n,"float32"),d=xr(c,n,"float32"),m=Nr(p,d);return p.dispose(),d.dispose(),m}else throw new Error(`Unsupported dtype in weight '${e}': ${o}`);a+=i*l}return xr(s,n,o)}function gw(r,t,e){return X(this,null,function*(){let o=new Uint8Array(t);for(;o.byteLength<e;){let{done:n,value:i}=yield r.read();if(n&&i==null){let a=e-o.byteLength;throw new Error(`Reader is done but ${a} bytes are still expected`)}let s=new Uint8Array(o.length+i.byteLength);s.set(o,0),s.set(new Uint8Array(i),o.length),o=s}return o.buffer})}function ym(r,t){return X(this,null,function*(){let e={},o=r.getReader(),n=new ArrayBuffer(0);for(let i of t){let s=yield wV(i,(u,c)=>X(null,null,function*(){return n=yield gw(o,n,c),n.slice(u,c)}));n=yield gw(o,n,s);let a=n.slice(0,s);n=n.slice(s);let l=bw(i,a);if(e[i.name]=l,Jo()==="webgpu"){let u=Ci();"uploadToGPU"in u&&Ke(l.shape)>=G().get("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD")&&u.uploadToGPU(l.dataId)}}return e})}function CV(r){if(r===null)throw new Error(`Invalid input value: ${JSON.stringify(r)}`);let t=0,e=[];r.forEach(i=>{if(t+=i.byteLength,e.push(i.byteLength===i.buffer.byteLength?i:new i.constructor(i)),!(i instanceof Float32Array||i instanceof Int32Array||i instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${i.constructor.name}`)});let o=new Uint8Array(t),n=0;return e.forEach(i=>{o.set(new Uint8Array(i.buffer),n),n+=i.byteLength}),o.buffer}var fy=typeof Buffer<"u"&&(typeof Blob>"u"||typeof atob>"u"||typeof btoa>"u");function xw(r){return fy?Buffer.byteLength(r,"utf8"):new Blob([r]).size}function vw(r){if(fy)return Buffer.from(r).toString("base64");let t=new Uint8Array(r),e="";for(let o=0,n=t.length;o<n;o++)e+=String.fromCharCode(t[o]);return btoa(e)}function Sw(r){if(fy){let o=Buffer.from(r,"base64");return o.buffer.slice(o.byteOffset,o.byteOffset+o.byteLength)}let t=atob(r),e=new Uint8Array(t.length);for(let o=0;o<t.length;++o)e.set([t.charCodeAt(o)],o);return e.buffer}function ww(r){return Jt.join(r)}function hy(r){let t="/";for(r=r.trim();r.endsWith(t);)r=r.slice(0,r.length-1);let e=r.split(t);return e[e.length-1]}function bm(r,t){let e={modelTopology:r.modelTopology,format:r.format,generatedBy:r.generatedBy,convertedBy:r.convertedBy,weightsManifest:t};return r.signature!=null&&(e.signature=r.signature),r.userDefinedMetadata!=null&&(e.userDefinedMetadata=r.userDefinedMetadata),r.modelInitializer!=null&&(e.modelInitializer=r.modelInitializer),r.initializerSignature!=null&&(e.initializerSignature=r.initializerSignature),r.trainingConfig!=null&&(e.trainingConfig=r.trainingConfig),e}function gy(r,t,e){let o={modelTopology:r.modelTopology,format:r.format,generatedBy:r.generatedBy,convertedBy:r.convertedBy};if(r.trainingConfig!=null&&(o.trainingConfig=r.trainingConfig),r.weightsManifest!=null){if(!t)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!e)throw new Error("modelJSON has weightsManifest but weightData is null");o.weightSpecs=t,o.weightData=e}return r.signature!=null&&(o.signature=r.signature),r.userDefinedMetadata!=null&&(o.userDefinedMetadata=r.userDefinedMetadata),r.modelInitializer!=null&&(o.modelInitializer=r.modelInitializer),r.initializerSignature!=null&&(o.initializerSignature=r.initializerSignature),o}function Ku(r,t){return X(this,null,function*(){let e,o;return r.weightsManifest!=null&&([e,o]=yield t(r.weightsManifest)),gy(r,e,o)})}function en(r){if(r.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:r.modelTopology==null?0:xw(JSON.stringify(r.modelTopology)),weightSpecsBytes:r.weightSpecs==null?0:xw(JSON.stringify(r.weightSpecs)),weightDataBytes:r.weightData==null?0:new Jt(r.weightData).byteLength}}function cp(r){let t=[];for(let e of r)t.push(...e.weights);return t}function _V(){let r=e=>{let o=e<<13,n=0;for(;(o&8388608)===0;)n-=8388608,o<<=1;return o&=-8388609,n+=947912704,o|n},t=new Uint32Array(2048);t[0]=0;for(let e=1;e<1024;e++)t[e]=r(e);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}function kV(){let r=new Uint32Array(64);r[0]=0,r[31]=1199570944,r[32]=2147483648,r[63]=3347054592;for(let t=1;t<31;t++)r[t]=t<<23;for(let t=33;t<63;t++)r[t]=2147483648+(t-32<<23);return r}function IV(){let r=new Uint32Array(64);for(let t=0;t<64;t++)r[t]=1024;return r[0]=r[32]=0,r}function TV(){let r=_V(),t=kV(),e=IV();return o=>{let n=new ArrayBuffer(4*o.length),i=new Uint32Array(n);for(let s=0;s<o.length;s++){let a=o[s],l=r[e[a>>10]+(a&1023)]+t[a>>10];i[s]=l}return new Float32Array(n)}}var Ht=class r{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return r.instance==null&&(r.instance=new r),r.instance}static registerSaveRouter(t){r.getInstance().saveRouters.push(t)}static registerLoadRouter(t){r.getInstance().loadRouters.push(t)}static getSaveHandlers(t){return r.getHandlers(t,"save")}static getLoadHandlers(t,e){return r.getHandlers(t,"load",e)}static getHandlers(t,e,o){let n=[];return(e==="load"?r.getInstance().loadRouters:r.getInstance().saveRouters).forEach(s=>{let a=s(t,o);a!==null&&n.push(a)}),n}},Cw=r=>Ht.registerSaveRouter(r),_w=r=>Ht.registerLoadRouter(r),kw=r=>Ht.getSaveHandlers(r),Iw=(r,t)=>Ht.getLoadHandlers(r,t);var xy="tensorflowjs",yy=1,Cs="models_store",ki="model_info_store";function Tw(){if(!G().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");let r=typeof window>"u"?self:window,t=r.indexedDB||r.mozIndexedDB||r.webkitIndexedDB||r.msIndexedDB||r.shimIndexedDB;if(t==null)throw new Error("The current browser does not appear to support IndexedDB.");return t}function by(r){let t=r.result;t.createObjectStore(Cs,{keyPath:"modelPath"}),t.createObjectStore(ki,{keyPath:"modelPath"})}var _s=(()=>{class r{constructor(e){if(this.indexedDB=Tw(),e==null||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}save(e){return X(this,null,function*(){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)})}load(){return X(this,null,function*(){return this.databaseAction(this.modelPath)})}databaseAction(e,o){return new Promise((n,i)=>{let s=this.indexedDB.open(xy,yy);s.onupgradeneeded=()=>by(s),s.onsuccess=()=>{let a=s.result;if(o==null){let l=a.transaction(Cs,"readonly"),c=l.objectStore(Cs).get(this.modelPath);c.onsuccess=()=>{if(c.result==null)return a.close(),i(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));n(c.result.modelArtifacts)},c.onerror=p=>(a.close(),i(c.error)),l.oncomplete=()=>a.close()}else{o.weightData=Jt.join(o.weightData);let l=en(o),u=a.transaction(ki,"readwrite"),c=u.objectStore(ki),p;try{p=c.put({modelPath:this.modelPath,modelArtifactsInfo:l})}catch(m){return i(m)}let d;p.onsuccess=()=>{d=a.transaction(Cs,"readwrite");let m=d.objectStore(Cs),f;try{f=m.put({modelPath:this.modelPath,modelArtifacts:o,modelArtifactsInfo:l})}catch(g){return i(g)}f.onsuccess=()=>n({modelArtifactsInfo:l}),f.onerror=g=>{c=u.objectStore(ki);let x=c.delete(this.modelPath);x.onsuccess=()=>(a.close(),i(f.error)),x.onerror=y=>(a.close(),i(f.error))}},p.onerror=m=>(a.close(),i(p.error)),u.oncomplete=()=>{d==null?a.close():d.oncomplete=()=>a.close()}}},s.onerror=a=>i(s.error)})}}return r.URL_SCHEME="indexeddb://",r})();var Ew=r=>G().getBool("IS_BROWSER")&&!Array.isArray(r)&&r.startsWith(_s.URL_SCHEME)?EV(r.slice(_s.URL_SCHEME.length)):null;Ht.registerSaveRouter(Ew);Ht.registerLoadRouter(Ew);function EV(r){return new _s(r)}function NV(r){return r.startsWith(_s.URL_SCHEME)?r.slice(_s.URL_SCHEME.length):r}var vm=class{constructor(){this.indexedDB=Tw()}listModels(){return X(this,null,function*(){return new Promise((t,e)=>{let o=this.indexedDB.open(xy,yy);o.onupgradeneeded=()=>by(o),o.onsuccess=()=>{let n=o.result,i=n.transaction(ki,"readonly"),a=i.objectStore(ki).getAll();a.onsuccess=()=>{let l={};for(let u of a.result)l[u.modelPath]=u.modelArtifactsInfo;t(l)},a.onerror=l=>(n.close(),e(a.error)),i.oncomplete=()=>n.close()},o.onerror=n=>e(o.error)})})}removeModel(t){return X(this,null,function*(){return t=NV(t),new Promise((e,o)=>{let n=this.indexedDB.open(xy,yy);n.onupgradeneeded=()=>by(n),n.onsuccess=()=>{let i=n.result,s=i.transaction(ki,"readwrite"),a=s.objectStore(ki),l=a.get(t),u;l.onsuccess=()=>{if(l.result==null)return i.close(),o(new Error(`Cannot find model with path '${t}' in IndexedDB.`));{let c=a.delete(t),p=()=>{u=i.transaction(Cs,"readwrite");let m=u.objectStore(Cs).delete(t);m.onsuccess=()=>e(l.result.modelArtifactsInfo),m.onerror=f=>o(l.error)};c.onsuccess=p,c.onerror=d=>(p(),i.close(),o(l.error))}},l.onerror=c=>(i.close(),o(l.error)),s.oncomplete=()=>{u==null?i.close():u.oncomplete=()=>i.close()}},n.onerror=i=>o(n.error)})})}};var kn="/",qu="tensorflowjs_models",Nw="info",RV="model_topology",$V="weight_specs",PV="weight_data",DV="model_metadata";function Rw(r){return{info:[qu,r,Nw].join(kn),topology:[qu,r,RV].join(kn),weightSpecs:[qu,r,$V].join(kn),weightData:[qu,r,PV].join(kn),modelMetadata:[qu,r,DV].join(kn)}}function $w(r){for(let t of Object.values(r))window.localStorage.removeItem(t)}function AV(r){let t=r.split(kn);if(t.length<3)throw new Error(`Invalid key format: ${r}`);return t.slice(1,t.length-1).join(kn)}function FV(r){return r.startsWith(ks.URL_SCHEME)?r.slice(ks.URL_SCHEME.length):r}var ks=(()=>{class r{constructor(e){if(!G().getBool("IS_BROWSER")||typeof window>"u"||typeof window.localStorage>"u")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,e==null||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=Rw(this.modelPath)}save(e){return X(this,null,function*(){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{let o=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),i=en(e),s=Jt.join(e.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(i)),this.LS.setItem(this.keys.topology,o),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,vw(s));let a={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:e.signature!=null?e.signature:void 0,userDefinedMetadata:e.userDefinedMetadata!=null?e.userDefinedMetadata:void 0,modelInitializer:e.modelInitializer!=null?e.modelInitializer:void 0,initializerSignature:e.initializerSignature!=null?e.initializerSignature:void 0,trainingConfig:e.trainingConfig!=null?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(a)),{modelArtifactsInfo:i}}catch{throw $w(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${i.modelTopologyBytes}, weightSpecsBytes=${i.weightSpecsBytes}, weightDataBytes=${i.weightDataBytes}.`)}}})}load(){return X(this,null,function*(){let e=JSON.parse(this.LS.getItem(this.keys.info));if(e==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(e.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");let o={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(n==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);o.modelTopology=n;let i=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(i==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);o.weightSpecs=i;let s=this.LS.getItem(this.keys.modelMetadata);if(s!=null){let l=JSON.parse(s);o.format=l.format,o.generatedBy=l.generatedBy,o.convertedBy=l.convertedBy,l.signature!=null&&(o.signature=l.signature),l.userDefinedMetadata!=null&&(o.userDefinedMetadata=l.userDefinedMetadata),l.modelInitializer!=null&&(o.modelInitializer=l.modelInitializer),l.initializerSignature!=null&&(o.initializerSignature=l.initializerSignature),l.trainingConfig!=null&&(o.trainingConfig=l.trainingConfig)}let a=this.LS.getItem(this.keys.weightData);if(a==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return o.weightData=Sw(a),o})}}return r.URL_SCHEME="localstorage://",r})();var Pw=r=>G().getBool("IS_BROWSER")&&!Array.isArray(r)&&r.startsWith(ks.URL_SCHEME)?OV(r.slice(ks.URL_SCHEME.length)):null;Ht.registerSaveRouter(Pw);Ht.registerLoadRouter(Pw);function OV(r){return new ks(r)}var Sm=class{constructor(){A(G().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),A(typeof window>"u"||typeof window.localStorage<"u",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}listModels(){return X(this,null,function*(){let t={},e=qu+kn,o=kn+Nw;for(let n=0;n<this.LS.length;++n){let i=this.LS.key(n);if(i.startsWith(e)&&i.endsWith(o)){let s=AV(i);t[s]=JSON.parse(this.LS.getItem(i))}}return t})}removeModel(t){return X(this,null,function*(){t=FV(t);let e=Rw(t);if(this.LS.getItem(e.info)==null)throw new Error(`Cannot find model at path '${t}'`);let o=JSON.parse(this.LS.getItem(e.info));return $w(e),o})}};var ju="://",Fo=class r{constructor(){this.managers={}}static getInstance(){return r.instance==null&&(r.instance=new r),r.instance}static registerManager(t,e){A(t!=null,()=>"scheme must not be undefined or null."),t.endsWith(ju)&&(t=t.slice(0,t.indexOf(ju))),A(t.length>0,()=>"scheme must not be an empty string.");let o=r.getInstance();A(o.managers[t]==null,()=>`A model store manager is already registered for scheme '${t}'.`),o.managers[t]=e}static getManager(t){let e=r.getInstance().managers[t];if(e==null)throw new Error(`Cannot find model manager for scheme '${t}'`);return e}static getSchemes(){return Object.keys(r.getInstance().managers)}};function wm(r){if(r.indexOf(ju)===-1)throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${Fo.getSchemes().join(",")}`);return{scheme:r.split(ju)[0],path:r.split(ju)[1]}}function Dw(r,t,e=!1){return X(this,null,function*(){A(r!==t,()=>`Old path and new path are the same: '${r}'`);let o=Ht.getLoadHandlers(r);A(o.length>0,()=>`Copying failed because no load handler is found for source URL ${r}.`),A(o.length<2,()=>`Copying failed because more than one (${o.length}) load handlers for source URL ${r}.`);let n=o[0],i=Ht.getSaveHandlers(t);A(i.length>0,()=>`Copying failed because no save handler is found for destination URL ${t}.`),A(i.length<2,()=>`Copying failed because more than one (${o.length}) save handlers for destination URL ${t}.`);let s=i[0],a=wm(r).scheme,l=wm(r).path,u=a===wm(r).scheme,c=yield n.load();e&&u&&(yield Fo.getManager(a).removeModel(l));let p=yield s.save(c);return e&&!u&&(yield Fo.getManager(a).removeModel(l)),p.modelArtifactsInfo})}function Aw(){return X(this,null,function*(){let r=Fo.getSchemes(),t={};for(let e of r){let o=yield Fo.getManager(e).listModels();for(let n in o){let i=e+ju+n;t[i]=o[n]}}return t})}function Fw(r){return X(this,null,function*(){let t=wm(r);return Fo.getManager(t.scheme).removeModel(t.path)})}function Ow(r,t){return X(this,null,function*(){return Dw(r,t,!1)})}function Lw(r,t){return X(this,null,function*(){return Dw(r,t,!0)})}var vy=class{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(t,e){return fetch(t,e)}now(){return performance.now()}encode(t,e){if(e!=="utf-8"&&e!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${e}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(t)}decode(t,e){return new TextDecoder(e).decode(t)}setTimeoutCustom(t,e){if(typeof window>"u"||!G().getBool("USE_SETTIMEOUTCUSTOM")){setTimeout(t,e);return}this.functionRefs.push(t),setTimeout(()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")},e),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",o=>{if(o.source===window&&o.data.name===this.messageName){o.stopPropagation();let n=this.functionRefs[o.data.index];n(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}},!0))}isTypedArray(t){return am(t)}};if(G().get("IS_BROWSER")){G().setPlatform("browser",new vy);try{Fo.registerManager(ks.URL_SCHEME,new Sm)}catch{}try{Fo.registerManager(_s.URL_SCHEME,new vm)}catch{}}var MV={importFetch:()=>Bw()},Sy;var wy=class{constructor(){this.util=Vw(),this.textEncoder=new this.util.TextEncoder}fetch(t,e){return G().global.fetch!=null?G().global.fetch(t,e):(Sy==null&&(Sy=MV.importFetch()),Sy(t,e))}now(){let t=process.hrtime();return t[0]*1e3+t[1]/1e6}encode(t,e){if(e!=="utf-8"&&e!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${e}`);return this.textEncoder.encode(t)}decode(t,e){return t.length===0?"":new this.util.TextDecoder(e).decode(t)}isTypedArray(t){return this.util.types.isFloat32Array(t)||this.util.types.isInt32Array(t)||this.util.types.isUint8Array(t)||this.util.types.isUint8ClampedArray(t)}};G().get("IS_NODE")&&!G().get("IS_BROWSER")&&G().setPlatform("node",new wy);function Oe(r,t="float32",e){return t=t||"float32",bt(r),new ao(r,t,e)}function BV(r,t){let e=C(r,"x","cast");if(!q0(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if(t==="string"&&e.dtype!=="string"||t!=="string"&&e.dtype==="string")throw new Error("Only strings can be casted to strings");let o={x:e},n={dtype:t};return P.runKernel(bn,o,n)}var Ue=T({cast_:BV});function VV(r){let e={x:C(r,"x","clone","string_or_numeric")};return P.runKernel(vn,e)}var Hr=T({clone_:VV});function Cm(r,t=!1){console.log(r.toString(t))}ly();var WV={buffer:Oe,cast:Ue,clone:Hr,print:Cm};sw(WV);function zV(r,t){let e=C(r,"a","add"),o=C(t,"b","add");[e,o]=He(e,o);let n={a:e,b:o};return P.runKernel(Zo,n)}var fe=T({add_:zV});function UV(r,t){let e=C(r,"a","floorDiv"),o=C(t,"b","floorDiv");[e,o]=He(e,o);let n={a:e,b:o};return P.runKernel(oi,n)}var _m=T({floorDiv_:UV});function GV(r,t){let e=C(r,"a","div"),o=C(t,"b","div");if([e,o]=He(e,o),e.dtype==="int32"&&o.dtype==="int32")return _m(e,o);let n={a:e,b:o},i={};return P.runKernel(gl,n,i)}var Ae=T({div_:GV});function HV(r,t){let e=C(r,"a","mul"),o=C(t,"b","mul");[e,o]=He(e,o);let n={a:e,b:o};return P.runKernel(pi,n)}var se=T({mul_:HV});function KV(r){let t=C(r,"x","abs");if(t.dtype==="complex64"){let e={x:t};return P.runKernel(Qa,e)}else{let e={x:t};return P.runKernel(as,e)}}var Yt=T({abs_:KV});function qV(r){let e={x:C(r,"x","acos")};return P.runKernel($a,e)}var Ww=T({acos_:qV});function jV(r){let e={x:C(r,"x","acosh")};return P.runKernel(Pa,e)}var zw=T({acosh_:jV});function XV(r){A(Array.isArray(r),()=>"The argument passed to tf.addN() must be a list of tensors"),A(r.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${r.length}`);let t=r.map((n,i)=>C(n,`tensors${i}`,"addN")),e=t[0];t.forEach(n=>{if(n.dtype!==e.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),t.forEach(n=>{if(!zr(n.shape,e.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});let o=t;return P.runKernel(Da,o)}var Uw=T({addN_:XV});function YV(r,t=null,e=!1){let n={x:C(r,"x","all","bool")},i={axis:t,keepDims:e};return P.runKernel(Aa,n,i)}var Gw=T({all_:YV});function QV(r,t=null,e=!1){let n={x:C(r,"x","any","bool")},i={axis:t,keepDims:e};return P.runKernel(Fa,n,i)}var Hw=T({any_:QV});function ZV(r,t=0){let o={x:C(r,"x","argMax")},n={axis:t};return P.runKernel(Oa,o,n)}var km=T({argMax_:ZV});function JV(r,t=0){let o={x:C(r,"x","argMin")},n={axis:t};return P.runKernel(La,o,n)}var Kw=T({argMin_:JV});function eW(r){let e={x:C(r,"x","asin")};return P.runKernel(Ma,e)}var qw=T({asin_:eW});function tW(r){let e={x:C(r,"x","asinh")};return P.runKernel(Ba,e)}var jw=T({asinh_:tW});function rW(r){let e={x:C(r,"x","atan")};return P.runKernel(Va,e)}var Xw=T({atan_:rW});function oW(r,t){let e=C(r,"a","atan2"),o=C(t,"b","atan2");[e,o]=He(e,o);let n={a:e,b:o};return P.runKernel(za,n)}var Yw=T({atan2_:oW});function nW(r){let e={x:C(r,"x","atanh")};return P.runKernel(Wa,e)}var Qw=T({atanh_:nW});function iW(r,t,e,o,n="NHWC",i){let s=r[3],a=[...t,s],l=Jw(n);return Es(r,a,e,i,o,null,null,l)}function _y(r,t,e,o,n,i,s="channelsLast"){let[a,l]=pp(t),u;if(s==="channelsLast")u=[a,l,r[3],r[3]];else if(s==="channelsFirst")u=[a,l,r[1],r[1]];else throw new Error(`Unknown dataFormat ${s}`);return Es(r,u,e,o,n,i,!1,s)}function sW(r,t,e,o,n,i,s="NDHWC"){let[a,l,u]=Cy(t),c,p;if(s==="NDHWC")p="channelsLast",c=[a,l,u,r[4],r[4]];else if(s==="NCDHW")p="channelsFirst",c=[a,l,u,r[1],r[1]];else throw new Error(`Unknown dataFormat ${s}`);return Zw(r,c,e,o,n,!1,p,i)}function Es(r,t,e,o,n,i,s=!1,a="channelsLast"){let[l,u,c,p]=[-1,-1,-1,-1];if(a==="channelsLast")[l,u,c,p]=r;else if(a==="channelsFirst")[l,p,u,c]=r;else throw new Error(`Unknown dataFormat ${a}`);let[d,m,,f]=t,[g,x]=pp(e),[y,v]=pp(o),k=Yu(d,y),N=Yu(m,v),{padInfo:F,outHeight:M,outWidth:z}=uW(n,u,c,g,x,k,N,i,a),H=s?f*p:f,K;return a==="channelsFirst"?K=[l,H,M,z]:a==="channelsLast"&&(K=[l,M,z,H]),{batchSize:l,dataFormat:a,inHeight:u,inWidth:c,inChannels:p,outHeight:M,outWidth:z,outChannels:H,padInfo:F,strideHeight:g,strideWidth:x,filterHeight:d,filterWidth:m,effectiveFilterHeight:k,effectiveFilterWidth:N,dilationHeight:y,dilationWidth:v,inShape:r,outShape:K,filterShape:t}}function Zw(r,t,e,o,n,i=!1,s="channelsLast",a){let[l,u,c,p,d]=[-1,-1,-1,-1,-1];if(s==="channelsLast")[l,u,c,p,d]=r;else if(s==="channelsFirst")[l,d,u,c,p]=r;else throw new Error(`Unknown dataFormat ${s}`);let[m,f,g,,x]=t,[y,v,k]=Cy(e),[N,F,M]=Cy(o),z=Yu(m,N),H=Yu(f,F),K=Yu(g,M),{padInfo:j,outDepth:J,outHeight:ue,outWidth:ce}=cW(n,u,c,p,y,v,k,z,H,K,a),xe=i?x*d:x,be;return s==="channelsFirst"?be=[l,xe,J,ue,ce]:s==="channelsLast"&&(be=[l,J,ue,ce,xe]),{batchSize:l,dataFormat:s,inDepth:u,inHeight:c,inWidth:p,inChannels:d,outDepth:J,outHeight:ue,outWidth:ce,outChannels:xe,padInfo:j,strideDepth:y,strideHeight:v,strideWidth:k,filterDepth:m,filterHeight:f,filterWidth:g,effectiveFilterDepth:z,effectiveFilterHeight:H,effectiveFilterWidth:K,dilationDepth:N,dilationHeight:F,dilationWidth:M,inShape:r,outShape:be,filterShape:t}}function aW(r,t,e,o,n){o==null&&(o=ky(r,t,e));let i=r[0],s=r[1],a=dp((i-t+2*o)/e+1,n),l=dp((s-t+2*o)/e+1,n);return[a,l]}function lW(r,t,e,o,n,i){n==null&&(n=ky(r,t[0],o[0]));let s=[0,0,0,e];for(let a=0;a<3;a++)r[a]+2*n>=t[a]&&(s[a]=dp((r[a]-t[a]+2*n)/o[a]+1,i));return s}function ky(r,t,e,o=1){let n=Yu(t,o);return Math.floor((r[0]*(e-1)-e+n)/2)}function pp(r){return typeof r=="number"?[r,r,r]:r.length===2?[r[0],r[1],1]:r}function Cy(r){return typeof r=="number"?[r,r,r]:r}function Yu(r,t){return t<=1?r:r+(r-1)*(t-1)}function uW(r,t,e,o,n,i,s,a,l){let u,c,p;if(typeof r=="number"){u={top:r,bottom:r,left:r,right:r,type:r===0?"VALID":"NUMBER"};let m=aW([t,e],i,o,r,a);c=m[0],p=m[1]}else if(r==="same"){c=Math.ceil(t/o),p=Math.ceil(e/n);let d=Math.max(0,(c-1)*o+i-t),m=Math.max(0,(p-1)*n+s-e),f=Math.floor(d/2),g=d-f,x=Math.floor(m/2),y=m-x;u={top:f,bottom:g,left:x,right:y,type:"SAME"}}else if(r==="valid")u={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((t-i+1)/o),p=Math.ceil((e-s+1)/n);else if(typeof r=="object"){let d=l==="channelsLast"?r[1][0]:r[2][0],m=l==="channelsLast"?r[1][1]:r[2][1],f=l==="channelsLast"?r[2][0]:r[3][0],g=l==="channelsLast"?r[2][1]:r[3][1];u={top:d,bottom:m,left:f,right:g,type:d===0&&m===0&&f===0&&g===0?"VALID":"EXPLICIT"},c=dp((t-i+d+m)/o+1,a),p=dp((e-s+f+g)/n+1,a)}else throw Error(`Unknown padding parameter: ${r}`);return{padInfo:u,outHeight:c,outWidth:p}}function cW(r,t,e,o,n,i,s,a,l,u,c){let p,d,m,f;if(r==="valid"&&(r=0),typeof r=="number"){p={top:r,bottom:r,left:r,right:r,front:r,back:r,type:r===0?"VALID":"NUMBER"};let x=lW([t,e,o,1],[a,l,u],1,[n,i,s],r,c);d=x[0],m=x[1],f=x[2]}else if(r==="same"){d=Math.ceil(t/n),m=Math.ceil(e/i),f=Math.ceil(o/s);let g=(d-1)*n+a-t,x=(m-1)*i+l-e,y=(f-1)*s+u-o,v=Math.floor(g/2),k=g-v,N=Math.floor(x/2),F=x-N,M=Math.floor(y/2),z=y-M;p={top:N,bottom:F,left:M,right:z,front:v,back:k,type:"SAME"}}else throw Error(`Unknown padding parameter: ${r}`);return{padInfo:p,outDepth:d,outHeight:m,outWidth:f}}function dp(r,t){if(!t)return Math.trunc(r);switch(t){case"round":return Math.round(r);case"ceil":return Math.ceil(r);case"floor":return Math.floor(r);default:throw new Error(`Unknown roundingMode ${t}`)}}function Ts(r){let[t,e,o]=pp(r);return t===1&&e===1&&o===1}function cr(r,t){return Ts(r)||Ts(t)}function tn(r){return pp(r).every(t=>t>0)}function Jw(r){if(r==="NHWC")return"channelsLast";if(r==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${r}`)}function Ft(r,t,e){if(e!=null){if(typeof t=="string")throw Error(`Error in ${r}: pad must be an integer when using dimRoundingMode ${e} but got pad ${t}.`);if(typeof t=="number")A(yn(t),()=>`Error in ${r}: pad must be an integer when using dimRoundingMode ${e} but got pad ${t}.`);else if(typeof t=="object")t.forEach(o=>{o.forEach(n=>{A(yn(n),()=>`Error in ${r}: pad must be an integer when using dimRoundingMode ${e} but got pad ${n}.`)})});else throw Error(`Error in ${r}: Unknown padding parameter: ${t}`)}}function pW(r,t){let o={x:C(r,"x","reshape","string_or_numeric")},n={shape:t};return P.runKernel(iu,o,n)}var Y=T({reshape_:pW});function dW(r,t,e,o,n){let i=C(r,"x","avgPool","float32"),s=1;A(cr(e,s),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${e} and dilations '${s}'`);let a=i,l=!1;i.rank===3&&(l=!0,a=Y(i,[1,i.shape[0],i.shape[1],i.shape[2]])),A(a.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${a.rank}.`),Ft("avgPool",o,n);let u={x:a},c={filterSize:t,strides:e,pad:o,dimRoundingMode:n},p=P.runKernel(Ua,u,c);return p=Ue(p,i.dtype),l?Y(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var Im=T({avgPool_:dW});function mW(r,t,e,o,n,i="NDHWC"){let s=C(r,"x","avgPool3d","float32"),a=s,l=!1;s.rank===4&&(l=!0,a=Y(s,[1,s.shape[0],s.shape[1],s.shape[2],s.shape[3]])),A(a.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${a.rank}.`),A(i==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${i}`),A(typeof e=="number"&&e>0||Array.isArray(e)&&e[0]>0&&e[1]>0&&e[2]>0,()=>`Error in avgPool3d: Stride must be > 0, but got '${e}'`),Ft("avgPool3d",o,n);let u={x:a},c={filterSize:t,strides:e,pad:o,dimRoundingMode:n,dataFormat:i},p=P.runKernel(Ga,u,c);return p=Ue(p,a.dtype),l?Y(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}var e2=T({avgPool3d_:mW});function fW(r,t=0){A(r.length>=1,()=>"Pass at least one tensor to concat");let e=ws(r,"tensors","concat","string_or_numeric");if(e[0].dtype==="complex64"&&e.forEach(i=>{if(i.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${i.dtype}. `)}),e.length===1)return Hr(e[0]);let o=e,n={axis:t};return P.runKernel(Za,o,n)}var dt=T({concat_:fW});function hW(r,t,e=!1,o=!1){let n=C(r,"a","matMul"),i=C(t,"b","matMul");[n,i]=He(n,i);let s={a:n,b:i},a={transposeA:e,transposeB:o};return P.runKernel(Ha,s,a)}var et=T({matMul_:hW});function gW(r){let e={x:C(r,"x","sigmoid","float32")};return P.runKernel(fi,e)}var Kr=T({sigmoid_:gW});function xW(r,t,e){let o=C(r,"x","slice","string_or_numeric");if(o.rank===0)throw new Error("Slicing scalar is not possible");let n={x:o},i={begin:t,size:e};return P.runKernel(ds,n,i)}var Fe=T({slice_:xW});function yW(r){let e={x:C(r,"x","tanh","float32")};return P.runKernel($u,e)}var mp=T({tanh_:yW});function bW(r,t,e,o,n,i){let s=C(r,"forgetBias","basicLSTMCell"),a=C(t,"lstmKernel","basicLSTMCell"),l=C(e,"lstmBias","basicLSTMCell"),u=C(o,"data","basicLSTMCell"),c=C(n,"c","basicLSTMCell"),p=C(i,"h","basicLSTMCell"),d=dt([u,p],1),m=et(d,a),f=fe(m,l),g=f.shape[0],x=f.shape[1]/4,y=[g,x],v=Fe(f,[0,0],y),k=Fe(f,[0,x],y),N=Fe(f,[0,x*2],y),F=Fe(f,[0,x*3],y),M=fe(se(Kr(v),mp(k)),se(c,Kr(fe(s,N)))),z=se(mp(M),Kr(F));return[M,z]}var t2=T({basicLSTMCell_:bW});function vW(r,t,e){let o=C(r,"x","batchToSpaceND"),n=t.reduce((a,l)=>a*l);A(o.rank>=1+t.length,()=>`input rank is ${o.rank} but should be > than blockShape.length ${t.length}`),A(e.length===t.length,()=>`crops.length is ${e.length} but should be equal to blockShape.length  ${t.length}`),A(o.shape[0]%n===0,()=>`input tensor batch is ${o.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${n}`);let i={x:o},s={blockShape:t,crops:e};return P.runKernel(Ka,i,s)}var Tm=T({batchToSpaceND_:vW});function r2(r){let t;return r.rank===0||r.rank===1?t=Y(r,[1,1,1,r.size]):r.rank===2?t=Y(r,[1,1,r.shape[0],r.shape[1]]):r.rank===3?t=Y(r,[1,r.shape[0],r.shape[1],r.shape[2]]):t=r,t}function SW(r,t,e,o,n,i){i==null&&(i=.001);let s=C(r,"x","batchNorm"),a=C(t,"mean","batchNorm"),l=C(e,"variance","batchNorm"),u;n!=null&&(u=C(n,"scale","batchNorm"));let c;o!=null&&(c=C(o,"offset","batchNorm")),A(a.rank===l.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),A(c==null||a.rank===c.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),A(u==null||a.rank===u.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let d={x:r2(s),scale:u,offset:c,mean:a,variance:l},m={varianceEpsilon:i},f=P.runKernel(_l,d,m);return Y(f,s.shape)}var Ii=T({batchNorm_:SW});function wW(r,t,e,o,n,i){let s=C(r,"x","batchNorm"),a=C(t,"mean","batchNorm"),l=C(e,"variance","batchNorm"),u;n!=null&&(u=C(n,"scale","batchNorm"));let c;return o!=null&&(c=C(o,"offset","batchNorm")),A(s.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${s.rank}.`),A(a.rank===2||a.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${a.rank}.`),A(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`),u!=null&&A(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`),c!=null&&A(c.rank===2||c.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`),Ii(s,a,l,c,u,i)}var o2=T({batchNorm2d_:wW});function CW(r,t,e,o,n,i){let s=C(r,"x","batchNorm"),a=C(t,"mean","batchNorm"),l=C(e,"variance","batchNorm"),u;n!=null&&(u=C(n,"scale","batchNorm"));let c;return o!=null&&(c=C(o,"offset","batchNorm")),A(s.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${s.rank}.`),A(a.rank===3||a.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${a.rank}.`),A(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`),u!=null&&A(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`),c!=null&&A(c.rank===3||c.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`),Ii(s,a,l,c,u,i)}var n2=T({batchNorm3d_:CW});function _W(r,t,e,o,n,i){let s=C(r,"x","batchNorm"),a=C(t,"mean","batchNorm"),l=C(e,"variance","batchNorm"),u;n!=null&&(u=C(n,"scale","batchNorm"));let c;return o!=null&&(c=C(o,"offset","batchNorm")),A(s.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${s.rank}.`),A(a.rank===4||a.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${a.rank}.`),A(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`),u!=null&&A(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`),c!=null&&A(c.rank===4||c.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`),Ii(s,a,l,c,u,i)}var i2=T({batchNorm4d_:_W});function kW(r,t,e){let o=C(r,"x","bincount"),n=C(t,"weights","bincount");A(o.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${o.dtype}`),A(e>=0,()=>`size must be non-negative, but got ${e}.`),A(n.size===o.size||n.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${o.shape}, weights shape: ${n.shape}.`);let i={x:o,weights:n},s={size:e};return P.runKernel(qa,i,s)}var Em=T({bincount_:kW});function IW(r,t){let e=C(r,"x","bitwiseAnd"),o=C(t,"y","bitwiseAnd");if(!zr(e.shape,o.shape))throw new Error(`BitwiseAnd: Tensors must have the same shape. x: ${e.shape}, y: ${o.shape}`);if(e.dtype!=="int32"||o.dtype!=="int32")throw new Error(`BitwiseAnd: Only supports 'int32' values in tensor, found type of x: ${e.dtype} and type of y: ${o.dtype}`);let n={a:e,b:o};return P.runKernel(ja,n)}var s2=T({bitwiseAnd_:IW});function TW(r,t){let e=C(r,"s0","broadcastArgs","int32"),o=C(t,"s1","broadcastArgs","int32");if(e.rank!==1)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${e.rank}`);if(o.rank!==1)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${o.rank}`);let n={s0:e,s1:o};return P.runKernel(Xa,n)}var a2=T({broadcastArgs_:TW});function EW(r,t){let e=C(r,"broadcastTo","x"),o=e.shape;if(bt(t),t.length<e.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${e.rank}.`);if(t.length>e.rank){let u=e.shape.slice();for(;u.length<t.length;)u.unshift(1);e=Y(e,u)}let n=e.shape,i=Array.from(t);for(let u=t.length-1;u>=0;u--)if(n[u]===t[u])i[u]=1;else if(e.shape[u]!==1)throw new Error(`broadcastTo(): [${o}] cannot be broadcast to [${t}].`);if(i.map((u,c)=>u>1?c:-1).filter(u=>u>=0).length===0)return Hr(e);let a={x:e},l={reps:i};return P.runKernel(yi,a,l)}var Ti=T({broadcastTo_:EW});function NW(r){let e={x:C(r,"x","ceil","float32")};return P.runKernel(Zn,e)}var l2=T({ceil_:NW});function on(r,t,e){bt(r),e=e||Qn(t);let o={shape:r,value:t,dtype:e};return P.runKernel(wl,{},o)}function RW(r,t,e){let o=C(r,"x","clipByValue");if(A(t<=e,()=>`Error in clip: min (${t}) must be less than or equal to max (${e}).`),t===e)return on(o.shape,t,o.dtype);let n={x:o},i={clipValueMin:t,clipValueMax:e};return P.runKernel(Ya,n,i)}var Nm=T({clipByValue_:RW});function $W(r){return dt(r,0)}var u2=T({concat1d_:$W});function PW(r,t){return dt(r,t)}var c2=T({concat2d_:PW});function DW(r,t){return dt(r,t)}var p2=T({concat3d_:DW});function AW(r,t){return dt(r,t)}var d2=T({concat4d_:AW});function FW(r,t,e,o,n="NHWC",i=[1,1],s){let a=C(r,"x","conv2d","float32"),l=C(t,"filter","conv2d","float32"),u=a,c=!1;a.rank===3&&(c=!0,u=Y(a,[1,a.shape[0],a.shape[1],a.shape[2]])),A(u.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`),A(l.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`),Ft("conv2d",o,s);let p=n==="NHWC"?u.shape[3]:u.shape[1];A(p===l.shape[2],()=>`Error in conv2d: depth of input (${p}) must match input depth for filter ${l.shape[2]}.`),A(cr(e,i),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${e} and dilations '${i}'`),A(tn(i),()=>"Error in conv2D: Dilated rates should be larger than 0."),A(tn(e),()=>"Error in conv2D: Strides should be larger than 0.");let d={x:u,filter:l},m={strides:e,pad:o,dataFormat:n,dilations:i,dimRoundingMode:s},f=P.runKernel(Ja,d,m);return c?Y(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var Ei=T({conv2d_:FW});function OW(r,t,e,o,n="NWC",i=1,s){let a=C(r,"x","conv1d"),l=C(t,"filter","conv1d"),u=a,c=!1;a.rank===2&&(c=!0,u=Y(a,[1,a.shape[0],a.shape[1]])),A(u.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`),A(l.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`),Ft("conv1d",o,s),A(u.shape[2]===l.shape[1],()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`),A(cr(e,i),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${e} and dilation '${i}'`),A(tn(i),()=>"Error in conv1D: Dilated rates should be larger than 0."),A(tn(e),()=>"Error in conv1D: Stride should be larger than 0."),A(n==="NWC",()=>`Error in conv1d: got dataFormat of ${n} but only NWC is currently supported.`);let p=Y(l,[1,l.shape[0],l.shape[1],l.shape[2]]),d=Y(u,[u.shape[0],1,u.shape[1],u.shape[2]]),x=Ei(d,p,[1,e],o,"NHWC",[1,i],s);return c?Y(x,[x.shape[2],x.shape[3]]):Y(x,[x.shape[0],x.shape[2],x.shape[3]])}var m2=T({conv1d_:OW});function LW(r,t,e,o,n,i="NHWC",s){A(r.length===t.rank,()=>`Length of inShape (${r.length}) and rank of dy (${t.rank}) must match`);let a=r,l=t,u=!1;t.rank===3&&(u=!0,l=Y(t,[1,t.shape[0],t.shape[1],t.shape[2]]),a=[1,r[0],r[1],r[2]]),A(a.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${a.length}.`),A(l.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`),A(e.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${e.rank}`);let c=i==="NHWC"?a[3]:a[1],p=i==="NHWC"?l.shape[3]:l.shape[1];A(c===e.shape[2],()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${e.shape[2]}.`),A(p===e.shape[3],()=>`Error in conv2dDerInput: depth of output (${p}) must match output depth for filter ${e.shape[3]}.`),Ft("conv2dDerInput",n,s);let d={dy:l,filter:e},m={strides:o,pad:n,dataFormat:i,dimRoundingMode:s,inputShape:a},f=P.runKernel(tl,d,m);return u?Y(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var Rm=T({conv2DBackpropInput_:LW});function MW(r,t,e,o,n,i){let s=C(r,"x","conv2dTranspose"),a=C(t,"filter","conv2dTranspose");return Rm(e,s,a,o,n,"NHWC",i)}var f2=T({conv2dTranspose_:MW});function BW(r,t,e,o,n="NDHWC",i=[1,1,1]){let s=C(r,"x","conv3d"),a=C(t,"filter","conv3d"),l=s,u=!1;s.rank===4&&(u=!0,l=Y(s,[1,s.shape[0],s.shape[1],s.shape[2],s.shape[3]])),A(l.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`),A(a.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${a.rank}.`),A(l.shape[4]===a.shape[3],()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${a.shape[3]}.`),A(cr(e,i),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${e} and dilations '${i}'`),A(n==="NDHWC",()=>`Error in conv3d: got dataFormat of ${n} but only NDHWC is currently supported.`),A(tn(i),()=>"Error in conv3D: Dilated rates should be larger than 0."),A(tn(e),()=>"Error in conv3D: Strides should be larger than 0.");let c={x:l,filter:a},p={strides:e,pad:o,dataFormat:n,dilations:i},d=P.runKernel(rl,c,p);return u?Y(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}var h2=T({conv3d_:BW});function VW(r,t,e,o,n){A(r.length===t.rank,()=>`Length of inShape (${r.length}) and rank of dy (${t.rank}) must match`);let i=r,s=t,a=!1;t.rank===4&&(a=!0,s=Y(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),i=[1,r[0],r[1],r[2],r[3]]);let l=i[4],u=s.shape[4];A(i.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${i.length}.`),A(s.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${s.rank}`),A(e.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${e.rank}`),A(l===e.shape[3],()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${e.shape[3]}.`),A(u===e.shape[4],()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${e.shape[4]}.`);let c={dy:s,filter:e},p={pad:n,strides:o,inputShape:i},d=P.runKernel(ol,c,p);return a?Y(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}var g2=T({conv3DBackpropInput_:VW});function WW(r,t,e,o,n){let i=C(r,"x","conv3dTranspose"),s=C(t,"filter","conv3dTranspose");return g2(e,i,s,o,n)}var x2=T({conv3dTranspose_:WW});function zW(r){let e={x:C(r,"x","cos","float32")};return P.runKernel(nl,e)}var y2=T({cos_:zW});function UW(r){let e={x:C(r,"x","cosh","float32")};return P.runKernel(il,e)}var b2=T({cosh_:UW});function GW(r,t=0,e=!1,o=!1){let i={x:C(r,"x","cumprod")},s={axis:t,exclusive:e,reverse:o};return P.runKernel(sl,i,s)}var v2=T({cumprod_:GW});function HW(r,t=0,e=!1,o=!1){let i={x:C(r,"x","cumsum")},s={axis:t,exclusive:e,reverse:o};return P.runKernel(al,i,s)}var S2=T({cumsum_:HW});function KW(r,t,e,o=!1){let n=C(r,"x","denseBincount"),i=C(t,"weights","denseBincount");A(n.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${n.dtype}`),A(n.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${n.rank}.`),A(e>=0,()=>`size must be non-negative, but got ${e}.`),A(i.size===n.size||i.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${n.shape}, weights shape: ${i.shape}.`);let s={x:n,weights:i},a={size:e,binaryOutput:o};return P.runKernel(ul,s,a)}var w2=T({denseBincount_:KW});function qW(r,t,e="NHWC"){let o=C(r,"x","depthToSpace","float32"),n=e==="NHWC"?o.shape[1]:o.shape[2],i=e==="NHWC"?o.shape[2]:o.shape[3],s=e==="NHWC"?o.shape[3]:o.shape[1];A(t>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`),A(n*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${n} and ${t}  for depthToSpace with input shape
    ${o.shape}`),A(i*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${i} and ${t} for depthToSpace with input shape
        ${o.shape}`),A(s%(t*t)===0,()=>`Dimension size must be evenly divisible by ${t*t} but is ${s} for depthToSpace with input shape ${o.shape}`);let a={x:o},l={blockSize:t,dataFormat:e};return P.runKernel(cl,a,l)}var C2=T({depthToSpace_:qW});function jW(r,t,e,o,n="NHWC",i=[1,1],s){let a=C(r,"x","depthwiseConv2d","float32"),l=C(t,"filter","depthwiseConv2d","float32"),u=a,c=!1;a.rank===3&&(c=!0,u=Y(a,[1,a.shape[0],a.shape[1],a.shape[2]])),A(u.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`),A(l.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`);let p=n==="NHWC"?u.shape[3]:u.shape[1];A(p===l.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${p}) must match the inChannels dimension in filter ${l.shape[2]}.`),Ft("depthwiseConv2d",o,s);let d={x:u,filter:l},m={strides:e,pad:o,dataFormat:n,dilations:i,dimRoundingMode:s},f=P.runKernel(pl,d,m);return c?Y(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var Qu=T({depthwiseConv2d_:jW});function XW(r){let e={x:C(r,"x","diag")};return P.runKernel(fl,e)}var _2=T({diag_:XW});function YW(r,t,e,o,n=[1,1],i="NHWC"){let s=C(r,"x","dilation2d"),a=C(t,"filter","dilation2d");A(s.rank===3||s.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${s.rank}.`),A(a.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${a.rank}.`),A(i==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${i}`);let l=s,u=!1;s.rank===3&&(l=Y(s,[1,s.shape[0],s.shape[1],s.shape[2]]),u=!0),A(l.shape[3]===a.shape[2],()=>`Error in dilation2d:  input and filter must have the same depth: ${l.shape[3]} vs ${a.shape[2]}`);let c={x:l,filter:a},p={strides:e,pad:o,dilations:n},d=P.runKernel(hl,c,p);return u?Y(d,[d.shape[1],d.shape[2],d.shape[3]]):d}var k2=T({dilation2d_:YW});var nn={};ct(nn,{assertAndGetBroadcastShape:()=>Je,getBroadcastDims:()=>I2,getReductionAxes:()=>$m});function I2(r,t){let e=r.length,o=[];for(let n=0;n<e;n++){let i=e-1-n,s=r[i]||1;(t[t.length-1-n]||1)>1&&s===1&&o.unshift(i)}return o}function $m(r,t){let e=[];for(let o=0;o<t.length;o++){let n=r[r.length-o-1],i=t.length-o-1,s=t[i];(n==null||n===1&&s>1)&&e.unshift(i)}return e}function Je(r,t){let e=Math.max(r.length,t.length),o=new Array(e);for(let n=0;n<e;n++){let i=r[r.length-n-1];i==null&&(i=1);let s=t[t.length-n-1];if(s==null&&(s=1),i===1)o[e-n-1]=s;else if(s===1)o[e-n-1]=i;else if(i!==s){let a=`Operands could not be broadcast together with shapes ${r} and ${t}.`;throw Error(a)}else o[e-n-1]=i}return o}function QW(r,t){let e=C(r,"a","equal","string_or_numeric"),o=C(t,"b","equal","string_or_numeric");[e,o]=He(e,o),Je(e.shape,o.shape);let n={a:e,b:o};return P.runKernel(Jn,n)}var Pm=T({equal_:QW});function ZW(r,t,e){let o=C(t,"a","where"),n=C(e,"b","where"),i=C(r,"condition","where","bool"),s=Je(Je(i.shape,o.shape),n.shape),a=Ti(i,s),l=Ti(o,s),u=Ti(n,s),c={condition:a,t:l,e:u};return P.runKernel(fu,c)}var lo=T({where_:ZW});function JW(r){let e={x:C(r,"x","zerosLike")};return P.runKernel(Ou,e)}var Wt=T({zerosLike_:JW});function ez(r,t){let e=C(r,"a","div"),o=C(t,"b","div");[e,o]=He(e,o);let n=Ae(e,o),i=Wt(n),s=Pm(o,i);return lo(s,i,n)}var T2=T({divNoNan_:ez});function tz(r,t){let e=C(r,"t1","dot"),o=C(t,"t2","dot");A((e.rank===1||e.rank===2)&&(o.rank===1||o.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${e.rank} and ${o.rank}.`);let n=e.rank===1?e.size:e.shape[1],i=o.rank===1?o.size:o.shape[0];if(A(n===i,()=>`Error in dot: inner dimensions of inputs must match, but got ${n} and ${i}.`),e.rank===1&&o.rank===1){let s=Y(e,[1,-1]),a=Y(o,[-1,1]),l=et(s,a);return Y(l,[])}else if(e.rank===1&&o.rank===2){let s=Y(e,[1,-1]),a=Y(o,[o.shape[0],o.shape[1]]),l=et(s,a);return Y(l,[l.size])}else if(e.rank===2&&o.rank===1){let s=Y(o,[-1,1]),a=et(e,s);return Y(a,[a.size])}else{let s=Y(o,[o.shape[0],o.shape[1]]);return et(e,s)}}var E2=T({dot_:tz});function rz(r,...t){let e=t.map((n,i)=>C(n,`tensors${i}`,"einsum")),o={equation:r};return P.runKernel(xl,e,o)}var Ni=T({einsum_:rz});function oz(r){let e={x:C(r,"x","elu","float32")};return P.runKernel(yl,e)}var Dm=T({elu_:oz});function nz(r,t){let e=C(r,"x","ensureShape","string_or_numeric");if(!U0(e.shape,t))throw new Error(`EnsureShape: Shape of tensor ${e.shape} is not compatible with expected shape ${t}`);return r}var N2=T({ensureShape_:nz});function iz(r){let t=C(r,"x","erf");A(t.dtype==="int32"||t.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),t.dtype==="int32"&&(t=Ue(t,"float32"));let e={x:t};return P.runKernel(bl,e)}var R2=T({erf_:iz});function Iy(r,t){for(let e=0;e<r.length;++e)if(r[r.length-e-1]!==t-1-e)return!1;return!0}function $2(r,t,e){let o=r.length+t.length,n=[],i=0,s=0;for(let a=0;a<o;a++)e.indexOf(a)===-1?n.push(r[i++]):n.push(t[s++]);return n}function sz(r,t){let e=[],o=r.length;for(let i=0;i<o;i++)t.indexOf(i)===-1&&e.push(r[i]);let n=t.map(i=>r[i]);return[e,n]}function In(r,t){let e=t.map(o=>1);return $2(r,e,t)}function az(r,t,e){A(Iy(t,e),()=>`${r} supports only inner-most axes for now. Got axes ${t} and rank-${e} input.`)}function lz(r,t){if(Iy(r,t))return null;let e=[];for(let o=0;o<t;++o)r.indexOf(o)===-1&&e.push(o);return r.forEach(o=>e.push(o)),e}function uz(r){return r.map((t,e)=>[e,t]).sort((t,e)=>t[1]-e[1]).map(t=>t[0])}function cz(r,t){let e=[];for(let o=t-r;o<t;++o)e.push(o);return e}function dz(r,t=null,e=!1){let n={x:C(r,"x","max")},i={reductionIndices:t,keepDims:e};return P.runKernel(Bl,n,i)}var sn=T({max_:dz});function mz(r,t=null,e=!1){let n={x:C(r,"x","min")},i={axis:t,keepDims:e};return P.runKernel(Gl,n,i)}var fp=T({min_:mz});function fz(r,t){let e=C(r,"base","pow"),o=C(t,"exp","pow");[e,o]=He(e,o);let n={a:e,b:o};return P.runKernel(eu,n)}var Tn=T({pow_:fz});function Ee(r,t){if((lr(r)&&t!=="string"||Array.isArray(r))&&t!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(t==="string"&&lr(r)&&!(r instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return gr(r,[],[],t)}function hz(r){let e={x:C(r,"x","sqrt","float32")};return P.runKernel(hi,e)}var $r=T({sqrt_:hz});function gz(r){let t=C(r,"x","square"),e={};return P.runKernel("Square",{x:t},e)}var zt=T({square_:gz});function xz(r,t=null,e=!1){let o=C(r,"x","sum");o.dtype==="bool"&&(o=Ue(o,"int32"));let n={x:o},i={axis:t,keepDims:e};return P.runKernel(vu,n,i)}var tt=T({sum_:xz});function yz(r,t="euclidean",e=null,o=!1){r=C(r,"x","norm");let n=P2(r,t,e),i=n.shape;if(o){let s=Yn(e,r.shape);i=In(n.shape,s)}return Y(n,i)}function P2(r,t,e=null){if(r.rank===0)return Yt(r);if(r.rank!==1&&e===null)return P2(Y(r,[-1]),t,e);if(r.rank===1||typeof e=="number"||Array.isArray(e)&&e.length===1){if(t===1)return tt(Yt(r),e);if(t===1/0)return sn(Yt(r),e);if(t===-1/0)return fp(Yt(r),e);if(t==="euclidean"||t===2)return $r(tt(Tn(Yt(r),Ee(2,"int32")),e));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(e)&&e.length===2){if(t===1)return sn(tt(Yt(r),e[0]),e[1]-1);if(t===1/0)return sn(tt(Yt(r),e[1]),e[0]);if(t===-1/0)return fp(tt(Yt(r),e[1]),e[0]);if(t==="fro"||t==="euclidean")return $r(tt(zt(r),e));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${e}`)}var Ns=T({norm_:yz});function bz(r,t=null,e=!1){return Ns(r,"euclidean",t,e)}var D2=T({euclideanNorm_:bz});function vz(r){let e={x:C(r,"x","exp")};return P.runKernel(ei,e)}var Pr=T({exp_:vz});function Sz(r,t=0){let e=C(r,"x","expandDims","string_or_numeric");A(t<=e.rank,()=>"Axis must be <= rank of the tensor");let o={input:e},n={dim:t};return P.runKernel(vl,o,n)}var pr=T({expandDims_:Sz});function wz(r){let e={x:C(r,"x","expm1")};return P.runKernel(ti,e)}var A2=T({expm1_:wz});function Cz(r,t){let e=C(r,"x","tile","string_or_numeric");A(e.rank===t.length,()=>`Error in transpose: rank of input ${e.rank} must match length of reps ${t}.`);let o={x:e},n={reps:t};return P.runKernel(yi,o,n)}var Ri=T({tile_:Cz});function _z(r,t,e,o="float32"){t==null&&(t=r);let n=Oe([r,t],o),i=r<=t?r:t;for(let a=0;a<i;++a)n.set(1,a,a);let s=Y(n.toTensor(),[r,t]);if(e==null)return s;if(e.length===1)return Ri(pr(s,0),[e[0],1,1]);if(e.length===2)return Ri(pr(pr(s,0),0),[e[0],e[1],1,1]);if(e.length===3)return Ri(pr(pr(pr(s,0),0),0),[e[0],e[1],e[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${e.length}D.`)}var Am=T({eye_:_z});function kz(r){let e={x:C(r,"x","floor","float32")};return P.runKernel(ri,e)}var Fm=T({floor_:kz});function Iz(r,t,e=0,o=0){let n=C(r,"x","gather"),i=C(t,"indices","gather","int32"),s={x:n,indices:i},a={axis:e,batchDims:o};return P.runKernel(kl,s,a)}var Om=T({gather_:Iz});function Tz(r,t){let e=C(r,"a","greater","string_or_numeric"),o=C(t,"b","greater","string_or_numeric");[e,o]=He(e,o),Je(e.shape,o.shape);let n={a:e,b:o};return P.runKernel(ni,n)}var Rs=T({greater_:Tz});function Ez(r,t){let e=C(r,"a","greaterEqual","string_or_numeric"),o=C(t,"b","greaterEqual","string_or_numeric");[e,o]=He(e,o),Je(e.shape,o.shape);let n={a:e,b:o};return P.runKernel(ii,n)}var Lm=T({greaterEqual_:Ez});function Nz(r){let e={input:C(r,"input","imag")};return P.runKernel(El,e)}var $i=T({imag_:Nz});function Rz(r){let e={x:C(r,"x","isFinite")};return P.runKernel(Nl,e)}var F2=T({isFinite_:Rz});function $z(r){let e={x:C(r,"x","isInf")};return P.runKernel(Rl,e)}var O2=T({isInf_:$z});function Pz(r){let e={x:C(r,"x","isNaN")};return P.runKernel($l,e)}var L2=T({isNaN_:Pz});function Dz(r,t=.2){let o={x:C(r,"x","leakyRelu")},n={alpha:t};return P.runKernel(Pl,o,n)}var Mm=T({leakyRelu_:Dz});function Az(r,t){let e=C(r,"a","less","string_or_numeric"),o=C(t,"b","less","string_or_numeric");[e,o]=He(e,o),Je(e.shape,o.shape);let n={a:e,b:o};return P.runKernel(si,n)}var hp=T({less_:Az});function Fz(r,t){let e=C(r,"a","lessEqual","string_or_numeric"),o=C(t,"b","lessEqual","string_or_numeric");[e,o]=He(e,o),Je(e.shape,o.shape);let n={a:e,b:o};return P.runKernel(ai,n)}var Zu=T({lessEqual_:Fz});function M2(r,t,e){if(e<=0)throw new Error("The number of values should be positive.");let o={start:r,stop:t,num:e};return P.runKernel(Dl,{},o)}function Oz(r,t=5,e=1,o=1,n=.5){let i=C(r,"x","localResponseNormalization");A(i.rank===4||i.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${i.rank}.`),A(yn(t),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`);let s=i,a=!1;i.rank===3&&(a=!0,s=Y(i,[1,i.shape[0],i.shape[1],i.shape[2]]));let l={x:s},u={depthRadius:t,bias:e,alpha:o,beta:n},c=P.runKernel(Ml,l,u);return a?Y(c,[c.shape[1],c.shape[2],c.shape[3]]):c}var B2=T({localResponseNormalization_:Oz});function Lz(r){let e={x:C(r,"x","log","float32")};return P.runKernel(li,e)}var En=T({log_:Lz});function Mz(r){let e={x:C(r,"x","log1p")};return P.runKernel(Al,e)}var Bm=T({log1p_:Mz});function V2(r,t){A(Ea(r),()=>"The f passed in variableGrads(f) must be a function"),A(t==null||Array.isArray(t)&&t.every(u=>u instanceof wn),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");let e=t!=null;if(!e){t=[];for(let u in P.registeredVariables)t.push(P.registeredVariables[u])}let o=e?t.filter(u=>!u.trainable):null,n=t.length;t=t.filter(u=>u.trainable),A(t.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${n} variables is trainable.`);let i=!0,{value:s,grads:a}=P.gradients(r,t,null,i);A(a.some(u=>u!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),A(s.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${s.rank} tensor`);let l={};return t.forEach((u,c)=>{a[c]!=null&&(l[u.name]=a[c])}),o?.forEach(u=>l[u.name]=null),{value:s,grads:l}}function Dr(r){return P.customGrad(r)}function Bz(r){let e={x:C(r,"x","neg")};return P.runKernel(us,e)}var er=T({neg_:Bz});function Vz(r){let e={x:C(r,"x","softplus")};return P.runKernel(bu,e)}var Vm=T({softplus_:Vz});function Wz(r){let t=C(r,"x","logSigmoid");return Dr(o=>({value:er(Vm(er(o))),gradFunc:s=>se(s,Kr(er(o)))}))(t)}var W2=T({logSigmoid_:Wz});function zz(r,t){let e=C(r,"a","sub"),o=C(t,"b","sub");[e,o]=He(e,o);let n={a:e,b:o};return P.runKernel(xi,n)}var Ne=T({sub_:zz});function Uz(r,t=-1){let e=C(r,"logits","logSoftmax");if(t===-1&&(t=e.rank-1),t!==e.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${e.rank} and axis was ${t}`);return Dr((n,i)=>{let a=sn(n,t,!0),l=Ne(n,a),u=Ne(Ue(l,"float32"),En(tt(Pr(l),t,!0)));return i([u]),{value:u,gradFunc:(p,d)=>{let[m]=d,f=!0,g=Pr(m);return Ne(p,se(tt(p,t,f),g))}}})(e)}var z2=T({logSoftmax_:Uz});function Gz(r,t=null,e=!1){let o=C(r,"x","logSumExp"),n=Yn(t,o.shape),i=sn(o,n,!0),s=Ne(o,i),a=Pr(s),l=tt(a,n),u=En(l),c=fe(Y(i,u.shape),u);if(e){let p=In(c.shape,n);return Y(c,p)}return c}var Wm=T({logSumExp_:Gz});function Hz(r,t){let e=C(r,"a","logicalAnd","bool"),o=C(t,"b","logicalAnd","bool");Je(e.shape,o.shape);let n={a:e,b:o};return P.runKernel(Fl,n)}var $s=T({logicalAnd_:Hz});function Kz(r){let e={x:C(r,"x","logicalNot","bool")};return P.runKernel(Ol,e)}var zm=T({logicalNot_:Kz});function qz(r,t){let e=C(r,"a","logicalOr","bool"),o=C(t,"b","logicalOr","bool");Je(e.shape,o.shape);let n={a:e,b:o};return P.runKernel(Ll,n)}var Um=T({logicalOr_:qz});function jz(r,t){let e=C(r,"a","logicalXor","bool"),o=C(t,"b","logicalXor","bool");return Je(e.shape,o.shape),$s(Um(r,t),zm($s(r,t)))}var U2=T({logicalXor_:jz});var Gm=2147483648;function Xz(r,t,e="left"){let o=C(r,"sortedSequence","searchSorted"),n=C(t,"values","searchSorted"),i=o.shape[o.shape.length-1],s=n.shape[n.shape.length-1],a=Y(o,[-1,i]),l=Y(n,[-1,s]);if(a.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(a.shape[0]!==l.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(Ke(l.shape)>=Gm)throw new Error(`values tensor size must less than ${Gm}`);if(a.shape[1]>=Gm)throw new Error(`trailing dim_size must less than ${Gm} for int32 output type, was ${a.shape[1]}`);let u={sortedSequence:a,values:l},c={side:e};return P.runKernel(mu,u,c)}var gp=T({searchSorted_:Xz});function G2(r,t){return gp(r,t,"left")}function Yz(r,t,e,o,n){let i=C(r,"x","maxPool"),s=1,a=i,l=!1;i.rank===3&&(l=!0,a=Y(i,[1,i.shape[0],i.shape[1],i.shape[2]])),A(a.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${a.rank}.`),A(cr(e,s),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${e} and dilations '${s}'`),Ft("maxPool",o,n);let u={x:a},c={filterSize:t,strides:e,pad:o,dimRoundingMode:n},p=P.runKernel(Vl,u,c);return l?Y(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var Hm=T({maxPool_:Yz});function Qz(r,t=[1,1,1],e,o,n,i="NDHWC"){let s=C(r,"x","maxPool3d"),a=s,l=!1;s.rank===4&&(l=!0,a=Y(s,[1,s.shape[0],s.shape[1],s.shape[2],s.shape[3]])),A(a.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${a.rank}.`),A(i==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${i}`),Ft("maxPool3d",o,n);let u={x:a},c={filterSize:t,strides:e,pad:o,dimRoundingMode:n,dataFormat:i},p=P.runKernel(Wl,u,c);return l?Y(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}var H2=T({maxPool3d_:Qz});function Zz(r,t,e,o,n=!1){let s={x:C(r,"x","maxPoolWithArgmax")},a={filterSize:t,strides:e,pad:o,includeBatchInIndex:n},l=P.runKernel(zl,s,a);return{result:l[0],indexes:l[1]}}var K2=T({maxPoolWithArgmax_:Zz});function Jz(r,t){let e=C(r,"a","maximum"),o=C(t,"b","maximum");[e,o]=He(e,o),e.dtype==="bool"&&(e=Ue(e,"int32"),o=Ue(o,"int32")),Je(e.shape,o.shape);let n={a:e,b:o};return P.runKernel(ui,n)}var Km=T({maximum_:Jz});function eU(r,t=null,e=!1){let n={x:C(r,"x","mean")},i={axis:t,keepDims:e};return P.runKernel(Ul,n,i)}var Ps=T({mean_:eU});function yr(r,t="float32"){if(bt(r),t==="complex64"){let o=yr(r,"float32"),n=yr(r,"float32");return Nr(o,n)}let e=Ra(Ke(r),t);return P.makeTensor(e,r,t)}function an(r,t="float32"){if(bt(r),t==="complex64"){let o=an(r,"float32"),n=yr(r,"float32");return Nr(o,n)}let e=rp(Ke(r),t);return P.makeTensor(e,r,t)}function q2(r,t,{indexing:e="xy"}={}){if(e!=="xy"&&e!=="ij")throw new TypeError(`${e} is not a valid third argument to meshgrid`);if(r===void 0)return[];let o=C(r,"x","meshgrid",r instanceof st?r.dtype:"float32");if(t===void 0)return[o];let n=C(t,"y","meshgrid",t instanceof st?t.dtype:"float32"),i=Ke(o.shape),s=Ke(n.shape);return e==="xy"?(o=Y(o,[1,-1]),n=Y(n,[-1,1]),[et(an([s,1],o.dtype),o),et(n,an([1,i],n.dtype))]):(o=Y(o,[-1,1]),n=Y(n,[1,-1]),[et(o,an([1,s],o.dtype)),et(an([i,1],n.dtype),n)])}function tU(r,t){let e=C(r,"a","minimum"),o=C(t,"b","minimum");[e,o]=He(e,o),e.dtype==="bool"&&(e=Ue(e,"int32"),o=Ue(o,"int32")),Je(e.shape,o.shape);let n={a:e,b:o};return P.runKernel(ci,n)}var Nn=T({minimum_:tU});function rU(r,t,e){A(e==="reflect"||e==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${e}.`);let o=C(r,"x","mirrorPad");if(o.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");A(t.length===o.rank,()=>`Padding doesn't match input. Must be ${o.rank}. Got ${t.length}.`);let n=e==="reflect"?1:0;for(let a=0;a<o.rank;a++)A(t[a].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),A(t[a][0]>=0&&t[a][0]<=o.shape[a]-n&&t[a][1]>=0&&t[a][1]<=o.shape[a]-n,()=>`Padding in dimension ${a} cannot be greater than or equal to ${o.shape[a]-n} or less than 0 for input of shape ${o.shape}`);let i={paddings:t,mode:e},s={x:o};return P.runKernel(Hl,s,i)}var qm=T({mirrorPad_:rU});function oU(r,t){let e=C(r,"a","mod"),o=C(t,"b","mod");[e,o]=He(e,o);let n={a:e,b:o};return P.runKernel(Kl,n)}var j2=T({mod_:oU});function nU(r,t=null,e=!1){r=C(r,"x","moments");let o=Yn(t,r.shape),n=Ps(r,o,e),i=n.shape;e||(i=In(n.shape,o));let s=zt(Ne(Ue(r,"float32"),Y(n,i))),a=Ps(s,o,e);return{mean:n,variance:a}}var X2=T({moments_:nU});function iU(r,t,e,o){let n=C(t,"data","multiRNNCell"),i=ws(e,"c","multiRNNCell"),s=ws(o,"h","multiRNNCell"),a=n,l=[];for(let p=0;p<r.length;p++){let d=r[p](a,i[p],s[p]);l.push(d[0]),l.push(d[1]),a=d[1]}let u=[],c=[];for(let p=0;p<l.length;p+=2)u.push(l[p]),c.push(l[p+1]);return[u,c]}var Y2=T({multiRNNCell_:iU});function sU(r,t,e,o=!1){let n=C(r,"logits","multinomial"),i=n.size,s=n.rank;if(i<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${i}.`);if(s>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${s}`);e=e||Math.random();let l={logits:s===1?Y(n,[1,-1]):n},u={numSamples:t,seed:e,normalized:o},c=P.runKernel(ql,l,u);return s===1?Y(c,[c.size]):c}var Q2=T({multinomial_:sU});function aU(r,t){let e=C(r,"a","notEqual","string_or_numeric"),o=C(t,"b","notEqual","string_or_numeric");[e,o]=He(e,o),Je(e.shape,o.shape);let n={a:e,b:o};return P.runKernel(di,n)}var jm=T({notEqual_:aU});function lU(r,t,e=1,o=0,n="int32"){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);let s={indices:C(r,"indices","oneHot","int32")},a={dtype:n,depth:t,onValue:e,offValue:o};return P.runKernel(Ql,s,a)}var Z2=T({oneHot_:lU});function uU(r){let e={x:C(r,"x","onesLike")};return P.runKernel(Yl,e)}var J2=T({onesLike_:uU});function cU(r,t){let e=C(r,"v1","outerProduct"),o=C(t,"v2","outerProduct");A(e.rank===1&&o.rank===1,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${e.rank} and ${o.rank}.`);let n=Y(e,[-1,1]),i=Y(o,[1,-1]);return et(n,i)}var eC=T({outerProduct_:cU});function pU(r,t,e=0){let o=C(r,"x","pad");if(o.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");let n={paddings:t,constantValue:e},i={x:o};return P.runKernel(Jl,i,n)}var qr=T({pad_:pU});function dU(r,t,e=0){return A(t.length===2,()=>"Invalid number of paddings. Must be length of 2."),qr(r,[t],e)}var tC=T({pad1d_:dU});function mU(r,t,e=0){return A(t.length===2&&t[0].length===2&&t[1].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),qr(r,t,e)}var rC=T({pad2d_:mU});function fU(r,t,e=0){return A(t.length===3&&t[0].length===2&&t[1].length===2&&t[2].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),qr(r,t,e)}var oC=T({pad3d_:fU});function hU(r,t,e=0){return A(t.length===4&&t[0].length===2&&t[1].length===2&&t[2].length===2&&t[3].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),qr(r,t,e)}var nC=T({pad4d_:hU});function gU(r,t,e){let o=C(r,"x","spaceToBatchND");A(o.rank>=1+t.length,()=>`input rank ${o.rank} should be > than [blockShape] ${t.length}`),A(e.length===t.length,()=>`paddings.shape[0] ${e.length} must be equal to [blockShape] ${t.length}`),A(o.shape.reduce((s,a,l)=>l>0&&l<=t.length?s&&(a+e[l-1][0]+e[l-1][1])%t[l-1]===0:s,!0),()=>`input spatial dimensions ${o.shape.slice(1)} with paddings ${e.toString()} must be divisible by blockShapes ${t.toString()}`);let n={x:o},i={blockShape:t,paddings:e};return P.runKernel(Su,n,i)}var Xm=T({spaceToBatchND_:gU});function xU(r,t,e,o,n,i,s){n==null&&(n=[1,1]),i==null&&(i=1),o===0&&(o="valid");let a=C(r,"x","maxPool"),l=a,u=!1;a.rank===3&&(u=!0,l=Y(a,[1,a.shape[0],a.shape[1],a.shape[2]])),A(cr(i,n),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${i} and dilations '${n}'`);let c=_y(l.shape,t,i,n,o),p=[c.dilationHeight,c.dilationWidth],d;o==="same"?d=bU([c.filterHeight,c.filterWidth],p):d=[[0,0],[0,0]];let m=p[0]===1&&p[1]===1,[f,g]=yU([c.inHeight,c.inWidth],p,d),x=m?o:"valid",y=m?l:Xm(l,p,f),k=(e==="avg"?()=>Im(y,t,i,x,s):()=>Hm(y,t,i,x,s))(),N=m?k:Tm(k,p,g);return u?Y(N,[N.shape[1],N.shape[2],N.shape[3]]):N}function yU(r,t,e){let o=e.map(c=>c[0]),n=e.map(c=>c[1]),i=r.concat(o,n),s=t.map((c,p)=>(c-i[p]%c)%c),a=n.map((c,p)=>c+s[p]),l=t.map((c,p)=>[o[p],a[p]]),u=t.map((c,p)=>[0,s[p]]);return[l,u]}function bU(r,t){let o=r.map((s,a)=>s+(s-1)*(t[a]-1)).map(s=>s-1),n=o.map(s=>Math.floor(s/2)),i=o.map((s,a)=>s-n[a]);return o.map((s,a)=>[n[a],i[a]])}var iC=T({pool_:xU});function vU(r,t){let e=C(r,"x","prelu"),o=C(t,"alpha","prelu"),n={x:e,alpha:o};return P.runKernel(tu,n)}var Ym=T({prelu_:vU});function SU(r,t=null,e=!1){let o=C(r,"x","prod");o.dtype==="bool"&&(o=Ue(o,"int32"));let n={x:o},i={axis:t,keepDims:e};return P.runKernel(cs,n,i)}var sC=T({prod_:SU});function wU(r,t,e,o){let n=r.map((c,p)=>C(c,`tensors${p}`,"raggedGather","int32")),i=C(t,"paramsDenseValues","raggedGather"),s=C(e,"indices","raggedGather","int32"),a={paramsNestedSplits:n,paramsDenseValues:i,indices:s},l={outputRaggedRank:o},u=P.runKernel(jd,a,l);return{outputNestedSplits:u.slice(0,u.length-1),outputDenseValues:u[u.length-1]}}var aC=T({raggedGather_:wU});function CU(r,t,e){let o=C(r,"starts","raggedRange"),n=C(t,"limits","raggedRange",o.dtype),i=C(e,"deltas","raggedRange",o.dtype),s={starts:o,limits:n,deltas:i},a=P.runKernel(Xd,s);return{rtNestedSplits:a[0],rtDenseValues:a[1]}}var lC=T({raggedRange_:CU});function _U(r,t,e,o,n){let i=C(r,"shape","raggedTensorToTensor","int32"),s=C(t,"values","raggedTensorToTensor"),a=C(e,"defaultValue","raggedTensorToTensor",s.dtype),l=o.map((p,d)=>C(p,`tensors${d}`,"raggedTensorToTensor","int32")),u={shape:i,values:s,defaultValue:a,rowPartitionTensors:l},c={rowPartitionTypes:n};return P.runKernel(Yd,u,c)}var uC=T({raggedTensorToTensor_:_U});function kU(r,t,e){bt(r);let o=Ke(r),n=null;if(e==null||e==="float32")n=new Float32Array(o);else if(e==="int32")n=new Int32Array(o);else if(e==="bool")n=new Uint8Array(o);else throw new Error(`Unknown data type ${e}`);for(let i=0;i<o;i++)n[i]=t();return P.makeTensor(n,r,e)}var cC=T({rand_:kU});var ef=O0(TC());var As=class{constructor(t,e,o,n,i){this.mean=t,this.stdDev=e,this.dtype=o,this.nextVal=NaN,this.truncated=n,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);let s=i||Math.random();this.random=ef.alea(s.toString())}nextValue(){if(!isNaN(this.nextVal)){let n=this.nextVal;return this.nextVal=NaN,n}let t,e,o=!1;for(;!o;){let n,i,s;do n=2*this.random()-1,i=2*this.random()-1,s=n*n+i*i;while(s>=1||s===0);let a=Math.sqrt(-2*Math.log(s)/s);t=this.mean+this.stdDev*n*a,e=this.mean+this.stdDev*i*a,(!this.truncated||this.isValidTruncated(t))&&(o=!0)}return(!this.truncated||this.isValidTruncated(e))&&(this.nextVal=this.convertValue(e)),this.convertValue(t)}convertValue(t){return this.dtype==null||this.dtype==="float32"?t:Math.round(t)}isValidTruncated(t){return t<=this.upper&&t>=this.lower}},Zm=class{constructor(t,e,o,n){this.alpha=t,this.beta=1/e,this.dtype=o;let i=n||Math.random();this.randu=ef.alea(i.toString()),this.randn=new As(0,1,o,!1,this.randu()),t<1?this.d=t+2/3:this.d=t-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let t,e,o,n,i,s;for(;;){do n=this.randn.nextValue(),s=1+this.c*n;while(s<=0);if(s*=s*s,t=n*n,e=1-.331*t*t,o=.5*t+this.d*(1-s+Math.log(s)),i=this.randu(),i<e||Math.log(i)<o)break}return s=1/this.beta*this.d*s,this.alpha<1&&(s*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(s)}convertValue(t){return this.dtype==="float32"?t:Math.round(t)}},Jm=class{constructor(t=0,e=1,o,n){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=t,this.range=e-t,this.dtype=o,n==null&&(n=Math.random()),typeof n=="number"&&(n=n.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${t} - ${e} <= 1 and dtype is not float`);this.random=ef.alea(n)}convertValue(t){return this.canReturnFloat()?t:Math.round(t)}nextValue(){return this.convertValue(this.min+this.range*this.random())}};function PU(r,t,e=1,o="float32",n){if(bt(r),e==null&&(e=1),o==null&&(o="float32"),o!=="float32"&&o!=="int32")throw new Error(`Unsupported data type ${o}`);let i=new Zm(t,e,o,n),s=Oe(r,o);for(let a=0;a<s.values.length;a++)s.values[a]=i.nextValue();return s.toTensor()}var EC=T({randomGamma_:PU});function DU(r,t=0,e=1,o,n){if(bt(r),o!=null&&o==="bool")throw new Error(`Unsupported data type ${o}`);let i=new As(t,e,o,!1,n),s=Oe(r,o);for(let a=0;a<s.values.length;a++)s.values[a]=i.nextValue();return s.toTensor()}var tf=T({randomNormal_:DU});function AU(r,t,e){if(t!=null&&t==="bool")throw new Error(`Unsupported data type ${t}`);return tf(r,0,1,t,e)}var NC=T({randomStandardNormal_:AU});function FU(r,t=0,e=1,o="float32",n){bt(r);let i=Oe(r,o),s=new Jm(t,e,null,n);for(let a=0;a<i.values.length;a++)i.values[a]=s.nextValue();return i.toTensor()}var Ju=T({randomUniform_:FU});function OU(r,t,e,o){return Ju(r,t,e,"int32",o)}var RC=T({randomUniformInt_:OU});function Pi(r,t,e=1,o="float32"){if(e===0)throw new Error("Cannot have a step of zero");let n={start:r,stop:t,step:e,dtype:o};return P.runKernel(ru,{},n)}function LU(r){let e={input:C(r,"input","real")};return P.runKernel(ps,e)}var Rn=T({real_:LU});function MU(r){let e={x:C(r,"x","reciprocal")};return P.runKernel(ou,e)}var $C=T({reciprocal_:MU});function BU(r){let e={x:C(r,"x","relu")};return P.runKernel(nu,e)}var Di=T({relu_:BU});function VU(r){let e={x:C(r,"x","relu6")};return P.runKernel(lu,e)}var rf=T({relu6_:VU});function WU(r,t){let o={x:C(r,"x","reverse")},n={dims:t};return P.runKernel(uu,o,n)}var uo=T({reverse_:WU});function zU(r){let t=C(r,"x","reverse");return A(t.rank===1,()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`),uo(t,0)}var PC=T({reverse1d_:zU});function UU(r,t){let e=C(r,"x","reverse");return A(e.rank===2,()=>`Error in reverse2D: x must be rank 2 but got rank ${e.rank}.`),uo(e,t)}var DC=T({reverse2d_:UU});function GU(r,t){let e=C(r,"x","reverse");return A(e.rank===3,()=>`Error in reverse3D: x must be rank 3 but got rank ${e.rank}.`),uo(e,t)}var AC=T({reverse3d_:GU});function HU(r,t){let e=C(r,"x","reverse");return A(e.rank===4,()=>`Error in reverse4D: x must be rank 4 but got rank ${e.rank}.`),uo(e,t)}var FC=T({reverse4d_:HU});function KU(r){let e={x:C(r,"x","round")};return P.runKernel(cu,e)}var of=T({round_:KU});function qU(r){let e={x:C(r,"x","rsqrt","float32")};return P.runKernel(mi,e)}var OC=T({rsqrt_:qU});function jU(r){let e={x:C(r,"x","selu")};return P.runKernel(hu,e)}var LC=T({selu_:jU});function XU(r,t,e,o,n,i=[1,1],s="NHWC"){let a=C(r,"x","separableConv2d"),l=C(t,"depthwiseFilter","separableConv2d"),u=C(e,"pointwiseFilter","separableConv2d"),c=a,p=!1;if(a.rank===3&&(p=!0,c=Y(a,[1,a.shape[0],a.shape[1],a.shape[2]])),s==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");A(c.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`),A(l.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`),A(u.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`),A(u.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`),A(u.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`);let d=l.shape[2],m=l.shape[3];A(u.shape[2]===d*m,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*m}, but got ${u.shape[2]}.`);let f=Qu(c,l,o,n,s,i),x=Ei(f,u,1,"valid",s);return p?Y(x,[x.shape[1],x.shape[2],x.shape[3]]):x}var MC=T({separableConv2d_:XU});function YU(r,t){return X(this,null,function*(){let e=C(r,"x","setdiff1d"),o=C(t,"y","setdiff1d");A(e.dtype===o.dtype,()=>`x and y should have the same dtype, but got x (${e.dtype}) and y (${o.dtype}).`),A(e.rank===1,()=>`x should be 1D tensor, but got x (${e.shape}).`),A(o.rank===1,()=>`y should be 1D tensor, but got y (${o.shape}).`);let n=yield e.data(),i=yield o.data(),s=new Set(i),a=0;for(let c=0;c<n.length;c++)s.has(n[c])||a++;let l=new ao([a],e.dtype),u=new ao([a],"int32");for(let c=0,p=0;c<n.length;c++)s.has(n[c])||(l.values[p]=n[c],u.values[p]=c,p++);return[l.toTensor(),u.toTensor()]})}var BC=YU;function QU(r){let e={x:C(r,"x","sign")};return P.runKernel(yu,e)}var VC=T({sign_:QU});function ZU(r){let e={x:C(r,"x","sin","float32")};return P.runKernel(gu,e)}var WC=T({sin_:ZU});function JU(r){let e={x:C(r,"x","sinh")};return P.runKernel(xu,e)}var zC=T({sinh_:JU});function e5(r,t,e){let o=C(r,"x","slice1d");return A(o.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${o.rank} tensor`),Fe(o,[t],[e])}var UC=T({slice1d_:e5});function t5(r,t,e){let o=C(r,"x","slice2d");return A(o.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${o.rank} tensor`),Fe(o,t,e)}var GC=T({slice2d_:t5});function r5(r,t,e){let o=C(r,"x","slice3d");return A(o.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${o.rank} tensor`),Fe(o,t,e)}var HC=T({slice3d_:r5});function o5(r,t,e){let o=C(r,"x","slice4d");return A(o.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${o.rank} tensor`),Fe(o,t,e)}var KC=T({slice4d_:o5});function n5(r,t=-1){let e=C(r,"logits","softmax","float32");if(t===-1&&(t=e.rank-1),t!==e.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${e.rank} and dim was ${t}`);let o={logits:e},n={dim:t};return P.runKernel(Cu,o,n)}var qC=T({softmax_:n5});function i5(r){A(r.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${r.dtype}.`);let t={input:r};return P.runKernel(Sl,t)}var ec=T({fft_:i5});function s5(r){A(r.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${r.dtype}.`);let t={input:r};return P.runKernel(Tl,t)}var Fs=T({ifft_:s5});function a5(r){let t=r.shape[r.shape.length-1],e=r.size/t,o;if(t<=2){let n=Y(r,[e,t]);o=Fs(n)}else{let n=[e,2*(t-1)],i=Y(Rn(r),[e,t]),s=Y($i(r),[e,t]),a=uo(Fe(i,[0,1],[e,t-2]),1),l=se(uo(Fe(s,[0,1],[e,t-2]),1),Ee(-1)),u=dt([i,a],1),c=dt([s,l],1),p=Y(Nr(u,c),[n[0],n[1]]);o=Fs(p)}if(o=Rn(o),r.rank===3&&r.shape[0]!==0){let n=o,i=r.shape[0];o=Y(o,[i,o.shape[0]/i,o.shape[1]]),n.dispose()}return o}var nf=T({irfft_:a5});function l5(r,t,e=0){let n={x:C(r,"x","split")},i={numOrSizeSplits:t,axis:e};return P.runKernel(wu,n,i)}var $n=T({split_:l5});function u5(r,t){A(r.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${r.dtype}`);let e=r.shape[r.shape.length-1],o=r.size/e,n;if(t!=null&&t<e){let f=r.shape.map(x=>0),g=r.shape.map(x=>x);g[r.shape.length-1]=t,n=Fe(r,f,g),e=t}else if(t!=null&&t>e){let f=r.shape.map(g=>g);f[r.shape.length-1]=t-e,n=dt([r,yr(f)],r.shape.length-1),e=t}else n=r;let i=Wt(n),s=Y(Nr(n,i),[o,e]),a=ec(s),l=Math.floor(e/2)+1,u=Rn(a),c=$i(a),p=$n(u,[l,e-l],u.shape.length-1),d=$n(c,[l,e-l],c.shape.length-1),m=n.shape.slice();return m[n.shape.length-1]=l,Y(Nr(p[0],d[0]),m)}var tc=T({rfft_:u5});function c5(r,t){let e=C(r,"a","squaredDifference"),o=C(t,"b","squaredDifference");[e,o]=He(e,o),Je(e.shape,o.shape);let n={a:e,b:o},i={};return P.runKernel(gi,n,i)}var sf=T({squaredDifference_:c5});function p5(r,t){let e=C(r,"x","squeeze","string_or_numeric");return Y(e,G0(e.shape,t).newShape)}var lt=T({squeeze_:p5});function d5(r,t=0){let e=ws(r,"tensors","stack","string_or_numeric");A(e.length>=1,()=>"Pass at least one tensor to tf.stack"),e.length>0&&A(t<=e[0].rank,()=>"Axis must be <= rank of the tensor");let o=e,n={axis:t};return P.runKernel(Zl,o,n)}var br=T({stack_:d5});function m5(r,t=0){let o={x:C(r,"x","step")},n={alpha:t};return P.runKernel(Lu,o,n)}var af=T({step_:m5});function f5(r,t,e,o,n=0,i=0,s=0,a=0,l=0){let c={x:C(r,"x","stridedSlice","string_or_numeric")},p={begin:t,end:e,strides:o,beginMask:n,endMask:i,ellipsisMask:s,newAxisMask:a,shrinkAxisMask:l};return P.runKernel(Eu,c,p)}var jC=T({stridedSlice_:f5});function h5(r){let e={x:C(r,"x","tan","float32")};return P.runKernel(Ru,e)}var XC=T({tan_:h5});function Rt(r,t){so(r);let e=Er(r,t);if(e.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return gr(r,null,e,t)}function vr(r,t,e){if(so(r),t!=null&&t.length!==2)throw new Error("tensor2d() requires shape to have two numbers");let o=Er(r,e);if(o.length!==2&&o.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(o.length===1&&t==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return gr(r,t,o,e)}function lf(r,t,e){if(so(r),t!=null&&t.length!==3)throw new Error("tensor3d() requires shape to have three numbers");let o=Er(r,e);if(o.length!==3&&o.length!==1)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(o.length===1&&t==null)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return gr(r,t,o,e)}function YC(r,t,e){if(so(r),t!=null&&t.length!==4)throw new Error("tensor4d() requires shape to have four numbers");let o=Er(r,e);if(o.length!==4&&o.length!==1)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(o.length===1&&t==null)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return gr(r,t,o,e)}function QC(r,t,e){if(so(r),t!=null&&t.length!==5)throw new Error("tensor5d() requires shape to have five numbers");let o=Er(r,e);if(o.length!==5&&o.length!==1)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(o.length===1&&t==null)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return gr(r,t,o,e)}function ZC(r,t,e){if(so(r),t!=null&&t.length!==6)throw new Error("tensor6d() requires shape to have six numbers");let o=Er(r,e);if(o.length!==6&&o.length!==1)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(o.length===1&&t==null)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return t=t||o,gr(r,t,o,e)}function JC(r,t,e){let o=t.rank>1?t.shape[t.rank-1]:1,n=t.rank>1?t.rank-1:1,i=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${e.shape}, indices.shape: ${t.shape}, shape: ${r}, sliceDim: ${o}, and batchDim: ${n}.`;if(e.rank<n)throw new Error(i+` update.rank < ${n}. `);if(r.length<o+(e.rank-n))throw new Error(i+` Output shape length < ${o+(e.rank-n)}`);if(e.rank!==n+r.length-o)throw new Error(i+` update.rank != ${n+r.length-o}`);for(let s=0;s<n;++s)if(e.shape[s]!==t.shape[s])throw new Error(i+` updates.shape[${s}] (${e.shape[s]}) != indices.shape[${s}] (${t.shape[s]}).`);for(let s=0;s<e.rank-n;++s)if(e.shape[s+n]!==r[s+o])throw new Error(i+` updates.shape[${s+n}] (${e.shape[s+n]}) != shape[${s+n}] (${r[s+n]})`)}function xp(r,t,e){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(r.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${r.rank}.`);if(t.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(e.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${e}`);if(e.length===0){if(t.size===0)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(r.size===0)throw new Error(`Updates specified for empty output. updates shape: ${r.shape}`)}JC(e,t,r)}function g5(r,t,e){let o=t.shape.length,n=o>1?t.shape[o-1]:1,i=e.length,s=1;for(let p=n;p<i;++p)s*=e[p];let a=n<1?1:n,l=Ke(t.shape)/a,u=[...Qo(e.slice(0,n)),1],c=Ke(e);return{sliceRank:n,numUpdates:l,sliceSize:s,strides:u,outputSize:c}}function x5(r,t,e){let o=C(r,"tensor","tensorScatterupdate"),n=C(t,"indices","tensorScatterupdate","int32"),i=C(e,"updates","tensorScatterupdate");if(xp(i,n,o.shape),o.dtype!==i.dtype)throw new Error(`tensor and updates must have the same dtype, instead they are ${o.dtype} and ${i.dtype}.`);let s={tensor:o,indices:n,updates:i},a={};return P.runKernel(du,s,a)}var t_=T({tensorScatterUpdate_:x5});function y5(r,t=1,e=!0){let o=C(r,"x","topk");if(o.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");let n=o.shape[o.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>n)throw new Error(`'k' passed to topk() must be <= the last dimension (${n}) but got ${t}`);let i={x:o},s={k:t,sorted:e},[a,l]=P.runKernel(Pu,i,s);return{values:a,indices:l}}var r_=T({topk_:y5});function b5(r,t=0,e=1,o,n){if(bt(r),o!=null&&o==="bool")throw new Error("Unsupported data type $ { dtype }");let i=new As(t,e,o,!0,n),s=Oe(r,o);for(let a=0;a<s.values.length;a++)s.values[a]=i.nextValue();return s.toTensor()}var o_=T({truncatedNormal_:b5});function v5(r,t=0){let e=C(r,"x","unique","string_or_numeric");A(e.rank>0,()=>"The input tensor must be at least 1D");let o={x:e},n={axis:t},[i,s]=P.runKernel(nm,o,n);return{values:i,indices:s}}var n_=T({unique_:v5});function S5(r,t,e){let o=C(r,"x","unsortedSegmentSum"),n=C(t,"segmentIds","unsortedSegmentSum","int32");A(yn(e),()=>"numSegments must be of dtype int");let i={x:o,segmentIds:n},s={numSegments:e};return P.runKernel(Fu,i,s)}var i_=T({unsortedSegmentSum_:S5});function w5(r,t=0){let e=C(r,"x","unstack","string_or_numeric");A(t>=-e.shape.length&&t<e.shape.length,()=>`Axis = ${t} is not in [-${e.shape.length}, ${e.shape.length})`);let o={value:e},n={axis:t};return P.runKernel(Au,o,n)}var co=T({unstack_:w5});function s_(r,t){return gp(r,t,"right")}function a_(r,t=!0,e,o){return P.makeVariable(r,t,e,o)}function uf(r,t){let e=[];for(let i=0;i<t.length;i++)t[i]&&e.push(i);let o=Oe(r,"int32"),n=Oe([e.length,r.length],"int32");for(let i=0;i<e.length;i++){let s=o.indexToLoc(e[i]),a=i*r.length;n.values.set(s,a)}return n.toTensor()}function C5(r){return X(this,null,function*(){let t=C(r,"condition","whereAsync","bool"),e=yield t.data(),o=uf(t.shape,e);return r!==t&&t.dispose(),o})}var cf=C5;function _5(r,t,e){return X(this,null,function*(){let o=C(r,"tensor","boolMask"),n=C(t,"mask","boolMask","bool"),i=e??0,s=n.rank,a=o.shape;A(s>0,()=>"mask cannot be scalar"),Nt(a.slice(i,i+s),n.shape,"mask's shape must match the first K dimensions of tensor's shape,");let l=1;for(let g=i;g<i+s;g++)l*=a[g];let u=a.slice(0,i).concat([l],a.slice(i+s)),c=Y(o,u),p=Y(n,[-1]),d=yield cf(p),m=lt(d,[1]),f=Om(c,m,i);return r!==o&&o.dispose(),t!==n&&n.dispose(),m.dispose(),c.dispose(),p.dispose(),d.dispose(),f})}var k5=_5;function I5(r,t,e){let o=C(r,"x","transpose");if(t==null&&(t=o.shape.map((s,a)=>a).reverse()),A(o.rank===t.length,()=>`Error in transpose: rank of input ${o.rank} must match length of perm ${t}.`),t.forEach(s=>{A(s>=0&&s<o.rank,()=>`All entries in 'perm' must be between 0 and ${o.rank-1} but got ${t}`)}),o.rank<=1)return o.clone();let n={x:o},i={perm:t};return o.dtype==="complex64"?Te(()=>{let s=Rn(o),a=$i(o);return s=P.runKernel(bi,{x:s},i),a=P.runKernel(bi,{x:a},i),e&&(a=er(a)),Nr(s,a)}):P.runKernel(bi,n,i)}var pf=T({transpose_:I5});function T5(r,t,e,o,n=!0){let i=C(r,"v","movingAverage"),s=C(t,"x","movingAverage"),a=C(e,"decay","movingAverage");dw(i,s),A(zr(i.shape,s.shape),()=>"Shape mismatch in v and x");let l=Ee(1),u=Ne(l,a),c=se(Ne(s,i),u);if(n){A(o!=null,()=>"When using zeroDebias: true, step is required.");let p=C(o,"step","movingAverage");c=Ae(c,Ne(l,Tn(a,p)))}return fe(i,c)}var E5=T({movingAverage_:T5});function N5(r,t,e){bt(e);let o=C(r,"indices","scatterND","int32"),n=C(t,"updates","scatterND");xp(n,o,e);let i={indices:o,updates:n},s={shape:e};return P.runKernel(pu,i,s)}var R5=T({scatterND_:N5});function l_(r,t,e,o){if(r.dtype!=="int32")throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${r.dtype}.`);if(r.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${r.shape}.`);let n=r.rank>0?r.shape[0]:1,i=r.rank>1?r.shape[1]:1;if(e.length!==i)throw new Error(`outputShape has incorrect number of elements:, ${e.length}, should be: ${i}.`);let s=t.size;if(!(t.rank===0||t.rank===1&&s===n))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${n}]`);if(t.dtype!==o.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}function P5(r,t,e,o=0){bt(e);let n=C(r,"sparseIndices","sparseToDense","int32"),i=C(t,"sparseValues","sparseToDense","string_or_numeric"),s=C(o,"defaultValue","sparseToDense",i.dtype);l_(n,i,e,s);let a={sparseIndices:n,sparseValues:i,defaultValue:s},l={outputShape:e};return P.runKernel(Iu,a,l)}var D5=T({sparseToDense_:P5});function A5(r,t){let e=C(t,"indices","gatherND","int32"),n={params:C(r,"x","gatherND","string_or_numeric"),indices:e};return P.runKernel(Il,n)}var F5=T({gatherND_:A5});function u_(r,t){if(t==null)return r.shape.slice();if(zr(r.shape,t))return t;if(r.shape.length===t.length){let e=[];for(let o=0;o<r.shape.length;o++)t[o]==null&&r.shape[o]!=null?e.push(r.shape[o]):e.push(t[o]);return e}return t}function O5(r,t,e,o){let n=C(r,"x","dropout");if(A(n.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${n.dtype} tensor instead.`),A(t>=0&&t<1,()=>`rate must be a float in the range [0, 1), but got ${t}.`),t===0)return r instanceof st?n.clone():n;let i=u_(n,e),s=1-t,a=Ae(Fm(fe(Ju(i,0,1,"float32",o),s)),s);return se(n,a)}var L5=T({dropout_:O5});function Dy(r){return Math.floor(Math.pow(2,Math.ceil(Math.log(r)/Math.log(2))))}function yp(r,t,e){let o=1-r%2,n=new Float32Array(r);for(let i=0;i<r;++i){let s=2*Math.PI*i/(r+o-1);n[i]=t-e*Math.cos(s)}return Rt(n,"float32")}function M5(r,t,e=1){return X(this,null,function*(){let o=C(r,"predictions","inTopK"),n=C(t,"targets","inTopK");A(o.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${o.rank}`),A(o.rank-1===n.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${o.rank} and targets rank ${n.rank}`),Nt(o.shape.slice(0,o.shape.length-1),n.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");let i=o.shape[o.shape.length-1];A(e>0&&e<=i,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${i}), but got ${e}`);let s=yield o.data(),a=yield n.data(),[l,u]=[s.length/i,i],c=H0("bool",l);for(let p=0;p<l;p++){let d=p*u,m=s.subarray(d,d+u),f=[];for(let g=0;g<m.length;g++)f.push({value:m[g],index:g});f.sort((g,x)=>x.value-g.value),c[p]=0;for(let g=0;g<e;g++)if(f[g].index===a[p]){c[p]=1;break}}return r!==o&&o.dispose(),t!==n&&n.dispose(),xr(c,n.shape,"bool")})}var B5=M5;var Ay={};ct(Ay,{conv2d:()=>p_,depthwiseConv2d:()=>f_,matMul:()=>h_});function V5(r,t,e,o,n,i="NHWC",s){let a=r;r.rank===3&&(a=Y(r,[1,r.shape[0],r.shape[1],r.shape[2]]));let l=t;l.rank===3&&(l=Y(t,[1,t.shape[0],t.shape[1],t.shape[2]])),A(a.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${a.shape}.`),A(l.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`),A(e.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${e}.`);let u=i==="NHWC"?a.shape[3]:a.shape[1],c=i==="NHWC"?l.shape[3]:l.shape[1];A(u===e[2],()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${e[2]}.`),A(c===e[3],()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${e[3]}).`),Ft("conv2dDerFilter",n,s);let p={x:a,dy:l},d={strides:o,pad:n,dataFormat:i,dimRoundingMode:s,filterShape:e};return P.runKernel(el,p,d)}var c_=T({conv2DBackpropFilter_:V5});function Os(r,t,e){if(e==null||e==="linear")return r;if(e==="relu")return se(r,af(t));throw new Error(`Cannot compute gradient for fused activation ${e}.`)}function Ls(r,t){let e=t,o=$m(r.shape,t.shape);return o.length>0&&(e=tt(e,o)),Y(e,r.shape)}function Ms(r,t,e,o){if(t==="linear")return r;if(t==="relu")return Di(r);if(t==="elu")return Dm(r);if(t==="relu6")return rf(r);if(t==="prelu")return Ym(r,e);if(t==="leakyrelu")return Mm(r,o);if(t==="sigmoid")return Kr(r);throw new Error(`Unknown fused activation ${t}.`)}var Bs=(r,t)=>!(r>0)||t==="linear";function W5({x:r,filter:t,strides:e,pad:o,dataFormat:n="NHWC",dilations:i=[1,1],dimRoundingMode:s,bias:a,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(l=l||"linear",Bs(P.state.gradientDepth,l)===!1){A(n==="NHWC",()=>`Error in fused conv2d: got dataFormat of ${n} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let M=Ei(r,t,e,o,n,i,s);return a!=null&&(M=fe(M,a)),Ms(M,l,u,c)}let p=C(r,"x","conv2d","float32"),d=C(t,"filter","conv2d","float32"),m=p,f=!1;p.rank===3&&(f=!0,m=Y(p,[1,p.shape[0],p.shape[1],p.shape[2]])),A(m.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${m.rank}.`),A(d.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${d.rank}.`),Ft("fused conv2d",o,s);let g=n==="NHWC"?m.shape[3]:m.shape[1];A(d.shape[2]===g,()=>`Error in conv2d: depth of input (${g}) must match input depth for filter ${d.shape[2]}.`),A(cr(e,i),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${e} and dilations '${i}'`);let x=Es(m.shape,d.shape,e,i,o,s),y;a!=null&&(y=C(a,"bias","fused conv2d"),[y]=He(y,p),n==="NHWC"?Je(x.outShape,y.shape):(A(y.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${y.shape.length}.`),A(y.shape.length===0||y.shape[0]===x.outChannels||y.shape[0]===1,()=>`Error in fused conv2d: bias shape (${y.shape}) is not compatible with the number of output channels (${x.outChannels})`)));let v;if(u!=null){let M=u.shape;if(A(M.length<=1||M.length===3,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${M.length}.`),M.length===1)A(M[0]===1||M[0]===x.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${M}) is not compatible with the number of output channels (${x.outChannels}).`);else if(M.length===3)try{Je(M,x.outShape)}catch{let H=`Error in fused conv2d: PReLU activation weights (${M}) is not compatible with the output shape of the conv2d (${x.outShape}).`;throw Error(H)}v=C(u,"prelu weights","fused conv2d")}let k=(M,z)=>{A(n==="NHWC",()=>`Error in gradient of fused conv2D: got dataFormat of ${n} but only NHWC is currently supported.`);let[H,K,j,J]=z,ue=Os(M,j,l);A(Ts(i),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${i}'`);let ce=Rm(K.shape,ue,H,e,o),xe=c_(K,ue,H.shape,e,o),be=[ce,xe];if(J!=null){let Ie=Ls(J,ue);be.push(Ie)}return be},N={x:m,filter:d,bias:y,preluActivationWeights:v},F={strides:e,pad:o,dataFormat:n,dilations:i,dimRoundingMode:s,activation:l,leakyreluAlpha:c};return a==null?Dr((z,H,K)=>{let j=P.runKernel(hs,N,F);return K([H,z,j]),f&&(j=Y(j,[j.shape[1],j.shape[2],j.shape[3]])),{value:j,gradFunc:k}})(m,d):Dr((z,H,K,j)=>{let J=P.runKernel(hs,N,F);return j([H,z,J,K]),f&&(J=Y(J,[J.shape[1],J.shape[2],J.shape[3]])),{value:J,gradFunc:k}})(m,d,y)}var p_=T({fusedConv2d_:W5});function z5(r,t,e,o,n,i=[1,1],s){let a=r;r.rank===3&&(a=Y(r,[1,r.shape[0],r.shape[1],r.shape[2]]));let l=t;l.rank===3&&(l=Y(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let u={x:a,dy:l},c={strides:o,pad:n,dimRoundingMode:s,dilations:i,filterShape:e};return P.runKernel(dl,u,c)}var d_=T({depthwiseConv2dNativeBackpropFilter_:z5});function U5(r,t,e,o,n,i=[1,1],s){let a=t,l=!1;t.rank===3&&(l=!0,a=Y(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let u={dy:a,filter:e},c={strides:o,pad:n,dimRoundingMode:s,dilations:i,inputShape:r},p=P.runKernel(ml,u,c);return l?Y(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var m_=T({depthwiseConv2dNativeBackpropInput_:U5});function G5({x:r,filter:t,strides:e,pad:o,dataFormat:n="NHWC",dilations:i=[1,1],dimRoundingMode:s,bias:a,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(Bs(P.state.gradientDepth,l)===!1){let F=Qu(r,t,e,o,n,i,s);return a!=null&&(F=fe(F,a)),Ms(F,l,u,c)}let p=C(r,"x","depthwiseConv2d","float32"),d=C(t,"filter","depthwiseConv2d","float32"),m=p,f=!1;p.rank===3&&(f=!0,m=Y(p,[1,p.shape[0],p.shape[1],p.shape[2]])),A(m.rank===4,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${m.rank}.`),A(d.rank===4,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${d.rank}.`),A(m.shape[3]===d.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${m.shape[3]}) must match the inChannels dimension in filter ${d.shape[2]}.`),i==null&&(i=[1,1]),A(cr(e,i),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${e} and dilations '${i}'`),Ft("fused depthwiseConv2d",o,s);let g=Es(m.shape,d.shape,e,i,o,s,!0),x;a!=null&&(x=C(a,"bias","fused conv2d"),[x]=He(x,p),Je(g.outShape,x.shape));let y;u!=null&&(y=C(u,"prelu weights","fused depthwiseConv2d"));let v=(F,M)=>{A(Ts(i),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${i}'`);let[z,H,K,j]=M,J=Os(F,K,l),ue=m_(H.shape,J,z,e,o,i,s),ce=d_(H,J,z.shape,e,o,i,s);if(j!=null){let xe=Ls(x,J);return[ue,ce,xe]}return[ue,ce]},k={x:m,filter:d,bias:x,preluActivationWeights:y},N={strides:e,pad:o,dataFormat:n,dilations:i,dimRoundingMode:s,activation:l,leakyreluAlpha:c};return a==null?Dr((M,z,H)=>{let K=P.runKernel(gs,k,N);return H([z,M,K]),f&&(K=Y(K,[K.shape[1],K.shape[2],K.shape[3]])),{value:K,gradFunc:v}})(m,d):Dr((M,z,H,K)=>{let j=P.runKernel(gs,k,N);return K([z,M,j,H]),f&&(j=Y(j,[j.shape[1],j.shape[2],j.shape[3]])),{value:j,gradFunc:v}})(m,d,x)}var f_=T({fusedDepthwiseConv2d_:G5});function H5({a:r,b:t,transposeA:e=!1,transposeB:o=!1,bias:n,activation:i="linear",preluActivationWeights:s,leakyreluAlpha:a=.2}){if(Bs(P.state.gradientDepth,i)===!1){let J=et(r,t,e,o);return n!=null&&(J=fe(J,n)),Ms(J,i,s,a)}let l=C(r,"a","fused matMul"),u=C(t,"b","fused matMul");[l,u]=He(l,u);let c=e?l.shape[l.rank-2]:l.shape[l.rank-1],p=o?u.shape[u.rank-1]:u.shape[u.rank-2],d=e?l.shape[l.rank-1]:l.shape[l.rank-2],m=o?u.shape[u.rank-2]:u.shape[u.rank-1],f=l.shape.slice(0,-2),g=u.shape.slice(0,-2),x=Ke(f),y=Ke(g);A(c===p,()=>`Error in fused matMul: inner shapes (${c}) and (${p}) of Tensors with shapes ${l.shape} and ${u.shape} and transposeA=${e} and transposeB=${o} must match.`);let k=Je(l.shape.slice(0,-2),u.shape.slice(0,-2)).concat([d,m]),N=e?Y(l,[x,c,d]):Y(l,[x,d,c]),F=o?Y(u,[y,m,p]):Y(u,[y,p,m]),M;n!=null&&(M=C(n,"bias","fused matMul"),[M]=He(M,l),Je(k,M.shape));let z;s!=null&&(z=C(s,"prelu weights","fused matMul"));let H=(J,ue)=>{let[ce,xe,be,Ie]=ue,qe=Os(Y(J,be.shape),be,i),je,it;if(!e&&!o?(je=et(qe,xe,!1,!0),it=et(ce,qe,!0,!1)):!e&&o?(je=et(qe,xe,!1,!1),it=et(qe,ce,!0,!1)):e&&!o?(je=et(xe,qe,!1,!0),it=et(ce,qe,!1,!1)):(je=et(xe,qe,!0,!0),it=et(qe,ce,!0,!0)),n!=null){let qt=Ls(Ie,qe);return[je,it,qt]}else return[je,it]},K={a:N,b:F,bias:M,preluActivationWeights:z},j={transposeA:e,transposeB:o,activation:i,leakyreluAlpha:a};return n==null?Dr((ue,ce,xe)=>{let be=P.runKernel(fs,K,j);return xe([ue,ce,be]),{value:Y(be,k),gradFunc:H}})(N,F):Dr((ue,ce,xe,be)=>{let Ie=P.runKernel(fs,K,j);return be([ue,ce,Ie,xe]),{value:Y(Ie,k),gradFunc:H}})(N,F,M)}var h_=T({fusedMatMul_:H5});function K5(r){return yp(r,.54,.46)}var g_=T({hammingWindow_:K5});function q5(r){return yp(r,.5,.5)}var df=T({hannWindow_:q5});function j5(r,t,e,o=!1,n=0){let i=0,s=[];for(;i+t<=r.size;)s.push(Fe(r,i,t)),i+=e;if(o)for(;i<r.size;){let a=i+t-r.size,l=dt([Fe(r,i,t-a),on([a],n)]);s.push(l),i+=e}return s.length===0?vr([],[0,t]):Y(dt(s),[s.length,t])}var mf=T({frame_:j5});function X5(r,t,e,o,n=df){o==null&&(o=Dy(t));let i=mf(r,t,e),s=se(i,n(t));return tc(s,o)}var x_=T({stft_:X5});function Y5(r,t,e,o,n="bilinear",i=0){let s=C(r,"image","cropAndResize"),a=C(t,"boxes","cropAndResize","float32"),l=C(e,"boxInd","cropAndResize","int32"),u=a.shape[0];A(s.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${s.rank}.`),A(a.rank===2&&a.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${a.shape}.`),A(l.rank===1&&l.shape[0]===u,()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${a.shape}.`),A(o.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${o.length}.`),A(o[0]>=1&&o[1]>=1,()=>`cropSize must be atleast [1,1], but was ${o}`),A(n==="bilinear"||n==="nearest",()=>`method must be bilinear or nearest, but was ${n}`);let c={image:s,boxes:a,boxInd:l},p={method:n,extrapolationValue:i,cropSize:o};return P.runKernel(ll,c,p)}var y_=T({cropAndResize_:Y5});function Q5(r){let t=C(r,"image","flipLeftRight","float32");A(t.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`);let e={image:t};return P.runKernel(Cl,e,{})}var b_=T({flipLeftRight_:Q5});function Z5(r){let t=C(r,"image","grayscaleToRGB"),e=t.rank-1,o=t.shape[e];A(t.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`),A(o===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${o}.`);let n=new Array(t.rank);return n.fill(1,0,e),n[e]=3,Ri(t,n)}var v_=T({grayscaleToRGB_:Z5});function J5(r){let t=C(r,"image","RGBToGrayscale"),e=t.rank-1,o=t.shape[e];A(t.rank>=2,()=>`Error in RGBToGrayscale: images must be at least rank 2, but got rank ${t.rank}.`),A(o===3,()=>`Error in RGBToGrayscale: last dimension of an RGB image should be size 3, but got size ${o}.`);let n=t.dtype,i=Ue(t,"float32"),s=Rt([.2989,.587,.114]),a;switch(t.rank){case 2:a=Ni("ij,j->i",i,s);break;case 3:a=Ni("ijk,k->ij",i,s);break;case 4:a=Ni("ijkl,l->ijk",i,s);break;case 5:a=Ni("ijklm,m->ijkl",i,s);break;case 6:a=Ni("ijklmn,n->ijklm",i,s);break;default:throw new Error("Not a valid tensor rank.")}return a=pr(a,-1),Ue(a,n)}var S_=T({rgbToGrayscale_:J5});function eG(r,t,e=0,o=.5){let n=C(r,"image","rotateWithOffset","float32");A(n.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${n.rank}.`);let i={image:n},s={radians:t,fillValue:e,center:o};return P.runKernel(Mu,i,s)}var w_=T({rotateWithOffset_:eG});function _o(r,t,e,o,n,i){o==null&&(o=.5),n==null&&(n=Number.NEGATIVE_INFINITY),i==null&&(i=0);let s=r.shape[0];return e=Math.min(e,s),A(0<=o&&o<=1,()=>`iouThreshold must be in [0, 1], but was '${o}'`),A(r.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${r.rank}'`),A(r.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${r.shape[1]}`),A(t.rank===1,()=>"scores must be a 1D tensor"),A(t.shape[0]===s,()=>`scores has incompatible shape with boxes. Expected ${s}, but was ${t.shape[0]}`),A(0<=i&&i<=1,()=>`softNmsSigma must be in [0, 1], but was '${i}'`),{maxOutputSize:e,iouThreshold:o,scoreThreshold:n,softNmsSigma:i}}function tG(r,t,e,o=.5,n=Number.NEGATIVE_INFINITY){let i=C(r,"boxes","nonMaxSuppression","float32"),s=C(t,"scores","nonMaxSuppression","float32"),a=_o(i,s,e,o,n);e=a.maxOutputSize,o=a.iouThreshold,n=a.scoreThreshold;let l={maxOutputSize:e,iouThreshold:o,scoreThreshold:n};return P.runKernel(jl,{boxes:i,scores:s},l)}var C_=T({nonMaxSuppression_:tG});function __(r,t,e){let o=rG(r,t,e),n=o<0?-(o+1):o;r.splice(n,0,t)}function rG(r,t,e){return nG(r,t,e||oG)}function oG(r,t){return r>t?1:r<t?-1:0}function nG(r,t,e){let o=0,n=r.length,i=0,s=!1;for(;o<n;){i=o+(n-o>>>1);let a=e(t,r[i]);a>0?o=i+1:(n=i,s=!a)}return s?o:-o-1}function ff(r,t,e,o,n){return Fy(r,t,e,o,n,0)}function hf(r,t,e,o,n,i){return Fy(r,t,e,o,n,0,!1,i,!0)}function gf(r,t,e,o,n,i){return Fy(r,t,e,o,n,i,!0)}function Fy(r,t,e,o,n,i,s=!1,a=!1,l=!1){let u=[];for(let x=0;x<t.length;x++)t[x]>n&&u.push({score:t[x],boxIndex:x,suppressBeginIndex:0});u.sort(k_);let c=i>0?-.5/i:0,p=[],d=[];for(;p.length<e&&u.length>0;){let x=u.pop(),{score:y,boxIndex:v,suppressBeginIndex:k}=x;if(y<n)break;let N=!1;for(let F=p.length-1;F>=k;--F){let M=iG(r,v,p[F]);if(M>=o){N=!0;break}if(x.score=x.score*sG(o,c,M),x.score<=n)break}x.suppressBeginIndex=p.length,N||(x.score===y?(p.push(v),d.push(x.score)):x.score>n&&__(u,x,k_))}let m=p.length,f=e-m;a&&f>0&&(p.push(...new Array(f).fill(0)),d.push(...new Array(f).fill(0)));let g={selectedIndices:p};return s&&(g.selectedScores=d),l&&(g.validOutputs=m),g}function iG(r,t,e){let o=r.subarray(t*4,t*4+4),n=r.subarray(e*4,e*4+4),i=Math.min(o[0],o[2]),s=Math.min(o[1],o[3]),a=Math.max(o[0],o[2]),l=Math.max(o[1],o[3]),u=Math.min(n[0],n[2]),c=Math.min(n[1],n[3]),p=Math.max(n[0],n[2]),d=Math.max(n[1],n[3]),m=(a-i)*(l-s),f=(p-u)*(d-c);if(m<=0||f<=0)return 0;let g=Math.max(i,u),x=Math.max(s,c),y=Math.min(a,p),v=Math.min(l,d),k=Math.max(y-g,0)*Math.max(v-x,0);return k/(m+f-k)}function sG(r,t,e){let o=Math.exp(t*e*e);return e<=r?o:0}function k_(r,t){return r.score-t.score||r.score===t.score&&t.boxIndex-r.boxIndex}function aG(i,s,a){return X(this,arguments,function*(r,t,e,o=.5,n=Number.NEGATIVE_INFINITY){let l=C(r,"boxes","nonMaxSuppressionAsync"),u=C(t,"scores","nonMaxSuppressionAsync"),c=_o(l,u,e,o,n);e=c.maxOutputSize,o=c.iouThreshold,n=c.scoreThreshold;let p=yield Promise.all([l.data(),u.data()]),d=p[0],m=p[1],{selectedIndices:f}=ff(d,m,e,o,n);return l!==r&&l.dispose(),u!==t&&u.dispose(),Rt(f,"int32")})}var I_=aG;function lG(r,t,e,o=.5,n=Number.NEGATIVE_INFINITY,i=0){let s=C(r,"boxes","nonMaxSuppression"),a=C(t,"scores","nonMaxSuppression"),l=_o(s,a,e,o,n,i);e=l.maxOutputSize,o=l.iouThreshold,n=l.scoreThreshold,i=l.softNmsSigma;let u={boxes:s,scores:a},c={maxOutputSize:e,iouThreshold:o,scoreThreshold:n,softNmsSigma:i},p=P.runKernel(Xl,u,c);return{selectedIndices:p[0],selectedScores:p[1]}}var T_=T({nonMaxSuppressionWithScore_:lG});function uG(s,a,l){return X(this,arguments,function*(r,t,e,o=.5,n=Number.NEGATIVE_INFINITY,i=0){let u=C(r,"boxes","nonMaxSuppressionAsync"),c=C(t,"scores","nonMaxSuppressionAsync"),p=_o(u,c,e,o,n,i);e=p.maxOutputSize,o=p.iouThreshold,n=p.scoreThreshold,i=p.softNmsSigma;let d=yield Promise.all([u.data(),c.data()]),m=d[0],f=d[1],{selectedIndices:g,selectedScores:x}=gf(m,f,e,o,n,i);return u!==r&&u.dispose(),c!==t&&c.dispose(),{selectedIndices:Rt(g,"int32"),selectedScores:Rt(x)}})}var E_=uG;function cG(r,t,e,o=.5,n=Number.NEGATIVE_INFINITY,i=!1){let s=C(r,"boxes","nonMaxSuppression"),a=C(t,"scores","nonMaxSuppression"),l=_o(s,a,e,o,n,null),u=l.maxOutputSize,c=l.iouThreshold,p=l.scoreThreshold,d={boxes:s,scores:a},m={maxOutputSize:u,iouThreshold:c,scoreThreshold:p,padToMaxOutputSize:i},f=P.runKernel(qd,d,m);return{selectedIndices:f[0],validOutputs:f[1]}}var N_=T({nonMaxSuppressionPadded_:cG});function pG(s,a,l){return X(this,arguments,function*(r,t,e,o=.5,n=Number.NEGATIVE_INFINITY,i=!1){let u=C(r,"boxes","nonMaxSuppressionAsync"),c=C(t,"scores","nonMaxSuppressionAsync"),p=_o(u,c,e,o,n,null),d=p.maxOutputSize,m=p.iouThreshold,f=p.scoreThreshold,[g,x]=yield Promise.all([u.data(),c.data()]),{selectedIndices:y,validOutputs:v}=hf(g,x,d,m,f,i);return u!==r&&u.dispose(),c!==t&&c.dispose(),{selectedIndices:Rt(y,"int32"),validOutputs:Ee(v,"int32")}})}var R_=pG;function dG(r,t,e=!1,o=!1){let n=C(r,"images","resizeBilinear");A(n.rank===3||n.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${n.rank}.`),A(t.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`),A(o===!1||e===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let i=n,s=!1;n.rank===3&&(s=!0,i=Y(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let[]=t,a={images:i},l={alignCorners:e,halfPixelCenters:o,size:t},u=P.runKernel(au,a,l);return s?Y(u,[u.shape[1],u.shape[2],u.shape[3]]):u}var $_=T({resizeBilinear_:dG});function mG(r,t,e=!1,o=!1){let n=C(r,"images","resizeNearestNeighbor");A(n.rank===3||n.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${n.rank}.`),A(t.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`),A(n.dtype==="float32"||n.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),A(o===!1||e===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let i=n,s=!1;n.rank===3&&(s=!0,i=Y(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let[]=t,a={images:i},l={alignCorners:e,halfPixelCenters:o,size:t},u=P.runKernel(su,a,l);return s?Y(u,[u.shape[1],u.shape[2],u.shape[3]]):u}var P_=T({resizeNearestNeighbor_:mG});function fG(r,t="binary",e=!1,o=.5){let n=C(r,"image","threshold"),i=.2989,s=.587,a=.114,l=n.shape[0]*n.shape[1],u=se(Rt([o]),255),c,p,d,m;if(A(n.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${n.rank}.`),A(n.shape[2]===3||n.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${n.shape[2]}.`),A(n.dtype==="int32"||n.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${n.dtype}.`),A(t==="otsu"||t==="binary",()=>`Method must be binary or otsu, but was ${t}`),n.shape[2]===3){[c,p,d]=$n(n,[1,1,1],-1);let x=se(c,i),y=se(p,s),v=se(d,a);m=fe(fe(x,y),v)}else m=r;if(t==="otsu"){let x=Em(Ue(of(m),"int32"),xr([]),256);u=hG(x,l)}let f=e?Zu(m,u):Rs(m,u);return Ue(se(f,255),"int32")}function hG(r,t){let e=Rt([-1]),o=Rt([0]),n=Rt([0]),i,s,a,l,u,c;for(let p=0;p<r.size-1;p++){i=Fe(r,0,p+1),s=Fe(r,p+1),u=Ae(tt(i),t),c=Ae(tt(s),t);let d=tt(se(i,Pi(0,i.size)));a=Ae(d,tt(i));let m=on(s.shape,i.size),f=fe(Pi(0,s.size),m),g=se(s,f);l=Ae(tt(g),tt(s));let x=Ne(a,l),y=Ne(a,l),v=se(u,c);n=se(se(v,x),y);let k=Rs(n,o);o=lo(k,n,o),e=lo(k,Rt([p]),e)}return e}var D_=T({threshold_:fG});function gG(r,t,e="nearest",o="constant",n=0,i){let s=C(r,"image","transform","float32"),a=C(t,"transforms","transform","float32");A(s.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${s.rank}.`),A(a.rank===2&&(a.shape[0]===s.shape[0]||a.shape[0]===1)&&a.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),A(i==null||i.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${i}.`);let l={image:s,transforms:a},u={interpolation:e,fillMode:o,fillValue:n,outputShape:i};return P.runKernel(Du,l,u)}var A_=T({transform_:gG});function xG(r,t,e){let o=C(r,"a","bandPart");A(o.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${o.rank}.`);let n=o.shape,[i,s]=o.shape.slice(-2),a,l;typeof t=="number"?(A(t%1===0,()=>`bandPart(): numLower must be an integer, got ${t}.`),A(t<=i,()=>`bandPart(): numLower (${t}) must not be greater than the number of rows (${i}).`),a=C(t<0?i:t,"numLower","bandPart")):(A(t.dtype==="int32",()=>"bandPart(): numLower's dtype must be an int32."),a=lo(hp(t,0),i,Nn(t,i))),typeof e=="number"?(A(e%1===0,()=>`bandPart(): numUpper must be an integer, got ${e}.`),A(e<=s,()=>`bandPart(): numUpper (${e}) must not be greater than the number of columns (${s}).`),l=C(e<0?s:e,"numUpper","bandPart")):(A(e.dtype==="int32",()=>"bandPart(): numUpper's dtype must be an int32."),l=lo(hp(e,0),s,Nn(e,s)));let u=Y(Pi(0,i,1,"int32"),[-1,1]),c=Pi(0,s,1,"int32"),p=Ne(u,c),d=$s(Zu(p,a),Lm(p,er(l))),m=yr([i,s],o.dtype);return Y(br(co(Y(o,[-1,i,s])).map(f=>lo(d,f,m))),n)}var F_=T({bandPart_:xG});function yG(r){let t;if(Array.isArray(r)){t=!1,A(r!=null&&r.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");let n=r[0].shape[0];for(let i=1;i<r.length;++i)A(r[i].shape[0]===n,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${r[i].shape[0]} vs. ${n})`)}else t=!0,r=$n(r,r.shape[0],0).map(n=>lt(n,[0]));A(r.length<=r[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${r.length}) exceeds number of dimensions (${r[0].shape[0]}).`);let e=[],o=r;for(let n=0;n<r.length;++n)e.push(P.tidy(()=>{let i=o[n];if(n>0)for(let s=0;s<n;++s){let a=se(tt(se(e[s],i)),e[s]);i=Ne(i,a)}return Ae(i,Ns(i,"euclidean"))}));return t?br(e,0):e}var O_=T({gramSchmidt_:yG});function bG(r,t=!1){if(A(r.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${r.rank}`),r.rank===2)return L_(r,t);{let e=r.shape.slice(0,r.shape.length-2).reduce((l,u)=>l*u),o=co(Y(r,[e,r.shape[r.shape.length-2],r.shape[r.shape.length-1]]),0),n=[],i=[];o.forEach(l=>{let[u,c]=L_(l,t);n.push(u),i.push(c)});let s=Y(br(n,0),r.shape),a=Y(br(i,0),r.shape);return[s,a]}}function L_(r,t=!1){return P.tidy(()=>{A(r.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${r.shape.length}D Tensor.`);let e=r.shape[0],o=r.shape[1],n=Am(e),i=Hr(r),s=vr([[1]],[1,1]),a=Hr(s),l=e>=o?o:e;for(let u=0;u<l;++u){let c=i,p=a,d=n;[a,i,n]=P.tidy(()=>{let m=Fe(i,[u,u],[e-u,1]),f=Ns(m),g=Fe(i,[u,u],[1,1]),x=lo(Rs(g,0),vr([[-1]]),vr([[1]])),y=Ne(g,se(x,f)),v=Ae(m,y);v.shape[0]===1?a=Hr(s):a=dt([s,Fe(v,[1,0],[v.shape[0]-1,v.shape[1]])],0);let k=er(Ae(et(x,y),f)),N=Fe(i,[u,0],[e-u,o]),F=se(k,a),M=pf(a);if(u===0)i=Ne(N,et(F,et(M,N)));else{let K=Ne(N,et(F,et(M,N)));i=dt([Fe(i,[0,0],[u,o]),K],0)}let z=pf(F),H=Fe(n,[0,u],[e,n.shape[1]-u]);if(u===0)n=Ne(H,et(et(H,a),z));else{let K=Ne(H,et(et(H,a),z));n=dt([Fe(n,[0,0],[e,u]),K],1)}return[a,i,n]}),Xe([c,p,d])}return!t&&e>o&&(n=Fe(n,[0,0],[e,o]),i=Fe(i,[0,0],[o,o])),[n,i]})}var M_=T({qr_:bG});var Ot=function(r){return r[r.NONE=0]="NONE",r[r.MEAN=1]="MEAN",r[r.SUM=2]="SUM",r[r.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS",r}(Ot||{});function vG(r,t,e=Ot.SUM_BY_NONZERO_WEIGHTS){let o=C(r,"losses","computeWeightedLoss"),n=null;t!=null&&(n=C(t,"weights","computeWeightedLoss"));let i=n==null?o:se(o,n);if(e===Ot.NONE)return i;if(e===Ot.SUM)return tt(i);if(e===Ot.MEAN){if(n==null)return Ps(i);{let s=o.size/n.size,a=Ae(tt(i),tt(n));return s>1?Ae(a,Ee(s)):a}}if(e===Ot.SUM_BY_NONZERO_WEIGHTS){if(n==null)return Ae(tt(i),Ee(o.size));{let s=se(n,an(o.shape)),a=Ue(tt(jm(s,Ee(0))),"float32");return Ae(tt(i),a)}}throw Error(`Unknown reduction: ${e}`)}var tr=T({computeWeightedLoss_:vG});function SG(r,t,e,o=Ot.SUM_BY_NONZERO_WEIGHTS){let n=C(r,"labels","absoluteDifference"),i=C(t,"predictions","absoluteDifference"),s=null;e!=null&&(s=C(e,"weights","absoluteDifference")),Nt(n.shape,i.shape,"Error in absoluteDifference: ");let a=Yt(Ne(n,i));return tr(a,s,o)}var B_=T({absoluteDifference_:SG});function wG(r,t,e,o,n=Ot.SUM_BY_NONZERO_WEIGHTS){let i=C(r,"labels","cosineDistance"),s=C(t,"predictions","cosineDistance"),a=null;o!=null&&(a=C(o,"weights","cosineDistance")),Nt(i.shape,s.shape,"Error in cosineDistance: ");let l=Ee(1),u=Ne(l,tt(se(i,s),e,!0));return tr(u,a,n)}var V_=T({cosineDistance_:wG});function CG(r,t,e,o=Ot.SUM_BY_NONZERO_WEIGHTS){let n=C(r,"labels","hingeLoss"),i=C(t,"predictions","hingeLoss"),s=null;e!=null&&(s=C(e,"weights","hingeLoss")),Nt(n.shape,i.shape,"Error in hingeLoss: ");let a=Ee(1);n=Ne(se(Ee(2),n),a);let l=Di(Ne(a,se(n,i)));return tr(l,s,o)}var W_=T({hingeLoss_:CG});function _G(r,t,e,o=1,n=Ot.SUM_BY_NONZERO_WEIGHTS){let i=C(r,"labels","huberLoss"),s=C(t,"predictions","huberLoss"),a=null;e!=null&&(a=C(e,"weights","huberLoss")),Nt(i.shape,s.shape,"Error in huberLoss: ");let l=Ee(o),u=Yt(Ne(s,i)),c=Nn(u,l),p=Ne(u,c),d=fe(se(Ee(.5),zt(c)),se(l,p));return tr(d,a,n)}var z_=T({huberLoss_:_G});function kG(r,t,e,o=1e-7,n=Ot.SUM_BY_NONZERO_WEIGHTS){let i=C(r,"labels","logLoss"),s=C(t,"predictions","logLoss"),a=null;e!=null&&(a=C(e,"weights","logLoss")),Nt(i.shape,s.shape,"Error in logLoss: ");let l=Ee(1),u=Ee(o),c=er(se(i,En(fe(s,u)))),p=se(Ne(l,i),En(fe(Ne(l,s),u))),d=Ne(c,p);return tr(d,a,n)}var U_=T({logLoss_:kG});function IG(r,t,e,o=Ot.SUM_BY_NONZERO_WEIGHTS){let n=C(r,"labels","meanSquaredError"),i=C(t,"predictions","meanSquaredError"),s=null;e!=null&&(s=C(e,"weights","meanSquaredError")),Nt(n.shape,i.shape,"Error in meanSquaredError: ");let a=sf(n,i);return tr(a,s,o)}var G_=T({meanSquaredError_:IG});function TG(r,t){let e=C(r,"labels","sigmoidCrossEntropyWithLogits"),o=C(t,"logits","sigmoidCrossEntropyWithLogits");Nt(e.shape,o.shape,"Error in sigmoidCrossEntropyWithLogits: ");let n=Di(o),i=se(o,e),s=Bm(Pr(er(Yt(o))));return fe(Ne(n,i),s)}function EG(r,t,e,o=0,n=Ot.SUM_BY_NONZERO_WEIGHTS){let i=C(r,"multiClassLabels","sigmoidCrossEntropy"),s=C(t,"logits","sigmoidCrossEntropy"),a=null;if(e!=null&&(a=C(e,"weights","sigmoidCrossEntropy")),Nt(i.shape,s.shape,"Error in sigmoidCrossEntropy: "),o>0){let u=Ee(o),c=Ee(1),p=Ee(.5);i=fe(se(i,Ne(c,u)),se(p,u))}let l=TG(i,s);return tr(l,a,n)}var H_=T({sigmoidCrossEntropy_:EG});function NG(r,t,e=-1){if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${e}`);return Dr((n,i,s)=>{let l=Wm(i,[e],!0),u=Ne(Ue(i,"float32"),l);s([n,u]);let c=er(se(u,n));return{value:tt(c,[e]),gradFunc:(m,f)=>{let[g,x]=f,y=In(m.shape,[e]);return[se(Y(m,y),Ne(Ue(g,"float32"),Pr(x))),se(Y(m,y),Ne(Pr(x),Ue(g,"float32")))]}}})(r,t)}function RG(r,t,e,o=0,n=Ot.SUM_BY_NONZERO_WEIGHTS){let i=C(r,"onehotLabels","softmaxCrossEntropy"),s=C(t,"logits","softmaxCrossEntropy"),a=null;if(e!=null&&(a=C(e,"weights","softmaxCrossEntropy")),Nt(i.shape,s.shape,"Error in softmaxCrossEntropy: "),o>0){let u=Ee(o),c=Ee(1),p=Ee(i.shape[1]);i=fe(se(i,Ne(c,u)),Ae(u,p))}let l=NG(i,s);return tr(l,a,n)}var K_=T({softmaxCrossEntropy_:RG});function $G(r,t,e,o){let n=C(r,"indices","sparseFillEmptyRows","int32"),i=C(t,"values","sparseFillEmptyRows"),s=C(e,"denseShape","sparseFillEmptyRows","int32"),a=C(o,"defaultValue","sparseFillEmptyRows",i.dtype);if(n.rank!==2)throw new Error(`Indices should be Tensor2D but received shape
        ${n.shape}`);if(i.rank!==1)throw new Error(`Values should be Tensor1D but received shape ${i.shape}`);if(s.rank!==1)throw new Error(`Dense shape should be Tensor1D but received shape ${s.shape}`);if(a.rank!==0)throw new Error(`Default value should be a scalar but received shape ${a.shape}`);let l={indices:n,values:i,denseShape:s,defaultValue:a},u=P.runKernel(Jd,l);return{outputIndices:u[0],outputValues:u[1],emptyRowIndicator:u[2],reverseIndexMap:u[3]}}var q_=T({sparseFillEmptyRows_:$G});function PG(r,t,e){let o=C(r,"inputIndices","sparseReshape","int32"),n=C(t,"inputShape","sparseReshape","int32"),i=C(e,"newShape","sparseReshape","int32");if(o.rank!==2)throw new Error(`Input indices should be Tensor2D but received shape
        ${o.shape}`);if(n.rank!==1)throw new Error(`Input shape should be Tensor1D but received shape ${n.shape}`);if(i.rank!==1)throw new Error(`New shape should be Tensor1D but received shape ${i.shape}`);let s={inputIndices:o,inputShape:n,newShape:i},a=P.runKernel(em,s);return{outputIndices:a[0],outputShape:a[1]}}var j_=T({sparseReshape_:PG});function DG(r,t,e){let o=C(r,"data","sparseSegmentMean"),n=C(t,"indices","sparseSegmentMean","int32"),i=C(e,"segmentIds","sparseSegmentMean","int32");if(o.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(n.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
          ${n.shape}`);if(i.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
          ${i.shape}`);let s={data:o,indices:n,segmentIds:i};return P.runKernel(_u,s)}var X_=T({sparseSegmentMean_:DG});function AG(r,t,e){let o=C(r,"data","sparseSegmentSum"),n=C(t,"indices","sparseSegmentSum","int32"),i=C(e,"segmentIds","sparseSegmentSum","int32");if(o.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(n.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
         ${n.shape}`);if(i.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
         ${i.shape}`);let s={data:o,indices:n,segmentIds:i};return P.runKernel(ku,s)}var Y_=T({sparseSegmentSum_:AG});function FG(r,t,e,o,n,i,s,a){let l=C(r,"data","stringNGrams","string");if(l.dtype!=="string")throw new Error("Data must be of datatype string");if(l.shape.length!==1)throw new Error(`Data must be a vector, saw: ${l.shape}`);let u=C(t,"dataSplits","stringNGrams");if(u.dtype!=="int32")throw new Error("Data splits must be of datatype int32");let c={separator:e,nGramWidths:o,leftPad:n,rightPad:i,padWidth:s,preserveShortSequences:a},p={data:l,dataSplits:u},d=P.runKernel(Nu,p,c);return{nGrams:d[0],nGramsSplits:d[1]}}var Q_=T({stringNGrams_:FG});function OG(r,t,e=!0){let o=C(r,"input","stringSplit","string"),n=C(t,"delimiter","stringSplit","string");if(o.rank!==1)throw new Error(`Input should be Tensor1D but received shape ${o.shape}`);if(n.rank!==0)throw new Error(`Delimiter should be a scalar but received shape ${n.shape}`);let i={skipEmpty:e},s={input:o,delimiter:n},a=P.runKernel(rm,s,i);return{indices:a[0],values:a[1],shape:a[2]}}var Z_=T({stringSplit_:OG});function LG(r,t){let e=C(r,"input","stringToHashBucketFast","string"),o={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");let n={input:e};return P.runKernel(om,n,o)}var J_=T({stringToHashBucketFast_:LG});function MG(r,t,e,o=!0){let n=C(r,"input","staticRegexReplace","string"),i={pattern:t,rewrite:e,replaceGlobal:o};return P.runKernel(Tu,{x:n},i)}var ek=T({staticRegexReplace_:MG});var BG={fft:ec,ifft:Fs,rfft:tc,irfft:nf},VG={hammingWindow:g_,hannWindow:df,frame:mf,stft:x_},Pn={flipLeftRight:b_,grayscaleToRGB:v_,resizeNearestNeighbor:P_,resizeBilinear:$_,rgbToGrayscale:S_,rotateWithOffset:w_,cropAndResize:y_,nonMaxSuppression:C_,nonMaxSuppressionAsync:I_,nonMaxSuppressionWithScore:T_,nonMaxSuppressionWithScoreAsync:E_,nonMaxSuppressionPadded:N_,nonMaxSuppressionPaddedAsync:R_,threshold:D_,transform:A_},WG={bandPart:F_,gramSchmidt:O_,qr:M_},zG={absoluteDifference:B_,computeWeightedLoss:tr,cosineDistance:V_,hingeLoss:W_,huberLoss:z_,logLoss:U_,meanSquaredError:G_,sigmoidCrossEntropy:H_,softmaxCrossEntropy:K_},UG={sparseFillEmptyRows:q_,sparseReshape:j_,sparseSegmentMean:X_,sparseSegmentSum:Y_},GG={stringNGrams:Q_,stringSplit:Z_,stringToHashBucketFast:J_,staticRegexReplace:ek};var HG=new Map,KG=new Map,xf=class{getClassName(){return this.constructor.className}static fromConfig(t,e){return new t(e)}},Oy=class r{constructor(){this.classNameMap={}}static getMap(){return r.instance==null&&(r.instance=new r),r.instance}static register(t){r.getMap().classNameMap[t.className]=[t,t.fromConfig]}};function tk(r,t,e){A(r.className!=null,()=>"Class being registered does not have the static className property defined."),A(typeof r.className=="string",()=>"className is required to be a string, but got type "+typeof r.className),A(r.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),typeof t>"u"&&(t="Custom"),typeof e>"u"&&(e=r.className);let o=e,n=t+">"+o;return Oy.register(r),HG.set(n,r),KG.set(r,n),r}var Ar=class extends xf{minimize(t,e=!1,o){let{value:n,grads:i}=this.computeGradients(t,o);if(o!=null){let s=o.map(a=>({name:a.name,tensor:i[a.name]}));this.applyGradients(s)}else this.applyGradients(i);return Xe(i),e?n:(n.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(t,e){return V2(t,e)}dispose(){this.iterations_!=null&&Xe(this.iterations_)}saveIterations(){return X(this,null,function*(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:Ee(this.iterations_,"int32")}})}getWeights(){return X(this,null,function*(){throw new Error("getWeights() is not implemented for this optimizer yet.")})}setWeights(t){return X(this,null,function*(){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)})}extractIterations(t){return X(this,null,function*(){return this.iterations_=(yield t[0].tensor.data())[0],t.slice(1)})}};Object.defineProperty(Ar,Symbol.hasInstance,{value:r=>r.minimize!=null&&r.computeGradients!=null&&r.applyGradients!=null});var yf=class extends Ar{static get className(){return"Adadelta"}constructor(t,e,o=null){super(),this.learningRate=t,this.rho=e,this.epsilon=o,this.accumulatedGrads=[],this.accumulatedUpdates=[],o==null&&(this.epsilon=P.backend.epsilon())}applyGradients(t){(Array.isArray(t)?t.map(o=>o.name):Object.keys(t)).forEach((o,n)=>{let i=P.registeredVariables[o],s=!1;this.accumulatedGrads[n]==null&&(this.accumulatedGrads[n]={originalName:`${o}/accum_grad`,variable:Te(()=>Wt(i).variable(s))}),this.accumulatedUpdates[n]==null&&(this.accumulatedUpdates[n]={originalName:`${o}/accum_var`,variable:Te(()=>Wt(i).variable(s))});let a=Array.isArray(t)?t[n].tensor:t[o];if(a==null)return;let l=this.accumulatedGrads[n].variable,u=this.accumulatedUpdates[n].variable;Te(()=>{let c=fe(se(l,this.rho),se(zt(a),1-this.rho)),p=se(Ae($r(fe(u,this.epsilon)),$r(fe(l,this.epsilon))),a),d=fe(se(u,this.rho),se(zt(p),1-this.rho));l.assign(c),u.assign(d);let m=fe(se(p,-this.learningRate),i);i.assign(m)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(Xe(this.accumulatedGrads.map(t=>t.variable)),Xe(this.accumulatedUpdates.map(t=>t.variable)))}getWeights(){return X(this,null,function*(){let t=[...this.accumulatedGrads,...this.accumulatedUpdates];return[yield this.saveIterations()].concat(t.map(e=>({name:e.originalName,tensor:e.variable})))})}setWeights(t){return X(this,null,function*(){t=yield this.extractIterations(t);let e=t.length/2,o=!1;this.accumulatedGrads=t.slice(0,e).map(n=>({originalName:n.name,variable:n.tensor.variable(o)})),this.accumulatedUpdates=t.slice(e,e*2).map(n=>({originalName:n.name,variable:n.tensor.variable(o)}))})}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.rho,e.epsilon)}};var bf=class extends Ar{static get className(){return"Adagrad"}constructor(t,e=.1){super(),this.learningRate=t,this.initialAccumulatorValue=e,this.accumulatedGrads=[]}applyGradients(t){(Array.isArray(t)?t.map(o=>o.name):Object.keys(t)).forEach((o,n)=>{let i=P.registeredVariables[o];this.accumulatedGrads[n]==null&&(this.accumulatedGrads[n]={originalName:`${o}/accumulator`,variable:Te(()=>on(i.shape,this.initialAccumulatorValue).variable(!1))});let s=Array.isArray(t)?t[n].tensor:t[o];if(s==null)return;let a=this.accumulatedGrads[n].variable;Te(()=>{let l=fe(a,zt(s));a.assign(l);let u=fe(se(Ae(s,$r(fe(l,P.backend.epsilon()))),-this.learningRate),i);i.assign(u)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&Xe(this.accumulatedGrads.map(t=>t.variable))}getWeights(){return X(this,null,function*(){return[yield this.saveIterations()].concat(this.accumulatedGrads.map(t=>({name:t.originalName,tensor:t.variable})))})}setWeights(t){return X(this,null,function*(){t=yield this.extractIterations(t);let e=!1;this.accumulatedGrads=t.map(o=>({originalName:o.name,variable:o.tensor.variable(e)}))})}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(t,e){return new t(e.learningRate,e.initialAccumulatorValue)}};var vf=class extends Ar{static get className(){return"Adam"}constructor(t,e,o,n=null){super(),this.learningRate=t,this.beta1=e,this.beta2=o,this.epsilon=n,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],Te(()=>{this.accBeta1=Ee(e).variable(),this.accBeta2=Ee(o).variable()}),n==null&&(this.epsilon=P.backend.epsilon())}applyGradients(t){let e=Array.isArray(t)?t.map(o=>o.name):Object.keys(t);Te(()=>{let o=Ne(1,this.accBeta1),n=Ne(1,this.accBeta2);e.forEach((i,s)=>{let a=P.registeredVariables[i],l=!1;this.accumulatedFirstMoment[s]==null&&(this.accumulatedFirstMoment[s]={originalName:`${i}/m`,variable:Te(()=>Wt(a).variable(l))}),this.accumulatedSecondMoment[s]==null&&(this.accumulatedSecondMoment[s]={originalName:`${i}/v`,variable:Te(()=>Wt(a).variable(l))});let u=Array.isArray(t)?t[s].tensor:t[i];if(u==null)return;let c=this.accumulatedFirstMoment[s].variable,p=this.accumulatedSecondMoment[s].variable,d=fe(se(c,this.beta1),se(u,1-this.beta1)),m=fe(se(p,this.beta2),se(zt(u),1-this.beta2)),f=Ae(d,o),g=Ae(m,n);c.assign(d),p.assign(m);let x=fe(se(Ae(f,fe($r(g),this.epsilon)),-this.learningRate),a);a.assign(x)}),this.accBeta1.assign(se(this.accBeta1,this.beta1)),this.accBeta2.assign(se(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&Xe(this.accumulatedFirstMoment.map(t=>t.variable)),this.accumulatedSecondMoment!=null&&Xe(this.accumulatedSecondMoment.map(t=>t.variable))}getWeights(){return X(this,null,function*(){let t=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[yield this.saveIterations()].concat(t.map(e=>({name:e.originalName,tensor:e.variable})))})}setWeights(t){return X(this,null,function*(){t=yield this.extractIterations(t),Te(()=>{this.accBeta1.assign(Tn(this.beta1,this.iterations_+1)),this.accBeta2.assign(Tn(this.beta2,this.iterations_+1))});let e=t.length/2,o=!1;this.accumulatedFirstMoment=t.slice(0,e).map(n=>({originalName:n.name,variable:n.tensor.variable(o)})),this.accumulatedSecondMoment=t.slice(e,e*2).map(n=>({originalName:n.name,variable:n.tensor.variable(o)}))})}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon)}};var Sf=class extends Ar{static get className(){return"Adamax"}constructor(t,e,o,n=null,i=0){super(),this.learningRate=t,this.beta1=e,this.beta2=o,this.epsilon=n,this.decay=i,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],Te(()=>{this.iteration=Ee(0).variable(),this.accBeta1=Ee(e).variable()}),n==null&&(this.epsilon=P.backend.epsilon())}applyGradients(t){let e=Array.isArray(t)?t.map(o=>o.name):Object.keys(t);Te(()=>{let o=Ne(1,this.accBeta1),n=Ae(-this.learningRate,fe(se(this.iteration,this.decay),1));e.forEach((i,s)=>{let a=P.registeredVariables[i],l=!1;this.accumulatedFirstMoment[s]==null&&(this.accumulatedFirstMoment[s]={originalName:`${i}/m`,variable:Wt(a).variable(l)}),this.accumulatedWeightedInfNorm[s]==null&&(this.accumulatedWeightedInfNorm[s]={originalName:`${i}/v`,variable:Wt(a).variable(l)});let u=Array.isArray(t)?t[s].tensor:t[i];if(u==null)return;let c=this.accumulatedFirstMoment[s].variable,p=this.accumulatedWeightedInfNorm[s].variable,d=fe(se(c,this.beta1),se(u,1-this.beta1)),m=se(p,this.beta2),f=Yt(u),g=Km(m,f);c.assign(d),p.assign(g);let x=fe(se(Ae(n,o),Ae(d,fe(g,this.epsilon))),a);a.assign(x)}),this.iteration.assign(fe(this.iteration,1)),this.accBeta1.assign(se(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&Xe(this.accumulatedFirstMoment.map(t=>t.variable)),this.accumulatedWeightedInfNorm!=null&&Xe(this.accumulatedWeightedInfNorm.map(t=>t.variable))}getWeights(){return X(this,null,function*(){throw new Error("getWeights() is not implemented for Adamax yet.")})}setWeights(t){return X(this,null,function*(){throw new Error("setWeights() is not implemented for Adamax yet.")})}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon,e.decay)}};var rc=class extends Ar{static get className(){return"SGD"}constructor(t){super(),this.learningRate=t,this.setLearningRate(t)}applyGradients(t){(Array.isArray(t)?t.map(o=>o.name):Object.keys(t)).forEach((o,n)=>{let i=Array.isArray(t)?t[n].tensor:t[o];if(i==null)return;let s=P.registeredVariables[o];Te(()=>{let a=fe(se(this.c,i),s);s.assign(a)})}),this.incrementIterations()}setLearningRate(t){this.learningRate=t,this.c!=null&&this.c.dispose(),this.c=Rr(Ee(-t))}dispose(){this.c.dispose()}getWeights(){return X(this,null,function*(){return[yield this.saveIterations()]})}setWeights(t){return X(this,null,function*(){if(t=yield this.extractIterations(t),t.length!==0)throw new Error("SGD optimizer does not have settable weights.")})}getConfig(){return{learningRate:this.learningRate}}static fromConfig(t,e){return new t(e.learningRate)}};var wf=class extends rc{static get className(){return"Momentum"}constructor(t,e,o=!1){super(t),this.learningRate=t,this.momentum=e,this.useNesterov=o,this.accumulations=[],this.m=Ee(this.momentum)}applyGradients(t){(Array.isArray(t)?t.map(o=>o.name):Object.keys(t)).forEach((o,n)=>{let i=P.registeredVariables[o];this.accumulations[n]==null&&(this.accumulations[n]={originalName:`${o}/momentum`,variable:Te(()=>Wt(i).variable(!1))});let s=this.accumulations[n].variable,a=Array.isArray(t)?t[n].tensor:t[o];a!=null&&Te(()=>{let l,u=fe(se(this.m,s),a);this.useNesterov?l=fe(se(this.c,fe(a,se(u,this.m))),i):l=fe(se(this.c,u),i),s.assign(u),i.assign(l)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&Xe(this.accumulations.map(t=>t.variable))}setMomentum(t){this.momentum=t}getWeights(){return X(this,null,function*(){return[yield this.saveIterations()].concat(this.accumulations.map(t=>({name:t.originalName,tensor:t.variable})))})}setWeights(t){return X(this,null,function*(){t=yield this.extractIterations(t);let e=!1;this.accumulations=t.map(o=>({originalName:o.name,variable:o.tensor.variable(e)}))})}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(t,e){return new t(e.learningRate,e.momentum,e.useNesterov)}};var Cf=class extends Ar{static get className(){return"RMSProp"}constructor(t,e=.9,o=0,n=null,i=!1){if(super(),this.learningRate=t,this.decay=e,this.momentum=o,this.epsilon=n,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=i,n==null&&(this.epsilon=P.backend.epsilon()),t==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(t){(Array.isArray(t)?t.map(o=>o.name):Object.keys(t)).forEach((o,n)=>{let i=P.registeredVariables[o],s=!1;this.accumulatedMeanSquares[n]==null&&(this.accumulatedMeanSquares[n]={originalName:`${o}/rms`,variable:Te(()=>Wt(i).variable(s))}),this.accumulatedMoments[n]==null&&(this.accumulatedMoments[n]={originalName:`${o}/momentum`,variable:Te(()=>Wt(i).variable(s))}),this.accumulatedMeanGrads[n]==null&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${o}/mg`,variable:Te(()=>Wt(i).variable(s))});let a=Array.isArray(t)?t[n].tensor:t[o];if(a==null)return;let l=this.accumulatedMeanSquares[n].variable,u=this.accumulatedMoments[n].variable;Te(()=>{let c=fe(se(l,this.decay),se(zt(a),1-this.decay));if(this.centered){let p=this.accumulatedMeanGrads[n].variable,d=fe(se(p,this.decay),se(a,1-this.decay)),m=Ae(se(a,this.learningRate),$r(Ne(c,fe(zt(d),this.epsilon)))),f=fe(se(u,this.momentum),m);l.assign(c),p.assign(d),u.assign(f);let g=Ne(i,f);i.assign(g)}else{let p=fe(se(l,this.decay),se(zt(a),1-this.decay)),d=fe(se(u,this.momentum),Ae(se(a,this.learningRate),$r(fe(p,this.epsilon))));l.assign(p),u.assign(d);let m=Ne(i,d);i.assign(m)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&Xe(this.accumulatedMeanSquares.map(t=>t.variable)),this.accumulatedMeanGrads!=null&&this.centered&&Xe(this.accumulatedMeanGrads.map(t=>t.variable)),this.accumulatedMoments!=null&&Xe(this.accumulatedMoments.map(t=>t.variable))}getWeights(){return X(this,null,function*(){let t=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&t.push(...this.accumulatedMeanGrads),[yield this.saveIterations()].concat(t.map(e=>({name:e.originalName,tensor:e.variable})))})}setWeights(t){return X(this,null,function*(){t=yield this.extractIterations(t);let e=this.centered?t.length/3:t.length/2,o=!1;this.accumulatedMeanSquares=t.slice(0,e).map(n=>({originalName:n.name,variable:n.tensor.variable(o)})),this.accumulatedMoments=t.slice(e,e*2).map(n=>({originalName:n.name,variable:n.tensor.variable(o)})),this.centered&&(this.accumulatedMeanGrads=t.slice(e*2,e*3).map(n=>({originalName:n.name,variable:n.tensor.variable(o)})))})}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(t,e){return new t(e.learningRate,e.decay,e.momentum,e.epsilon,e.centered)}};var qG=[yf,bf,vf,Sf,wf,Cf,rc];function rk(){for(let r of qG)tk(r)}var vp={};ct(vp,{CompositeArrayBuffer:()=>Jt,browserFiles:()=>nk,browserHTTPRequest:()=>uk,concatenateArrayBuffers:()=>ww,copyModel:()=>Ow,decodeWeights:()=>xm,decodeWeightsStream:()=>ym,encodeWeights:()=>yw,fromMemory:()=>ck,fromMemorySync:()=>Uy,getLoadHandlers:()=>Iw,getModelArtifactsForJSON:()=>Ku,getModelArtifactsForJSONSync:()=>gy,getModelArtifactsInfoForJSON:()=>en,getSaveHandlers:()=>kw,getWeightSpecs:()=>cp,http:()=>kf,isHTTPScheme:()=>_f,listModels:()=>Aw,loadWeights:()=>sk,moveModel:()=>Lw,registerLoadRouter:()=>_w,registerSaveRouter:()=>Cw,removeModel:()=>Fw,weightsLoaderFactory:()=>Wy,withSaveHandler:()=>pk,withSaveHandlerSync:()=>dk});var jG="model",XG=".json",YG=".weights.bin";function ok(r){return new Promise(t=>setTimeout(t)).then(r)}var Ly=(()=>{class r{constructor(e){if(!G().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(r.URL_SCHEME)&&(e=e.slice(r.URL_SCHEME.length)),(e==null||e.length===0)&&(e=jG),this.modelJsonFileName=e+XG,this.weightDataFileName=e+YG}save(e){return X(this,null,function*(){if(typeof document>"u")throw new Error("Browser downloads are not supported in this environment since `document` is not present");let o=Jt.join(e.weightData),n=window.URL.createObjectURL(new Blob([o],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{let i=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],s=bm(e,i),a=window.URL.createObjectURL(new Blob([JSON.stringify(s)],{type:"application/json"})),l=this.modelJsonAnchor==null?document.createElement("a"):this.modelJsonAnchor;if(l.download=this.modelJsonFileName,l.href=a,yield ok(()=>l.dispatchEvent(new MouseEvent("click"))),e.weightData!=null){let u=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;u.download=this.weightDataFileName,u.href=n,yield ok(()=>u.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:en(e)}}})}}return r.URL_SCHEME="downloads://",r})();var My=class{constructor(t){if(t==null||t.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${t}`);this.jsonFile=t[0],this.weightsFiles=t.slice(1)}load(){return X(this,null,function*(){return new Promise((t,e)=>{let o=new FileReader;o.onload=n=>{let i=JSON.parse(n.target.result),s=i.modelTopology;if(s==null){e(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));return}if(i.weightsManifest==null){e(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));return}if(this.weightsFiles.length===0){t({modelTopology:s});return}let l=Ku(i,u=>this.loadWeights(u));t(l)},o.onerror=n=>e(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),o.readAsText(this.jsonFile)})})}loadWeights(t){let e=[],o=[];for(let s of t)e.push(...s.weights),o.push(...s.paths);let n=this.checkManifestAndWeightFiles(t),i=o.map(s=>this.loadWeightsFile(s,n[s]));return Promise.all(i).then(s=>[e,s])}loadWeightsFile(t,e){return new Promise((o,n)=>{let i=new FileReader;i.onload=s=>{let a=s.target.result;o(a)},i.onerror=s=>n(`Failed to weights data from file of path '${t}'.`),i.readAsArrayBuffer(e)})}checkManifestAndWeightFiles(t){let e=[],o=this.weightsFiles.map(i=>hy(i.name)),n={};for(let i of t)i.paths.forEach(s=>{let a=hy(s);if(e.indexOf(a)!==-1)throw new Error(`Duplicate file basename found in weights manifest: '${a}'`);if(e.push(a),o.indexOf(a)===-1)throw new Error(`Weight file with basename '${a}' is not provided.`);n[s]=this.weightsFiles[o.indexOf(a)]});if(e.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${e.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return n}},QG=r=>G().getBool("IS_BROWSER")&&!Array.isArray(r)&&r.startsWith(Ly.URL_SCHEME)?ZG(r.slice(Ly.URL_SCHEME.length)):null;Ht.registerSaveRouter(QG);function ZG(r="model"){return new Ly(r)}function nk(r){return new My(r)}function By(r,t,e,o){s(r),e=e??0,o=o??1,a(e,o);let n=0,i=l=>(l.then(u=>{let c=e+ ++n/r.length*(o-e);return t(c),u}),l);function s(l){A(l!=null&&Array.isArray(l)&&l.length>0,()=>"promises must be a none empty array")}function a(l,u){A(l>=0&&l<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${l}`),A(u>=0&&u<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${u}`),A(u>=l,()=>`startFraction must be no more than endFraction, but got startFraction ${l} and endFraction ${u}`)}return Promise.all(r.map(i))}function Vy(r,t){return X(this,null,function*(){t==null&&(t={});let e=t.fetchFunc==null?G().platform.fetch:t.fetchFunc,o=r.map(p=>e(p,t.requestInit,{isBinary:!0})),a=(t.onProgress==null?yield Promise.all(o):yield By(o,t.onProgress,0,.5)).map(p=>p.arrayBuffer());return t.onProgress==null?yield Promise.all(a):yield By(a,t.onProgress,.5,1)})}function ik(r,t){var e;let o=t.fetchFunc==null?G().platform.fetch:t.fetchFunc,n=0,i;return(e=t.onProgress)===null||e===void 0||e.call(t,0),new ReadableStream({pull:s=>X(null,null,function*(){for(var a;n<r.length;){i||(i=(yield o(r[n],t.requestInit,{isBinary:!0})).body.getReader());let{done:l,value:u}=yield i.read();if(l){n++,i=void 0,(a=t.onProgress)===null||a===void 0||a.call(t,n/r.length);continue}s.enqueue(u);return}s.close()})})}function sk(r,t="",e,o){return X(this,null,function*(){return Wy(s=>Vy(s,{requestInit:o}))(r,t,e)})}function Wy(r){return(t,e="",o)=>X(null,null,function*(){let n=t.map(()=>!1),i={},s=o!=null?o.map(()=>!1):[],a=[];if(t.forEach((m,f)=>{let g=0;m.weights.forEach(x=>{let y="quantization"in x?x.quantization.dtype:x.dtype,v=_n[y]*Ke(x.shape),k=()=>{n[f]=!0,i[f]==null&&(i[f]=[]),i[f].push({manifestEntry:x,groupOffset:g,sizeBytes:v})};o!=null?o.forEach((N,F)=>{N===x.name&&(k(),s[F]=!0)}):k(),a.push(x.name),g+=v})}),!s.every(m=>m)){let m=o.filter((f,g)=>!s[g]);throw new Error(`Could not find weights in manifest with names: ${m.join(", ")}. 
Manifest JSON has weights with names: ${a.join(", ")}.`)}let l=n.reduce((m,f,g)=>(f&&m.push(g),m),[]),u=[];l.forEach(m=>{t[m].paths.forEach(f=>{let g=e+(e.endsWith("/")?"":"/")+f;u.push(g)})});let c=yield r(u),p={},d=0;return l.forEach(m=>{let f=t[m].paths.length,g=new Jt(c.slice(d,d+f));i[m].forEach(y=>{let v=g.slice(y.groupOffset,y.groupOffset+y.sizeBytes),k=xm(v,[y.manifestEntry]);for(let N in k)p[N]=k[N]}),d+=f}),p})}var JG="application/octet-stream",e6="application/json",ak=(()=>{class r{constructor(e,o){if(this.DEFAULT_METHOD="POST",o==null&&(o={}),this.weightPathPrefix=o.weightPathPrefix,this.weightUrlConverter=o.weightUrlConverter,o.fetchFunc!=null?(A(typeof o.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=o.fetchFunc):this.fetch=G().platform.fetch,A(e!=null&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&A(e.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,o.requestInit!=null&&o.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=o.requestInit||{},this.loadOptions=o}save(e){return X(this,null,function*(){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");let o=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);o.body=new FormData;let n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],i=bm(e,n);if(o.body.append("model.json",new Blob([JSON.stringify(i)],{type:e6}),"model.json"),e.weightData!=null){let a=Jt.join(e.weightData);o.body.append("model.weights.bin",new Blob([a],{type:JG}),"model.weights.bin")}let s=yield this.fetch(this.path,o);if(s.ok)return{modelArtifactsInfo:en(e),responses:[s]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${s.status}.`)})}loadModelJSON(){return X(this,null,function*(){let e=yield this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let o;try{o=yield e.json()}catch{let a=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?a+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":a+=" Please make sure the server is serving valid JSON for this request.",new Error(a)}let n=o.modelTopology,i=o.weightsManifest;if(n==null&&i==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return o})}load(){return X(this,null,function*(){if(this.loadOptions.streamWeights)return this.loadStream();let e=yield this.loadModelJSON();return Ku(e,o=>this.loadWeights(o))})}loadStream(){return X(this,null,function*(){let e=yield this.loadModelJSON(),o=yield this.getWeightUrls(e.weightsManifest),n=cp(e.weightsManifest),i=()=>ik(o,this.loadOptions);return Object.assign(Object.assign({},e),{weightSpecs:n,getWeightStream:i})})}getWeightUrls(e){return X(this,null,function*(){let o=Array.isArray(this.path)?this.path[1]:this.path,[n,i]=t6(o),s=this.weightPathPrefix||n,a=[],l=[];for(let u of e)for(let c of u.paths)this.weightUrlConverter!=null?l.push(this.weightUrlConverter(c)):a.push(s+c+i);return this.weightUrlConverter&&a.push(...yield Promise.all(l)),a})}loadWeights(e){return X(this,null,function*(){let o=yield this.getWeightUrls(e),n=cp(e),i=yield Vy(o,this.loadOptions);return[n,i]})}}return r.URL_SCHEME_REGEX=/^https?:\/\//,r})();function t6(r){let t=r.lastIndexOf("/"),e=r.lastIndexOf("?"),o=r.substring(0,t),n=e>t?r.substring(e):"";return[o+"/",n]}function _f(r){return r.match(ak.URL_SCHEME_REGEX)!=null}var lk=(r,t)=>{if(typeof fetch>"u"&&(t==null||t.fetchFunc==null))return null;{let e=!0;if(Array.isArray(r)?e=r.every(o=>_f(o)):e=_f(r),e)return kf(r,t)}return null};Ht.registerSaveRouter(lk);Ht.registerLoadRouter(lk);function kf(r,t){return new ak(r,t)}function uk(r,t){return kf(r,t)}var bp=class{constructor(t){this.modelArtifacts=t}load(){return this.modelArtifacts}},If=class{constructor(t){this.saveHandler=t}save(t){return this.saveHandler(t)}},zy=class{constructor(t){t.load&&(this.load=()=>Promise.resolve(t.load())),t.save&&(this.save=e=>Promise.resolve(t.save(e)))}};function ck(r,t,e,o){let n=arguments;return new zy(Uy(...n))}function Uy(r,t,e,o){return arguments.length===1?r.modelTopology!=null||r.weightSpecs!=null?new bp(r):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new bp({modelTopology:r})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new bp({modelTopology:r,weightSpecs:t,weightData:e,trainingConfig:o}))}function pk(r){return new If(r)}function dk(r){return new If(r)}var Ai={};ct(Ai,{draw:()=>u6,fromPixels:()=>c6,fromPixelsAsync:()=>s6,toPixels:()=>l6});var Vs,mk=!1;function fk(r,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(r==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let e=!1,o=!1,n=!1,i=!1,s=!1,a=!1;if(r.data instanceof Uint8Array)e=!0;else if(typeof ImageData<"u"&&r instanceof ImageData)o=!0;else if(typeof HTMLVideoElement<"u"&&r instanceof HTMLVideoElement)n=!0;else if(typeof HTMLImageElement<"u"&&r instanceof HTMLImageElement)i=!0;else if(r.getContext!=null)s=!0;else if(typeof ImageBitmap<"u"&&r instanceof ImageBitmap)a=!0;else throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${r.constructor.name}`);if(Bu(ms,P.backendName)!=null){let f={pixels:r},g={numChannels:t};return P.runKernel(ms,f,g)}let[u,c]=n?[r.videoWidth,r.videoHeight]:[r.width,r.height],p;if(s)p=r.getContext("2d").getImageData(0,0,u,c).data;else if(o||e)p=r.data;else if(i||n||a){if(Vs==null)if(typeof document>"u")if(typeof OffscreenCanvas<"u"&&typeof OffscreenCanvasRenderingContext2D<"u")Vs=new OffscreenCanvas(1,1).getContext("2d");else throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");else Vs=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});Vs.canvas.width=u,Vs.canvas.height=c,Vs.drawImage(r,0,0,u,c),p=Vs.getImageData(0,0,u,c).data}let d;if(t===4)d=new Int32Array(p);else{let f=u*c;d=new Int32Array(f*t);for(let g=0;g<f;g++)for(let x=0;x<t;++x)d[g*t+x]=p[g*4+x]}return lf(d,[c,u,t],"int32")}function r6(r){return r!=null&&r.data instanceof Uint8Array}function o6(){return typeof window<"u"&&typeof ImageBitmap<"u"&&window.hasOwnProperty("createImageBitmap")}function n6(r){return r!=null&&r.width!==0&&r.height!==0}function i6(r){return o6()&&!(r instanceof ImageBitmap)&&n6(r)&&!r6(r)}function s6(r,t=3){return X(this,null,function*(){let e=null;if(G().getBool("WRAP_TO_IMAGEBITMAP")&&i6(r)){let o;try{o=yield createImageBitmap(r,{premultiplyAlpha:"none"})}catch{o=null}o!=null&&o.width===r.width&&o.height===r.height?e=o:e=r}else e=r;return fk(e,t)})}function hk(r){if(r.rank!==2&&r.rank!==3)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${r.rank}.`);let t=r.rank===2?1:r.shape[2];if(t>4||t===2)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${t}`);if(r.dtype!=="float32"&&r.dtype!=="int32")throw new Error(`Unsupported type for toPixels: ${r.dtype}. Please use float32 or int32 tensors.`)}function a6(r){let t=r?.alpha||1;if(t>1||t<0)throw new Error(`Alpha value ${t} is suppoed to be in range [0 - 1].`)}function l6(r,t){return X(this,null,function*(){let e=C(r,"img","toPixels");if(!(r instanceof st)){let u=e;e=Ue(u,"int32"),u.dispose()}hk(e);let[o,n]=e.shape.slice(0,2),i=e.rank===2?1:e.shape[2],s=yield e.data(),a=e.dtype==="float32"?255:1,l=new Uint8ClampedArray(n*o*4);for(let u=0;u<o*n;++u){let c=[0,0,0,255];for(let d=0;d<i;d++){let m=s[u*i+d];if(e.dtype==="float32"){if(m<0||m>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${m}.`)}else if(e.dtype==="int32"&&(m<0||m>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${m}.`);i===1?(c[0]=m*a,c[1]=m*a,c[2]=m*a):c[d]=m*a}let p=u*4;l[p+0]=Math.round(c[0]),l[p+1]=Math.round(c[1]),l[p+2]=Math.round(c[2]),l[p+3]=Math.round(c[3])}if(t!=null){mk||Bu(ip,P.backendName)!=null&&(console.warn("tf.browser.toPixels is not efficient to draw tensor on canvas. Please try tf.browser.draw instead."),mk=!0),t.width=n,t.height=o;let u=t.getContext("2d"),c=new ImageData(l,n,o);u.putImageData(c,0,0)}return e!==r&&e.dispose(),l})}function u6(r,t,e){let o=C(r,"img","draw");if(!(r instanceof st)){let s=o;o=Ue(s,"int32"),s.dispose()}hk(o),a6(e?.imageOptions);let n={image:o},i={canvas:t,options:e};P.runKernel(ip,n,i)}var c6=T({fromPixels_:fk});function p6(r,t){let e=r.shape.length,o=t.shape.length;if(e<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${e}.`);if(o<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${o}.`);if(t.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[o-1]>e)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[o-1]} vs. ${e}`);if(Ke(r.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${r.shape}.`);let n=t.shape,i=n[n.length-1],s=1;for(let p=0;p<n.length-1;++p)s*=n[p];let a=r.shape,l=n.slice();l.pop();let u=1;for(let p=i;p<e;++p)u*=a[p],l.push(a[p]);let c=[...Qo(r.shape).map(p=>p/u),1].slice(0,i);return[l,s,u,c]}var Ut={};ct(Ut,{assertParamsValid:()=>m6,computeFlatOffset:()=>y6,computeOutShape:()=>h6,getNormalizedAxes:()=>g6,isSliceContinous:()=>x6,maskToAxes:()=>f6,parseSliceParams:()=>b6,sliceInfo:()=>v6,startForAxis:()=>Ck,startIndicesWithElidedDims:()=>vk,stopForAxis:()=>_k,stopIndicesWithElidedDims:()=>Sk,stridesForAxis:()=>wk,stridesWithElidedDims:()=>xk});var Gy=-2,d6=-1;function m6(r,t,e){let o=r.shape.length;A(o===t.length,()=>`Error in slice${o}D: Length of begin ${t} must match the rank of the array (${o}).`),A(o===e.length,()=>`Error in slice${o}D: Length of size ${e} must match the rank of the array (${o}).`);for(let n=0;n<o;++n)A(t[n]+e[n]<=r.shape[n],()=>`Error in slice${o}D: begin[${n}] + size[${n}] (${t[n]+e[n]}) would overflow input.shape[${n}] (${r.shape[n]})`)}function f6(r){let t=[],e=0;for(;r>0;)r&1&&t.push(e),r/=2,e++;return t}function h6(r,t,e){let o=[];for(let n=0;n<r.length;n++)o[n]=Math.ceil((t[n]-r[n])/e[n]);return o}function xk(r,t,e,o){let n=[...r];for(let i=n.length;i<o.length;i++)n.push(1);for(let i=0;i<e;i++)i===0?n[t]=1:(n.splice(t,0,1),n.pop());return n}function yk(r,t,e){return e<=r?e:e-(t-1)}function bk(r,t){let e=[];for(let o=0;o<r;o++)e.push(t+o);return e}function g6(r,t,e,o,n,i,s,a,l){let u=r.length,c=new Array(u),p=new Array(u),d=new Array(u);if(t.length&&e>0){let m=t[0],f=e+1;c=vk(s,m,f,o,r),p=Sk(a,m,f,n,r),d=xk(i,m,f,r)}else for(let m=0;m<u;m++)c[m]=Ck(s,o,i,r,m,l),p[m]=_k(a,n,i,r,m,l),d[m]=wk(i,m,l);return{begin:c,end:p,strides:d}}function vk(r,t,e,o,n){let i=[...n],s=bk(e,t);for(let a=0;a<i.length;a++)if(s.indexOf(a)>-1)i[a]=0;else{let l=yk(t,e,a),u=o[l];r&1<<l&&(u=0),i[a]=u}return i}function Sk(r,t,e,o,n){let i=[...n],s=bk(e,t);for(let a=0;a<i.length;a++)if(s.indexOf(a)>-1)i[a]=Number.MAX_SAFE_INTEGER;else{let l=yk(t,e,a),u=o[l];r&1<<l&&(u=Number.MAX_SAFE_INTEGER),i[a]=u}for(let a=0;a<i.length;a++){let l=n[a];i[a]<0&&(i[a]+=l),i[a]=ka(0,i[a],n[a])}return i}function wk(r,t,e){let o=r[t];return(e&1<<t||o==null)&&(o=1),o}function Ck(r,t,e,o,n,i){let s=t[n],a=e[n]||1;(r&1<<n||i&1<<n||s==null)&&(a>0?s=Number.MIN_SAFE_INTEGER:s=Number.MAX_SAFE_INTEGER);let l=o[n];return s<0&&(s+=l),s=ka(0,s,l-1),s}function _k(r,t,e,o,n,i){let s=t[n],a=e[n]||1;(r&1<<n||i&1<<n||s==null)&&(a>0?s=Number.MAX_SAFE_INTEGER:s=Number.MIN_SAFE_INTEGER);let l=o[n];return s<0&&(s+=l),a>0?s=ka(0,s,l):s=ka(-1,s,l-1),s}function x6(r,t,e){let o=e.length;for(let n=0;n<e.length;n++)if(e[n]>1){o=n;break}for(let n=o+1;n<e.length;n++)if(t[n]>0||e[n]!==r[n])return!1;return!0}function y6(r,t){let e=r.length>0?r[r.length-1]:1;for(let o=0;o<r.length-1;o++)e+=r[o]*t[o];return e}function b6(r,t,e){let o,n=r.shape.length;typeof t=="number"?o=[t,...new Array(n-1).fill(0)]:t.length<n?o=t.concat(new Array(n-t.length).fill(0)):o=t.slice(),o.forEach(s=>{A(s!==-1,()=>"slice() does not support negative begin indexing.")});let i;return e==null?i=new Array(n).fill(-1):typeof e=="number"?i=[e,...new Array(n-1).fill(-1)]:e.length<n?i=e.concat(new Array(n-e.length).fill(-1)):i=e,i=i.map((s,a)=>s>=0?s:(A(s===-1,()=>`Negative size values should be exactly -1 but got ${s} for the slice() size at index ${a}.`),r.shape[a]-o[a])),[o,i]}function v6(r,t,e,o,n,i,s,a,l){let u;if(o==null?(u=new Array(t.length),u.fill(1)):u=o,s!=null&&(s&s-1)!==0)throw new Error("Multiple ellipses in slice is not allowed.");let c=!1,p={dims:u.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:e.slice(),strides:u.slice(),beginMask:n,endMask:i,ellipsisMask:s,newAxisMask:a,shrinkAxisMask:l};for(let k=0;k<p.dims;k++)c&&(1<<k&a)!==0&&p.numAddAxisAfterEllipsis++,1<<k&s&&(c=!0);c||(p.ellipsisMask|=1<<p.dims,p.dims++);let d={dims:r.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};S6(p,d);let m=!0,f=!0,g=!0,x=[],y=[];for(let k=0;k<r.length;++k){if(d.strides[k]===0)throw Error(`strides[${k}] must be non-zero`);let N=!!(d.shrinkAxisMask&1<<k),F=r[k];if(F===-1){x.push(N?1:-1);continue}let M=[d.beginMask&1<<k,d.endMask&1<<k],z=[d.strides[k]>0?0:-1,d.strides[k]>0?F:F-1];if(N&&d.strides[k]<=0)throw Error("only stride 1 allowed on non-range indexing.");g=g&&d.strides[k]===1;let H=!!(d.beginMask&1<<k&&d.endMask&1<<k);if(d.beginValid&&d.endValid){if(N){let ue=d.begin[k]<0?F+d.begin[k]:d.begin[k];if(d.begin[k]=ue,d.end[k]=d.begin[k]+1,ue<0||ue>=F)throw Error(`slice index ${d.begin[k]} of dimension ${k} out of bounds.`)}else d.begin[k]=gk(d.begin[k],0,d.strides[k],F,M,z),d.end[k]=gk(d.end[k],1,d.strides[k],F,M,z);let J=d.strides[k]===1&&d.begin[k]===0&&d.end[k]===F;m=m&&J,f=f&&(k===0&&d.strides[k]===1||J)}else m=m&&d.strides[k]===1&&H,f=f&&(k===0&&d.strides[k]===1||H);let K,j=!1;if(d.beginValid&&d.endValid?(K=d.end[k]-d.begin[k],j=!0):N?(K=1,j=!0):H&&F>=0&&(d.strides[k]<0?K=-F:K=F,j=!0),j){let J;K===0||K<0!=d.strides[k]<0?J=0:J=Math.trunc(K/d.strides[k])+(K%d.strides[k]!==0?1:0),x.push(J)}else x.push(-1)}for(let k=0;k<d.finalShapeGatherIndices.length;++k){let N=d.finalShapeGatherIndices[k];N>=0?y.push(x[N]):N===Gy&&y.push(1)}return{finalShapeSparse:y.filter((k,N)=>d.finalShapeGatherIndices[N]!==Gy),finalShape:y,isIdentity:m,sliceDim0:f,isSimpleSlice:g,begin:d.begin,end:d.end,strides:d.strides}}function S6(r,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let e=0;t.beginValid=r.begin!=null,t.endValid=r.end!=null,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let o=0;o<r.dims;o++)if(1<<o&r.ellipsisMask){let n=Math.min(t.dims-(r.dims-o)+1+r.numAddAxisAfterEllipsis,t.dims);for(;e<n;e++)t.begin[e]=0,t.end[e]=0,t.strides[e]=1,t.beginMask|=1<<e,t.endMask|=1<<e,t.finalShapeGatherIndices.push(e),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[e]=o}else if(1<<o&r.newAxisMask)t.finalShapeGatherIndices.push(Gy),t.finalShapeGatherIndicesSparse.push(-1);else{if(e===t.begin.length)throw Error(`Index out of range using input dim ${e}; input has only ${t.dims} dims, ${t.begin.length}.`);r.begin!=null&&(t.begin[e]=r.begin[o]),r.end!=null&&(t.end[e]=r.end[o]),t.strides[e]=r.strides[o],r.beginMask&1<<o&&(t.beginMask|=1<<e),r.endMask&1<<o&&(t.endMask|=1<<e),r.shrinkAxisMask&1<<o?(t.finalShapeGatherIndices.push(d6),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<e):(t.finalShapeGatherIndices.push(e),t.finalShapeGatherIndicesSparse.push(o)),t.inputShapeGatherIndicesSparse[e]=o,e++}}function gk(r,t,e,o,n,i){if(n[t])return e>0?i[t]:i[t+1&1];{let s=r<0?o+r:r;return s<i[0]?i[0]:s>i[1]?i[1]:s}}var w6=typeof requestAnimationFrame<"u"?requestAnimationFrame:typeof setImmediate<"u"?setImmediate:r=>r();function Hy(){return new Promise(r=>w6(()=>r()))}var R={};ct(R,{ERF_A1:()=>B6,ERF_A2:()=>V6,ERF_A3:()=>W6,ERF_A4:()=>z6,ERF_A5:()=>U6,ERF_P:()=>M6,PARALLELIZE_THRESHOLD:()=>Tf,RowPartitionType:()=>Dn,SELU_SCALE:()=>L6,SELU_SCALEALPHA:()=>O6,applyActivation:()=>Ms,assertAndGetBroadcastShape:()=>Je,assertAxesAreInnerMostDims:()=>az,assertParamsConsistent:()=>C6,assignToTypedArray:()=>X6,axesAreInnerMostDims:()=>Iy,calculateShapes:()=>g5,checkEinsumDimSizes:()=>tH,checkPadOnDimRoundingMode:()=>Ft,combineLocations:()=>$2,combineRaggedTensorToTensorShapes:()=>k6,complexWithEvenIndex:()=>K6,complexWithOddIndex:()=>q6,computeConv2DInfo:()=>Es,computeConv3DInfo:()=>Zw,computeDefaultPad:()=>ky,computeDilation2DInfo:()=>iW,computeOptimalWindowSize:()=>N6,computeOutAndReduceShapes:()=>sz,computeOutShape:()=>_6,computePool2DInfo:()=>_y,computePool3DInfo:()=>sW,convertConv2DDataFormat:()=>Jw,decodeEinsumEquation:()=>J6,eitherStridesOrDilationsAreOne:()=>cr,expandShapeToKeepDim:()=>In,exponent:()=>Q6,exponents:()=>Y6,fromStringArrayToUint8:()=>wH,fromUint8ToStringArray:()=>SH,getAxesPermutation:()=>lz,getBroadcastDims:()=>I2,getComplexWithIndex:()=>j6,getEinsumComputePath:()=>rH,getEinsumPermutation:()=>eH,getFusedBiasGradient:()=>Ls,getFusedDyActivation:()=>Os,getImageCenter:()=>R6,getInnerMostAxes:()=>cz,getPermuted:()=>P6,getRaggedRank:()=>T6,getReductionAxes:()=>$m,getReshaped:()=>$6,getReshapedPermuted:()=>D6,getRowPartitionTypesHelper:()=>I6,getSliceBeginCoords:()=>A6,getSliceSize:()=>F6,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>sH,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>aH,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>lH,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>pH,getSparseReshapeInputOutputMismatchErrorMessage:()=>mH,getSparseReshapeInputOutputMultipleErrorMessage:()=>dH,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>uH,getSparseReshapeNegativeOutputDimErrorMessage:()=>cH,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>xH,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>fH,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>hH,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>gH,getUndoAxesPermutation:()=>uz,isIdentityPermutation:()=>oH,log:()=>YB,mergeRealAndImagArrays:()=>G6,prepareAndValidate:()=>p6,prepareSplitSize:()=>iH,segment_util:()=>qy,shouldFuse:()=>Bs,slice_util:()=>Ut,splitRealAndImagArrays:()=>H6,stridesOrDilationsArePositive:()=>tn,tupleValuesAreOne:()=>Ts,upcastType:()=>Tt,validateDefaultValueShape:()=>E6,validateInput:()=>xp,validateUpdateShape:()=>JC,warn:()=>Sn});function C6(r,t){let e=r[0].length;r.forEach((n,i)=>{A(n.length===e,()=>`Error in concat${e}D: rank of tensors[${i}] must be the same as the rank of the rest (${e})`)}),A(t>=0&&t<e,()=>`Error in concat${e}D: axis must be between 0 and ${e-1}.`);let o=r[0];r.forEach((n,i)=>{for(let s=0;s<e;s++)A(s===t||n[s]===o[s],()=>`Error in concat${e}D: Shape of tensors[${i}] (${n}) does not match the shape of the rest (${o}) along the non-concatenated axis ${i}.`)})}function _6(r,t){let e=r[0].slice();for(let o=1;o<r.length;o++)e[t]+=r[o][t];return e}var Dn=function(r){return r[r.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",r[r.VALUE_ROWIDS=1]="VALUE_ROWIDS",r[r.ROW_LENGTHS=2]="ROW_LENGTHS",r[r.ROW_SPLITS=3]="ROW_SPLITS",r[r.ROW_LIMITS=4]="ROW_LIMITS",r[r.ROW_STARTS=5]="ROW_STARTS",r}(Dn||{});function k6(r,t,e){let o=new Array;if(e==null&&t==null)return o;if(t==null)for(;o.length<r+e.length;)o.push(-1);else o=t.slice();if(e==null)return o;if(r+e.length!==o.length)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.rank = ${r+e.length}, but shape.rank = ${o.length}`);for(let n=1;n<e.length;++n){let i=e[n],s=o[o.length-e.length+n],a=o[s];if(i>=0)if(a>=0){if(a!==i)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.shape[${n+r}] = ${i} but shape[${n+r}] = ${a}`)}else o[s]=i}return o}function I6(r){let t={FIRST_DIM_SIZE:Dn.FIRST_DIM_SIZE,VALUE_ROWIDS:Dn.VALUE_ROWIDS,ROW_LENGTHS:Dn.ROW_LENGTHS,ROW_SPLITS:Dn.ROW_SPLITS,ROW_LIMITS:Dn.ROW_LIMITS,ROW_STARTS:Dn.ROW_STARTS},e=[];for(let o of r)if(o in t)e.push(t[o]);else break;return e}function T6(r){return r.length===0?0:r[0]===Dn.FIRST_DIM_SIZE?r.length-1:r.length}function E6(r,t){if(r==null||t==null)return;let e=r.length,o=t.length;if(e>=o)throw new Error(`defaultValue.shape=${r} and ragged tensor flatValues.shape=${t}, are incompatible: defaultValue.rank = ${e} must be less than ragged tensor input flatValues.rank = ${o})`);for(let n=0;n<Math.min(e,o-1);++n){let i=r[n],s=t[n+1];if(i>=0&&s>=0&&i!==1&&i!==s)throw new Error(`defaultValue.shape=${r}, and ragged tensor input flatValues.shape=${t} are incompatible: defaultValue.shape[${n-r.length}] = ${i} but ragged tensor input.flatValues.shape[${n-r.length}] = ${s}`)}}var Tf=30;function N6(r){return r<=Tf?r:Na(r,Math.floor(Math.sqrt(r)))}function R6(r,t,e){let o=e*(typeof r=="number"?r:r[0]),n=t*(typeof r=="number"?r:r[1]);return[o,n]}function $6(r,t,e,o=!0){let n=[];if(o)n=n.concat(t.slice(0)),n.push(r[0]/e),n=n.concat(r.slice(1));else{n=n.concat(r[0]);let i=t.length;for(let s=0;s<i;++s)n=n.concat([r[s+1]/t[s],t[s]]);n=n.concat(r.slice(i+1))}return n}function P6(r,t,e=!0){let o=[];if(e){o.push(t);for(let n=t+1;n<r;++n)n<=2*t?(o.push(n),o.push(n-(t+1))):o.push(n)}else{let n=[],i=[];for(let s=1;s<r;++s)s>=t*2+1||s%2===1?i.push(s):n.push(s);o.push(...n),o.push(0),o.push(...i)}return o}function D6(r,t,e,o=!0){let n=[];o?n.push(r[0]/e):n.push(r[0]*e);for(let i=1;i<r.length;++i)i<=t.length?o?n.push(t[i-1]*r[i]):n.push(r[i]/t[i-1]):n.push(r[i]);return n}function A6(r,t){let e=[0];for(let o=0;o<t;++o)e.push(r[o][0]);return e}function F6(r,t,e){let o=r.slice(0,1);for(let n=0;n<e;++n)o.push(r[n+1]-t[n][0]-t[n][1]);return o}var O6=1.7580993408473768,L6=1.0507009873554805;var M6=.3275911,B6=.254829592,V6=-.284496736,W6=1.421413741,z6=-1.453152027,U6=1.061405429;function G6(r,t){if(r.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${r.length}, imag: ${t.length}.`);let e=new Float32Array(r.length*2);for(let o=0;o<e.length;o+=2)e[o]=r[o/2],e[o+1]=t[o/2];return e}function H6(r){let t=new Float32Array(r.length/2),e=new Float32Array(r.length/2);for(let o=0;o<r.length;o+=2)t[o/2]=r[o],e[o/2]=r[o+1];return{real:t,imag:e}}function K6(r){let t=Math.ceil(r.length/4),e=new Float32Array(t),o=new Float32Array(t);for(let n=0;n<r.length;n+=4)e[Math.floor(n/4)]=r[n],o[Math.floor(n/4)]=r[n+1];return{real:e,imag:o}}function q6(r){let t=Math.floor(r.length/4),e=new Float32Array(t),o=new Float32Array(t);for(let n=2;n<r.length;n+=4)e[Math.floor(n/4)]=r[n],o[Math.floor(n/4)]=r[n+1];return{real:e,imag:o}}function j6(r,t){let e=r[t*2],o=r[t*2+1];return{real:e,imag:o}}function X6(r,t,e,o){r[o*2]=t,r[o*2+1]=e}function Y6(r,t){let e=new Float32Array(r/2),o=new Float32Array(r/2);for(let n=0;n<Math.ceil(r/2);n++){let i=(t?2:-2)*Math.PI*(n/r);e[n]=Math.cos(i),o[n]=Math.sin(i)}return{real:e,imag:o}}function Q6(r,t,e){let o=(e?2:-2)*Math.PI*(r/t),n=Math.cos(o),i=Math.sin(o);return{real:n,imag:i}}var Ky="->",Z6=/->/g,kk=",",Ik="...";function J6(r,t){r=r.replace(/\s/g,"");let e=(r.length-r.replace(Z6,"").length)/Ky.length;if(e<1)throw new Error("Equations without an arrow are not supported.");if(e>1)throw new Error(`Equation must contain exactly one arrow ("${Ky}").`);let[o,n]=r.split(Ky);A(o.indexOf(Ik)===-1,()=>`The ellipsis notation ("${Ik}") is not supported yet.`);let i=o.split(kk),s=i.length;if(t!==s)throw new Error(`Expected ${s} input tensors, received ${t}`);if(s>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");let a=[];for(let d=0;d<n.length;++d){let m=n[d];if(!i.some(f=>f.indexOf(m)!==-1))throw new Error(`Output subscripts contain the label ${m} not present in the input subscripts.`);a.indexOf(m)===-1&&a.push(m)}for(let d=0;d<o.length;++d){let m=o[d];a.indexOf(m)===-1&&m!==kk&&a.push(m)}let l=new Array(i.length);for(let d=0;d<s;++d){if(new Set(i[d].split("")).size!==i[d].length)throw new Error(`Found duplicate axes in input component ${i[d]}. Support for duplicate axes in input is not implemented yet.`);l[d]=[];for(let m=0;m<i[d].length;++m)l[d].push(a.indexOf(i[d][m]))}let u=a.length,c=n.length,p=[];for(let d=c;d<u;++d)p.push(d);return{allDims:a,summedDims:p,idDims:l}}function eH(r,t){let e=new Array(r);e.fill(-1);for(let n=0;n<t.length;++n)e[t[n]]=n;let o=[];for(let n=0;n<r;++n)e[n]===-1&&o.push(n);return e=e.filter(n=>n!==-1),{permutationIndices:e,expandDims:o}}function tH(r,t,e){let o=new Array(r);for(let n=0;n<e.length;++n){let i=e[n].shape;for(let s=0;s<t[n].length;++s)o[t[n][s]]===void 0?o[t[n][s]]=i[s]:A(o[t[n][s]]===i[s],()=>`Expected dimension ${o[t[n][s]]} at axis ${s} of input shaped ${JSON.stringify(i)}, but got dimension ${i[s]}`)}}function rH(r,t){let e=r,o=[],n=0;r.length===0&&e.push(-1),n=r.length+1;for(let s=0;s<n;++s)o.push([]);let i=[];for(let s=0;s<e.length;++s){let a=e[s],l=nH(t,a);for(let u of l)i.indexOf(u)===-1&&(o[s].push(u),i.push(u))}return{path:e,steps:o}}function oH(r){return r.every((t,e)=>t===e)}function nH(r,t){let e=[];for(let o=0;o<r.length;++o)(r[o].length===0||r[o].indexOf(t)!==-1||t===-1)&&e.push(o);return e}function iH(r,t,e=0){let o=[];if(typeof t=="number")A(r.shape[e]%t===0,()=>"Number of splits must evenly divide the axis."),o=new Array(t).fill(r.shape[e]/t);else{let n=t.reduce((s,a)=>(a===-1&&(s+=1),s),0);A(n<=1,()=>"There should be only one negative value in split array.");let i=t.indexOf(-1);if(i!==-1){let s=t.reduce((a,l)=>l>0?a+l:a);t[i]=r.shape[e]-s}A(r.shape[e]===t.reduce((s,a)=>s+a),()=>"The sum of sizes must match the size of the axis dimension."),o=t}return o}function sH(r){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${r}`}function aH(r,t){return`indices(${r}, 0) is invalid: ${t} < 0`}function lH(r,t,e){return`indices(${r}, 0) is invalid: ${t} >= ${e}`}function uH(r,t){return`only one output dimension may be -1, not both ${r} and ${t}`}function cH(r,t){return`size ${r} must be non-negative, not ${t}`}function pH(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function dH(r,t){let e=Ke(r),o=Ke(t);return`Input to reshape is a SparseTensor with ${e}
  dense values, but the requested shape requires a multiple of ${o}. inputShape=${r} outputShape= ${t}`}function mH(r,t){let e=Ke(r),o=Ke(t);return`Input to reshape is a tensor with ${e} dense values, but the requested shape has ${o}. inputShape=${r} outputShape=${t}`}function fH(){return"segment ids must be >= 0"}function hH(){return"segment ids are not increasing"}function gH(r,t){return`Segment id ${r} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function xH(r,t,e){return`Bad: indices[${r}] == ${t} out of range [0, ${e})`}var qy={};ct(qy,{collectGatherOpShapeInfo:()=>vH,computeOutShape:()=>bH,segOpComputeOptimalWindowSize:()=>yH});function yH(r,t){let e=!1,o;for(r<=Tf?(o=r,e=!0):o=Na(r,Math.floor(Math.sqrt(r)));!e;)o>t||o===r?e=!0:o=Na(r,o+1);return o}function bH(r,t,e){let o=[],n=r.length;for(let i=0;i<n;i++)i!==t?o.push(r[i]):o.push(e);return o}function vH(r,t,e,o){let n=t.shape.length,i=r.shape.length;if(o!==0&&(o<-n||o>n))throw new Error(`Expect batchDims in the range of [-${n}, ${n}], but got ${o}`);if(o<0&&(o+=n),o>i)throw new Error(`batchDims (${o}) must be less than rank(x) (
    ${i}).`);if(e<o)throw new Error(`batchDims (${o}) must be less than or equal to axis (${e}).`);for(let p=0;p<o;++p)if(r.shape[p]!==t.shape[p])throw new Error(`x.shape[${p}]: ${r.shape[p]} should be equal to indices.shape[${p}]: ${t.shape[p]}.`);let s=r.shape[e],a=[],l=1,u=1,c=1;for(let p=0;p<o;++p)a.push(r.shape[p]),l*=r.shape[p];for(let p=o;p<e;p++)a.push(r.shape[p]),u*=r.shape[p];for(let p=o;p<n;p++)a.push(t.shape[p]);for(let p=e+1;p<i;p++)a.push(r.shape[p]),c*=r.shape[p];return{batchSize:l,sliceSize:c,outerSize:u,dimSize:s,outputShape:a}}function SH(r){try{return r.map(t=>Gu(t))}catch(t){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${t}`)}}function wH(r){return r.map(t=>Uu(t))}var jr={};ct(jr,{nonMaxSuppressionV3Impl:()=>ff,nonMaxSuppressionV4Impl:()=>hf,nonMaxSuppressionV5Impl:()=>gf,whereImpl:()=>uf});rk();var CH=G();CH.registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,r=>{r&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")});var Xr=function(r){return r[r.DT_INVALID=0]="DT_INVALID",r[r.DT_FLOAT=1]="DT_FLOAT",r[r.DT_DOUBLE=2]="DT_DOUBLE",r[r.DT_INT32=3]="DT_INT32",r[r.DT_UINT8=4]="DT_UINT8",r[r.DT_INT16=5]="DT_INT16",r[r.DT_INT8=6]="DT_INT8",r[r.DT_STRING=7]="DT_STRING",r[r.DT_COMPLEX64=8]="DT_COMPLEX64",r[r.DT_INT64=9]="DT_INT64",r[r.DT_BOOL=10]="DT_BOOL",r[r.DT_QINT8=11]="DT_QINT8",r[r.DT_QUINT8=12]="DT_QUINT8",r[r.DT_QINT32=13]="DT_QINT32",r[r.DT_BFLOAT16=14]="DT_BFLOAT16",r[r.DT_QINT16=15]="DT_QINT16",r[r.DT_QUINT16=16]="DT_QUINT16",r[r.DT_UINT16=17]="DT_UINT16",r[r.DT_COMPLEX128=18]="DT_COMPLEX128",r[r.DT_HALF=19]="DT_HALF",r[r.DT_RESOURCE=20]="DT_RESOURCE",r[r.DT_VARIANT=21]="DT_VARIANT",r[r.DT_UINT32=22]="DT_UINT32",r[r.DT_UINT64=23]="DT_UINT64",r[r.DT_FLOAT_REF=101]="DT_FLOAT_REF",r[r.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",r[r.DT_INT32_REF=103]="DT_INT32_REF",r[r.DT_UINT8_REF=104]="DT_UINT8_REF",r[r.DT_INT16_REF=105]="DT_INT16_REF",r[r.DT_INT8_REF=106]="DT_INT8_REF",r[r.DT_STRING_REF=107]="DT_STRING_REF",r[r.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",r[r.DT_INT64_REF=109]="DT_INT64_REF",r[r.DT_BOOL_REF=110]="DT_BOOL_REF",r[r.DT_QINT8_REF=111]="DT_QINT8_REF",r[r.DT_QUINT8_REF=112]="DT_QUINT8_REF",r[r.DT_QINT32_REF=113]="DT_QINT32_REF",r[r.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",r[r.DT_QINT16_REF=115]="DT_QINT16_REF",r[r.DT_QUINT16_REF=116]="DT_QUINT16_REF",r[r.DT_UINT16_REF=117]="DT_UINT16_REF",r[r.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",r[r.DT_HALF_REF=119]="DT_HALF_REF",r[r.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",r[r.DT_VARIANT_REF=121]="DT_VARIANT_REF",r[r.DT_UINT32_REF=122]="DT_UINT32_REF",r[r.DT_UINT64_REF=123]="DT_UINT64_REF",r}(Xr||{}),Tk;(function(r){let t;(function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"})(t=r.CheckpointFormatVersion||(r.CheckpointFormatVersion={}))})(Tk||(Tk={}));var kH={};function Nf(r){return kH[r]}function w(r,t,e,o,n){let i=t.inputParams[r];if(i&&i.inputIndexStart!==void 0){let a=i.inputIndexStart,l=i.inputIndexEnd===0?void 0:i.inputIndexEnd===void 0?a+1:i.inputIndexEnd,u=a<0?t.inputNames.length+a:a;if(i.type==="tensor")return Lt(t.inputNames[u],e,o,n);if(i.type==="tensors"){let d=t.inputs.slice(a,l);return t.inputNames.slice(a,l).filter((f,g)=>{var x;return((x=d[g])===null||x===void 0?void 0:x.op)!=="NoOp"}).map(f=>Lt(f,e,o,n))}let c=Lt(t.inputNames[u],e,o,n),p=c.dataSync();return i.type==="number"?p[0]:S.toNestedArray(c.shape,p)}let s=t.attrParams[r];return s&&s.value}function Lt(r,t,e,o){let[n,i]=Sr(r,e);if(o!=null){let a=o.getHashTableHandleByName(n);if(a!=null)return a}let s=e.currentContextIds.find(a=>!!t[Rf(n,a)]);return s!==void 0?t[Rf(n,s)][i]:void 0}function jy(r,t,e){return t[Rf(r,e.currentContextId)]}function Oo(r,t){let[e,o,n]=Sr(r,t);return[Rf(e,t&&t.currentContextId),o,n]}function Rf(r,t){return t?`${r}-${t}`:r}function Sr(r,t){if(r==="")return["",0,void 0];let e=t!=null&&t.parseNodeNameCache!=null;if(e){let i=t.parseNodeNameCache.get(r);if(i!=null)return i}let o=r.split(":"),n;if(o.length===1)n=[r,0,void 0];else{let i=o[0],s=o.length===3?o[1]:void 0,a=Number(o[o.length-1]);n=[i,a,s]}return e&&t.parseNodeNameCache.set(r,n),n}function Sp(r,t,e){let o=w("pad",r,t,e);if(o==="explicit"){o=w("explicitPaddings",r,t,e);let n=[[0,0],[0,0],[0,0],[0,0]];for(let i=0;i<4;i++)n[i][0]=o[i*2],n[i][1]=o[i*2+1];return n}return o}function Lo(r){return r.kept?r:Hr(r)}var Xy={};ct(Xy,{json:()=>IH});var IH=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var Yy={};ct(Yy,{json:()=>TH});var TH=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsFinite",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsInf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var Qy={};ct(Qy,{json:()=>EH});var EH=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}];var Zy={};ct(Zy,{json:()=>NH});var NH=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}];var Jy={};ct(Jy,{json:()=>RH});var RH=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniformInt",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number"},{tfName:"maxval",name:"maxval",type:"number"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}];var e1={};ct(e1,{json:()=>$H});var $H=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var t1={};ct(t1,{json:()=>PH});var PH=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}];var r1={};ct(r1,{json:()=>DH});var DH=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}];var o1={};ct(o1,{json:()=>AH});var AH=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"InitializeTable",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]},{tfOpName:"InitializeTableV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]}];var n1={};ct(n1,{json:()=>FH});var FH=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}];var i1={};ct(i1,{json:()=>OH});var OH=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BitwiseAnd",category:"logical",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}]}];var s1={};ct(s1,{json:()=>LH});var LH=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"MatrixBandPart",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"numLower",type:"tensor"},{start:1,name:"numUpper",type:"tensor"}]}];var a1={};ct(a1,{json:()=>MH});var MH=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]}];var l1={};ct(l1,{json:()=>BH});var BH=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}];var u1={};ct(u1,{json:()=>VH});var VH=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]},{tfOpName:"TensorScatterUpdate",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"values",type:"tensor"}]}];var c1={};ct(c1,{json:()=>WH});var WH=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}];var p1={};ct(p1,{json:()=>zH});var zH=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}];var d1={};ct(d1,{json:()=>UH});var UH=[{tfOpName:"StaticRegexReplace",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"pattern",name:"pattern",type:"string"},{tfName:"rewrite",name:"rewrite",type:"string"},{tfName:"replace_global",name:"replaceGlobal",type:"bool"}]},{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}];var m1={};ct(m1,{json:()=>GH});var GH=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"EnsureShape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}];var wp=class{static get Instance(){return this._instance||(this._instance=new this)}constructor(){let t=[Xy,Yy,Qy,Zy,Jy,e1,t1,r1,o1,n1,i1,s1,a1,l1,u1,c1,p1,d1,m1],e=[].concat(...t.map(o=>o.json));this.opMappers=e.reduce((o,n)=>(o[n.tfOpName]=n,o),{})}transformGraph(t,e={}){let o=t.node,n=[],i=[],s=[],a=o.reduce((g,x)=>(g[x.name]=this.mapNode(x),x.op.startsWith("Placeholder")?n.push(g[x.name]):x.op==="Const"?i.push(g[x.name]):(x.input==null||x.input.length===0)&&s.push(g[x.name]),g),{}),l=[],u=[],c={},p={};e!=null&&(c=this.mapSignatureEntries(e.inputs),p=this.mapSignatureEntries(e.outputs));let d=Object.keys(a);d.forEach(g=>{let x=a[g];x.inputNames.forEach((y,v)=>{let[k,,N]=Oo(y),F=a[k];if(F.outputs!=null){let M=F.outputs.indexOf(N);if(M!==-1){let z=`${k}:${M}`;x.inputNames[v]=z}}x.inputs.push(F),F.children.push(x)})}),Object.keys(p).length===0?d.forEach(g=>{let x=a[g];x.children.length===0&&u.push(x)}):Object.keys(p).forEach(g=>{let[x]=Oo(g),y=a[x];y!=null&&(y.signatureKey=p[g],u.push(y))}),Object.keys(c).length>0?Object.keys(c).forEach(g=>{let[x]=Oo(g),y=a[x];y&&(y.signatureKey=c[g],l.push(y))}):l=n;let m={};t.library!=null&&t.library.function!=null&&(m=t.library.function.reduce((g,x)=>(g[x.signature.name]=this.mapFunction(x),g),{}));let f={nodes:a,inputs:l,outputs:u,weights:i,placeholders:n,signature:e,functions:m};return s.length>0&&(f.initNodes=s),f}mapSignatureEntries(t){return Object.keys(t||{}).reduce((e,o)=>(e[t[o].name]=o,e),{})}mapNode(t){let e=Nf(t.op)||this.opMappers[t.op]||{};t.attr==null&&(t.attr={});let o={name:t.name,op:t.op,category:e.category,inputNames:(t.input||[]).map(n=>n.startsWith("^")?n.slice(1):n),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:t.attr,outputs:e.outputs};return e.inputs!=null&&(o.inputParams=e.inputs.reduce((n,i)=>(n[i.name]={type:i.type,inputIndexStart:i.start,inputIndexEnd:i.end},n),{})),e.attrs!=null&&(o.attrParams=e.attrs.reduce((n,i)=>{let s=i.type,a;switch(i.type){case"string":a=$f(t.attr,i.tfName,i.defaultValue),a===void 0&&i.tfDeprecatedName&&(a=$f(t.attr,i.tfDeprecatedName,i.defaultValue));break;case"string[]":a=Mf(t.attr,i.tfName,i.defaultValue),a===void 0&&i.tfDeprecatedName&&(a=Mf(t.attr,i.tfDeprecatedName,i.defaultValue));break;case"number":a=Df(t.attr,i.tfName,i.defaultValue||0),a===void 0&&i.tfDeprecatedName&&(a=Df(t.attr,i.tfDeprecatedName,i.defaultValue));break;case"number[]":a=Lf(t.attr,i.tfName,i.defaultValue),a===void 0&&i.tfDeprecatedName&&(a=Lf(t.attr,i.tfDeprecatedName,i.defaultValue));break;case"bool":a=Pf(t.attr,i.tfName,i.defaultValue),a===void 0&&i.tfDeprecatedName&&(a=Pf(t.attr,i.tfDeprecatedName,i.defaultValue));break;case"bool[]":a=Vf(t.attr,i.tfName,i.defaultValue),a===void 0&&i.tfDeprecatedName&&(a=Vf(t.attr,i.tfDeprecatedName,i.defaultValue));break;case"shape":a=Of(t.attr,i.tfName,i.defaultValue),a===void 0&&i.tfDeprecatedName&&(a=Of(t.attr,i.tfDeprecatedName,i.defaultValue));break;case"shape[]":a=Bf(t.attr,i.tfName,i.defaultValue),a===void 0&&i.tfDeprecatedName&&(a=Bf(t.attr,i.tfDeprecatedName,i.defaultValue));break;case"dtype":a=Af(t.attr,i.tfName,i.defaultValue),a===void 0&&i.tfDeprecatedName&&(a=Af(t.attr,i.tfDeprecatedName,i.defaultValue));break;case"dtype[]":a=Ff(t.attr,i.tfName,i.defaultValue),a===void 0&&i.tfDeprecatedName&&(a=Ff(t.attr,i.tfDeprecatedName,i.defaultValue));break;case"func":a=Ek(t.attr,i.tfName,i.defaultValue),a===void 0&&i.tfDeprecatedName&&(a=Ek(t.attr,i.tfDeprecatedName,i.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${i.type} for op: ${t.op}`)}return n[i.name]={value:a,type:s},n},{})),o}mapFunction(t){let e=t.nodeDef,o=[],n=[],i={};e!=null&&(i=e.reduce((p,d)=>(p[d.name]=this.mapNode(d),d.op==="Const"&&n.push(p[d.name]),p),{}));let s=[],a=[];t.signature.inputArg.forEach(p=>{let[d]=Oo(p.name),m={name:d,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:f1(p.type),type:"dtype"}},children:[]};m.signatureKey=p.name,s.push(m),i[d]=m}),Object.keys(i).forEach(p=>{let d=i[p];d.inputNames.forEach((m,f)=>{let[g,,x]=Oo(m),y=i[g];if(y.outputs!=null){let v=y.outputs.indexOf(x);if(v!==-1){let k=`${g}:${v}`;d.inputNames[f]=k}}d.inputs.push(y),y.children.push(d)})});let u=t.ret;t.signature.outputArg.forEach(p=>{let[d,m]=Oo(u[p.name]),f=i[d];f!=null&&(f.defaultOutput=m,a.push(f))});let c=this.mapArgsToSignature(t);return{nodes:i,inputs:s,outputs:a,weights:n,placeholders:o,signature:c}}mapArgsToSignature(t){return{methodName:t.signature.name,inputs:t.signature.inputArg.reduce((e,o)=>(e[o.name]=this.mapArgToTensorInfo(o),e),{}),outputs:t.signature.outputArg.reduce((e,o)=>(e[o.name]=this.mapArgToTensorInfo(o,t.ret),e),{})}}mapArgToTensorInfo(t,e){let o=t.name;return e!=null&&(o=e[o]),{name:o,dtype:t.type}}};function HH(r){let t=G().global;if(typeof t.atob<"u")return t.atob(r);if(typeof Buffer<"u")return new Buffer(r,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}function Nk(r,t){let e=Array.isArray(r)?String.fromCharCode.apply(null,r):HH(r);return t?e:e.toLowerCase()}function $f(r,t,e,o=!1){let n=r[t];return n!=null?Nk(n.s,o):e}function Pf(r,t,e){let o=r[t];return o?o.b:e}function Df(r,t,e){let o=r[t]||{},n=o.i!=null?o.i:o.f!=null?o.f:e;return typeof n=="number"?n:parseInt(n,10)}function f1(r){switch(typeof r=="string"&&(r=Xr[r]),r){case Xr.DT_FLOAT:case Xr.DT_HALF:return"float32";case Xr.DT_INT32:case Xr.DT_INT64:case Xr.DT_INT8:case Xr.DT_UINT8:return"int32";case Xr.DT_BOOL:return"bool";case Xr.DT_DOUBLE:return"float32";case Xr.DT_STRING:return"string";case Xr.DT_COMPLEX64:case Xr.DT_COMPLEX128:return"complex64";default:return null}}function Ek(r,t,e){let o=r[t];return o&&o.func?o.func.name:e}function Af(r,t,e){let o=r[t];return o&&o.type?f1(o.type):e}function Ff(r,t,e){let o=r[t];return o&&o.list&&o.list.type?o.list.type.map(n=>f1(n)):e}function Rk(r){if(!r.unknownRank)return r.dim!=null?r.dim.map(t=>typeof t.size=="number"?t.size:parseInt(t.size,10)):[]}function Of(r,t,e){let o=r[t];return o&&o.shape?Rk(o.shape):e}function Lf(r,t,e){let o=r[t];return o?((o.list.f&&o.list.f.length?o.list.f:o.list.i)||[]).map(n=>typeof n=="number"?n:parseInt(n,10)):e}function Mf(r,t,e,o=!1){let n=r[t];return n&&n.list&&n.list.s?n.list.s.map(i=>Nk(i,o)):e}function Bf(r,t,e){let o=r[t];return o&&o.list&&o.list.shape?o.list.shape.map(n=>Rk(n)):e}function Vf(r,t,e){let o=r[t];return o&&o.list&&o.list.b?o.list.b:e}var Wf=class{constructor(t,e,o){this.node=t,this.tensorMap=e,this.context=o,this.inputs=[],this.attrs={},this.inputs=t.inputNames.map(n=>this.getInput(n)),t.rawAttrs!=null&&(this.attrs=Object.keys(t.rawAttrs).reduce((n,i)=>(n[i]=this.getAttr(i),n),{}))}getInput(t){return Lt(t,this.tensorMap,this.context)}getAttr(t,e){let o=this.node.rawAttrs[t];if(o.tensor!=null)return Lt(t,this.tensorMap,this.context);if(o.i!=null||o.f!=null)return Df(this.node.rawAttrs,t,e);if(o.s!=null)return $f(this.node.rawAttrs,t,e);if(o.b!=null)return Pf(this.node.rawAttrs,t,e);if(o.shape!=null)return Of(this.node.rawAttrs,t,e);if(o.type!=null)return Af(this.node.rawAttrs,t,e);if(o.list!=null){if(o.list.i!=null||o.list.f!=null)return Lf(this.node.rawAttrs,t,e);if(o.list.s!=null)return Mf(this.node.rawAttrs,t,e);if(o.list.shape!=null)return Bf(this.node.rawAttrs,t,e);if(o.list.b!=null)return Vf(this.node.rawAttrs,t,e);if(o.list.type!=null)return Ff(this.node.rawAttrs,t,e)}return e}};var Qe={};ct(Qe,{OP_SCOPE_SUFFIX:()=>py,abs:()=>Yt,acos:()=>Ww,acosh:()=>zw,add:()=>fe,addN:()=>Uw,all:()=>Gw,any:()=>Hw,argMax:()=>km,argMin:()=>Kw,asin:()=>qw,asinh:()=>jw,atan:()=>Xw,atan2:()=>Yw,atanh:()=>Qw,avgPool:()=>Im,avgPool3d:()=>e2,basicLSTMCell:()=>t2,batchNorm:()=>Ii,batchNorm2d:()=>o2,batchNorm3d:()=>n2,batchNorm4d:()=>i2,batchToSpaceND:()=>Tm,bincount:()=>Em,bitwiseAnd:()=>s2,booleanMaskAsync:()=>k5,broadcastArgs:()=>a2,broadcastTo:()=>Ti,buffer:()=>Oe,cast:()=>Ue,ceil:()=>l2,clipByValue:()=>Nm,clone:()=>Hr,complex:()=>Nr,concat:()=>dt,concat1d:()=>u2,concat2d:()=>c2,concat3d:()=>p2,concat4d:()=>d2,conv1d:()=>m2,conv2d:()=>Ei,conv2dTranspose:()=>f2,conv3d:()=>h2,conv3dTranspose:()=>x2,cos:()=>y2,cosh:()=>b2,cosineWindow:()=>yp,cumprod:()=>v2,cumsum:()=>S2,denseBincount:()=>w2,depthToSpace:()=>C2,depthwiseConv2d:()=>Qu,diag:()=>_2,dilation2d:()=>k2,div:()=>Ae,divNoNan:()=>T2,dot:()=>E2,dropout:()=>L5,einsum:()=>Ni,elu:()=>Dm,enclosingPowerOfTwo:()=>Dy,ensureShape:()=>N2,equal:()=>Pm,erf:()=>R2,euclideanNorm:()=>D2,exp:()=>Pr,expandDims:()=>pr,expm1:()=>A2,eye:()=>Am,fft:()=>ec,fill:()=>on,floor:()=>Fm,floorDiv:()=>_m,fused:()=>Ay,gather:()=>Om,gatherND:()=>F5,greater:()=>Rs,greaterEqual:()=>Lm,ifft:()=>Fs,imag:()=>$i,image:()=>Pn,inTopKAsync:()=>B5,irfft:()=>nf,isFinite:()=>F2,isInf:()=>O2,isNaN:()=>L2,leakyRelu:()=>Mm,less:()=>hp,lessEqual:()=>Zu,linalg:()=>WG,linspace:()=>M2,localResponseNormalization:()=>B2,log:()=>En,log1p:()=>Bm,logSigmoid:()=>W2,logSoftmax:()=>z2,logSumExp:()=>Wm,logicalAnd:()=>$s,logicalNot:()=>zm,logicalOr:()=>Um,logicalXor:()=>U2,losses:()=>zG,lowerBound:()=>G2,matMul:()=>et,max:()=>sn,maxPool:()=>Hm,maxPool3d:()=>H2,maxPoolWithArgmax:()=>K2,maximum:()=>Km,mean:()=>Ps,meshgrid:()=>q2,min:()=>fp,minimum:()=>Nn,mirrorPad:()=>qm,mod:()=>j2,moments:()=>X2,movingAverage:()=>E5,mul:()=>se,multiRNNCell:()=>Y2,multinomial:()=>Q2,neg:()=>er,norm:()=>Ns,notEqual:()=>jm,oneHot:()=>Z2,ones:()=>an,onesLike:()=>J2,op:()=>T,outerProduct:()=>eC,pad:()=>qr,pad1d:()=>tC,pad2d:()=>rC,pad3d:()=>oC,pad4d:()=>nC,pool:()=>iC,pow:()=>Tn,prelu:()=>Ym,print:()=>Cm,prod:()=>sC,raggedGather:()=>aC,raggedRange:()=>lC,raggedTensorToTensor:()=>uC,rand:()=>cC,randomGamma:()=>EC,randomNormal:()=>tf,randomStandardNormal:()=>NC,randomUniform:()=>Ju,randomUniformInt:()=>RC,range:()=>Pi,real:()=>Rn,reciprocal:()=>$C,relu:()=>Di,relu6:()=>rf,reshape:()=>Y,reverse:()=>uo,reverse1d:()=>PC,reverse2d:()=>DC,reverse3d:()=>AC,reverse4d:()=>FC,rfft:()=>tc,round:()=>of,rsqrt:()=>OC,scalar:()=>Ee,scatterND:()=>R5,searchSorted:()=>gp,selu:()=>LC,separableConv2d:()=>MC,setdiff1dAsync:()=>BC,sigmoid:()=>Kr,sign:()=>VC,signal:()=>VG,sin:()=>WC,sinh:()=>zC,slice:()=>Fe,slice1d:()=>UC,slice2d:()=>GC,slice3d:()=>HC,slice4d:()=>KC,softmax:()=>qC,softplus:()=>Vm,spaceToBatchND:()=>Xm,sparse:()=>UG,sparseToDense:()=>D5,spectral:()=>BG,split:()=>$n,sqrt:()=>$r,square:()=>zt,squaredDifference:()=>sf,squeeze:()=>lt,stack:()=>br,step:()=>af,stridedSlice:()=>jC,string:()=>GG,sub:()=>Ne,sum:()=>tt,tan:()=>XC,tanh:()=>mp,tensor:()=>xr,tensor1d:()=>Rt,tensor2d:()=>vr,tensor3d:()=>lf,tensor4d:()=>YC,tensor5d:()=>QC,tensor6d:()=>ZC,tensorScatterUpdate:()=>t_,tile:()=>Ri,topk:()=>r_,transpose:()=>pf,truncatedNormal:()=>o_,unique:()=>n_,unsortedSegmentSum:()=>i_,unstack:()=>co,upperBound:()=>s_,variable:()=>a_,where:()=>lo,whereAsync:()=>cf,zeros:()=>yr,zerosLike:()=>Wt});var $k=(r,t,e,o=Qe)=>{switch(r.op){case"BiasAdd":case"AddV2":case"Add":return[o.add(w("a",r,t,e),w("b",r,t,e))];case"AddN":return[o.addN(w("tensors",r,t,e))];case"FloorMod":case"Mod":return[o.mod(w("a",r,t,e),w("b",r,t,e))];case"Mul":return[o.mul(w("a",r,t,e),w("b",r,t,e))];case"RealDiv":case"Div":return[o.div(w("a",r,t,e),w("b",r,t,e))];case"DivNoNan":return[o.divNoNan(w("a",r,t,e),w("b",r,t,e))];case"FloorDiv":return[o.floorDiv(w("a",r,t,e),w("b",r,t,e))];case"Sub":return[o.sub(w("a",r,t,e),w("b",r,t,e))];case"Minimum":return[o.minimum(w("a",r,t,e),w("b",r,t,e))];case"Maximum":return[o.maximum(w("a",r,t,e),w("b",r,t,e))];case"Pow":return[o.pow(w("a",r,t,e),w("b",r,t,e))];case"SquaredDifference":return[o.squaredDifference(w("a",r,t,e),w("b",r,t,e))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var Pk=(r,t,e,o=Qe)=>{switch(r.op){case"Abs":case"ComplexAbs":return[o.abs(w("x",r,t,e))];case"Acos":return[o.acos(w("x",r,t,e))];case"Acosh":return[o.acosh(w("x",r,t,e))];case"Asin":return[o.asin(w("x",r,t,e))];case"Asinh":return[o.asinh(w("x",r,t,e))];case"Atan":return[o.atan(w("x",r,t,e))];case"Atan2":return[o.atan2(w("x",r,t,e),w("y",r,t,e))];case"Atanh":return[o.atanh(w("x",r,t,e))];case"Ceil":return[o.ceil(w("x",r,t,e))];case"Complex":return[o.complex(w("real",r,t,e),w("imag",r,t,e))];case"Cos":return[o.cos(w("x",r,t,e))];case"Cosh":return[o.cosh(w("x",r,t,e))];case"Elu":return[o.elu(w("x",r,t,e))];case"Erf":return[o.erf(w("x",r,t,e))];case"Exp":return[o.exp(w("x",r,t,e))];case"Expm1":return[o.expm1(w("x",r,t,e))];case"Floor":return[o.floor(w("x",r,t,e))];case"Log":return[o.log(w("x",r,t,e))];case"Log1p":return[o.log1p(w("x",r,t,e))];case"Imag":return[o.imag(w("x",r,t,e))];case"Neg":return[o.neg(w("x",r,t,e))];case"Reciprocal":return[o.reciprocal(w("x",r,t,e))];case"Real":return[o.real(w("x",r,t,e))];case"Relu":return[o.relu(w("x",r,t,e))];case"Round":return[o.round(w("x",r,t,e))];case"Selu":return[o.selu(w("x",r,t,e))];case"Sigmoid":return[o.sigmoid(w("x",r,t,e))];case"Sin":return[o.sin(w("x",r,t,e))];case"Sign":return[o.sign(w("x",r,t,e))];case"Sinh":return[o.sinh(w("x",r,t,e))];case"Softplus":return[o.softplus(w("x",r,t,e))];case"Sqrt":return[o.sqrt(w("x",r,t,e))];case"Square":return[o.square(w("x",r,t,e))];case"Tanh":return[o.tanh(w("x",r,t,e))];case"Tan":return[o.tan(w("x",r,t,e))];case"ClipByValue":return[o.clipByValue(w("x",r,t,e),w("clipValueMin",r,t,e),w("clipValueMax",r,t,e))];case"Relu6":return[o.relu6(w("x",r,t,e))];case"Rsqrt":return[o.rsqrt(Lt(r.inputNames[0],t,e))];case"LeakyRelu":return[o.leakyRelu(w("x",r,t,e),w("alpha",r,t,e))];case"Prelu":return[o.prelu(w("x",r,t,e),w("alpha",r,t,e))];case"IsNan":return[o.isNaN(Lt(r.inputNames[0],t,e))];case"IsInf":return[o.isInf(Lt(r.inputNames[0],t,e))];case"IsFinite":return[o.isFinite(Lt(r.inputNames[0],t,e))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};function Yr(r,t,e=""){if(!(typeof r=="number"||typeof t=="number")){S.assert(r.length===t.length,()=>e+` Shapes ${r} and ${t} must match`);for(let o=0;o<r.length;o++){let n=r[o],i=t[o];S.assert(n<0||i<0||n===i,()=>e+` Shapes ${r} and ${t} must match`)}}}function Dk(r){return!(typeof r=="number"||r.some(t=>t<0))}function oc(r,t,e){let o=zf(r,e),n=!Dk(o);if(n&&t.length===0)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${o}`);if(n&&t.forEach(i=>{o=zf(i.shape,o)}),!Dk(o))throw new Error(`Non-fully-defined elementShape: ${o}`);return o}function zf(r,t){if(typeof r=="number")return t;if(typeof t=="number")return r;if(r.length!==t.length)throw new Error(`Incompatible ranks during merge: ${r} vs. ${t}`);let e=[];for(let o=0;o<r.length;++o){let n=r[o],i=t[o];if(n>=0&&i>=0&&n!==i)throw new Error(`Incompatible shape during merge: ${r} vs. ${t}`);e[o]=n>=0?n:i}return e}var Uf=class{constructor(t,e,o,n,i,s,a){this.name=t,this.dtype=e,this.maxSize=o,this.elementShape=n,this.identicalElementShapes=i,this.dynamicSize=s,this.clearAfterRead=a,this.tensors=[],this.closed_=!1,this.idTensor=Ee(0),Rr(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(t){this.tensors.forEach(e=>{(t==null||!t.has(e.tensor.id))&&e.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(t<0||t>=this.size())throw new Error(`Tried to read from index ${t}, but array size is: ${this.size()}`);let e=this.tensors[t];if(e.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${t} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(e.cleared=!0),e.read=!0,e.tensor}readMany(t){return t.map(e=>this.read(e))}write(t,e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(t<0||!this.dynamicSize&&t>=this.maxSize)throw new Error(`Tried to write to index ${t}, but array is not resizeable and size is: ${this.maxSize}`);let o=this.tensors[t]||{};if(e.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t},
          because the value dtype is ${e.dtype}, but TensorArray dtype is ${this.dtype}.`);if(this.size()===0&&(this.elementShape==null||this.elementShape.length===0)&&(this.elementShape=e.shape),Yr(this.elementShape,e.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${t}.`),o.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t}, because it has already been read.`);if(o.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t}, because it has already been written.`);o.tensor=e,Rr(e),o.written=!0,this.tensors[t]=o}writeMany(t,e){if(t.length!==e.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${t.length} is not the same as tensors size: ${e.length}.`);t.forEach((o,n)=>this.write(o,e[n]))}gather(t,e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${e}`);if(t)t=t.slice(0,this.size());else{t=[];for(let n=0;n<this.size();n++)t.push(n)}if(t.length===0)return xr([],[0].concat(this.elementShape));let o=this.readMany(t);return Yr(this.elementShape,o[0].shape,"TensorArray shape mismatch: "),br(o,0)}concat(t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${t}`);if(this.size()===0)return xr([],[0].concat(this.elementShape));let e=[];for(let n=0;n<this.size();n++)e.push(n);let o=this.readMany(e);return Yr(this.elementShape,o[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${o[0].shape})`),dt(o,0)}scatter(t,e){if(e.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${e.dtype}`);if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);let o=Math.max(...t);if(!this.dynamicSize&&o>=this.maxSize)throw new Error(`Max index must be < array size (${o}  vs. ${this.maxSize})`);this.writeMany(t,co(e,0))}split(t,e){if(e.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${e.dtype}`);let o=0,n=t.map(l=>(o+=l,o));if(o!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${o}, and tensor's shape is: ${e.shape}`);if(!this.dynamicSize&&t.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${t.length}), and the TensorArray is not marked as dynamically resizeable`);let i=o===0?0:e.size/o,s=[];Te(()=>{e=Y(e,[1,o,i]);for(let l=0;l<t.length;++l){let c=[0,l===0?0:n[l-1],0],p=[1,t[l],i];s[l]=Y(Fe(e,c,p),this.elementShape)}return s});let a=[];for(let l=0;l<t.length;l++)a[l]=l;this.writeMany(a,s)}};var nc=class r{get id(){return this.idTensor.id}constructor(t,e,o,n=-1){this.tensors=t,this.elementShape=e,this.elementDtype=o,t?.forEach(i=>{if(o!==i.dtype)throw new Error(`Invalid data types; op elements ${o}, but list elements ${i.dtype}`);Yr(e,i.shape,"TensorList shape mismatch: "),Rr(i)}),this.idTensor=Ee(0),this.maxNumElements=n,Rr(this.idTensor)}copy(){return new r([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(t){this.tensors.forEach(e=>{(t==null||!t.has(e.id))&&e.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(t,e,o=-1){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);if(o!==-1&&this.tensors.length!==o)throw new Error(`Operation expected a list with ${o} elements but got a list with ${this.tensors.length} elements.`);Yr(t,this.elementShape,"TensorList shape mismatch: ");let n=oc(this.elementShape,this.tensors,t);return Te(()=>{let i=this.tensors.map(s=>Y(s,n));return br(i,0)})}popBack(t,e){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);if(this.size()===0)throw new Error("Trying to pop from an empty list.");let o=oc(this.elementShape,this.tensors,t),n=this.tensors.pop();return n.kept=!1,Yr(n.shape,t,"TensorList shape mismatch: "),Y(n,o)}pushBack(t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(Yr(t.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");Rr(t),this.tensors.push(t)}resize(t){if(t<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${t}`);if(this.maxNumElements!==-1&&t>this.maxNumElements)throw new Error(`TensorListResize input size ${t} is greater maxNumElement ${this.maxNumElements}.`);let e=new r([],this.elementShape,this.elementDtype,this.maxNumElements);e.tensors.length=t;for(let o=0;o<Math.min(this.tensors.length,t);++o)e.tensors[o]=this.tensors[o];return e}getItem(t,e,o){if(o!==this.elementDtype)throw new Error(`Invalid data types; op elements ${o}, but list elements ${this.elementDtype}`);if(t<0||t>this.tensors.length)throw new Error(`Trying to access element ${t} in a list with ${this.tensors.length} elements.`);if(this.tensors[t]==null)throw new Error(`element at index ${t} is null.`);Yr(this.tensors[t].shape,e,"TensorList shape mismatch: ");let n=oc(this.elementShape,this.tensors,e);return Y(this.tensors[t],n)}setItem(t,e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(t<0||this.maxNumElements!==-1&&t>=this.maxNumElements)throw new Error(`Trying to set element ${t} in a list with max ${this.maxNumElements} elements.`);Yr(this.elementShape,e.shape,"TensorList shape mismatch: "),Rr(e),this.tensors[t]!=null&&(this.tensors[t].kept=!1),this.tensors[t]=e}gather(t,e,o){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);Yr(this.elementShape,o,"TensorList shape mismatch: "),t=t.slice(0,this.size());let n=oc(this.elementShape,this.tensors,o);return t.length===0?xr([],[0].concat(n)):Te(()=>{let i=t.map(s=>Y(this.tensors[s],n));return br(i,0)})}concat(t,e){if(t&&t!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${t}`);Yr(this.elementShape,e,"TensorList shape mismatch: ");let o=oc(this.elementShape,this.tensors,e);return this.size()===0?xr([],[0].concat(o)):Te(()=>{let n=this.tensors.map(i=>Y(i,o));return dt(n,0)})}};function Ak(r,t,e){let o=r.dtype;if(r.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${r.shape}`);if(r.dtype!==e)throw new Error(`Invalid data types; op elements ${r.dtype}, but list elements ${e}`);let n=r.shape.slice(1);Yr(n,t,"TensorList shape mismatch: ");let i=co(r);return new nc(i,t,o)}function Fk(r,t,e,o){return new nc([],r,t,o)}function Ok(r,t,e,o){if(t.length!==r.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${r.shape[0]}`);let n=Math.max(...t);if(o!=null&&o!==-1&&n>=o)throw new Error(`Max index must be < array size (${n}  vs. ${o})`);let i=new nc([],e,r.dtype,o),s=co(r,0);return t.forEach((a,l)=>{i.setItem(a,s[l])}),i}function Lk(r,t,e){let o=0,n=t.map(c=>(o+=c,o));if(o!==r.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${o}, and tensor's shape is: ${r.shape}`);let i=r.shape.slice(1),s=zf(i,e),a=o===0?0:r.size/o,l=Te(()=>{let c=[];r=Y(r,[1,o,a]);for(let p=0;p<t.length;++p){let m=[0,p===0?0:n[p-1],0],f=[1,t[p],a];c[p]=Y(Fe(r,m,f),s)}return r.dispose(),c}),u=new nc([],e,r.dtype,t.length);for(let c=0;c<l.length;c++)u.setItem(c,l[c]);return u}var Mk=(r,t,e)=>X(null,null,function*(){switch(r.op){case"If":case"StatelessIf":{let o=w("thenBranch",r,t,e),n=w("elseBranch",r,t,e),i=w("cond",r,t,e),s=w("args",r,t,e);return(yield i.data())[0]?e.functionMap[o].executeFunctionAsync(s,e.tensorArrayMap,e.tensorListMap):e.functionMap[n].executeFunctionAsync(s,e.tensorArrayMap,e.tensorListMap)}case"While":case"StatelessWhile":{let o=w("body",r,t,e),n=w("cond",r,t,e),i=w("args",r,t,e),s=yield e.functionMap[n].executeFunctionAsync(i,e.tensorArrayMap,e.tensorListMap),a=i.map(c=>c.id),l=yield s[0].data();s.forEach(c=>{!c.kept&&a.indexOf(c.id)===-1&&c.dispose()});let u=i;for(;l[0];){let c=u;u=yield e.functionMap[o].executeFunctionAsync(u,e.tensorArrayMap,e.tensorListMap);let p=u.map(m=>m.id);c.forEach(m=>{!m.kept&&a.indexOf(m.id)===-1&&p.indexOf(m.id)===-1&&m.dispose()});let d=yield e.functionMap[n].executeFunctionAsync(u,e.tensorArrayMap,e.tensorListMap);l=yield d[0].data(),d.forEach(m=>{!m.kept&&a.indexOf(m.id)===-1&&p.indexOf(m.id)===-1&&m.dispose()})}return u}case"LoopCond":{let o=w("pred",r,t,e);return[Lo(o)]}case"Switch":{let o=w("pred",r,t,e),n=w("data",r,t,e);return n.kept||(n=Lo(n)),(yield o.data())[0]?[void 0,n]:[n,void 0]}case"Merge":{let o=r.inputNames.find(n=>Lt(n,t,e)!==void 0);if(o){let n=Lt(o,t,e);return[Lo(n)]}return}case"Enter":{let o=w("frameName",r,t,e),n=w("tensor",r,t,e);return e.enterFrame(o),[Lo(n)]}case"Exit":{let o=w("tensor",r,t,e);return e.exitFrame(),[Lo(o)]}case"NextIteration":{let o=w("tensor",r,t,e);return e.nextIteration(),[Lo(o)]}case"TensorArrayV3":{let o=w("size",r,t,e),n=w("dtype",r,t,e),i=w("elementShape",r,t,e),s=w("dynamicSize",r,t,e),a=w("clearAfterRead",r,t,e),l=w("identicalElementShapes",r,t,e),u=w("name",r,t,e),c=new Uf(u,n,o,i,l,s,a);return e.addTensorArray(c),[c.idTensor,Ee(1)]}case"TensorArrayWriteV3":{let o=w("tensorArrayId",r,t,e),n=w("index",r,t,e),i=w("tensor",r,t,e),s=e.getTensorArray(o.id);return s.write(n,i),[s.idTensor]}case"TensorArrayReadV3":{let o=w("tensorArrayId",r,t,e),n=w("index",r,t,e);return[e.getTensorArray(o.id).read(n)]}case"TensorArrayGatherV3":{let o=w("tensorArrayId",r,t,e),n=w("indices",r,t,e),i=w("dtype",r,t,e);return[e.getTensorArray(o.id).gather(n,i)]}case"TensorArrayScatterV3":{let o=w("tensorArrayId",r,t,e),n=w("indices",r,t,e),i=w("tensor",r,t,e),s=e.getTensorArray(o.id);return s.scatter(n,i),[s.idTensor]}case"TensorArrayConcatV3":{let o=w("tensorArrayId",r,t,e),n=e.getTensorArray(o.id),i=w("dtype",r,t,e);return[n.concat(i)]}case"TensorArraySplitV3":{let o=w("tensorArrayId",r,t,e),n=w("tensor",r,t,e),i=w("lengths",r,t,e),s=e.getTensorArray(o.id);return s.split(i,n),[s.idTensor]}case"TensorArraySizeV3":{let o=w("tensorArrayId",r,t,e),n=e.getTensorArray(o.id);return[Ee(n.size(),"int32")]}case"TensorArrayCloseV3":{let o=w("tensorArrayId",r,t,e),n=e.getTensorArray(o.id);return n.clearAndClose(),[n.idTensor]}case"TensorListSetItem":{let o=w("tensorListId",r,t,e),n=w("index",r,t,e),i=w("tensor",r,t,e),s=e.getTensorList(o.id);return s.setItem(n,i),[s.idTensor]}case"TensorListGetItem":{let o=w("tensorListId",r,t,e),n=w("index",r,t,e),i=w("elementShape",r,t,e),s=w("elementDType",r,t,e);return[e.getTensorList(o.id).getItem(n,i,s)]}case"TensorListScatterV2":case"TensorListScatter":{let o=w("indices",r,t,e),n=w("tensor",r,t,e),i=w("elementShape",r,t,e),s=w("numElements",r,t,e),a=Ok(n,o,i,s);return e.addTensorList(a),[a.idTensor]}case"TensorListReserve":case"EmptyTensorList":{let o=w("elementShape",r,t,e),n=w("elementDType",r,t,e),i;r.op==="TensorListReserve"?i="numElements":i="maxNumElements";let s=w(i,r,t,e),a=r.op==="TensorListReserve"?-1:s,l=Fk(o,n,s,a);return e.addTensorList(l),[l.idTensor]}case"TensorListGather":{let o=w("tensorListId",r,t,e),n=w("indices",r,t,e),i=w("elementShape",r,t,e),s=w("elementDType",r,t,e);return[e.getTensorList(o.id).gather(n,s,i)]}case"TensorListStack":{let o=w("tensorListId",r,t,e),n=w("elementShape",r,t,e),i=w("elementDType",r,t,e),s=w("numElements",r,t,e);return[e.getTensorList(o.id).stack(n,i,s)]}case"TensorListFromTensor":{let o=w("tensor",r,t,e),n=w("elementShape",r,t,e),i=w("elementDType",r,t,e),s=Ak(o,n,i);return e.addTensorList(s),[s.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{let o=w("tensorListId",r,t,e),n=e.getTensorList(o.id),i=w("dtype",r,t,e),s=w("elementShape",r,t,e);return[n.concat(i,s)]}case"TensorListPushBack":{let o=w("tensorListId",r,t,e),n=w("tensor",r,t,e),i=e.getTensorList(o.id);return i.pushBack(n),[i.idTensor]}case"TensorListPopBack":{let o=w("tensorListId",r,t,e),n=w("elementShape",r,t,e),i=w("elementDType",r,t,e);return[e.getTensorList(o.id).popBack(n,i)]}case"TensorListSplit":{let o=w("tensor",r,t,e),n=w("elementShape",r,t,e),i=w("lengths",r,t,e),s=Lk(o,i,n);return e.addTensorList(s),[s.idTensor]}case"TensorListLength":{let o=w("tensorListId",r,t,e),n=e.getTensorList(o.id);return[Ee(n.size(),"int32")]}case"TensorListResize":{let o=w("tensorListId",r,t,e),n=w("size",r,t,e),s=e.getTensorList(o.id).resize(n);return e.addTensorList(s),[s.idTensor]}default:throw TypeError(`Node type ${r.op} is not implemented`)}});function Bk(r,t,e){let[o,n]=w("fusedOps",r,t,e),i=o==="biasadd",s=!i,a=n==="prelu",l=o==="fusedbatchnorm",u=w("numArgs",r,t,e);if(i){if(a&&u!==2)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!a&&i&&u!==1)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(l)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");let c=w("strides",r,t,e),p=Sp(r,t,e),d=w("dataFormat",r,t,e).toUpperCase(),m=w("dilations",r,t,e),[f,g]=w("args",r,t,e);s&&(g=f,f=void 0);let x=w("leakyreluAlpha",r,t,e);return{stride:c,pad:p,dataFormat:d,dilations:m,biasArg:f,preluArg:g,activationFunc:n,leakyreluAlpha:x}}var Vk=(r,t,e,o=Qe)=>{switch(r.op){case"Conv1D":{let n=w("stride",r,t,e),i=w("pad",r,t,e),s=w("dataFormat",r,t,e).toUpperCase(),a=w("dilation",r,t,e);return[o.conv1d(w("x",r,t,e),w("filter",r,t,e),n,i,s,a)]}case"Conv2D":{let n=w("strides",r,t,e),i=Sp(r,t,e),s=w("dataFormat",r,t,e).toUpperCase(),a=w("dilations",r,t,e);return[o.conv2d(w("x",r,t,e),w("filter",r,t,e),[n[1],n[2]],i,s,[a[1],a[2]])]}case"_FusedConv2D":{let{stride:n,pad:i,dataFormat:s,dilations:a,biasArg:l,preluArg:u,activationFunc:c,leakyreluAlpha:p}=Bk(r,t,e);return[o.fused.conv2d({x:w("x",r,t,e),filter:w("filter",r,t,e),strides:[n[1],n[2]],pad:i,dataFormat:s,dilations:[a[1],a[2]],bias:l,activation:c,preluActivationWeights:u,leakyreluAlpha:p})]}case"FusedDepthwiseConv2dNative":{let{stride:n,pad:i,dataFormat:s,dilations:a,biasArg:l,preluArg:u,activationFunc:c,leakyreluAlpha:p}=Bk(r,t,e);return[o.fused.depthwiseConv2d({x:w("x",r,t,e),filter:w("filter",r,t,e),strides:[n[1],n[2]],pad:i,dataFormat:s,dilations:[a[1],a[2]],bias:l,activation:c,preluActivationWeights:u,leakyreluAlpha:p})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{let n=w("outputShape",r,t,e),i=w("strides",r,t,e),s=Sp(r,t,e);return[o.conv2dTranspose(w("x",r,t,e),w("filter",r,t,e),n,[i[1],i[2]],s)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{let n=w("strides",r,t,e),i=Sp(r,t,e),s=w("dilations",r,t,e),a=w("dataFormat",r,t,e).toUpperCase();return[o.depthwiseConv2d(w("input",r,t,e),w("filter",r,t,e),[n[1],n[2]],i,a,[s[1],s[2]])]}case"Conv3D":{let n=w("strides",r,t,e),i=w("pad",r,t,e),s=w("dataFormat",r,t,e).toUpperCase(),a=w("dilations",r,t,e);return[o.conv3d(w("x",r,t,e),w("filter",r,t,e),[n[1],n[2],n[3]],i,s,[a[1],a[2],a[3]])]}case"AvgPool":{let n=w("strides",r,t,e),i=w("pad",r,t,e),s=w("kernelSize",r,t,e);return[o.avgPool(w("x",r,t,e),[s[1],s[2]],[n[1],n[2]],i)]}case"MaxPool":{let n=w("strides",r,t,e),i=w("pad",r,t,e),s=w("kernelSize",r,t,e);return[o.maxPool(w("x",r,t,e),[s[1],s[2]],[n[1],n[2]],i)]}case"MaxPoolWithArgmax":{let n=w("strides",r,t,e),i=w("pad",r,t,e),s=w("kernelSize",r,t,e),a=w("includeBatchInIndex",r,t,e),{result:l,indexes:u}=o.maxPoolWithArgmax(w("x",r,t,e),[s[1],s[2]],[n[1],n[2]],i,a);return[l,u]}case"AvgPool3D":{let n=w("strides",r,t,e),i=w("pad",r,t,e),s=w("kernelSize",r,t,e);return[o.avgPool3d(w("x",r,t,e),[s[1],s[2],s[3]],[n[1],n[2],n[3]],i)]}case"MaxPool3D":{let n=w("strides",r,t,e),i=w("pad",r,t,e),s=w("kernelSize",r,t,e);return[o.maxPool3d(w("x",r,t,e),[s[1],s[2],s[3]],[n[1],n[2],n[3]],i)]}case"Dilation2D":{let n=w("strides",r,t,e),i=w("pad",r,t,e),s=w("dilations",r,t,e),a=n[1],l=n[2],u=s[1],c=s[2];return[o.dilation2d(w("x",r,t,e),w("filter",r,t,e),[a,l],i,[u,c],"NHWC")]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var Wk=(r,t,e,o=Qe)=>{switch(r.op){case"Fill":{let n=w("shape",r,t,e),i=w("dtype",r,t,e),s=w("value",r,t,e);return[o.fill(n,s,i)]}case"LinSpace":{let n=w("start",r,t,e),i=w("stop",r,t,e),s=w("num",r,t,e);return[o.linspace(n,i,s)]}case"Multinomial":{let n=w("logits",r,t,e),i=w("numSamples",r,t,e),s=w("seed",r,t,e);return[o.multinomial(n,i,s)]}case"OneHot":{let n=w("indices",r,t,e),i=w("depth",r,t,e),s=w("onValue",r,t,e),a=w("offValue",r,t,e),l=w("dtype",r,t,e);return[o.oneHot(n,i,s,a,l)]}case"Ones":return[o.ones(w("shape",r,t,e),w("dtype",r,t,e))];case"OnesLike":return[o.onesLike(w("x",r,t,e))];case"RandomStandardNormal":return[o.randomStandardNormal(w("shape",r,t,e),w("dtype",r,t,e),w("seed",r,t,e))];case"RandomUniform":return[o.randomUniform(w("shape",r,t,e),w("minval",r,t,e),w("maxval",r,t,e),w("dtype",r,t,e))];case"RandomUniformInt":return[o.randomUniformInt(w("shape",r,t,e),w("minval",r,t,e),w("maxval",r,t,e),w("seed",r,t,e))];case"Range":{let n=w("start",r,t,e),i=w("stop",r,t,e),s=w("step",r,t,e);return[o.range(n,i,s,w("dtype",r,t,e))]}case"TruncatedNormal":{let n=w("shape",r,t,e),i=w("mean",r,t,e),s=w("stdDev",r,t,e),a=w("seed",r,t,e);return[o.truncatedNormal(n,i,s,w("dtype",r,t,e),a)]}case"Zeros":return[o.zeros(w("shape",r,t,e),w("dtype",r,t,e))];case"ZerosLike":return[o.zerosLike(w("x",r,t,e))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};function h1(r,t,e){let o=w("boxes",r,t,e),n=w("scores",r,t,e),i=w("maxOutputSize",r,t,e),s=w("iouThreshold",r,t,e),a=w("scoreThreshold",r,t,e),l=w("softNmsSigma",r,t,e);return{boxes:o,scores:n,maxOutputSize:i,iouThreshold:s,scoreThreshold:a,softNmsSigma:l}}var zk=(i,s,a,l,...u)=>X(null,[i,s,a,l,...u],function*(r,t,e,o,n=Qe){switch(r.op){case"NonMaxSuppressionV5":{let{boxes:c,scores:p,maxOutputSize:d,iouThreshold:m,scoreThreshold:f,softNmsSigma:g}=h1(r,t,e),x=yield n.image.nonMaxSuppressionWithScoreAsync(c,p,d,m,f,g);return[x.selectedIndices,x.selectedScores]}case"NonMaxSuppressionV4":{let{boxes:c,scores:p,maxOutputSize:d,iouThreshold:m,scoreThreshold:f}=h1(r,t,e),g=w("padToMaxOutputSize",r,t,e),x=yield n.image.nonMaxSuppressionPaddedAsync(c,p,d,m,f,g);return[x.selectedIndices,x.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{let{boxes:c,scores:p,maxOutputSize:d,iouThreshold:m,scoreThreshold:f}=h1(r,t,e);return[yield n.image.nonMaxSuppressionAsync(c,p,d,m,f)]}case"Where":{let c=n.cast(w("condition",r,t,e),"bool"),p=[yield n.whereAsync(c)];return c.dispose(),p}case"ListDiff":return n.setdiff1dAsync(w("x",r,t,e),w("y",r,t,e));default:throw TypeError(`Node type ${r.op} is not implemented`)}});var Uk=(r,t,e,o=Qe)=>{switch(r.op){case"LowerBound":{let n=w("sortedSequence",r,t,e),i=w("values",r,t,e);return[o.lowerBound(n,i)]}case"TopKV2":{let n=w("x",r,t,e),i=w("k",r,t,e),s=w("sorted",r,t,e),a=o.topk(n,i,s);return[a.values,a.indices]}case"UpperBound":{let n=w("sortedSequence",r,t,e),i=w("values",r,t,e);return[o.upperBound(n,i)]}case"Unique":{let n=w("x",r,t,e),i=o.unique(n);return[i.values,i.indices]}case"UniqueV2":{let n=w("x",r,t,e),i=w("axis",r,t,e),s=o.unique(n,i);return[s.values,s.indices]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var Gk=(r,t,e,o=Qe)=>{switch(r.op){case"Const":return t[r.name];case"PlaceholderWithDefault":let n=w("default",r,t,e);return[Lt(r.name,t,e)||n];case"Placeholder":return[Lt(r.name,t,e)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{let c=w("x",r,t,e);return[Lo(c)]}case"IdentityN":return w("x",r,t,e).map(c=>Lo(c));case"Snapshot":let i=w("x",r,t,e);return[Lo(i)];case"Shape":return[o.tensor1d(w("x",r,t,e).shape,"int32")];case"ShapeN":return w("x",r,t,e).map(c=>o.tensor1d(c.shape));case"Size":return[o.scalar(w("x",r,t,e).size,"int32")];case"Rank":return[o.scalar(w("x",r,t,e).rank,"int32")];case"NoOp":return[o.scalar(1)];case"Print":let s=w("x",r,t,e),a=w("data",r,t,e),l=w("message",r,t,e),u=w("summarize",r,t,e);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(l);for(let c=0;c<a.length;c++)console.log(Array.prototype.slice.call(a[c].dataSync()).slice(0,u));return[s];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var Gf=class{get id(){return this.handle.id}constructor(t,e){this.keyDType=t,this.valueDType=e,this.handle=Ee(0),this.tensorMap=new Map,Rr(this.handle)}clearAndClose(){this.tensorMap.forEach(t=>t.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return Ee(this.size(),"int32")}import(t,e){return X(this,null,function*(){this.checkKeyAndValueTensor(t,e);let o=yield t.data();return this.tensorMap.forEach(n=>n.dispose()),this.tensorMap.clear(),Te(()=>{let n=co(e),i=o.length,s=n.length;S.assert(i===s,()=>`The number of elements doesn't match, keys has ${i} elements, the values has ${s} elements.`);for(let a=0;a<i;a++){let l=o[a],u=n[a];Rr(u),this.tensorMap.set(l,u)}return this.handle})})}find(t,e){return X(this,null,function*(){this.checkKeyAndValueTensor(t,e);let o=yield t.data();return Te(()=>{let n=[];for(let i=0;i<o.length;i++){let s=o[i],a=this.findWithDefault(s,e);n.push(a)}return br(n)})})}findWithDefault(t,e){let o=this.tensorMap.get(t);return o??e}checkKeyAndValueTensor(t,e){if(t.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${t.dtype}`);if(e.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${e.dtype}`)}};var Hk=(r,t,e,o)=>X(null,null,function*(){switch(r.op){case"HashTable":case"HashTableV2":{let n=o.getHashTableHandleByName(r.name);if(n!=null)return[n];{let i=w("keyDType",r,t,e),s=w("valueDType",r,t,e),a=new Gf(i,s);return o.addHashTable(r.name,a),[a.handle]}}case"InitializeTable":case"InitializeTableV2":case"LookupTableImport":case"LookupTableImportV2":{let n=w("tableHandle",r,t,e,o),i=w("keys",r,t,e),s=w("values",r,t,e);return[yield o.getHashTableById(n.id).import(i,s)]}case"LookupTableFind":case"LookupTableFindV2":{let n=w("tableHandle",r,t,e,o),i=w("keys",r,t,e),s=w("defaultValue",r,t,e);return[yield o.getHashTableById(n.id).find(i,s)]}case"LookupTableSize":case"LookupTableSizeV2":{let n=w("tableHandle",r,t,e,o);return[o.getHashTableById(n.id).tensorSize()]}default:throw TypeError(`Node type ${r.op} is not implemented`)}});var Kk=(r,t,e,o=Qe)=>{switch(r.op){case"ResizeBilinear":{let n=w("images",r,t,e),i=w("size",r,t,e),s=w("alignCorners",r,t,e),a=w("halfPixelCenters",r,t,e);return[o.image.resizeBilinear(n,[i[0],i[1]],s,a)]}case"ResizeNearestNeighbor":{let n=w("images",r,t,e),i=w("size",r,t,e),s=w("alignCorners",r,t,e),a=w("halfPixelCenters",r,t,e);return[o.image.resizeNearestNeighbor(n,[i[0],i[1]],s,a)]}case"CropAndResize":{let n=w("image",r,t,e),i=w("boxes",r,t,e),s=w("boxInd",r,t,e),a=w("cropSize",r,t,e),l=w("method",r,t,e),u=w("extrapolationValue",r,t,e);return[o.image.cropAndResize(n,i,s,a,l,u)]}case"ImageProjectiveTransformV3":{let n=w("images",r,t,e),i=w("transforms",r,t,e),s=w("outputShape",r,t,e),a=w("fillValue",r,t,e),l=w("interpolation",r,t,e),u=w("fillMode",r,t,e);return[o.image.transform(n,i,l.toLowerCase(),u.toLowerCase(),a,s)]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var qk=(r,t,e,o=Qe)=>{switch(r.op){case"Equal":return[o.equal(w("a",r,t,e),w("b",r,t,e))];case"NotEqual":return[o.notEqual(w("a",r,t,e),w("b",r,t,e))];case"Greater":return[o.greater(w("a",r,t,e),w("b",r,t,e))];case"GreaterEqual":return[o.greaterEqual(w("a",r,t,e),w("b",r,t,e))];case"Less":return[o.less(w("a",r,t,e),w("b",r,t,e))];case"LessEqual":return[o.lessEqual(w("a",r,t,e),w("b",r,t,e))];case"LogicalAnd":return[o.logicalAnd(w("a",r,t,e),w("b",r,t,e))];case"LogicalNot":return[o.logicalNot(w("a",r,t,e))];case"LogicalOr":return[o.logicalOr(w("a",r,t,e),w("b",r,t,e))];case"Select":case"SelectV2":return[o.where(w("condition",r,t,e),w("a",r,t,e),w("b",r,t,e))];case"BitwiseAnd":return[o.bitwiseAnd(w("a",r,t,e),w("b",r,t,e))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var jk=(r,t,e,o=Qe)=>{switch(r.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[o.matMul(w("a",r,t,e),w("b",r,t,e),w("transposeA",r,t,e),w("transposeB",r,t,e))];case"Einsum":return[o.einsum(w("equation",r,t,e),...w("tensors",r,t,e))];case"Transpose":return[o.transpose(w("x",r,t,e),w("perm",r,t,e))];case"_FusedMatMul":let[n,i]=w("fusedOps",r,t,e),s=n==="biasadd",a=i==="prelu",l=w("numArgs",r,t,e),u=w("leakyreluAlpha",r,t,e);if(s){if(a&&l!==2)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!a&&l!==1)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}let[c,p]=w("args",r,t,e);return[o.fused.matMul({a:w("a",r,t,e),b:w("b",r,t,e),transposeA:w("transposeA",r,t,e),transposeB:w("transposeB",r,t,e),bias:c,activation:i,preluActivationWeights:p,leakyreluAlpha:u})];case"MatrixBandPart":return[o.linalg.bandPart(w("a",r,t,e),w("numLower",r,t,e),w("numUpper",r,t,e))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var Xk=(r,t,e,o=Qe)=>{switch(r.op){case"EuclideanNorm":return[o.euclideanNorm(w("x",r,t,e),w("axis",r,t,e),w("keepDims",r,t,e))];case"FusedBatchNorm":case"FusedBatchNormV2":return[o.batchNorm(w("x",r,t,e),w("mean",r,t,e),w("variance",r,t,e),w("offset",r,t,e),w("scale",r,t,e),w("epsilon",r,t,e))];case"FusedBatchNormV3":return[o.batchNorm(w("x",r,t,e),w("mean",r,t,e),w("variance",r,t,e),w("offset",r,t,e),w("scale",r,t,e),w("epsilon",r,t,e))];case"LRN":return[o.localResponseNormalization(w("x",r,t,e),w("radius",r,t,e),w("bias",r,t,e),w("alpha",r,t,e),w("beta",r,t,e))];case"Softmax":return[o.softmax(w("x",r,t,e))];case"LogSoftmax":return[o.logSoftmax(w("x",r,t,e))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var Yk=(r,t,e,o=Qe)=>{switch(r.op){case"RaggedGather":{let{outputNestedSplits:n,outputDenseValues:i}=o.raggedGather(w("paramsNestedSplits",r,t,e),w("paramsDenseValues",r,t,e),w("indices",r,t,e),w("outputRaggedRank",r,t,e));return n.concat(i)}case"RaggedRange":{let{rtNestedSplits:n,rtDenseValues:i}=o.raggedRange(w("starts",r,t,e),w("limits",r,t,e),w("splits",r,t,e));return[n,i]}case"RaggedTensorToTensor":return[o.raggedTensorToTensor(w("shape",r,t,e),w("values",r,t,e),w("defaultValue",r,t,e),w("rowPartitionTensors",r,t,e),w("rowPartitionTypes",r,t,e))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var Qk=(r,t,e,o=Qe)=>{switch(r.op){case"Max":{let a=w("axis",r,t,e),l=w("keepDims",r,t,e);return[o.max(w("x",r,t,e),a,l)]}case"Mean":{let a=w("axis",r,t,e),l=w("keepDims",r,t,e);return[o.mean(w("x",r,t,e),a,l)]}case"Min":{let a=w("axis",r,t,e),l=w("keepDims",r,t,e);return[o.min(w("x",r,t,e),a,l)]}case"Sum":{let a=w("axis",r,t,e),l=w("keepDims",r,t,e);return[o.sum(w("x",r,t,e),a,l)]}case"All":{let a=w("axis",r,t,e),l=w("keepDims",r,t,e);return[o.all(w("x",r,t,e),a,l)]}case"Any":{let a=w("axis",r,t,e),l=w("keepDims",r,t,e);return[o.any(w("x",r,t,e),a,l)]}case"ArgMax":{let a=w("axis",r,t,e);return[o.argMax(w("x",r,t,e),a)]}case"ArgMin":{let a=w("axis",r,t,e);return[o.argMin(w("x",r,t,e),a)]}case"Prod":{let a=w("axis",r,t,e),l=w("keepDims",r,t,e);return[o.prod(w("x",r,t,e),a,l)]}case"Cumprod":{let a=w("axis",r,t,e),l=w("exclusive",r,t,e),u=w("reverse",r,t,e);return[o.cumprod(w("x",r,t,e),a,l,u)]}case"Cumsum":{let a=w("axis",r,t,e),l=w("exclusive",r,t,e),u=w("reverse",r,t,e);return[o.cumsum(w("x",r,t,e),a,l,u)]}case"Bincount":let n=w("x",r,t,e),i=w("weights",r,t,e),s=w("size",r,t,e);return[o.bincount(n,i,s)];case"DenseBincount":{let a=w("x",r,t,e),l=w("weights",r,t,e),u=w("size",r,t,e),c=w("binaryOutput",r,t,e);return[o.denseBincount(a,l,u,c)]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var Zk=(r,t,e,o=Qe)=>{switch(r.op){case"ConcatV2":case"Concat":{let n=w("n",r,t,e),i=w("axis",r,t,e),s=w("tensors",r,t,e);return s=s.slice(0,n),[o.concat(s,i)]}case"Gather":{let n=w("x",r,t,e),i=w("indices",r,t,e);return[o.gather(n,o.cast(i,"int32"),0)]}case"GatherV2":{let n=w("axis",r,t,e),i=w("batchDims",r,t,e),s=w("x",r,t,e),a=w("indices",r,t,e);return[o.gather(s,o.cast(a,"int32"),n,i)]}case"Reverse":{let n=w("dims",r,t,e),i=[];for(let a=0;a<n.length;a++)n[a]&&i.push(a);let s=w("x",r,t,e);return[o.reverse(s,i)]}case"ReverseV2":{let n=w("axis",r,t,e),i=w("x",r,t,e);return[o.reverse(i,n)]}case"Slice":{let n=w("begin",r,t,e),i=w("size",r,t,e);return[o.slice(w("x",r,t,e),n,i)]}case"StridedSlice":{let n=w("begin",r,t,e),i=w("end",r,t,e),s=w("strides",r,t,e),a=w("beginMask",r,t,e),l=w("endMask",r,t,e),u=w("ellipsisMask",r,t,e),c=w("newAxisMask",r,t,e),p=w("shrinkAxisMask",r,t,e),d=w("x",r,t,e);return[o.stridedSlice(d,n,i,s,a,l,u,c,p)]}case"Pack":return Te(()=>{let n=w("axis",r,t,e),i=w("tensors",r,t,e),s=i[0].shape,a=o.squeeze(i[0]).shape,l=i.map(u=>{let c=S.arraysEqual(u.shape,s);if(!c&&!S.arraysEqual(o.squeeze(u).shape,a))throw new Error("the input tensors shape does not match");return c?u:o.reshape(u,s)});return[o.stack(l,n)]});case"Unpack":{let n=w("axis",r,t,e),i=w("tensor",r,t,e);return o.unstack(i,n)}case"Tile":{let n=w("reps",r,t,e);return[o.tile(w("x",r,t,e),n)]}case"Split":case"SplitV":{let n=w("axis",r,t,e),i=w("numOrSizeSplits",r,t,e),s=w("x",r,t,e);return o.split(s,i,n)}case"ScatterNd":{let n=w("indices",r,t,e),i=w("values",r,t,e),s=w("shape",r,t,e);return[o.scatterND(n,i,s)]}case"GatherNd":{let n=w("x",r,t,e),i=w("indices",r,t,e);return[o.gatherND(n,i)]}case"SparseToDense":{let n=w("sparseIndices",r,t,e),i=w("outputShape",r,t,e),s=w("sparseValues",r,t,e),a=w("defaultValue",r,t,e);return[o.sparseToDense(n,s,i,s.dtype===a.dtype?a:o.cast(a,s.dtype))]}case"TensorScatterUpdate":{let n=w("indices",r,t,e),i=w("values",r,t,e),s=w("tensor",r,t,e);return[o.tensorScatterUpdate(s,n,i)]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var Jk=(r,t,e,o=Qe)=>{switch(r.op){case"SparseFillEmptyRows":{let{outputIndices:n,outputValues:i,emptyRowIndicator:s,reverseIndexMap:a}=o.sparse.sparseFillEmptyRows(w("indices",r,t,e),w("values",r,t,e),w("denseShape",r,t,e),w("defaultValue",r,t,e));return[n,i,s,a]}case"SparseReshape":{let{outputIndices:n,outputShape:i}=o.sparse.sparseReshape(w("inputIndices",r,t,e),w("inputShape",r,t,e),w("newShape",r,t,e));return[n,i]}case"SparseSegmentMean":return[o.sparse.sparseSegmentMean(w("data",r,t,e),w("indices",r,t,e),w("segmentIds",r,t,e))];case"SparseSegmentSum":return[o.sparse.sparseSegmentSum(w("data",r,t,e),w("indices",r,t,e),w("segmentIds",r,t,e))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var eI=(r,t,e,o=Qe)=>{switch(r.op){case"FFT":return[o.fft(w("x",r,t,e))];case"IFFT":return[o.ifft(w("x",r,t,e))];case"RFFT":return[o.rfft(w("x",r,t,e))];case"IRFFT":return[o.irfft(w("x",r,t,e))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var tI=(r,t,e,o=Qe)=>{switch(r.op){case"StaticRegexReplace":return[o.string.staticRegexReplace(w("input",r,t,e),w("pattern",r,t,e),w("rewrite",r,t,e),w("replaceGlobal",r,t,e))];case"StringNGrams":{let{nGrams:n,nGramsSplits:i}=o.string.stringNGrams(w("data",r,t,e),w("dataSplits",r,t,e),w("separator",r,t,e),w("nGramWidths",r,t,e),w("leftPad",r,t,e),w("rightPad",r,t,e),w("padWidth",r,t,e),w("preserveShortSequences",r,t,e));return[n,i]}case"StringSplit":{let{indices:n,values:i,shape:s}=o.string.stringSplit(w("input",r,t,e),w("delimiter",r,t,e),w("skipEmpty",r,t,e));return[n,i,s]}case"StringToHashBucketFast":return[o.string.stringToHashBucketFast(w("input",r,t,e),w("numBuckets",r,t,e))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var rI=(r,t,e,o=Qe)=>{switch(r.op){case"Cast":return[o.cast(w("x",r,t,e),w("dtype",r,t,e))];case"ExpandDims":{let n=w("axis",r,t,e);return[o.expandDims(w("x",r,t,e),n)]}case"Squeeze":{let n=w("axis",r,t,e);return[o.squeeze(w("x",r,t,e),n)]}case"Reshape":return[o.reshape(w("x",r,t,e),w("shape",r,t,e))];case"EnsureShape":return[o.ensureShape(w("x",r,t,e),w("shape",r,t,e))];case"MirrorPad":return[o.mirrorPad(w("x",r,t,e),w("padding",r,t,e),w("mode",r,t,e))];case"PadV2":case"Pad":return[o.pad(w("x",r,t,e),w("padding",r,t,e),w("constantValue",r,t,e))];case"SpaceToBatchND":{let n=w("blockShape",r,t,e),i=w("paddings",r,t,e);return[o.spaceToBatchND(w("x",r,t,e),n,i)]}case"BatchToSpaceND":{let n=w("blockShape",r,t,e),i=w("crops",r,t,e);return[o.batchToSpaceND(w("x",r,t,e),n,i)]}case"DepthToSpace":{let n=w("blockSize",r,t,e),i=w("dataFormat",r,t,e).toUpperCase();return[o.depthToSpace(w("x",r,t,e),n,i)]}case"BroadcastTo":return[o.broadcastTo(w("x",r,t,e),w("shape",r,t,e))];case"BroadcastArgs":return[o.broadcastArgs(w("s0",r,t,e),w("s1",r,t,e))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};function g1(r,t,e,o,n=Te){let i=((s,a,l)=>{switch(s.category){case"arithmetic":return n(()=>$k(s,a,l));case"basic_math":return n(()=>Pk(s,a,l));case"control":return Mk(s,a,l);case"convolution":return n(()=>Vk(s,a,l));case"creation":return n(()=>Wk(s,a,l));case"dynamic":return zk(s,a,l);case"evaluation":return n(()=>Uk(s,a,l));case"image":return n(()=>Kk(s,a,l));case"graph":return n(()=>Gk(s,a,l));case"logical":return n(()=>qk(s,a,l));case"matrices":return n(()=>jk(s,a,l));case"normalization":return n(()=>Xk(s,a,l));case"ragged":return n(()=>Yk(s,a,l));case"reduction":return n(()=>Qk(s,a,l));case"slice_join":return n(()=>Zk(s,a,l));case"sparse":return n(()=>Jk(s,a,l));case"spectral":return n(()=>eI(s,a,l));case"string":return n(()=>tI(s,a,l));case"transformation":return n(()=>rI(s,a,l));case"hash_table":return Hk(s,a,l,o);case"custom":let u=Nf(s.op);if(u&&u.customExecutor)return u.customExecutor(new Wf(s,a,l));throw TypeError(`Custom op ${s.op} is not registered.`);default:throw TypeError(`Unknown op '${s.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(r,t,e);return S.isPromise(i)?i.then(s=>[].concat(s)):[].concat(i)}var Cp=class{constructor(t={},e={},o={},n={},i){this.weightMap=t,this.tensorArrayMap=e,this.tensorListMap=o,this.functionMap=n,this.parseNodeNameCache=i,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(t,e){return{id:t,frameName:e,iterationId:0}}set currentContext(t){this.contexts!==t&&(this.contexts=t,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){let t=[];for(let e=0;e<this.contexts.length-1;e++){let o=this.contexts.slice(0,this.contexts.length-e);t.push(this.contextIdforContexts(o))}t.push(""),this._currentContextIds=t}contextIdforContexts(t){return t?t.map(e=>e.id===0&&e.iterationId===0?"":`${e.frameName}-${e.iterationId}`).join("/"):""}enterFrame(t){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,t)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(this.contexts&&this.contexts.length>1)this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift();else throw new Error("Cannot exit frame, the context is empty")}nextIteration(){if(this.contexts&&this.contexts.length>0){this.contexts=this.contexts.slice(),this.lastId++;let t=Object.assign({},this.contexts[this.contexts.length-1]);t.iterationId+=1,t.id=this.lastId,this.contexts.splice(-1,1,t),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}else throw new Error("Cannot increase frame iteration, the context is empty")}getWeight(t){return this.weightMap[t]}addTensorArray(t){this.tensorArrayMap[t.id]=t}getTensorArray(t){return this.tensorArrayMap[t]}addTensorList(t){this.tensorListMap[t.id]=t}getTensorList(t){return this.tensorListMap[t]}dispose(t){for(let e in this.tensorArrayMap)this.tensorArrayMap[e].clearAndClose(t);for(let e in this.tensorListMap)this.tensorListMap[e].clearAndClose(t)}};function x1(r,t,e,o){let n=new Set,i=[],s=null,a=null,l=new Set,u=new Set(Object.keys(r).map(d=>Sr(d)[0]));o=o||[];let c=new Set(o.map(d=>Sr(d.name)[0])),p=[...t];for(;p.length>0;){let d=p.pop();if((Fi(d)||x7(d)||y7(d))&&s==null&&(s=d,a=s.children.map(m=>m.name).filter(m=>n.has(m))),n.add(d.name),e[d.name]==null&&!u.has(d.name)&&!c.has(d.name)){if(d.inputs.length===0){i.push(d.name);continue}d.inputs.forEach(m=>{l.has(m.name)||(l.add(m.name),p.push(m))})}}return{inputs:r,outputs:t,usedNodes:n,missingInputs:i,dynamicNode:s,syncInputs:a}}function oI(r,t){let{usedNodes:e,inputs:o}=t,n=Object.keys(o).map(x=>Sr(x)[0]).map(x=>r.nodes[x]),i=r.initNodes||[],s=x=>e.has(typeof x=="string"?x:x.name);function a(x){return[...new Map(x.map(y=>[y.name,y])).values()]}let l=a([...n,...r.weights,...i]).filter(s),u=a([...l,...Object.values(r.nodes)]).filter(s),c=new Map(u.map(x=>[x.name,x])),p={};for(let x of u){p[x.name]=p[x.name]||0;for(let y of x.children)s(y)||(p[y.name]=Number.POSITIVE_INFINITY),p[y.name]=(p[y.name]||0)+1}let d=Object.entries(p).filter(([,x])=>x===0).map(([x])=>x),m=[...d];for(;d.length>0;){let x=d.pop(),y=c.get(x);for(let v of y.children.filter(s))--p[v.name]===0&&(m.push(v.name),d.push(v.name))}let f=m.map(x=>c.get(x)),g=d7(f,l);return m7(g,l),g}function d7(r,t){let e=new Map(r.map(s=>[s.name,s])),o=t.map(s=>s.name),n=new Set(o);for(;o.length>0;){let s=o.pop(),a=e.get(s);for(let l of a.children)!e.has(l.name)||n.has(l.name)||(n.add(l.name),o.push(l.name))}return r.filter(s=>n.has(s.name))}var ic=class extends Error{constructor(t){super(`NodesExecutionOrderError: ${t}`)}};function m7(r,t){let e=new Map(r.map((a,l)=>[a.name,l])),o=new Set(t.map(a=>a.name)),n=a=>o.has(typeof a=="string"?a:a.name),i=new Set(r.map(a=>a.name)),s=a=>i.has(typeof a=="string"?a:a.name);for(let a of r){for(let l of a.children.filter(s)){if(!e.has(l.name))throw new ic(`Child ${l.name} of node ${a.name} is unreachable.`);if(e.get(a.name)>e.get(l.name))throw new ic(`Node ${a.name} is scheduled to run after its child ${l.name}.`)}if(!n(a))for(let l of a.inputs){if(!e.has(l.name))throw new ic(`Input ${l.name} of node ${a.name} is unreachable.`);if(e.get(l.name)>e.get(a.name))throw new ic(`Node ${a.name} is scheduled to run before its input ${l.name}.`)}}}function nI(r){let t=new Map(r.map((a,l)=>[a.name,l])),e=Number.MAX_SAFE_INTEGER,o=r.map((a,l)=>Fi(a)?e:l),n=a=>{let l=o[t.get(a.name)];return l??-1},i=r.map((a,l)=>a.children.map(n).reduce((u,c)=>Math.max(u,c),o[l])),s=new Map;for(let a=0;a<r.length;++a){let l=i[a];if(l===e)continue;let u=r[a],c=r[l];s.has(c.name)||s.set(c.name,[]),s.get(c.name).push(u)}return s}var f7=new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),h7=new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),g7=new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]);function Fi(r){return f7.has(r.op)}function x7(r){return h7.has(r.op)}function y7(r){return g7.has(r.op)}var _p=class r{get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(t){let e=Object.keys(t).map(o=>t[o].map(n=>n.id));this._weightIds=[].concat(...e),this._weightMap=t}set resourceManager(t){this._resourceManager=t}get inputs(){return this._inputs.map(t=>({name:t.name,shape:t.attrParams.shape?t.attrParams.shape.value:void 0,dtype:t.attrParams.dtype?t.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(t=>({name:t.name,shape:t.attrParams.shape?t.attrParams.shape.value:void 0,dtype:t.attrParams.dtype?t.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(t=>t.signatureKey||t.name)}get outputNodes(){return this._outputs.map(t=>{let e=t.signatureKey||t.name;return t.defaultOutput?`${e}:${t.defaultOutput}`:e})}get functions(){return Object.keys(this._functions).reduce((t,e)=>(t[e]=this._functions[e].signature,t),{})}constructor(t,e){this.graph=t,this.parent=e,this.compiledMap=new Map,this.parseNodeNameCache=new Map,this._weightMap={},this.SEPARATOR=",",this._functions={},this._functionExecutorMap={},this.keepIntermediateTensors=!1,this._outputs=t.outputs,this._inputs=t.inputs,this._initNodes=t.initNodes,this._signature=t.signature,this._functions=t.functions,t.functions!=null&&Object.keys(t.functions).forEach(o=>{this._functionExecutorMap[o]=new r(t.functions[o],this)})}getCompilationKey(t,e){let o=t.map(i=>i.name).sort(),n=e.map(i=>i.name).sort();return o.join(this.SEPARATOR)+"--"+n.join(this.SEPARATOR)}compile(t,e){let o=x1(t,e,this.weightMap,this._initNodes),{missingInputs:n,dynamicNode:i,syncInputs:s}=o;if(i!=null)throw new Error(`This execution contains the node '${i.name}', which has the dynamic op '${i.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${s}]`);if(n.length>0){let u=e.map(p=>p.name),c=Object.keys(t);throw new Error(`Cannot compute the outputs [${u}] from the provided inputs [${c}]. Missing the following inputs: [${n}]`)}let a=oI(this.graph,o),l=nI(a);return{orderedNodes:a,nodeLiveUntilMap:l}}cloneAndKeepTensor(t){if(t==null)return null;let e=t.clone();return Rr(e),e}cloneTensorList(t){return t?t.map(o=>this.cloneAndKeepTensor(o)):null}cloneTensorMap(t){return Object.fromEntries(Object.entries(t).map(([e,o])=>[e,this.cloneTensorList(o)]))}execute(t,e){this.disposeIntermediateTensors(),t=this.mapInputs(t);let o=Object.keys(t).sort();this.checkInputs(t),this.checkInputShapeAndType(t),e=this.mapOutputs(e),this.checkOutputs(e);let n=o.map(d=>this.graph.nodes[Sr(d)[0]]),i=e.map(d=>Sr(d)[0]),s=new Set(i),a=i.map(d=>this.graph.nodes[d]);a.length===0&&(a=this._outputs);let l=this.getCompilationKey(n,a),u=this.compiledMap.get(l);u==null&&(u=this.compile(t,a),this.compiledMap.set(l,u));try{this.keepIntermediateTensors=G().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(d){this.keepIntermediateTensors=!1,console.warn(d.message)}let c={},p={};return Te(()=>{let d=new Cp(this.weightMap,c,p,this.functionExecutorMap,this.parseNodeNameCache),m=Object.assign({},this.weightMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap)),Object.keys(t).forEach(y=>{let[v,k]=Sr(y,d),N=[];N[k]=t[y],m[v]=N,this.keepIntermediateTensors&&(this.clonedTensorsMap[v]=this.cloneTensorList(N))});let f=this.getFrozenTensorIds(m),{orderedNodes:g,nodeLiveUntilMap:x}=u;for(let y of g){if(m[y.name])continue;let v=g1(y,m,d,this._resourceManager);if(S.isPromise(v))throw new Error(`The execution of the op '${y.op}' returned a promise. Please use model.executeAsync() instead.`);m[y.name]=v,this.keepIntermediateTensors&&(this.clonedTensorsMap[y.name]=this.cloneTensorList(v)),this.checkTensorForDisposalWithNodeLiveUntilInfo(y,m,d,f,s,x.get(y.name))}return this.parent==null&&d.dispose(f),e.map(y=>Lt(y,m,d))})}getFrozenTensorIds(t){let e=[].concat.apply([],Object.keys(t).map(o=>t[o]).map(o=>o.map(n=>n.id)));return new Set(e)}checkTensorForDisposal(t,e,o,n,i,s,a){if(!(Fi(e)||s.has(t))){for(let l of o[t])l!=null&&(a[l.id]=(a[l.id]||0)+e.children.length);for(let l of e.inputs){if(Fi(l))continue;let u=jy(l.name,o,n);if(u!=null)for(let c of u){if(!c||c.kept||i.has(c.id))continue;let p=a[c.id];p===1?(c.dispose(),delete a[c.id]):p!=null&&a[c.id]--}}}}checkTensorForDisposalWithNodeLiveUntilInfo(t,e,o,n,i,s){function a(l){return Fi(l)||i.has(l.name)}if(!(Fi(t)||s==null))for(let l of s){if(a(l))continue;let u=jy(l.name,e,o);for(let c of u)!c||c.kept||n.has(c.id)||c.dispose()}}executeAsync(t,e){return X(this,null,function*(){return this._executeAsync(t,e)})}disposeIntermediateTensors(){this.clonedTensorsMap&&(Object.values(this.clonedTensorsMap).forEach(t=>{for(let e of t)e&&!e.isDisposed&&e.dispose()}),this.clonedTensorsMap=null)}getIntermediateTensors(){return this.clonedTensorsMap}_executeAsync(s,a){return X(this,arguments,function*(t,e,o=!1,n={},i={}){this.disposeIntermediateTensors(),o||(t=this.mapInputs(t),this.checkInputs(t),this.checkInputShapeAndType(t),e=this.mapOutputs(e),this.checkOutputs(e));try{this.keepIntermediateTensors=G().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(f){this.keepIntermediateTensors=!1,console.warn(f.message)}let l=new Cp(this.weightMap,n,i,this.functionExecutorMap,this.parseNodeNameCache);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap));let u=yield this.executeWithControlFlow(t,l,e,o),c=e.map(f=>Lt(f,u,l)),p=c.map(f=>f.id),d=Object.keys(t).map(f=>t[f].id),m=new Set([...p,...d,...this.weightIds]);return Object.values(u).forEach(f=>{f.forEach(g=>{g&&!g.isDisposed&&!m.has(g.id)&&g.dispose()})}),this.parent==null&&l.dispose(m),c})}executeFunctionAsync(t,e,o){return X(this,null,function*(){let n=t.reduce((i,s,a)=>(i[this.inputs[a].name]=s,i),{});return this._executeAsync(n,this.outputNodes,!0,e,o)})}executeWithControlFlow(t,e,o,n){return X(this,null,function*(){let i=Object.keys(t),s=i.map(N=>this.graph.nodes[Sr(N)[0]]),a=o.map(N=>Sr(N)[0]),l=new Set(a),u=a.map(N=>this.graph.nodes[N]);u.length===0&&(u=this._outputs);let{usedNodes:c,missingInputs:p,dynamicNode:d,syncInputs:m}=x1(t,u,this.weightMap,this._initNodes),f=[...s,...this.graph.weights,...this._initNodes||[]].map(N=>({node:N,contexts:e.currentContext})),g=Object.assign({},this.weightMap);Object.keys(t).forEach(N=>{let[F,M]=Sr(N),z=[];z[M]=t[N],g[F]=z});let x={},y=this.getFrozenTensorIds(g),v={};for(;f.length>0;){let N=this.processStack(s,f,e,g,v,y,l,x,c);yield Promise.all(N)}d==null&&!n&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");let k=u.filter(N=>!Fi(N)&&!Lt(N.name,g,e)).map(N=>N.name);if(k.length>0){let N="";throw d!=null&&(N=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${m}]`),new Error(`Cannot compute the outputs [${k}] from the provided inputs [${i}]. Consider providing the following inputs: [${p}]. ${N}`)}return g})}processStack(t,e,o,n,i,s,a,l,u){let c=[];for(;e.length>0;){let p=e.pop();o.currentContext=p.contexts;let d="";if(p.node.op==="Enter"&&w("isConstant",p.node,n,o)&&([d]=Oo(p.node.name,o)),n[p.node.name]==null){let m=g1(p.node,n,o,this._resourceManager);d||([d]=Oo(p.node.name,o));let f=o.currentContext;S.isPromise(m)?c.push(m.then(g=>(n[d]=g,this.keepIntermediateTensors&&(this.clonedTensorsMap[d]=this.cloneTensorList(g)),o.currentContext=f,this.checkTensorForDisposal(d,p.node,n,o,s,a,l),this.processChildNodes(p.node,e,o,n,i,u),g))):(n[d]=m,this.keepIntermediateTensors&&(this.clonedTensorsMap[d]=this.cloneTensorList(m)),this.checkTensorForDisposal(d,p.node,n,o,s,a,l),this.processChildNodes(p.node,e,o,n,i,u))}else this.processChildNodes(p.node,e,o,n,i,u)}return c}processChildNodes(t,e,o,n,i,s){t.children.forEach(a=>{let[l]=Oo(a.name,o);i[l]||!s.has(a.name)||(a.op==="Merge"?a.inputNames.some(u=>!!Lt(u,n,o))&&(i[l]=!0,e.push({contexts:o.currentContext,node:a})):a.inputNames.every(u=>!!Lt(u,n,o))&&(i[l]=!0,e.push({contexts:o.currentContext,node:a})))})}dispose(){Object.keys(this.weightMap).forEach(t=>this.weightMap[t].forEach(e=>e.dispose()))}checkInputShapeAndType(t){Object.keys(t).forEach(e=>{let o=t[e],[n]=Sr(e),i=this.graph.nodes[n];if(i.attrParams.shape&&i.attrParams.shape.value){let s=i.attrParams.shape.value,a=s.length===o.shape.length&&o.shape.every((l,u)=>s[u]===-1||s[u]===l);S.assert(a,()=>`The shape of dict['${i.name}'] provided in model.execute(dict) must be [${s}], but was [${o.shape}]`)}i.attrParams.dtype&&i.attrParams.dtype.value&&S.assert(o.dtype===i.attrParams.dtype.value,()=>`The dtype of dict['${i.name}'] provided in model.execute(dict) must be ${i.attrParams.dtype.value}, but was ${o.dtype}`)})}mapInputs(t){var e,o;let n={};for(let i in t){let s=(o=(e=this._signature)===null||e===void 0?void 0:e.inputs)===null||o===void 0?void 0:o[i];s!=null?n[s.name]=t[i]:n[i]=t[i]}return n}checkInputs(t){let e=Object.keys(t).filter(o=>{let[n]=Sr(o);return this.graph.nodes[n]==null});if(e.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${e}] that are not part of graph`)}mapOutputs(t){return t.map(e=>{var o,n;let i=(n=(o=this._signature)===null||o===void 0?void 0:o.outputs)===null||n===void 0?void 0:n[e];return i!=null?i.name:e},{})}checkOutputs(t){t.forEach(e=>{let[o]=Sr(e);if(!this.graph.nodes[o])throw new Error(`The output '${e}' is not found in the graph`)})}};var Hf=class{constructor(t={},e={}){this.hashTableNameToHandle=t,this.hashTableMap=e}addHashTable(t,e){this.hashTableNameToHandle[t]=e.handle,this.hashTableMap[e.id]=e}getHashTableHandleByName(t){return this.hashTableNameToHandle[t]}getHashTableById(t){return this.hashTableMap[t]}dispose(){for(let t in this.hashTableMap)this.hashTableMap[t].clearAndClose(),delete this.hashTableMap[t];for(let t in this.hashTableNameToHandle)this.hashTableNameToHandle[t].dispose(),delete this.hashTableNameToHandle[t]}};var b7="?tfjs-format=file",v7="model.json",Kf=class{get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}constructor(t,e={},o=vp){this.modelUrl=t,this.loadOptions=e,this.version="n/a",this.io=o,e==null&&(this.loadOptions={}),this.resourceManager=new Hf}findIOHandler(){let t=this.modelUrl;if(t.load!=null)this.handler=t;else if(this.loadOptions.requestInit!=null)this.handler=this.io.browserHTTPRequest(t,this.loadOptions);else{let e=this.io.getLoadHandlers(t,this.loadOptions);if(e.length===0)e.push(this.io.browserHTTPRequest(t,this.loadOptions));else if(e.length>1)throw new Error(`Found more than one (${e.length}) load handlers for URL '${[t]}'`);this.handler=e[0]}}load(){if(this.findIOHandler(),this.handler.load==null)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let t=this.handler.load();return S.isPromise(t)?t.then(e=>e.getWeightStream==null?this.loadSync(e):this.loadStreaming(e)):this.loadSync(t)}loadSync(t){let e=this.io.decodeWeights(t.weightData,t.weightSpecs);return this.loadWithWeightMap(t,e)}loadStreaming(t){return X(this,null,function*(){if(t.getWeightStream==null)throw new Error("Model artifacts missing streamWeights function");let e=yield ym(t.getWeightStream(),t.weightSpecs);return this.loadWithWeightMap(t,e)})}loadWithWeightMap(t,e){this.artifacts=t;let o=this.artifacts.modelTopology,n=this.artifacts.signature;if(this.artifacts.userDefinedMetadata!=null){let i=this.artifacts.userDefinedMetadata;i.signature!=null&&(n=i.signature),i.structuredOutputKeys!=null&&(this.structuredOutputKeys=i.structuredOutputKeys)}if(this.signature=n,this.version=`${o.versions.producer}.${o.versions.minConsumer}`,this.executor=new _p(wp.Instance.transformGraph(o,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(e),this.executor.resourceManager=this.resourceManager,t.modelInitializer!=null&&t.modelInitializer.node!=null){let i=wp.Instance.transformGraph(t.modelInitializer);this.initializer=new _p(i),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializerSignature=t.initializerSignature}return!0}save(t,e){return X(this,null,function*(){if(typeof t=="string"){let o=this.io.getSaveHandlers(t);if(o.length===0)throw new Error(`Cannot find any save handlers for URL '${t}'`);if(o.length>1)throw new Error(`Found more than one (${o.length}) save handlers for URL '${t}'`);t=o[0]}if(t.save==null)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return t.save(this.artifacts)})}addStructuredOutputNames(t){if(this.structuredOutputKeys){let e=t instanceof st?[t]:t,o={};return e.forEach((n,i)=>o[this.structuredOutputKeys[i]]=n),o}return t}predict(t,e){let o=this.execute(t,this.outputNodes);return this.addStructuredOutputNames(o)}predictAsync(t,e){return X(this,null,function*(){let o=yield this.executeAsync(t,this.outputNodes);return this.addStructuredOutputNames(o)})}normalizeInputs(t){var e;if(!(t instanceof st)&&!Array.isArray(t)){let i=(e=this.signature)===null||e===void 0?void 0:e.inputs;if(i!=null)for(let s in i){let a=i[s];a.resourceId!=null&&(t[s]=this.resourceIdToCapturedInput[a.resourceId])}return t}t=Array.isArray(t)?t:[t];let o=Object.keys(this.resourceIdToCapturedInput).length;if(t.length+o!==this.inputNodes.length)throw new Error(`Input tensor count mismatch, the graph model has ${this.inputNodes.length-o} non-resource placeholders, while there are ${t.length} input tensors provided.`);let n=0;return this.inputNodes.reduce((i,s)=>{var a,l,u;let c=(u=(l=(a=this.signature)===null||a===void 0?void 0:a.inputs)===null||l===void 0?void 0:l[s])===null||u===void 0?void 0:u.resourceId;return c!=null?i[s]=this.resourceIdToCapturedInput[c]:i[s]=t[n++],i},{})}normalizeOutputs(t){return t=t||this.outputNodes,Array.isArray(t)?t:[t]}executeInitializerGraph(){return this.initializer==null?[]:this.initializerSignature==null?this.initializer.execute({},[]):this.initializer.execute({},Object.keys(this.initializerSignature.outputs))}executeInitializerGraphAsync(){return X(this,null,function*(){return this.initializer==null?[]:this.initializerSignature==null?this.initializer.executeAsync({},[]):this.initializer.executeAsync({},Object.keys(this.initializerSignature.outputs))})}setResourceIdToCapturedInput(t){if(this.resourceIdToCapturedInput={},this.initializerSignature){let e=this.initializerSignature.outputs,o=Object.keys(e);for(let n=0;n<o.length;n++){let i=o[n],s=e[i];this.resourceIdToCapturedInput[s.resourceId]=t[n]}}}execute(t,e){this.resourceIdToCapturedInput==null&&this.setResourceIdToCapturedInput(this.executeInitializerGraph()),t=this.normalizeInputs(t),e=this.normalizeOutputs(e);let o=this.executor.execute(t,e);return o.length>1?o:o[0]}executeAsync(t,e){return X(this,null,function*(){this.resourceIdToCapturedInput==null&&this.setResourceIdToCapturedInput(yield this.executeInitializerGraphAsync()),t=this.normalizeInputs(t),e=this.normalizeOutputs(e);let o=yield this.executor.executeAsync(t,e);return o.length>1?o:o[0]})}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(t){return Object.keys(t).reduce((e,o)=>(e[o]=[t[o]],e),{})}dispose(){this.executor.dispose(),this.initializer&&(this.initializer.dispose(),this.resourceIdToCapturedInput&&Xe(this.resourceIdToCapturedInput)),this.resourceManager.dispose()}};function Oi(o){return X(this,arguments,function*(r,t={},e=vp){if(r==null)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");t==null&&(t={}),t.fromTFHub&&typeof r=="string"&&(r=S7(r));let n=new Kf(r,t,e);return yield n.load(),n})}function S7(r){return r.endsWith("/")||(r=r+"/"),`${r}${v7}${b7}`}var po=G();po.registerFlag("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE",()=>15);po.registerFlag("WEBGPU_CPU_FORWARD",()=>!0);po.registerFlag("WEBGPU_MATMUL_PROGRAM_TYPE",()=>-1);po.registerFlag("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE",()=>!0);po.registerFlag("WEBGPU_USE_LOW_POWER_GPU",()=>!1);po.registerFlag("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e3);po.registerFlag("WEBGPU_USE_PROFILE_TOOL",()=>!1);po.registerFlag("WEBGPU_IMPORT_EXTERNAL_TEXTURE",()=>!0);po.registerFlag("WEBGPU_USE_NAIVE_CONV2D_DEBUG",()=>!1);po.registerFlag("WEBGPU_THRESHOLD_TO_INCREASE_WORKGROUPS_FOR_MATMUL",()=>-1);po.registerFlag("WEBGPU_CONV_SEPARATE_IM2COL_SHADER",()=>!1);po.registerFlag("WEBGPU_PRINT_SHADER",()=>"");po.registerFlag("WEBGPU_ENGINE_COMPILE_ONLY",()=>!1);var qf=class{constructor(t){t&&(this.vendor=t.vendor,this.architecture=t.architecture,this.intelGPUGeneration=this.getIntelGPUGeneration())}getIntelGPUGeneration(){if(this.isIntel()){if(this.architecture.startsWith("gen"))return Number(this.architecture.match(/\d+/));if(this.architecture.startsWith("xe"))return 12}return 0}isIntel(){return this.vendor==="intel"}};var jf=class{constructor(t){this.device=t,this.numUsedBuffers=0,this.numFreeBuffers=0,this.freeBuffers=new Map,this.usedBuffers=new Map,this.numBytesUsed=0,this.numBytesAllocated=0}acquireBuffer(t,e,o=!1,n=!0){let i,s=iI(t,e);return n?(this.freeBuffers.has(s)||this.freeBuffers.set(s,[]),this.freeBuffers.get(s).length>0?(i=this.freeBuffers.get(s).pop(),this.numFreeBuffers--):(i=this.device.createBuffer({size:t,usage:e,mappedAtCreation:o}),this.numBytesAllocated+=t)):(i=this.device.createBuffer({size:t,usage:e,mappedAtCreation:o}),this.numBytesAllocated+=t),this.usedBuffers.has(s)||this.usedBuffers.set(s,[]),this.usedBuffers.get(s).push(i),this.numUsedBuffers++,this.numBytesUsed+=t,i}releaseBuffer(t,e=!0){if(this.freeBuffers.size===0)return;let o=t.size,n=t.usage,i=iI(o,n),s=this.usedBuffers.get(i),a=s.indexOf(t);if(a<0)throw new Error("Cannot find the buffer in buffer manager");s[a]=s[s.length-1],s.pop(),this.numUsedBuffers--,this.numBytesUsed-=o,e?(this.freeBuffers.get(i).push(t),this.numFreeBuffers++):(t.destroy(),this.numBytesAllocated-=o)}getNumUsedBuffers(){return this.numUsedBuffers}getNumFreeBuffers(){return this.numFreeBuffers}dispose(){this.freeBuffers.forEach((t,e)=>{t.forEach(o=>{o.destroy()})}),this.usedBuffers.forEach((t,e)=>{t.forEach(o=>{o.destroy()})}),this.freeBuffers=new Map,this.usedBuffers=new Map,this.numUsedBuffers=0,this.numFreeBuffers=0,this.numBytesUsed=0,this.numBytesAllocated=0}};function iI(r,t){return`${r}_${t}`}var Xf=class{constructor(t){this.device=t,this.numUsedTextures=0,this.numFreeTextures=0,this.freeTextures=new Map,this.usedTextures=new Map,this.numBytesUsed=0,this.numBytesAllocated=0}acquireTexture(t,e,o,n){let i=aI(o),s=t*e*i,a=sI(t,e,o,n);if(this.freeTextures.has(a)||this.freeTextures.set(a,[]),this.usedTextures.has(a)||this.usedTextures.set(a,[]),this.numBytesUsed+=s,this.numUsedTextures++,this.freeTextures.get(a).length>0){this.numFreeTextures--;let u=this.freeTextures.get(a).shift();return this.usedTextures.get(a).push(u),u}this.numBytesAllocated+=s;let l=this.device.createTexture({size:[t,e],format:o,usage:n});return this.usedTextures.get(a).push(l),l}releaseTexture(t){if(this.freeTextures.size===0)return;let e=t.width,o=t.height,n=t.format,i=t.usage,s=sI(e,o,n,i);this.freeTextures.has(s)||this.freeTextures.set(s,[]),this.freeTextures.get(s).push(t),this.numFreeTextures++,this.numUsedTextures--;let a=this.usedTextures.get(s),l=a.indexOf(t);if(l<0)throw new Error("Cannot release a texture that was never provided by this texture manager");a.splice(l,1);let u=aI(n),c=e*o*u;this.numBytesUsed-=c}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){this.freeTextures.forEach((t,e)=>{t.forEach(o=>{o.destroy()})}),this.usedTextures.forEach((t,e)=>{t.forEach(o=>{o.destroy()})}),this.freeTextures=new Map,this.usedTextures=new Map,this.numUsedTextures=0,this.numFreeTextures=0,this.numBytesUsed=0,this.numBytesAllocated=0}};function sI(r,t,e,o){return`${r}_${t}_${e}_${o}`}function aI(r){if(r==="rgba8unorm")return 16;throw new Error(`${r} is not supported!`)}function lI(r,t){if(Math.max(...r)>5)throw new Error("Cannot symbolically compute strides for rank > 6 tensor.");let e=r.length,o="xyzwuv",n=r.map(s=>`${t}.${o[s]}`),i=new Array(e-1);i[e-2]=n[e-1];for(let s=e-3;s>=0;--s)i[s]=`(${i[s+1]} * ${n[s+1]})`;return i}var Qr=(r,t,e)=>e==="int32"?`atomicAdd(${r}, bitcast<i32>(${t}));`:`
          {
            var oldValue = 0;
            loop {
              let newValueF32 = bitcast<f32>(oldValue) + (${t});
              let newValue = bitcast<i32>(newValueF32);
              let res = atomicCompareExchangeWeak(${r}, oldValue, newValue);
              if res.exchanged {
                break;
              }
              oldValue = res.old_value;
            }
          }`;var Mi=function(r){return r[r.FROM_PIXELS=0]="FROM_PIXELS",r[r.DRAW=1]="DRAW",r}(Mi||{}),dI=(r,t,e,o,n)=>{let i={dtype:o.dtype,shape:o.shape},s=C7(e,i,t),a=r.createShaderModule({code:s,label:t.constructor.name}),l=G().get("WEBGPU_PRINT_SHADER");if(l!==""){l=l.toLowerCase();let u=l.split(",");(l==="all"||u.some(c=>t.shaderKey.toLowerCase().includes(c)))&&(console.group(t.shaderKey),console.debug(s),console.groupEnd())}return n?r.createComputePipelineAsync({compute:{module:a,entryPoint:"_start"},label:t.constructor.name,layout:"auto"}):r.createComputePipeline({compute:{module:a,entryPoint:"_start"},label:t.constructor.name,layout:"auto"})},ze=(r,t="f32")=>{switch(r){case 1:return`${t}`;case 2:return`vec2<${t}>`;case 3:return`vec3<${t}>`;case 4:return`vec4<${t}>`;default:throw new Error(`${r}-component ${t} is not supported.`)}};function ft(r){if(r<=1)return"i32";if(r===2)return"vec2<i32>";if(r===3)return"vec3<i32>";if(r===4)return"vec4<i32>";if(r===5)return"vec5";if(r===6)return"vec6";throw Error(`GPU for rank ${r} is not yet supported`)}function ko(r){if(r===0)return"x";if(r===1)return"y";if(r===2)return"z";if(r===3)return"w";if(r===4)return"u";if(r===5)return"v";throw Error(`Index ${r} is not yet supported`)}function Q(...r){let t;switch(r.length){case 0:t=`
        fn main()
      `;break;case 1:t=`
        fn main(${r[0]} : i32)
      `;break;default:throw Error("Unreachable")}return t}function uI(r,t){let e;return e=`
     ${w7(t)}
      fn _start(@builtin(local_invocation_id) LocalId : vec3<u32>,
                @builtin(global_invocation_id) GlobalId : vec3<u32>,
                @builtin(local_invocation_index) LocalIndex: u32,
                @builtin(workgroup_id) WorkgroupId : vec3<u32>,
                @builtin(num_workgroups) NumWorkgroups : vec3<u32>) {
        localId = LocalId;
        localIndex = LocalIndex;
        globalId = GlobalId;
        numWorkgroups = NumWorkgroups;
        workgroupId = WorkgroupId;
        ${r?"main(getGlobalIndex());":"main();"};
      }
    `,e}function w7(r){return`
  @compute @workgroup_size(${r.workgroupSize[0]}, ${r.workgroupSize[1]}, ${r.workgroupSize[2]})
`}function C7(r,t,e){let o=[],n=e.workgroupSize[0]*e.workgroupSize[1]*e.workgroupSize[2];if(e.outputComponent=e.outputComponent?e.outputComponent:1,o.push(`

      var<private> localId: vec3<u32>;
      var<private> localIndex: u32;
      var<private> globalId: vec3<u32>;
      var<private> numWorkgroups: vec3<u32>;
      var<private> workgroupId: vec3<u32>;

      // Only used when the y/z dimension of workgroup size is 1.
      fn getGlobalIndex() -> i32 {
        ${fI(e)?"  return i32(globalId.x);":`  return i32((workgroupId.z * numWorkgroups.x * numWorkgroups.y +
                workgroupId.y * numWorkgroups.x + workgroupId.x) * ${n}u +
                localIndex);
        `}
      }
    `),e.pixelsOpType!=null){let f=e.pixelsOpType===Mi.FROM_PIXELS?`@group(0) @binding(0) var<storage, read_write> result: array<${Li(t.dtype,e.outputComponent)}>;`:`@group(0) @binding(1) var<storage, read> inBuf : array<${Li(r[0].dtype,e.outputComponent)}>;`,g=t.shape.length===3?"vec2<i32>":"i32";o.push(`
        struct Uniform {
          outShapeStrides : ${g},
          size            : i32,
          numChannels     : i32,
          alpha           : f32,
        };

        ${f}
        @group(0) @binding(2) var<uniform> uniforms: Uniform;
      `);let x=pI(e);return[cI,o.join(`
`),kp(t.shape),e.getUserCode(),uI(x,e)].join(`
`)}let i,s,a="struct Uniforms { NAN : f32, INFINITY : f32, ";e.variableNames.forEach((f,g)=>{let x=ft(r[g].shape.length);a+=`${f.charAt(0).toLowerCase()+f.slice(1)}Shape : ${x}, `,i=r[g].shape.length-1,s=ft(i),a+=`${f.charAt(0).toLowerCase()+f.slice(1)}ShapeStrides: ${s}, `});let l=ft(t.shape.length);a+=`outShape : ${l}, `,i=t.shape.length-1,s=ft(i),a+=`
         outShapeStrides: ${s}, `,e.size&&(a+="size : i32, "),e.uniforms&&(a+=e.uniforms),a+="};",a=$7(a),o.push(a),e.atomic?o.push(`
      @group(0) @binding(0) var<storage, read_write> result: array<atomic<i32>>;
    `):o.push(`
      @group(0) @binding(0) var<storage, read_write> result: array<${Li(t.dtype,e.outputComponent)}>;
    `),e.variableNames.forEach((f,g)=>{o.push(`
      @group(0) @binding(${1+g}) var<storage, read> ${f}: array<${e.variableComponents?Li(r[g].dtype,e.variableComponents[g]):Li(r[g].dtype,e.outputComponent)}>;
        `)}),a!==""&&o.push(`
      @group(0) @binding(${1+e.variableNames.length}) var<uniform> uniforms: Uniforms;
      `);let u=E7(t.shape,e.dispatchLayout),c=[cI,o.join(`
`)+_7,kp(t.shape),u,N7(t.shape.length)];e.atomic||c.push(R7(t.shape,t.dtype,e.outputComponent)),e.variableNames.forEach((f,g)=>{c.push(`${kp(r[g].shape,f)}`)});let p=r.map((f,g)=>T7(f,t.shape,e.variableComponents?e.variableComponents[g]:e.outputComponent,e.dispatchLayout.x.length===t.shape.length)).join(`
`);c.push(p),c.push(e.getUserCode());let d=pI(e);return c.push(uI(d,e)),c.join(`
`)}function mI(r,t,e){let o=r.shaderKey;if(r.pixelsOpType!=null)return o;let n=[],i=[];t.forEach(c=>{n.push(c.shape),i.push(c.dtype)}),n.push(e.shape),i.push(e.dtype);let s=t.map(c=>R.getBroadcastDims(c.shape,e.shape)),a=t.map(c=>S.arraysEqual(c.shape,e.shape)).join("_"),l=s.map(c=>c.join("_")).join(";"),u=fI(r)?"flatDispatch":"";return o+="_"+(r.workgroupSize?r.workgroupSize.join(","):"")+n.map(c=>c.length).join(",")+i.join(",")+r.variableNames.join(",")+l+a+u,o}var cI=`
  struct vec5 {x: i32, y: i32, z: i32, w: i32, u: i32};
  struct vec6 {x: i32, y: i32, z: i32, w: i32, u: i32, v: i32};

  // Checks whether coordinates lie within the bounds of the shape.
  fn coordsInBounds2D(coord : vec2<i32>, shape : vec2<i32>) -> bool {
    return all(coord >= vec2<i32>(0)) && all(coord < shape);
  }
  fn coordsInBounds3D(coord : vec3<i32>, shape : vec3<i32>) -> bool {
    return all(coord >= vec3<i32>(0)) && all(coord < shape);
  }
  fn coordsInBounds4D(coord : vec4<i32>, shape : vec4<i32>) -> bool {
    return all(coord >= vec4<i32>(0)) && all(coord < shape);
  }

  fn getIndexFromCoords1D(coord : i32, shape : i32) -> i32 {
    return coord;
  }
  fn getIndexFromCoords2D(coords : vec2<i32>, shape : vec2<i32>) -> i32 {
    return dot(coords, vec2<i32>(shape.y, 1));
  }
  fn getIndexFromCoords3D(coords : vec3<i32>, shape : vec3<i32>) -> i32 {
    return dot(coords, vec3<i32>(shape.y * shape.z, shape.z, 1));
  }
  fn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {
    return dot(coords, vec4<i32>(
        shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));
  }
  fn getIndexFromCoords5D(coords : vec5, shape : vec5) -> i32 {
    let shapeStrides: vec5 = vec5(shape.y * shape.z * shape.w * shape.u, shape.z * shape.w * shape.u, shape.w * shape.u, shape.u, 1);
    return coords.x*shapeStrides.x + coords.y*shapeStrides.y + coords.z*shapeStrides.z + coords.w*shapeStrides.w + coords.u*shapeStrides.u;
  }
  fn getIndexFromCoords6D(coords : vec6, shape : vec6) -> i32 {
    let shapeStrides: vec6 = vec6(shape.y * shape.z * shape.w * shape.u * shape.v, shape.z * shape.w * shape.u * shape.v, shape.w * shape.u * shape.v, shape.u * shape.v, shape.v, 1);
    return coords.x*shapeStrides.x + coords.y*shapeStrides.y + coords.z*shapeStrides.z + coords.w*shapeStrides.w + coords.u*shapeStrides.u + coords.v*shapeStrides.v;
  }

  // NaN defination in IEEE 754-1985 is :
  //   - sign = either 0 or 1.
  //   - biased exponent = all 1 bits.
  //   - fraction = anything except all 0 bits (since all 0 bits represents infinity).
  // https://en.wikipedia.org/wiki/IEEE_754-1985#Representation_of_non-numbers
  fn isnan(val: f32) -> bool {
    let floatToUint: u32 = bitcast<u32>(val);
    return (floatToUint & 0x7fffffffu) > 0x7f800000u;
  }
  fn isnanVec4(val : vec4<f32>) -> vec4<bool> {
    let floatToUint: vec4<u32> = bitcast<vec4<u32>>(val);
    return (floatToUint & vec4<u32>(0x7fffffffu)) > vec4<u32>(0x7f800000u);
  }
`,_7=`
  fn isinf(val: f32) -> bool {
    return abs(val) == uniforms.INFINITY;
  }
`;function kp(r,t=""){let e=r.length,o=t!==""?`get${t.charAt(0).toUpperCase()+t.slice(1)}CoordsFromIndex`:"getCoordsFromIndex",n=t!==""?`${t.charAt(0).toLowerCase()+t.slice(1)}ShapeStrides`:"outShapeStrides";if(e<=1)return`fn ${o}(index : i32) -> i32 { return index; }`;let i=S.computeStrides(r),s=ft(e),a=[];for(let u=0;u<e;u++)a.push(`d${u}`);if(i.length===1)return`    fn ${o}(index : i32) -> vec2<i32> {
      let d0 = index / uniforms.${n}; let d1 = index - d0 * uniforms.${n};
      return vec2<i32>(d0, d1);
    }`;let l;return l="var index2 = index;"+i.map((u,c)=>{let p=`let ${a[c]} = index2 / uniforms.${n}.${ko(c)}`,d=c===i.length-1?`let ${a[c+1]} = index2 - ${a[c]} * uniforms.${n}.${ko(c)}`:`index2 = index2 - ${a[c]} * uniforms.${n}.${ko(c)}`;return`${p}; ${d};`}).join(""),`
    fn ${o}(index : i32) -> ${s} {
      ${l}
      return ${s}(${a.join(",")});
    }
  `}function k7(r,t){let e=r.name,o=r.shape.length,n=ft(o),i="get"+e.charAt(0).toUpperCase()+e.slice(1),s=["d0","d1","d2","d3","d4","d5"].slice(0,o),a=s.map(c=>`${c} : i32`).join(", ");if(o<1)return`
      fn ${i}() -> ${ze(t)} {
        return ${ze(t)}(${e}[0]);
      }
    `;let l=`uniforms.${e.charAt(0).toLowerCase()+e.slice(1)}Shape`,u=`${o}D`;return o===0&&(u="1D"),`
    fn ${i}(${a}) -> ${ze(t)} {
      return ${ze(t)}(${e}[getIndexFromCoords${u}(${n}(${s.join(",")}),
        ${l})${t===1?"":` / ${t}`}]);
    }
   `}function I7(r,t,e,o){let n=r.name,i=n.charAt(0).toUpperCase()+n.slice(1),s="get"+i+"ByOutput",a=r.shape.length,l=t.length,u=ft(l);if(S.arraysEqual(r.shape,t)&&o)return`
    fn ${s}Index(globalIndex : i32) -> ${ze(e)} {
      return ${ze(e)}(${n}[globalIndex]);
    }

    fn ${s}Coords(coords : ${u}) -> ${ze(e)} {
      return ${ze(e)}(${n}[${l>1?"getOutputIndexFromCoords(coords)":"coords"}${e===1?"":` / ${e}`}]);
    }
    `;let c=R.getBroadcastDims(r.shape,t),p=l-a,d="";if(a===0)return`
    fn ${s}Index(globalIndex : i32) -> ${ze(e)}{
      return get${i}();
    }

    fn ${s}Coords(coords : ${u}) -> ${ze(e)}{
      return get${i}();
    }
  `;l<2&&c.length>=1?d="coords = 0;":d=c.map(x=>`coords.${ko(x+p)} = 0;`).join(`
`);let m="";if(l<2&&a>0)m="coords";else if(l>1){let x=ft(a),y=r.shape.map((v,k)=>`coords.${ko(k+p)}`).join(", ");m=`${x}(${y})`}else m="coords";let f=`uniforms.${n.charAt(0).toLowerCase()+n.slice(1)}Shape`,g=`${a}D`;return`
  fn ${s}Index(globalIndex : i32) -> ${ze(e)} {
    var coords = getCoordsFromIndex(globalIndex);
    ${d}
    return ${ze(e)}(${n}[getIndexFromCoords${g}(${m}, ${f})${e===1?"":` / ${e}`}]);
  }

  fn ${s}Coords(coordsIn : ${u}) -> ${ze(e)} {
    var coords = coordsIn;
    ${d}
    return ${ze(e)}(${n}[getIndexFromCoords${g}(${m}, ${f})${e===1?"":` / ${e}`}]);
  }
`}function T7(r,t,e,o){let n=k7(r,e);return r.shape.length<=t.length&&(n+=I7(r,t,e,o)),n}function E7(r,t){let{x:e,y:o=[],z:n=[]}=t,i=r.length,s=e.length+o.length+n.length;if(s!==i)return"";if(e.length===i)return`fn getOutputCoords() -> ${ft(i)}{
    let globalIndex = getGlobalIndex();
    return getCoordsFromIndex(globalIndex);
  }
  `;let a="",l=[e,o,n];for(let d=0;d<l.length;d++){let m=l[d];if(m.length!==0)if(m.length===1)a+=`let d${m[0]} = i32(globalId[${d}]);`;else{let f=lI(m,"uniforms.outShape");a+=`var index${d} = i32(globalId[${d}]);`;for(let g=0;g<f.length;g++)a+=`let d${m[g]} = index${d} / ${f[g]};`,g===f.length-1?a+=`let d${m[g+1]} = index${d} - d${m[g]} * ${f[g]};`:a+=`index${d} = index${d} - d${m[g]} * ${f[g]};`}}let u=[];for(let d=0;d<s;d++)u.push(`d${d}`);let c=ft(s),p=`fn getOutputCoords() -> ${c} {
  ${a}
`;return u.length===0?p+=`return ${c}(0); }`:p+=`return ${c}(${u.join(",")}); }`,p}function N7(r){let t="";switch(r){case 0:case 1:t+=`
        fn getOutputIndexFromCoords(coords : i32) -> i32 {
          return coords;
        }
        `;break;case 2:t+=`
        fn getOutputIndexFromCoords(coords : vec2<i32>) -> i32 {
          return dot(coords, vec2<i32>(uniforms.outShapeStrides, 1));
        }
        `;break;case 3:t+=`
        fn getOutputIndexFromCoords(coords : vec3<i32>) -> i32 {
          return dot(coords, vec3<i32>(uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, 1));
        }
        `;break;case 4:t+=`
        fn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {
          return dot(coords, vec4<i32>(
            uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, uniforms.outShapeStrides.z, 1));
        }
        `;break;case 5:t+=`
        fn getOutputIndexFromCoords(coords : vec5) -> i32 {
          return coords.x * uniforms.outShapeStrides.x +
              coords.y * uniforms.outShapeStrides.y +
              coords.z * uniforms.outShapeStrides.z +
              coords.w * uniforms.outShapeStrides.w +
              coords.u;
        }
        `;break;case 6:t+=`
        fn getOutputIndexFromCoords(coords : vec6) -> i32 {
          return coords.x * uniforms.outShapeStrides.x +
              coords.y * uniforms.outShapeStrides.y +
              coords.z * uniforms.outShapeStrides.z +
              coords.w * uniforms.outShapeStrides.w +
              coords.u * uniforms.outShapeStrides.u +
              coords.v;
        }
        `;break;default:S.assert(!1,()=>`Unsupported ${r}D shape`);break}return t}function fI(r){return r.dispatch[1]===1&&r.dispatch[2]===1}function Li(r,t=1){if(r==="float32")return ze(t,"f32");if(r==="int32"||r==="bool")return ze(t,"i32");throw new Error(`type ${r} is not supported.`)}function R7(r,t,e){let o=r.length,n=Li(t,e),i=`fn setOutputAtIndex(flatIndex : i32, value : ${ze(e)}) {
      result[flatIndex] = ${n}(value);
    }

    fn setOutputAtIndexI32(flatIndex : i32, value : ${ze(e,"i32")}) {
      result[flatIndex] = ${n}(value);
    }
    `;if(o>=2){let s=["d0","d1","d2","d3","d4","d5"].slice(0,o),a=ft(o);i+=`
      fn setOutputAtCoords(${s.map(l=>`${l} : i32`).join(", ")}, value : ${ze(e)}) {
        let flatIndex = getOutputIndexFromCoords(${a}(${s.join(", ")}));
        setOutputAtIndex(flatIndex${e===1?"":` / ${e}`}, value);
      }
      fn setOutputAtCoordsI32(${s.map(l=>`${l} : i32`).join(", ")}, value : ${ze(e,"i32")}) {
        let flatIndex = getOutputIndexFromCoords(${a}(${s.join(", ")}));
        setOutputAtIndexI32(flatIndex${e===1?"":` / ${e}`}, value);
      }
    `}return i}function $7(r){let t=/(\w+)\s*:\s*vec(5|6)/g;r=r.replace(t,o=>"@align(16) "+o);let e=/vec(5|6)\s*,\s*(\w+)/g;return r=r.replace(e,(o,n,i)=>`vec${n}, @align(16) ${i}`),r}function pI(r){return!(r.dispatchLayout.hasOwnProperty("y")&&r.dispatchLayout.y.length!==0||r.dispatchLayout.hasOwnProperty("z")&&r.dispatchLayout.z.length!==0)}var Bi={};ct(Bi,{GPUBytesPerElement:()=>Yf,MatMulProgramType:()=>Mo,assertNotComplex:()=>Np,computeDispatch:()=>Z,computeWorkPerThreadForConv2d:()=>Tp,computeWorkgroupInfoForMatMul:()=>y1,computeWorkgroupSizeForConv2d:()=>Ip,flatDispatchLayout:()=>te,isWebGPUSupported:()=>Ep,tilesFitEvenlyIntoShape:()=>D7});var Ws=r=>{let t=1;for(let e=0;e<r.length;e++)t*=r[e];return t};function D7(r,t){if(r.length!==t.length)throw new Error(`Cannot compute whether rank ${r.length} tiles fit evenly into rank ${t.length} shape - ranks must match.`);return t.every((e,o)=>e%r[o]===0)}function Z(r,t,e=[1,1,1],o=[1,1,1]){let[n,i,s]=[Math.ceil(Ws(r.x.map(a=>t[a]))/(e[0]*o[0])),r.y?Math.ceil(Ws(r.y.map(a=>t[a]))/(e[1]*o[1])):1,r.z?Math.ceil(Ws(r.z.map(a=>t[a]))/(e[2]*o[2])):1];return[n,i,s]}function y1(r,t,e,o=!1){let n=[8,8,1],i=[4,4,1];return o||(r<=8&&(i[1]=1),t<=16&&e<=16&&(n[0]=4)),{workgroupSize:n,elementsPerThread:i}}function Ip(r,t,e=!1){if(e)return[8,8,1];let o=Ws(r.x.map(i=>t[i])),n=Ws(r.y.map(i=>t[i]));return o<=4?[4,16,1]:n<=4?[16,4,1]:[16,16,1]}function Tp(r,t,e=!1){if(e)return[4,4,1];let o=Ws(r.x.map(i=>t[i])),n=Ws(r.y.map(i=>t[i]));return o<=4?[1,2,1]:n<=4?[2,1,1]:[2,2,1]}function te(r){return{x:r.map((t,e)=>e)}}function Yf(r){if(r==="float32"||r==="int32"||r==="bool"||r==="string")return 4;if(r==="complex64")return 8;throw new Error(`Unknown dtype ${r}`)}function Ep(){return!!(typeof globalThis<"u"&&globalThis.navigator&&globalThis.navigator.gpu)}function Np(r,t){Array.isArray(r)||(r=[r]),r.forEach(e=>{e!=null&&S.assert(e.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the WebGPU backend.`)})}var Mo=function(r){return r[r.MatMulReduceProgram=0]="MatMulReduceProgram",r[r.MatMulSplitKProgram=1]="MatMulSplitKProgram",r[r.MatMulSmallOutputSizeProgram=2]="MatMulSmallOutputSizeProgram",r[r.MatMulPackedProgram=3]="MatMulPackedProgram",r[r.MatMulMax=4]="MatMulMax",r}(Mo||{});var A7=G().getNumber("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD"),F7=(r,t)=>{let e=r.limits.maxComputeWorkgroupsPerDimension,o=t.dispatchLayout,n=t.dispatch;if(n.every(s=>s<=e))return n;S.assert(n[0]>e&&o.y===void 0&&o.z===void 0,()=>"Dispatch size exceeds WebGPU limits in Y or Z dimension.");let i=Math.ceil(Math.sqrt(n[0]));return i>e?(i=Math.ceil(Math.cbrt(n[0])),S.assert(i<=e,()=>"Total dispatch size exceeds WebGPU maximum."),[i,i,i]):[i,i,1]},sc=(()=>{class r extends xn{nextDataId(){return r.nextDataId++}constructor(e,o){if(super(),this.commandQueueOwnedIds=new WeakSet,this.dispatchCountInPass=0,this.disposed=!1,this.downloadWaitMs=0,this.tensorDataPendingDisposal=[],this.queryResolveBuffer=null,this.querySet=null,this.querySetCount=2,this.stagingPendingDisposal=[],this.uniformPendingDisposal=[],this.uploadWaitMs=0,this.hasReadSyncWarned=!1,this.hasTimestampQueryWarned=!1,!Ep())throw new Error("WebGPU is not supported on this device");this.pipelineCache={},this.device=e,this.queue=e.queue,this.commandEncoder=null,this.computePassEncoder=null,this.adapterInfo=new qf(o),this.supportTimestampQuery=this.device.features.has("timestamp-query"),this.thresholdToIncreaseWorkgroups=this.adapterInfo.intelGPUGeneration>=12?16:8,this.bufferManager=new jf(this.device),this.textureManager=new Xf(this.device),this.tensorMap=new os(this,ur()),G().getBool("WEBGPU_USE_PROFILE_TOOL")&&(this.dummyCanvas=document.createElement("canvas"),this.dummyCanvas.width=1,this.dummyCanvas.height=1,this.dummyContext=this.dummyCanvas.getContext("webgpu"),this.dummyContext.configure({device:e,format:"bgra8unorm"}),document.body.appendChild(this.dummyCanvas))}floatPrecision(){return 32}disposeData(e,o=!1){if(!this.tensorMap.has(e))return!0;let n=this.tensorMap.get(e);return o?n.refCount=0:n.refCount--,n.refCount>0?!1:(n.complexTensorInfos!=null&&(this.disposeData(n.complexTensorInfos.real.dataId),this.disposeData(n.complexTensorInfos.imag.dataId)),this.commandQueueOwnedIds.has(e)?(this.tensorDataPendingDisposal.push(e),!0):(this.releaseResource(e),this.tensorMap.delete(e),!0))}memory(){return{numBytesInGPU:this.bufferManager.numBytesUsed,numBytesAllocatedInGPU:this.bufferManager.numBytesAllocated,unreliable:!1}}releaseResource(e){let o=this.tensorMap.get(e);if(!(!o||!o.resource)){if(o.external){o.resource=null;return}o.resource instanceof GPUBuffer?this.bufferManager.releaseBuffer(o.resource):o.resource instanceof GPUTexture&&this.textureManager.releaseTexture(o.resource),o.resource=null}}refCount(e){return this.tensorMap.has(e)?this.tensorMap.get(e).refCount:0}incRef(e){let o=this.tensorMap.get(e);o.refCount++}decRef(e){if(this.tensorMap.has(e)){let o=this.tensorMap.get(e);o.refCount--}}write(e,o,n){if(n==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let i={id:this.nextDataId()};return this.tensorMap.set(i,{dtype:n,shape:o,values:e,refCount:1}),i}move(e,o,n,i,s){if(i==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.tensorMap.set(e,{dtype:i,shape:n,values:o,refCount:s})}submitQueue(){this.queue.submit([this.commandEncoder.finish()]),this.commandEncoder=null,this.dispatchCountInPass=0,this.commandQueueOwnedIds=new WeakSet,this.tensorDataPendingDisposal.forEach(e=>{this.releaseResource(e),this.tensorMap.delete(e)}),this.uniformPendingDisposal.forEach(e=>this.bufferManager.releaseBuffer(e)),this.stagingPendingDisposal.forEach(e=>this.bufferManager.releaseBuffer(e,!1)),this.tensorDataPendingDisposal=[],this.uniformPendingDisposal=[],this.stagingPendingDisposal=[]}ensureCommandEncoderReady(){this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder())}endComputePassEncoder(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}checkCompileCompletionAsync(){return X(this,null,function*(){let e;try{e=yield Promise.all(Object.values(this.pipelineCache))}catch(o){throw new Error(o.message)}Object.keys(this.pipelineCache).map((o,n)=>{this.pipelineCache[o]=e[n]})})}getBufferData(e){return X(this,null,function*(){if(G().getBool("WEBGPU_ENGINE_COMPILE_ONLY"))return console.warn("The data may be invalid since WEBGPU_ENGINE_COMPILE_ONLY is true, this can only be called when WEBGPU_ENGINE_COMPILE_ONLY is false"),null;let o=e.size,n=this.bufferManager.acquireBuffer(o,GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ);this.ensureCommandEncoderReady(),this.endComputePassEncoder(),this.commandEncoder.copyBufferToBuffer(e,0,n,0,o),this.submitQueue(),yield n.mapAsync(GPUMapMode.READ);let i=n.getMappedRange().slice(0);return n.unmap(),n!=null&&this.bufferManager.releaseBuffer(n),G().getBool("WEBGPU_USE_PROFILE_TOOL")&&(S.assert(this.dummyContext!==void 0,()=>"Fail to get context for profiling tool"),this.dummyContext.getCurrentTexture()),i})}convertAndCacheOnCPU(e,o){let n=this.tensorMap.get(e);return n.values=o,n.values}readSync(e){let o=this.tensorMap.get(e),{values:n,complexTensorInfos:i}=o;if(n!=null||o.dtype==="string")return n;if(o.dtype==="complex64"){let x=this.readSync(i.real.dataId),y=this.readSync(i.imag.dataId),v=S.convertBackendValuesAndArrayBuffer(R.mergeRealAndImagArrays(x,y).buffer,"float32");return this.convertAndCacheOnCPU(e,v),v}this.hasReadSyncWarned||(this.hasReadSyncWarned=!0,console.warn("The performance of synchronously reading data from GPU to CPU is poor on the webgpu backend, please use asynchronous APIs instead."));let s=["opaque","premultiplied"],a=o.resource,l=a.size;S.assert(l%4===0,()=>"Because there is 4 bytes for one pixel, buffer size must be multiple of 4.");let u=l/4,c=new ArrayBuffer(l),p=256,d=256,m=s.map(x=>new OffscreenCanvas(p,d)),f=new OffscreenCanvas(p,d);this.endComputePassEncoder(),m.map((x,y)=>{let v=x.getContext("webgpu");return v.configure({device:this.device,format:"bgra8unorm",usage:GPUTextureUsage.COPY_DST,alphaMode:s[y]}),v.getCurrentTexture()}).map((x,y)=>{let v=p*4,k=(K,j,J)=>{this.ensureCommandEncoderReady(),this.commandEncoder.copyBufferToTexture({buffer:a,bytesPerRow:v,offset:J},{texture:x},{width:K,height:j}),this.submitQueue();let ue=f.getContext("2d",{willReadFrequently:!0});ue.clearRect(0,0,K,j),ue.drawImage(m[y],0,0);let ce=ue.getImageData(0,0,K,j).data,xe=s[y],be=new Uint8ClampedArray(c,J,K*j*4);for(let Ie=0;Ie<be.length;Ie+=4)if(xe==="premultiplied")be[Ie+3]=ce[Ie+3];else{let qe=ce[Ie];be[Ie]=ce[Ie+2],be[Ie+1]=ce[Ie+1],be[Ie+2]=qe}},N=Math.floor(u/(p*d)),F=p,M=d,z=0;for(let K=0;K<N;K++)k(F,M,z),z+=p*d*4;let H=u%(p*d);M=Math.floor(H/p),M>0&&(k(F,M,z),z+=M*(p*4)),F=H%p,F>0&&k(F,1,z)});let g=S.convertBackendValuesAndArrayBuffer(c,o.dtype);return this.convertAndCacheOnCPU(e,g),g}read(e){return X(this,null,function*(){if(!this.tensorMap.has(e))throw new Error(`Tensor ${e} was not registered!`);let o=this.tensorMap.get(e),{values:n}=o;if(n!=null)return n;let i;if(o.dtype==="complex64"){let s=yield Promise.all([this.read(o.complexTensorInfos.real.dataId),this.read(o.complexTensorInfos.imag.dataId)]),a=s[0],l=s[1];i=R.mergeRealAndImagArrays(a,l)}else{let s=yield this.getBufferData(o.resource);i=S.convertBackendValuesAndArrayBuffer(s,o.dtype)}return this.convertAndCacheOnCPU(e,i),i})}copyBuffer(e){let o=e.size,n=e.usage,i=this.bufferManager.acquireBuffer(o,n);return this.ensureCommandEncoderReady(),this.endComputePassEncoder(),this.commandEncoder.copyBufferToBuffer(e,0,i,0,o),this.submitQueue(),i}createTensorFromGPUData(e,o,n){let i=e.buffer;if(n==="complex64")throw new Error("Cannot write to a complex64 dtype. ");let s={id:this.nextDataId()};this.tensorMap.set(s,{dtype:n,shape:o,values:null,refCount:1,external:e.zeroCopy});let a=this.tensorMap.get(s),l=Yf(a.dtype)*S.sizeFromShape(a.shape);if(e.buffer.size<l)throw new Error(`GPUBuffer size(${e.buffer.size}) is smaller than tensor size(${l})!`);if((e.buffer.usage&(GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC))!==(GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC))throw new Error("GPUBuffer.usage should include GPUBufferUsage.STORAGE | GPUBufferUsage.COPY_SRC!");return e.zeroCopy!==!0&&(i=this.copyBuffer(i)),a.resource=i,ur().makeTensorFromDataId(s,o,n,this)}readToGPU(e){let o=this.tensorMap.get(e),{values:n,dtype:i,shape:s,resource:a}=o;if(i==="complex64")throw new Error("Does not support reading buffer for complex64 dtype.");if(a==null)throw n!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");let l=a,u=l.size,c=l.usage,p=this.bufferManager.acquireBuffer(u,c);this.ensureCommandEncoderReady(),this.endComputePassEncoder(),this.commandEncoder.copyBufferToBuffer(a,0,p,0,u),this.submitQueue();let d=this.makeTensorInfo(s,i),m=ur().makeTensorFromTensorInfo(d),f=this.tensorMap.get(d.dataId);return f.resource=p,{tensorRef:m,buffer:p}}bufferSync(e){let o=this.readSync(e.dataId);if(e.dtype==="string")try{let n=o.map(i=>S.decodeString(i));return Oe(e.shape,e.dtype,n)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Oe(e.shape,e.dtype,o)}time(e){return X(this,null,function*(){!this.supportTimestampQuery&&!this.hasTimestampQueryWarned&&(console.warn("This device doesn't support timestamp-query extension. Start Chrome browser with flag --enable-dawn-features=allow_unsafe_apis to try it again. Otherwise, zero will be shown for the kernel time when profiling mode is enabled."),this.hasTimestampQueryWarned=!0);let o=this.activeTimers,n=[],i=!1;this.programTimersStack==null?(this.programTimersStack=n,i=!0):this.activeTimers.push(n),this.activeTimers=n,e();let s=S.flatten(this.activeTimers.map(c=>c.query)).filter(c=>c!=null),a=S.flatten(this.activeTimers.map(c=>c.name)).filter(c=>c!=null);this.activeTimers=o,i&&(this.programTimersStack=null);let l={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null},u=yield Promise.all(s);return l.kernelMs=S.sum(u),l.getExtraProfileInfo=()=>u.map((c,p)=>({name:a[p],ms:c})).map(c=>`${c.name}: ${c.ms}`).join(", "),this.uploadWaitMs=0,this.downloadWaitMs=0,l})}makeTensorInfo(e,o,n){return o==="string"&&n!=null&&n.length>0&&S.isString(n[0])&&(n=n.map(s=>S.encodeString(s))),{dataId:this.write(n,e,o),shape:e,dtype:o}}tensorToBinding(e){if(!e)return null;let n=this.tensorMap.get(e.dataId).resource;return n instanceof GPUBuffer?{buffer:n}:n instanceof GPUTexture?n.createView():n}uploadToGPU(e){let o=this.tensorMap.get(e);if(o.resource!=null)return;let n=Yf(o.dtype)*S.sizeFromShape(o.shape),i,s=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST;if(o.values){if(i=this.bufferManager.acquireBuffer(n,s,!0),i.mapState==="unmapped"){let a=this.bufferManager.acquireBuffer(n,GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC,!0,!1),l=a.getMappedRange();o.dtype==="int32"||o.dtype==="bool"?new Int32Array(l).set(o.values):new Float32Array(l).set(o.values),a.unmap(),this.ensureCommandEncoderReady(),this.endComputePassEncoder(),this.commandEncoder.copyBufferToBuffer(a,0,i,0,n),this.stagingPendingDisposal.push(a)}else{let a=i.getMappedRange();o.dtype==="int32"||o.dtype==="bool"?new Int32Array(a).set(o.values):new Float32Array(a).set(o.values),i.unmap()}o.values=null}else i=this.bufferManager.acquireBuffer(n,s);o.resource=i}makeUniforms(e){let o=0,n=0,i=[],s=1;e.forEach(u=>{u.data.length===0&&(u.data=[1]);let c;switch(u.data.length){case 1:c=4;break;case 2:c=8;break;case 3:c=16;break;case 4:c=16;break;case 5:c=16;break;case 6:c=16;break;default:S.assert(!1,()=>`Unsupported ${u.data.length}D shape`)}(n===5||n===6)&&(c=16),c>s&&(s=c),o=Math.ceil(o/c)*c,n=u.data.length,i.push(o),o+=u.data.length*4}),o=Math.ceil(o/s)*s;let a=new ArrayBuffer(o);e.forEach((u,c)=>{let p=i[c];u.type==="int32"?new Int32Array(a,p,u.data.length).set(u.data):u.type==="uint32"?new Uint32Array(a,p,u.data.length).set(u.data):new Float32Array(a,p,u.data.length).set(u.data)});let l=this.bufferManager.acquireBuffer(o,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);return this.queue.writeBuffer(l,0,a,0,o),this.uniformPendingDisposal.push(l),{offset:0,size:o,buffer:l}}runWebGPUProgram(e,o,n,i,s){if(s||(s=this.makeTensorInfo(e.outputShape,n)),S.sizeFromShape(s.shape)===0)return this.tensorMap.get(s.dataId).values=S.getTypedArrayFromDType(s.dtype,0),s;this.uploadToGPU(s.dataId),e.dispatch=F7(this.device,e);let a=o.map((u,c)=>{if(u.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");return this.uploadToGPU(u.dataId),{dtype:this.tensorMap.get(u.dataId).dtype,shape:u.shape,name:e.variableNames[c]}});e.shaderKey=mI(e,a,s);let l=G().getBool("WEBGPU_ENGINE_COMPILE_ONLY");return e.shaderKey in this.pipelineCache||(this.pipelineCache[e.shaderKey]=dI(this.device,e,a,s,l)),e.pipeline=this.pipelineCache[e.shaderKey],l||this.recordAndSubmit(e,s,o,i),s}recordAndSubmit(e,o,n,i){if(e.pipeline instanceof Promise)throw new Error("Please call checkCompileCompletionAsync to ensure parallel compilation is done!");let s=[],a=[],l="int32";if(e.pixelsOpType==null){s.push({type:"float32",data:[NaN]},{type:"float32",data:[1/0]}),a=n.concat(o).map(f=>f.shape);let m="int32";a.map(f=>{s.push({type:m,data:f});let g=S.computeStrides(f);s.push({type:m,data:g})})}else{let m=S.computeStrides(o.shape);s.push({type:l,data:m})}if(e.size){let m=S.sizeFromShape(e.outputShape);s.push({type:l,data:[e.outputComponent?m/e.outputComponent:m]})}i&&(s=[...s,...i]);let u=[this.tensorToBinding(o),...n.map(m=>this.tensorToBinding(m)),this.makeUniforms(s)];n.forEach(m=>{this.commandQueueOwnedIds.add(m.dataId)}),this.commandQueueOwnedIds.add(o.dataId);let c=this.device.createBindGroup({layout:e.pipeline.getBindGroupLayout(0),entries:u.map((m,f)=>({binding:f,resource:m}))}),p=this.activeTimers!=null;this.ensureCommandEncoderReady();let d={};p&&this.supportTimestampQuery?(this.endComputePassEncoder(),this.querySet==null&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:this.querySetCount})),d.timestampWrites={querySet:this.querySet,beginningOfPassWriteIndex:0,endOfPassWriteIndex:1},this.computePassEncoder=this.commandEncoder.beginComputePass(d)):this.computePassEncoder||(this.computePassEncoder=this.commandEncoder.beginComputePass(d)),this.computePassEncoder.setPipeline(e.pipeline),this.computePassEncoder.setBindGroup(0,c),this.computePassEncoder.dispatchWorkgroups(e.dispatch[0],e.dispatch[1],e.dispatch[2]),this.dispatchCountInPass++,(p||G().get("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE")<=this.dispatchCountInPass||e.pixelsOpType===Mi.DRAW)&&(this.endComputePassEncoder(),p?this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime()}):this.submitQueue())}getQueryTime(){return X(this,null,function*(){if(!this.supportTimestampQuery)return 0;this.queryResolveBuffer==null&&(this.queryResolveBuffer=this.bufferManager.acquireBuffer(this.querySetCount*8,GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST|GPUBufferUsage.QUERY_RESOLVE)),this.commandEncoder.resolveQuerySet(this.querySet,0,this.querySetCount,this.queryResolveBuffer,0);let e=this.bufferManager.acquireBuffer(this.querySetCount*8,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST);this.commandEncoder.copyBufferToBuffer(this.queryResolveBuffer,0,e,0,this.querySetCount*8),this.submitQueue(),yield e.mapAsync(GPUMapMode.READ);let o=new BigUint64Array(e.getMappedRange()),n=Number(o[1]-o[0])/1e6;return e.unmap(),this.bufferManager.releaseBuffer(e),n})}shouldExecuteOnCPU(e,o=A7){return G().getBool("WEBGPU_CPU_FORWARD")&&e.every(n=>this.tensorMap.get(n.dataId).resource==null&&S.sizeFromShape(n.shape)<o)}numDataIds(){return this.tensorMap.numDataIds()-this.tensorDataPendingDisposal.length}dispose(){this.disposed||(this.querySet!=null&&this.querySet.destroy(),this.bufferManager.dispose(),this.textureManager.dispose(),this.disposed=!0)}}return r.nextDataId=0,r})();Ep()&&gm("webgpu",()=>X(null,null,function*(){let r={powerPreference:G().get("WEBGPU_USE_LOW_POWER_GPU")?"low-power":"high-performance"},t=yield navigator.gpu.requestAdapter(r),e={},o=[];t.features.has("timestamp-query")&&o.push("timestamp-query"),t.features.has("bgra8unorm-storage")&&o.push(["bgra8unorm-storage"]),e.requiredFeatures=o;let n=t.limits;e.requiredLimits={maxComputeWorkgroupStorageSize:n.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:n.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:n.maxStorageBufferBindingSize,maxBufferSize:n.maxBufferSize,maxComputeWorkgroupSizeX:n.maxComputeWorkgroupSizeX,maxComputeInvocationsPerWorkgroup:n.maxComputeInvocationsPerWorkgroup};let i=yield t.requestDevice(e),s="info"in t?t.info:"requestAdapterInfo"in t?yield t.requestAdapterInfo():void 0;return new sc(i,s)}),3);var Se=function(r){return r[r.ADD=0]="ADD",r[r.ATAN2=1]="ATAN2",r[r.COMPLEX_MULTIPLY_IMAG=2]="COMPLEX_MULTIPLY_IMAG",r[r.COMPLEX_MULTIPLY_REAL=3]="COMPLEX_MULTIPLY_REAL",r[r.DIV=4]="DIV",r[r.ELU_DER=5]="ELU_DER",r[r.EQUAL=6]="EQUAL",r[r.FLOOR_DIV=7]="FLOOR_DIV",r[r.GREATER=8]="GREATER",r[r.GREATER_EQUAL=9]="GREATER_EQUAL",r[r.LESS=10]="LESS",r[r.LESS_EQUAL=11]="LESS_EQUAL",r[r.LOGICAL_AND=12]="LOGICAL_AND",r[r.LOGICAL_OR=13]="LOGICAL_OR",r[r.MAX=14]="MAX",r[r.MIN=15]="MIN",r[r.MOD=16]="MOD",r[r.MUL=17]="MUL",r[r.NOT_EQUAL=18]="NOT_EQUAL",r[r.POW=19]="POW",r[r.PRELU=20]="PRELU",r[r.SQUARED_DIFFERENCE=21]="SQUARED_DIFFERENCE",r[r.SUB=22]="SUB",r}(Se||{}),O7="let resultTemp = a + b;",L7="let resultTemp = atan2(a, b);",M7="let resultTemp = areal * breal - aimag * bimag;",B7="let resultTemp = areal * bimag + aimag * breal;",V7="let resultTemp = a / b;",W7="let resultTemp = select(a * (b + 1.0), a, b >= b - b);",z7=`
  let zero = sign(a) * 0 + 0;
  let one = sign(b) * 0 + 1;
  let resultTemp = select(zero, one, a == b);
`,U7=`
  let remainder =
      select(a % b, round(a % b), (round(a) == a) & (round(b) == b));
  let quotient = (a - remainder) / b;
  let resultTemp =
      round(select(quotient, quotient - 1, sign(remainder) == -sign(b)));
`,G7=`
  let zero = sign(a) * 0 + 0;
  let one = sign(b) * 0 + 1;
  let resultTemp = select(zero, one, a > b);
`,H7=`
  let zero = sign(a) * 0 + 0;
  let one = sign(b) * 0 + 1;
  let resultTemp = select(zero, one, a >= b);
`,K7=`
  let zero = sign(a) * 0 + 0;
  let one = sign(b) * 0 + 1;
  let resultTemp = select(zero, one, a < b);
`,q7=`
  let zero = sign(a) * 0 + 0;
  let one = sign(b) * 0 + 1;
  let resultTemp = select(zero, one, a <= b);
`,j7="return f32(a >= 1.0 && b >= 1.0);",X7=`return (vec4<f32>(a >= vec4<f32>(1.0)) *
  vec4<f32>(b >= vec4<f32>(1.0)));`,Y7="return f32(a >= 1.0 || b >= 1.0);",Q7=`return min(vec4<f32>(a >= vec4<f32>(1.0)) +
  vec4<f32>(b >= vec4<f32>(1.0)), vec4<f32>(1.0));`,Z7="let resultTemp = max(a, b);",J7="let resultTemp = min(a, b);",e8=`
  let isNaN = b == 0.;
  var resultTemp = a % b;
  resultTemp = select((resultTemp + b) % b, resultTemp,
      (a < 0. && b < 0.) || (a >= 0. && b > 0.));
`,t8=`
  let isNaN = !vec4<bool>(b);
  var resultTemp = vec4<f32>(a % b);
  if (!((a[0] < 0. && b[0] < 0.) || (a[0] >= 0. && b[0] > 0.))) {
    resultTemp[0] = (resultTemp[0] + b[0]) % b[0];
  }
  if (!((a[1] < 0. && b[1] < 0.) || (a[1] >= 0. && b[1] > 0.))) {
    resultTemp[1] = (resultTemp[1] + b[1]) % b[1];
  }
  if (!((a[2] < 0. && b[2] < 0.) || (a[2] >= 0. && b[2] > 0.))) {
    resultTemp[2] = (resultTemp[2] + b[2]) % b[2];
  }
  if (!((a[3] < 0. && b[3] < 0.) || (a[3] >= 0. && b[3] > 0.))) {
    resultTemp[3] = (resultTemp[3] + b[3]) % b[3];
  }
`,r8="let resultTemp = a * b;",o8=`
  var resultTemp = f32(a != b);
  let valueForNaN = 1.0;
`,n8=`
  var resultTemp = vec4<f32>(a != b);
  let valueForNaN = 1.0;
`,i8=`
  let isNaN = a < 0.0 && floor(b) < b;
  if (b == 0.0) {
    return 1.0;
  }
  var resultTemp = select(sign(a) * pow(abs(a), b), pow(abs(a), b),
      round(abs(b) % 2.0) != 1.0);
`,s8=`
  let isModRound1Bool = vec4<i32>(round(abs(b) % vec4<f32>(2.0))) == vec4<i32>(1);
  let isModRound1 = vec4<f32>(isModRound1Bool);
  let multiplier = sign(a) * isModRound1 + (vec4<f32>(1.0) - isModRound1);
  var resultTemp = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  let isExpZero = b == vec4<f32>(0.0);
  if (isExpZero.r) {
    resultTemp.r = 1.0;
  }
  if (isExpZero.g) {
    resultTemp.g = 1.0;
  }
  if (isExpZero.b) {
    resultTemp.b = 1.0;
  }
  if (isExpZero.a) {
    resultTemp.a = 1.0;
  }
  let isNaN = (a < vec4<f32>(0.0)) & (floor(b) < b);
`,a8="if (a < 0.0) { return b * a; }  return a;",l8=`
  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));
  return (aLessThanZero * (b * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);
`,u8="let resultTemp = (a - b) * (a - b);",c8="let resultTemp = a - b;";function ac(r,t){let e;do{switch(r){case Se.ATAN2:e=L7;break;case Se.MAX:e=Z7;break;case Se.MIN:e=J7;break;case Se.MOD:e=t?t8:e8;break;case Se.NOT_EQUAL:e=t?n8:o8;break;case Se.POW:e=t?s8:i8;break;default:continue}let o,n,i;return t?(o="isnanVec4",n="vec4<f32>",i="vec4<bool>"):(o="isnan",n="f32",i="bool"),`
      let aIsNaN = ${o}(a);
      let aPostLegalization = select(a, ${n}(42), aIsNaN);
      let bIsNaN = ${o}(b);
      let bPostLegalization = select(b, ${n}(42), bIsNaN);
      let isNaN = false;
      let valueForNaN = uniforms.NAN;
      {
        let a = aPostLegalization;
        let b = bPostLegalization;
        ${e}
        return select(
            resultTemp, ${n}(valueForNaN),
            ${i}(isNaN) | aIsNaN | bIsNaN);
      }
    `}while(!1);switch(r){case Se.ADD:e=O7;break;case Se.COMPLEX_MULTIPLY_IMAG:e=B7;break;case Se.COMPLEX_MULTIPLY_REAL:e=M7;break;case Se.DIV:e=V7;break;case Se.ELU_DER:e=W7;break;case Se.EQUAL:e=z7;break;case Se.FLOOR_DIV:e=U7;break;case Se.GREATER:e=G7;break;case Se.GREATER_EQUAL:e=H7;break;case Se.LESS:e=K7;break;case Se.LESS_EQUAL:e=q7;break;case Se.LOGICAL_AND:return t?X7:j7;case Se.LOGICAL_OR:return t?Q7:Y7;case Se.MUL:e=r8;break;case Se.PRELU:return t?l8:a8;case Se.SQUARED_DIFFERENCE:e=u8;break;case Se.SUB:e=c8;break;default:}return`
    ${e}
    return resultTemp;
  `}var ne=function(r){return r[r.ABS=0]="ABS",r[r.ACOS=1]="ACOS",r[r.ACOSH=2]="ACOSH",r[r.ASIN=3]="ASIN",r[r.ASINH=4]="ASINH",r[r.ATAN=5]="ATAN",r[r.ATANH=6]="ATANH",r[r.CEIL=7]="CEIL",r[r.COS=8]="COS",r[r.COSH=9]="COSH",r[r.ELU=10]="ELU",r[r.ERF=11]="ERF",r[r.EXP=12]="EXP",r[r.EXPM1=13]="EXPM1",r[r.FLOOR=14]="FLOOR",r[r.IS_FINITE=15]="IS_FINITE",r[r.IS_INF=16]="IS_INF",r[r.IS_NAN=17]="IS_NAN",r[r.LINEAR=18]="LINEAR",r[r.LOG=19]="LOG",r[r.LOG1P=20]="LOG1P",r[r.LOGICAL_NOT=21]="LOGICAL_NOT",r[r.NEG=22]="NEG",r[r.RELU=23]="RELU",r[r.RELU6=24]="RELU6",r[r.LEAKYRELU=25]="LEAKYRELU",r[r.RECIPROCAL=26]="RECIPROCAL",r[r.ROUND=27]="ROUND",r[r.RSQRT=28]="RSQRT",r[r.SELU=29]="SELU",r[r.SIGMOID=30]="SIGMOID",r[r.SIGN=31]="SIGN",r[r.SIN=32]="SIN",r[r.SINH=33]="SINH",r[r.SOFTPLUS=34]="SOFTPLUS",r[r.SQRT=35]="SQRT",r[r.SQUARE=36]="SQUARE",r[r.STEP=37]="STEP",r[r.TAN=38]="TAN",r[r.TANH=39]="TANH",r[r.TO_INT=40]="TO_INT",r}(ne||{}),p8="return abs(a);",d8=`
  if (abs(a) > 1.) {
    return uniforms.NAN;
  }
  return acos(a);
`,m8=`
  if (a < 1.) {
    return uniforms.NAN;
  }
  return acosh(a);
`,f8=`
  if (abs(a) > 1.) {
    return uniforms.NAN;
  }
  return asin(a);
`,h8="return asinh(a);",g8=`
  if (isnan(a)) {
    return uniforms.NAN;
  }
  return atan(a);
`,x8=`
  if (abs(a) > 1.) {
    return uniforms.NAN;
  }
  if (a == 1.) {
    return uniforms.INFINITY;
  }
  if (a == -1.) {
    return -uniforms.INFINITY;
  }
  return atanh(a);
`,y8="return ceil(a);",b8="return cos(a);",v8=`
  let e2x = exp(-a);
  return (e2x + 1.0 / e2x) / 2.0;
`,S8="return exp(a) - 1.0;",w8="if (a >= 0.0) { return a; }  return (exp(a) - 1.0);",C8=`
  var resFloat = exp(a) - vec4<f32>(1.0);
  if (a.r >= 0.0) {
    resFloat.r = a.r;
  }
  if (a.g >= 0.0) {
    resFloat.g = a.g;
  }
  if (a.b >= 0.0) {
    resFloat.b = a.b;
  }
  if (a.a >= 0.0) {
    resFloat.a = a.a;
  }
  return resFloat;
`,_8=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  let p = ${R.ERF_P};
  let a1 = ${R.ERF_A1};
  let a2 = ${R.ERF_A2};
  let a3 = ${R.ERF_A3};
  let a4 = ${R.ERF_A4};
  let a5 = ${R.ERF_A5};

  let sign = sign(a);
  let absA = abs(a);
  let t = 1.0 / (1.0 + p * absA);
  return sign * (1.0 - (((((a5 * t + a4) * t) + a3) * t + a2) * t + a1) * t * exp(-absA * absA));
`,k8="return exp(a);",I8="return floor(a);",T8="return f32(!isnan(a) && !isinf(a));",E8="return f32(isinf(a));",N8="return f32(isnan(a));",R8="return a;",$8=`if (a < 0.0) { return uniforms.NAN; }
  return log(a);`,P8=`
  if (isnan(a)) { return a; }
  return log(1.0 + a);
`,D8="return f32(!(a >= 1.0));",A8="return -a;",F8="if (a < 0.0) { return uniforms.alpha * a; } return a;",O8=`
  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));
  return (aLessThanZero * (uniforms.alpha * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);
`,L8="return 1.0 / a;",M8="return select(a, 0.0, a < 0.0);",B8="return clamp(a, 0.0, 6.0);",V8="return clamp(a, vec4<f32>(0.0, 0.0, 0.0, 0.0), vec4<f32>(6.0, 6.0, 6.0, 6.0));",W8=`
  return select(a, vec4<f32>(0.0), a < vec4<f32>(0.0));
`,z8="return round(a);",U8="return inverseSqrt(a);",G8=`
  if (a >= 0.0) {
    return ${R.SELU_SCALE} * a;
  } else {
    return ${R.SELU_SCALEALPHA} * (exp(a) - 1.0);
  }
`,H8="return 1.0 / (1.0 + exp(-1.0 * a));",K8="return sign(a);",q8="return sin(a);",j8=`
  let e2x = exp(a);
  return (e2x - 1.0 / e2x) / 2.0;
`,X8=`
  let epsilon = 1.1920928955078125e-7;
  let threshold = log(epsilon) + 2.0;

  let too_large = a > -threshold;
  let too_small = a < threshold;
  let exp_a = exp(a);

  if (too_large) {
    return a;
  } else if (too_small) {
    return exp_a;
  } else {
    return log(exp_a + 1.0);
  }
`,Y8="return sqrt(a);",Q8="return a * a;",Z8=`
  if (isnan(a)) {
    return a;
  }

  return select(uniforms.stepAlpha, 1.0, a > 0.0);
`,J8="return tan(a);",eK=`
  let e2x = exp(-2.0 * abs(a));
  return sign(a) * (1.0 - e2x) / (1.0 + e2x);
`,tK="return f32(i32((a)));";function An(r,t){switch(r){case ne.ABS:return p8;case ne.ACOS:return d8;case ne.ACOSH:return m8;case ne.ASIN:return f8;case ne.ASINH:return h8;case ne.ATAN:return g8;case ne.ATANH:return x8;case ne.COS:return b8;case ne.COSH:return v8;case ne.CEIL:return y8;case ne.ELU:return t?C8:w8;case ne.ERF:return _8;case ne.EXP:return k8;case ne.EXPM1:return S8;case ne.FLOOR:return I8;case ne.IS_FINITE:return T8;case ne.IS_INF:return E8;case ne.IS_NAN:return N8;case ne.LINEAR:return R8;case ne.LOG:return $8;case ne.LOG1P:return P8;case ne.LOGICAL_NOT:return D8;case ne.NEG:return A8;case ne.LEAKYRELU:return t?O8:F8;case ne.RECIPROCAL:return L8;case ne.RELU:return t?W8:M8;case ne.RELU6:return t?V8:B8;case ne.ROUND:return z8;case ne.RSQRT:return U8;case ne.SELU:return G8;case ne.SIGMOID:return H8;case ne.SIGN:return K8;case ne.SIN:return q8;case ne.SINH:return j8;case ne.SOFTPLUS:return X8;case ne.SQRT:return Y8;case ne.SQUARE:return Q8;case ne.STEP:return Z8;case ne.TAN:return J8;case ne.TANH:return eK;case ne.TO_INT:return tK;default:throw new Error(`BinaryType ${r} is not implemented!`)}}function rr(r,t=!1,e=!1,o=3){if(r===null)return"";let n="";if(r==="linear")n=An(ne.LINEAR);else if(r==="relu")n=An(ne.RELU,e);else if(r==="elu")n=An(ne.ELU,e);else if(r==="relu6")n=An(ne.RELU6,e);else if(r==="prelu")n=ac(Se.PRELU,e);else if(r==="sigmoid")n=An(ne.SIGMOID,e);else if(r==="leakyrelu")n=An(ne.LEAKYRELU,e);else throw new Error(`Activation ${r} has not been implemented for the WebGPU backend.`);let s=ze(e?4:1),a="";return t?a=`
      fn activation(a : ${s}, coords : vec${o}<i32>) -> ${s} {
        let b = getPreluActivationWeightsByOutputCoords(coords);
        ${n}
      }`:a=`
      fn activation(a : ${s}, coords : vec${o}<i32>) -> ${s} {
        ${n}
      }`,a}function Zr(r,t){return`
      ${r?"value = value + getBiasByOutputCoords(coords);":""}
      ${t?"value = activation(value, coords);":""}
      `}function b1(r,t,e=!1,o=!1,n=!1,i=1){S.assert(r&&i===1||!r,()=>`transposeA ${r} is not compatible with component size ${i}`);let s=`
      ${r?"value = getA(batch, col, row);":"value = getA(batch, row, col);"}

    `,a=t?"value = getB(batch, col, row);":"value = getB(batch, row, col);";return`
  fn mm_readA(batch: i32, row: i32, col: i32) -> ${ze(i)} {
    var value = ${ze(i)}(0.0);
    ${e&&n?s:`
    ${r?"if(row < uniforms.dimAOuter && col < uniforms.dimInner)":"if(row < uniforms.aShape[1] && col < uniforms.aShape[2])"}
    {
      ${s}
    }
    `}
    return value;
  }

  fn mm_readB(batch: i32, row: i32, col: i32) -> ${ze(i)} {
    var value = ${ze(i)}(0.0);
    ${a}
    return value;
  }
  `}function Rp(r,t,e,o,n=!1,i=!1,s=!1,a=1){return`
  ${b1(e,o,n,i,s,a)}
  fn mm_write(batch: i32, row: i32, col: i32, valueIn: ${ze(a)}) {
    ${n&&i?"":"if (row < uniforms.dimAOuter && col < uniforms.dimBOuter)"}
    {
      var value = valueIn;
      let coords = vec3<i32>(batch, row, col);
      ${Zr(r,t)}
      setOutputAtCoords(coords[0], coords[1], coords[2], value);
    }
  }
  `}var rK=(r,t)=>r?`
        mm_Asub[inputRow][inputCol] = mm_readA(batchA,
          kStart + inputRow,
          globalRowStart + inputCol * ${t});
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(batchA,
          globalRow + innerRow,
          kStart + inputCol * ${t});
        `,oK=(r,t,e,o)=>{if(r)return`
      for (var k = 0; k < ${o}; k++) {
        let BCached0 = mm_Bsub[k][tileCol];
        let ACached0 = mm_Asub[k][localRow];
        for (var i = 0; i < ${e}; i++) {
          acc[i] = fma(BCached0, vec4<f32>(ACached0[i]), acc[i]);
        }
      }`;{let n="",i="";for(let s=0;s<t;s++)n+=`let BCached${s} = mm_Bsub[k * ${t} + ${s}][tileCol];`,i+=`acc[i] = fma(BCached${s}, vec4<f32>(ACached[${s}]), acc[i]);`;return`
      for (var k = 0; k < ${o/t}; k++) {
        ${n}
        for (var i = 0; i < ${e}; i++) {
          let ACached = mm_Asub[tileRow + i][k];
          ${i}
        }
      }`}};function zs(r,t,e=!1,o=32,n=!1,i=32,s=!1){let a=t[1]*r[1],l=t[0]*r[0],u=e?a:o,c=e?o:a,p=u/t[0],d=o/t[1],m=r[1],f=r[0];return S.assert((e&&p===4&&r[1]===4||!e&&(p===3||p===4))&&u%t[0]===0&&o%t[1]===0&&r[0]===4,()=>`If transposeA ${e} is true, innerElementSize ${p} and workPerThread[1] ${r[1]} must be 4.
          Otherwise, innerElementSize ${p} must be 3 or 4.
      tileAWidth ${u} must be divisible by workgroupSize[0]${t[0]}. tileInner ${o} must be divisible by workgroupSize[1] ${t[1]}. colPerThread ${r[0]} must be 4.`),`
  var<workgroup> mm_Asub : array<array<vec${p}<f32>, ${u/p}>, ${c}>;
  var<workgroup> mm_Bsub : array<array<vec4<f32>, ${l/r[0]}>, ${o}>;

  ${Q()} {
    let localRow = i32(localId.y);
    let tileRow = localRow * ${m};
    let tileCol = i32(localId.x);

    let globalRow = i32(globalId.y) * ${m};
    let globalCol = i32(globalId.x) * ${f};
    let batch = ${n?"0":"i32(globalId.z)"};
    let batchA = ${n||!s?"batch":"batch % uniforms.aShape[0]"};
    let batchB = ${n||!s?"batch":"batch % uniforms.bShape[0]"};
    let globalRowStart = i32(workgroupId.y) * ${a};

    let numTiles = ${n?`${Math.ceil(i/o)}`:`(uniforms.dimInner - 1) / ${o} + 1`};
    var kStart = ${n?`i32(globalId.z) * ${i}`:"0"};

    var acc: array<vec4<f32>, ${m}>;

    // Loop over shared dimension.
    let tileRowB = localRow * ${d};
    for (var t = 0; t < numTiles; t++) {
        // Load one tile of A into local memory.
        for (var innerRow = 0; innerRow < ${m}; innerRow++) {
            let inputRow = tileRow + innerRow;
            let inputCol = tileCol;
            ${rK(e,p)}
        }

        // Load one tile of B into local memory.
        for (var innerRow = 0; innerRow < ${d}; innerRow++) {
            let inputRow = tileRowB + innerRow;
            let inputCol = tileCol;
            mm_Bsub[inputRow][inputCol] = mm_readB(batchB, kStart + inputRow, globalCol);
        }
        kStart = kStart + ${o};
        workgroupBarrier();

        // Compute acc values for a single thread.
        ${oK(e,p,m,o)}
        workgroupBarrier();
    }

    for (var innerRow = 0; innerRow < ${m}; innerRow++) {
        mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);
    }
  }`}var hI=r=>r?`
        mm_Asub[inputRow][inputCol] = mm_readA(batchA,
          kStart + inputRow,
          globalRowStart + inputCol);
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(batchA,
          globalRowStart + inputRow,
          kStart + inputCol);
        `,nK=r=>r?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];";function Us(r,t,e=!1,o=32,n=!1,i=32,s=!1,a=!1){let l=r[1]*t[1],u=r[0]*t[0],c=e?l:o,p=e?o:l;S.assert(p%t[1]===0&&c%t[0]===0&&o%t[1]===0,()=>`tileAHight ${p} must be divisible by workgroupSize[1]${t[1]}, tileAWidth ${c} must be divisible by workgroupSize[0]${t[0]}, tileInner ${o} must be divisible by workgroupSize[1]${t[1]}`);let d=p/t[1],m=c/t[0],f=o/t[1],g=r[1],x=r[0],y=s?`
      let localRow = i32(localId.y);
      let localCol = i32(localId.x);
      let globalRowStart = i32(workgroupId.y) * ${l};
      let globalColStart = i32(workgroupId.x) * ${u};

      // Loop over shared dimension.
      for (var t = 0; t < numTiles; t++) {
        // Load one tile of A into local memory.
        for (var inputRow = localRow; inputRow < ${p}; inputRow = inputRow + ${t[1]}) {
          for (var inputCol = localCol; inputCol < ${c}; inputCol = inputCol + ${t[0]}) {
            ${hI(e)}
          }
        }
        // Load one tile of B into local memory.
        for (var inputRow = localRow; inputRow < ${o}; inputRow = inputRow + ${t[1]}) {
              for (var inputCol = localCol; inputCol < ${u}; inputCol = inputCol + ${t[0]}) {
            mm_Bsub[inputRow][inputCol] = mm_readB(batchB,
              kStart + inputRow,
              globalColStart + inputCol);
          }
        }
        kStart = kStart + ${o};
        workgroupBarrier();

        // Compute acc values for a single thread.
        var BCached : array<f32, ${x}>;
        for (var k = 0; k < ${o}; k++) {
          for (var inner = 0; inner < ${x}; inner++) {
            BCached[inner] = mm_Bsub[k][localCol + inner * ${t[0]}];
          }
          for (var innerRow = 0; innerRow < ${g}; innerRow++) {
            let ACached = ${e?`mm_Asub[k][localRow + innerRow * ${t[1]}];`:`mm_Asub[localRow + innerRow * ${t[1]}][k];`}
            for (var innerCol = 0; innerCol < ${x}; innerCol++) {
              acc[innerRow][innerCol] =
                  fma(ACached, BCached[innerCol], acc[innerRow][innerCol]);
            }
          }
        }
        workgroupBarrier();
      }
      for (var innerRow = 0; innerRow < ${g}; innerRow++) {
        let gRow = globalRowStart + localRow + innerRow * ${t[1]};
        for (var innerCol = 0; innerCol < ${x}; innerCol++) {
          let gCol = globalColStart + localCol + innerCol * ${t[0]};
          mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);
        }
      }
      `:`
  let tileRow = i32(localId.y) * ${g};
  let tileCol = i32(localId.x) * ${x};

  let globalRow = i32(globalId.y) * ${g};
  let globalCol = i32(globalId.x) * ${x};
  let globalRowStart = i32(workgroupId.y) * ${l};

  let tileRowA = i32(localId.y) * ${d};
  let tileColA = i32(localId.x) * ${m};
  let tileRowB = i32(localId.y) * ${f};
  // Loop over shared dimension.
  for (var t = 0; t < numTiles; t++) {
    // Load one tile of A into local memory.
    for (var innerRow = 0; innerRow < ${d}; innerRow++) {
      for (var innerCol = 0; innerCol < ${m}; innerCol++) {
        let inputRow = tileRowA + innerRow;
        let inputCol = tileColA + innerCol;
        ${hI(e)}
      }
    }

    // Load one tile of B into local memory.
    for (var innerRow = 0; innerRow < ${f}; innerRow++) {
      for (var innerCol = 0; innerCol < ${x}; innerCol++) {
        let inputRow = tileRowB + innerRow;
        let inputCol = tileCol + innerCol;
        mm_Bsub[inputRow][inputCol] = mm_readB(batchB,
          kStart + inputRow,
          globalCol + innerCol);
      }
    }
    kStart = kStart + ${o};
    workgroupBarrier();

    // Compute acc values for a single thread.
    var BCached : array<f32, ${x}>;
    for (var k = 0; k < ${o}; k++) {
      for (var inner = 0; inner < ${x}; inner++) {
        BCached[inner] = mm_Bsub[k][tileCol + inner];
      }

      for (var innerRow = 0; innerRow < ${g}; innerRow++) {
        ${nK(e)}
        for (var innerCol = 0; innerCol < ${x}; innerCol++) {
          acc[innerRow][innerCol] =
              fma(ACached, BCached[innerCol], acc[innerRow][innerCol]);
        }
      }
    }

    workgroupBarrier();
  }

  for (var innerRow = 0; innerRow < ${g}; innerRow++) {
    for (var innerCol = 0; innerCol < ${x}; innerCol++) {
      mm_write(batch, globalRow + innerRow, globalCol + innerCol,
          acc[innerRow][innerCol]);
    }
  }
  `;return`
    var<workgroup> mm_Asub : array<array<f32, ${c}>, ${p}>;
    var<workgroup> mm_Bsub : array<array<f32, ${u}>, ${o}>;

    ${Q()} {
      let batch = ${n?"0":"i32(globalId.z)"};
      let batchA = ${n||!a?"batch":"batch % uniforms.aShape[0]"};
      let batchB = ${n||!a?"batch":"batch % uniforms.bShape[0]"};
      let numTiles = ${n?`${Math.ceil(i/o)}`:`(uniforms.dimInner - 1) / ${o} + 1`};
      var kStart = ${n?`i32(globalId.z) * ${i}`:"0"};

      var acc : array<array<f32, ${x}>, ${g}>;

      // Without this initialization strange values show up in acc.
      for (var innerRow = 0; innerRow < ${g}; innerRow++) {
        for (var innerCol = 0; innerCol < ${x}; innerCol++) {
          acc[innerRow][innerCol] = 0.0;
        }
      }
      ${y}
    }
  `}var iK=r=>r?`
      mm_readA(batchA, colA, globalRow),
      mm_readA(batchA, colA + 1, globalRow),
      mm_readA(batchA, colA + 2, globalRow),
      mm_readA(batchA, colA + 3, globalRow)
  `:`
      mm_readA(batchA, globalRow, colA),
      mm_readA(batchA, globalRow, colA + 1),
      mm_readA(batchA, globalRow, colA + 2),
      mm_readA(batchA, globalRow, colA + 3)
  `;function sK(r,t=!1){S.assert(r[1]===1&&r[2]===1,()=>`A linear work group size is required. But got ${r}.`);let e=r[0]*4;return`
    var<workgroup> mm_Asub : array<vec4<f32>, ${r[0]}>;

    ${Q()} {
      let tileCol = i32(localId.x);
      let globalCol = i32(globalId.x);
      let globalRow = i32(globalId.y);

      let numTiles = (uniforms.dimInner - 1) / ${e} + 1;
      let batch = i32(globalId.z);
      let batchA = batch % uniforms.aShape[0];
      let batchB = batch % uniforms.bShape[0];
      // Without this initialization strange values show up in acc.
      var acc = 0.0;

      // Loop over shared dimension.
      for (var t = 0; t < numTiles; t++) {
        // Load one tile of A into local memory.
        let colA = t * ${e} + tileCol * 4;
        mm_Asub[tileCol] = vec4<f32>(${iK(t)});
        workgroupBarrier();

        // Compute acc values for a single thread.
        for (var k = 0; k < ${e/4}; k++) {
          let rowB = t * ${e} + k * 4;
          let BCached = vec4<f32>(mm_readB(batchB, rowB, globalCol),
                              mm_readB(batchB, rowB + 1, globalCol),
                              mm_readB(batchB, rowB + 2, globalCol),
                              mm_readB(batchB, rowB + 3, globalCol));

          let ACached = mm_Asub[k];
          acc = acc + dot(ACached, BCached);
        }

        workgroupBarrier();
      }

      mm_write(batch, globalRow, globalCol, acc);
    }
  `}var Qf=class{constructor(t,e,o=!1,n=!1,i=null,s=null,a=null,l=!1){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.outputShape=e,this.dispatchLayout={x:[2],y:[1],z:[0]};let u=o?t[1]:t[2];if(this.isVec4=(u%4===0&&!o||e[1]%4===0&&o)&&e[2]%4===0&&!n,this.outputComponent=this.isVec4?4:1,this.isVectorA=e[1]===1&&!o,!this.isVec4&&this.isVectorA)this.elementsPerThread=[1,1,1],this.workgroupSize=[32,1,1];else{let d=y1(e[1],u,e[2],o);this.workgroupSize=d.workgroupSize,this.elementsPerThread=d.elementsPerThread}this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize,this.elementsPerThread);let c=i!=null,p=a!=null;c&&this.variableNames.push("bias"),p&&this.variableNames.push("preluActivationWeights"),this.sequentialAccessByThreads=l,this.transposeA=o,this.transposeB=n,this.addBias=c,this.activation=s,this.hasPreluActivationWeights=p,[this.fitAOuter,this.fitBOuter,this.fitInner]=this.getShapeFit(e[1],e[2],u),this.shaderKey=`matMulPacked_${this.elementsPerThread}_${o}_${n}_${this.activation}_${this.fitAOuter}_${this.fitBOuter}_${this.fitInner}_${this.isVec4}_${this.isVectorA}_${this.sequentialAccessByThreads}`}getShapeFit(t,e,o){let n=this.workgroupSize[1]*this.elementsPerThread[1],i=this.workgroupSize[0]*this.elementsPerThread[0];!this.isVec4&&this.isVectorA?this.tileInner=this.workgroupSize[0]*4:this.tileInner=i;let s=t%n===0,a=e%i===0,l=o%this.tileInner===0;return[s,a,l]}getUserCode(){return`
      ${rr(this.activation,this.hasPreluActivationWeights,this.isVec4)}
      ${Rp(this.addBias,this.activation,!1,this.transposeB,this.fitAOuter,this.fitBOuter,this.fitInner,this.isVec4?4:1)}
      ${this.isVec4?zs(this.elementsPerThread,this.workgroupSize,this.transposeA,this.tileInner,!1,null,!0):this.isVectorA?sK(this.workgroupSize,this.transposeA):Us(this.elementsPerThread,this.workgroupSize,this.transposeA,this.tileInner,!1,null,this.sequentialAccessByThreads,!0)}
    `}};function aK(r){return`
    var<workgroup> sumValues : array<f32, ${r}>;
    ${Q()} {
      let coords = getOutputCoords();
      let batch = coords[0];
      let batchA = batch % uniforms.aShape[0];
      let batchB = batch % uniforms.bShape[0];
      let row = coords[1];
      let col = coords[2];
      var sum = 0.0;
      let Length = uniforms.dimInner;
      for (var k = i32(localId.x); k < Length; k = k + ${r}) {
        let dataA = mm_readA(batchA, row, k);
        let dataB = mm_readB(batchB, k, col);
        sum = sum + dataA * dataB;
      }
      sumValues[localId.x] = sum;
      workgroupBarrier();

      for(var currentSize = ${r/2}u; currentSize > 1u;
          currentSize = currentSize / 2u) {
        if (localId.x < currentSize)
        {
          sumValues[localId.x] = sumValues[localId.x] + sumValues[localId.x + currentSize];
        }
        workgroupBarrier();
      }

      if (localId.x == 0u) {
        sum = sumValues[0] + sumValues[1];
        mm_write(batch, row, col, sum);
      }
    }
  `}var Zf=class{constructor(t,e=!1,o=!1,n=null,i=null,s=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workgroupSize=[256,1,1],this.outputShape=t,this.dispatchLayout={x:[],y:[1,2],z:[0]},this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize);let a=n!=null,l=s!=null;a&&this.variableNames.push("bias"),l&&this.variableNames.push("preluActivationWeights"),this.transposeA=e,this.transposeB=o,this.addBias=a,this.activation=i,this.hasPreluActivationWeights=l,this.shaderKey=`matMulReduce_${this.activation}_${e}_${o}`}getUserCode(){return`
      ${rr(this.activation,this.hasPreluActivationWeights)}
      ${Rp(this.addBias,this.activation,this.transposeA,this.transposeB)}
      ${aK(this.workgroupSize[0])}
    `}};function lK(r){let t=r[1],e=r[0],o=t>e?t:e;return`
  var<workgroup> mm_Asub : array<array<f32, ${o}>, ${t}>;
  var<workgroup> mm_Bsub : array<array<f32, ${e}>, ${o}>;

  // If the output size is small for matrix multiplication, avoid to use vec4
  // and handle some elements per thread to optimally utilize the ALU.
  // Read data from global memory to registers firstly, then store them into
  // shared memory, so it is instruction-Level parallelism for arithmetic
  // operations and others handle IO operations between barrier api, makes ALU
  // and load/store units work simultaneously, could improves the performance.
  ${Q()} {
    let tileRow = i32(localId.y);
    let tileCol = i32(localId.x);
    let globalRow = i32(globalId.y);
    let globalCol = i32(globalId.x);
    let batch = i32(globalId.z);
    let batchA = batch % uniforms.aShape[0];
    let batchB = batch % uniforms.bShape[0];

    // uniforms.dimInner should be greater than 0.
    let numTiles = (uniforms.dimInner - 1) / ${o} + 1;
    var acc = 0.0;

    var globalColA = tileCol;
    var globalRowB = 0;
    var regA = mm_readA(batchA, globalRow, globalColA);
    var regB0 = mm_readB(batchB, globalRowB + 2 * tileRow, globalCol);
    var regB1 = mm_readB(batchB, globalRowB + 2 * tileRow + 1, globalCol);
    globalColA = globalColA + ${o};
    globalRowB = globalRowB + ${o};

    for (var t = 0; t < numTiles; t = t + 1) {
      mm_Asub[tileRow][tileCol] = regA;
      mm_Bsub[2 * tileRow][tileCol] = regB0;
      mm_Bsub[2 * tileRow + 1][tileCol] = regB1;

      workgroupBarrier();

      regA = mm_readA(batchA, globalRow, globalColA);
      regB0 = mm_readB(batchB, globalRowB + 2 * tileRow, globalCol);
      regB1 = mm_readB(batchB, globalRowB + 2 * tileRow + 1, globalCol);
      globalColA = globalColA + ${o};
      globalRowB = globalRowB + ${o};

      for (var k = 0; k < ${o}; k = k + 1) {
        acc = acc + mm_Asub[tileRow][k] * mm_Bsub[k][tileCol];
      }
      workgroupBarrier();
    }

    mm_write(batch, globalRow, globalCol, acc);
  }
  `}var Jf=class{constructor(t,e,o,n=!1,i=!1,s=null,a=null,l=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workgroupSize=[16,8,1],this.outputShape=o,this.dispatchLayout={x:[2],y:[1],z:[0]},this.dispatch=[Math.ceil(o[2]/this.workgroupSize[0]),Math.ceil(o[1]/this.workgroupSize[1]),o[0]];let u=s!=null;u&&this.variableNames.push("bias");let c=l!=null;c&&this.variableNames.push("preluActivationWeights"),this.transposeA=n,this.transposeB=i,this.addBias=u,this.activation=a,this.hasPreluActivationWeights=c,this.shaderKey=`matMulSmallOutputSize_${this.activation}_${n}_${i}`}getUserCode(){return`
      ${rr(this.activation,this.hasPreluActivationWeights)}
      ${Rp(this.addBias,this.activation,this.transposeA,this.transposeB)}
      ${lK(this.workgroupSize)}
    `}};var eh=class{constructor(t,e,o=!1,n=!1){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workgroupSize=[8,8,1],this.atomic=!0,this.splitedDimInner=128,S.assert(t[0]===1,()=>"MatMulSplitKProgram only supports batch = 1."),this.outputShape=t,this.dispatchLayout={x:[2],y:[1],z:[0,3]};let i=(o&&this.outputShape[1]%4===0||!o&&e%4===0)&&this.outputShape[2]%4===0;this.elementsPerThread=[4,4,this.splitedDimInner],this.outputComponent=i?4:1,i||(this.outputShape[1]<16&&(this.elementsPerThread[1]=1),this.outputShape[2]<16&&(this.elementsPerThread[0]=1)),this.dispatch=Z(this.dispatchLayout,[this.outputShape[0],this.outputShape[1],this.outputShape[2],e],this.workgroupSize,this.elementsPerThread),this.transposeA=o,this.transposeB=n,this.shaderKey=`matMulSplitK_${o}_${n}_${this.elementsPerThread}_${this.outputComponent}`}getUserCode(){let t=this.outputComponent;return`
      ${b1(!1,this.transposeB,!1,!1,!1,t)}
      fn mm_write(batch: i32, row : i32, col : i32, value : ${ze(t)}) {
        if (row < uniforms.dimAOuter && col < uniforms.dimBOuter) {
          let coords = vec3<i32>(batch, row, col);
          let flatIndex = getOutputIndexFromCoords(coords);
          // The problem is that we should initialize output to zero before using.
          // Otherwise, the original value will be added to the result.
          for (var i = 0; i < ${t}; i = i + 1) {
            ${Qr("&result[flatIndex + i]",`${t>1?"value[i]":"value"}`,"float32")}
          }
        }
      }
      ${t===4?zs(this.elementsPerThread,this.workgroupSize,this.transposeA,32,!0,this.splitedDimInner):Us(this.elementsPerThread,this.workgroupSize,this.transposeA,32,!0,this.splitedDimInner)}
    `}},th=class{constructor(t,e=null,o=null,n=null){this.uniforms="",this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=te(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize),this.addBias=e!=null,this.hasPreluActivationWeights=n!=null,this.activation=o,this.addBias&&this.variableNames.push("bias"),this.hasPreluActivationWeights&&this.variableNames.push("preluActivationWeights"),this.shaderKey=`biasActivation_${o}`}getUserCode(){return`
    ${rr(this.activation,this.hasPreluActivationWeights)}
    ${Q("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        var value = getXByOutputIndex(index);
        ${Zr(this.addBias,this.activation)}
        setOutputAtIndex(index, value);
      }
    }
    `}};var rh=class{constructor(t){this.variableNames=[],this.outputShape=[],this.uniforms="value : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=te(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="fill"}getUserCode(){return`
    ${Q("index")} {
      if (index < uniforms.size) {
        setOutputAtIndex(index, uniforms.value);
      }
    }
  `}};function St(r){let{backend:t,attrs:e}=r,{shape:o,value:n}=e,{dtype:i}=e;if(i=i||S.inferDtype(n),i==="string"){let s=S.getArrayFromDType(i,S.sizeFromShape(o));return s.fill(n),t.makeTensorInfo(o,i,s)}else{let s=new rh(o),a=[{type:"float32",data:[n]}];return t.runWebGPUProgram(s,[],i,a)}}var gI={kernelName:wl,backendName:"webgpu",kernelFunc:St};function me(r){let{inputs:t,attrs:e}=r,{x:o}=t,{shape:n}=e,i=S.sizeFromShape(o.shape),s=S.inferFromImplicitShape(n,i),a=S.sizeFromShape(s);return S.assert(i===a,()=>`The new shape (${s}) has ${a} elements and the old shape (${o.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`),r.backend.incRef(o.dataId),{dataId:o.dataId,shape:s,dtype:o.dtype}}var xI={kernelName:iu,backendName:"webgpu",kernelFunc:me};function Gs({a:r,b:t,transposeA:e,transposeB:o,backend:n,bias:i=null,preluActivationWeights:s=null,leakyreluAlpha:a=0,activation:l=null}){let u=r.shape.length,c=t.shape.length,p=e?r.shape[u-2]:r.shape[u-1],d=o?t.shape[c-1]:t.shape[c-2],m=e?r.shape[u-1]:r.shape[u-2],f=o?t.shape[c-2]:t.shape[c-1],g=r.shape.slice(0,-2),x=t.shape.slice(0,-2),y=S.sizeFromShape(g),v=S.sizeFromShape(x),N=nn.assertAndGetBroadcastShape(r.shape.slice(0,-2),t.shape.slice(0,-2)).concat([m,f]);S.assert(p===d,()=>`Error in matMul: inner shapes (${p}) and (${d}) of Tensors with shapes ${r.shape} and ${t.shape} and transposeA=${e} and transposeB=${o} must match.`);let F=e?[y,p,m]:[y,m,p],M=o?[v,f,d]:[v,d,f],z=me({inputs:{x:r},backend:n,attrs:{shape:F}}),H=me({inputs:{x:t},backend:n,attrs:{shape:M}}),K=[z,H],j=Math.max(y,v),J=[z,H],ue=[{type:"int32",data:[m]},{type:"int32",data:[f]},{type:"int32",data:[p]}],ce,xe,be=[j,m,f],Ie=G().get("WEBGPU_MATMUL_PROGRAM_TYPE");if(Ie<0){let je=G().getNumber("WEBGPU_THRESHOLD_TO_INCREASE_WORKGROUPS_FOR_MATMUL"),it=je>0?je:n.thresholdToIncreaseWorkgroups,qt=j*Math.ceil(m/32)*Math.ceil(f/32);qt<=it||m<=8&&qt<=it*2?j*m*f<=128?Ie=Mo.MatMulReduceProgram:j===1&&d>=2e3?Ie=Mo.MatMulSplitKProgram:Ie=Mo.MatMulSmallOutputSizeProgram:Ie=Mo.MatMulPackedProgram}switch(Ie){case Mo.MatMulReduceProgram:ce=new Zf(be,e,o,i,l,s);break;case Mo.MatMulSplitKProgram:{if(xe=St({backend:n,attrs:{shape:be,value:0,dtype:r.dtype}}),ce=new eh(be,d,e,o),i||l){xe=n.runWebGPUProgram(ce,J,r.dtype,ue,xe);let it=new th(xe.shape,i,l,s),qt=null,Zt=[xe];i&&Zt.push(i),s&&Zt.push(s),l==="leakyrelu"&&(qt=[{type:"float32",data:[a]}],it.uniforms+=" alpha : f32,");let Uo=n.runWebGPUProgram(it,Zt,xe.dtype,qt);K.push(xe);let fn=me({inputs:{x:Uo},backend:n,attrs:{shape:N}});K.push(Uo);for(let ia of K)n.disposeData(ia.dataId);return fn}break}case Mo.MatMulSmallOutputSizeProgram:ce=new Jf(F,M,be,e,o,i,l,s);break;case Mo.MatMulPackedProgram:let je=n.adapterInfo.isIntel();ce=new Qf(F,be,e,o,i,l,s,je);break;default:throw new Error(`Unsupported MatMulProgramType ${Ie}.`)}i&&J.push(i),s&&J.push(s),l==="leakyrelu"&&(ue.push({type:"float32",data:[a]}),ce.uniforms+=" alpha : f32,"),xe=n.runWebGPUProgram(ce,J,r.dtype,ue,xe);let qe=me({inputs:{x:xe},backend:n,attrs:{shape:N}});K.push(xe);for(let je of K)n.disposeData(je.dataId);return qe}function uK(r){let{inputs:t,backend:e,attrs:o}=r,{a:n,b:i,bias:s,preluActivationWeights:a}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:p}=o;return Gs({a:n,b:i,transposeA:l,transposeB:u,backend:e,bias:s,preluActivationWeights:a,leakyreluAlpha:p,activation:c})}var yI={kernelName:fs,backendName:"webgpu",kernelFunc:uK};var $p=class{constructor(t,e,o){this.variableNames=["AReal","AImag","BReal","BImag"],this.workgroupSize=[128,1,1],this.size=!0,this.outputShape=R.assertAndGetBroadcastShape(e,o),this.dispatchLayout=te(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey=`binaryOpComplex_${t}`,this.op=t}getUserCode(){return`
      fn binaryOpComplex(
          areal : f32, aimag : f32, breal : f32, bimag : f32) -> f32 {
        ${ac(this.op,!1)}
      }

      ${Q("index")} {
        if(index < uniforms.size) {
          let areal = getARealByOutputIndex(index);
          let aimag = getAImagByOutputIndex(index);
          let breal = getBRealByOutputIndex(index);
          let bimag = getBImagByOutputIndex(index);
          setOutputAtIndex(index, binaryOpComplex(areal, aimag, breal, bimag));
        }
      }
    `}};var Fn=class{constructor(t,e,o){if(this.size=!0,this.variableNames=["A","B"],this.outputShape=R.assertAndGetBroadcastShape(e,o),this.dispatchLayout=te(this.outputShape),this.op=t,this.useSharedMemoryWithA=e.length<=1&&o.length>1&&e[0]<128,this.useSharedMemoryWithB=o.length<=1&&e.length>1&&o[0]<128,this.useSharedMemoryWithA||this.useSharedMemoryWithB)this.outputComponent=1,this.variableComponents=[1,1],this.lastDimensionSize=this.useSharedMemoryWithB?o[0]:e[0],this.shaderKey=`binary_${t}_${this.lastDimensionSize}`,this.type="shared",this.workgroupSize=[256,1,1];else{let n=e.length>0&&e[e.length-1]%4===0,i=o.length>0&&o[o.length-1]%4===0;n&&i?(this.outputComponent=4,this.variableComponents=[4,4]):n&&(S.isScalarShape(o)||o[o.length-1]===1)||i&&(S.isScalarShape(e)||e[e.length-1]===1)?(this.outputComponent=4,this.variableComponents=n?[4,1]:[1,4]):(this.outputComponent=1,this.variableComponents=[1,1]),this.type="nonshared",this.shaderKey=`binary_${t}_${this.variableComponents}`,this.workgroupSize=[128,1,1]}this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.outputComponent,1,1])}getUserCode(){let t,e=this.outputComponent===4?"vec4<f32>":"f32",o=`
    fn binaryOperation(a : ${e}, b : ${e}) -> ${e} {
      ${ac(this.op,this.outputComponent===4)}
    };
    `;if(this.type==="shared"){let n=this.lastDimensionSize>1?`coords[${this.outputShape.length-1}]`:"0",i=this.useSharedMemoryWithB?`let a = getAByOutputIndex(index);
          let b = sharedBuf[${n}];`:`let a = sharedBuf[${n}];
          let b = getBByOutputIndex(index);`;t=`
        ${o}
        var<workgroup> sharedBuf : array<f32, ${this.lastDimensionSize}>;
        ${Q("index")} {
          // Fill in the shared memory buffer.
          let localIndex = i32(localId.x);
          if(localIndex < ${this.lastDimensionSize}) {
            sharedBuf[localIndex] = f32(${this.useSharedMemoryWithB?"B":"A"}[localIndex]);
          }
          workgroupBarrier();

          if(index < uniforms.size) {
            let coords = getCoordsFromIndex(index);
            ${i}
            setOutputAtIndex(index, binaryOperation(a, b));
          }
        }
        `}else t=`
       ${o}
       ${Q("index")} {
         if (index < uniforms.size) {
           let coords = getCoordsFromIndex(index * ${this.outputComponent});
           let a = ${e}(getAByOutputCoords(coords));
           let b = ${e}(getBByOutputCoords(coords));
           setOutputAtIndex(index, binaryOperation(a, b));
         }
       }
       `;return t}};function $t(r){let{inputs:t}=r,{x:e}=t;return r.backend.incRef(e.dataId),{dataId:e.dataId,shape:e.shape,dtype:e.dtype}}var bI={kernelName:vn,backendName:"webgpu",kernelFunc:$t};function mo(r){let{inputs:t,backend:e}=r,{real:o,imag:n}=t,i=e.makeTensorInfo(o.shape,"complex64"),s=e.tensorMap.get(i.dataId),a=$t({inputs:{x:o},backend:e}),l=$t({inputs:{x:n},backend:e});return s.complexTensorInfos={real:a,imag:l},i}var vI={kernelName:ls,backendName:"webgpu",kernelFunc:mo};var Jr=class{constructor(t,e,o=""){this.variableNames=["A"],this.size=!0;let n=128;this.workgroupSize=[n,1,1],this.outputShape=t,this.dispatchLayout=te(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize),this.op=e,o!==""&&(this.uniforms=o),this.shaderKey=`unary_${e}`}getUserCode(){return`
      fn unaryOperation(a : f32) -> f32 {
        ${An(this.op,!1)}
      }
      ${Q("index")} {
        if (index < uniforms.size) {
          let a = getAByOutputIndex(index);
          setOutputAtIndex(index, unaryOperation(a));
        }
      }
      `}};function we({opType:r,cpuKernelImpl:t,dtype:e}){return({inputs:o,backend:n})=>{let{x:i}=o,s=n,a=e||i.dtype;if(s.shouldExecuteOnCPU([i])&&t!=null){let u=s.tensorMap.get(i.dataId),c=t(u.values,a);return s.makeTensorInfo(i.shape,a,c)}let l=new Jr(i.shape,r);return s.runWebGPUProgram(l,[i],a)}}function Ze({opType:r,cpuKernelImpl:t,supportsComplex:e=!1,dtype:o}){return({inputs:n,backend:i})=>{let{a:s,b:a}=n,l=i;if(e&&s.dtype==="complex64"){let p=l.tensorMap.get(s.dataId),d=l.tensorMap.get(a.dataId),m,f;if(r!==Se.MUL)[m,f]=[[p.complexTensorInfos.real,d.complexTensorInfos.real],[p.complexTensorInfos.imag,d.complexTensorInfos.imag]].map(x=>{let[y,v]=x,k={dataId:y.dataId,dtype:y.dtype,shape:s.shape},N={dataId:v.dataId,dtype:v.dtype,shape:a.shape},F=new Fn(r,s.shape,a.shape);return l.runWebGPUProgram(F,[k,N],Tt(y.dtype,v.dtype))});else{let x=new $p(Se.COMPLEX_MULTIPLY_REAL,s.shape,a.shape),y=new $p(Se.COMPLEX_MULTIPLY_IMAG,s.shape,a.shape),v=[{dataId:p.complexTensorInfos.real.dataId,dtype:p.complexTensorInfos.real.dtype,shape:s.shape},{dataId:p.complexTensorInfos.imag.dataId,dtype:p.complexTensorInfos.imag.dtype,shape:s.shape},{dataId:d.complexTensorInfos.real.dataId,dtype:d.complexTensorInfos.real.dtype,shape:a.shape},{dataId:d.complexTensorInfos.imag.dataId,dtype:d.complexTensorInfos.imag.dtype,shape:a.shape}];m=l.runWebGPUProgram(x,v,"float32"),f=l.runWebGPUProgram(y,v,"float32")}let g=mo({inputs:{real:m,imag:f},backend:l});return l.disposeData(m.dataId),l.disposeData(f.dataId),g}let u=o||Tt(s.dtype,a.dtype);if((s.dtype==="string"||a.dtype==="string"||l.shouldExecuteOnCPU([s,a]))&&t!=null){let p=l.tensorMap.get(s.dataId).values,d=l.tensorMap.get(a.dataId).values,m=s.dtype==="string"?R.fromUint8ToStringArray(p):p,f=s.dtype==="string"?R.fromUint8ToStringArray(d):d,[g,x]=t(s.shape,a.shape,m,f,u);return l.makeTensorInfo(x,u,g)}let c=new Fn(r,s.shape,a.shape);return l.runWebGPUProgram(c,[s,a],u)}}var Fp={};ct(Fp,{addImpl:()=>w1,bincountImpl:()=>CI,bincountReduceImpl:()=>_I,bitwiseAndImpl:()=>C1,castImpl:()=>S1,ceilImpl:()=>_1,concatImpl:()=>kI,equalImpl:()=>k1,expImpl:()=>I1,expm1Impl:()=>T1,floorDivImpl:()=>N1,floorImpl:()=>E1,gatherNdImpl:()=>II,gatherV2Impl:()=>TI,greaterEqualImpl:()=>$1,greaterImpl:()=>R1,lessEqualImpl:()=>D1,lessImpl:()=>P1,linSpaceImpl:()=>EI,logImpl:()=>A1,maxImpl:()=>NI,maximumImpl:()=>F1,minimumImpl:()=>O1,multiplyImpl:()=>Dp,negImpl:()=>RI,notEqualImpl:()=>L1,prodImpl:()=>PI,raggedGatherImpl:()=>AI,raggedRangeImpl:()=>OI,raggedTensorToTensorImpl:()=>BI,rangeImpl:()=>VI,rsqrtImpl:()=>B1,scatterImpl:()=>WI,sigmoidImpl:()=>zI,simpleAbsImpl:()=>SI,sliceImpl:()=>UI,sparseFillEmptyRowsImpl:()=>GI,sparseReshapeImpl:()=>HI,sparseSegmentReductionImpl:()=>KI,sqrtImpl:()=>qI,squaredDifferenceImpl:()=>V1,staticRegexReplaceImpl:()=>W1,stridedSliceImpl:()=>jI,stringNGramsImpl:()=>XI,stringSplitImpl:()=>YI,stringToHashBucketFastImpl:()=>QI,subImpl:()=>U1,tileImpl:()=>ZI,topKImpl:()=>eT,transposeImpl:()=>$I,uniqueImpl:()=>tT});function oh(r,t){Array.isArray(r)||(r=[r]),r.forEach(e=>{e!=null&&S.assert(e.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the CPU backend.`)})}function SI(r){let t=new Float32Array(r.length);for(let e=0;e<r.length;++e)t[e]=Math.abs(r[e]);return t}function ht(r){return(t,e,o,n,i)=>{let s=R.assertAndGetBroadcastShape(t,e),a=s.length,l=S.computeStrides(s),u=S.sizeFromShape(s),c=S.getTypedArrayFromDType(i,u),p=t.length,d=e.length,m=S.computeStrides(t),f=S.computeStrides(e),g=R.getBroadcastDims(t,s),x=R.getBroadcastDims(e,s);if(g.length+x.length===0)for(let y=0;y<c.length;++y)c[y]=r(o[y%o.length],n[y%n.length]);else for(let y=0;y<c.length;++y){let v=S.indexToLoc(y,a,l),k=v.slice(-p);g.forEach(z=>k[z]=0);let N=S.locToIndex(k,p,m),F=v.slice(-d);x.forEach(z=>F[z]=0);let M=S.locToIndex(F,d,f);c[y]=r(o[N],n[M])}return[c,s]}}function lc(r){let{inputs:t,backend:e}=r,{real:o,imag:n}=t,i=e.data.get(o.dataId).values,s=e.data.get(n.dataId).values,a=e.makeTensorInfo(o.shape,"complex64"),l=e.data.get(a.dataId);return l.complexTensorInfos={real:e.makeTensorInfo(o.shape,"float32",i),imag:e.makeTensorInfo(n.shape,"float32",s)},a}function nh(r,t,e="float32"){if(e==="complex64"){let n=nh(r,t,"float32"),i=nh(r,t,"float32");return lc({inputs:{real:n,imag:i},backend:r})}let o=S.makeZerosTypedArray(S.sizeFromShape(t),e);return r.makeTensorInfo(t,e,o)}function v1(r){let{inputs:t,backend:e}=r,{x:o}=t;return e.incRef(o.dataId),{dataId:o.dataId,shape:o.shape,dtype:o.dtype}}function wI(r){let{inputs:t,backend:e}=r,{input:o}=t,n=e.data.get(o.dataId).complexTensorInfos.real,i=e.data.get(n.dataId).values;return e.makeTensorInfo(n.shape,n.dtype,i)}function S1(r,t,e,o){if(o==="int32"){let n=Int32Array.from(r);return[t,"int32",n]}if(o==="bool"){let n=S.toTypedArray([0],e),[i,s]=ht((a,l)=>a!==l?1:0)(t,[],r,n,"bool");return[s,"bool",i]}throw new Error(`Error in Cast: failed to cast ${e} to ${o}`)}function Pp(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{dtype:i}=o;if(i==="complex64"){if(n.dtype==="complex64")return v1({inputs:{x:n},backend:e});let c=nh(e,n.shape,n.dtype),p=Pp({inputs:{x:n},backend:e,attrs:{dtype:"float32"}}),d=lc({inputs:{real:p,imag:c},backend:e});return e.disposeIntermediateTensorInfo(c),e.disposeIntermediateTensorInfo(p),d}if(n.dtype==="complex64"){let c=wI({inputs:{input:n},backend:e}),p=Pp({inputs:{x:c},backend:e,attrs:{dtype:i}});return e.disposeIntermediateTensorInfo(c),p}if(!S.hasEncodingLoss(n.dtype,i)){let c=v1({inputs:{x:n},backend:e});return{dataId:c.dataId,shape:c.shape,dtype:i}}let s=e.data.get(n.dataId).values,[a,l,u]=S1(s,n.shape,n.dtype,i);return e.makeTensorInfo(a,l,u)}function gt(r,t,e,o){return e==null?({inputs:n,backend:i})=>{let{a:s,b:a}=n,l=i;oh([s,a],r);let u=l.data.get(s.dataId).values,c=l.data.get(a.dataId).values,p=s.dtype==="string"?R.fromUint8ToStringArray(u):u,d=s.dtype==="string"?R.fromUint8ToStringArray(c):c,m=o||s.dtype,[f,g]=t(s.shape,a.shape,p,d,m);return l.makeTensorInfo(g,m,f)}:({inputs:n,backend:i})=>{let{a:s,b:a}=n,l=i;if(s.dtype==="complex64"||a.dtype==="complex64"){let u=Pp({inputs:{x:s},backend:l,attrs:{dtype:"complex64"}}),c=l.data.get(u.dataId),p=c.complexTensorInfos.real,d=c.complexTensorInfos.imag,m=l.data.get(p.dataId).values,f=l.data.get(d.dataId).values,g=Pp({inputs:{x:a},backend:l,attrs:{dtype:"complex64"}}),x=l.data.get(g.dataId),y=x.complexTensorInfos.real,v=x.complexTensorInfos.imag,k=l.data.get(y.dataId).values,N=l.data.get(v.dataId).values,[F,M,z]=e(s.shape,a.shape,m,f,k,N),H=l.makeTensorInfo(z,"float32",F),K=l.makeTensorInfo(z,"float32",M),j=lc({inputs:{real:H,imag:K},backend:l});return l.disposeIntermediateTensorInfo(u),l.disposeIntermediateTensorInfo(g),l.disposeIntermediateTensorInfo(H),l.disposeIntermediateTensorInfo(K),j}else{let u=l.data.get(s.dataId).values,c=l.data.get(a.dataId).values,p=o||s.dtype,[d,m]=t(s.shape,a.shape,u,c,p);return l.makeTensorInfo(m,p,d)}}}function uc(r){return(t,e,o,n,i,s)=>{let a=R.assertAndGetBroadcastShape(t,e),l=S.sizeFromShape(a),u=a.length,c=S.computeStrides(a),p=S.getTypedArrayFromDType("float32",l),d=S.getTypedArrayFromDType("float32",l),m=R.getBroadcastDims(t,a),f=R.getBroadcastDims(e,a),g=R.mergeRealAndImagArrays(o,n),x=R.mergeRealAndImagArrays(i,s),y=t.length,v=S.computeStrides(t),k=e.length,N=S.computeStrides(e);if(m.length+f.length===0)for(let F=0;F<p.length;F++){let M=F%g.length,z=F%x.length,H=r(g[M*2],g[M*2+1],x[z*2],x[z*2+1]);p[F]=H.real,d[F]=H.imag}else for(let F=0;F<p.length;F++){let M=S.indexToLoc(F,u,c),z=M.slice(-y);m.forEach(ue=>z[ue]=0);let H=S.locToIndex(z,y,v),K=M.slice(-k);f.forEach(ue=>K[ue]=0);let j=S.locToIndex(K,k,N),J=r(g[H*2],g[H*2+1],x[j*2],x[j*2+1]);p[F]=J.real,d[F]=J.imag}return[p,d,a]}}var w1=ht((r,t)=>r+t),cK=uc((r,t,e,o)=>({real:r+e,imag:t+o})),GVe=gt(Zo,w1,cK);function CI(r,t,e,o,n){let i=S.sizeFromShape(o),s=S.makeZerosTypedArray(n,e);for(let a=0;a<r.length;a++){let l=r[a];if(l<0)throw new Error("Input x must be non-negative!");l>=n||(i>0?s[l]+=t[a]:s[l]+=1)}return s}function _I(r,t,e,o=!1){let n=r.shape[0],i=r.shape[1],s=Oe([n,e],t.dtype);for(let a=0;a<n;a++)for(let l=0;l<i;l++){let u=r.get(a,l);if(u<0)throw new Error("Input x must be non-negative!");u>=e||(o?s.set(1,a,u):t.size>0?s.set(s.get(a,u)+t.get(a,l),a,u):s.set(s.get(a,u)+1,a,u))}return s}var C1=ht((r,t)=>r&t),QVe=gt(ja,C1);function Kt(r){return(t,e,o)=>{let n=S.getArrayFromDType(e,t.length);for(let i=0;i<t.length;++i)n[i]=r(t[i],o);return n}}function ih(r,t,e){let o=Kt(t);return Fr(r,o,e)}function Fr(r,t,e){return({inputs:o,attrs:n,backend:i})=>{let{x:s}=o;oh(s,r);let a=i,l=a.data.get(s.dataId).values,u;if(s.dtype==="string"){if(!Array.isArray(l))throw new Error("String tensor's value was not an instance of Array");u=R.fromUint8ToStringArray(l)}else u=l;let c=e||s.dtype,p=t(u,c,n);return a.makeTensorInfo(s.shape,c,p)}}var _1=Kt(r=>Math.ceil(r)),lWe=Fr(Zn,_1);function kI(r,t,e,o){let n=S.getArrayFromDType(e,S.sizeFromShape(t));if(o&&e!=="string"){let i=0;r.forEach(s=>{let a=S.sizeFromShape(s.shape);n.set(s.vals,i),i+=a})}else{let i=0;r.forEach(s=>{let a=e==="string"?R.fromUint8ToStringArray(s.vals):s.vals,l=0;for(let u=0;u<s.shape[0];++u){let c=u*t[1]+i;for(let p=0;p<s.shape[1];++p)n[c+p]=a[l++]}i+=s.shape[1]})}return n}var k1=ht((r,t)=>r===t?1:0),hWe=gt(Jn,k1,null,"bool");var I1=Kt(r=>Math.exp(r)),vWe=Fr(ei,I1,"float32");var T1=Kt(r=>Math.expm1(r)),kWe=Fr(ti,T1);var E1=Kt(r=>Math.floor(r)),RWe=Fr(ri,E1);var N1=ht((r,t)=>Math.floor(r/t)),FWe=gt(oi,N1,null,"int32");function II(r,t,e,o,n,i,s,a,l){let u=Oe([o,i],e);for(let c=0;c<o;c++){let p=[],d=0;for(let m=0;m<n;m++){let f=r[c*n+m];d+=f*s[m],p.push(f)}if(d<0||d>=l/i)throw new Error(`Invalid indices: ${p} does not index into ${a}`);for(let m=0;m<i;m++)u.values[c*i+m]=t.get(...t.indexToLoc(d*i+m))}return u}function TI(r,t,e){let o=Oe(e,r.dtype);for(let n=0;n<o.size;++n){let s=o.indexToLoc(n).slice(),a=s[0],l=s[2],u=t.locToIndex([a,l]);s[2]=t.values[u];let c=r.locToIndex(s);0<=c&&c<r.values.length&&(o.values[n]=r.values[c])}return o}var R1=ht((r,t)=>r>t?1:0),GWe=gt(ni,R1,null,"bool");var $1=ht((r,t)=>r>=t?1:0),XWe=gt(ii,$1,null,"bool");var P1=ht((r,t)=>r<t?1:0),eze=gt(si,P1,null,"bool");var D1=ht((r,t)=>r<=t?1:0),ize=gt(ai,D1,null,"bool");function EI(r,t,e){let o=(t-r)/(e-1),n=S.makeZerosTypedArray(e,"float32");n[0]=r;for(let i=1;i<n.length;i++)n[i]=n[i-1]+o;return n}var A1=Kt(r=>Math.log(r)),dze=Fr(li,A1);function NI(r,t,e,o){let n=S.getTypedArrayFromDType(o,S.sizeFromShape(e));for(let i=0;i<n.length;++i){let s=i*t,a=r[s];for(let l=0;l<t;++l){let u=r[s+l];(Number.isNaN(u)||u>a)&&(a=u)}n[i]=a}return n}var F1=ht((r,t)=>Math.max(r,t)),bze=gt(ui,F1);var O1=ht((r,t)=>Math.min(r,t)),_ze=gt(ci,O1);var Dp=ht((r,t)=>r*t),pK=uc((r,t,e,o)=>({real:r*e-t*o,imag:r*o+t*e})),Nze=gt(pi,Dp,pK);function RI(r,t,e){let o=S.createScalarValue(-1,e);return Dp([],t,o,r,e)}var L1=ht((r,t)=>r!==t?1:0),Lze=gt(di,L1,null,"bool");function $I(r,t,e,o,n){let i=t.length,s=S.sizeFromShape(t),a=S.computeStrides(t),l=S.computeStrides(n),u=S.getTypedArrayFromDType(e,S.sizeFromShape(n));for(let c=0;c<s;++c){let p=S.indexToLoc(c,i,a),d=new Array(p.length);for(let f=0;f<d.length;f++)d[f]=p[o[f]];let m=S.locToIndex(d,i,l);u[m]=r[c]}return u}function PI(r,t,e,o){let[n,i]=R.computeOutAndReduceShapes(r,o),s=Tt(t,"int32"),a=S.makeZerosTypedArray(S.sizeFromShape(n),s),l=S.sizeFromShape(i);for(let u=0;u<a.length;++u){let c=u*l,p=1;for(let d=0;d<l;++d)p*=e[c+d];a[u]=p}return{outVals:a,outShape:n,outDtype:s}}function dK(r,t,e){r.forEach((o,n)=>{if(o<0||o>=e){let i=S.indexToLoc(n,t.length,S.computeStrides(t)).join(",");throw new Error(`indices[${i}] = ${o} is not in [0, ${e})`)}})}function mK(r,t){for(let e=0;e<r.length;++e){let o=r[e],n=e===r.length-1?t:r[e+1].length;if(o.length===0)throw new Error("Ragged splits may not be empty");if(o[0]<0)throw new Error("Ragged splits must be non-negative");if(o[o.length-1]>n)throw new Error("Ragged splits must not point past values");for(let i=1;i<o.length;++i)if(o[i-1]>o[i])throw new Error("Ragged splits must be sorted in ascending order")}}function fK(r,t,e,o){let n=[],i=0,s=t.length-1+e.length,a=new Array(s).fill(null).map(()=>[0]);mK(e,o);let l=1;for(let u=0;u<t.length-1;++u){l*=t[u];let c=t[u+1];for(let p=1;p<l+1;++p)a[u].push(p*c)}for(let u=0;u<r.length;++u){let c=r[u],p=r[u]+1;for(let d=0;d<e.length;++d){let m=e[d],f=d+t.length-1;if(f>=0){let g=a[f],x=g[g.length-1]-m[c];for(let y=c;y<p;++y)a[f].push(m[y+1]+x)}c=m[c],p=m[p]}p!==c&&(n.push([c,p]),i+=p-c)}return{outSplits:a,valueSlices:n,numValues:i}}function hK(r){let t=[];for(let e=0;e<r.length;++e){let o=r[e].length,n=S.getArrayFromDType("int32",o);t.push(n),r[e].forEach((i,s)=>n[s]=i)}return t}function DI(r,t){let e=r.slice(0,t);for(;e.length<t;)e.push(1);for(let o=t;o<r.length;o++)e[t-1]*=r[o];return e}function gK(r,t,e,o,n,i){let s=DI(t,2)[1],a=DI(i,2)[1],l=0;for(let u of e)for(let c=u[0];c<u[1];++c){for(let p=0;p<o;++p)n[l*a+p]=r[c*s+p];++l}}function xK(r,t,e,o,n){let i=t.slice();i[0]=n;let s=S.getArrayFromDType(e,S.sizeFromShape(i)),a=r.length,l=a===0?0:a/t[0];return gK(r,t,o,l,s,i),[s,i]}function AI(r,t,e,o,n,i,s,a){if(r.length===0)throw new Error("paramsNestedSplits must be non empty");if(t[0].length===0)throw new Error("Split tensors must not be scalars");let l=t[0][0]-1;if(dK(i,s,l),o.length===0)throw new Error("params.rank must be nonzero");let u=o[0],{outSplits:c,valueSlices:p,numValues:d}=fK(i,s,r,u),m=hK(c),f=xK(e,o,n,p,d);return[m,f[0],f[1]]}var FI=2147483647;function OI(r,t,e,o,n,i,s){if(t.length>1)throw new Error("starts must be a scalar or vector");if(n.length>1)throw new Error("limits must be a scalar or vector");if(s.length>1)throw new Error("deltas must be a scalar or vector");let a=t.length===0,l=n.length===0,u=s.length===0,c=[];a||c.push(t[0]),l||c.push(n[0]),u||c.push(s[0]);for(let x=1;x<c.length;++x)if(c[x]!==c[x-1])throw new Error("starts, limits, and deltas must have the same shape");let p=c.length===0?1:c[0],d=S.getArrayFromDType("int32",p+1);d[0]=0;for(let x=0;x<p;++x){let y=a?r[0]:r[x],v=l?o[0]:o[x],k=u?i[0]:i[x];if(k===0)throw new Error("Requires delta != 0");let N;if(k>0&&v<y||k<0&&v>y)N=0;else if(N=Math.ceil(Math.abs((v-y)/k)),N>FI)throw new Error(`Requires ((limit - start) / delta) <= ${FI}`);d[x+1]=d[x]+N}let m=d[p],f=S.getArrayFromDType(e,m),g=0;for(let x=0;x<p;++x){let y=d[x+1]-d[x],v=a?r[0]:r[x],k=u?i[0]:i[x];for(let N=0;N<y;++N)f[g++]=v,v+=k}return[d,f]}var Io=R.RowPartitionType,M1=class r{constructor(t,e,o,n,i,s,a,l,u,c){this.shape=t,this.shapeShape=e,this.values=o,this.valuesShape=n,this.valuesDType=i,this.defaultValue=s,this.defaultValueShape=a,this.rowPartitionValues=l,this.rowPartitionValuesShapes=u,this.rowPartitionTypes=R.getRowPartitionTypesHelper(c),this.raggedRank=R.getRaggedRank(this.rowPartitionTypes)}getRowPartitionTypeByDimension(t){return this.rowPartitionTypes[0]===Io.FIRST_DIM_SIZE?this.rowPartitionTypes[t+1]:this.rowPartitionTypes[t]}getRowPartitionTensor(t){return this.rowPartitionTypes[0]===Io.FIRST_DIM_SIZE?this.rowPartitionValues[t+1]:this.rowPartitionValues[t]}getMaxWidth(t){let e=this.getRowPartitionTensor(t-1);switch(this.getRowPartitionTypeByDimension(t-1)){case Io.VALUE_ROWIDS:return r.getMaxWidthValueRowID(e);case Io.ROW_SPLITS:return r.getMaxWidthRowSplit(e);default:throw new Error(`Cannot handle partition type ${Io[this.getRowPartitionTypeByDimension(t-1)]}`)}}static getMaxWidthRowSplit(t){let e=t.length;if(e===0||e===1)return 0;let o=0;for(let n=0;n<e-1;++n){let i=t[n+1]-t[n];i>o&&(o=i)}return o}static getMaxWidthValueRowID(t){let e=t.length;if(e===0)return 0;let o=0,n=t[0],i=0;for(let s=1;s<e;++s){let a=t[s];a!==n&&(n=a,i=Math.max(s-o,i),o=s)}return Math.max(e-o,i)}tensorShapeFromTensor(t,e,o=!0){if(e.length===0){if(t[0]===-1)return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return MI(t,o)}calculateOutputSize(t){let e=this.valuesShape,o=this.defaultValueShape;R.validateDefaultValueShape(o,e);let n=this.tensorShapeFromTensor(this.shape,this.shapeShape),s=R.combineRaggedTensorToTensorShapes(this.raggedRank,n,e);s[0]<0&&(s[0]=t);for(let a=1;a<=this.raggedRank;++a)s[a]<0&&(s[a]=this.getMaxWidth(a));return s}calculateFirstParentOutputIndex(t,e,o){let n=Math.min(t,o),i=[],s=0;for(let a=0;a<n;++a,s+=e)i.push(s);for(let a=n;a<t;++a)i.push(-1);return S.assert(i.length===t,()=>"Final length of result must be equal to firstDimension."),i}calculateOutputIndexRowSplit(t,e,o,n){let i=t.length,s=[];for(let a=0;a<i-1;++a){let l=t[a+1]-t[a],u=Math.min(n,l),c=e[a];c===-1&&(u=0);for(let p=0;p<u;++p)s.push(c),c+=o;for(let p=0;p<l-u;++p)s.push(-1)}if(i>0&&s.length!==t[i-1])throw new Error("Invalid row split size.");return s}calculateOutputIndexValueRowID(t,e,o,n){let i=t.length,s=[];if(i===0)return[];let a=0,l=t[0];if(l>=e.length)throw new Error(`Got currentValueRowId=${l}, which is not less than ${e.length}`);let u=e[l];s.push(u);for(let c=1;c<i;++c){let p=t[c];if(p===l)u>=0&&(++a,a<n?u+=o:u=-1);else{if(a=0,l=p,p>=e.length)throw new Error(`Got nextValueRowId=${p} which is not less than ${e.length}`);u=e[p]}s.push(u)}if(s.length!==t.length)throw new Error("Invalid row ids.");return s}calculateOutputIndex(t,e,o,n){let i=this.getRowPartitionTensor(t),s=this.getRowPartitionTypeByDimension(t);switch(s){case Io.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(i,e,o,n);case Io.ROW_SPLITS:if(i.length-1>e.length)throw new Error(`Row partition size is greater than output size: ${i.length-1} > ${e.length}`);return this.calculateOutputIndexRowSplit(i,e,o,n);default:throw new Error(`Unsupported partition type: ${Io[s]}`)}}getFirstDimensionSize(){let t=this.rowPartitionValues[0];if(this.rowPartitionTypes.length===0)throw new Error("No row_partition_types given.");let e=this.rowPartitionTypes[0];switch(e){case Io.FIRST_DIM_SIZE:return t[0];case Io.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case Io.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${Io[e]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");let e=this.getFirstDimensionSize(),o=this.calculateOutputSize(e),n=new Array(this.raggedRank+1);n[n.length-1]=1;for(let l=n.length-2;l>=0;--l)n[l]=n[l+1]*o[l+1];let i=MI(o,!1),s=S.getArrayFromDType(this.valuesDType,S.sizeFromShape(i));if(n[0]*o[0]>0){let l=this.calculateFirstParentOutputIndex(e,n[0],o[0]);for(let u=1;u<=this.raggedRank;++u)l=this.calculateOutputIndex(u-1,l,n[u],o[u]);this.setOutput(this.raggedRank,l,s,i)}return[i,s]}setOutput(t,e,o,n){if(o.length===0)return;let i=this.values,s=o,a=n.slice();a=a.slice(t+1);let l=S.sizeFromShape(a),u=e.length,c=this.defaultValue;if(c.length!==l&&c.length!==1){let f=this.defaultValueShape;Te(()=>{let g=Y(c,f);c=Ti(g,a).dataSync()})}let p=0,d=0,m=0;for(let f=0;f<=u;++f){let g=f<u?e[f]:-1;if(g===m){++m;continue}if(d<m){let x=i.subarray(p*l),y=s.subarray(d*l),v=(m-d)*l;LI(y,x,v)}if(f>=u){let x=o.length;g=Math.floor(x/l)}if(g>m)if(this.defaultValue.length===1)s.subarray(m*l,g*l).fill(this.defaultValue[0]),m=g;else for(;g>m;){let x=s.slice(m*l);LI(x,c,l),++m}g<0?(p=f+1,d=m):(p=f,d=m,m=d+1)}}};function LI(r,t,e){for(let o=0;o<e;o++)r[o]=t[o]}function MI(r,t){let e=[];for(let o of r){if(o<0){if(!t)throw new Error(`Dimension ${o} must be >= 0`);if(o<-1)throw new Error(`Dimension ${o} must be >= -1`);o=-1}e.push(o)}return e}function BI(r,t,e,o,n,i,s,a,l,u){return new M1(r,t,e,o,n,i,s,a,l,u).compute()}function VI(r,t,e,o){let n=r===t,i=r<t&&e<0,s=t<r&&e>1;if(n||i||s)return S.makeZerosTypedArray(0,o);let a=Math.abs(Math.ceil((t-r)/e)),l=S.makeZerosTypedArray(a,o);t<r&&e===1&&(e=-1),l[0]=r;for(let u=1;u<l.length;u++)l[u]=l[u-1]+e;return l}var B1=Kt(r=>1/Math.sqrt(r)),eUe=Fr(mi,B1);function WI(r,t,e,o,n,i,s,a,l,u){let c=[o/n,n],p=r.values,d=t.values;if(o===0)return Oe(e,t.dtype);let m=l instanceof ao?l:Oe(c,t.dtype);typeof l=="string"||typeof l=="number"?m.values.fill(l):typeof l=="boolean"&&m.values.fill(+l);for(let f=0;f<i;f++){let g=[],x=0;for(let y=0;y<s;y++){let v=p[f*s+y];g.push(v),x+=v*a[y]}if(x<0||x>=o/n)throw new Error(`Invalid indices: ${g} does not index into ${e}`);for(let y=0;y<n;y++)u?m.values[x*n+y]+=d[f*n+y]:m.values[x*n+y]=t.rank===0?d[0]:d[f*n+y]}return m}var zI=Kt(r=>1/(1+Math.exp(-r))),aUe=ih(fi,r=>1/(1+Math.exp(-r)));function UI(r,t,e,o,n){let i=Ut.isSliceContinous(o,t,e),s=S.sizeFromShape(e),a=S.computeStrides(o);if(i){let p=Ut.computeFlatOffset(t,a);return n==="string"?r.slice(p,p+s):r.subarray(p,p+s)}let l=n==="string"?R.fromUint8ToStringArray(r):r,u=Oe(o,n,l),c=Oe(e,n);for(let p=0;p<c.size;++p){let d=c.indexToLoc(p),m=d.map((f,g)=>f+t[g]);c.set(u.get(...m),...d)}return n==="string"?R.fromStringArrayToUint8(c.values):c.values}function GI(r,t,e,o,n,i,s){let a=t[0],l=i[0],u=new Array(l),c=new Array(a),p=t[1];if(l===0){if(a!==0)throw new Error(R.getSparseFillEmptyRowsIndicesDenseShapeMismatch(a));let x=S.getArrayFromDType(e,0),y=S.getArrayFromDType(n,0);return[x,[0,p],y,u,c]}let d=!0,m=0,f=new Array(l).fill(0);for(let x=0;x<a;++x){let y=r[x*p];if(y<0)throw new Error(R.getSparseFillEmptyRowsNegativeIndexErrorMessage(x,y));if(y>=l)throw new Error(R.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(x,y,l));++f[y],d=d&&y>=m,m=y}let g=!0;for(let x=0;x<l;++x){let y=f[x]===0;u[x]=y,g=g&&!y,f[x]=Math.max(f[x],1),x>0&&(f[x]+=f[x-1])}if(g&&d){let x=r,y=o;for(let v=0;v<a;++v)c[v]=v;return[x,[a,p],y,u,c]}else{let x=f[l-1],y=S.getArrayFromDType(e,x*p),v=S.getArrayFromDType(n,x),k=new Array(l).fill(0);for(let N=0;N<a;++N){let F=r[N*p],M=k[F],z=(F===0?0:f[F-1])+M;k[F]++;for(let H=0;H<p;++H)y[z*p+H]=r[N*p+H];v[z]=o[N],c[N]=z}for(let N=0;N<l;++N)if(k[N]===0){let M=N===0?0:f[N-1];y[M*p+0]=N;for(let z=1;z<p;++z)y[M*p+z]=0;v[M]=s}return[y,[x,p],v,u,c]}}function HI(r,t,e,o,n){let i=S.sizeFromShape(o),s=t[0],a=n.length,l=[],u=1,c=-1;for(let x=0;x<a;++x){let y=n[x];if(y===-1){if(c!==-1)throw new Error(R.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(c,x));c=x,l.push(1)}else{if(y<0)throw new Error(R.getSparseReshapeNegativeOutputDimErrorMessage(x,y));u*=y,l.push(y)}}if(c!==-1){if(u<=0)throw new Error(R.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());let x=Math.trunc(i/u);if(u*x!==i)throw new Error(R.getSparseReshapeInputOutputMultipleErrorMessage(o,l));l[c]=x}if(S.sizeFromShape(l)!==i)throw new Error(R.getSparseReshapeInputOutputMismatchErrorMessage(o,l));let d=o.length,m=[];if(d>0){m[d-1]=1;for(let x=d-2;x>=0;--x)m[x]=m[x+1]*o[x+1]}let f=[];if(a>0){f[a-1]=1;for(let x=a-2;x>=0;--x)f[x]=f[x+1]*l[x+1]}let g=S.getArrayFromDType(e,s*a);for(let x=0;x<s;++x){let y=0;for(let v=0;v<d;++v)y+=r[x*d+v]*m[v];for(let v=0;v<a;++v)g[x*a+v]=Math.trunc(y/f[v]),y%=f[v]}return[g,[s,a],l]}function KI(r,t,e,o,n,i=!1,s=0){let a=o.length,l=[t[0],r.length/t[0]],u=l[1],p=a>0?n[a-1]+1:0;if(p<0)throw new Error(R.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let d=t.slice();d[0]=p;let m=d.reduce((k,N)=>k*N,1),f=S.getArrayFromDType(e,m);if(a===0)return p>0&&f.fill(s),[f,d];if(p<=0)throw new Error(R.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let g=0,x=1,y=0,v=n[g];for(;;){let k=0;if(x<a){if(k=n[x],v===k){++x;continue}if(v>=k)throw new Error(R.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(v<0||v>=p)throw new Error(R.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(v,p));v>y&&f.fill(s,y*u,v*u);for(let N=g;N<x;++N){let F=o[N];if(F<0||F>=l[0])throw new Error(R.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(N,o[N],l[0]));for(let M=0;M<u;M++)f[v*u+M]+=r[F*u+M]}if(i)for(let N=0;N<u;N++)f[v*u+N]/=x-g;if(g=x,++x,y=v+1,v=k,x>a)break}return y<p&&f.fill(s,y*u,p*u),[f,d]}var qI=Kt(r=>Math.sqrt(r)),vUe=ih(hi,r=>Math.sqrt(r));var V1=ht((r,t)=>{let e=r-t;return e*e}),kUe=gt(gi,V1);var W1=Kt((r,t)=>{let{pattern:e,replaceGlobal:o,rewrite:n}=t;return r.replace(new RegExp(e,o?"g":""),n)}),RUe=Fr(Tu,W1);function jI(r,t,e,o){let n=Oe(r,t.dtype);for(let i=0;i<n.size;i++){let s=n.indexToLoc(i),a=new Array(s.length);for(let l=0;l<a.length;l++)a[l]=s[l]*e[l]+o[l];n.set(t.get(...a),...s)}return n}var z1=class{constructor(t,e,o,n,i,s){this.separator=S.encodeString(t),this.nGramWidths=e,this.leftPad=S.encodeString(o),this.rightPad=S.encodeString(n),this.padWidth=i,this.preserveShort=s}getPadWidth(t){return Math.min(this.padWidth<0?t-1:this.padWidth,t-1)}getNumNGrams(t,e){let o=this.getPadWidth(e);return Math.max(0,t+2*o-e+1)}createNGrams(t,e,o,n,i,s){for(let a=0;a<i;++a){let l=this.getPadWidth(s),u=Math.max(0,l-a),c=Math.max(0,l-(i-(a+1))),p=s-(u+c),d=e+(u>0?0:a-l),m=0;m+=u*this.leftPad.length;for(let v=0;v<p;++v)m+=t[d+v].length;m+=c*this.rightPad.length;let f=u+c+p-1;m+=f*this.separator.length,o[n+a]=new Uint8Array(m);let g=o[n+a],x=0,y=v=>v.forEach(k=>g[x++]=k);for(let v=0;v<u;++v)y(this.leftPad),y(this.separator);for(let v=0;v<p-1;++v)y(t[d+v]),y(this.separator);if(p>0){y(t[d+p-1]);for(let v=0;v<c;++v)y(this.separator),y(this.rightPad)}else{for(let v=0;v<c-1;++v)y(this.rightPad),y(this.separator);y(this.rightPad)}}}compute(t,e){let o=t.length,n=e.length;if(n>0){let l=e[0];if(l!==0)throw new Error(`First split value must be 0, got ${l}`);for(let u=1;u<n;++u){let c=e[u]>=l;if(c=c&&e[u]<=o,!c)throw new Error(`Invalid split value ${e[u]}, must be in [${l}, ${o}]`);l=e[u]}if(l!==o)throw new Error(`Last split value must be data size. Expected ${o}, got ${l}`)}let i=n-1,s=S.getArrayFromDType("int32",n);if(o===0||n===0){let l=new Array(o);for(let u=0;u<=i;++u)s[u]=0;return[l,s]}s[0]=0;for(let l=1;l<=i;++l){let u=e[l]-e[l-1],c=0;this.nGramWidths.forEach(p=>{c+=this.getNumNGrams(u,p)}),this.preserveShort&&u>0&&c===0&&(c=1),s[l]=s[l-1]+c}let a=new Array(s[i]);for(let l=0;l<i;++l){let u=e[l],c=s[l];if(this.nGramWidths.forEach(p=>{let d=e[l+1]-e[l],m=this.getNumNGrams(d,p);this.createNGrams(t,u,a,c,m,p),c+=m}),this.preserveShort&&c===s[l]){let p=e[l+1]-e[l];if(p===0)continue;let d=p+2*this.padWidth;this.createNGrams(t,u,a,c,1,d)}}return[a,s]}};function XI(r,t,e,o,n,i,s,a){return new z1(e,o,n,i,s,a).compute(r,t)}function yK(r,t,e,o){if(!r.length)return;if(t.length===0){for(let i=0;i<r.length;++i)o.push(r.subarray(i,i+1));return}if(t.length===1){let i=t[0],s=r.indexOf(i);for(;s!==-1;){let a=r.subarray(0,s);(!e||a.length!==0)&&o.push(a),r=r.subarray(s+1),s=r.indexOf(i)}(!e||r.length!==0)&&o.push(r);return}let n=0;for(let i=0;i<r.length+1;i++)if(i===r.length||t.indexOf(r[i])!==-1){let s=r.subarray(n,i);(!e||s.length!==0)&&o.push(s),n=i+1}}function YI(r,t,e){let o=r.length,n=[],i=0,s=0,a=new Array(o);for(let d=0;d<o;++d){let m=n.length;yK(r[d],t,e,n);let f=n.length-m;a[d]=f,i+=f,s=Math.max(s,f)}let l=S.getArrayFromDType("int32",i*2),u=new Array(i),c=[o,s],p=0;for(let d=0;d<o;++d)for(let m=0;m<a[d];++m)l[p*2]=d,l[p*2+1]=m,u[p]=n[p],++p;return[l,u,c]}function QI(r,t){let e=S.getArrayFromDType("int32",r.length);for(let o=0;o<r.length;++o)e[o]=S.fingerPrint64(r[o]).modulo(t).getLowBitsUnsigned();return e}var U1=ht((r,t)=>r-t),bK=uc((r,t,e,o)=>({real:r-e,imag:t-o})),UUe=gt(xi,U1,bK);function ZI(r,t){let e=new Array(r.rank);for(let n=0;n<e.length;n++)e[n]=r.shape[n]*t[n];let o=Oe(e,r.dtype);for(let n=0;n<o.values.length;++n){let i=o.indexToLoc(n),s=new Array(r.rank);for(let l=0;l<s.length;l++)s[l]=i[l]%r.shape[l];let a=r.locToIndex(s);o.values[n]=r.values[a]}return o}var Ap=(r,t)=>{let e=t.value-r.value;return e===0?r.index-t.index:e};function JI(r,t,e=0,o=r.length-1){for(;o>e;){if(o-e>600){let a=o-e+1,l=t-e+1,u=Math.log(a),c=.5*Math.exp(2*u/3),p=.5*Math.sqrt(u*c*(a-c)/a)*Math.sign(l-a/2),d=Math.max(e,Math.floor(t-l*c/a+p)),m=Math.min(o,Math.floor(t+(a-l)*c/a+p));JI(r,t,d,m)}let n=r[t],i=e,s=o;for(S.swap(r,e,t),Ap(r[o],n)>0&&S.swap(r,e,o);i<s;){for(S.swap(r,i,s),i++,s--;Ap(r[i],n)<0;)i=i+1;for(;Ap(r[s],n)>0;)s=s-1}Ap(r[e],n)===0?S.swap(r,e,s):(s=s+1,S.swap(r,s,o)),s<=t&&(e=s+1),t<=s&&(o=s-1)}}function eT(r,t,e,o,n){let i=t[t.length-1],[s,a]=[r.length/i,i],l=S.getTypedArrayFromDType(e,s*o),u=S.getTypedArrayFromDType("int32",s*o);for(let p=0;p<s;p++){let d=p*a,m=r.subarray(d,d+a),f=new Array(m.length);m.forEach((v,k)=>f[k]={value:v,index:k}),o<f.length&&(JI(f,o),f=f.slice(0,o)),n&&f.sort(Ap);let g=p*o,x=l.subarray(g,g+o),y=u.subarray(g,g+o);for(let v=0;v<o;v++)x[v]=f[v].value,y[v]=f[v].index}let c=t.slice();return c[c.length-1]=o,[Oe(c,e,l),Oe(c,"int32",u)]}function tT(r,t,e,o){let n=S.parseAxisParam(t,e)[0],i=[1,e[0],1];for(let f=0;f<n;f++)i[0]*=e[f];i[1]=e[n];for(let f=n+1;f<e.length;f++)i[2]*=e[f];let s=new Map,a=new Int32Array(e[n]),l=new ao(i,o,r),u=[],c=i[0]===1&&i[2]===1;for(let f=0;f<e[n];f++){let g;if(c)g=r[f].toString();else{let y=[];for(let v=0;v<i[0];v++)for(let k=0;k<i[2];k++)y.push(l.get(v,f,k));g=y.join(",")}let x=s.get(g);if(x!=null)a[f]=x;else{let y=s.size;s.set(g,y),a[f]=y,u.push(f)}}let p=i.slice();p[1]=s.size;let d=new ao(p,o);u.forEach((f,g)=>{for(let x=0;x<i[0];x++)for(let y=0;y<i[2];y++)d.set(l.get(x,f,y),x,g,y)});let m=e.slice();return m[n]=p[1],{outputValues:d.values,outputShape:m,indices:a}}var{addImpl:rT,castImpl:oT,ceilImpl:nT,concatImpl:iT,equalImpl:sT,expImpl:aT,expm1Impl:lT,floorImpl:uT,floorDivImpl:cT,gatherNdImpl:pT,gatherV2Impl:dT,greaterEqualImpl:mT,greaterImpl:fT,lessEqualImpl:hT,lessImpl:gT,logImpl:xT,maxImpl:yT,maximumImpl:bT,minimumImpl:vT,multiplyImpl:ST,negImpl:wT,notEqualImpl:CT,prodImpl:_T,rangeImpl:kT,rsqrtImpl:IT,scatterImpl:TT,simpleAbsImpl:ET,sliceImpl:NT,stridedSliceImpl:RT,stringNGramsImpl:$T,subImpl:PT,tileImpl:DT,topKImpl:AT,transposeImpl:FT,uniqueImpl:q5e}=Fp;var vK=we({opType:ne.ABS,cpuKernelImpl:ET}),OT={kernelName:as,backendName:"webgpu",kernelFunc:vK};var SK=we({opType:ne.ACOS}),LT={kernelName:$a,backendName:"webgpu",kernelFunc:SK};var wK=we({opType:ne.ACOSH}),MT={kernelName:Pa,backendName:"webgpu",kernelFunc:wK};var CK=Ze({opType:Se.ADD,cpuKernelImpl:rT,supportsComplex:!0}),BT={kernelName:Zo,backendName:"webgpu",kernelFunc:CK};var sh=class{constructor(t){this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t[0],this.variableNames=t.map((e,o)=>`T${o}`),this.dispatchLayout=te(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.shaderKey="addN"}getUserCode(){let t=[];this.variableNames.forEach(n=>{t.push(`let v${n} = get${n}ByOutputCoords(coords);`)});let e=this.variableNames.map(n=>`v${n}`).join(" + ");return`
      ${Q("index")} {
        for (var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if (flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndex);
            ${t.join(`
        `)}
            setOutputAtIndex(flatIndex, ${e});
          }
        }
      }
    `}};function _K(r){let{inputs:t,backend:e}=r,o=t;if(o.length===1)return $t({inputs:{x:o[0]},backend:e});let n=o.map(a=>a.dtype).reduce((a,l)=>Tt(a,l)),i=o.map(a=>a.shape),s=new sh(i);return e.runWebGPUProgram(s,o,n)}var VT={kernelName:Da,backendName:"webgpu",kernelFunc:_K};var ah=class{constructor(t,e){this.variableNames=["A"],this.workgroupSize=[16,16,1];let o=new Array(t.length);for(let n=0;n<o.length;n++)o[n]=t[e[n]];this.outputShape=o,this.dispatchLayout={x:[0],y:[1]},this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize,[1,1,1]),this.shaderKey="transposeShared"}getUserCode(){S.assert(this.workgroupSize[0]===this.workgroupSize[1],()=>`Must be a square tile, current tile shape is ${this.workgroupSize[0]} x ${this.workgroupSize[1]}`);let t=this.workgroupSize[0];return`
      var<workgroup> tile : array<array<f32, ${this.workgroupSize[0]+1}>, ${this.workgroupSize[0]}>;
      ${Q()} {
        var x = i32(workgroupId.x) * ${t} + i32(localId.x);
        var y = i32(workgroupId.y) * ${t} + i32(localId.y);
        let width = uniforms.outShape[0];
        let height = uniforms.outShape[1];
        if (x < width && y < height) {
          tile[localId.y][localId.x] = f32(A[y * width + x]);
        }
        workgroupBarrier();

        x = i32(workgroupId.y) * ${t} + i32(localId.x);
        y = i32(workgroupId.x) * ${t} + i32(localId.y);
        if (x < height && y < width) {
          setOutputAtIndex((y * height + x), tile[localId.x]
            [localId.y]);
        }
      }
    `}};var lh=class{constructor(t,e){this.variableNames=["A"],this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0;let o=new Array(t.length);for(let n=0;n<o.length;n++)o[n]=t[e[n]];this.outputShape=o,this.dispatchLayout=te(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.newDim=e,this.shaderKey=`transpose_${e}`}getUserCode(){let t=ft(this.outputShape.length),e=G1(this.newDim);return`
      ${Q("index")} {
        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if(flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndex);
            setOutputAtIndex(flatIndex, A[getIndexFromCoords${this.outputShape.length}D(
              ${t}(${e}), uniforms.aShape)]);
          }
        }
      }
    `}};function G1(r){let t=r.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);let e=new Array(t);for(let o=0;o<r.length;o++)e[r[o]]=`coords.${ko(o)}`;return e.join()}function dr(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{perm:i}=o,s=e,a=n.shape.length,l=new Array(a);for(let c=0;c<l.length;c++)l[c]=n.shape[i[c]];if(e.shouldExecuteOnCPU([n])){let p=s.tensorMap.get(n.dataId).values,d=FT(p,n.shape,n.dtype,i,l);return e.makeTensorInfo(l,n.dtype,d)}if(n.shape.length===2&&S.arraysEqual(i,[1,0])){let c=new ah(n.shape,i);return s.runWebGPUProgram(c,[n],n.dtype)}let u=new lh(n.shape,i);return s.runWebGPUProgram(u,[n],n.dtype)}var WT={kernelName:bi,backendName:"webgpu",kernelFunc:dr};var uh=class{constructor(t,e,o){this.variableNames=["x"],this.uniforms="reduceSize : i32,",this.size=!0,this.inputShape=[t.batchSize,t.inSize];let[n]=R.computeOutAndReduceShapes(this.inputShape,[1]);this.outputShape=n.length===0?[1]:n,t.inSize>=32768&&o>=512?this.workgroupSize=[512,1,1]:t.inSize>=4096?this.workgroupSize=[256,1,1]:this.workgroupSize=[64,1,1],this.dispatchLayout=te(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,[1,1,1]),this.reduceType=e,this.shaderKey=`reduce_${e}`}getUserCode(){let t="",e="0.0",o=this.workgroupSize[0];this.reduceType==="min"||this.reduceType==="max"?(t=`
         if (isnan(candidate)) {
          bestValue = uniforms.NAN;
         } else if (!isnan(bestValue) && candidate ${this.reduceType==="min"?"<":">"} bestValue)
           {  bestValue = candidate; }`,e="f32(x[offset])"):this.reduceType==="sum"||this.reduceType==="mean"?t=" bestValue = bestValue + candidate; ":this.reduceType==="prod"?(t=" bestValue = bestValue * candidate; ",e="1.0"):this.reduceType==="all"?(t=" bestValue = f32(bestValue >= 1.0 && candidate >= 1.0); ",e="1.0"):this.reduceType==="any"&&(t=" bestValue = f32(bestValue >= 1.0 || candidate >= 1.0); ",e="0.0");let n=this.reduceType==="mean"?"setOutputAtIndex(outputIndex, bestValue / f32(uniforms.reduceSize));":"setOutputAtIndex(outputIndex, bestValue);";return`
       fn DIV_CEIL(a : u32, b : u32) -> u32 {
        return ((a - 1u) / b + 1u);
       }

       ${`
         var<workgroup> xBestValues : array<f32, ${o}>;
       `}
       fn getOffset(outputIndex : i32) -> i32 {
         let outputCoords = getCoordsFromIndex(outputIndex);
         let offset = ${this.outputShape.length===1?"outputCoords":"outputCoords[0]"} * uniforms.reduceSize;
          return offset;
       }
       ${Q("index")} {
         let outputIndex = index / ${o};
         let offset = getOffset(outputIndex);
         var bestValue = ${e};
         let Length = uniforms.reduceSize;
         let WorkPerThread = DIV_CEIL(u32(Length), ${o}u);
         for (var k = i32(localId.x); k < Length && outputIndex < uniforms.size;
             k = k + ${o}) {
           let candidate = f32(x[offset + k]);
           ${t}
         }
         xBestValues[localId.x] = bestValue;
         workgroupBarrier();

         var reduceSize = min(u32(Length), ${o}u);
         for (var currentSize = reduceSize / 2u; reduceSize > 1u;
             currentSize = reduceSize / 2u) {
           let interval = DIV_CEIL(reduceSize, 2u);
           if (localId.x < currentSize) {
            let candidate = xBestValues[localId.x + interval];
            ${t}
            xBestValues[localId.x] = bestValue;
           }
           reduceSize = interval;
           workgroupBarrier();
         }

         if (localId.x == 0u && outputIndex < uniforms.size) {
          ${n}
        }
       }
     `}};var kK={mean:"float32",all:"bool",any:"bool"};function eo(r,t,e,o,n){let i=r.shape.length,s=[],a=S.parseAxisParam(t,r.shape),l=a,u=R.getAxesPermutation(l,i),c=r;u!=null&&(c=dr({inputs:{x:r},attrs:{perm:u},backend:n}),l=R.getInnerMostAxes(l.length,i),s.push(c)),R.assertAxesAreInnerMostDims(o,l,i);let[p,d]=R.computeOutAndReduceShapes(c.shape,l),m=p;e&&(m=R.expandShapeToKeepDim(p,a));let f;if((o==="max"||o==="prod")&&n.shouldExecuteOnCPU([c])){let g=n.tensorMap.get(c.dataId).values;switch(o){case"max":let x=yT(g,S.sizeFromShape(d),m,r.dtype);f=n.makeTensorInfo(m,r.dtype,x);break;case"prod":let{outVals:y,outShape:v,outDtype:k}=_T(c.shape,c.dtype,g,l);f=n.makeTensorInfo(v,k,y);break;default:throw new Error(`${o} CPU implementation is not yet supported.`)}}else{let g=S.sizeFromShape(d),y=S.sizeFromShape(c.shape)/g,v={windowSize:g,inSize:g,batchSize:y,outSize:1},k=kK[o]||Cn(r.dtype),N=[{type:"int32",data:[g]}],F=new uh(v,o,n.device.limits.maxComputeWorkgroupSizeX),M=n.runWebGPUProgram(F,[c],k,N);s.push(M),f=me({inputs:{x:M},attrs:{shape:m},backend:n})}return s.forEach(g=>n.disposeData(g.dataId)),f}function IK(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{keepDims:i,axis:s}=o;return eo(n,s,i,"all",e)}var zT={kernelName:Aa,backendName:"webgpu",kernelFunc:IK};function TK(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{keepDims:i,axis:s}=o;return eo(n,s,i,"any",e)}var UT={kernelName:Fa,backendName:"webgpu",kernelFunc:TK};var cc=class{constructor(t,e,o){this.workgroupSize=[64,1,1],this.variableNames=["x"],this.uniforms="infinityValue : f32,",this.size=!0;let n=[e];this.op=o==="min"?"<":">";let[i,s]=R.computeOutAndReduceShapes(t,n);this.outputShape=i.length===0?[1]:i,this.dispatchLayout=te(this.outputShape),S.sizeFromShape(s)<32?(this.type="plain",this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize)):(this.type="shared",this.dispatch=Z(this.dispatchLayout,this.outputShape,[1,1,1])),this.inputShape=t,this.shaderKey=`argMinMax_${this.op}_${this.type}`}getUserCode(){let t=this.workgroupSize[0],e=()=>this.inputShape.length===1?"uniforms.xShape":`uniforms.xShape.${ko(this.inputShape.length-1)}`,o=()=>{let n="";if(this.outputShape.length===1)this.inputShape.length!==1&&(n+="outputCoords,");else for(let i=0;i<this.outputShape.length;i++)n+=`outputCoords.${ko(i)},`;return n};return this.type==="shared"?`
      fn DIV_CEIL(a : u32, b : u32) -> u32 {
        return ((a - 1u) / b + 1u);
      }

      ${`
      var<workgroup> xBestIndices : array<i32, ${t}>;
      var<workgroup> xBestValues : array<f32, ${t}>;
    `}

      ${Q("index")} {
        let outputIndex = index / ${t};
        let reduceLength = ${e()};

        var bestIndex = i32(localId.x);
        var bestValue = uniforms.infinityValue;
        let outputCoords = getCoordsFromIndex(outputIndex);
        for (var k = i32(localId.x); k < reduceLength && outputIndex < uniforms.size;
            k = k + ${t}) {
          let candidate = getX(${o()} k);
          if (!isnan(candidate) && candidate ${this.op} bestValue) {
            bestValue = candidate;
            bestIndex = k;
          }
        }
        xBestValues[localId.x] = bestValue;
        xBestIndices[localId.x] = bestIndex;
        workgroupBarrier();

        var reduceSize = min(u32(reduceLength), ${t}u);
        for (var currentSize = reduceSize / 2u; reduceSize > 1u;
            currentSize = reduceSize / 2u) {
          let interval = DIV_CEIL(reduceSize, 2u);
          if (localId.x < currentSize) {
            let candidate = xBestValues[localId.x + interval];
            if (candidate ${this.op} bestValue) {
              bestValue = candidate;
              xBestValues[localId.x] = bestValue;
              xBestIndices[localId.x] = xBestIndices[localId.x + interval];
            }
          }
          reduceSize = interval;
          workgroupBarrier();
        }

        if (localId.x == 0u && outputIndex < uniforms.size) {
          setOutputAtIndexI32(outputIndex, xBestIndices[localId.x]);
        }
      }
    `:`
      ${Q("index")} {
        if (index < uniforms.size) {
          let outputCoords = getCoordsFromIndex(index);
          var bestIndex = 0;
          var bestValue = getX(${o()} 0);
          let reduceLength = ${e()};
          for (var i = 1; i < reduceLength; i++) {
            let candidate = getX(${o()} i);
            if (candidate ${this.op} bestValue) {
              bestValue = candidate;
              bestIndex = i;
            }
          }
          setOutputAtIndexI32(index, bestIndex);
        }
      }
      `}};function EK(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{axis:i}=o,s=S.parseAxisParam(i,n.shape),a=R.getAxesPermutation(s,n.shape.length),l=n,u=[];a!=null&&(l=dr({inputs:{x:n},backend:e,attrs:{perm:a}}),u.push(l),s=R.getInnerMostAxes(s.length,l.shape.length)),R.assertAxesAreInnerMostDims("argMax",[s[0]],l.shape.length);let c=new cc(l.shape,s[0],"max"),p=[{type:"float32",data:[Number.NEGATIVE_INFINITY]}],d=e.runWebGPUProgram(c,[l],"int32",p);return u.forEach(m=>e.disposeData(m.dataId)),d}var GT={kernelName:Oa,backendName:"webgpu",kernelFunc:EK};function NK(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{axis:i}=o,s=S.parseAxisParam(i,n.shape),a=R.getAxesPermutation(s,n.shape.length),l=n,u=[];a!=null&&(l=dr({inputs:{x:n},backend:e,attrs:{perm:a}}),u.push(l),s=R.getInnerMostAxes(s.length,l.shape.length)),R.assertAxesAreInnerMostDims("argMin",[s[0]],l.shape.length);let c=new cc(l.shape,s[0],"min"),p=[{type:"float32",data:[Number.POSITIVE_INFINITY]}],d=e.runWebGPUProgram(c,[l],"int32",p);return u.forEach(m=>e.disposeData(m.dataId)),d}var HT={kernelName:La,backendName:"webgpu",kernelFunc:NK};var RK=we({opType:ne.ASIN}),KT={kernelName:Ma,backendName:"webgpu",kernelFunc:RK};var $K=we({opType:ne.ASINH}),qT={kernelName:Ba,backendName:"webgpu",kernelFunc:$K};var PK=we({opType:ne.ATAN}),jT={kernelName:Va,backendName:"webgpu",kernelFunc:PK};var DK=Ze({opType:Se.ATAN2}),XT={kernelName:za,backendName:"webgpu",kernelFunc:DK};var AK=we({opType:ne.ATANH}),YT={kernelName:Wa,backendName:"webgpu",kernelFunc:AK};var ch=class{constructor(t){this.variableNames=["x"],this.uniforms="strides : vec2<i32>,",this.workgroupSize=[256,1,1],this.size=!0,this.outputShape=t.outShape,this.dispatchLayout=te(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="poolWithFilterSizeEqualsOne"}getUserCode(){return`
      ${Q("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let batch = coords[0];
          let d = coords[3];

          let xRCCorner = coords.yz * uniforms.strides;
          let xRCorner = xRCCorner.x;
          let xCCorner = xRCCorner.y;

          let value = getX(batch, xRCorner, xCCorner, d);
          setOutputAtIndex(index, value);
        }
      }
    `}};var ln=class{constructor(t,e,o=!1,n=!1,i=!1){if(this.variableNames=["x"],this.uniforms="strides : vec2<i32>, pads : vec2<i32>, dilations : vec2<i32>, convDims : vec2<i32>, filterDims : vec2<i32>,",this.workgroupSize=[128,1,1],this.size=!0,e==="avg"&&o)throw new Error("Cannot compute positions for average pool.");this.outputShape=t.outShape,this.dispatchLayout=te(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize),this.poolType=e,this.computePositions=o,this.flattenPositions=n,this.includeBatchIndex=i,this.shaderKey=`pool2D_${e}_${o}_${n}_${i}`}getUserCode(){let t;this.poolType==="avg"?t="resultValue = resultValue + value; count = count + 1.0;":this.computePositions?t=`let currMaxValue = mix(value, maxValue, maxValueFound);
      if (value >= currMaxValue) {
        maxValue = value;
        maxValueFound = 1.0;
        maxPosition = ${this.flattenPositions?this.includeBatchIndex?"((batch * uniforms.xShape[1] + xR) * uniforms.xShape[2] + xC) * uniforms.xShape[3] + d":"(xR * uniforms.xShape[2] + xC) * uniforms.xShape[3] + d":"wR * uniforms.filterDims.y + wC"};
      }`:t="resultValue = max(value, resultValue);";let e="resultValue";return this.poolType==="avg"&&(e="resultValue / max(count, 1.0)"),`
      ${Q("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
          let batch = coords[0];
          let d = coords[3];
          let xRCCorner = vec2<i32>(coords.yz) * uniforms.strides - uniforms.pads;
          let xRCorner = xRCCorner.x;
          let xCCorner = xRCCorner.y;

          ${this.computePositions?`var maxValue = 0.0;
            var maxValueFound = 0.0;
            var maxPosition = 0;`:`var resultValue = ${this.poolType==="avg"?"0.0":"-1.0 / pow(10.0, -20.0)"};`}

          var count = 0.0;
          for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + uniforms.dilations.x) {
            let xR = xRCorner + wR;

            if (xR < 0 || xR >= uniforms.convDims.x) {
              continue;
            }

            for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + uniforms.dilations.y) {
              let xC = xCCorner + wC;
              if (xC < 0 || xC >= uniforms.convDims.y) {
                continue;
              }

              let value = getX(batch, xR, xC, d);
              ${t}
            }
          }

          ${this.computePositions?"setOutputAtIndexI32(index, maxPosition);":`setOutputAtIndex(index, ${e});`}
        }
      }
    `}},Vi=class{constructor(t,e,o=!1,n=!1,i=!1){if(this.variableNames=["x"],this.uniforms="strides : vec3<i32>, pads : vec3<i32>, convDims : vec3<i32>, filterDims : vec3<i32>,",this.workgroupSize=[128,1,1],this.size=!0,e==="avg"&&o)throw new Error("Cannot compute positions for average pool.");this.outputShape=t.outShape,this.dispatchLayout=te(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize),this.poolType=e,this.computePositions=o,this.flattenPositions=n,this.includeBatchIndex=i,this.shaderKey=`pool3D_${e}_${o}_${n}_${i}`}getUserCode(){let t;this.poolType==="avg"?t="resultValue += value; count += 1.0;":this.computePositions?t=`let currMaxValue = mix(value, maxValue, maxValueFound);
      if (value >= currMaxValue) {
        maxValue = value;
        maxValueFound = 1.0;
        maxPosition = ${this.flattenPositions?this.includeBatchIndex?"(((batch * uniforms.xShape.y + xD) * uniforms.xShape.z + xR) * uniforms.xShape.w + xC) * uniforms.xShape.u + ch":"((xD * uniforms.xShape.z + xR) * uniforms.xShape.w + xC) * uniforms.xShape.u + ch":"wD * uniforms.filterDims.y * uniforms.filterDims.y + wR * uniforms.filterDims.z + wC"};
      }`:t="resultValue = max(value, resultValue);";let e="resultValue";return this.poolType==="avg"&&(e="resultValue / max(count, 1.0)"),`
      ${Q("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let batch = coords.x;
          let ch = coords.u;

          let xCorner = vec3<i32>(coords.y, coords.z, coords.w) * uniforms.strides - uniforms.pads;
          let xDCorner = xCorner.x;
          let xRCorner = xCorner.y;
          let xCCorner = xCorner.z;

          ${this.computePositions?`var maxValue = 0.0;
            var maxValueFound = 0.0;
            var maxPosition = 0;`:`var resultValue = ${this.poolType==="avg"?"0.0":"-1.0 / pow(10.0, -20.0)"};`}

          var count = 0.0;
          for (var wD = 0; wD < uniforms.filterDims.x; wD++) {
            let xD = xDCorner + wD;
            if (xD < 0 || xD >= uniforms.convDims.x) {
              continue;
            }

            for (var wR = 0; wR < uniforms.filterDims.y; wR++) {
              let xR = xRCorner + wR;
              if (xR < 0 || xR >= uniforms.convDims.y) {
                continue;
              }

              for (var wC = 0; wC < uniforms.filterDims.z; wC++) {
                let xC = xCCorner + wC;
                if (xC < 0 || xC >= uniforms.convDims.z) {
                  continue;
                }

                let value = getX(batch, xD, xR, xC, ch);
                ${t}
              }
            }
          }

          ${this.computePositions?"setOutputAtIndexI32(index, maxPosition);":`setOutputAtIndex(index, ${e});`}
        }
      }
    `}};function H1(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{reductionIndices:i,keepDims:s}=o;return eo(n,i,s,"max",e)}var QT={kernelName:Bl,backendName:"webgpu",kernelFunc:H1};function K1(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{keepDims:i,axis:s}=o;return eo(n,s,i,"mean",e)}var ZT={kernelName:Ul,backendName:"webgpu",kernelFunc:K1};function ph(r,t,e,o){if(t.filterWidth===1&&t.filterHeight===1&&S.arraysEqual(t.inShape,t.outShape))return $t({inputs:{x:r},backend:o});if(t.filterWidth===t.inWidth&&t.filterHeight===t.inHeight&&t.batchSize===1&&t.padInfo.type==="VALID"){let s=r.shape.length,a=me({inputs:{x:r},backend:o,attrs:{shape:[r.shape[s-3]*r.shape[s-2],r.shape[s-1]]}}),l;e==="avg"?l=K1({inputs:{x:a},backend:o,attrs:{axis:0,keepDims:!1}}):(S.assert(e==="max",()=>`Invalid pool type ${e}`),l=H1({inputs:{x:a},backend:o,attrs:{reductionIndices:0,keepDims:!1}}));let u=me({inputs:{x:l},backend:o,attrs:{shape:t.outShape}});return o.disposeData(a.dataId),o.disposeData(l.dataId),u}let n,i=[{type:"int32",data:[t.strideHeight,t.strideWidth]}];return t.filterHeight===1&&t.filterWidth===1?n=new ch(t):(e==="avg"?n=new ln(t,"avg"):(S.assert(e==="max",()=>`Invalid pool type ${e}`),n=new ln(t,"max")),i.push({type:"int32",data:[t.padInfo.top,t.padInfo.left]},{type:"int32",data:[t.dilationHeight,t.dilationWidth]},{type:"int32",data:[t.inHeight,t.inWidth]},{type:"int32",data:[t.effectiveFilterHeight,t.effectiveFilterWidth]})),o.runWebGPUProgram(n,[r],r.dtype,i)}function FK(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{filterSize:i,strides:s,pad:a,dimRoundingMode:l}=o,c=R.computePool2DInfo(n.shape,i,s,1,a,l);return ph(n,c,"avg",e)}var JT={kernelName:Ua,backendName:"webgpu",kernelFunc:FK};function OK(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{filterSize:i,strides:s,pad:a,dataFormat:l,dimRoundingMode:u}=o,c=[1,1,1],p=R.computePool3DInfo(n.shape,i,s,c,a,u,l),d=new Vi(p,"avg"),m=[{type:"int32",data:[p.strideDepth,p.strideHeight,p.strideWidth]},{type:"int32",data:[p.padInfo.front,p.padInfo.top,p.padInfo.left]},{type:"int32",data:[p.inDepth,p.inHeight,p.inWidth]},{type:"int32",data:[p.effectiveFilterDepth,p.effectiveFilterHeight,p.effectiveFilterWidth]}];return e.runWebGPUProgram(d,[n],n.dtype,m)}var eE={kernelName:Ga,backendName:"webgpu",kernelFunc:OK};var dh=class{constructor(t){this.variableNames=["dy"],this.uniforms=`strides : vec2<i32>, pads : vec2<i32>, dilations : vec2<i32>, filterDims : vec2<i32>,
       outHeight : i32, outWidth : i32, avgMultiplier : f32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t.inShape,this.dispatchLayout=te(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="avgPool2DBackprop"}getUserCode(){return`
      ${Q("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords[0];
        let d = coords[3];

        let dyRCCorner = vec2<i32>(coords.yz) - uniforms.pads;
        let dyRCorner = dyRCCorner.x;
        let dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var wR = 0; wR < uniforms.filterDims[0]; wR = wR + uniforms.dilations[0]) {
          let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[0]);

          if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
            continue;
          }
          let idyR = i32(dyR);

          for (var wC = 0; wC < uniforms.filterDims[1]; wC = wC + uniforms.dilations[1]) {
            let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[1]);

            if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
              continue;
            }
            let idyC = i32(dyC);

            let dyValue = getDy(batch, idyR, idyC, d);

            dotProd = dotProd + dyValue * uniforms.avgMultiplier;
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
    `}},mh=class{constructor(t){this.variableNames=["dy"],this.uniforms=`strides : vec3<i32>, pads : vec3<i32>, filterDims : vec3<i32>,
       outDepth : i32, outHeight : i32, outWidth : i32, avgMultiplier : f32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t.inShape,this.dispatchLayout=te(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="avgPool3DBackprop"}getUserCode(){return`
      ${Q("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords.x;
        let ch = coords.u;

        let dyCorner = vec3<i32>(coords.y, coords.z, coords.w) - uniforms.pads;
        let dyDCorner = dyCorner.x;
        let dyRCorner = dyCorner.y;
        let dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var wD = 0; wD < uniforms.filterDims[0]; wD++) {
          let dyD = f32(dyDCorner + wD) / f32(uniforms.strides[0]);

          if (dyD < 0.0 || dyD >= f32(uniforms.outDepth) || fract(dyD) > 0.0) {
            continue;
          }
          let idyD = i32(dyD);

          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {
            let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[1]);

            if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
              continue;
            }
            let idyR = i32(dyR);

            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {
              let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[2]);

              if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
                continue;
              }
              let idyC = i32(dyC);

              let dyValue = getDy(batch, idyD, idyR, idyC, ch);
              dotProd += dyValue * uniforms.avgMultiplier;
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
    `}};function LK(r){let{inputs:t,backend:e,attrs:o}=r,{dy:n,input:i}=t,s=i,{filterSize:a,strides:l,pad:u,dimRoundingMode:c}=o,p=R.computePool3DInfo(s.shape,a,l,1,u,c),d=new mh(p),m=1/(p.filterDepth*p.filterHeight*p.filterWidth),f=[{type:"int32",data:[p.strideDepth,p.strideHeight,p.strideWidth]},{type:"int32",data:[p.effectiveFilterDepth-1-p.padInfo.front,p.effectiveFilterHeight-1-p.padInfo.top,p.effectiveFilterWidth-1-p.padInfo.left]},{type:"int32",data:[p.effectiveFilterDepth,p.effectiveFilterHeight,p.effectiveFilterWidth]},{type:"int32",data:[p.outDepth]},{type:"int32",data:[p.outHeight]},{type:"int32",data:[p.outWidth]},{type:"float32",data:[m]}];return e.runWebGPUProgram(d,[n],s.dtype,f)}var tE={kernelName:Wd,backendName:"webgpu",kernelFunc:LK};function MK(r){let{inputs:t,backend:e,attrs:o}=r,{dy:n,input:i}=t,s=i;Np([n,i],"avgPoolGrad");let{filterSize:a,strides:l,pad:u}=o,c=R.computePool2DInfo(s.shape,a,l,1,u),p=new dh(c),d=1/(c.filterHeight*c.filterWidth),m=[{type:"int32",data:[c.strideHeight,c.strideWidth]},{type:"int32",data:[c.effectiveFilterHeight-1-c.padInfo.top,c.effectiveFilterWidth-1-c.padInfo.left]},{type:"int32",data:[c.dilationHeight,c.dilationWidth]},{type:"int32",data:[c.effectiveFilterHeight,c.effectiveFilterWidth]},{type:"int32",data:[c.outHeight]},{type:"int32",data:[c.outWidth]},{type:"float32",data:[d]}];return e.runWebGPUProgram(p,[n],s.dtype,m)}var rE={kernelName:Vd,backendName:"webgpu",kernelFunc:MK};function BK(r){let{inputs:t,backend:e,attrs:o}=r,{a:n,b:i}=t,{transposeA:s,transposeB:a}=o;return Gs({a:n,b:i,transposeA:s,transposeB:a,backend:e})}var oE={kernelName:Ha,backendName:"webgpu",kernelFunc:BK};var fh=class{constructor(t,e){this.variableNames=["source"],this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.rank=e.length,this.dispatchLayout=te(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.start=t,this.uniforms=`start : ${ft(t.length)}, `,this.shaderKey="slice"}getUserCode(){let t=ft(this.rank),e=VK(this.rank),o;return this.start.length===1?o=this.outputShape.map((i,s)=>"sourceLoc = uniforms.start + coords;"):o=this.outputShape.map((i,s)=>`sourceLoc.${q1[s]} = uniforms.start.${ko(s)} + coords.${q1[s]};`),`
      ${Q("index")} {
        if (index < uniforms.size) {
          var sourceLoc : ${t};
          let coords = getCoordsFromIndex(index);
          ${o.join(`
`)}
          setOutputAtIndex(index, getSource(${e}));
        }
      }
    `}},q1=["x","y","z","w","u","v"];function VK(r){if(r===1)return"sourceLoc";if(r<=6)return q1.slice(0,r).map(t=>`sourceLoc.${t}`).join(",");throw Error(`Slicing for rank ${r} is not yet supported`)}function Bo(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{begin:i,size:s}=o,[a,l]=Ut.parseSliceParams(n,i,s);if(Ut.assertParamsValid(n,a,l),e.shouldExecuteOnCPU([n])||n.dtype==="string"){let p=e.tensorMap.get(n.dataId),d=NT(p.values,a,l,n.shape,n.dtype);return e.makeTensorInfo(l,n.dtype,d)}if(S.sizeFromShape(l)===0)return e.makeTensorInfo(l,n.dtype,[]);let u=new fh(a,l),c=[{type:"int32",data:a}];return e.runWebGPUProgram(u,[n],n.dtype,c)}var nE={kernelName:ds,backendName:"webgpu",kernelFunc:Bo};var WK=r=>{let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{blockShape:i,crops:s}=o;S.assert(n.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGPU backend not implemented yet");let a=i.reduce((v,k)=>v*k),l=R.getReshaped(n.shape,i,a),u=R.getPermuted(l.length,i.length),c=R.getReshapedPermuted(n.shape,i,a),p=R.getSliceBeginCoords(s,i.length),d=R.getSliceSize(c,s,i.length),m=[],f=me({inputs:{x:n},backend:e,attrs:{shape:l}}),g=dr({inputs:{x:f},backend:e,attrs:{perm:u}}),x=me({inputs:{x:g},backend:e,attrs:{shape:c}}),y=Bo({inputs:{x},backend:e,attrs:{begin:p,size:d}});return m.push(f),m.push(g),m.push(x),m.forEach(v=>e.disposeData(v.dataId)),y},iE={kernelName:Ka,backendName:"webgpu",kernelFunc:WK};var zK=`
  fn bincount_write(index: i32, value: f32) {
    ${Qr("&result[index]","value","float32")}
  }
`,UK=`
  fn bincount_write(index: i32, value: f32) {
    atomicStore(&result[index], bitcast<i32>(value));
  }
`,pc=class{constructor(t,e,o=!1){this.outputShape=[],this.variableNames=["x"],this.uniforms="binCountSize : i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.hasWeights=!0,this.binaryOutput=!1,this.outputShape=t,this.rank=t.length,this.dispatchLayout=te(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize),this.binaryOutput=o,o&&(this.atomic=!1),this.hasWeights=e,this.hasWeights&&this.variableNames.push("w"),this.shaderKey=`bincount_${this.hasWeights}_${this.binaryOutput}_${this.rank}`}getUserCode(){return`
    ${this.binaryOutput?UK:zK}
  ${Q("index")} {
    ${this.rank===1?`if (index < uniforms.xShape) {
      let indexVal = i32(getX(index));
      if (indexVal < uniforms.binCountSize) {
        let value = ${this.binaryOutput?1:this.hasWeights?"getW(index)":"1."};
        bincount_write(indexVal, value);
      }
    }`:`let coord = getCoordsFromIndex(index);
    if (coordsInBounds2D(coord, uniforms.xShape)) {
      let indexVal = i32(getX(coord[0], coord[1]));
      if (indexVal < uniforms.binCountSize) {
        let value = ${this.binaryOutput?1:this.hasWeights?"getW(coord[0], coord[1])":"1."};
        bincount_write(coord.x * uniforms.binCountSize + indexVal, value);
      }
    }`}
  }
  `}};function GK(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,weights:i}=t,{size:s}=o,a=S.sizeFromShape(n.shape),u=S.sizeFromShape(i.shape)>0,c=[s],p=i.dtype,d=St({backend:e,attrs:{shape:c,value:0,dtype:p}}),m=new pc([a],u),f=[{type:"int32",data:[s]}],g=u?[n,i]:[n];return e.runWebGPUProgram(m,g,p,f,d)}var sE={kernelName:qa,backendName:"webgpu",kernelFunc:GK};var hh=class{constructor(t){this.outputShape=[],this.variableNames=["s0","s1"],this.uniforms="s0Size : i32, s1Size : i32, ",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[t],this.dispatchLayout=te(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="broadcastArgs"}getUserCode(){return`
  ${Q("index")} {
    if (index < uniforms.size) {
      var s0 = 1.0;
      var s1 = 1.0;
      let indexS0 = index - uniforms.size + uniforms.s0Size;
      let indexS1 = index - uniforms.size + uniforms.s1Size;
      if (indexS0 >= 0) {
        s0 = getS0(indexS0);
      }
      if (indexS1 >= 0) {
        s1 = getS1(indexS1);
      }

      if (s0 == 1.0) {
        setOutputAtIndex(index, s1);
      } else if (s1 == 1.0) {
        setOutputAtIndex(index, s0);
      } else if (s0 != s1) {
        setOutputAtIndex(index, uniforms.NAN);
      } else {
        setOutputAtIndex(index, s0);
      }
    }
  }
  `}};function HK(r){let{inputs:t,backend:e}=r,{s0:o,s1:n}=t;if(e.shouldExecuteOnCPU([o,n])){let c=e.tensorMap.get(o.dataId),p=e.tensorMap.get(n.dataId),d=c.values,m=p.values,f=R.assertAndGetBroadcastShape(Array.from(d),Array.from(m));return e.makeTensorInfo([f.length],"int32",Int32Array.from(f))}let i=S.sizeFromShape(o.shape),s=S.sizeFromShape(n.shape),a=Math.max(i,s),l=new hh(a),u=[{type:"int32",data:[i]},{type:"int32",data:[s]}];return e.runWebGPUProgram(l,[o,n],"int32",u)}var aE={kernelName:Xa,backendName:"webgpu",kernelFunc:HK};var j1=Ze({opType:Se.NOT_EQUAL,dtype:"bool",cpuKernelImpl:CT}),lE={kernelName:di,backendName:"webgpu",kernelFunc:j1};function On(r){let{inputs:t,backend:e}=r,{input:o}=t,n=e.tensorMap.get(o.dataId);return $t({inputs:{x:n.complexTensorInfos.real},backend:e})}var uE={kernelName:ps,backendName:"webgpu",kernelFunc:On};function cE(r,t){let e=new Jr(r.shape,ne.TO_INT),o=t.runWebGPUProgram(e,[r],"int32");return{dataId:o.dataId,shape:o.shape,dtype:o.dtype}}function X1(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{dtype:i}=o;if(i==="complex64"){if(n.dtype==="complex64")return $t({inputs:{x:n},backend:e});let s=yr(n.shape),a=X1({inputs:{x:n},backend:e,attrs:{dtype:"float32"}}),l=mo({inputs:{real:a,imag:s},backend:e});return s.dispose(),e.disposeData(a.dataId),l}if(n.dtype==="complex64"){let s=On({inputs:{input:n},backend:e}),a=X1({inputs:{x:s},backend:e,attrs:{dtype:i}});return e.disposeData(s.dataId),a}if(!S.hasEncodingLoss(n.dtype,i)){let s=$t({inputs:{x:n},backend:e});return{dataId:s.dataId,shape:s.shape,dtype:i}}if(e.shouldExecuteOnCPU([n])){let s=e.tensorMap.get(n.dataId).values,[a,l,u]=oT(s,n.shape,n.dtype,i);return e.makeTensorInfo(a,l,u)}if(i==="int32")return cE(n,e);if(i==="bool"){let s=e.makeTensorInfo([],"bool",S.getTypedArrayFromDType("bool",1)),l=j1({inputs:{a:n,b:s},backend:e});return e.disposeData(s.dataId),l}throw new Error(`Error in Cast: failed to cast ${n.dtype} to ${i}`)}var pE={kernelName:bn,backendName:"webgpu",kernelFunc:X1};var KK=we({opType:ne.CEIL,cpuKernelImpl:nT}),dE={kernelName:Zn,backendName:"webgpu",kernelFunc:KK};var gh=class{constructor(t){this.variableNames=["A"],this.uniforms="minVal : f32, maxVal : f32,",this.workPerThread=4,this.workgroupSize=[64,1,1],this.outputComponent=4,this.size=!0,this.outputShape=t,this.dispatchLayout=te(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.shaderKey="clipVec4"}getUserCode(){return`
      ${Q("index")} {
        if(index < uniforms.size) {
          let value = getAByOutputIndex(index);
          var clampedValue = clamp(
              value, vec4<f32>(uniforms.minVal), vec4<f32>(uniforms.maxVal));
          clampedValue = select(clampedValue, value, isnanVec4(value));
          setOutputAtIndex(index, clampedValue);
        }
      }
    `}};var xh=class{constructor(t){this.variableNames=["A"],this.uniforms="minVal : f32, maxVal : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=te(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="clip"}getUserCode(){return`
      ${Q("index")} {
        if(index < uniforms.size) {
          let value = getAByOutputIndex(index);
          if (isnan(value)) {
            setOutputAtIndex(index, value);
            return;
          }
          setOutputAtIndex(index, clamp(value, uniforms.minVal, uniforms.maxVal));
        }
      }
    `}};function qK(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{clipValueMin:i,clipValueMax:s}=o,a,l=[{type:"float32",data:[i]},{type:"float32",data:[s]}];return S.sizeFromShape(n.shape)%4===0?a=new gh(n.shape):a=new xh(n.shape),e.runWebGPUProgram(a,[n],n.dtype,l)}var mE={kernelName:Ya,backendName:"webgpu",kernelFunc:qK};var yh=class{constructor(t){this.outputShape=[],this.variableNames=["real","imag"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=te(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="complexAbs"}getUserCode(){return`
    ${Q("index")} {
      if (index < uniforms.size) {
        let re = abs(getRealByOutputIndex(index));
        let im = abs(getImagByOutputIndex(index));
        let mx = max(re, im);

        // The length function in wgsl may be not underflow-safe on some GPUs.
        // So the safe solution is to ensure underflow-safety in all cases.
        setOutputAtIndex(index, select(mx * length(vec2<f32>(1, min(re, im)/mx)), 0.0, mx == 0.0));
      }
    }
  `}};function fE(r,t){return{dataId:t.dataId,dtype:t.dtype,shape:r.shape}}function jK(r){let{inputs:t,backend:e}=r,{x:o}=t,n=e.tensorMap.get(o.dataId),i=new yh(o.shape),s=[fE(o,n.complexTensorInfos.real),fE(o,n.complexTensorInfos.imag)];return e.runWebGPUProgram(i,s,s[0].dtype)}var hE={kernelName:Qa,backendName:"webgpu",kernelFunc:jK};var bh=class{constructor(t){this.uniforms="",this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=R.computeOutShape(t,1),this.variableNames=t.map((e,o)=>`T${o}`),this.dispatchLayout=te(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.offsetLength=t.length-1;for(let e=0;e<this.offsetLength;e++)this.uniforms+=`offset${e} : i32,`;this.shaderKey="concat"}getUserCode(){let t=[];if(this.offsetLength>0){t.push("if (yC < uniforms.offset0){ setOutputAtCoords(coords.x, coords.y, getT0(yR, yC)); }");for(let i=1;i<this.offsetLength;i++)t.push(`else if (yC < uniforms.offset${[i]}){ setOutputAtCoords(coords.x, coords.y, getT${i}(yR, yC - uniforms.offset${i-1})); }`);let o=this.offsetLength,n=this.offsetLength-1;t.push(`else { setOutputAtCoords(coords.x, coords.y, getT${o}(yR, yC - uniforms.offset${n})); }`)}else t.push("setOutputAtCoords(coords.x, coords.y, getT0(yR, yC));");return`
      ${Q("index")} {
        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if(flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndex);
            let yR = coords.x;
            let yC = coords.y;

            ${t.join(`
        `)}
          }
        }
      }
    `}};function Hs(r){let{inputs:t,backend:e}=r,{input:o}=t,n=e.tensorMap.get(o.dataId);return $t({inputs:{x:n.complexTensorInfos.imag},backend:e})}var gE={kernelName:El,backendName:"webgpu",kernelFunc:Hs};function dc(r,t,e){let o=r[0].dtype;if(o==="complex64"){let f=r.map(k=>On({inputs:{input:k},backend:e})),g=r.map(k=>Hs({inputs:{input:k},backend:e})),x=dc(f,t,e),y=dc(g,t,e),v=mo({inputs:{real:x,imag:y},backend:e});return f.forEach(k=>e.disposeData(k.dataId)),g.forEach(k=>e.disposeData(k.dataId)),e.disposeData(x.dataId),e.disposeData(y.dataId),v}let n=e.shouldExecuteOnCPU(r);if(o==="string"&&(n=!0),n){let f=r.map(F=>{let z=[-1,S.sizeFromShape(F.shape.slice(t))];return me({inputs:{x:F},backend:e,attrs:{shape:z}})}),g=f.map(F=>({vals:e.readSync(F.dataId),shape:F.shape})),x=R.computeOutShape(f.map(F=>F.shape),1),y=f[0].shape[0]===1,v=iT(g,x,o,y),k=R.computeOutShape(r.map(F=>F.shape),t),N=e.makeTensorInfo(k,o,v);return f.forEach(F=>e.disposeData(F.dataId)),N}let i=e.device.limits.maxStorageBuffersPerShaderStage-1;if(r.length>i){let f=[];for(let x=0;x<r.length;x+=i){let y=r.slice(x,x+i);f.push(dc(y,t,e))}let g=dc(f,t,e);for(let x of f)e.disposeData(x.dataId);return g}let{tensors2D:s,outShape:a}=XK(r,t,e),l=s.map(f=>f.shape),u=new bh(l),c=[],p=new Array(l.length-1);if(p.length>0){p[0]=l[0][1],c.push({type:"int32",data:[p[0]]});for(let f=1;f<p.length;f++)p[f]=p[f-1]+l[f][1],c.push({type:"int32",data:[p[f]]})}let d=e.runWebGPUProgram(u,s,s[0].dtype,c);s.forEach(f=>e.disposeData(f.dataId));let m=me({inputs:{x:d},backend:e,attrs:{shape:a}});return e.disposeData(d.dataId),m}function XK(r,t,e){let o=R.computeOutShape(r.map(i=>i.shape),t);return{tensors2D:r.map(i=>me({inputs:{x:i},backend:e,attrs:{shape:[S.sizeFromShape(i.shape.slice(0,t)),S.sizeFromShape(i.shape.slice(t))]}})),outShape:o}}function Y1(r){let{inputs:t,backend:e,attrs:o}=r,{axis:n}=o,i=S.parseAxisParam(n,t[0].shape)[0],s=t.map(u=>u.shape);R.assertParamsConsistent(s,i);let a=R.computeOutShape(t.map(u=>u.shape),i);if(S.sizeFromShape(a)===0)return e.makeTensorInfo(a,t[0].dtype,[]);let l=t.filter(u=>S.sizeFromShape(u.shape)>0);return l.length===1?$t({inputs:{x:l[0]},backend:e}):dc(l,i,e)}var xE={kernelName:Za,backendName:"webgpu",kernelFunc:Y1};function YK(r,t,e,o,n=!1,i=null,s=!1,a=4,l=4,u=4){let c=K=>{switch(K){case 1:return"resData = f32(x[xIndex]);";case 3:return"resData = vec3<f32>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);";case 4:return"resData = vec4<f32>(x[xIndex / 4]);";default:throw new Error(`innerElementSize ${K} is not supported.`)}},p=K=>{switch(K){case 1:return"return f32(W[row * uniforms.wShape[3] + col]);";case 4:return"return vec4<f32>(W[(row * uniforms.wShape[3] + col) / 4]);";default:throw new Error(`innerElementSize ${K} is not supported.`)}},d=r?`
      let coord = vec4<i32>(batch, xRow, xCol, xCh);
      `:`
      let coord = vec4<i32>(batch, xCh, xRow, xCol);
      `,m=r?`
      let coords = vec4<i32>(
        batch,
        row / outWidth,
        row % outWidth,
        col);
      `:`
      let coords = vec4<i32>(
        batch,
        row,
        col / outWidth,
        col % outWidth);
      `,f=r?"uniforms.xShape[1]":"uniforms.xShape[2]",g=r?"uniforms.xShape[2]":"uniforms.xShape[3]",x=r?"row":"col",y=r?"col":"row",v=`
      let inChannels = uniforms.wShape[2];
      let outWidth = ${r?"uniforms.outShape[2]":"uniforms.outShape[3]"};
      let outRow = ${x} / outWidth;
      let outCol = ${x} % outWidth;

      let WRow = ${y} / (uniforms.filterDims[1] * inChannels);
      let WCol = ${y} / inChannels % uniforms.filterDims[1];
      let xRow = outRow * uniforms.strides[0] + uniforms.dilations[0] * WRow - uniforms.pads[0];
      let xCol = outCol * uniforms.strides[1] + uniforms.dilations[1] * WCol - uniforms.pads[1];
      let xCh = ${y} % inChannels;
      var resData = ${ze(a)}(0.0);
      // The bounds checking is always needed since we use it to pad zero for
      // the 'same' padding type.
      if (xRow >= 0 && xRow < ${f} && xCol >= 0 && xCol < ${g}) {
        ${d}
        let xIndex = getIndexFromCoords4D(coord, uniforms.xShape);
        ${c(a)}
      }
      return resData;`,k=r?t&&o?`
      ${v}`:`
      if (row < uniforms.dimAOuter && col < uniforms.dimInner) {
        ${v}
      }
      return ${ze(a)}(0.0);`:o&&e?`
      ${v}`:`
      if (row < uniforms.dimInner && col < uniforms.dimBOuter) {
        ${v}
      }
      return ${ze(a)}(0.0);`,N=`${p(l)}`,F=ze(u),M=r?ze(a):ze(l),z=r?ze(l):ze(a);return`
      ${rr(i,s,u===4,4)}
      fn mm_readA(batch: i32, row : i32, col : i32) -> ${M} {
        ${r?k:N}
      }

      fn mm_readB(batch: i32, row : i32, col : i32) -> ${z} {
        ${r?N:k}
      }

      fn mm_write(batch: i32, row : i32, col : i32, valueIn : ${F}) {
        if (row < uniforms.dimAOuter && col < uniforms.dimBOuter)
        {
        var value = valueIn;
        let outWidth = ${r?"uniforms.outShape[2]":"uniforms.outShape[3]"};
        ${m}
        ${Zr(n,i)}
        setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
        }
      }`}var vh=class{constructor(t,e,o,n,i=!1,s=null,a=!1,l=!1){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, strides : vec2<i32>, dilations : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.outputShape=t.outShape,this.isChannelsLast=t.dataFormat==="channelsLast",this.isVec4=((t.inChannels%4===0||t.inChannels%3===0)&&this.isChannelsLast||t.outWidth%4===0&&!this.isChannelsLast)&&t.outChannels%4===0,this.dispatchLayout=this.isChannelsLast?{x:[3],y:[1,2],z:[0]}:{x:[2,3],y:[1],z:[0]},this.workgroupSize=Ip(this.dispatchLayout,this.outputShape,this.isVec4),this.elementsPerThread=Tp(this.dispatchLayout,this.outputShape,this.isVec4),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize,this.elementsPerThread),this.isVec4?(this.outputComponent=4,this.isChannelsLast&&t.inChannels%4!==0?(this.innerElementSize=3,this.variableComponents=[1,4]):(this.innerElementSize=4,this.variableComponents=[4,4]),i&&(this.variableNames.push("bias"),this.variableComponents.push(4)),a&&(this.variableNames.push("preluActivationWeights"),this.variableComponents.push(4))):(this.innerElementSize=this.elementsPerThread[0],i&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights")),this.sequentialAccessByThreads=l,this.addBias=i,this.activation=s,this.hasPreluActivationWeights=a,this.tileAOuter=this.workgroupSize[1]*this.elementsPerThread[1],this.tileBOuter=this.workgroupSize[0]*this.elementsPerThread[0],this.tileInner=Math.max(this.workgroupSize[0]*this.innerElementSize,this.workgroupSize[1]),this.fitAOuter=e%this.tileAOuter===0,this.fitBOuter=o%this.tileBOuter===0,this.fitInner=n%this.tileInner===0,this.shaderKey=`conv2DMM_${this.elementsPerThread}_${this.activation}}_${this.fitAOuter}_${this.fitBOuter}_${this.fitInner}_${this.isVec4}_${this.innerElementSize}_${this.isChannelsLast}_${this.sequentialAccessByThreads}`}getUserCode(){let t=this.isVec4?zs(this.elementsPerThread,this.workgroupSize,!this.isChannelsLast,this.tileInner):Us(this.elementsPerThread,this.workgroupSize,!this.isChannelsLast,this.tileInner,!1,null,this.sequentialAccessByThreads),e=this.isVec4?[this.innerElementSize,4,4]:[1,1,1];return`
    ${YK(this.isChannelsLast,this.fitAOuter,this.fitBOuter,this.fitInner,this.addBias,this.activation,this.hasPreluActivationWeights,e[0],e[1],e[2])}
    ${t}
  `}};var Sh=class{constructor(t,e=!1,o=null,n=!1){this.variableNames=["x","W"],this.uniforms="filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>,",this.workgroupSize=[4,4,8],this.outputShape=t.outShape,this.isChannelsLast=t.dataFormat==="channelsLast",this.dispatchLayout=this.isChannelsLast?{x:[2],y:[1],z:[0,3]}:{x:[3],y:[2],z:[0,1]},this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize),this.addBias=e,this.activation=o,this.hasPreluActivationWeights=n,e&&this.variableNames.push("bias"),n&&this.variableNames.push("preluActivationWeights"),this.shaderKey=`conv2dnaive_${this.activation}_${this.isChannelsLast}`}getUserCode(){return`
       ${rr(this.activation,this.hasPreluActivationWeights,!1,4)}
       fn readInp(batch : i32, row : i32, col : i32, chan : i32) -> f32{
         let coords = vec4<i32>(batch, row, col, chan);
         if (coordsInBounds4D(coords, uniforms.xShape)) {
           return  getX(batch, row, col, chan);
         } else {
          return 0.0;
         }
       }
       fn readFilt(row : i32, col : i32, xChannel : i32, outChannel : i32) -> f32{
         let coords = vec4<i32>(row, col, xChannel, outChannel);
         if(coordsInBounds4D(coords, uniforms.wShape)) {
           return getW(row, col, xChannel, outChannel);
          } else {
            return 0.0;
          }
       }
       fn writeResult(batch : i32, row : i32, col : i32, chan : i32, valueIn : f32) {
         let coords = ${this.isChannelsLast?"vec4<i32>(batch, row, col, chan);":"vec4<i32>(batch, chan, row, col);"}
         if (coordsInBounds4D(coords, uniforms.outShape)) {
           var value = valueIn;
           ${Zr(this.addBias,this.activation)}
           setOutputAtCoords(coords.x, coords.y, coords.z, coords.w, value);
         }
       }
       ${Q("index")} {
         let coords = getOutputCoords();
         let batch = coords[0];
         let outChannel = ${this.isChannelsLast?"coords[3];":"coords[1];"}
         let outRow = ${this.isChannelsLast?"coords[1];":"coords[2];"}
         let outCol = ${this.isChannelsLast?"coords[2];":"coords[3];"}
         var acc : f32 = 0.0;
         for (var row = 0; row < uniforms.filterDims[0]; row = row + 1) {
           for (var col = 0; col < uniforms.filterDims[1]; col = col + 1) {
             let xRow = outRow * uniforms.strides[0] + uniforms.dilations[0] * row - uniforms.pads[0];
             let xCol = outCol * uniforms.strides[1] + uniforms.dilations[1] * col - uniforms.pads[1];
             for (var xChannel = 0; xChannel < ${this.isChannelsLast?"uniforms.xShape[3];":"uniforms.xShape[1];"} xChannel = xChannel + 1) {
               ${this.isChannelsLast?"let v = readInp(batch, xRow, xCol, xChannel);":"let v = readInp(batch, xChannel, xRow, xCol);"}
               let f = readFilt(row, col, xChannel, outChannel);
               acc = acc + v * f;
             }
           }
         }
         writeResult(batch, outRow, outCol, outChannel, acc);
       }
     `}};var wh=class{constructor(t,e){this.variableNames=["x"],this.uniforms=`pads : vec2<i32>, strides : vec2<i32>, dilations : vec2<i32>, outWidth : i32, itemsPerBlockRow : i32,
       inChannels : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=te(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize),this.isChannelsLast=e,this.shaderKey=`im2col_${this.isChannelsLast}`}getUserCode(){let t=this.isChannelsLast?1:2,e=this.isChannelsLast?2:3,o=this.isChannelsLast?"coords[1]":"coords[2]",n=this.isChannelsLast?"coords[2]":"coords[1]",i=this.isChannelsLast?"getX(batch, xRow, xCol, ch)":"getX(batch, ch, xRow, xCol)";return`
    ${Q("index")} {
      let coords = getCoordsFromIndex(index);
      if(index < uniforms.size) {
        let batch = coords[0];
        let row = ${o};
        let col = ${n};
        let offsetY = (row / uniforms.outWidth) * uniforms.strides[0] - uniforms.pads[0];
        let xRow = offsetY + uniforms.dilations[0] * (col / uniforms.itemsPerBlockRow);
        var value = 0.0;
        if(xRow < uniforms.xShape[${t}] && xRow >= 0) {
          let offsetX = (row % uniforms.outWidth) * uniforms.strides[1] -
              uniforms.pads[1];
          let xCol = offsetX + uniforms.dilations[1] * ((col %
              uniforms.itemsPerBlockRow) / uniforms.inChannels);
          let ch = col % uniforms.inChannels;
          if(xCol < uniforms.xShape[${e}] && xCol >= 0) {
            value = ${i};
          }
        }
        setOutputAtIndex(index, value);
      }
    }
   `}};function Ch(r,t){let e=r.length;return e>=3?t?[...r.slice(0,-3),r[e-3]*r[e-2],r[e-1]]:[...r.slice(0,-3),r[e-3],r[e-2]*r[e-1]]:!t&&e===1&&r[0]>1?[r[0],1]:null}function QK({x:r,filter:t,convInfo:e,backend:o,bias:n=null,preluActivationWeights:i=null,leakyreluAlpha:s=0,activation:a=null}){let l=e.dataFormat==="channelsLast",u=!l,c=!1,p=l&&e.filterHeight===e.inHeight&&e.filterWidth===e.inWidth&&e.padInfo.type==="VALID",d=[],m,f;if(p){let y=e.inHeight*e.inWidth*e.inChannels;m=me({inputs:{x:r},backend:o,attrs:{shape:[1,e.batchSize,y]}}),f=me({inputs:{x:t},backend:o,attrs:{shape:[1,y,e.outChannels]}})}else m=me({inputs:{x:r},backend:o,attrs:{shape:l?[e.batchSize,e.inHeight*e.inWidth,e.inChannels]:[e.batchSize,e.inChannels,e.inHeight*e.inWidth]}}),f=me({inputs:{x:t},backend:o,attrs:{shape:[1,e.inChannels,e.outChannels]}});if(d.push(m),d.push(f),i!=null){let y=Ch(i.shape,l);y!=null&&(i=me({inputs:{x:i},backend:o,attrs:{shape:y}}),d.push(i))}if(n!=null){let y=Ch(n.shape,l);y!=null&&(n=me({inputs:{x:n},backend:o,attrs:{shape:y}}),d.push(n))}let g=Gs({a:l?m:f,b:l?f:m,transposeA:u,transposeB:c,backend:o,bias:n,activation:a,preluActivationWeights:i,leakyreluAlpha:s}),x=me({inputs:{x:g},backend:o,attrs:{shape:e.outShape}});d.push(g);for(let y of d)o.disposeData(y.dataId);return x}function ZK({x:r,filter:t,convInfo:e,backend:o,bias:n=null,preluActivationWeights:i=null,leakyreluAlpha:s=0,activation:a=null}){let{filterWidth:l,filterHeight:u,inChannels:c,strideWidth:p,strideHeight:d,padInfo:m,outWidth:f,outHeight:g,dilationWidth:x,dilationHeight:y,dataFormat:v}=e,k=v==="channelsLast",N=l*u*c,F=g*f,M=k?[e.batchSize,F,N]:[e.batchSize,N,F],z=new wh(M,k),H=[{type:"int32",data:[m.top,m.left]},{type:"int32",data:[d,p]},{type:"int32",data:[y,x]},{type:"int32",data:[f]},{type:"int32",data:[c*l]},{type:"int32",data:[c]}],K=o.runWebGPUProgram(z,[r],r.dtype,H),j=[];j.push(K);let J=me({inputs:{x:t},backend:o,attrs:{shape:[1,N,-1]}});if(j.push(J),i!=null){let Ie=Ch(i.shape,k);Ie!=null&&(i=me({inputs:{x:i},backend:o,attrs:{shape:Ie}}),j.push(i))}if(n!=null){let Ie=Ch(n.shape,k);Ie!=null&&(n=me({inputs:{x:n},backend:o,attrs:{shape:Ie}}),j.push(n))}let xe=Gs({a:k?K:J,b:k?J:K,transposeA:!k,transposeB:!1,backend:o,bias:n,activation:a,preluActivationWeights:i,leakyreluAlpha:s}),be=me({inputs:{x:xe},backend:o,attrs:{shape:e.outShape}});j.push(xe);for(let Ie of j)o.disposeData(Ie.dataId);return be}function _h({x:r,filter:t,convInfo:e,backend:o,bias:n=null,preluActivationWeights:i=null,leakyreluAlpha:s=0,activation:a=null}){let l=n!=null,u=i!=null,c=e.dataFormat==="channelsLast",p=c&&e.filterHeight===e.inHeight&&e.filterWidth===e.inWidth&&e.padInfo.type==="VALID",d=G().getBool("WEBGPU_USE_NAIVE_CONV2D_DEBUG");if(!d&&(p||e.filterHeight===1&&e.filterWidth===1&&e.dilationHeight===1&&e.dilationWidth===1&&e.strideHeight===1&&e.strideWidth===1&&(e.padInfo.type==="SAME"||e.padInfo.type==="VALID")))return QK({x:r,filter:t,convInfo:e,backend:o,bias:n,activation:a,preluActivationWeights:i,leakyreluAlpha:s});let m=G().getNumber("WEBGPU_THRESHOLD_TO_INCREASE_WORKGROUPS_FOR_MATMUL"),f=m>-1?m:o.thresholdToIncreaseWorkgroups,g=e.batchSize*Math.ceil(e.outHeight*e.outWidth/32)*Math.ceil(e.outChannels/32);if(G().getBool("WEBGPU_CONV_SEPARATE_IM2COL_SHADER")||g<=f)return ZK({x:r,filter:t,convInfo:e,backend:o,bias:n,preluActivationWeights:i,leakyreluAlpha:s,activation:a});let x,y=[e.padInfo.top,e.padInfo.left],v=[{type:"int32",data:[e.filterHeight,e.filterWidth]},{type:"int32",data:[...y]},{type:"int32",data:[e.strideHeight,e.strideWidth]},{type:"int32",data:[e.dilationHeight,e.dilationWidth]}];if(d)x=new Sh(e,l,a,u);else{let M=c?e.outHeight*e.outWidth:e.outChannels,z=c?e.outChannels:e.outHeight*e.outWidth,H=e.filterHeight*e.filterWidth*e.inChannels;v.push({type:"int32",data:[M]},{type:"int32",data:[z]},{type:"int32",data:[H]});let K=o.adapterInfo.isIntel();x=new vh(e,M,z,H,l,a,u,K)}let k=[],N=[r,t];l&&(!c&&n.shape.length===1&&(n=me({inputs:{x:n},backend:o,attrs:{shape:[n.shape[0],1,1]}}),k.push(n)),N.push(n)),u&&(!c&&i.shape.length===1&&(i=me({inputs:{x:i},backend:o,attrs:{shape:[i.shape[0],1,1]}}),k.push(i)),N.push(i)),a==="leakyrelu"&&(v.push({type:"float32",data:[s]}),x.uniforms+=" alpha : f32,");let F=o.runWebGPUProgram(x,N,r.dtype,v);for(let M of k)o.disposeData(M.dataId);return F}function JK(r){let{inputs:t,attrs:e,backend:o}=r,{x:n,filter:i}=t,{strides:s,pad:a,dataFormat:l,dilations:u,dimRoundingMode:c}=e,p=R.convertConv2DDataFormat(l),d=R.computeConv2DInfo(n.shape,i.shape,s,u,a,c,!1,p);return _h({x:n,filter:i,convInfo:d,backend:o})}var yE={kernelName:Ja,backendName:"webgpu",kernelFunc:JK};var kh=class{constructor(t){this.variableNames=["dy","W"],this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, strides : vec2<i32>, outBackprop : vec4<i32>,",this.workgroupSize=[64,1,1],this.size=!1,this.isVec4=!1,this.workPerThread=1,this.outputShape=t.inShape,this.isChannelsLast=t.dataFormat==="channelsLast",this.isVec4=this.isChannelsLast&&t.outChannels%4===0&&t.inChannels%4===0,this.isVec4?(this.workPerThread=2,this.outputComponent=4,this.workgroupSize=[4,4,4],this.dispatchLayout={x:[3],y:[2],z:[0,1]},this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize,[4,this.workPerThread,1])):(this.size=!0,this.workPerThread=1,this.workgroupSize=[64,1,1],this.dispatchLayout=te(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize)),this.shaderKey=`conv2DDerInput_${this.isChannelsLast}_${this.isVec4}_${this.workPerThread}`}getUserCode(){let t=this.isChannelsLast?1:2,e=this.isChannelsLast?2:3,o=this.isChannelsLast?3:1,n=`
    ${Q()} {
      let batch = i32(globalId.z) / uniforms.outShape[1];
      let r = i32(globalId.z) % uniforms.outShape[1];
      let c = i32(globalId.y) * ${this.workPerThread};
      let d1 = i32(globalId.x) * 4;

      let dyCorner = vec2<i32>(r, c) - uniforms.pads;

      // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
      // ? = to be determined. : = across all values in that axis.
      var dotProd: array<vec4<f32>, ${this.workPerThread}>;
      for (var i = 0; i < ${this.workPerThread}; i++) {
        dotProd[i] = vec4<f32>(0.0);
      }
      for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + 1) {
        let dyR = f32(dyCorner.x + wR) / f32(uniforms.strides.x);
        let wRPerm = uniforms.filterDims.x - 1 - wR;
        if (dyR < 0.0 || dyR >= f32(uniforms.outBackprop[1]) ||
            fract(dyR) > 0.0) {
          continue;
        }
        let idyR = i32(dyR);

        for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + 1) {
          let dyC = f32(dyCorner.y + wC) / f32(uniforms.strides.y);
          let dyC2 = f32(dyCorner.y + 1 + wC) / f32(uniforms.strides.y);
          let wCPerm = uniforms.filterDims.y - 1 - wC;
          var bDyCVal = true;
          var bDyCVal2 = true;
          if (dyC < 0.0 || dyC >= f32(uniforms.outBackprop[2]) ||
              fract(dyC) > 0.0) {
            bDyCVal = false;
          }
          if (dyC2 < 0.0 || dyC2 >= f32(uniforms.outBackprop[2]) ||
              fract(dyC2) > 0.0) {
            bDyCVal2 = false;
          }

          let idyC = i32(dyC);
          let idyC2 = i32(dyC2);
          if (bDyCVal && bDyCVal2) {
            let d2Length = uniforms.outBackprop[3];
            for (var d2 = 0; d2 < d2Length; d2 = d2 + 4) {
              let wValue0 = getW(wRPerm, wCPerm, d1, d2);
              let wValue1 = getW(wRPerm, wCPerm, d1 + 1, d2);
              let wValue2 = getW(wRPerm, wCPerm, d1 + 2, d2);
              let wValue3 = getW(wRPerm, wCPerm, d1 + 3, d2);
              var xValue =  getDy(batch, idyR, idyC, d2);
              let tmpval = vec4<f32>(dot(xValue, wValue0),
                                     dot(xValue, wValue1),
                                     dot(xValue, wValue2),
                                     dot(xValue, wValue3));
              dotProd[0] = dotProd[0] + tmpval;
              xValue = getDy(batch, idyR, idyC2, d2);
              dotProd[1] = dotProd[1] + vec4<f32>(dot(xValue, wValue0),
                                                  dot(xValue, wValue1),
                                                  dot(xValue, wValue2),
                                                  dot(xValue, wValue3));
            }
          } else if (bDyCVal) {
            let d2Length = uniforms.outBackprop[3];
            for (var d2 = 0; d2 < d2Length; d2 = d2 + 4) {
              let wValue0 = getW(wRPerm, wCPerm, d1, d2);
              let wValue1 = getW(wRPerm, wCPerm, d1 + 1, d2);
              let wValue2 = getW(wRPerm, wCPerm, d1 + 2, d2);
              let wValue3 = getW(wRPerm, wCPerm, d1 + 3, d2);
              var xValue =  getDy(batch, idyR, idyC, d2);
              let tmpval = vec4<f32>(dot(xValue, wValue0),
                                     dot(xValue, wValue1),
                                     dot(xValue, wValue2),
                                     dot(xValue, wValue3));
              dotProd[0] = dotProd[0] + tmpval;
            }
          } else if (bDyCVal2) {
            let d2Length = uniforms.outBackprop[3];
            for (var d2 = 0; d2 < d2Length; d2 = d2 + 4) {
              let wValue0 = getW(wRPerm, wCPerm, d1, d2);
              let wValue1 = getW(wRPerm, wCPerm, d1 + 1, d2);
              let wValue2 = getW(wRPerm, wCPerm, d1 + 2, d2);
              let wValue3 = getW(wRPerm, wCPerm, d1 + 3, d2);
              var xValue =  getDy(batch, idyR, idyC2, d2);
              let tmpval = vec4<f32>(dot(xValue, wValue0),
                                     dot(xValue, wValue1),
                                     dot(xValue, wValue2),
                                     dot(xValue, wValue3));
              dotProd[1] = dotProd[1] + tmpval;
            }
          }
        }
      }

      for (var i = 0; i < ${this.workPerThread}; i = i + 1) {
        let coords = vec4<i32>(batch, r, c + i, d1);
        if (coordsInBounds4D(coords, uniforms.outShape)) {
          setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], dotProd[i]);
        }
      }
    }
    `;return this.isVec4?`
    ${n}
    `:`
    ${Q("index")} {
      if(index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords[0];
        let d1 = coords[${o}];

        let dyCorner = vec2<i32>(coords[${t}], coords[${e}]) - uniforms.pads;
        let dyRCorner = dyCorner.x;
        let dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + 1) {
          let dyR = (f32(dyRCorner) + f32(wR)) / f32(uniforms.strides.x);
          let wRPerm = uniforms.filterDims.x - 1 - wR;
          if (dyR < 0.0 || dyR >= f32(uniforms.outBackprop[1]) || fract(dyR) > 0.0 ||
              wRPerm < 0) {
            continue;
          }
          let idyR = i32(dyR);

          for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + 1) {
            let dyC = (f32(dyCCorner) + f32(wC)) / f32(uniforms.strides.y);
            let wCPerm = uniforms.filterDims.y - 1 - wC;
            if (dyC < 0.0 || dyC >= f32(uniforms.outBackprop[2]) ||
                fract(dyC) > 0.0 || wCPerm < 0) {
              continue;
            }
            let idyC = i32(dyC);

            for (var d2 = 0; d2 < uniforms.outBackprop[3]; d2 = d2 + 1) {
              let xValue = ${this.isChannelsLast?"getDy(batch, idyR, idyC, d2)":"getDy(batch, d2, idyR, idyC)"};
              let wValue = getW(wRPerm, wCPerm, d1, d2);
              dotProd = dotProd + xValue * wValue;
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
  `}},Ih=class{constructor(t){this.variableNames=["x","dy"],this.uniforms="pads : vec2<i32>, strides : vec2<i32>, batchSize : i32, outHeight : i32, outWidth : i32, inHeight : i32, inWidth : i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t.filterShape,this.dispatchLayout=te(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize),this.isChannelsLast=t.dataFormat==="channelsLast",this.shaderKey=`conv2DDerFilter_${this.isChannelsLast}`}getUserCode(){return`
    ${Q("index")} {
      if(index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let wR = coords[0];
        let wC = coords[1];
        let d1 = coords[2];
        let d2 = coords[3];

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var b = 0; b < uniforms.batchSize; b = b + 1) {
          for (var yR = 0; yR < uniforms.outHeight; yR = yR + 1) {
            let xR = wR + yR * uniforms.strides[0] - uniforms.pads[0];
            if (xR < 0 || xR >= uniforms.inHeight) {
              continue;
            }

            for (var yC = 0; yC < uniforms.outWidth; yC = yC + 1) {
              let xC = wC + yC * uniforms.strides[1] - uniforms.pads[1];

              if (xC < 0 || xC >= uniforms.inWidth) {
                continue;
              }

              if (${this.isChannelsLast}) {
                let dyValue = getDy(b, yR, yC, d2);
                let xValue = getX(b, xR, xC, d1);
                dotProd = dotProd + xValue * dyValue;
              } else {
                let dyValue = getDy(b, d2, yR, yC);
                let xValue = getX(b, d1, xR, xC);
                dotProd = dotProd + xValue * dyValue;
              }
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
  `}},Th=class{constructor(t){this.variableNames=["x","dy"],this.uniforms=`pads : vec3<i32>, strides : vec3<i32>, batchSize : i32, outDepth : i32,
       outHeight : i32, outWidth : i32, inDepth : i32, inHeight : i32, inWidth : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t.filterShape,this.dispatchLayout=te(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="conv3DDerFilter"}getUserCode(){return`
    ${Q("index")} {
      if(index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let wF = coords.x;
        let wR = coords.y;
        let wC = coords.z;
        let d1 = coords.w;
        let d2 = coords.u;

        var dotProd = 0.0;
        for (var b = 0; b < uniforms.batchSize; b++) {
          for (var yF = 0; yF < uniforms.outDepth; yF++) {
            let xF = wF + yF * uniforms.strides[0] - uniforms.pads[0];
            if (xF < 0 || xF >= uniforms.inDepth) {
              continue;
            }

            for (var yR = 0; yR < uniforms.outHeight; yR++) {
              let xR = wR + yR * uniforms.strides[1] - uniforms.pads[1];
              if (xR < 0 || xR >= uniforms.inHeight) {
                continue;
              }

              for (var yC = 0; yC < uniforms.outWidth; yC++) {
                let xC = wC + yC * uniforms.strides[2] - uniforms.pads[2];
                if (xC < 0 || xC >= uniforms.inWidth) {
                  continue;
                }

                let dyValue = getDy(b, yF, yR, yC, d2);
                let xValue = getX(b, xF, xR, xC, d1);
                dotProd += xValue * dyValue;
              }
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
  `}},Eh=class{constructor(t){this.variableNames=["dy","W"],this.uniforms=`filterDims : vec3<i32>, pads : vec3<i32>, strides : vec3<i32>,
      outDepth : i32, outHeight : i32, outWidth : i32, outChannels : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t.inShape,this.dispatchLayout=te(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="conv3DDerInput"}getUserCode(){return`
    ${Q("index")} {
      if(index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords.x;
        let d1 = coords.u;

        let dyCorner = vec3<i32>(coords.y, coords.z, coords.w) - uniforms.pads;
        let dyFCorner = dyCorner.x;
        let dyRCorner = dyCorner.y;
        let dyCCorner = dyCorner.z;

        var dotProd = 0.0;
        for (var wF = 0; wF < uniforms.filterDims[0]; wF++) {
          let dyF = f32(dyFCorner + wF) / f32(uniforms.strides[0]);
          if (dyF < 0.0 || dyF >= f32(uniforms.outDepth) || fract(dyF) > 0.0) {
            continue;
          }
          let idyF = i32(dyF);

          let wFPerm = uniforms.filterDims[0] - 1 - wF;

          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {
            let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[1]);

            if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
              continue;
            }
            let idyR = i32(dyR);

            let wRPerm = uniforms.filterDims[1] - 1 - wR;

            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {
              let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[2]);

              if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
                continue;
              }
              let idyC = i32(dyC);

              let wCPerm = uniforms.filterDims[2] - 1 - wC;

              for (var d2 = 0; d2 < uniforms.outChannels; d2++) {
                let xValue = getDy(batch, idyF, idyR, idyC, d2);
                let wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
  `}};function eq(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,dy:i}=t,{strides:s,pad:a,dataFormat:l,dimRoundingMode:u,filterShape:c}=o,p=R.convertConv2DDataFormat(l),d=R.computeConv2DInfo(n.shape,c,s,1,a,u,!1,p),m=new Ih(d),f=[{type:"int32",data:[d.padInfo.top,d.padInfo.left]},{type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.batchSize]},{type:"int32",data:[d.outHeight]},{type:"int32",data:[d.outWidth]},{type:"int32",data:[d.inHeight]},{type:"int32",data:[d.inWidth]}];return e.runWebGPUProgram(m,[n,i],n.dtype,f)}var bE={kernelName:el,backendName:"webgpu",kernelFunc:eq};function tq(r=4){let t=i=>{switch(i){case 1:return"return W[getIndexFromCoords4D(coord, uniforms.wShape)];";case 4:return`
            let coord1 = vec4<i32>(coordX, coordY, col + 1, rowInner);
            let coord2 = vec4<i32>(coordX, coordY, col + 2, rowInner);
            let coord3 = vec4<i32>(coordX, coordY, col + 3, rowInner);
            let v0 = W[getIndexFromCoords4D(coord, uniforms.wShape)];
            let v1 = W[getIndexFromCoords4D(coord1, uniforms.wShape)];
            let v2 = W[getIndexFromCoords4D(coord2, uniforms.wShape)];
            let v3 = W[getIndexFromCoords4D(coord3, uniforms.wShape)];
            return vec4<f32>(v0, v1, v2, v3);
            `;default:throw new Error(`innerElementSize ${i} is not supported.`)}},o=`if (row < uniforms.dimAOuter && col < uniforms.dimInner) {
        ${`
      let outRow = row / uniforms.outShape[2];
      let outCol = row % uniforms.outShape[2];

      let WRow = col / (uniforms.filterDims[1] * uniforms.outBackprop[3]);
      let WCol = col / uniforms.outBackprop[3] % uniforms.filterDims[1];
      let xR = f32(outRow - uniforms.pads[0] + WRow) / f32(uniforms.strides[0]);
      let xC = f32(outCol - uniforms.pads[1] + WCol) / f32(uniforms.strides[1]);
      if (xR < 0.0 || xR >= f32(uniforms.outBackprop[1]) || fract(xR) > 0.0) {
        return ${ze(r)}(0.0);
      }
      if (xC < 0.0 || xC >= f32(uniforms.outBackprop[2]) || fract(xC) > 0.0) {
        return ${ze(r)}(0.0);
      }
      let coord = vec4<i32>(
          batch,
          i32(xR),
          i32(xC),
          col % uniforms.outBackprop[3]);
      return x[getIndexFromCoords4D(coord, uniforms.xShape)/${r}];`}
      }
      return ${ze(r)}(0.0);`;return`
  fn mm_readA(batch: i32, row : i32, col : i32) -> ${ze(r)} {
    ${o}
  }

  fn mm_readB(batch: i32, row : i32, col : i32) -> ${ze(r)} {
    let coordX = uniforms.filterDims.x - 1 -
        row / (uniforms.filterDims[1] * uniforms.outBackprop[3]);
    let coordY = uniforms.filterDims.y - 1 -
        (row / uniforms.outBackprop[3]) % uniforms.filterDims[1];
    if (row < uniforms.dimInner && col < uniforms.dimBOuter &&
        coordX >= 0 && coordY >= 0) {
      let rowInner = row % uniforms.outBackprop[3];
      let coord = vec4<i32>(coordX, coordY, col, rowInner);
      ${t(r)}
    }
    return ${ze(r)}(0.0);
  }

  fn mm_write(batch: i32, row : i32, col : i32, valueInput : ${ze(r)}) {
    if (row < uniforms.dimAOuter && col < uniforms.dimBOuter) {
      var value = valueInput;
      let outCoord = vec4<i32>(
          batch,
          row / uniforms.outShape[2],
          row % uniforms.outShape[2],
          col);
      result[getIndexFromCoords4D(outCoord, uniforms.outShape)/${r}] = value;
    }
  }`}var Nh=class{constructor(t){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, strides : vec2<i32>, outBackprop : vec4<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.outputShape=t.inShape,S.assert(t.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),this.isVec4=t.inChannels%4===0&&t.outChannels%4===0,this.dispatchLayout={x:[3],y:[1,2],z:[0]},this.workgroupSize=Ip(this.dispatchLayout,this.outputShape,this.isVec4),this.elementsPerThread=Tp(this.dispatchLayout,this.outputShape,this.isVec4),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize,this.elementsPerThread),this.isVec4&&(this.outputComponent=4,this.variableComponents=[4,1]),this.shaderKey=`conv2DDerInputMM_${this.isVec4}_${this.elementsPerThread}`}getUserCode(){let t=this.isVec4?zs(this.elementsPerThread,this.workgroupSize):Us(this.elementsPerThread,this.workgroupSize);return`
    ${tq(this.isVec4?4:1)}
    ${t}
    `}};function rq(r){let{inputs:t,backend:e,attrs:o}=r,{dy:n,filter:i}=t,{inputShape:s,strides:a,pad:l,dataFormat:u,dimRoundingMode:c}=o,p=R.convertConv2DDataFormat(u),d=R.computeConv2DInfo(s,i.shape,a,1,l,c,!1,p),m=[{type:"int32",data:[d.filterHeight,d.filterWidth]},{type:"int32",data:[d.filterHeight-1-d.padInfo.top,d.filterWidth-1-d.padInfo.left]},{type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.batchSize,d.outHeight,d.outWidth,d.outChannels]}],f;if(G().getBool("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE")||d.dataFormat!=="channelsLast")f=new kh(d);else{f=new Nh(d);let g=d.inHeight*d.inWidth,x=d.inChannels,y=d.filterHeight*d.filterWidth*d.outChannels;m.push({type:"uint32",data:[g]},{type:"uint32",data:[x]},{type:"uint32",data:[y]})}return e.runWebGPUProgram(f,[n,i],"float32",m)}var vE={kernelName:tl,backendName:"webgpu",kernelFunc:rq};var Rh=class{constructor(t){this.variableNames=["x","W"],this.uniforms="filterDims: vec3<i32>, pads: vec3<i32>, strides: vec3<i32>, dilations: vec3<i32>,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t.outShape,this.dispatchLayout=te(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="conv3dnaive"}getUserCode(){return`
    ${Q("index")} {
      if (index < uniforms.size) {
        let coords = getOutputCoords();
        let batch = coords.x;
        let d2 = coords.u;

        let xFRCCorner = vec3<i32>(coords.y, coords.z, coords.w) * uniforms.strides - uniforms.pads;
        let xFCorner = xFRCCorner.x;
        let xRCorner = xFRCCorner.y;
        let xCCorner = xFRCCorner.z;

        let inputDepthNearestVec4 = (uniforms.xShape.u / 4) * 4;
        let inputDepthVec4Remainder = uniforms.xShape.u % 4;

        var dotProd = 0.0;
        for (var wF = 0; wF < uniforms.filterDims[0]; wF++) {
          let xF = xFCorner + wF * uniforms.dilations[0];
          if (xF < 0 || xF >= uniforms.xShape.y) {
            continue;
          }

          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {
            let xR = xRCorner + wR * uniforms.dilations[1];
            if (xR < 0 || xR >= uniforms.xShape.z) {
              continue;
            }

            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {
              let xC = xCCorner + wC * uniforms.dilations[2];
              if (xC < 0 || xC >= uniforms.xShape.w) {
                continue;
              }

              for (var d1 = 0; d1 < inputDepthNearestVec4; d1 += 4) {
                let xValues = vec4<f32>(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                let wValues = vec4<f32>(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (inputDepthVec4Remainder == 1) {
                dotProd += getX(batch, xF, xR, xC, inputDepthNearestVec4) *
                  getW(wF, wR, wC, inputDepthNearestVec4, d2);
              } else if (inputDepthVec4Remainder == 2) {
                let xValues = vec2<f32>(
                  getX(batch, xF, xR, xC, inputDepthNearestVec4),
                  getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1)
                );
                let wValues = vec2<f32>(
                  getW(wF, wR, wC, inputDepthNearestVec4, d2),
                  getW(wF, wR, wC, inputDepthNearestVec4 + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (inputDepthVec4Remainder == 3) {
                let xValues = vec3<f32>(
                  getX(batch, xF, xR, xC, inputDepthNearestVec4),
                  getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1),
                  getX(batch, xF, xR, xC, inputDepthNearestVec4 + 2)
                );
                let wValues = vec3<f32>(
                  getW(wF, wR, wC, inputDepthNearestVec4, d2),
                  getW(wF, wR, wC, inputDepthNearestVec4 + 1, d2),
                  getW(wF, wR, wC, inputDepthNearestVec4 + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }`}};function oq(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,filter:i}=t,{strides:s,pad:a,dilations:l}=o,u=R.computeConv3DInfo(n.shape,i.shape,s,l,a),c=[u.padInfo.front,u.padInfo.top,u.padInfo.left],p=[{type:"int32",data:[u.filterDepth,u.filterHeight,u.filterWidth]},{type:"int32",data:[...c]},{type:"int32",data:[u.strideDepth,u.strideHeight,u.strideWidth]},{type:"int32",data:[u.dilationDepth,u.dilationHeight,u.dilationWidth]}],d=new Rh(u),m=Tt(n.dtype,i.dtype);return e.runWebGPUProgram(d,[n,i],m,p)}var SE={kernelName:rl,backendName:"webgpu",kernelFunc:oq};function nq(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,dy:i}=t,{strides:s,pad:a,filterShape:l}=o,u=R.computeConv3DInfo(n.shape,l,s,1,a),c=new Th(u),p=[{type:"int32",data:[u.padInfo.front,u.padInfo.top,u.padInfo.left]},{type:"int32",data:[u.strideDepth,u.strideHeight,u.strideWidth]},{type:"int32",data:[u.batchSize]},{type:"int32",data:[u.outDepth]},{type:"int32",data:[u.outHeight]},{type:"int32",data:[u.outWidth]},{type:"int32",data:[u.inDepth]},{type:"int32",data:[u.inHeight]},{type:"int32",data:[u.inWidth]}];return e.runWebGPUProgram(c,[n,i],i.dtype,p)}var wE={kernelName:zd,backendName:"webgpu",kernelFunc:nq};function iq(r){let{inputs:t,backend:e,attrs:o}=r,{dy:n,filter:i}=t,{strides:s,pad:a,inputShape:l}=o,u=R.computeConv3DInfo(l,i.shape,s,1,a),c=new Eh(u),p=[{type:"int32",data:[u.filterDepth,u.filterHeight,u.filterWidth]},{type:"int32",data:[u.filterDepth-1-u.padInfo.front,u.filterHeight-1-u.padInfo.top,u.filterWidth-1-u.padInfo.left]},{type:"int32",data:[u.strideDepth,u.strideHeight,u.strideWidth]},{type:"int32",data:[u.outDepth]},{type:"int32",data:[u.outHeight]},{type:"int32",data:[u.outWidth]},{type:"int32",data:[u.outChannels]}];return e.runWebGPUProgram(c,[n,i],n.dtype,p)}var CE={kernelName:ol,backendName:"webgpu",kernelFunc:iq};var sq=we({opType:ne.COS}),_E={kernelName:nl,backendName:"webgpu",kernelFunc:sq};var aq=we({opType:ne.COSH}),kE={kernelName:il,backendName:"webgpu",kernelFunc:aq};var $h=class{constructor(t,e,o,n){this.variableNames=["Image","Boxes","BoxInd"],this.uniforms="extrapolationValue : f32,",this.workgroupSize=[64,1,1],this.size=!0;let[i]=e;this.outputShape=[i,o[0],o[1],t],this.dispatchLayout=te(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize),this.methodId=n==="bilinear"?1:0,this.cropHeightBiggerThan1=this.outputShape[1]>1,this.cropWidthBiggerThan1=this.outputShape[2]>1,this.shaderKey=`cropAndResize_${this.methodId}_${this.cropHeightBiggerThan1}_${this.cropWidthBiggerThan1}`}getUserCode(){let[t,e]=["f32(uniforms.imageShape[1] - 1)","f32(uniforms.imageShape[2] - 1)"],[o,n,i]=this.cropHeightBiggerThan1?[`(${t} / f32(uniforms.outShape[1] - 1))`,"(y2-y1) * height_ratio",`y1*${t} + f32(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${t}`],[s,a,l]=this.cropWidthBiggerThan1?[`(${e} / f32(uniforms.outShape[2] - 1))`,"(x2-x1) * width_ratio",`x1*${e} + f32(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${e}`];return`
    ${Q("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let height_ratio = f32(${o});
        let width_ratio = f32(${s});
        let b = coords[0];
        let y = coords[1];
        let x = coords[2];
        let d = coords[3];
        // get box vals
        let y1 = getBoxes(b, 0);
        let x1 = getBoxes(b, 1);
        let y2 = getBoxes(b, 2);
        let x2 = getBoxes(b, 3);
        // get image in batch index
        let bInd = i32(round(getBoxInd(b)));
        if(bInd < 0 || bInd >= uniforms.outShape[0]) {
          return;
        }
        let height_scale = ${n};
        let width_scale = ${a};
        let in_y = ${i};
        if( in_y < 0.0 || in_y > ${t} ) {
          setOutputAtIndex(index, uniforms.extrapolationValue);
          return;
        }
        let in_x = ${l};
        if( in_x < 0.0 || in_x > ${e} ) {
          setOutputAtIndex(index, uniforms.extrapolationValue);
          return;
        }
        let sourceFracIndexCR = vec2<f32>(in_x,in_y);
        if(${this.methodId} == 1) {
          // Compute the four integer indices.
          let sourceFloorCR = vec2<i32>(sourceFracIndexCR);
          let sourceCeilCR = vec2<i32>(ceil(sourceFracIndexCR));
          let topLeft = getImage(bInd, sourceFloorCR.y, sourceFloorCR.x, d);
          let bottomLeft = getImage(bInd, sourceCeilCR.y, sourceFloorCR.x, d);
          let topRight = getImage(bInd, sourceFloorCR.y, sourceCeilCR.x, d);
          let bottomRight = getImage(bInd, sourceCeilCR.y, sourceCeilCR.x, d);
          let fracCR = sourceFracIndexCR - vec2<f32>(sourceFloorCR);
          let top = topLeft + (topRight - topLeft) * fracCR.x;
          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          let newValue = top + (bottom - top) * fracCR.y;
          setOutputAtIndex(index, newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          let sourceNearestCR = vec2<i32>(floor(
            sourceFracIndexCR + vec2<f32>(0.5,0.5)));
          let newValue = getImage(
            bInd, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutputAtIndex(index, newValue);
        }
      }
    }
    `}};var lq=r=>{let{inputs:t,backend:e,attrs:o}=r,{image:n,boxes:i,boxInd:s}=t,{cropSize:a,method:l,extrapolationValue:u}=o,c=new $h(n.shape[3],i.shape,a,l),p=[{type:"float32",data:[u]}];return e.runWebGPUProgram(c,[n,i,s],"float32",p)},IE={kernelName:ll,backendName:"webgpu",kernelFunc:lq};var mc=function(r){return r.Prod="*",r.Sum="+",r}(mc||{}),Op=class{constructor(t,e,o,n){this.variableNames=["x"],this.uniforms="index : f32,",this.size=!0,this.workgroupSize=[128,1,1],this.outputShape=e,this.dispatchLayout=te(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize),this.exclusive=o,this.reverse=n,this.op=t,this.shaderKey=`cum_${this.op}_${this.exclusive}_${this.reverse}`}getUserCode(){let t=this.outputShape.length,e=this.op===mc.Prod?"1.0":"0.0",o=this.exclusive?e:`getX(${TE(t,"coords",this.op)})`,n=this.outputShape[this.outputShape.length-1],i="",s="";return this.exclusive?(i=this.reverse?`end != ${n-1}`:"end != 0",s=this.reverse?"end + 1":"end - 1"):(i=this.reverse?`end + pow2 < ${n}`:"end >= pow2",s=this.reverse?"end + pow2":"end - pow2"),`
      ${Q("index")} {
       if (index < uniforms.size) {
         var coords = getCoordsFromIndex(index);

         let end = ${EE(t,"coords",this.op)};
         var val = ${o};
         let pow2 = i32(pow(2.0, uniforms.index));
         if (${i}) {
           let idx = ${s};
           ${EE(t,"coords",this.op)} = idx;
           val ${this.op}= getX(${TE(t,"coords",this.op)});
         }
         setOutputAtIndex(index, val);
       }
      }
    `}};function TE(r,t,e){if(r===1)return`${t}`;if(r===2)return`${t}.x, ${t}.y`;if(r===3)return`${t}.x, ${t}.y, ${t}.z`;if(r===4)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative ${e} for rank ${r} is not yet supported`)}function EE(r,t,e){if(r===1)return`${t}`;if(r===2)return`${t}.y`;if(r===3)return`${t}.z`;if(r===4)return`${t}.w`;throw Error(`Cumulative ${e} for rank ${r} is not yet supported`)}function Ph(r,t,e,o,n,i){let s=t.shape.length,a=R.getAxesPermutation([o],s),l=t;a!=null&&(l=dr({inputs:{x:t},backend:e,attrs:{perm:a}}));let u=R.getInnerMostAxes(1,s)[0];if(u!==s-1)throw new Error(`WebGPU cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${o}`);let c=l.shape[u],p=$t({inputs:{x:l},backend:e});for(let d=0;d<=Math.ceil(Math.log2(c))-1;d++){let m=new Op(r,l.shape,!1,i),f=p,g=[{type:"float32",data:[d]}];p=e.runWebGPUProgram(m,[p],p.dtype,g),e.disposeData(f.dataId)}if(n){let d=new Op(r,l.shape,n,i),m=p,f=[{type:"float32",data:[0]}];p=e.runWebGPUProgram(d,[p],p.dtype,f),e.disposeData(m.dataId)}if(a!=null){let d=R.getUndoAxesPermutation(a),m=dr({inputs:{x:p},backend:e,attrs:{perm:d}});return e.disposeData(p.dataId),e.disposeData(l.dataId),m}return p}function uq(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{axis:i,exclusive:s,reverse:a}=o;return Ph(mc.Prod,n,e,i,s,a)}var NE={kernelName:sl,backendName:"webgpu",kernelFunc:uq};function cq(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{axis:i,exclusive:s,reverse:a}=o;return Ph(mc.Sum,n,e,i,s,a)}var RE={kernelName:al,backendName:"webgpu",kernelFunc:cq};function pq(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,weights:i}=t,{size:s,binaryOutput:a}=o,l=n.shape.length===1,c=S.sizeFromShape(i.shape)>0,p=i.dtype,d=l?[n.shape[0]]:[n.shape[0],n.shape[1]],m=l?[s]:[n.shape[0],s],f=St({backend:e,attrs:{shape:m,value:0,dtype:p}}),g=new pc(d,c,a),x=[{type:"int32",data:[s]}],y=c?[n,i]:[n];return e.runWebGPUProgram(g,y,p,x,f)}var $E={kernelName:ul,backendName:"webgpu",kernelFunc:pq};var Dh=class{constructor(t,e){this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.uniforms="blockSize : i32,",this.outputShape=t,this.dispatchLayout=te(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey=`depthToSpace_${e}`,this.dataFormat=e}getUserCode(){return`
      ${Q("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let h = ${this.getHeightCoordString()};
          let w = ${this.getWidthCoordString()};
          let d = ${this.getDepthCoordString()};

          let in_h = h / uniforms.blockSize;
          let offset_h = h % uniforms.blockSize;
          let in_w = w / uniforms.blockSize;
          let offset_w = w % uniforms.blockSize;
          let offset_d = (offset_h * uniforms.blockSize + offset_w) *
            ${this.getOutputDepthSize()};
          let in_d = d + offset_d;

          let rlt = ${this.getInputSamplingString()};
          setOutputAtIndex(index, rlt);
        }
      }`}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?"uniforms.outShape[3]":"uniforms.outShape[1]"}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};function dq(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{blockSize:i,dataFormat:s}=o,a=n.shape[0],l=s==="NHWC"?n.shape[1]:n.shape[2],u=s==="NHWC"?n.shape[2]:n.shape[3],c=s==="NHWC"?n.shape[3]:n.shape[1],p=l*i,d=u*i,m=c/(i*i),f=s==="NHWC"?[a,p,d,m]:[a,m,p,d],g=[{type:"int32",data:[i]}],x=new Dh(f,s);return e.runWebGPUProgram(x,[n],n.dtype,g)}var PE={kernelName:cl,backendName:"webgpu",kernelFunc:dq};var Ah=class{constructor(t,e,o,n=!1,i=null,s=!1){this.variableNames=["x","W"],this.uniforms="pads : vec2<i32>, inDims : vec2<i32>,",this.workgroupSize=[16,16,1],this.outputShape=t,this.dispatchLayout={x:[3],y:[2],z:[0,1]},this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize),n&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),this.addBias=n,this.activation=i,this.hasPreluActivation=s,this.filterHeight=e,this.filterWidth=o,this.shaderKey=`depthwiseNCHW_${this.activation}_${this.filterHeight}_${this.filterWidth}`}getUserCode(){let t=this.filterWidth*this.filterHeight,e=this.workgroupSize[0]*this.workgroupSize[1]*this.workgroupSize[2],o=this.workgroupSize[1]+this.filterHeight-1,n=this.workgroupSize[0]+this.filterWidth-1;return`
      ${rr(this.activation,this.hasPreluActivation,!1,4)}

      var<workgroup> mm_Asub : array<array<f32, ${n}>, ${o}>;
      var<workgroup> mm_Bsub : array<array<f32, ${this.filterWidth}>, ${this.filterHeight}>;
      fn readX(batch : i32, channel : i32, row : i32, col : i32) -> f32 {
        var value = 0.0;
        if (row >=0 && row < uniforms.inDims[0] && col >=0 && col < uniforms.inDims[1])
        {
          value = getX(batch, channel, row, col);
        }
        return value;
      }

      ${Q()} {
        let coords = getOutputCoords();
        let batch = coords[0];
        let xRCCorner = vec2<i32>(coords.zw) - uniforms.pads;
        let channelMul = uniforms.wShape[3];
        let d1 = coords[1] / channelMul;
        let q = coords[1] % channelMul;

        let inputRowStart = xRCCorner.x;
        let inputColStart = xRCCorner.y;

        let localRow = i32(localId.y);
        let localCol = i32(localId.x);

        // Load one tile of X into local memory.
        for (var inputRow = localRow; inputRow < ${o}; inputRow = inputRow + ${this.workgroupSize[1]}) {
          for (var inputCol = localCol; inputCol < ${n}; inputCol = inputCol + ${this.workgroupSize[0]}) {
            let rowOffset = inputRow - localRow;
            let colOffset = inputCol - localCol;
            mm_Asub[inputRow][inputCol] = readX(batch, d1, inputRowStart + rowOffset, inputColStart + colOffset);
          }
        }

        // Load one tile of W into local memory.
        var wIndex = i32(localIndex);
        ${t<e?`if (wIndex < ${t})`:`for(; wIndex < ${t}; wIndex = wIndex + ${e})`}

        {
          let wRow = wIndex / ${this.filterWidth};
          let wCol = wIndex % ${this.filterWidth};
          mm_Bsub[wRow][wCol] = getW(wRow, wCol, d1, q);
        }

        workgroupBarrier();

        var value = 0.0;
        for (var wR = 0; wR < ${this.filterHeight}; wR = wR + 1) {
          for (var wC = 0; wC < ${this.filterWidth}; wC = wC + 1) {
            let xVal = mm_Asub[localRow + wR][localCol + wC];
            let wVal = mm_Bsub[wR][wC];
            value = fma(xVal, wVal, value);
          }
        }
        ${Zr(this.addBias,this.activation)}
        if (coordsInBounds4D(coords, uniforms.outShape)) {
          setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
        }
      }
    `}};var fc=class{constructor(t,e=!1,o=null,n=!1){this.variableNames=["x","W"],this.uniforms="pads : vec2<i32>, inDims : vec2<i32>, virtualWidth : i32,",this.workgroupSize=[64,1,1],this.workPerThread=4,this.outputComponent=4,this.outputShape=t.outShape,this.virtualWidth=Math.ceil(this.outputShape[2]/this.workPerThread)*this.workPerThread;let i=[this.outputShape[0],this.outputShape[1],this.virtualWidth,this.outputShape[3]];this.dispatchLayout=te(i),this.dispatch=Z(this.dispatchLayout,i,this.workgroupSize,[this.outputComponent*this.workPerThread,1,1]),S.assert(t.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),e&&this.variableNames.push("bias"),n&&this.variableNames.push("preluActivationWeights"),this.convInfo=t,this.addBias=e,this.activation=o,this.hasPreluActivation=n,this.shaderKey=`depthwiseVec4_${o}_${this.convInfo.filterHeight}_${this.convInfo.filterWidth}_${this.convInfo.strideHeight}_${this.convInfo.strideWidth}_${this.workPerThread}`}getUserCode(){let t=(this.workPerThread-1)*this.convInfo.strideWidth+this.convInfo.filterWidth,e=this.convInfo.strideHeight,o=this.convInfo.strideWidth;return`
      ${rr(this.activation,this.hasPreluActivation,!0,4)}
      fn readX(batch : i32, row : i32, col : i32, channel : i32) -> vec4<f32> {
        var value = vec4<f32>(0.0);
        if (col >=0 && col < uniforms.inDims[1]) {
          value = getX(batch, row, col, channel);
        }
        return value;
      }

      ${Q("index")} {
        let width0 = uniforms.outShape[3] / ${this.outputComponent};
        let d1 = (index % width0) * ${this.outputComponent};
        var index1 = index / width0;
        let width1 = uniforms.virtualWidth / ${this.workPerThread};
        let c = (index1 % width1) * ${this.workPerThread};
        index1 = index1 / width1;
        let r = index1 % uniforms.outShape[1];
        let batch = index1 / uniforms.outShape[1];

        let xRCCorner = vec2<i32>(r, c) * vec2<i32>(${e}, ${o}) - uniforms.pads;

        let xRCorner = xRCCorner.x;
        let xCCorner = xRCCorner.y;
        var xVals : array<vec4<f32>, ${t}>;
        var dotProd : array<vec4<f32>, ${this.workPerThread}>;
        for (var i = 0; i < ${this.workPerThread}; i++) {
          dotProd[i] = vec4<f32>(0.0);
        }

        // Use constant instead of uniform can give better performance.
        for (var wR = 0; wR < ${this.convInfo.filterHeight}; wR = wR + 1) {
          let xR = xRCorner + wR;
          if (xR >=0 && xR < uniforms.inDims[0]) {
            for (var i = 0; i < ${t}; i++) {
              xVals[i] = readX(batch, xR, xCCorner + i, d1);
            }
            for (var wC = 0; wC < ${this.convInfo.filterWidth}; wC = wC + 1) {
              let wValue = getW(wR, wC, d1, 0);
              for (var i = 0; i < ${this.workPerThread}; i++) {
                dotProd[i] = fma(xVals[i * ${o} + wC], wValue, dotProd[i]);
              }
            }
          }
        }

        for (var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let coords = vec4<i32>(batch, r, c + i, d1);
          if (coordsInBounds4D(coords, uniforms.outShape)) {
            var value = dotProd[i];
            ${Zr(this.addBias,this.activation)}
            setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
          }
        }
      }
    `}};var hc=class{constructor(t,e=!1,o=null,n=!1){this.variableNames=["x","W"],this.uniforms=`pads : vec2<i32>, inDims : vec2<i32>, filterHeight : i32,
      filterWidth : i32, strides : vec2<i32>, dilations : vec2<i32>,`,this.workgroupSize=[256,1,1],this.size=!0,this.outputShape=t.outShape,this.dispatchLayout=te(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize),this.isChannelsLast=t.dataFormat==="channelsLast",e&&this.variableNames.push("bias"),n&&this.variableNames.push("preluActivationWeights"),this.convInfo=t,this.addBias=e,this.activation=o,this.hasPreluActivation=n,this.shaderKey=`depthwise_${this.activation}_${this.isChannelsLast}`}getUserCode(){let t=this.isChannelsLast?"getX(batch, xR, xC, d1);":"getX(batch, d1, xR, xC);";return`
      ${rr(this.activation,this.hasPreluActivation,!1,4)}

      ${Q("index")} {
        if (index < uniforms.size) {
          let coords = getOutputCoords();
          let batch = coords[0];
          let xRCCorner = vec2<i32>(coords.${this.isChannelsLast?"yz":"zw"}) * uniforms.strides - uniforms.pads;
          let d2 = coords[${this.isChannelsLast?3:1}];
          let channelMul = uniforms.wShape[3];
          let d1 = d2 / channelMul;
          let q = d2 % channelMul;

          let inputRowStart = xRCCorner.x;
          let inputColStart = xRCCorner.y;
          let inputRowEnd = inputRowStart + uniforms.filterHeight *
              uniforms.dilations[0];
          let inputColEnd = inputColStart + uniforms.filterWidth *
              uniforms.dilations[1];

          // Convolve x(?, ?, d1)|x(d1, ?, ?) with w(:, :, d1, q) to get
          // y(yR, yC, d2)|y(d2, yR, yC). ? = to be determined. : = across all
          // values in that axis. x(?, ?, d1) and y(yR, yC, d2) is for NHWC.
          // x(d1, ?, ?) and y(d2, yR, yC) is for NCHW.
          var value = 0.0;

          // Extract if checking out of for loop for performance.
          if (inputRowStart >= 0 && inputColStart >= 0 &&
            inputRowEnd < uniforms.inDims[0] &&
                inputColEnd < uniforms.inDims[1]) {
              for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {
                let xR = inputRowStart + wR * uniforms.dilations[0];

                for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {
                  let xC = inputColStart + wC * uniforms.dilations[1];

                  let xVal = ${t};
                  let wVal = getW(wR, wC, d1, q);
                  value = value + xVal * wVal;
                }
              }
            } else {
              for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {
                let xR = inputRowStart + wR * uniforms.dilations[0];

                if (xR < 0 || xR >= uniforms.inDims[0]) {
                  continue;
                }

                for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {
                  let xC = inputColStart + wC * uniforms.dilations[1];

                  if (xC < 0 || xC >= uniforms.inDims[1]) {
                    continue;
                  }

                  let xVal = ${t};
                  let wVal = getW(wR, wC, d1, q);
                  value = value + xVal * wVal;
                }
              }
            }
            ${Zr(this.addBias,this.activation)}
          setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
        }
      }
    `}};function mq(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,filter:i}=t,{strides:s,pad:a,dataFormat:l,dilations:u,dimRoundingMode:c}=o,p=R.convertConv2DDataFormat(l),d=u;d==null&&(d=[1,1]);let m=R.computeConv2DInfo(n.shape,i.shape,s,d,a,c,!0,p),f=[{type:"int32",data:[m.padInfo.top,m.padInfo.left]},{type:"int32",data:[m.inHeight,m.inWidth]}],g=m.dataFormat==="channelsLast",x;return!g&&m.inHeight>16&&m.inWidth>16&&m.strideHeight===1&&m.strideWidth===1&&m.dilationWidth===1&&m.dilationHeight===1&&m.inChannels===m.outChannels?x=new Ah(m.outShape,m.filterHeight,m.filterWidth):g&&m.outHeight>4&&m.outWidth>4&&m.strideWidth<=2&&m.inChannels===m.outChannels&&m.dilationHeight===1&&m.dilationWidth===1&&m.inChannels%4===0?(x=new fc(m),f.push({type:"int32",data:[x.virtualWidth]})):(x=new hc(m),f.push({type:"int32",data:[m.filterHeight]},{type:"int32",data:[m.filterWidth]},{type:"int32",data:[m.strideHeight,m.strideWidth]},{type:"int32",data:[m.dilationHeight,m.dilationWidth]})),e.runWebGPUProgram(x,[n,i],n.dtype,f)}var DE={kernelName:pl,backendName:"webgpu",kernelFunc:mq};var Fh=class{constructor(t){this.variableNames=["x","dy"],this.uniforms=`strides : vec2<i32>, pads : vec2<i32>, filterDims : vec2<i32>, outHeight : i32,
      outWidth : i32, inHeight : i32, inWidth : i32, batchSize : i32, channelMul : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t.filterShape,this.dispatchLayout=te(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="depthwise_conv2d_backprop_filter"}getUserCode(){return`
      ${Q("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let wR = coords[0];
        let wC = coords[1];
        let d1 = coords[2];
        let dm = coords[3];
        let d2 = d1 * uniforms.channelMul + dm;

        var dotProd = 0.0;
        for (var b = 0; b < uniforms.batchSize; b++) {
          for (var yR = 0; yR < uniforms.outHeight; yR++) {
            let xR = wR + yR * uniforms.strides[0] - uniforms.pads[0];

            if (xR < 0 || xR >= uniforms.inHeight) {
              continue;
            }

            for (var yC = 0; yC < uniforms.outWidth; yC++) {
              let xC = wC + yC * uniforms.strides[1] - uniforms.pads[1];

              if (xC < 0 || xC >= uniforms.inWidth) {
                continue;
              }

              let dyValue = getDy(b, yR, yC, d2);
              let xValue = getX(b, xR, xC, d1);
              dotProd += xValue * dyValue;
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
    `}},Oh=class{constructor(t){this.variableNames=["dy","W"],this.uniforms=`strides : vec2<i32>, pads : vec2<i32>, filterDims : vec2<i32>,
       outHeight : i32, outWidth : i32, channelMul : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t.inShape,this.dispatchLayout=te(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="depthwise_conv2d_backprop_input"}getUserCode(){return`
      ${Q("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords[0];
        let d1 = coords[3];
        let dyCorner = coords.yz - uniforms.pads;
        let dyRCorner = dyCorner.x;
        let dyCCorner = dyCorner.y;

        var dotProd = 0.0;
        for (var wR = 0; wR < uniforms.filterDims[0]; wR++) {
          let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[0]);

          if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
            continue;
          }

          let idyR = i32(dyR);
          let wRPerm = uniforms.filterDims[0] - 1 - wR;

          for (var wC = 0; wC < uniforms.filterDims[1]; wC++) {
            let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[1]);

            if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
              continue;
            }

            let idyC = i32(dyC);
            let wCPerm = uniforms.filterDims[1] - 1 - wC;

            for (var dm = 0; dm < uniforms.channelMul; dm++) {
              let d2 = d1 * uniforms.channelMul + dm;
              let xValue = getDy(batch, idyR, idyC, d2);
              let wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
    `}};function fq(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,dy:i}=t,{strides:s,dilations:a,pad:l,dimRoundingMode:u,filterShape:c}=o,p=R.computeConv2DInfo(n.shape,c,s,a,l,u,!0),d=new Fh(p),m=[{type:"int32",data:[p.strideHeight,p.strideWidth]},{type:"int32",data:[p.padInfo.top,p.padInfo.left]},{type:"int32",data:[p.filterHeight,p.filterWidth]},{type:"int32",data:[p.outHeight]},{type:"int32",data:[p.outWidth]},{type:"int32",data:[p.inHeight]},{type:"int32",data:[p.inWidth]},{type:"int32",data:[p.batchSize]},{type:"int32",data:[p.outChannels/p.inChannels]}];return e.runWebGPUProgram(d,[n,i],"float32",m)}var AE={kernelName:dl,backendName:"webgpu",kernelFunc:fq};function hq(r){let{inputs:t,backend:e,attrs:o}=r,{dy:n,filter:i}=t,{strides:s,dilations:a,pad:l,dimRoundingMode:u,inputShape:c}=o,p=R.computeConv2DInfo(c,i.shape,s,a,l,u,!0),d=new Oh(p),m=[{type:"int32",data:[p.strideHeight,p.strideWidth]},{type:"int32",data:[p.filterHeight-1-p.padInfo.top,p.filterWidth-1-p.padInfo.left]},{type:"int32",data:[p.filterHeight,p.filterWidth]},{type:"int32",data:[p.outHeight]},{type:"int32",data:[p.outWidth]},{type:"int32",data:[p.outChannels/p.inChannels]}];return e.runWebGPUProgram(d,[n,i],n.dtype,m)}var FE={kernelName:ml,backendName:"webgpu",kernelFunc:hq};var Lh=class{constructor(t){this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[t,t],this.dispatchLayout=te(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="diag"}getUserCode(){return`
      ${Q("index")} {
        if (index < uniforms.size) {
          let coords = getOutputCoords();
          let value = select(0.0, getX(coords[0]), coords[0] == coords[1]);
          setOutputAtIndex(index, value);
        }
      }
    `}};function gq(r){let{inputs:t,backend:e}=r,{x:o}=t,n=[...o.shape,...o.shape],i=S.sizeFromShape(o.shape),s=me({inputs:{x:o},backend:e,attrs:{shape:[i]}}),a=new Lh(i),l=e.runWebGPUProgram(a,[s],s.dtype),u=me({inputs:{x:l},backend:e,attrs:{shape:n}});return e.disposeData(s.dataId),e.disposeData(l.dataId),u}var OE={kernelName:fl,backendName:"webgpu",kernelFunc:gq};var Mh=class{constructor(t){this.variableNames=["x","w"],this.uniforms="filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t.outShape,this.dispatchLayout=te(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="dilation2d"}getUserCode(){return`
       ${Q("index")} {
         if (index < uniforms.size) {
           let neg_infinity = -3.4e38;
           let coords = getOutputCoords();
           let batch = coords.x;
           let d1 = coords.w;
           let outTopLeftCorner = coords.yz * uniforms.strides - uniforms.pads;
           let hBeg = outTopLeftCorner.x;
           let wBeg = outTopLeftCorner.y;

           var curVal = neg_infinity;
           for (var h = 0; h < uniforms.filterDims[0]; h = h + 1) {
             let hIn = hBeg + h * uniforms.dilations[0];

             if (hIn >= 0 && hIn < uniforms.xShape[1]) {
               for (var w = 0; w < uniforms.filterDims[1]; w = w + 1) {
                 let wIn = wBeg + w * uniforms.dilations[1];

                 if (wIn >= 0 && wIn < uniforms.xShape[2]) {
                   let val = getX(batch, hIn, wIn, d1) + getW(h, w, d1);
                   if (val > curVal) {
                     curVal = val;
                   }
                 }
               }
             }
           }

           setOutputAtIndex(index, curVal);
         }
       }
     `}};function xq(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,filter:i}=t,{strides:s,pad:a,dilations:l}=o,u=R.computeDilation2DInfo(n.shape,i.shape,s,a,"NHWC",l),c=[u.padInfo.top,u.padInfo.left],p=[{type:"int32",data:[u.filterHeight,u.filterWidth]},{type:"int32",data:[...c]},{type:"int32",data:[u.strideHeight,u.strideWidth]},{type:"int32",data:[u.dilationHeight,u.dilationWidth]}],d=new Mh(u);return e.runWebGPUProgram(d,[n,i],n.dtype,p)}var LE={kernelName:hl,backendName:"webgpu",kernelFunc:xq};var Bh=class{constructor(t,e){if(this.variableNames=["x","w","dy"],this.uniforms="filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>, dySize: i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=t.inShape,this.dispatchLayout=te(t.outShape),this.dispatch=Z(this.dispatchLayout,t.outShape,this.workgroupSize),e!=="float32"&&e!=="int32")throw new Error(`Dilation2DBackpropInput only supports float32 and int32
          types, does not support ${e} type.`);this.type=e,this.shaderKey="dilation2DBackpropInput"}getUserCode(){return`
       ${Q("index")} {
         if (index < uniforms.dySize) {
           let coords = getDyCoordsFromIndex(index);
           let b = coords[0];
           let r = coords[1];
           let c = coords[2];
           let d = coords[3];

           let dyCorner = vec2<i32>(r, c) * uniforms.strides - uniforms.pads;
           var curVal = -3.4e38;  // neg_infinity
           var xRMax = 0;
           var xCMax = 0;

           // In the case of multiple argmax branches, we only back-propagate
           // along the last branch, i.e., the one with largest value of
           // 'wR * uniforms.filterDims[1] + wC', similarly to the max-pooling
           // backward routines.
           for (var wR = 0; wR < uniforms.filterDims[0]; wR++) {
             let xR = dyCorner.x + wR * uniforms.dilations[0];

             if (xR >= 0 && xR < uniforms.xShape[1]) {
               for (var wC = 0; wC < uniforms.filterDims[1]; wC++) {
                 let xC = dyCorner.y + wC * uniforms.dilations[1];

                 if (xC >= 0 && xC < uniforms.xShape[2]) {
                   let val = getX(b, xR, xC, d) + getW(wR, wC, d);
                   if (val > curVal) {
                     curVal = val;
                     xRMax = xR;
                     xCMax = xC;
                   }
                 }
               }
             }
           }

           let flatIndexIn = d + uniforms.xShape[3] *
               (xCMax + uniforms.xShape[2] * (xRMax + uniforms.xShape[1] * b));
           let value = getDy(b, r, c, d);
           ${Qr("&result[flatIndexIn]","value",this.type)}
         }
       }
     `}},Vh=class{constructor(t,e,o){if(this.variableNames=["x","w","dy"],this.uniforms="filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>, dySize: i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=t.filterShape,this.dispatchLayout=te(t.outShape),this.dispatch=Z(this.dispatchLayout,t.outShape,this.workgroupSize),o!=="float32"&&o!=="int32")throw new Error(`Dilation2DBackpropFilter only supports float32 and int32
          types, does not support ${o} type.`);this.type=o,this.shaderKey="dilation2DBackpropFilter"}getUserCode(){return`
       ${Q("index")} {
         if (index < uniforms.dySize) {
           let coords = getDyCoordsFromIndex(index);
           let b = coords[0];
           let r = coords[1];
           let c = coords[2];
           let d = coords[3];

           let dyCorner = vec2<i32>(r, c) * uniforms.strides - uniforms.pads;
           var curVal = -3.4e38;  // neg_infinity
           var wRMax = 0;
           var wCMax = 0;

           // In the case of multiple argmax branches, we only back-propagate
           // along the last branch, i.e., the one with largest value of
           // 'wR * uniforms.filterDims[1] + wC', similarly to the max-pooling
           // backward routines.
           for (var wR = 0; wR < uniforms.filterDims[0]; wR++) {
             let xR = dyCorner.x + wR * uniforms.dilations[0];

             if (xR >= 0 && xR < uniforms.xShape[1]) {
               for (var wC = 0; wC < uniforms.filterDims[1]; wC++) {
                 let xC = dyCorner.y + wC * uniforms.dilations[1];

                 if (xC >= 0 && xC < uniforms.xShape[2]) {
                   let val = getX(b, xR, xC, d) + getW(wR, wC, d);
                   if (val > curVal) {
                     curVal = val;
                     wRMax = wR;
                     wCMax = wC;
                   }
                 }
               }
             }
           }

           let flatIndexIn = d + uniforms.wShape[2] * (wCMax + wRMax * uniforms.wShape[1]);
           let value = getDy(b, r, c, d);
           ${Qr("&result[flatIndexIn]","value",this.type)}
         }
       }
     `}};function yq(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,filter:i,dy:s}=t,{strides:a,pad:l,dilations:u}=o,c=R.computeDilation2DInfo(n.shape,i.shape,a,l,"NHWC",u),p=i.dtype,d=new Vh(c,i.shape,p),m=[{type:"int32",data:[c.filterHeight,c.filterWidth]},{type:"int32",data:[c.padInfo.top,c.padInfo.left]},{type:"int32",data:[c.strideHeight,c.strideWidth]},{type:"int32",data:[c.dilationHeight,c.dilationWidth]},{type:"int32",data:[S.sizeFromShape(c.outShape)]}],f=St({backend:e,attrs:{shape:i.shape,value:0,dtype:p}});return e.runWebGPUProgram(d,[n,i,s],p,m,f)}var ME={kernelName:LS,backendName:"webgpu",kernelFunc:yq};function bq(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,filter:i,dy:s}=t,{strides:a,pad:l,dilations:u}=o,c=R.computeDilation2DInfo(n.shape,i.shape,a,l,"NHWC",u),p=n.dtype,d=new Bh(c,p),m=[{type:"int32",data:[c.filterHeight,c.filterWidth]},{type:"int32",data:[c.padInfo.top,c.padInfo.left]},{type:"int32",data:[c.strideHeight,c.strideWidth]},{type:"int32",data:[c.dilationHeight,c.dilationWidth]},{type:"int32",data:[S.sizeFromShape(c.outShape)]}],f=St({backend:e,attrs:{shape:c.inShape,value:0,dtype:p}});return e.runWebGPUProgram(d,[n,i,s],p,m,f)}var BE={kernelName:OS,backendName:"webgpu",kernelFunc:bq};var Wh=class{constructor(t,e,o){this.variableNames=["Image"],this.uniforms="alpha: f32,",this.workgroupSize=[64,1,1],this.pixelsOpType=Mi.DRAW,this.size=!0,this.outputShape=t,this.dispatchLayout=te(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize),this.type=e,this.textureFormat=o,this.shaderKey=`draw_${e}_${o}`}getUserCode(){let t,e=this.type==="float32"?"value":"value / 255.0";return t=`
      if (uniforms.numChannels == 1) {
        rgba[0] = ${e};
        rgba[1] = ${e};
        rgba[2] = ${e};
      } else {
        rgba[d] = ${e};
      }`,`
       @group(0) @binding(0) var outImage : texture_storage_2d<${this.textureFormat}, write>;
       ${Q("index")} {
         if (index < uniforms.size) {
           var rgba = vec4<f32>(0.0, 0.0, 0.0, uniforms.alpha);
           for (var d = 0; d < uniforms.numChannels; d = d + 1) {
             let value = f32(inBuf[index * uniforms.numChannels + d]);
             ${t}
           }
           rgba.x = rgba.x * rgba.w;
           rgba.y = rgba.y * rgba.w;
           rgba.z = rgba.z * rgba.w;
           let coords = getCoordsFromIndex(index);
           textureStore(outImage, vec2<i32>(coords.yx), rgba);
         }
       }
      `}};function vq(r){let{inputs:t,backend:e,attrs:o}=r,{image:n}=t,{canvas:i,options:s}=o,[a,l]=n.shape.slice(0,2),{imageOptions:u}=s||{},c=u?.alpha||1,p=e.device.features.has("bgra8unorm-storage")?"bgra8unorm":"rgba8unorm",d=[a,l],m=new Wh(d,n.dtype,p);i.width=l,i.height=a;let f="webgpu",g=i.getContext(f),x;g||(x=new OffscreenCanvas(l,a),g=x.getContext(f));let y=n.shape.length===3?n.shape[2]:1;g.configure({device:e.device,format:p,usage:GPUTextureUsage.STORAGE_BINDING,alphaMode:"premultiplied"});let v="int32",k=e.makeTensorInfo(d,v),N=e.tensorMap.get(k.dataId);N.resource=g.getCurrentTexture(),N.external=!0;let F=[{type:"uint32",data:[y]},{type:"float32",data:[c]}];if(e.runWebGPUProgram(m,[n],v,F,k),x){let M=i.getContext("2d");if(!M)throw new Error("Please make sure this canvas has only been used for 2d or webgpu context!");M.drawImage(x,0,0)}return e.disposeData(k.dataId),n}var VE={kernelName:ip,backendName:"webgpu",kernelFunc:vq};var Q1=Ze({opType:Se.MUL,cpuKernelImpl:ST,supportsComplex:!0}),WE={kernelName:pi,backendName:"webgpu",kernelFunc:Q1};function Z1(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{axis:i,keepDims:s}=o;return eo(n,i,s,"sum",e)}var zE={kernelName:vu,backendName:"webgpu",kernelFunc:Z1};function Sq(r){let{inputs:t,backend:e,attrs:o}=r,{equation:n}=o,i=t,{allDims:s,summedDims:a,idDims:l}=R.decodeEinsumEquation(n,i.length);R.checkEinsumDimSizes(s.length,l,i);let{path:u,steps:c}=R.getEinsumComputePath(a,l),p=c.length,d=null,m=s.length,f=[];for(let g=0;g<p;++g){for(let x of c[g]){let{permutationIndices:y,expandDims:v}=R.getEinsumPermutation(m,l[x]),k;R.isIdentityPermutation(y)?k=i[x]:(k=dr({inputs:{x:i[x]},backend:e,attrs:{perm:y}}),f.push(k));let N=k.shape.slice();for(let F=0;F<v.length;++F)N.splice(v[F],0,1);S.arraysEqual(k.shape,N)||(k=me({inputs:{x:k},backend:e,attrs:{shape:N}}),f.push(k)),d===null?d=k:(d=Q1({inputs:{a:k,b:d},backend:e}),f.push(d))}g<p-1&&(u[g]>=0&&(d=Z1({inputs:{x:d},backend:e,attrs:{axis:u[g]-(s.length-m),keepDims:!1}}),f.push(d)),m--)}for(let g of f)g!==d&&e.disposeData(g.dataId);return d}var UE={kernelName:xl,backendName:"webgpu",kernelFunc:Sq};var wq=we({opType:ne.ELU}),GE={kernelName:yl,backendName:"webgpu",kernelFunc:wq};var Cq=r=>{let{inputs:t,backend:e}=r,{dy:o,y:n}=t,i=new Fn(Se.ELU_DER,o.shape,n.shape);return e.runWebGPUProgram(i,[o,n],o.dtype)},HE={kernelName:Ud,backendName:"webgpu",kernelFunc:Cq};var _q=Ze({opType:Se.EQUAL,dtype:"bool",cpuKernelImpl:sT}),KE={kernelName:Jn,backendName:"webgpu",kernelFunc:_q};var kq=we({opType:ne.ERF}),qE={kernelName:bl,backendName:"webgpu",kernelFunc:kq};var Iq=we({opType:ne.EXP,cpuKernelImpl:aT,dtype:"float32"}),jE={kernelName:ei,backendName:"webgpu",kernelFunc:Iq};function zh(r){let{inputs:t,attrs:e,backend:o}=r,{dim:n}=e,{input:i}=t,s=i.shape.length,a=i.shape.slice(),l=n;return n<0&&(S.assert(-(s+1)<=n,()=>`Axis must be in the interval [${-(s+1)}, ${s}]`),l=s+n+1),a.splice(l,0,1),me({inputs:{x:i},backend:o,attrs:{shape:a}})}var XE={kernelName:vl,backendName:"webgpu",kernelFunc:zh};var Tq=we({opType:ne.EXPM1,cpuKernelImpl:lT}),YE={kernelName:ti,backendName:"webgpu",kernelFunc:Tq};var Lp=class{constructor(t,e){this.variableNames=["real","imag"],this.outputShape=[],this.uniforms="exponentMultiplier : f32, denominator: f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=te(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize),this.component=t,this.shaderKey=`fft_${t}`}getUserCode(){return`
    fn unaryOpComplex(real: f32, expR: f32, imag: f32, expI: f32) -> f32 {
      ${this.component==="real"?"return real * expR - imag * expI;":"return real * expI + imag * expR;"}
    }

    fn mulMatDFT(batch: i32, index: i32) -> f32 {
      let indexRatio = f32(index) / f32(uniforms.realShape[1]);
      let exponentMultiplierTimesIndexRatio =
          uniforms.exponentMultiplier * indexRatio;

      var result = 0.0;

      for (var i = 0; i < uniforms.realShape[1]; i = i + 1) {
        // x = (-2|2 * PI / N) * index * i;
        let x = exponentMultiplierTimesIndexRatio * f32(i);
        let expR = cos(x);
        let expI = sin(x);
        let real = getReal(batch, i);
        let imag = getImag(batch, i);

        result = result +
            unaryOpComplex(real, expR, imag, expI) / uniforms.denominator;
      }

      return result;
    }

    ${Q("index")} {
      if (index < uniforms.size) {
        let coords = getOutputCoords();
        setOutputAtIndex(index, mulMatDFT(coords[0], coords[1]));
      }
    }
  `}};function Uh(r,t,e){let o=e.tensorMap.get(r.dataId),n=S.sizeFromShape(r.shape),i=r.shape[r.shape.length-1],s=n/i,a=[],l=me({inputs:{x:r},backend:e,attrs:{shape:[s,i]}});a.push(l);let u=l.shape,c=new Lp("real",u),p=new Lp("imag",u),d=[{dataId:o.complexTensorInfos.real.dataId,dtype:o.complexTensorInfos.real.dtype,shape:u},{dataId:o.complexTensorInfos.imag.dataId,dtype:o.complexTensorInfos.imag.dtype,shape:u}],m=t?2*Math.PI:-2*Math.PI,f=t?u[1]:1,g=[{type:"float32",data:[m]},{type:"float32",data:[f]}],x=e.runWebGPUProgram(c,d,"float32",g);a.push(x);let y=e.runWebGPUProgram(p,d,"float32",g);a.push(y);let v=mo({inputs:{real:x,imag:y},backend:e});a.push(v);let k=me({inputs:{x:v},backend:e,attrs:{shape:r.shape}});return a.forEach(N=>e.disposeData(N.dataId)),k}function Eq(r){let{inputs:t,backend:e}=r,{input:o}=t;return Uh(o,!1,e)}var QE={kernelName:Sl,backendName:"webgpu",kernelFunc:Eq};var Gh=class{constructor(t){this.outputShape=[],this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=te(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="flipLeftRight"}getUserCode(){return`
      ${Q("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let coordX = uniforms.xShape[2] - coords[2] - 1;
          let outputValue = getX(coords[0], coords[1], coordX, coords[3]);
          setOutputAtIndex(index, outputValue);
        }
      }
    `}};var ZE={kernelName:Cl,backendName:"webgpu",kernelFunc:({inputs:r,backend:t})=>{let{image:e}=r,o=t,n=new Gh(e.shape);return o.runWebGPUProgram(n,[e],e.dtype)}};var Nq=we({opType:ne.FLOOR,cpuKernelImpl:uT}),JE={kernelName:ri,backendName:"webgpu",kernelFunc:Nq};var Rq=Ze({opType:Se.FLOOR_DIV,cpuKernelImpl:cT,dtype:"int32"}),eN={kernelName:oi,backendName:"webgpu",kernelFunc:Rq};var Hh=class{constructor(t,e,o=!1){this.pixelsOpType=Mi.FROM_PIXELS,this.outputShape=[0],this.variableNames=[],this.workgroupSize=[256,1,1],this.outputShape=t,this.dispatchLayout=te(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize,[e,1,1]),this.importVideo=o,this.shaderKey=`fromPixels_${this.importVideo}`}getUserCode(){let t=this.importVideo?"textureLoad(src, vec2<i32>(coords.yx));":"textureLoad(src, vec2<i32>(coords.yx), 0)";return`
      @binding(1) @group(0) var src: ${this.importVideo?"texture_external":"texture_2d<f32>"};
      ${Q("index")} {
        let flatIndex = index * uniforms.numChannels;
        if (flatIndex < uniforms.size) {
          let coords = getCoordsFromIndex(flatIndex);
          let values = ${t};
          for (var i = 0; i < uniforms.numChannels; i = i + 1) {
            result[flatIndex + i] = i32(floor(255.0 * values[i]));
          }
        }
      }
  `}};var tN={kernelName:ms,backendName:"webgpu",kernelFunc:$q},gc,J1=G().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");function $q(r){let{inputs:t,backend:e,attrs:o}=r,{pixels:n}=t,{numChannels:i}=o;if(n==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let s=typeof HTMLVideoElement<"u"&&n instanceof HTMLVideoElement,a=typeof HTMLImageElement<"u"&&n instanceof HTMLImageElement,l=typeof HTMLCanvasElement<"u"&&n instanceof HTMLCanvasElement||typeof OffscreenCanvas<"u"&&n instanceof OffscreenCanvas,u=typeof ImageBitmap<"u"&&n instanceof ImageBitmap,[c,p]=s?[n.videoWidth,n.videoHeight]:[n.width,n.height],d=[p,c,i],m=G().getBool("WEBGPU_IMPORT_EXTERNAL_TEXTURE")&&s,f=s||a;if(u||l||f){let v;if(m)v=e.device.importExternalTexture({source:n});else{if(f){let ce=G().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(gc==null||ce!==J1)&&(J1=ce,gc=document.createElement("canvas").getContext("2d",{willReadFrequently:J1})),gc.canvas.width=c,gc.canvas.height=p,gc.drawImage(n,0,0,c,p),n=gc.canvas}let j=GPUTextureUsage.COPY_DST|GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.TEXTURE_BINDING,ue=e.textureManager.acquireTexture(d[1],d[0],"rgba8unorm",j);e.queue.copyExternalImageToTexture({source:n},{texture:ue},[d[1],d[0]]),v=ue}let k=S.sizeFromShape(d),N=S.computeStrides(d),F=new Hh(d,i,m),M=[{type:"uint32",data:[k]},{type:"uint32",data:[i]},{type:"uint32",data:[...N]}],z=e.makeTensorInfo([p,c],"int32"),H=e.tensorMap.get(z.dataId);H.resource=v;let K=e.runWebGPUProgram(F,[z],"int32",M);return e.disposeData(z.dataId),K}let g=n.data,x=g;if(i!=null&&i!==4){x=new Uint8Array(n.width*n.height*i);let v=g.length,k=0;for(let N=0;N<v;N++)N%4<i&&(x[k++]=g[N])}let y=e.makeTensorInfo(d,"int32",new Int32Array(x));return e.uploadToGPU(y.dataId),y}var Kh=class{constructor(t,e,o,n,i){this.uniforms="varianceEpsilon : f32,",this.workgroupSize=[128,1,1],this.size=!0,this.variableNames=["x","mean","variance"],R.assertAndGetBroadcastShape(t,e),R.assertAndGetBroadcastShape(t,o),this.outputShape=t,this.dispatchLayout=te(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize),n!=null&&(R.assertAndGetBroadcastShape(t,n),this.variableNames.push("offset")),i!=null&&(R.assertAndGetBroadcastShape(t,i),this.variableNames.push("scale")),this.offsetShape=n,this.scaleShape=i,this.shaderKey="batchNorm"}getUserCode(){let t="0.0";this.offsetShape!=null&&(t="getOffsetByOutputIndex(index)");let e="1.0";return this.scaleShape!=null&&(e="getScaleByOutputIndex(index)"),`
      ${Q("index")} {
        if (index < uniforms.size)
        {
          let xValue = getXByOutputIndex(index);
          let meanValue = getMeanByOutputIndex(index);
          let varianValue = getVarianceByOutputIndex(index);
          let offsetValue = ${t};
          let scaleValue = ${e};
          let inv = scaleValue * inverseSqrt(varianValue + f32(uniforms.varianceEpsilon));
          setOutputAtIndex(index,dot(vec3<f32>(xValue, -meanValue, offsetValue), vec3<f32>(inv, inv, 1.0)));
        }
      }
  `}};var rN={kernelName:_l,backendName:"webgpu",kernelFunc:({inputs:r,attrs:t,backend:e})=>{let{x:o,scale:n,offset:i,mean:s,variance:a}=r,{varianceEpsilon:l}=t,u=e,c=[o,s,a],p=null;i!=null&&(p=i.shape,c.push(i));let d=null;n!=null&&(d=n.shape,c.push(n));let m=new Kh(o.shape,s.shape,a.shape,p,d),f=[{type:"float32",data:[l]}];return u.runWebGPUProgram(m,c,o.dtype,f)}};function Pq(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,filter:i,bias:s,preluActivationWeights:a}=t,{strides:l,pad:u,dataFormat:c,dilations:p,dimRoundingMode:d,activation:m,leakyreluAlpha:f}=o,g=R.convertConv2DDataFormat(c),x=R.computeConv2DInfo(n.shape,i.shape,l,p,u,d,!1,g);return _h({x:n,filter:i,convInfo:x,backend:e,bias:s,preluActivationWeights:a,leakyreluAlpha:f,activation:m})}var oN={kernelName:hs,backendName:"webgpu",kernelFunc:Pq};function Dq(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,filter:i,bias:s,preluActivationWeights:a}=t,{strides:l,pad:u,dilations:c,dimRoundingMode:p,activation:d,leakyreluAlpha:m}=o,f=c;f==null&&(f=[1,1]),S.assert(R.eitherStridesOrDilationsAreOne(l,f),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${f}'`);let g=R.computeConv2DInfo(n.shape,i.shape,l,f,u,p,!0),x=[n,i],y=s!=null,v=a!=null;y&&x.push(s),v&&x.push(a);let k=[{type:"int32",data:[g.padInfo.top,g.padInfo.left]},{type:"int32",data:[g.inHeight,g.inWidth]}],N;return g.outHeight>4&&g.outWidth>4&&g.strideWidth<=2&&g.inChannels===g.outChannels&&g.dilationHeight===1&&g.dilationWidth===1&&g.inChannels%4===0?(N=new fc(g,y,d,v),k.push({type:"int32",data:[N.virtualWidth]})):(N=new hc(g,y,d,v),k.push({type:"int32",data:[g.filterHeight]},{type:"int32",data:[g.filterWidth]},{type:"int32",data:[g.strideHeight,g.strideWidth]},{type:"int32",data:[g.dilationHeight,g.dilationWidth]})),d==="leakyrelu"&&(k.push({type:"float32",data:[m]}),N.uniforms+=" alpha : f32,"),e.runWebGPUProgram(N,x,"float32",k)}var nN={kernelName:gs,backendName:"webgpu",kernelFunc:Dq};var qh=class{constructor(t,e){this.variableNames=["A","indices"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=te(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey=`gathernd_${t}`,this.sliceDim=t,this.uniforms=`sliceDim : i32, strides : ${ft(t)},`}getUserCode(){let t;return this.sliceDim>1?t="uniforms.strides[j]":t="uniforms.strides",`
      ${Q("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          var flattenIndex = 0;
          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
            let indexTemp = i32(round(getIndices(coords[0], j)));
            let strideNum = ${t};
            flattenIndex = flattenIndex + indexTemp * strideNum;
          }

          setOutputAtIndex(index, getA(flattenIndex, coords[1]));
        }
      }
      `}};function Aq(r){let{inputs:t,backend:e}=r,{params:o,indices:n}=t,i=n.shape,s=i[i.length-1],a=S.sizeFromShape(o.shape),[l,u,c,p]=R.prepareAndValidate(o,n),d=me({inputs:{x:n},backend:e,attrs:{shape:[u,s]}}),m=me({inputs:{x:o},backend:e,attrs:{shape:[S.sizeFromShape(o.shape)/c,c]}});if(e.shouldExecuteOnCPU([o,n])||o.dtype==="string"){let v=e.readSync(n.dataId),k=e.bufferSync(o),N=pT(v,k,o.dtype,u,s,c,p,o.shape,a);return e.makeTensorInfo(l,o.dtype,N.values)}let f=new qh(s,[u,c]),g=[{type:"int32",data:[s]},{type:"int32",data:p}],x=e.runWebGPUProgram(f,[m,d],m.dtype,g),y=me({inputs:{x},backend:e,attrs:{shape:l}});return e.disposeData(d.dataId),e.disposeData(m.dataId),e.disposeData(x.dataId),y}var iN={kernelName:Il,backendName:"webgpu",kernelFunc:Aq};var jh=class{constructor(t,e){this.variableNames=["A","indices"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t.slice(),this.aShape=t,this.outputShape=e,this.dispatchLayout=te(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="gather"}getUserCode(){let t=Fq(this.aShape);return`
      ${Q("index")} {
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          let indexZ = i32(getIndices(resRC.x, resRC.z));
          let inBounds = select(0.0, 1.0, indexZ >= 0 && indexZ < uniforms.aShape[2]);
          setOutputAtIndex(index, inBounds * getA(${t}));
        }
      }
    `}};function Fq(r){let t=["resRC.x","resRC.y","resRC.z","resRC.w"],e=[];for(let o=0;o<r.length;o++)o===2?e.push("indexZ"):e.push(`${t[o]}`);return e.join()}function eb(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,indices:i}=t,{axis:s,batchDims:a}=o,l=S.parseAxisParam(s,n.shape)[0],u=R.segment_util.collectGatherOpShapeInfo(n,i,l,a),c=S.sizeFromShape(i.shape),p=[],d=me({inputs:{x:n},backend:e,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),m=me({inputs:{x:i},backend:e,attrs:{shape:[u.batchSize,c/u.batchSize]}});p.push(d),p.push(m);let f=[u.batchSize,u.outerSize,c/u.batchSize,u.sliceSize];if(e.shouldExecuteOnCPU([n,i])){let k=e.tensorMap.get(m.dataId).values,N=Oe(m.shape,m.dtype,k),M=e.tensorMap.get(d.dataId).values,z=Oe(d.shape,d.dtype,M),H=dT(z,N,f);return p.forEach(K=>e.disposeData(K.dataId)),e.makeTensorInfo(u.outputShape,H.dtype,H.values)}let g=new jh(d.shape,f),x=e.runWebGPUProgram(g,[d,m],d.dtype);p.push(x);let y=me({inputs:{x},backend:e,attrs:{shape:u.outputShape}});return p.forEach(v=>e.disposeData(v.dataId)),y}var sN={kernelName:kl,backendName:"webgpu",kernelFunc:eb};var Oq=Ze({opType:Se.GREATER,cpuKernelImpl:fT,dtype:"bool"}),aN={kernelName:ni,backendName:"webgpu",kernelFunc:Oq};var Lq=Ze({opType:Se.GREATER_EQUAL,dtype:"bool",cpuKernelImpl:mT}),lN={kernelName:ii,backendName:"webgpu",kernelFunc:Lq};function Mq(r){let{inputs:t,backend:e}=r,{input:o}=t;return Uh(o,!0,e)}var uN={kernelName:Tl,backendName:"webgpu",kernelFunc:Mq};var Bq=we({opType:ne.IS_FINITE,dtype:"bool"}),cN={kernelName:Nl,backendName:"webgpu",kernelFunc:Bq};var Vq=we({opType:ne.IS_INF,dtype:"bool"}),pN={kernelName:Rl,backendName:"webgpu",kernelFunc:Vq};var Wq=we({opType:ne.IS_NAN,dtype:"bool"}),dN={kernelName:$l,backendName:"webgpu",kernelFunc:Wq};function zq(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{alpha:i}=o,s=[{type:"float32",data:[i]}],a=new Jr(n.shape,ne.LEAKYRELU,"alpha : f32,");return e.runWebGPUProgram(a,[n],"float32",s)}var mN={kernelName:Pl,backendName:"webgpu",kernelFunc:zq};var Uq=Ze({opType:Se.LESS,dtype:"bool",cpuKernelImpl:gT}),fN={kernelName:si,backendName:"webgpu",kernelFunc:Uq};var Gq=Ze({opType:Se.LESS_EQUAL,dtype:"bool",cpuKernelImpl:hT}),hN={kernelName:ai,backendName:"webgpu",kernelFunc:Gq};var Xh=class{constructor(t){this.variableNames=[],this.outputShape=[],this.uniforms="start : f32, step : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[t],this.dispatchLayout=te(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="linSpace"}getUserCode(){return`
      ${Q("index")} {
        if (index < uniforms.size) {
          setOutputAtIndex(index, uniforms.start + f32(index) * uniforms.step);
        }
      }
    `}};function Hq(r){let{backend:t,attrs:e}=r,{start:o,stop:n,num:i}=e,s=(n-o)/(i-1),a=new Xh(i),l=[{type:"float32",data:[o]},{type:"float32",data:[s]}];return t.runWebGPUProgram(a,[],"float32",l)}var gN={kernelName:Dl,backendName:"webgpu",kernelFunc:Hq};var Kq=we({opType:ne.LOG,cpuKernelImpl:xT}),xN={kernelName:li,backendName:"webgpu",kernelFunc:Kq};var qq=we({opType:ne.LOG1P}),yN={kernelName:Al,backendName:"webgpu",kernelFunc:qq};var jq=Ze({opType:Se.LOGICAL_AND,dtype:"bool"}),bN={kernelName:Fl,backendName:"webgpu",kernelFunc:jq};var Xq=we({opType:ne.LOGICAL_NOT}),vN={kernelName:Ol,backendName:"webgpu",kernelFunc:Xq};var Yq=Ze({opType:Se.LOGICAL_OR}),SN={kernelName:Ll,backendName:"webgpu",kernelFunc:Yq};var wN=`
  var powValue = 0.0;
  let basis = uniforms.bias + uniforms.alpha * sum;
  if (uniforms.beta == 0.5) {
    powValue = inverseSqrt(basis);
  } else if (uniforms.beta == 1.0) {
    powValue = 1.0 / basis;
  } else {
    powValue = exp(log(basis) * (-uniforms.beta));
  }
`,Yh=class{constructor(t){this.outputShape=[],this.variableNames=["x"],this.uniforms="radius : i32, bias : f32, alpha : f32, beta : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=te(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="lrn"}getUserCode(){return`
    ${Q("index")} {
      if (index < uniforms.size) {
        let coords = getOutputCoords();
        let b = coords[0];
        let r = coords[1];
        let c = coords[2];
        let d = coords[3];

        let x = getX(b, r, c, d);
        var sum = 0.0;
        for (var i = -uniforms.radius; i <= uniforms.radius; i = i + 1) {
          let idx = d + i;
          if (idx >= 0 && idx < uniforms.xShape[3]) {
            let z = getX(b, r, c, idx);
            sum = sum + z * z;
          }
        }
        ${wN}

        setOutputAtIndex(index, x * powValue);
      }
    }
  `}},Qh=class{constructor(t,e){this.outputShape=[],this.variableNames=["x"],this.uniforms="radius : i32, bias : f32, alpha : f32, beta : f32,",this.workgroupSize=[256,1,1],this.maxAllowRadius=16,S.assert(e<=this.maxAllowRadius,()=>`Radius must be less than or equal to ${this.maxAllowRadius}, current radius is ${e}`),this.outputShape=t,this.elementsPerWorkgroup=this.workgroupSize[0]-2*this.maxAllowRadius,this.dispatchLayout={x:[3],y:[2],z:[0,1]},this.dispatch=Z(this.dispatchLayout,this.outputShape,[this.elementsPerWorkgroup,this.workgroupSize[1],this.workgroupSize[2]]),this.shaderKey="lrn_shared"}getUserCode(){return`
    var <workgroup>lrnSub: array<f32, ${this.workgroupSize[0]}>;
    const elementsPerWorkgroup = ${this.elementsPerWorkgroup};
    const maxAllowRadius = ${this.maxAllowRadius};

    ${Q()} {
      let localDepth = i32(localId.x);
      let workgroupDepth = i32(workgroupId.x) * elementsPerWorkgroup;
      let xDepth = workgroupDepth + localDepth - maxAllowRadius;
      let b = i32(globalId.z) / uniforms.xShape[1];
      let r = i32(globalId.z) - b * uniforms.xShape[1];
      let c = i32(globalId.y);
      let d = workgroupDepth + localDepth;

      var x = 0.0;
      if (xDepth >= 0 && xDepth < uniforms.xShape[3]) {
        x = getX(b, r, c, xDepth);
      }
      lrnSub[localDepth] = x;
      workgroupBarrier();

      if (localDepth < elementsPerWorkgroup && d < uniforms.outShape[3]) {
        var sum = 0.0;
        let index = localDepth + maxAllowRadius;
        for (var i = -uniforms.radius; i <= uniforms.radius; i = i + 1) {
          let z = lrnSub[index + i];
          sum = sum + z * z;
        }
        ${wN}

        setOutputAtCoords(b, r, c, d, lrnSub[index] * powValue);
      }
    } `}};function Qq(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{depthRadius:i,bias:s,alpha:a,beta:l}=o,u;i>16?u=new Yh(n.shape):u=new Qh(n.shape,i);let c=[{type:"int32",data:[i]},{type:"float32",data:[s]},{type:"float32",data:[a]},{type:"float32",data:[l]}];return e.runWebGPUProgram(u,[n],n.dtype,c)}var CN={kernelName:Ml,backendName:"webgpu",kernelFunc:Qq};var Zh=class{constructor(t){this.outputShape=[],this.variableNames=["inputImage","outputImage","dy"],this.uniforms="depthRadius : i32, bias : f32, alpha : f32, beta : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=te(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="lrn_grad"}getUserCode(){return`
    ${Q("index")} {
      if (index < uniforms.size) {
        let coords = getOutputCoords();
        let b = coords[0];
        let r = coords[1];
        let c = coords[2];

        let MIN_DEPTH_BEGIN = 0;
        let MAX_DEPTH_END = uniforms.outShape[3];
        var result = 0.0;
        for (var d = MIN_DEPTH_BEGIN; d < MAX_DEPTH_END; d++) {
          let depthBegin = max(MIN_DEPTH_BEGIN, d - uniforms.depthRadius);
          let depthEnd = min(MAX_DEPTH_END, d + uniforms.depthRadius + 1);

          var norm = 0.0;
          for (var k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; k++) {
            if (k < depthBegin) {
              continue;
            } else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            } else {
              break;
            }
          }

          norm = uniforms.alpha * norm + uniforms.bias;

          for (var k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; k++) {
            if (k < depthBegin) {
              continue;
            } else if (k >= depthBegin && k < depthEnd) {
              var dyi = -2.0 * uniforms.alpha * uniforms.beta
                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d) / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * uniforms.beta);
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            } else {
              break;
            }
          }
        }

        setOutputAtIndex(index, result);
      }
    }
  `}};function Zq(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,y:i,dy:s}=t,{depthRadius:a,bias:l,alpha:u,beta:c}=o,p=new Zh(n.shape),d=[{type:"int32",data:[a]},{type:"float32",data:[l]},{type:"float32",data:[u]},{type:"float32",data:[c]}];return e.runWebGPUProgram(p,[n,i,s],n.dtype,d)}var _N={kernelName:Gd,backendName:"webgpu",kernelFunc:Zq};var Jq=Ze({opType:Se.MAX,cpuKernelImpl:bT}),kN={kernelName:ui,backendName:"webgpu",kernelFunc:Jq};function e9(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{filterSize:i,strides:s,pad:a,dimRoundingMode:l}=o,c=R.computePool2DInfo(n.shape,i,s,1,a,l);return ph(n,c,"max",e)}var IN={kernelName:Vl,backendName:"webgpu",kernelFunc:e9};function t9(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{filterSize:i,strides:s,pad:a,dataFormat:l,dimRoundingMode:u}=o,c=[1,1,1],p=R.computePool3DInfo(n.shape,i,s,c,a,u,l),d=new Vi(p,"max"),m=[{type:"int32",data:[p.strideDepth,p.strideHeight,p.strideWidth]},{type:"int32",data:[p.padInfo.front,p.padInfo.top,p.padInfo.left]},{type:"int32",data:[p.inDepth,p.inHeight,p.inWidth]},{type:"int32",data:[p.effectiveFilterDepth,p.effectiveFilterHeight,p.effectiveFilterWidth]}];return e.runWebGPUProgram(d,[n],n.dtype,m)}var TN={kernelName:Wl,backendName:"webgpu",kernelFunc:t9};var Jh=class{constructor(t){this.variableNames=["dy","maxPos"],this.uniforms=`strides : vec2<i32>, pads : vec2<i32>, dilations : vec2<i32>, filterDims : vec2<i32>,
       outHeight : i32, outWidth : i32`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t.inShape,this.dispatchLayout=te(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="maxPool2DBackprop"}getUserCode(){return`
      ${Q("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords[0];
        let d = coords[3];

        let dyRCCorner = vec2<i32>(coords.yz) - uniforms.pads;
        let dyRCorner = dyRCCorner.x;
        let dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        let lastIndex = uniforms.filterDims[0] * uniforms.filterDims[1] - 1;
        for (var wR = 0; wR < uniforms.filterDims[0]; wR += uniforms.dilations[0]) {
          let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[0]);

          if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
            continue;
          }
          let idyR = i32(dyR);

          for (var wC = 0; wC < uniforms.filterDims[1]; wC += uniforms.dilations[1]) {
            let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[1]);

            if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
              continue;
            }
            let idyC = i32(dyC);

            let dyValue = getDy(batch, idyR, idyC, d);
            let maxPosValue = lastIndex - i32(getMaxPos(batch, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            let curPosValue = wR * uniforms.filterDims[1] + wC;
            let mask = select(0.0, 1.0, maxPosValue == curPosValue);
            dotProd += dyValue * mask;
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
    `}},eg=class{constructor(t){this.variableNames=["dy","maxPos"],this.uniforms=`strides : vec3<i32>, pads : vec3<i32>, filterDims : vec3<i32>,
      outDepth : i32, outHeight : i32, outWidth : i32`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t.inShape,this.dispatchLayout=te(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="maxPool3DBackprop"}getUserCode(){return`
      ${Q("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords.x;
        let ch = coords.u;

        let dyCorner = vec3<i32>(coords.y, coords.z, coords.w) - uniforms.pads;
        let dyDCorner = dyCorner.x;
        let dyRCorner = dyCorner.y;
        let dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        let lastIndex = uniforms.filterDims[0] * uniforms.filterDims[1] * uniforms.filterDims[2] - 1;

        for (var wD = 0; wD < uniforms.filterDims[0]; wD++) {
          let dyD = f32(dyDCorner + wD) / f32(uniforms.strides[0]);

          if (dyD < 0.0 || dyD >= f32(uniforms.outDepth) || fract(dyD) > 0.0) {
            continue;
          }
          let idyD = i32(dyD);

          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {
            let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[1]);

            if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
              continue;
            }
            let idyR = i32(dyR);

            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {
              let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[2]);

              if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
                continue;
              }
              let idyC = i32(dyC);

              let dyValue = getDy(batch, idyD, idyR, idyC, ch);
              let maxPosValue = lastIndex - i32(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              let curPosValue = wD * uniforms.filterDims[1] * uniforms.filterDims[2] + wR * uniforms.filterDims[2] + wC;
              let mask = select(0.0, 1.0, maxPosValue == curPosValue);
              dotProd += dyValue * mask;
            }
          }
        }

        setOutputAtIndex(index, dotProd);
      }
    }
    `}};function r9(r){let{inputs:t,backend:e,attrs:o}=r,{dy:n,input:i}=t,s=i,{filterSize:a,strides:l,pad:u,dimRoundingMode:c}=o,p=[1,1,1],d=R.computePool3DInfo(s.shape,a,l,p,u,c),m=new Vi(d,"max",!0),f=[{type:"int32",data:[d.strideDepth,d.strideHeight,d.strideWidth]},{type:"int32",data:[d.padInfo.front,d.padInfo.top,d.padInfo.left]},{type:"int32",data:[d.inDepth,d.inHeight,d.inWidth]},{type:"int32",data:[d.effectiveFilterDepth,d.effectiveFilterHeight,d.effectiveFilterWidth]}],g=e.runWebGPUProgram(m,[s],"int32",f),x=new eg(d);f=[{type:"int32",data:[d.strideDepth,d.strideHeight,d.strideWidth]},{type:"int32",data:[d.effectiveFilterDepth-1-d.padInfo.front,d.effectiveFilterHeight-1-d.padInfo.top,d.effectiveFilterWidth-1-d.padInfo.left]},{type:"int32",data:[d.effectiveFilterDepth,d.effectiveFilterHeight,d.effectiveFilterWidth]},{type:"int32",data:[d.outDepth]},{type:"int32",data:[d.outHeight]},{type:"int32",data:[d.outWidth]}];let y=e.runWebGPUProgram(x,[n,g],s.dtype,f);return e.disposeData(g.dataId),y}var EN={kernelName:Kd,backendName:"webgpu",kernelFunc:r9};function o9(r){let{inputs:t,backend:e,attrs:o}=r,{dy:n,input:i,output:s}=t,a=i;Np([i,s],"maxPoolGrad");let{filterSize:l,strides:u,pad:c,dimRoundingMode:p}=o,d=R.computePool2DInfo(a.shape,l,u,1,c,p),m=new ln(d,"max",!0),f=[{type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.padInfo.top,d.padInfo.left]},{type:"int32",data:[d.dilationHeight,d.dilationWidth]},{type:"int32",data:[d.inHeight,d.inWidth]},{type:"int32",data:[d.effectiveFilterHeight,d.effectiveFilterWidth]}],g=e.runWebGPUProgram(m,[a],"int32",f),x=new Jh(d);f=[{type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.effectiveFilterHeight-1-d.padInfo.top,d.effectiveFilterWidth-1-d.padInfo.left]},{type:"int32",data:[d.dilationHeight,d.dilationWidth]},{type:"int32",data:[d.effectiveFilterHeight,d.effectiveFilterWidth]},{type:"int32",data:[d.outHeight]},{type:"int32",data:[d.outWidth]}];let y=e.runWebGPUProgram(x,[n,g],a.dtype,f);return e.disposeData(g.dataId),y}var NN={kernelName:Hd,backendName:"webgpu",kernelFunc:o9};function n9(r){let{inputs:t,backend:e,attrs:o}=r,{filterSize:n,strides:i,pad:s,includeBatchInIndex:a}=o,{x:l}=t;S.assert(l.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${l.shape.length}.`);let u=[1,1];S.assert(R.eitherStridesOrDilationsAreOne(i,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);let c=R.computePool2DInfo(l.shape,n,i,u,s),p=[{type:"int32",data:[c.strideHeight,c.strideWidth]},{type:"int32",data:[c.padInfo.top,c.padInfo.left]},{type:"int32",data:[c.dilationHeight,c.dilationWidth]},{type:"int32",data:[c.inHeight,c.inWidth]},{type:"int32",data:[c.effectiveFilterHeight,c.effectiveFilterWidth]}],d=new ln(c,"max",!1),m=e.runWebGPUProgram(d,[l],l.dtype,p);d=new ln(c,"max",!0,!0,a);let f=e.runWebGPUProgram(d,[l],"int32",p);return[m,f]}var RN={kernelName:zl,backendName:"webgpu",kernelFunc:n9};function i9(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{axis:i,keepDims:s}=o;return eo(n,i,s,"min",e)}var $N={kernelName:Gl,backendName:"webgpu",kernelFunc:i9};var s9=Ze({opType:Se.MIN,cpuKernelImpl:vT}),PN={kernelName:ci,backendName:"webgpu",kernelFunc:s9};var tg=class{constructor(t,e,o){this.uniforms="",this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.map((n,i)=>n[0]+t[i]+n[1]),this.dispatchLayout=te(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize),this.xShape=t,e.map((n,i)=>{this.uniforms+=` pad${i} : vec2<i32>,`}),this.offset=o==="reflect"?0:1,this.shaderKey=`mirrorPad_${o}`}getUserCode(){let t=this.xShape.length,e=this.xShape.map((u,c)=>`uniforms.pad${c}[0]`).join(","),o=this.xShape.map((u,c)=>`uniforms.pad${c}[0] + uniforms.xShape${t>1?`[${c}]`:""}`).join(","),n=t===1?"start":"start[i]",i=t===1?"end":"end[i]",s=t===1?"outC":"outC[i]",a=ft(t),l=t>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,t):"coords";return`
      ${Q("index")} {
        if (index < uniforms.size) {
          let start = ${a}(${e});
          let end = ${a}(${o});
          var outC = getCoordsFromIndex(index);
          for (var i = 0; i < ${t}; i = i + 1) {
            if (${s} < ${n}) {
              ${s} = ${n} * 2 - ${s} - ${this.offset};
            } else if(${s} >= ${i}) {
              ${s} = (${i} - 1) * 2 - ${s} + ${this.offset};
            }
          }
          let coords = outC - start;
          setOutputAtIndex(index, getX(${l}));
        }
      }
    `}};var DN={kernelName:Hl,backendName:"webgpu",kernelFunc:({inputs:r,attrs:t,backend:e})=>{let{x:o}=r,{paddings:n,mode:i}=t,s=e,a=n.map(c=>({type:"int32",data:[c[0],c[1]]})),l=new tg(o.shape,n,i);return s.runWebGPUProgram(l,[o],o.dtype,a)}};var a9=Ze({opType:Se.MOD}),AN={kernelName:Kl,backendName:"webgpu",kernelFunc:a9};var rg=class{constructor(t,e){this.variableNames=["probs"],this.outputShape=[],this.uniforms="seed : f32, numOutcomes: i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[t,e],this.dispatchLayout=te(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="multinomial"}getUserCode(){return`
    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    fn random (seed : f32, resultUV : vec2<f32>) -> f32 {
      let HASHSCALE1 = 443.8975;
      let p = resultUV * seed;
      var p3  = fract(vec3<f32>(p.xyx) * HASHSCALE1);
      p3 = p3 + dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${Q("index")} {
      if (index < uniforms.size) {
        let coords = getOutputCoords();
        let batch = coords[0];

        let resUV = vec2<f32>(f32(coords[1]) / f32(uniforms.outShape[1]),
            f32(coords[0]) / f32(uniforms.outShape[0]));
        let r = random(uniforms.seed, resUV);
        var cdf = 0.0;
        for (var i = 0; i < uniforms.numOutcomes - 1; i = i + 1) {
          cdf = cdf + getProbs(batch, i);

          if (r < cdf) {
            setOutputAtIndexI32(index, i);
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutputAtIndexI32(index, uniforms.numOutcomes - 1);
      }
    }
  `}};var og=class{constructor(t){this.variableNames=["logits"],this.outputShape=t,this.dispatchLayout=te(this.outputShape),this.dispatch=[this.outputShape[0],1,1],this.outputShape[1]>=4096?this.workgroupSize=[256,1,1]:this.workgroupSize=[64,1,1],this.shaderKey="softmax"}getUserCode(){return`
    var<workgroup> buf : array<f32, ${this.workgroupSize[0]}>;
    var<workgroup> rowMaxShared : f32;
    var<workgroup> rowSumShared : f32;
    const blockSize = ${this.workgroupSize[0]};
    ${Q("index")} {
      let row = index / blockSize;
      let tid = i32(localId.x);
      let cols = uniforms.outShape[1];

      var threadMax = -3.402823e+38f;
      for (var col = tid; col < cols; col += blockSize) {
        let value = getLogits(row, col);
        threadMax = max(threadMax, value);
      }
      if (tid < cols) {
        buf[tid] = threadMax;
      }
      workgroupBarrier();

      var reduceSize = min(cols, blockSize);
      for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {
        reduceSize = currSize + (reduceSize & 1);
        if (tid < currSize) {
          buf[tid] = max(buf[tid], buf[tid + reduceSize]);
        }
        workgroupBarrier();
      }

      if (tid == 0) {
        rowMaxShared = buf[0];
      }
      workgroupBarrier();

      var threadSum = 0.0;
      for (var col = tid; col < cols; col += blockSize) {
        let subExp = exp(getLogits(row, col) - rowMaxShared);
        threadSum += subExp;
      }
      buf[tid] = threadSum;
      workgroupBarrier();

      for (var currSize = blockSize >> 1;  currSize > 0; currSize = currSize >> 1) {
        if (tid < currSize) {
          buf[tid] = buf[tid] + buf[tid + currSize];
        }
        workgroupBarrier();
      }

      if (tid == 0) {
        rowSumShared = buf[0];
      }
      workgroupBarrier();

      for (var col = tid; col < cols; col += blockSize) {
        let value = exp(getLogits(row, col) - rowMaxShared) / rowSumShared;
        setOutputAtCoords(row, col, value);
      }
  }
    `}};function tb(r){let{inputs:t,backend:e,attrs:o}=r,{logits:n}=t,{dim:i}=o,s=me({inputs:{x:n},backend:e,attrs:{shape:[S.sizeFromShape(n.shape)/n.shape[i],n.shape[i]]}}),a=new og(s.shape),l=e.runWebGPUProgram(a,[s],n.dtype),u=me({inputs:{x:l},backend:e,attrs:{shape:n.shape}});return e.disposeData(s.dataId),e.disposeData(l.dataId),u}var FN={kernelName:Cu,backendName:"webgpu",kernelFunc:tb};function l9(r){let{inputs:t,backend:e,attrs:o}=r,{logits:n}=t,{numSamples:i,seed:s,normalized:a}=o,l=a?n:tb({inputs:{logits:n},backend:e,attrs:{dim:n.shape.length-1}}),u=l.shape[0],c=l.shape[1],p=new rg(u,i),d=[{type:"float32",data:[s]},{type:"int32",data:[c]}],m=e.runWebGPUProgram(p,[l],"int32",d);return a||e.disposeData(l.dataId),m}var ON={kernelName:ql,backendName:"webgpu",kernelFunc:l9};function u9(r){let{inputs:t,backend:e}=r,{x:o}=t;if(e.shouldExecuteOnCPU([o])){let i=e.tensorMap.get(o.dataId),[s,a]=wT(i.values,o.shape,o.dtype);return e.makeTensorInfo(a,o.dtype,s)}let n=new Jr(o.shape,ne.NEG);return e.runWebGPUProgram(n,[o],o.dtype)}var LN={kernelName:us,backendName:"webgpu",kernelFunc:u9};function c9(r){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:e,attrs:o}=r,{boxes:n,scores:i}=t,{maxOutputSize:s,iouThreshold:a,scoreThreshold:l}=o,u=e.readSync(n.dataId),c=e.readSync(i.dataId),{selectedIndices:p}=jr.nonMaxSuppressionV3Impl(u,c,s,a,l);return e.makeTensorInfo([p.length],"int32",new Int32Array(p))}var MN={kernelName:jl,backendName:"webgpu",kernelFunc:c9};function p9(r){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:e,attrs:o}=r,{boxes:n,scores:i}=t,{maxOutputSize:s,iouThreshold:a,scoreThreshold:l,softNmsSigma:u}=o,c=e.readSync(n.dataId),p=e.readSync(i.dataId),d=s,m=a,f=l,g=u,{selectedIndices:x,selectedScores:y}=jr.nonMaxSuppressionV5Impl(c,p,d,m,f,g);return[e.makeTensorInfo([x.length],"int32",new Int32Array(x)),e.makeTensorInfo([y.length],"float32",new Float32Array(y))]}var BN={kernelName:Xl,backendName:"webgpu",kernelFunc:p9};var ng=class{constructor(t,e){this.variableNames=["x"],this.uniforms="onValue : f32, offValue : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[t,e],this.dispatchLayout=te(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="onehot"}getUserCode(){return`
      ${Q("index")} {
        if(index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          setOutputAtIndex(index, mix(uniforms.offValue, uniforms.onValue,
                                      f32(i32(round(getX(coords.x))) == coords.y)));
        }
      }
    `}};function d9(r){let{inputs:t,backend:e,attrs:o}=r,{indices:n}=t,{dtype:i,depth:s,onValue:a,offValue:l}=o,u=S.sizeFromShape(n.shape),c=new ng(u,s),p=me({inputs:{x:n},backend:e,attrs:{shape:[u]}}),d=[{type:"float32",data:[a]},{type:"float32",data:[l]}],m=e.runWebGPUProgram(c,[p],i,d);e.disposeData(p.dataId);let f=[...n.shape,s],g=me({inputs:{x:m},backend:e,attrs:{shape:f}});return e.disposeData(m.dataId),g}var VN={kernelName:Ql,backendName:"webgpu",kernelFunc:d9};function Mp(r){let{inputs:t,backend:e}=r,{x:o}=t;if(o.dtype==="complex64"){let n=On({inputs:{input:o},backend:e}),i=Mp({inputs:{x:n},backend:e}),s=Hs({inputs:{input:o},backend:e}),a=Mp({inputs:{x:s},backend:e}),l=mo({inputs:{real:i,imag:a},backend:e});return e.disposeData(n.dataId),e.disposeData(i.dataId),e.disposeData(s.dataId),e.disposeData(a.dataId),l}else return St({attrs:{shape:o.shape,dtype:o.dtype,value:o.dtype==="string"?"":0},backend:e})}var WN={kernelName:Ou,backendName:"webgpu",kernelFunc:Mp};function zN(r){let{inputs:t,backend:e}=r,{x:o}=t;if(o.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(o.dtype==="complex64"){let n=On({inputs:{input:o},backend:e}),i=zN({inputs:{x:n},backend:e}),s=Hs({inputs:{input:o},backend:e}),a=Mp({inputs:{x:s},backend:e}),l=mo({inputs:{real:i,imag:a},backend:e});return e.disposeData(n.dataId),e.disposeData(i.dataId),e.disposeData(s.dataId),e.disposeData(a.dataId),l}else return St({attrs:{shape:o.shape,dtype:o.dtype,value:1},backend:e})}var UN={kernelName:Yl,backendName:"webgpu",kernelFunc:zN};function m9(r){let{inputs:t,backend:e,attrs:o}=r,{axis:n}=o;if(t.length===1)return zh({inputs:{input:t[0]},backend:e,attrs:{dim:n}});let i=t[0].shape,s=t[0].dtype;t.forEach(c=>{S.assertShapesMatch(i,c.shape,"All tensors passed to stack must have matching shapes"),S.assert(s===c.dtype,()=>"All tensors passed to stack must have matching dtypes")});let a=[],l=t.map(c=>{let p=zh({inputs:{input:c},backend:e,attrs:{dim:n}});return a.push(p),p}),u=Y1({inputs:l,backend:e,attrs:{axis:n}});return a.forEach(c=>e.disposeData(c.dataId)),u}var GN={kernelName:Zl,backendName:"webgpu",kernelFunc:m9};function rb(r,t=!1){let e=r.length,o=ft(e),n=r.map((p,d)=>`uniforms.pad${d}[0]`).join(","),i=r.map((p,d)=>`uniforms.pad${d}[0] + uniforms.xShape${e>1?`[${d}]`:""}`).join(","),s=e>1?`${o}(${n})`:`${n}`,a=e>1?`${o}(${i})`:`${i}`,l=e>1?"any(paddedCoords < start)":"paddedCoords < start",u=e>1?"any(paddedCoords >= end)":"paddedCoords >= end",c=e>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,e):"coords";return`
        let start = ${s};
        let end = ${a};
        if (${l} || ${u}) {
          setOutputAtIndex(index, ${t?0:"uniforms.constantValue"});
        } else {
          let coords = paddedCoords - start;
          setOutputAtIndex(index, getX(${c}));
        }
  `}var ig=class{constructor(t,e){this.variableNames=["x"],this.uniforms="constantValue : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.map((o,n)=>o[0]+t[n]+o[1]),this.dispatchLayout=te(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize),e.map((o,n)=>{this.uniforms+=` pad${n} : vec2<i32>,`}),this.xShape=t,this.shaderKey="pad"}getUserCode(){return`
      ${Q("index")} {
        if (index < uniforms.size) {
          let paddedCoords = getCoordsFromIndex(index);
          ${rb(this.xShape)}
        }
      }
    `}};var f9=r=>{let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{paddings:i,constantValue:s}=o;if(i.every(u=>S.arraysEqual(u,[0,0])))return $t({inputs:{x:n},backend:e});if(S.sizeFromShape(n.shape)===0){let u=i.map((c,p)=>c[0]+n.shape[p]+c[1]);return St({backend:e,attrs:{shape:u,value:s,dtype:n.dtype}})}let a=[{type:"float32",data:[s]}];i.map(u=>a.push({type:"int32",data:[u[0],u[1]]}));let l=new ig(n.shape,i);return e.runWebGPUProgram(l,[n],n.dtype,a)},HN={kernelName:Jl,backendName:"webgpu",kernelFunc:f9};var h9=Ze({opType:Se.POW}),KN={kernelName:eu,backendName:"webgpu",kernelFunc:h9};function g9(r){let{inputs:t,backend:e}=r,{x:o,alpha:n}=t,i=new Fn(Se.PRELU,o.shape,n.shape);return e.runWebGPUProgram(i,[o,n],"float32")}var qN={kernelName:tu,backendName:"webgpu",kernelFunc:g9};function x9(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{axis:i,keepDims:s}=o;return eo(n,i,s,"prod",e)}var jN={kernelName:cs,backendName:"webgpu",kernelFunc:x9};var y9=r=>{let{backend:t,attrs:e}=r,{start:o,stop:n,step:i,dtype:s}=e,a=kT(o,n,i,s);return t.makeTensorInfo([a.length],s,a)},XN={kernelName:ru,backendName:"webgpu",kernelFunc:y9};var b9=Ze({opType:Se.DIV}),YN={kernelName:gl,backendName:"webgpu",kernelFunc:b9};var v9=we({opType:ne.RECIPROCAL}),QN={kernelName:ou,backendName:"webgpu",kernelFunc:v9};var S9=we({opType:ne.RELU}),ZN={kernelName:nu,backendName:"webgpu",kernelFunc:S9};var w9=we({opType:ne.RELU6}),JN={kernelName:lu,backendName:"webgpu",kernelFunc:w9};var sg=class{constructor(t,e,o){this.variableNames=["x"],this.uniforms="adjustHeightWidth : vec2<f32>, halfPixelCenters : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[t[0],e,o,t[3]],this.dispatchLayout=te(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="resizeBilinear"}getUserCode(){return`
      ${Q("index")} {
        if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let d = coords[3];
          let rc = coords.yz;

          let effectiveInSize = vec2<f32>(
            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveOutSize = vec2<f32>(
            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveInputOverOutputRatioRC =
              effectiveInSize / effectiveOutSize;

          // Fractional source index
          let sourceFracIndexRC =
            (vec2<f32>(rc) + vec2<f32>(uniforms.halfPixelCenters)) *
            effectiveInputOverOutputRatioRC - vec2<f32>(uniforms.halfPixelCenters);

          // Compute the four integer indices.
          let sourceFloorRC = vec2<i32>(sourceFracIndexRC);
          let sourceCeilRC = vec2<i32>(
            min(vec2<f32>(uniforms.xShape.yz) - vec2<f32>(1.0), ceil(sourceFracIndexRC)));

          let topLeft = getX(b, sourceFloorRC.x, sourceFloorRC.y, d);
          let bottomLeft = getX(b, sourceCeilRC.x, sourceFloorRC.y, d);
          let topRight = getX(b, sourceFloorRC.x, sourceCeilRC.y, d);
          let bottomRight = getX(b, sourceCeilRC.x, sourceCeilRC.y, d);

          let fracRC = sourceFracIndexRC - vec2<f32>(sourceFloorRC);

          let top = topLeft + (topRight - topLeft) * fracRC.y;
          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
          let newValue = top + (bottom - top) * fracRC.x;

          setOutputAtIndex(index, newValue);
        }
      }
    `}};function C9(r){let{inputs:t,backend:e,attrs:o}=r,{images:n}=t,{alignCorners:i,size:s,halfPixelCenters:a}=o,[l,u]=s,c=i&&l>1?1:0,p=i&&u>1?1:0,m=[{type:"float32",data:[c,p]},{type:"float32",data:[a?.5:0]}],f=new sg(n.shape,l,u);return e.runWebGPUProgram(f,[n],"float32",m)}var eR={kernelName:au,backendName:"webgpu",kernelFunc:C9};var ag=class{constructor(t,e){this.variableNames=["dy"],this.uniforms=`effectiveXSize : vec2<i32>, effectiveYSize : vec2<i32>, heightScale : f32, widthScale : f32,
       invHeightScale : f32, invWidthScale : f32, winHeight : i32, winWidth : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=te(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize),this.alignCorners=e,this.shaderKey=`resizeBilinearBackprop_${e}`}getUserCode(){return`
      ${Q("index")} {
        if (index < uniforms.size) {
          let coords = getOutputCoords();
          let b = coords[0];
          let d = coords[3];
          let r = coords[1];
          let c = coords[2];

          var accumulator = 0.0;

          // Compute bounds for where in dy we will look
          let startRLerp = floor(f32(r) * uniforms.invHeightScale);
          let startDyR = i32(startRLerp - f32(uniforms.winHeight / 2));

          let startCLerp = floor(f32(c) * uniforms.invWidthScale);
          let startDyC = i32(startCLerp - f32(uniforms.winWidth / 2));

          // Loop over dy
          for (var dyROffset = 0; dyROffset < uniforms.winHeight; dyROffset++) {
            let dyR = startDyR + dyROffset;

            // Guard against the window exceeding the bounds of dy
            if (dyR < 0 || dyR >= uniforms.dyShape[1]) {
              continue;
            }

            for (var dyCOffset = 0; dyCOffset < uniforms.winWidth; dyCOffset++) {
              let dyC = startDyC + dyCOffset;

              // Guard against the window exceeding the bounds of dy
              if (dyC < 0 || dyC >= uniforms.dyShape[2]) {
                continue;
              }

              let dxR = f32(dyR) * uniforms.heightScale;
              let topDxRIndex = i32(floor(dxR));
              let bottomDxRIndex = i32(min(ceil(dxR), f32(uniforms.outShape[1] - 1)));
              let dxRLerp = dxR - f32(topDxRIndex);
              let inverseDxRLerp = 1.0 - dxRLerp;

              let dxC = f32(dyC) * uniforms.widthScale;
              let leftDxCIndex = i32(floor(dxC));
              let rightDxCIndex = i32(min(ceil(dxC), f32(uniforms.outShape[2] - 1)));
              let dxCLerp = dxC - f32(leftDxCIndex);
              let inverseDxCLerp = 1.0 - dxCLerp;

              if (r == topDxRIndex && c == leftDxCIndex) {
                // topLeft
                accumulator +=
                  getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
              }

              if (r == topDxRIndex && c == rightDxCIndex) {
                // topRight
                accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
              }

              if (r == bottomDxRIndex && c == leftDxCIndex) {
                // bottomLeft
                accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
              }

              if (r == bottomDxRIndex && c == rightDxCIndex) {
                // bottomRight
                accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
              }
            }
          }
          // End loop over dy

          setOutputAtIndex(index, accumulator);
        }
      }
    `}};function _9(r){let{inputs:t,backend:e,attrs:o}=r,{images:n,dy:i}=t,{alignCorners:s}=o,[,a,l]=n.shape,[,u,c]=i.shape,p=[s&&u>1?a-1:a,s&&c>1?l-1:l],d=[s&&u>1?u-1:u,s&&c>1?c-1:c],m=p[0]/d[0],f=p[1]/d[1],g=1/m,x=1/f,y=Math.ceil(g)*2+2,v=Math.ceil(x)*2+2,k=new ag(n.shape,s),N=[{type:"int32",data:p},{type:"int32",data:d},{type:"float32",data:[m]},{type:"float32",data:[f]},{type:"float32",data:[g]},{type:"float32",data:[x]},{type:"int32",data:[y]},{type:"int32",data:[v]}];return e.runWebGPUProgram(k,[i],i.dtype,N)}var tR={kernelName:Zd,backendName:"webgpu",kernelFunc:_9};var lg=class{constructor(t,e,o,n){this.variableNames=["x"],this.uniforms="adjustHeightWidth : vec2<f32>, roundBase : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[t[0],e,o,t[3]],this.dispatchLayout=te(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize),this.halfPixelCenters=n,this.shaderKey=`resizeNearest_${n}`}getUserCode(){let t;return this.halfPixelCenters?t="max((vec2<f32>(rc) + vec2<f32>(0.5)) * effectiveInputOverOutputRatioRC, vec2<f32>(0.0))":t="vec2<f32>(rc) * effectiveInputOverOutputRatioRC",`
      ${Q("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let d = coords[3];
          let rc = coords.yz;

          let effectiveInSize = vec2<f32>(
            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveOutSize = vec2<f32>(
            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveInputOverOutputRatioRC =
              effectiveInSize / effectiveOutSize;

          // Fractional source index
          let sourceFracIndexRC = ${t};

          // Compute the coordinators of nearest neighbor point.
          let inputShapeRC = vec2<f32>(f32(uniforms.xShape.y), f32(uniforms.xShape.z));
          let sourceNearestRC = vec2<i32>(
            min(inputShapeRC - 1.0, floor(sourceFracIndexRC + uniforms.roundBase)));
          let newValue = getX(b, sourceNearestRC.x, sourceNearestRC.y, d);

          setOutputAtIndex(index, newValue);
        }
      }
    `}};function k9(r){let{inputs:t,backend:e,attrs:o}=r,{images:n}=t,{alignCorners:i,halfPixelCenters:s,size:a}=o,[l,u]=a,c=i&&l>1?1:0,p=i&&u>1?1:0,m=[{type:"float32",data:[c,p]},{type:"float32",data:[i?.5:0]}],f=new lg(n.shape,l,u,s);return e.runWebGPUProgram(f,[n],n.dtype,m)}var rR={kernelName:su,backendName:"webgpu",kernelFunc:k9};var ug=class{constructor(t,e){this.variableNames=["dy"],this.uniforms=`effectiveXSize : vec2<i32>, effectiveYSize : vec2<i32>, invHeightScale : f32, invWidthScale : f32,
       winHeight : i32, winWidth : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=te(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize),this.alignCorners=e,this.shaderKey=`resizeNearestNeigborBackprop_${e}`}getUserCode(){return`
      ${Q("index")} {
        if (index < uniforms.size) {
          let coords = getOutputCoords();
          let b = coords[0];
          let d = coords[3];
          let r = coords[1];
          let c = coords[2];

          var accumulator = 0.0;

          // Compute bounds for where in dy we will look
          let startRLerp = floor(f32(r) * uniforms.invHeightScale);
          let startDyR = i32(floor(startRLerp - f32(uniforms.winHeight / 2)));

          let startCLerp = floor(f32(c) * uniforms.invWidthScale);
          let startDyC = i32(floor(startCLerp - f32(uniforms.winWidth / 2)));

          // Loop over dy
          for (var dyROffset = 0; dyROffset < uniforms.winHeight; dyROffset++) {
            let dyR = startDyR + dyROffset;

            // Guard against the window exceeding the bounds of dy
            if (dyR < 0 || dyR >= uniforms.dyShape[1]) {
              continue;
            }

            for (var dyCOffset = 0; dyCOffset < uniforms.winWidth; dyCOffset++) {
              let dyC = startDyC + dyCOffset;

              // Guard against the window exceeding the bounds of dy
              if (dyC < 0 || dyC >= uniforms.dyShape[2]) {
                continue;
              }

              let sourceFracRow = f32(uniforms.effectiveXSize[0]) *
                  (f32(dyR) / f32(uniforms.effectiveYSize[0]));

              let sourceFracCol = f32(uniforms.effectiveXSize[1]) *
                  (f32(dyC) / f32(uniforms.effectiveYSize[1]));

              let sourceNearestRow =
                  i32(min(f32(uniforms.outShape[1] - 1),
                  ${this.alignCorners?"floor(sourceFracRow + 0.5)":"floor(sourceFracRow)"}));

              let sourceNearestCol =
                  i32(min(f32(uniforms.outShape[2] - 1),
                  ${this.alignCorners?"floor(sourceFracCol + 0.5)":"floor(sourceFracCol)"}));

              if (r == sourceNearestRow && c == sourceNearestCol) {
                accumulator += getDy(b, dyR, dyC, d);
              }
            }
          }
          // End loop over dy

          setOutputAtIndex(index, accumulator);
        }
      }
    `}};function I9(r){let{inputs:t,backend:e,attrs:o}=r,{images:n,dy:i}=t,{alignCorners:s}=o,[,a,l]=n.shape,[,u,c]=i.shape,p=[s&&u>1?a-1:a,s&&c>1?l-1:l],d=[s&&u>1?u-1:u,s&&c>1?c-1:c],m=p[0]/d[0],f=p[1]/d[1],g=1/m,x=1/f,y=Math.ceil(g)*2+2,v=Math.ceil(x)*2+2,k=new ug(n.shape,s),N=[{type:"int32",data:p},{type:"int32",data:d},{type:"float32",data:[g]},{type:"float32",data:[x]},{type:"int32",data:[y]},{type:"int32",data:[v]}];return e.runWebGPUProgram(k,[i],i.dtype,N)}var oR={kernelName:Qd,backendName:"webgpu",kernelFunc:I9};var cg=class{constructor(t){this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=te(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms=" axis : vec4<i32>,",this.shaderKey="reverse"}getUserCode(){return`
      
      // Using uniform variables as judging conditions, so the function has
      // coherent execution within all threads.
      fn getReverseCoords(coords : vec4<i32>) -> vec4<i32> {
        var reverseCoords = coords;
        if (uniforms.axis[0] == 1) {
          reverseCoords[0] = uniforms.xShape[0] - coords[0] - 1;
        }
        if (uniforms.axis[1] == 1) {
          reverseCoords[1] = uniforms.xShape[1] - coords[1] - 1;
        }
        if (uniforms.axis[2] == 1) {
          reverseCoords[2] = uniforms.xShape[2] - coords[2] - 1;
        }
        if (uniforms.axis[3] == 1) {
          reverseCoords[3] = uniforms.xShape[3] - coords[3] - 1;
        }

        return reverseCoords;
      }
    
      ${Q("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let reverseCoords = getReverseCoords(coords);
          setOutputAtIndex(index, getX(reverseCoords[0],
              reverseCoords[1], reverseCoords[2], reverseCoords[3]));
        }
      }
    `}};function T9(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{dims:i}=o,s=n.shape.length;if(s===0)return $t({inputs:{x:n},backend:e});let a=n.shape,l=[1,1,1,1];a.forEach((x,y)=>{let v=y+4-s;l[v]=x});let u=S.parseAxisParam(i,n.shape),c=[0,0,0,0];u.forEach(x=>{let y=x+4-s;c[y]=1});let p=[{type:"int32",data:c}],d=me({inputs:{x:n},backend:e,attrs:{shape:l}}),m=new cg(l),f=e.runWebGPUProgram(m,[d],d.dtype,p);e.disposeData(d.dataId);let g=me({inputs:{x:f},backend:e,attrs:{shape:a}});return e.disposeData(f.dataId),g}var nR={kernelName:uu,backendName:"webgpu",kernelFunc:T9};var pg=class{constructor(t,e){this.outputShape=[],this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=te(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms=`centerX : f32, centerY : f32, sinRadians : f32,
          cosRadians : f32,`,this.shaderKey="rotate",this.outputShape=t,typeof e=="number"?(this.uniforms+=" fillValue : f32,",this.fillSnippet="var outputValue = uniforms.fillValue;",this.shaderKey+="_float"):(this.uniforms+=" fillValue : vec3<f32>,",this.fillSnippet="var outputValue = uniforms.fillValue[coords[3]];",this.shaderKey+="_vec3")}getUserCode(){return`
        ${Q("index")} {
          if (index < uniforms.size) {
            let coords = getCoordsFromIndex(index);
            let coordXFloat = (f32(coords[2]) - uniforms.centerX) *
                uniforms.cosRadians - (f32(coords[1]) - uniforms.centerY) *
                uniforms.sinRadians;
            let coordYFloat = (f32(coords[2]) - uniforms.centerX) *
                uniforms.sinRadians + (f32(coords[1]) - uniforms.centerY) *
                uniforms.cosRadians;
            let coordX = i32(round(coordXFloat + uniforms.centerX));
            let coordY = i32(round(coordYFloat + uniforms.centerY));
            ${this.fillSnippet}
            if(coordX >= 0 && coordX < uniforms.xShape[2] && coordY >= 0 &&
                coordY < uniforms.xShape[1]) {
              outputValue = getX(coords[0], coordY, coordX, coords[3]);
            }
            setOutputAtIndex(index, outputValue);
          }
        }
      `}};var iR={kernelName:Mu,backendName:"webgpu",kernelFunc:({inputs:r,attrs:t,backend:e})=>{let{image:o}=r,{radians:n,fillValue:i,center:s}=t,a=e,l=new pg(o.shape,i),[u,c]=R.getImageCenter(s,o.shape[1],o.shape[2]),p=[{type:"float32",data:[u]},{type:"float32",data:[c]},{type:"float32",data:[Math.sin(n)]},{type:"float32",data:[Math.cos(n)]}];return typeof i=="number"?p.push({type:"float32",data:[Number.parseFloat(i.toFixed(2))]}):p.push({type:"float32",data:i}),a.runWebGPUProgram(l,[o],o.dtype,p)}};var E9=we({opType:ne.ROUND}),sR={kernelName:cu,backendName:"webgpu",kernelFunc:E9};var N9=we({opType:ne.RSQRT,cpuKernelImpl:IT}),aR={kernelName:mi,backendName:"webgpu",kernelFunc:N9};var un=class{constructor(t,e,o,n,i,s,a,l=!0){this.variableNames=["updates","indices"],this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=s,this.type=a,this.sumDupeIndices=l,this.dispatchLayout=te(t),this.dispatch=Z(this.dispatchLayout,t,this.workgroupSize),this.sliceDimGreaterThanOne=e>1,this.shaderKey=`scatter_${o}_${n}_${this.sliceDimGreaterThanOne}_${a}_${l}_${i.length}`;let u=ft(i.length);this.uniforms=`sliceDim : i32, strides: ${u}, updatesSize: i32,`,this.updatesRank=n,this.indicesRank=o}getUserCode(){let t="";this.indicesRank===1?t="coords[0]":this.indicesRank===2&&(t="coords[0], j");let e=`getIndices(${t})`,o=this.sliceDimGreaterThanOne?"uniforms.strides[j]":"uniforms.strides",n="",i="";this.dispatchLayout.x.length===1?(n="flattenedIndex",i=`
      fn getUpdatesCoordsFromFlatIndex(index : i32) -> i32 {
        return index;
      }
      `):this.dispatchLayout.x.length===2&&(n="vec2<i32>(flattenedIndex, coords[1])",i=`
      fn getUpdatesCoordsFromFlatIndex(index : i32) -> vec2<i32> {
        // N.B. |updates| could be a scalar tensor, conceptually representing a
        // 2D tensor with all values equal to that. By design, its size must be
        // the same as |outShape[1]| in one dimension, and |indicesShape[0]|
        // gives the other.
        let sliceSize = uniforms.outShape[1];
        let d0 = index / sliceSize;
        let d1 = index - d0 * sliceSize;
        return vec2<i32>(d0, d1);
      }
      `);let a=`getUpdates(${Array.from({length:this.updatesRank},(u,c)=>`coords[${c}]`).join(", ")})`;return`
    ${i}
      ${Q("index")} {
        if (index < uniforms.updatesSize) {
          let coords = getUpdatesCoordsFromFlatIndex(index);
          var flattenedIndex = 0;
          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
            let indexInside = i32(round(${e}));
            flattenedIndex = flattenedIndex + indexInside * ${o};
          }
          let updateValue =
              ${Li(this.type)}(${a});
          let flatIndex = getOutputIndexFromCoords(${n});

          ${this.sumDupeIndices?Qr("&result[flatIndex]","updateValue",this.type):"atomicStore(&result[flatIndex], bitcast<i32>(updateValue));"}
        }
      }`}};function R9(r){let{inputs:t,backend:e,attrs:o}=r,{indices:n,updates:i}=t,{shape:s}=o,{sliceRank:a,numUpdates:l,sliceSize:u,strides:c,outputSize:p}=R.calculateShapes(i,n,s),d=[p/u,u];if(p===0)return e.makeTensorInfo(s,n.dtype);let m=me({inputs:{x:n},backend:e,attrs:{shape:[l,a]}}),f=me({inputs:{x:i},backend:e,attrs:{shape:[l,u]}}),g=f.dtype,x=St({backend:e,attrs:{shape:d,value:0,dtype:g}}),y=S.sizeFromShape(f.shape),v=[{type:"int32",data:[a]},{type:"int32",data:c},{type:"int32",data:[y]}],k=new un(f.shape,a,m.shape.length,f.shape.length,c,d,g),N=e.runWebGPUProgram(k,[f,m],g,v,x),F=me({inputs:{x:N},backend:e,attrs:{shape:s}});return e.disposeData(m.dataId),e.disposeData(f.dataId),e.disposeData(N.dataId),F}var lR={kernelName:pu,backendName:"webgpu",kernelFunc:R9};var dg=class{constructor(t,e){this.outputShape=[],this.variableNames=["sortedSequence","values"],this.uniforms="numInputs : i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=te(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize),this.side=e,this.shaderKey=`search_sorted_${e}`}getUserCode(){return`
      fn findBound(batch: i32, value: f32) -> i32 {
        var left = i32(0);
        var right = uniforms.numInputs;
        while (left < right) {
          var mid = (left + right) / 2;
          if (getSortedSequence(batch, mid) ${this.side==="left"?"<":"<="} value) {
            left = mid + 1;
          } else {
            right = mid;
          }
        }
        return right;
      }

      ${Q("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let value = getValuesByOutputIndex(index);
          setOutputAtIndexI32(index, findBound(coords[0], value));
        }
      }
    `}};function $9(r){let{inputs:t,backend:e,attrs:o}=r,{sortedSequence:n,values:i}=t,{side:s}=o,a=new dg([i.shape[0],i.shape[1]],s),l=[{type:"int32",data:[n.shape[1]]}];return e.runWebGPUProgram(a,[n,i],"int32",l)}var uR={kernelName:mu,backendName:"webgpu",kernelFunc:$9};var mg=class{constructor(t,e,o){this.variableNames=["c","a","b"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=te(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize),this.cRank=t,this.rank=o,this.shaderKey="select"}getUserCode(){let t,e;if(this.rank>4)throw Error(`Where for rank ${this.rank} is not yet supported`);if(this.rank===1)e="resRC",t="resRC";else{let n=["resRC.x","resRC.y","resRC.z","resRC.w"],i=[],s=[];for(let a=0;a<this.outputShape.length;a++)s.push(`${n[a]}`),a<this.cRank&&i.push(`${n[a]}`);t=i.join(),e=s.join()}return`
      ${Q("index")} {
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          let cVal = getC(${t});
          if (cVal >= 1.0) {
            setOutputAtIndex(index, getA(${e}));
          } else {
            setOutputAtIndex(index, getB(${e}));
          }
        }
      }
    `}};function P9(r){let{inputs:t,backend:e}=r,{condition:o,t:n,e:i}=t,s=new mg(o.shape.length,n.shape,n.shape.length);return e.runWebGPUProgram(s,[o,n,i],Tt(n.dtype,i.dtype))}var cR={kernelName:fu,backendName:"webgpu",kernelFunc:P9};var D9=we({opType:ne.SELU}),pR={kernelName:hu,backendName:"webgpu",kernelFunc:D9};var A9=we({opType:ne.SIGMOID}),dR={kernelName:fi,backendName:"webgpu",kernelFunc:A9};var F9=we({opType:ne.SIGN}),mR={kernelName:yu,backendName:"webgpu",kernelFunc:F9};var O9=we({opType:ne.SIN}),fR={kernelName:gu,backendName:"webgpu",kernelFunc:O9};var L9=we({opType:ne.SINH}),hR={kernelName:xu,backendName:"webgpu",kernelFunc:L9};var M9=we({opType:ne.SOFTPLUS}),gR={kernelName:bu,backendName:"webgpu",kernelFunc:M9};var fg=class{constructor(t,e,o,n,i,s){this.variableNames=["x"],this.outputShape=[],this.uniforms="",this.workgroupSize=[64,1,1],this.size=!0;let a=new Array(n.length);for(let l=0;l<a.length;l++)a[l]=n[i[l]];this.outputShape=a,this.newDim=i,this.dispatchLayout=te(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize),this.xShape=t,this.paddedXShape=e,this.uniforms+=`reshapedPaddedXShape : ${ft(n.length)}, paddedXShapeStrides : ${ft(s)}, `,o.map((l,u)=>{this.uniforms+=` pad${u} : vec2<i32>,`}),this.shaderKey=`spaceToBatchND_${i}`}getUserCode(){let t=ft(this.outputShape.length),e=G1(this.newDim);return`
      ${kp(this.paddedXShape,"PaddedX")}
      ${Q("index")} {
        if(index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let switchedIndex = getIndexFromCoords${this.outputShape.length}D(${t}(${e}), uniforms.reshapedPaddedXShape);
          let paddedCoords = getPaddedXCoordsFromIndex(switchedIndex);
          ${rb(this.xShape,!0)}
        }
      }
    `}};var B9=r=>{let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{blockShape:i,paddings:s}=o;S.assert(n.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGPU backend not implemented yet");let a=i.reduce((v,k)=>v*k),l=[[0,0]];l.push(...s);for(let v=1+i.length;v<n.shape.length;++v)l.push([0,0]);let u=l.map((v,k)=>v[0]+n.shape[k]+v[1]),c=R.getReshaped(u,i,a,!1),p=R.getPermuted(c.length,i.length,!1),d=R.getReshapedPermuted(u,i,a,!1),m=S.computeStrides(u),f=new fg(n.shape,u,l,c,p,m.length),g=[{type:"int32",data:c},{type:"int32",data:m}];l.map(v=>g.push({type:"int32",data:[v[0],v[1]]}));let x=e.runWebGPUProgram(f,[n],n.dtype,g),y=me({inputs:{x},backend:e,attrs:{shape:d}});return e.disposeData(x.dataId),y},xR={kernelName:Su,backendName:"webgpu",kernelFunc:B9};var hg=class{constructor(t,e,o){this.variableNames=["input","indices","segmentIds"],this.outputShape=[],this.uniforms="segmentSize : i32, sparseSize : i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=t,this.type=o,this.dispatchLayout=te([e]),this.dispatch=Z(this.dispatchLayout,[e],this.workgroupSize),this.shaderKey="sparseSegmentSum"}getUserCode(){return`
    ${Q("index")} {
      if (index < uniforms.sparseSize) {
        let indexInSegmentIds = index / uniforms.segmentSize;
        let indexInSegment = index % uniforms.segmentSize;
        let indexInInput = indices[indexInSegmentIds];
        let segmentId = segmentIds[indexInSegmentIds];

        let value = input[indexInInput * uniforms.segmentSize + indexInSegment];
        let outIndex = segmentId * uniforms.segmentSize + indexInSegment;
        ${Qr("&result[outIndex]","value",this.type)}
      }
    }
  `}},gg=class{constructor(t,e){this.variableNames=["segmentIds"],this.outputShape=[],this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=[t],this.dispatchLayout=te(e),this.dispatch=Z(this.dispatchLayout,e,this.workgroupSize),this.shaderKey="sparseSegmentIdCountProgram"}getUserCode(){return`
    ${Q("index")} {
      if (index < uniforms.segmentIdsShape) {
        let segmentId = segmentIds[index];
        ${Qr("&result[segmentId]","1","int32")}
      }
    }
  `}},xg=class{constructor(t,e){this.variableNames=["segmentSum","sameSegmentIdCount"],this.outputShape=[],this.uniforms="segmentSize : i32",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.type=e,this.dispatchLayout=te(t),this.dispatch=Z(this.dispatchLayout,t,this.workgroupSize),this.shaderKey="sparseSegmentMean"}getUserCode(){return`
    ${Q("index")} {
      if (index < uniforms.size) {
        let segmentId = index / uniforms.segmentSize;
        let count = sameSegmentIdCount[segmentId];
        if (count != 0) {
          ${this.type==="float32"?"setOutputAtIndex(index, segmentSum[index] / f32(count));":"setOutputAtIndexI32(index, segmentSum[index] / count);"}
        }
      }
    }
  `}};function yg(r,t,e,o=!1,n){let s=S.sizeFromShape(r.shape)/r.shape[0],a=r.dtype,l=S.sizeFromShape(t.shape),u=n.readSync(e.dataId),p=l>0?u[l-1]+1:0,d,m=r.shape.slice();m[0]=p;let f=l*s,g=St({backend:n,attrs:{shape:m,value:0,dtype:a}});d=new hg(m,f,a);let x=[{type:"int32",data:[s]},{type:"int32",data:[f]}],y=n.runWebGPUProgram(d,[r,t,e],a,x,g);if(o)return y;let v=St({backend:n,attrs:{shape:[p],value:0,dtype:"int32"}});d=new gg(p,e.shape);let k=n.runWebGPUProgram(d,[e],"int32",null,v),N=St({backend:n,attrs:{shape:m,value:0,dtype:a}});d=new xg(m,a),x=[{type:"int32",data:[s]}];let F=n.runWebGPUProgram(d,[y,k],a,x,N);return n.disposeData(y.dataId),n.disposeData(k.dataId),F}function V9(r){let{inputs:t,backend:e}=r,{data:o,indices:n,segmentIds:i}=t;return yg(o,n,i,!1,e)}var yR={kernelName:_u,backendName:"webgpu",kernelFunc:V9};function W9(r){let{inputs:t,backend:e}=r,{data:o,indices:n,segmentIds:i}=t;return yg(o,n,i,!0,e)}var bR={kernelName:ku,backendName:"webgpu",kernelFunc:W9};var bg=class{constructor(t,e){this.variableNames=["A"],this.workgroupSize=[64,1,1],this.size=!0;let o=new Array(t.length);for(let n=0;n<o.length;n++)o[n]=t[n]*e[n];this.outputShape=o,this.dispatchLayout=te(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize),this.rank=this.outputShape.length,this.shaderKey="tile"}getUserCode(){let t=z9(this.rank,"uniforms.");return`
      ${Q("index")} {
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          setOutputAtIndex(index, getA(${t}));
        }
      }
    `}};function z9(r,t=""){if(r>=5)throw Error(`Tile for rank ${r} is not yet supported`);if(r===1)return`(resRC % ${t}aShape)`;let e=["resRC.x","resRC.y","resRC.z","resRC.w"],o=[];for(let n=0;n<r;n++)o.push(`(${e[n]} % ${t}aShape[${n}])`);return o.join()}function Bp(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{reps:i}=o;if(e.shouldExecuteOnCPU([n])||n.dtype==="string"||n.shape.length>=5){let l=e.readSync(n.dataId),u=n.dtype==="string"?l.map(d=>S.decodeString(d)):l,c=Oe(n.shape,n.dtype,u),p=DT(c,i);return e.makeTensorInfo(p.shape,p.dtype,p.values)}let s=new bg(n.shape,i);return e.runWebGPUProgram(s,[n],n.dtype)}var vR={kernelName:yi,backendName:"webgpu",kernelFunc:Bp};function U9(r){let{inputs:t,backend:e,attrs:o}=r,{sparseIndices:n,sparseValues:i,defaultValue:s}=t,{outputShape:a}=o,{sliceRank:l,numUpdates:u,sliceSize:c,strides:p,outputSize:d}=R.calculateShapes(i,n,a),m=!1;if(i.dtype==="string"){let H=e.bufferSync(n),K=e.bufferSync(i),j=S.decodeString(e.readSync(s.dataId)[0]),J=TT(H,K,a,d,c,u,l,p,j,m);return e.makeTensorInfo(a,J.dtype,J.values)}let f=[d/c,c],g=me({inputs:{x:n},backend:e,attrs:{shape:[u,l]}}),x=i.shape.length?me({inputs:{x:i},backend:e,attrs:{shape:[u,c]}}):$t({inputs:{x:i},backend:e}),y=x.dtype,v=e.makeTensorInfo([],y,S.makeZerosTypedArray(1,y)),k=me({inputs:{x:s},backend:e,attrs:{shape:Array(f.length).fill(1)}}),N=Bp({inputs:{x:k},backend:e,attrs:{reps:f}}),F=S.sizeFromShape([u,c]),M=[{type:"int32",data:[l]},{type:"int32",data:p},{type:"int32",data:[F]}];switch(u){case 0:break;case 1:{let H=new un([u,c],l,g.shape.length,x.shape.length,p,f,y,m);e.runWebGPUProgram(H,[x,g],y,M,N)}break;default:{let H=new un([u,c],l,g.shape.length,v.shape.length,p,f,y,m);e.runWebGPUProgram(H,[v,g],y,M,N)}{let H=new un([u,c],l,g.shape.length,x.shape.length,p,f,y);e.runWebGPUProgram(H,[x,g],y,M,N)}}let z=me({inputs:{x:N},backend:e,attrs:{shape:a}});return e.disposeData(g.dataId),e.disposeData(x.dataId),e.disposeData(k.dataId),e.disposeData(v.dataId),e.disposeData(N.dataId),z}var SR={kernelName:Iu,backendName:"webgpu",kernelFunc:U9};function G9(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{numOrSizeSplits:i,axis:s}=o,a=S.parseAxisParam(s,n.shape)[0],l=R.prepareSplitSize(n,i,a),u=n.shape.length,c=new Array(u).fill(0),p=n.shape.slice();return l.map(d=>{let m=[...p];m[a]=d;let f=Bo({inputs:{x:n},backend:e,attrs:{begin:c,size:m}});return c[a]+=d,f})}var wR={kernelName:wu,backendName:"webgpu",kernelFunc:G9};var H9=we({opType:ne.SQRT}),CR={kernelName:hi,backendName:"webgpu",kernelFunc:H9};var _R={kernelName:tm,backendName:"webgpu",kernelFunc:({inputs:r,backend:t})=>{let{x:e}=r,o=t,n=new Jr(e.shape,ne.SQUARE);return o.runWebGPUProgram(n,[e],e.dtype)}};var K9=Ze({opType:Se.SQUARED_DIFFERENCE}),kR={kernelName:gi,backendName:"webgpu",kernelFunc:K9};function q9({inputs:r,attrs:t,backend:e}){let{x:o}=r,n=new Jr(o.shape,ne.STEP,"stepAlpha : f32,"),i=[{type:"float32",data:[t.alpha]}];return e.runWebGPUProgram(n,[o],o.dtype,i)}var IR={kernelName:Lu,backendName:"webgpu",kernelFunc:q9};var vg=class{constructor(t){this.variableNames=["x"],this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=te(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]);let e=ft(this.outputShape.length);this.uniforms=`begin : ${e},  strides : ${e}, `,this.shaderKey="stridedSlice"}getUserCode(){let t=this.outputShape.length,e="";if(t===1)e="coords * uniforms.strides + uniforms.begin";else{let n=0;e=this.outputShape.map((i,s)=>(n++,this.outputShape.length===1?`coords * uniforms.strides[${s}] + uniforms.begin[${s}]`:`coords[${n-1}] * uniforms.strides[${s}] + uniforms.begin[${s}]`)).join(",")}return`
       ${Q("index")} {
         if (index < uniforms.size) {
           let coords = getCoordsFromIndex(index);
           setOutputAtIndex(index, getX(${e}));
         }
       }
     `}};function j9(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{begin:i,end:s,strides:a,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:p,shrinkAxisMask:d}=o,{finalShapeSparse:m,finalShape:f,isIdentity:g,sliceDim0:x,isSimpleSlice:y,begin:v,end:k,strides:N}=Ut.sliceInfo(n.shape,i,s,a,l,u,c,p,d),F;if(g)F=me({inputs:{x:n},backend:e,attrs:{shape:f}});else if(x||y){S.assert(n.shape.length>=1,()=>`Input must have rank at least 1, got: ${n.shape.length}`);let M=Ut.computeOutShape(v,k,N),z=Bo({inputs:{x:n},backend:e,attrs:{begin:v,size:M}});F=me({inputs:{x:z},backend:e,attrs:{shape:f}}),e.disposeData(z.dataId)}else if(e.shouldExecuteOnCPU([n])){let z=e.readSync(n.dataId),H=Oe(n.shape,n.dtype,z),K=RT(m,H,N,v);F=e.makeTensorInfo(f,n.dtype,K.values)}else{let z=new vg(m),H=[{type:"int32",data:v},{type:"int32",data:N}],K=e.runWebGPUProgram(z,[n],n.dtype,H);F=me({inputs:{x:K},backend:e,attrs:{shape:f}}),e.disposeData(K.dataId)}return F}var TR={kernelName:Eu,backendName:"webgpu",kernelFunc:j9};function X9(r){let{inputs:t,backend:e,attrs:o}=r,{separator:n,nGramWidths:i,leftPad:s,rightPad:a,padWidth:l,preserveShortSequences:u}=o,{data:c,dataSplits:p}=t,d=e.readSync(c.dataId),m=e.readSync(p.dataId),[f,g]=$T(d,m,n,i,s,a,l,u);return[e.makeTensorInfo([f.length],"string",f),e.makeTensorInfo(p.shape,"int32",g)]}var ER={kernelName:Nu,backendName:"webgpu",kernelFunc:X9};var Y9=Ze({opType:Se.SUB,cpuKernelImpl:PT,supportsComplex:!0}),NR={kernelName:xi,backendName:"webgpu",kernelFunc:Y9};var Q9=we({opType:ne.TAN}),RR={kernelName:Ru,backendName:"webgpu",kernelFunc:Q9};var Z9=we({opType:ne.TANH}),$R={kernelName:$u,backendName:"webgpu",kernelFunc:Z9};function J9(r){let{inputs:t,backend:e,attrs:o}=r,{tensor:n,indices:i,updates:s}=t,{}=o,{sliceRank:a,numUpdates:l,sliceSize:u,strides:c,outputSize:p}=R.calculateShapes(s,i,n.shape),d=[p/u,u];if(p===0)return e.makeTensorInfo(n.shape,i.dtype);let m=[],f=me({inputs:{x:i},backend:e,attrs:{shape:[l,a]}});m.push(f);let g=me({inputs:{x:s},backend:e,attrs:{shape:[l,u]}});m.push(g);let x=me({inputs:{x:n},backend:e,attrs:{shape:d}});m.push(x);let y=Bp({inputs:{x},backend:e,attrs:{reps:Array(d.length).fill(1)}}),v=new un([l,u],a,f.shape.length,g.shape.length,c,d,n.dtype,!1),k=S.sizeFromShape([l,u]),N=[{type:"int32",data:[a]},{type:"int32",data:c},{type:"int32",data:[k]}],F=e.runWebGPUProgram(v,[g,f],x.dtype,N,y);m.push(F);let M=me({inputs:{x:F},backend:e,attrs:{shape:n.shape}});return m.forEach(z=>e.disposeData(z.dataId)),M}var PR={kernelName:du,backendName:"webgpu",kernelFunc:J9};var Sg=class{constructor(t){this.variableNames=["x","indices"],this.workgroupSize=[256,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=te(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms=`inputSize : i32, firstPass : i32, negativeInf : f32,
        dir : i32, inc : i32,`,this.shaderKey="swap"}getUserCode(){return`
        ${Q("index")} {
          if (index < uniforms.size) {
            let outC = getCoordsFromIndex(index);
            let batch = outC[0];
            let elemIdx = outC[1];
            // We compare elements pair-wise within a group of size 2 * inc.
            // The comparing rule for each group alternates between ascending
            // and descending. Within each group, we compare each pair at
            // positions i and i+inc. To decide whether an element at position i
            // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
            // inc, it is in the first half of the group, we denote it as x0,
            // otherwise we denote it as x1.
            // For example, as shown in the Bitonic top K paper referenced
            // above, Figure5(a) shows that element[1] is in the second half of
            // the group when group size is 2, but it is in the first half of
            // the group when group size is 4.
            let isFirstInPair = elemIdx % (2 * uniforms.inc) < uniforms.inc;
            var i = 0;
            if (isFirstInPair) {
              i = elemIdx;
            } else {
              i = elemIdx - uniforms.inc;
            }

            var i0 = 0;
            if (uniforms.firstPass == 1) {
              i0 = i;
            } else {
              i0 = i32(getIndices(batch, i));
            }

            var i1 = 0;
            if (uniforms.firstPass == 1) {
              i1 = i + uniforms.inc;
            } else {
              i1 = i32(getIndices(batch, i + uniforms.inc));
            }

            var x0 = f32(0.0);
            var x1 = f32(0.0);
            if (i0 < uniforms.inputSize) {
              x0 = getX(batch, i0);
            } else {
              x0 = uniforms.negativeInf;
            }
            if (i1 < uniforms.inputSize) {
              x1 = getX(batch, i1);
            } else {
              x1 = uniforms.negativeInf;
            }

            let reverse = elemIdx % (2 * uniforms.dir) >= uniforms.dir;
            let isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
            if (reverse == isGreater) {
              // Elements in opposite order of direction
              let iTemp = i0;
              i0 = i1;
              i1 = iTemp;
            }
            if (isFirstInPair) {
              setOutputAtIndex(index, f32(i0));
            } else {
              setOutputAtIndex(index, f32(i1));
            }
          }
        }
      `}},wg=class{constructor(t){this.variableNames=["x","indices"],this.workgroupSize=[256,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=te(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms="inputSize : i32, firstPass : i32, k : i32,",this.shaderKey="merge"}getUserCode(){return`
        ${Q("index")} {
          if (index < uniforms.size) {
            let outC = getCoordsFromIndex(index);
            let batch = outC[0];
            let elemIdx = outC[1];
            // The output size is half of the previous size.
            // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _
            // (k=4), we only need to output the indices at positions |, the
            // indices at positions _ can be thrown away, see Figure5(b) After
            // Phase 2 (Merge phase) in the Bitonic Top K paper referenced
            // above.
            // For example, the paper shows we only need to output the orange
            // bars. The output sequence should look like this | | | | | | | |.
            // Because the sequence is halved, to map the output index back to
            // the previous sequence to find the corresponding value, we need
            // to double the index. When we double the index, we basically
            // interpolate a position, so 2i looks like
            // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k
            // position of each 2k positions by - elemIdx % k. E.g. for output
            // at index 4,5,6,7, we want to get the corresponding element at
            // original index 8,9,10,11, for output at index 8,9,10,11,
            // we want to get the corresponding element at original index
            // 16,17,18,19, so on and so forth.

            var i = 0;
            if (elemIdx < uniforms.k) {
              i = elemIdx;
            } else {
              i = elemIdx * 2 - elemIdx % uniforms.k;
            }
            var i0 = 0;
            if (uniforms.firstPass == 1) {
              i0 = i;
            } else {
              i0 = i32(getIndices(batch, i));
            }
            var i1 = 0;
            if (uniforms.firstPass == 1) {
              i1 = i + uniforms.k;
            } else {
              i1 = i32(getIndices(batch, i + uniforms.k));
            }

            let x0 = getX(batch, i0);
            var x1 = f32(0.0);
            if (i1 < uniforms.inputSize) {
              x1 = getX(batch, i1);
            } else {
              x1 = x0;
            }

            if (x0 >= x1) {
              setOutputAtIndex(index, f32(i0));
            } else {
              setOutputAtIndex(index, f32(i1));
            }
          }
        }
      `}};function xc(r,t){t!==null&&r.disposeData(t.dataId)}function DR(r){let t=1;for(;t<r;)t*=2;return t}function ej(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{k:i,sorted:s}=o,a=n.shape,l=a[a.length-1];if(e.shouldExecuteOnCPU([n])){let F=e.readSync(n.dataId),[M,z]=AT(F,a,n.dtype,i,s);return[e.makeTensorInfo(M.shape,M.dtype,M.values),e.makeTensorInfo(z.shape,z.dtype,z.values)]}if(i===0)return a[a.length-1]=0,[e.makeTensorInfo(a,n.dtype,[]),e.makeTensorInfo(a,"int32",[])];if(l===1)return[n,St({attrs:{shape:a,dtype:"int32",value:0},backend:e})];let c=S.sizeFromShape(a)/l,p=me({inputs:{x:n},attrs:{shape:[c,l]},backend:e}),d=DR(i),m=DR(l),f=null,g=()=>f===null?[p,p]:[p,f],x=(F,M,z)=>{let H=g(),K=new Sg(z),J=[{type:"int32",data:[l]},{type:"int32",data:[f===null?1:0]},{type:"float32",data:[Number.NEGATIVE_INFINITY]},{type:"int32",data:[F]},{type:"int32",data:[M]}],ue=f;f=e.runWebGPUProgram(K,H,"int32",J),xc(e,ue)};for(let F=1;F<d;F*=2){let M=F*2;for(let z=F;z>=1;z/=2)x(M,z,[c,m])}for(let F=m;F>d;F/=2){let M=g(),z=new wg([c,F/2]),K=[{type:"int32",data:[l]},{type:"int32",data:[f===null?1:0]},{type:"int32",data:[d]}],j=f;f=e.runWebGPUProgram(z,M,"int32",K),xc(e,j);let J=d/2,ue=J*2;for(let ce=J;ce>=1;ce/=2)x(ue,ce,f.shape)}let y=f;f=Bo({inputs:{x:f},backend:e,attrs:{begin:0,size:[c,i]}}),xc(e,y);let v=eb({inputs:{x:p,indices:f},backend:e,attrs:{axis:1,batchDims:1}});xc(e,p);let k=a.slice(0,-1);k.push(i),y=f,f=me({inputs:{x:f},attrs:{shape:k},backend:e}),xc(e,y);let N=v;return v=me({inputs:{x:v},attrs:{shape:k},backend:e}),xc(e,N),[v,f]}var AR={kernelName:Pu,backendName:"webgpu",kernelFunc:ej};var Cg=class{constructor(t){this.variableNames=["Image","Transforms"],this.uniforms="interpolationModeId : i32, fillModeId : i32, fillValue : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=te(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="transform"}getUserCode(){return`
          fn mapCoord(outCoord : f32, len : f32) -> f32{
            var inCoord = outCoord;
            if(uniforms.fillModeId == 2) {
              if (inCoord < 0.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz2 = 2.0 * len;
                  if (inCoord < sz2) {
                    inCoord = sz2 * f32(i32(f32(-inCoord / sz2))) +
                    inCoord;
                  }
                  if (inCoord < -len) {
                    inCoord = inCoord + sz2;
                  } else {
                    inCoord = -inCoord - 1.0;
                  }
                }
              } else if (inCoord > len - 1.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz2 = 2.0 * len;
                  inCoord = inCoord - sz2 * f32(i32(f32(inCoord / sz2)));
                  if (inCoord >= len) {
                    inCoord = sz2 - inCoord - 1.0;
                  }
                }
              }
              return clamp(inCoord, 0.0, len - 1.0);
            } else if (uniforms.fillModeId == 3) {
              if (inCoord < 0.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz = len - 1.0;
                  inCoord = inCoord + len * (f32(i32(f32(-inCoord / sz))) + 1.0);
                }
              } else if (inCoord > len - 1.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz = len - 1.0;
                  inCoord = inCoord - len * f32(i32(f32(inCoord / sz)));
                }
              }
              return clamp(inCoord, 0.0, len - 1.0);
            } else if (uniforms.fillModeId == 4) {
              return clamp(outCoord, 0.0, len - 1.0);
            }
            return outCoord;
          }
          fn readWithFillValue(batch : i32, coordY : i32, coordX : i32,
            channel : i32) -> f32 {
            var outputValue : f32;
            if (0 <= coordY && coordY < uniforms.imageShape[1] && 0 <= coordX && coordX < uniforms.imageShape[2]) {
                outputValue = getImage(batch, coordY, coordX, channel);
            } else {
              outputValue = uniforms.fillValue;
            }
            return outputValue;
          }

          ${Q("index")} {
            if (index < uniforms.size) {
              let coords = getCoordsFromIndex(index);
              var outputValue : f32;
              let batch = coords[0];
              let x = coords[2];
              let y = coords[1];
              let channel = coords[3];
              let xf = f32(x);
              let yf = f32(y);
              let a1 = getTransforms(batch, 0);
              let a2 = getTransforms(batch, 1);
              let a3 = getTransforms(batch, 2);
              let b1 = getTransforms(batch, 3);
              let b2 = getTransforms(batch, 4);
              let b3 = getTransforms(batch, 5);
              let c1 = getTransforms(batch, 6);
              let c2 = getTransforms(batch, 7);
              let projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = uniforms.fillValue;
              } else {
                let inX = (a1 * xf + a2 * yf + a3) / projection;
                let inY = (b1 * xf + b2 * yf + b3) / projection;
                let mapX = mapCoord(inX, f32(uniforms.imageShape[2]));
                let mapY = mapCoord(inY, f32(uniforms.imageShape[1]));

                if (uniforms.interpolationModeId == 1) {
                  let coordY = i32(round(mapY));
                  let coordX = i32(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  let yFloor = floor(mapY);
                  let xFloor = floor(mapX);
                  let yCeil = yFloor + 1.0;
                  let xCeil = xFloor + 1.0;
                  let valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, i32(yFloor), i32(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, i32(yFloor), i32(xCeil), channel);
                  let valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, i32(yCeil), i32(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, i32(yCeil), i32(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutputAtIndex(index, outputValue);
            }
          }
        `}};function tj(r){let{inputs:t,backend:e,attrs:o}=r,{image:n,transforms:i}=t,{interpolation:s,fillMode:a,fillValue:l,outputShape:u}=o,[c,p,d,m]=n.shape,[f,g]=u??[p,d],x=[c,f,g,m],y=new Cg(x),v=s==="nearest"?1:2,k;switch(a){case"constant":k=1;break;case"reflect":k=2;break;case"wrap":k=3;break;case"nearest":k=4;break;default:k=1;break}let N=[{type:"int32",data:[v]},{type:"int32",data:[k]},{type:"float32",data:[l]}];return e.runWebGPUProgram(y,[n,i],"float32",N)}var FR={kernelName:Du,backendName:"webgpu",kernelFunc:tj};function rj(r){let{inputs:t,backend:e,attrs:o}=r,{value:n}=t,{axis:i}=o;i<0&&(i+=n.shape.length);let s=n,a=s.shape.length,l=n.shape[i],u=new Array(a-1),c=0;for(let g=0;g<a;g++)g!==i&&(u[c++]=s.shape[g]);let p=[],d=new Array(a).fill(0),m=s.shape.slice();m[i]=1;let f=new Array(l);for(let g=0;g<f.length;g++){d[i]=g;let x=Bo({inputs:{x:s},backend:e,attrs:{begin:d,size:m}}),y=me({inputs:{x},backend:e,attrs:{shape:u}});f[g]=y,p.push(x)}return p.forEach(g=>e.disposeData(g.dataId)),f}var OR={kernelName:Au,backendName:"webgpu",kernelFunc:rj};var _g=class{constructor(t,e,o){if(this.outputShape=[],this.variableNames=["x","segmentIds"],this.uniforms="numSegments : i32, xSize: i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=e,this.dispatchLayout=te(t),this.dispatch=Z(this.dispatchLayout,t,this.workgroupSize),o!=="float32"&&o!=="int32")throw new Error(`UnsortedSegmentSum only supports float32 and int32
              types, does not support ${o} type.`);this.type=o,this.shaderKey="unsortedSegmentSum"}getUserCode(){return`
    ${Q("index")} {
      if (index < uniforms.xSize) {
        let coords = getXCoordsFromIndex(index);
        let b = coords[0];
        let inCol = coords[1];

        let segmentId = i32(getSegmentIds(inCol));
        if (segmentId >= 0) {
          let flatIndex = b * uniforms.numSegments + segmentId % uniforms.numSegments;
          let value = getX(b, inCol);

          ${Qr("&result[flatIndex]","value",this.type)}
        }
      }
    }
  `}};function oj(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,segmentIds:i}=t,{numSegments:s}=o,a=n.shape.length,l=[],u=0,c=R.getAxesPermutation([u],a),p=n;c!=null&&(p=dr({inputs:{x:n},backend:e,attrs:{perm:c}}),l.push(p),u=R.getInnerMostAxes(1,a)[0]);let d=R.segment_util.computeOutShape(p.shape,u,s),m=S.sizeFromShape([p.shape[u]]),f=me({inputs:{x:p},backend:e,attrs:{shape:[-1,m]}});l.push(f);let g=n.dtype,x=[f.shape[0],s],y=St({backend:e,attrs:{shape:x,value:0,dtype:g}}),v=new _g(f.shape,x,g),k=[{type:"int32",data:[s]},{type:"int32",data:[S.sizeFromShape(f.shape)]}],N=e.runWebGPUProgram(v,[f,i],g,k,y),F=me({inputs:{x:N},backend:e,attrs:{shape:d}});l.push(N);let M=F;if(c!=null){l.push(F);let z=R.getUndoAxesPermutation(c);M=dr({inputs:{x:M},backend:e,attrs:{perm:z}})}return l.forEach(z=>e.disposeData(z.dataId)),M}var LR={kernelName:Fu,backendName:"webgpu",kernelFunc:oj};var nj=[yI,OT,LT,MT,BT,VT,zT,UT,GT,HT,KT,qT,jT,XT,YT,JT,eE,tE,rE,oE,iE,sE,aE,pE,dE,mE,vI,hE,xE,yE,bE,vE,SE,wE,CE,_E,kE,IE,NE,RE,$E,PE,AE,FE,DE,OE,LE,ME,BE,VE,UE,GE,HE,KE,qE,jE,XE,YE,QE,gI,ZE,tN,JE,eN,rN,oN,nN,iN,sN,aN,lN,bI,uN,gE,cN,pN,dN,mN,fN,hN,gN,yN,xN,bN,vN,SN,CN,_N,QT,kN,IN,NN,TN,EN,RN,ZT,$N,PN,DN,AN,ON,WE,LN,MN,BN,lE,VN,UN,GN,HN,KN,qN,jN,XN,uE,YN,QN,ZN,JN,xI,eR,tR,rR,oR,nR,iR,sR,aR,lR,uR,cR,pR,dR,mR,fR,hR,nE,IR,TR,ER,FN,gR,xR,yR,bR,SR,wR,CR,_R,kR,NR,zE,RR,$R,PR,vR,AR,FR,WT,OR,LR,WN];for(let r of nj)sm(r);var h3=function(r,t){return(h3=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,o){e.__proto__=o}||function(e,o){for(var n in o)Object.prototype.hasOwnProperty.call(o,n)&&(e[n]=o[n])})(r,t)};function g3(r,t){if(typeof t!="function"&&t!==null)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");function e(){this.constructor=r}h3(r,t),r.prototype=t===null?Object.create(t):(e.prototype=t.prototype,new e)}var xt=function(){return(xt=Object.assign||function(r){for(var t,e=1,o=arguments.length;e<o;e++)for(var n in t=arguments[e])Object.prototype.hasOwnProperty.call(t,n)&&(r[n]=t[n]);return r}).apply(this,arguments)};function rt(r,t,e,o){return new(e||(e=Promise))(function(n,i){function s(u){try{l(o.next(u))}catch(c){i(c)}}function a(u){try{l(o.throw(u))}catch(c){i(c)}}function l(u){var c;u.done?n(u.value):(c=u.value,c instanceof e?c:new e(function(p){p(c)})).then(s,a)}l((o=o.apply(r,t||[])).next())})}function ot(r,t){var e,o,n,i,s={label:0,sent:function(){if(1&n[0])throw n[1];return n[1]},trys:[],ops:[]};return i={next:a(0),throw:a(1),return:a(2)},typeof Symbol=="function"&&(i[Symbol.iterator]=function(){return this}),i;function a(l){return function(u){return function(c){if(e)throw new TypeError("Generator is already executing.");for(;s;)try{if(e=1,o&&(n=2&c[0]?o.return:c[0]?o.throw||((n=o.return)&&n.call(o),0):o.next)&&!(n=n.call(o,c[1])).done)return n;switch(o=0,n&&(c=[2&c[0],n.value]),c[0]){case 0:case 1:n=c;break;case 4:return s.label++,{value:c[1],done:!1};case 5:s.label++,o=c[1],c=[0];continue;case 7:c=s.ops.pop(),s.trys.pop();continue;default:if(n=s.trys,!((n=n.length>0&&n[n.length-1])||c[0]!==6&&c[0]!==2)){s=0;continue}if(c[0]===3&&(!n||c[1]>n[0]&&c[1]<n[3])){s.label=c[1];break}if(c[0]===6&&s.label<n[1]){s.label=n[1],n=c;break}if(n&&s.label<n[2]){s.label=n[2],s.ops.push(c);break}n[2]&&s.ops.pop(),s.trys.pop();continue}c=t.call(r,s)}catch(p){c=[6,p],o=0}finally{e=n=0}if(5&c[0])throw c[1];return{value:c[0]?c[1]:void 0,done:!0}}([l,u])}}}function Ks(r,t,e){if(e||arguments.length===2)for(var o,n=0,i=t.length;n<i;n++)!o&&n in t||(o||(o=Array.prototype.slice.call(t,0,n)),o[n]=t[n]);return r.concat(o||Array.prototype.slice.call(t))}var cn=["nose","left_eye","right_eye","left_ear","right_ear","left_shoulder","right_shoulder","left_elbow","right_elbow","left_wrist","right_wrist","left_hip","right_hip","left_knee","right_knee","left_ankle","right_ankle"],Wp=["nose","left_eye_inner","left_eye","left_eye_outer","right_eye_inner","right_eye","right_eye_outer","left_ear","right_ear","mouth_left","mouth_right","left_shoulder","right_shoulder","left_elbow","right_elbow","left_wrist","right_wrist","left_pinky","right_pinky","left_index","right_index","left_thumb","right_thumb","left_hip","right_hip","left_knee","right_knee","left_ankle","right_ankle","left_heel","right_heel","left_foot_index","right_foot_index"],ij={left:[1,2,3,7,9,11,13,15,17,19,21,23,25,27,29,31],right:[4,5,6,8,10,12,14,16,18,20,22,24,26,28,30,32],middle:[0]},sj={left:[1,3,5,7,9,11,13,15],right:[2,4,6,8,10,12,14,16],middle:[0]},aj=[[0,1],[0,2],[1,3],[2,4],[5,6],[5,7],[5,11],[6,8],[6,12],[7,9],[8,10],[11,12],[11,13],[12,14],[13,15],[14,16]],lj=[[0,1],[0,4],[1,2],[2,3],[3,7],[4,5],[5,6],[6,8],[9,10],[11,12],[11,13],[11,23],[12,14],[14,16],[12,24],[13,15],[15,17],[16,18],[16,20],[15,17],[15,19],[15,21],[16,22],[17,19],[18,20],[23,25],[23,24],[24,26],[25,27],[26,28],[27,29],[28,30],[27,31],[28,32],[29,31],[30,32]];function kg(r){return r instanceof SVGAnimatedLength?r.baseVal.value:r}function x3(r){return rt(this,void 0,void 0,function(){var t,e;return ot(this,function(o){switch(o.label){case 0:return t=document.createElement("canvas"),r instanceof st?[4,Ai.toPixels(r,t)]:[3,2];case 1:return o.sent(),[3,3];case 2:t.width=kg(r.width),t.height=kg(r.height),e=t.getContext("2d"),r instanceof ImageData?e.putImageData(r,0,0):e.drawImage(r,0,0),o.label=3;case 3:return[2,t]}})})}function y3(r){return rt(this,void 0,void 0,function(){var t,e,o,n,i,s;return ot(this,function(a){switch(a.label){case 0:return r instanceof st?(t=r.shape.slice(0,2),e=t[0],o=t[1],n=ImageData.bind,[4,Ai.toPixels(r)]):[3,2];case 1:return[2,new(n.apply(ImageData,[void 0,a.sent(),o,e]))];case 2:return i=document.createElement("canvas"),s=i.getContext("2d"),i.width=kg(r.width),i.height=kg(r.height),s.drawImage(r,0,0),[2,s.getImageData(0,0,i.width,i.height)]}})})}function uj(r){return rt(this,void 0,void 0,function(){var t,e;return ot(this,function(o){switch(o.label){case 0:return r instanceof SVGImageElement||r instanceof OffscreenCanvas?[4,x3(r)]:[3,2];case 1:return e=o.sent(),[3,3];case 2:e=r,o.label=3;case 3:return t=e,[2,Ai.fromPixels(t,4)]}})})}function b3(r){if(r<0||r>=256)throw new Error("Mask value must be in range [0, 255] but got ".concat(r));if(!Number.isInteger(r))throw new Error("Mask value must be an integer but got ".concat(r))}var Vp={runtime:"mediapipe",enableSmoothing:!0,enableSegmentation:!1,smoothSegmentation:!0,modelType:"full"},cj=function(){function r(t){this.mask=t}return r.prototype.toCanvasImageSource=function(){return rt(this,void 0,void 0,function(){return ot(this,function(t){return[2,this.mask]})})},r.prototype.toImageData=function(){return rt(this,void 0,void 0,function(){return ot(this,function(t){return[2,y3(this.mask)]})})},r.prototype.toTensor=function(){return rt(this,void 0,void 0,function(){return ot(this,function(t){return[2,uj(this.mask)]})})},r.prototype.getUnderlyingType=function(){return"canvasimagesource"},r}();function pj(r){return b3(r),"person"}var dj=function(){function r(t){var e,o=this;switch(this.width=0,this.height=0,this.selfieMode=!1,this.poseSolution=new f3.Pose({locateFile:function(n,i){if(t.solutionPath){var s=t.solutionPath.replace(/\/+$/,"");return"".concat(s,"/").concat(n)}return"".concat(i,"/").concat(n)}}),t.modelType){case"lite":e=0;break;case"heavy":e=2;break;case"full":default:e=1}this.poseSolution.setOptions({modelComplexity:e,smoothLandmarks:t.enableSmoothing,enableSegmentation:t.enableSegmentation,smoothSegmentation:t.smoothSegmentation,selfieMode:this.selfieMode}),this.poseSolution.onResults(function(n){if(o.height=n.image.height,o.width=n.image.width,n.poseLandmarks==null)o.poses=[];else{var i=o.translateOutput(n.poseLandmarks,n.poseWorldLandmarks);n.segmentationMask&&(i.segmentation={maskValueToLabel:pj,mask:new cj(n.segmentationMask)}),o.poses=[i]}})}return r.prototype.translateOutput=function(t,e){var o=this,n={keypoints:t.map(function(i,s){return{x:i.x*o.width,y:i.y*o.height,z:i.z,score:i.visibility,name:Wp[s]}})};return e!=null&&(n.keypoints3D=e.map(function(i,s){return{x:i.x,y:i.y,z:i.z,score:i.visibility,name:Wp[s]}})),n},r.prototype.estimatePoses=function(t,e,o){return rt(this,void 0,void 0,function(){var n,i;return ot(this,function(s){switch(s.label){case 0:return e&&e.flipHorizontal&&e.flipHorizontal!==this.selfieMode&&(this.selfieMode=e.flipHorizontal,this.poseSolution.setOptions({selfieMode:this.selfieMode})),t instanceof st?(i=ImageData.bind,[4,Ai.toPixels(t)]):[3,2];case 1:return n=new(i.apply(ImageData,[void 0,s.sent(),t.shape[1],t.shape[0]])),[3,3];case 2:n=t,s.label=3;case 3:return t=n,[4,this.poseSolution.send({image:t},o)];case 4:return s.sent(),[2,this.poses]}})})},r.prototype.dispose=function(){this.poseSolution.close()},r.prototype.reset=function(){this.poseSolution.reset()},r.prototype.initialize=function(){return this.poseSolution.initialize()},r}();function mj(r){return rt(this,void 0,void 0,function(){var t,e;return ot(this,function(o){switch(o.label){case 0:return t=function(n){if(n==null)return xt({},Vp);var i=xt({},n);return i.runtime="mediapipe",i.enableSegmentation==null&&(i.enableSegmentation=Vp.enableSegmentation),i.enableSmoothing==null&&(i.enableSmoothing=Vp.enableSmoothing),i.smoothSegmentation==null&&(i.smoothSegmentation=Vp.smoothSegmentation),i.modelType==null&&(i.modelType=Vp.modelType),i}(r),[4,(e=new dj(t)).initialize()];case 1:return o.sent(),[2,e]}})})}function bc(r){return r instanceof st?{height:r.shape[0],width:r.shape[1]}:{height:r.height,width:r.width}}function v3(r){return r-2*Math.PI*Math.floor((r+Math.PI)/(2*Math.PI))}function gb(r){return r instanceof st?r:Ai.fromPixels(r)}function S3(r,t,e){return db(e,"inputResolution"),[1/e.width*r[0][0]*t.width,1/e.height*r[0][1]*t.width,r[0][3]*t.width,1/e.width*r[1][0]*t.height,1/e.height*r[1][1]*t.height,r[1][3]*t.height,0,0]}function db(r,t){S.assert(r.width!==0,function(){return"".concat(t," width cannot be 0.")}),S.assert(r.height!==0,function(){return"".concat(t," height cannot be 0.")})}function ob(r,t,e){var o=e.rotationVectorStartKeypointIndex,n=e.rotationVectorEndKeypointIndex,i=r.locationData,s=i.relativeKeypoints[o].x*t.width,a=i.relativeKeypoints[o].y*t.height,l=i.relativeKeypoints[n].x*t.width,u=i.relativeKeypoints[n].y*t.height,c=2*Math.sqrt((l-s)*(l-s)+(u-a)*(u-a)),p=function(d,m,f){var g,x=d.locationData,y=f.rotationVectorStartKeypointIndex,v=f.rotationVectorEndKeypointIndex;g=f.rotationVectorTargetAngle?f.rotationVectorTargetAngle:Math.PI*f.rotationVectorTargetAngleDegree/180;var k=x.relativeKeypoints[y].x*m.width,N=x.relativeKeypoints[y].y*m.height,F=x.relativeKeypoints[v].x*m.width,M=x.relativeKeypoints[v].y*m.height;return v3(g-Math.atan2(-(M-N),F-k))}(r,t,e);return{xCenter:s/t.width,yCenter:a/t.height,width:c/t.width,height:c/t.height,rotation:p}}function w3(r){if(r.length!==16)throw new Error("Array length must be 16 but got ".concat(r.length));return[[r[0],r[1],r[2],r[3]],[r[4],r[5],r[6],r[7]],[r[8],r[9],r[10],r[11]],[r[12],r[13],r[14],r[15]]]}function nb(r,t,e,o,n,i,s){return r[t][n]*(r[e][i]*r[o][s]-r[e][s]*r[o][i])}function wr(r,t,e){var o=(t+1)%4,n=(t+2)%4,i=(t+3)%4,s=(e+1)%4,a=(e+2)%4,l=(e+3)%4;return nb(r,o,n,i,s,a,l)+nb(r,n,i,o,s,a,l)+nb(r,i,o,n,s,a,l)}function MR(r,t,e){e===void 0&&(e={ignoreRotation:!1});for(var o=[],n=0,i=r;n<i.length;n++){var s=i[n],a=s.x-.5,l=s.y-.5,u=e.ignoreRotation?0:t.rotation,c=Math.cos(u)*a-Math.sin(u)*l,p=Math.sin(u)*a+Math.cos(u)*l;c=c*t.width+t.xCenter,p=p*t.height+t.yCenter;var d=s.z*t.width,m=xt({},s);m.x=c,m.y=p,m.z=d,o.push(m)}return o}function C3(r,t){var e=function(o,n,i,s){var a=n-o,l=s-i;if(a===0)throw new Error("Original min and max are both ".concat(o,", range cannot be 0."));var u=l/a;return{scale:u,offset:i-o*u}}(0,255,t[0],t[1]);return Te(function(){return fe(se(r,e.scale),e.offset)})}function mb(r,t,e){var o,n,i,s,a,l,u,c,p,d,m,f,g,x,y=t.outputTensorSize,v=t.keepAspectRatio,k=t.borderMode,N=t.outputTensorFloatRange,F=bc(r),M=function(K,j){return j?{xCenter:j.xCenter*K.width,yCenter:j.yCenter*K.height,width:j.width*K.width,height:j.height*K.height,rotation:j.rotation}:{xCenter:.5*K.width,yCenter:.5*K.height,width:K.width,height:K.height,rotation:0}}(F,e),z=function(K,j,J){if(J===void 0&&(J=!1),!J)return{top:0,left:0,right:0,bottom:0};var ue=j.height,ce=j.width;db(j,"targetSize"),db(K,"roi");var xe,be,Ie=ue/ce,qe=K.height/K.width,je=0,it=0;return Ie>qe?(xe=K.width,be=K.width*Ie,it=(1-qe/Ie)/2):(xe=K.height/Ie,be=K.height,je=(1-Ie/qe)/2),K.width=xe,K.height=be,{top:it,left:je,right:je,bottom:it}}(M,y,v),H=(o=M,n=F.width,i=F.height,s=!1,a=o.width,l=o.height,u=s?-1:1,c=Math.cos(o.rotation),p=Math.sin(o.rotation),d=o.xCenter,m=o.yCenter,f=1/n,g=1/i,(x=new Array(16))[0]=a*c*u*f,x[1]=-l*p*f,x[2]=0,x[3]=(-.5*a*c*u+.5*l*p+d)*f,x[4]=a*p*u*g,x[5]=l*c*g,x[6]=0,x[7]=(-.5*l*c-.5*a*p*u+m)*g,x[8]=0,x[9]=0,x[10]=a*f,x[11]=0,x[12]=0,x[13]=0,x[14]=0,x[15]=1,w3(x));return{imageTensor:Te(function(){var K=gb(r),j=vr(S3(H,F,y),[1,8]),J=k==="zero"?"constant":"nearest",ue=Pn.transform(pr(Ue(K,"float32")),j,"bilinear",J,0,[y.height,y.width]);return N!=null?C3(ue,N):ue}),padding:z,transformationMatrix:H}}function BR(r,t,e,o){return o===1?.5*(r+t):r+(t-r)*e/(o-1)}function fj(r){return Te(function(){var t=function(n){return Te(function(){return[Fe(n,[0,0,0],[1,-1,1]),Fe(n,[0,0,1],[1,-1,-1])]})}(r),e=t[0],o=t[1];return{boxes:lt(o),logits:lt(e)}})}function _3(r){return r!=null&&r.currentTime!=null}function VR(r){for(var t={locationData:{relativeKeypoints:[]}},e=Number.MAX_SAFE_INTEGER,o=Number.MIN_SAFE_INTEGER,n=Number.MAX_SAFE_INTEGER,i=Number.MIN_SAFE_INTEGER,s=0;s<r.length;++s){var a=r[s];e=Math.min(e,a.x),o=Math.max(o,a.x),n=Math.min(n,a.y),i=Math.max(i,a.y),t.locationData.relativeKeypoints.push({x:a.x,y:a.y})}return t.locationData.relativeBoundingBox={xMin:e,yMin:n,xMax:o,yMax:i,width:o-e,height:i-n},t}function hj(r,t,e,o){return rt(this,void 0,void 0,function(){var n,i,s,a,l;return ot(this,function(u){switch(u.label){case 0:return r.sort(function(c,p){return Math.max.apply(Math,p.score)-Math.max.apply(Math,c.score)}),n=vr(r.map(function(c){return[c.locationData.relativeBoundingBox.yMin,c.locationData.relativeBoundingBox.xMin,c.locationData.relativeBoundingBox.yMax,c.locationData.relativeBoundingBox.xMax]})),i=Rt(r.map(function(c){return c.score[0]})),[4,Pn.nonMaxSuppressionAsync(n,i,t,e)];case 1:return[4,(s=u.sent()).array()];case 2:return a=u.sent(),l=r.filter(function(c,p){return a.indexOf(p)>-1}),Xe([n,i,s]),[2,l]}})})}function k3(r,t){return r.map(function(e){var o=xt(xt({},e),{x:e.x*t.width,y:e.y*t.height});return e.z!=null&&(o.z=e.z*t.width),o})}function gj(r,t,e){return rt(this,void 0,void 0,function(){var o,n,i,s,a,l,u,c,p,d,m,f,g,x,y,v,k,N,F,M,z,H,K,j;return ot(this,function(J){switch(J.label){case 0:if(o=lt(t,[0]),n=o.shape,i=n[0],s=n[1],a=n[2],r.length!==a)throw new Error("Expected heatmap to have same number of channels as the number of landmarks. But got landmarks length: "+"".concat(r.length,", heatmap length: ").concat(a));return l=[],[4,o.buffer()];case 1:for(u=J.sent(),c=0;c<r.length;c++)if(p=r[c],d=xt({},p),l.push(d),m=Math.trunc(d.x*s),f=Math.trunc(d.y*i),!(m<0||m>=s||f<0||m>=i)){for(g=Math.trunc((e.kernelSize-1)/2),x=Math.max(0,m-g),y=Math.min(s,m+g+1),v=Math.max(0,f-g),k=Math.min(i,f+g+1),N=0,F=0,M=0,z=0,H=v;H<k;++H)for(K=x;K<y;++K)j=u.get(H,K,c),N+=j,z=Math.max(z,j),F+=K*j,M+=H*j;z>=e.minConfidenceToRefine&&N>0&&(d.x=F/s/N,d.y=M/i/N)}return o.dispose(),[2,l]}})})}function WR(r,t){var e=t.left,o=t.top,n=t.left+t.right,i=t.top+t.bottom;return r.map(function(s){return xt(xt({},s),{x:(s.x-e)/(1-n),y:(s.y-o)/(1-i),z:s.z/(1-n)})})}function xj(r,t,e){return Jo()==="webgl"?function(o,n,i){var s=i.combineWithPreviousRatio.toFixed(2),a={variableNames:["prevMask","newMask"],outputShape:o.shape,userCode:`
  void main() {
      ivec2 coords = getOutputCoords();
      int height = coords[0];
      int width = coords[1];

      float prevMaskValue = getPrevMask(height, width);
      float newMaskValue = getNewMask(height, width);

      /*
      * Assume p := newMaskValue
      * H(p) := 1 + (p * log(p) + (1-p) * log(1-p)) / log(2)
      * uncertainty alpha(p) =
      *   Clamp(1 - (1 - H(p)) * (1 - H(p)), 0, 1) [squaring the
      * uncertainty]
      *
      * The following polynomial approximates uncertainty alpha as a
      * function of (p + 0.5):
      */
      const float c1 = 5.68842;
      const float c2 = -0.748699;
      const float c3 = -57.8051;
      const float c4 = 291.309;
      const float c5 = -624.717;
      float t = newMaskValue - 0.5;
      float x = t * t;

      float uncertainty =
        1.0 - min(1.0, x * (c1 + x * (c2 + x * (c3 + x * (c4 + x * c5)))));

      float outputValue = newMaskValue + (prevMaskValue - newMaskValue) *
                             (uncertainty * `.concat(s,`);

      setOutput(outputValue);
    }
`)},l=Ci();return Te(function(){var u=l.compileAndRun(a,[o,n]);return ur().makeTensorFromDataId(u.dataId,u.shape,u.dtype)})}(r,t,e):Te(function(){var o=Ne(t,.5),n=zt(o),i=Ne(1,Nn(1,se(n,fe(5.68842,se(n,fe(-.748699,se(n,fe(-57.8051,se(n,fe(291.309,se(n,-624.717)))))))))));return fe(t,se(Ne(r,t),se(i,e.combineWithPreviousRatio)))})}function yj(r,t,e){return rt(this,void 0,void 0,function(){var o,n,i,s,a;return ot(this,function(l){switch(l.label){case 0:return o=r[0],n=r[1],i=function(u,c,p){return Te(function(){var d,m,f,g;p.reverseOutputOrder?(m=lt(Fe(u,[0,p.boxCoordOffset+0],[-1,1])),d=lt(Fe(u,[0,p.boxCoordOffset+1],[-1,1])),g=lt(Fe(u,[0,p.boxCoordOffset+2],[-1,1])),f=lt(Fe(u,[0,p.boxCoordOffset+3],[-1,1]))):(d=lt(Fe(u,[0,p.boxCoordOffset+0],[-1,1])),m=lt(Fe(u,[0,p.boxCoordOffset+1],[-1,1])),f=lt(Fe(u,[0,p.boxCoordOffset+2],[-1,1])),g=lt(Fe(u,[0,p.boxCoordOffset+3],[-1,1]))),m=fe(se(Ae(m,p.xScale),c.w),c.x),d=fe(se(Ae(d,p.yScale),c.h),c.y),p.applyExponentialOnBoxSize?(f=se(Pr(Ae(f,p.hScale)),c.h),g=se(Pr(Ae(g,p.wScale)),c.w)):(f=se(Ae(f,p.hScale),c.h),g=se(Ae(g,p.wScale),c.h));var x=Ne(d,Ae(f,2)),y=Ne(m,Ae(g,2)),v=fe(d,Ae(f,2)),k=fe(m,Ae(g,2)),N=dt([Y(x,[p.numBoxes,1]),Y(y,[p.numBoxes,1]),Y(v,[p.numBoxes,1]),Y(k,[p.numBoxes,1])],1);if(p.numKeypoints)for(var F=0;F<p.numKeypoints;++F){var M=p.keypointCoordOffset+F*p.numValuesPerKeypoint,z=void 0,H=void 0;p.reverseOutputOrder?(z=lt(Fe(u,[0,M],[-1,1])),H=lt(Fe(u,[0,M+1],[-1,1]))):(H=lt(Fe(u,[0,M],[-1,1])),z=lt(Fe(u,[0,M+1],[-1,1])));var K=fe(se(Ae(z,p.xScale),c.w),c.x),j=fe(se(Ae(H,p.yScale),c.h),c.y);N=dt([N,Y(K,[p.numBoxes,1]),Y(j,[p.numBoxes,1])],1)}return N})}(n,t,e),s=Te(function(){var u=o;return e.sigmoidScore?(e.scoreClippingThresh!=null&&(u=Nm(o,-e.scoreClippingThresh,e.scoreClippingThresh)),u=Kr(u)):u}),[4,bj(i,s,e)];case 1:return a=l.sent(),Xe([i,s]),[2,a]}})})}function bj(r,t,e){return rt(this,void 0,void 0,function(){var o,n,i,s,a,l,u,c,p,d,m,f;return ot(this,function(g){switch(g.label){case 0:return o=[],[4,r.data()];case 1:return n=g.sent(),[4,t.data()];case 2:for(i=g.sent(),s=0;s<e.numBoxes;++s)if(!(e.minScoreThresh!=null&&i[s]<e.minScoreThresh||(a=s*e.numCoords,l=vj(n[a+0],n[a+1],n[a+2],n[a+3],i[s],e.flipVertically,s),(u=l.locationData.relativeBoundingBox).width<0||u.height<0))){if(e.numKeypoints>0)for((c=l.locationData).relativeKeypoints=[],p=e.numKeypoints*e.numValuesPerKeypoint,d=0;d<p;d+=e.numValuesPerKeypoint)m=a+e.keypointCoordOffset+d,f={x:n[m+0],y:e.flipVertically?1-n[m+1]:n[m+1]},c.relativeKeypoints.push(f);o.push(l)}return[2,o]}})})}function vj(r,t,e,o,n,i,s){return{score:[n],ind:s,locationData:{relativeBoundingBox:{xMin:t,yMin:i?1-e:r,xMax:o,yMax:i?1-r:e,width:o-t,height:e-r}}}}function Sj(r,t){return r==="none"?t:function(e){return 1/(1+Math.exp(-e))}(t)}function zR(r,t,e,o){return rt(this,void 0,void 0,function(){var n,i,s,a,l,u,c,p;return ot(this,function(d){switch(d.label){case 0:return e=e||t.flipHorizontally||!1,o=o||t.flipVertically||!1,n=r.size,i=n/t.numLandmarks,[4,r.data()];case 1:for(s=d.sent(),a=[],l=0;l<t.numLandmarks;++l)u=l*i,(p={x:0,y:0}).x=e?t.inputImageWidth-s[u]:s[u],i>1&&(p.y=o?t.inputImageHeight-s[u+1]:s[u+1]),i>2&&(p.z=s[u+2]),i>3&&(p.score=Sj(t.visibilityActivation,s[u+3])),a.push(p);for(c=0;c<a.length;++c)(p=a[c]).x=p.x/t.inputImageWidth,p.y=p.y/t.inputImageHeight,p.z=p.z/t.inputImageWidth/(t.normalizeZ||1);return[2,a]}})})}function UR(r,t,e){var o=r.width,n=r.height,i=r.rotation;if(e.rotation==null&&e.rotationDegree==null||(i=function(c,p){return p.rotation!=null?c+=p.rotation:p.rotationDegree!=null&&(c+=Math.PI*p.rotationDegree/180),v3(c)}(i,e)),i===0)r.xCenter=r.xCenter+o*e.shiftX,r.yCenter=r.yCenter+n*e.shiftY;else{var s=(t.width*o*e.shiftX*Math.cos(i)-t.height*n*e.shiftY*Math.sin(i))/t.width,a=(t.width*o*e.shiftX*Math.sin(i)+t.height*n*e.shiftY*Math.cos(i))/t.height;r.xCenter=r.xCenter+s,r.yCenter=r.yCenter+a}if(e.squareLong){var l=Math.max(o*t.width,n*t.height);o=l/t.width,n=l/t.height}else if(e.squareShort){var u=Math.min(o*t.width,n*t.height);o=u/t.width,n=u/t.height}return r.width=o*e.scaleX,r.height=n*e.scaleY,r}function wj(r,t){return r.map(function(e){var o=xt(xt({},e),{x:e.x/t.width,y:e.y/t.height});return e.z!=null&&(e.z=e.z/t.width),o})}var Wi=function(){function r(t){this.alpha=t,this.initialized=!1}return r.prototype.apply=function(t,e){var o;return this.initialized?o=e==null?this.storedValue+this.alpha*(t-this.storedValue):this.storedValue+this.alpha*e*Math.asinh((t-this.storedValue)/e):(o=t,this.initialized=!0),this.rawValue=t,this.storedValue=o,o},r.prototype.applyWithAlpha=function(t,e,o){return this.alpha=e,this.apply(t,o)},r.prototype.hasLastRawValue=function(){return this.initialized},r.prototype.lastRawValue=function(){return this.rawValue},r.prototype.reset=function(){this.initialized=!1},r}(),ib=function(){function r(t){this.frequency=t.frequency,this.minCutOff=t.minCutOff,this.beta=t.beta,this.thresholdCutOff=t.thresholdCutOff,this.thresholdBeta=t.thresholdBeta,this.derivateCutOff=t.derivateCutOff,this.x=new Wi(this.getAlpha(this.minCutOff)),this.dx=new Wi(this.getAlpha(this.derivateCutOff)),this.lastTimestamp=0}return r.prototype.apply=function(t,e,o){if(t==null)return t;var n=Math.trunc(e);if(this.lastTimestamp>=n)return t;this.lastTimestamp!==0&&n!==0&&(this.frequency=1/(1e-6*(n-this.lastTimestamp))),this.lastTimestamp=n;var i=this.x.hasLastRawValue()?(t-this.x.lastRawValue())*o*this.frequency:0,s=this.dx.applyWithAlpha(i,this.getAlpha(this.derivateCutOff)),a=this.minCutOff+this.beta*Math.abs(s),l=this.thresholdCutOff!=null?this.thresholdCutOff+this.thresholdBeta*Math.abs(s):null;return this.x.applyWithAlpha(t,this.getAlpha(a),l)},r.prototype.getAlpha=function(t){return 1/(1+this.frequency/(2*Math.PI*t))},r}(),fb=function(){function r(t){this.config=t}return r.prototype.apply=function(t,e,o){var n=this;if(t==null)return this.reset(),null;this.initializeFiltersIfEmpty(t);var i=1;if(!this.config.disableValueScaling){if(o<this.config.minAllowedObjectScale)return Ks([],t,!0);i=1/o}return t.map(function(s,a){var l=xt(xt({},s),{x:n.xFilters[a].apply(s.x,e,i),y:n.yFilters[a].apply(s.y,e,i)});return s.z!=null&&(l.z=n.zFilters[a].apply(s.z,e,i)),l})},r.prototype.reset=function(){this.xFilters=null,this.yFilters=null,this.zFilters=null},r.prototype.initializeFiltersIfEmpty=function(t){var e=this;this.xFilters!=null&&this.xFilters.length===t.length||(this.xFilters=t.map(function(o){return new ib(e.config)}),this.yFilters=t.map(function(o){return new ib(e.config)}),this.zFilters=t.map(function(o){return new ib(e.config)}))},r}(),sb=function(){function r(t){this.config=t,this.window=[],this.lowPassFilter=new Wi(1),this.lastValue=0,this.lastValueScale=1,this.lastTimestamp=-1}return r.prototype.apply=function(t,e,o){if(t==null)return t;var n,i=Math.trunc(e);if(this.lastTimestamp>=i)return t;if(this.lastTimestamp===-1)n=1;else{for(var s=t*o-this.lastValue*this.lastValueScale,a=i-this.lastTimestamp,l=s,u=a,c=(1+this.window.length)*(1e6/30),p=0,d=this.window;p<d.length;p++){var m=d[p];if(u+m.duration>c)break;l+=m.distance,u+=m.duration}var f=l/(1e-6*u);n=1-1/(1+this.config.velocityScale*Math.abs(f)),this.window.unshift({distance:s,duration:a}),this.window.length>this.config.windowSize&&this.window.pop()}return this.lastValue=t,this.lastValueScale=o,this.lastTimestamp=i,this.lowPassFilter.applyWithAlpha(t,n)},r}(),Cj=function(){function r(t){this.config=t}return r.prototype.apply=function(t,e,o){var n=this;if(t==null)return this.reset(),null;var i=1;if(!this.config.disableValueScaling){if(o<this.config.minAllowedObjectScale)return Ks([],t,!0);i=1/o}return this.initializeFiltersIfEmpty(t),t.map(function(s,a){var l=xt(xt({},s),{x:n.xFilters[a].apply(s.x,e,i),y:n.yFilters[a].apply(s.y,e,i)});return s.z!=null&&(l.z=n.zFilters[a].apply(s.z,e,i)),l})},r.prototype.reset=function(){this.xFilters=null,this.yFilters=null,this.zFilters=null},r.prototype.initializeFiltersIfEmpty=function(t){var e=this;this.xFilters!=null&&this.xFilters.length===t.length||(this.xFilters=t.map(function(o){return new sb(e.config)}),this.yFilters=t.map(function(o){return new sb(e.config)}),this.zFilters=t.map(function(o){return new sb(e.config)}))},r}(),ab=function(){function r(t){if(t.velocityFilter!=null)this.keypointsFilter=new Cj(t.velocityFilter);else{if(t.oneEuroFilter==null)throw new Error("Either configure velocityFilter or oneEuroFilter, but got "+"".concat(t,"."));this.keypointsFilter=new fb(t.oneEuroFilter)}}return r.prototype.apply=function(t,e,o,n,i){if(n===void 0&&(n=!1),t==null)return this.keypointsFilter.reset(),null;var s=i!=null?function(u,c){return(u.width*c.width+u.height*c.height)/2}(i,o):1,a=n?k3(t,o):t,l=this.keypointsFilter.apply(a,e,s);return n?wj(l,o):l},r}(),GR=function(){function r(t){this.alpha=t.alpha}return r.prototype.apply=function(t){var e=this;if(t==null)return this.visibilityFilters=null,null;this.visibilityFilters!=null&&this.visibilityFilters.length===t.length||(this.visibilityFilters=t.map(function(a){return new Wi(e.alpha)}));for(var o=[],n=0;n<t.length;++n){var i=t[n],s=xt({},i);s.score=this.visibilityFilters[n].apply(i.score),o.push(s)}return o},r}(),_j={reduceBoxesInLowestlayer:!1,interpolatedScaleAspectRatio:1,featureMapHeight:[],featureMapWidth:[],numLayers:5,minScale:.1484375,maxScale:.75,inputSizeHeight:224,inputSizeWidth:224,anchorOffsetX:.5,anchorOffsetY:.5,strides:[8,16,32,32,32],aspectRatios:[1],fixedAnchorSize:!0},yc={runtime:"tfjs",modelType:"full",enableSmoothing:!0,enableSegmentation:!1,smoothSegmentation:!0,detectorModelUrl:"https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/detector/1",landmarkModelUrl:"https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/landmark/full/2"},kj={maxPoses:1,flipHorizontal:!1},Ij={applyExponentialOnBoxSize:!1,flipVertically:!1,ignoreClasses:[],numClasses:1,numBoxes:2254,numCoords:12,boxCoordOffset:0,keypointCoordOffset:4,numKeypoints:4,numValuesPerKeypoint:2,sigmoidScore:!0,scoreClippingThresh:100,reverseOutputOrder:!0,xScale:224,yScale:224,hScale:224,wScale:224,minScoreThresh:.5},Tj=.3,HR={shiftX:0,shiftY:0,scaleX:1.25,scaleY:1.25,squareLong:!0},Ej={outputTensorSize:{width:224,height:224},keepAspectRatio:!0,outputTensorFloatRange:[-1,1],borderMode:"zero"},Nj={outputTensorSize:{width:256,height:256},keepAspectRatio:!0,outputTensorFloatRange:[0,1],borderMode:"zero"},Rj={numLandmarks:39,inputImageWidth:256,inputImageHeight:256,visibilityActivation:"sigmoid",flipHorizontally:!1,flipVertically:!1},$j={numLandmarks:39,inputImageWidth:1,inputImageHeight:1,visibilityActivation:"sigmoid",flipHorizontally:!1,flipVertically:!1},Pj={kernelSize:7,minConfidenceToRefine:.5},KR={alpha:.1},Dj={oneEuroFilter:{frequency:30,minCutOff:.05,beta:80,derivateCutOff:1,minAllowedObjectScale:1e-6}},Aj={oneEuroFilter:{frequency:30,minCutOff:.01,beta:10,derivateCutOff:1,minAllowedObjectScale:1e-6}},Fj={oneEuroFilter:{frequency:30,minCutOff:.1,beta:40,derivateCutOff:1,minAllowedObjectScale:1e-6,disableValueScaling:!0}},Oj={activation:"none"},Lj={combineWithPreviousRatio:.7},Mj=function(){function r(t){this.mask=t}return r.prototype.toCanvasImageSource=function(){return rt(this,void 0,void 0,function(){return ot(this,function(t){return[2,x3(this.mask)]})})},r.prototype.toImageData=function(){return rt(this,void 0,void 0,function(){return ot(this,function(t){return[2,y3(this.mask)]})})},r.prototype.toTensor=function(){return rt(this,void 0,void 0,function(){return ot(this,function(t){return[2,this.mask]})})},r.prototype.getUnderlyingType=function(){return"tensor"},r}();function Bj(r){return b3(r),"person"}var Vj=function(){function r(t,e,o,n,i,s){this.detectorModel=t,this.landmarkModel=e,this.enableSmoothing=o,this.enableSegmentation=n,this.smoothSegmentation=i,this.modelType=s,this.regionOfInterest=null,this.prevFilteredSegmentationMask=null,this.anchors=function(p){p.reduceBoxesInLowestLayer==null&&(p.reduceBoxesInLowestLayer=!1),p.interpolatedScaleAspectRatio==null&&(p.interpolatedScaleAspectRatio=1),p.fixedAnchorSize==null&&(p.fixedAnchorSize=!1);for(var d=[],m=0;m<p.numLayers;){for(var f=[],g=[],x=[],y=[],v=m;v<p.strides.length&&p.strides[v]===p.strides[m];){var k=BR(p.minScale,p.maxScale,v,p.strides.length);if(v===0&&p.reduceBoxesInLowestLayer)x.push(1),x.push(2),x.push(.5),y.push(.1),y.push(k),y.push(k);else{for(var N=0;N<p.aspectRatios.length;++N)x.push(p.aspectRatios[N]),y.push(k);if(p.interpolatedScaleAspectRatio>0){var F=v===p.strides.length-1?1:BR(p.minScale,p.maxScale,v+1,p.strides.length);y.push(Math.sqrt(k*F)),x.push(p.interpolatedScaleAspectRatio)}}v++}for(var M=0;M<x.length;++M){var z=Math.sqrt(x[M]);f.push(y[M]/z),g.push(y[M]*z)}var H=0,K=0;if(p.featureMapHeight.length>0)H=p.featureMapHeight[m],K=p.featureMapWidth[m];else{var j=p.strides[m];H=Math.ceil(p.inputSizeHeight/j),K=Math.ceil(p.inputSizeWidth/j)}for(var J=0;J<H;++J)for(var ue=0;ue<K;++ue)for(var ce=0;ce<f.length;++ce){var xe={xCenter:(ue+p.anchorOffsetX)/K,yCenter:(J+p.anchorOffsetY)/H,width:0,height:0};p.fixedAnchorSize?(xe.width=1,xe.height=1):(xe.width=g[ce],xe.height=f[ce]),d.push(xe)}m=v}return d}(_j);var a=Rt(this.anchors.map(function(p){return p.width})),l=Rt(this.anchors.map(function(p){return p.height})),u=Rt(this.anchors.map(function(p){return p.xCenter})),c=Rt(this.anchors.map(function(p){return p.yCenter}));this.anchorTensor={x:u,y:c,w:a,h:l},this.prevFilteredSegmentationMask=this.enableSegmentation?vr([],[0,0]):null}return r.prototype.estimatePoses=function(t,e,o){return rt(this,void 0,void 0,function(){var n,i,s,a,l,u,c,p,d,m,f,g,x,y,v,k,N,F,M,z,H,K,j;return ot(this,function(J){switch(J.label){case 0:return n=function(ue){var ce;if((ce=ue==null?kj:xt({},ue)).maxPoses==null&&(ce.maxPoses=1),ce.maxPoses<=0)throw new Error("Invalid maxPoses ".concat(ce.maxPoses,". Should be > 0."));if(ce.maxPoses>1)throw new Error("Multi-pose detection is not implemented yet. Please set maxPoses to 1.");return ce}(e),t==null?(this.reset(),[2,[]]):(this.maxPoses=n.maxPoses,this.timestamp=o!=null?1e3*o:_3(t)?1e6*t.currentTime:null,i=bc(t),s=Te(function(){return Ue(gb(t),"float32")}),(a=this.regionOfInterest)!=null?[3,2]:[4,this.detectPose(s)]);case 1:if((l=J.sent()).length===0)return this.reset(),s.dispose(),[2,[]];u=l[0],a=this.poseDetectionToRoi(u,i),J.label=2;case 2:return[4,this.poseLandmarksByRoi(a,s)];case 3:return c=J.sent(),s.dispose(),c==null?(this.reset(),[2,[]]):(p=c.landmarks,d=c.auxiliaryLandmarks,m=c.poseScore,f=c.worldLandmarks,g=c.segmentationMask,x=this.poseLandmarkFiltering(p,d,f,i),y=x.actualLandmarksFiltered,v=x.auxiliaryLandmarksFiltered,k=x.actualWorldLandmarksFiltered,N=this.poseLandmarksToRoi(v,i),this.regionOfInterest=N,F=this.smoothSegmentation&&g!=null?this.poseSegmentationFiltering(g):g,(M=y!=null?k3(y,i):null)!=null&&M.forEach(function(ue,ce){ue.name=Wp[ce]}),(z=k)!=null&&z.forEach(function(ue,ce){ue.name=Wp[ce]}),H={score:m,keypoints:M,keypoints3D:z},F!==null&&(K=Te(function(){var ue=pr(F,2),ce=qr(ue,[[0,0],[0,0],[0,1]]);return qm(ce,[[0,0],[0,0],[0,2]],"symmetric")}),this.smoothSegmentation||Xe(F),j={maskValueToLabel:Bj,mask:new Mj(K)},H.segmentation=j),[2,[H]])}})})},r.prototype.poseSegmentationFiltering=function(t){var e=this.prevFilteredSegmentationMask;return e.size===0?this.prevFilteredSegmentationMask=t:(this.prevFilteredSegmentationMask=xj(e,t,Lj),Xe(t)),Xe(e),this.prevFilteredSegmentationMask},r.prototype.dispose=function(){this.detectorModel.dispose(),this.landmarkModel.dispose(),Xe([this.anchorTensor.x,this.anchorTensor.y,this.anchorTensor.w,this.anchorTensor.h,this.prevFilteredSegmentationMask])},r.prototype.reset=function(){this.regionOfInterest=null,this.enableSegmentation&&(Xe(this.prevFilteredSegmentationMask),this.prevFilteredSegmentationMask=vr([],[0,0])),this.visibilitySmoothingFilterActual=null,this.visibilitySmoothingFilterAuxiliary=null,this.landmarksSmoothingFilterActual=null,this.landmarksSmoothingFilterAuxiliary=null},r.prototype.detectPose=function(t){return rt(this,void 0,void 0,function(){var e,o,n,i,s,a,l,u,c,p;return ot(this,function(d){switch(d.label){case 0:return e=mb(t,Ej),o=e.imageTensor,n=e.padding,i=this.detectorModel.predict(o),s=fj(i),a=s.boxes,[4,yj([l=s.logits,a],this.anchorTensor,Ij)];case 1:return(u=d.sent()).length===0?(Xe([o,i,l,a]),[2,u]):[4,hj(u,this.maxPoses,Tj)];case 2:return c=d.sent(),p=function(m,f){m===void 0&&(m=[]);for(var g=f.left,x=f.top,y=f.left+f.right,v=f.top+f.bottom,k=0;k<m.length;k++){var N=m[k],F=N.locationData.relativeBoundingBox,M=(F.xMin-g)/(1-y),z=(F.yMin-x)/(1-v),H=F.width/(1-y),K=F.height/(1-v);F.xMin=M,F.yMin=z,F.width=H,F.height=K,F.xMax=M+H,F.yMax=z+K;var j=N.locationData.relativeKeypoints;j&&j.forEach(function(J){var ue=(J.x-g)/(1-y),ce=(J.y-x)/(1-v);J.x=ue,J.y=ce})}return m}(c,n),Xe([o,i,l,a]),[2,p]}})})},r.prototype.poseDetectionToRoi=function(t,e){return UR(ob(t,e,{rotationVectorEndKeypointIndex:1,rotationVectorStartKeypointIndex:0,rotationVectorTargetAngleDegree:90}),e,HR)},r.prototype.poseLandmarksByRoi=function(t,e){return rt(this,void 0,void 0,function(){var o,n,i,s,a,l,u,c,p,d,m,f,g,x;return ot(this,function(y){switch(y.label){case 0:if(o=bc(e),n=mb(e,Nj,t),i=n.imageTensor,s=n.padding,a=n.transformationMatrix,this.modelType!=="lite"&&this.modelType!=="full"&&this.modelType!=="heavy")throw new Error("Model type must be one of lite, full or heavy,"+"but got ".concat(this.modelType));return l=["ld_3d","output_poseflag","activation_heatmap","world_3d"],this.enableSegmentation&&l.push("activation_segmentation"),u=this.landmarkModel.execute(i,l),[4,this.tensorsToPoseLandmarksAndSegmentation(u)];case 1:return(c=y.sent())==null?(Xe(u),Xe(i),[2,null]):(p=c.landmarks,d=c.auxiliaryLandmarks,m=c.poseScore,f=c.worldLandmarks,g=c.segmentationMask,[4,this.poseLandmarksAndSegmentationInverseProjection(o,t,s,a,p,d,f,g)]);case 2:return x=y.sent(),Xe(u),Xe(i),[2,xt({poseScore:m},x)]}})})},r.prototype.poseLandmarksAndSegmentationInverseProjection=function(t,e,o,n,i,s,a,l){return rt(this,void 0,void 0,function(){var u,c,p,d,m,f;return ot(this,function(g){return u=WR(i,o),c=WR(s,o),p=MR(u,e),d=MR(c,e),m=function(x,y){for(var v=[],k=0,N=x;k<N.length;k++){var F=N[k],M=F.x,z=F.y,H=y.rotation,K=Math.cos(H)*M-Math.sin(H)*z,j=Math.sin(H)*M+Math.cos(H)*z,J=xt({},F);J.x=K,J.y=j,v.push(J)}return v}(a,e),f=null,this.enableSegmentation&&(f=Te(function(){var x=l.shape,y=x[0],v=x[1],k=function(M){var z=w3(new Array(16).fill(0));z[0][0]=wr(M,0,0),z[1][0]=-wr(M,0,1),z[2][0]=wr(M,0,2),z[3][0]=-wr(M,0,3),z[0][2]=wr(M,2,0),z[1][2]=-wr(M,2,1),z[2][2]=wr(M,2,2),z[3][2]=-wr(M,2,3),z[0][1]=-wr(M,1,0),z[1][1]=wr(M,1,1),z[2][1]=-wr(M,1,2),z[3][1]=wr(M,1,3),z[0][3]=-wr(M,3,0),z[1][3]=wr(M,3,1),z[2][3]=-wr(M,3,2),z[3][3]=wr(M,3,3);for(var H=M[0][0]*z[0][0]+M[1][0]*z[0][1]+M[2][0]*z[0][2]+M[3][0]*z[0][3],K=0;K<z.length;K++)for(var j=0;j<z.length;j++)z[K][j]/=H;return z}(n),N=vr(S3(k,{width:v,height:y},t),[1,8]),F=[1,y,v,1];return lt(Pn.transform(Y(l,F),N,"bilinear","constant",0,[t.height,t.width]),[0,3])}),Xe(l)),[2,{landmarks:p,auxiliaryLandmarks:d,worldLandmarks:m,segmentationMask:f}]})})},r.prototype.tensorsToPoseLandmarksAndSegmentation=function(t){return rt(this,void 0,void 0,function(){var e,o,n,i,s,a,l,u,c,p,d,m,f;return ot(this,function(g){switch(g.label){case 0:return e=t[0],o=t[1],n=t[2],i=t[3],s=this.enableSegmentation?t[4]:null,[4,o.data()];case 1:return(a=g.sent()[0])<.5?[2,null]:[4,zR(e,Rj)];case 2:return[4,gj(g.sent(),n,Pj)];case 3:return l=g.sent(),u=l.slice(0,33),c=l.slice(33,35),[4,zR(i,$j)];case 4:return p=g.sent(),d=p.slice(0,33),m=function(x,y,v){v===void 0&&(v=!0);for(var k=[],N=0;N<x.length;N++){var F=xt({},y[N]);v&&(F.score=x[N].score),k.push(F)}return k}(u,d,!0),f=this.enableSegmentation?function(x,y,v){return Te(function(){var k=lt(x,[0]),N=k.shape[2];if(N===1){var F=k;switch(y.activation){case"none":break;case"sigmoid":F=Kr(F);break;case"softmax":throw new Error("Softmax activation requires two channels.");default:throw new Error("Activation not supported (".concat(y.activation,")"))}var M=v?Pn.resizeBilinear(F,[v.height,v.width]):F;return lt(M,[2])}throw new Error("Unsupported number of tensor channels ".concat(N))})}(s,Oj):null,[2,{landmarks:u,auxiliaryLandmarks:c,poseScore:a,worldLandmarks:m,segmentationMask:f}]}})})},r.prototype.poseLandmarksToRoi=function(t,e){return UR(ob(VR(t),e,{rotationVectorStartKeypointIndex:0,rotationVectorEndKeypointIndex:1,rotationVectorTargetAngleDegree:90}),e,HR)},r.prototype.poseLandmarkFiltering=function(t,e,o,n){var i,s,a;if(this.timestamp!=null&&this.enableSmoothing){var l=ob(VR(e),n,{rotationVectorEndKeypointIndex:0,rotationVectorStartKeypointIndex:1,rotationVectorTargetAngleDegree:90});this.visibilitySmoothingFilterActual==null&&(this.visibilitySmoothingFilterActual=new GR(KR)),i=this.visibilitySmoothingFilterActual.apply(t),this.visibilitySmoothingFilterAuxiliary==null&&(this.visibilitySmoothingFilterAuxiliary=new GR(KR)),s=this.visibilitySmoothingFilterAuxiliary.apply(e),a=this.visibilitySmoothingFilterActual.apply(o),this.landmarksSmoothingFilterActual==null&&(this.landmarksSmoothingFilterActual=new ab(Dj)),i=this.landmarksSmoothingFilterActual.apply(i,this.timestamp,n,!0,l),this.landmarksSmoothingFilterAuxiliary==null&&(this.landmarksSmoothingFilterAuxiliary=new ab(Aj)),s=this.landmarksSmoothingFilterAuxiliary.apply(s,this.timestamp,n,!0,l),this.worldLandmarksSmoothingFilterActual==null&&(this.worldLandmarksSmoothingFilterActual=new ab(Fj)),a=this.worldLandmarksSmoothingFilterActual.apply(o,this.timestamp)}else i=t,s=e,a=o;return{actualLandmarksFiltered:i,auxiliaryLandmarksFiltered:s,actualWorldLandmarksFiltered:a}},r}();function Wj(r){return rt(this,void 0,void 0,function(){var t,e,o,n,i,s;return ot(this,function(a){switch(a.label){case 0:return t=function(l){var u=xt({},l??yc);if(u.enableSmoothing==null&&(u.enableSmoothing=yc.enableSmoothing),u.enableSegmentation==null&&(u.enableSegmentation=yc.enableSegmentation),u.smoothSegmentation==null&&(u.smoothSegmentation=yc.smoothSegmentation),u.modelType==null&&(u.modelType=yc.modelType),u.detectorModelUrl==null&&(u.detectorModelUrl=yc.detectorModelUrl),u.landmarkModelUrl==null)switch(u.modelType){case"lite":u.landmarkModelUrl="https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/landmark/lite/2";break;case"heavy":u.landmarkModelUrl="https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/landmark/heavy/2";break;case"full":default:u.landmarkModelUrl="https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/landmark/full/2"}return u}(r),e=typeof t.detectorModelUrl=="string"&&t.detectorModelUrl.indexOf("https://tfhub.dev")>-1,o=typeof t.landmarkModelUrl=="string"&&t.landmarkModelUrl.indexOf("https://tfhub.dev")>-1,[4,Promise.all([Oi(t.detectorModelUrl,{fromTFHub:e}),Oi(t.landmarkModelUrl,{fromTFHub:o})])];case 1:return n=a.sent(),i=n[0],s=n[1],[2,new Vj(i,s,t.enableSmoothing,t.enableSegmentation,t.smoothSegmentation,t.modelType)]}})})}var qs,or,I3=function(){function r(t){(function(e){if(e.maxTracks<1)throw new Error("Must specify 'maxTracks' to be at least 1, but "+"encountered ".concat(e.maxTracks));if(e.maxAge<=0)throw new Error("Must specify 'maxAge' to be positive, but "+"encountered ".concat(e.maxAge));if(e.keypointTrackerParams!==void 0){if(e.keypointTrackerParams.keypointConfidenceThreshold<0||e.keypointTrackerParams.keypointConfidenceThreshold>1)throw new Error("Must specify 'keypointConfidenceThreshold' to be in the range [0, 1], but encountered "+"".concat(e.keypointTrackerParams.keypointConfidenceThreshold));if(e.keypointTrackerParams.minNumberOfKeypoints<1)throw new Error("Must specify 'minNumberOfKeypoints' to be at least 1, but "+"encountered ".concat(e.keypointTrackerParams.minNumberOfKeypoints));for(var o=0,n=e.keypointTrackerParams.keypointFalloff;o<n.length;o++){var i=n[o];if(i<=0)throw new Error("Must specify each keypoint falloff parameterto be positive "+"but encountered ".concat(i))}}})(t),this.tracks=[],this.maxTracks=t.maxTracks,this.maxAge=1e3*t.maxAge,this.minSimilarity=t.minSimilarity,this.nextID=1}return r.prototype.apply=function(t,e){this.filterOldTracks(e);var o=this.computeSimilarity(t);return this.assignTracks(t,o,e),this.updateTracks(e),t},r.prototype.getTracks=function(){return this.tracks.slice()},r.prototype.getTrackIDs=function(){return new Set(this.tracks.map(function(t){return t.id}))},r.prototype.filterOldTracks=function(t){var e=this;this.tracks=this.tracks.filter(function(o){return t-o.lastTimestamp<=e.maxAge})},r.prototype.assignTracks=function(t,e,o){for(var n=Array.from(Array(e[0].length).keys()),i=[],s=0,a=Array.from(Array(t.length).keys());s<a.length;s++){var l=a[s];if(n.length!==0){for(var u=-1,c=-1,p=0,d=n;p<d.length;p++){var m=d[p],f=e[l][m];f>=this.minSimilarity&&f>c&&(u=m,c=f)}if(u>=0){var g=this.tracks[u];g=Object.assign(g,this.createTrack(t[l],o,g.id)),t[l].id=g.id;var x=n.indexOf(u);n.splice(x,1)}else i.push(l)}else i.push(l)}for(var y=0,v=i;y<v.length;y++){l=v[y];var k=this.createTrack(t[l],o);this.tracks.push(k),t[l].id=k.id}},r.prototype.updateTracks=function(t){this.tracks.sort(function(e,o){return o.lastTimestamp-e.lastTimestamp}),this.tracks=this.tracks.slice(0,this.maxTracks)},r.prototype.createTrack=function(t,e,o){var n={id:o||this.nextTrackID(),lastTimestamp:e,keypoints:Ks([],t.keypoints,!0).map(function(i){return xt({},i)})};return t.box!==void 0&&(n.box=xt({},t.box)),n},r.prototype.nextTrackID=function(){var t=this.nextID;return this.nextID+=1,t},r.prototype.remove=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];this.tracks=this.tracks.filter(function(o){return!t.includes(o.id)})},r.prototype.reset=function(){this.tracks=[]},r}(),zj=function(r){function t(e){return r.call(this,e)||this}return g3(t,r),t.prototype.computeSimilarity=function(e){var o=this;return e.length===0||this.tracks.length===0?[[]]:e.map(function(n){return o.tracks.map(function(i){return o.iou(n,i)})})},t.prototype.iou=function(e,o){var n=Math.max(e.box.xMin,o.box.xMin),i=Math.max(e.box.yMin,o.box.yMin),s=Math.min(e.box.xMax,o.box.xMax),a=Math.min(e.box.yMax,o.box.yMax);if(n>=s||i>=a)return 0;var l=(s-n)*(a-i);return l/(e.box.width*e.box.height+o.box.width*o.box.height-l)},t}(I3),Uj=function(r){function t(e){var o=r.call(this,e)||this;return o.keypointThreshold=e.keypointTrackerParams.keypointConfidenceThreshold,o.keypointFalloff=e.keypointTrackerParams.keypointFalloff,o.minNumKeyoints=e.keypointTrackerParams.minNumberOfKeypoints,o}return g3(t,r),t.prototype.computeSimilarity=function(e){if(e.length===0||this.tracks.length===0)return[[]];for(var o=[],n=0,i=e;n<i.length;n++){for(var s=i[n],a=[],l=0,u=this.tracks;l<u.length;l++){var c=u[l];a.push(this.oks(s,c))}o.push(a)}return o},t.prototype.oks=function(e,o){for(var n=this.area(o.keypoints)+1e-6,i=0,s=0,a=0;a<e.keypoints.length;++a){var l=e.keypoints[a],u=o.keypoints[a];if(!(l.score<this.keypointThreshold||u.score<this.keypointThreshold)){s+=1;var c=Math.pow(l.x-u.x,2)+Math.pow(l.y-u.y,2),p=2*this.keypointFalloff[a];i+=Math.exp(-1*c/(2*n*Math.pow(p,2)))}}return s<this.minNumKeyoints?0:i/s},t.prototype.area=function(e){var o=this,n=e.filter(function(l){return l.score>o.keypointThreshold}),i=Math.min.apply(Math,Ks([1],n.map(function(l){return l.x}),!1)),s=Math.max.apply(Math,Ks([0],n.map(function(l){return l.x}),!1)),a=Math.min.apply(Math,Ks([1],n.map(function(l){return l.y}),!1));return(s-i)*(Math.max.apply(Math,Ks([0],n.map(function(l){return l.y}),!1))-a)},t}(I3);function T3(r){switch(r){case or.BlazePose:return Wp.reduce(function(t,e,o){return t[e]=o,t},{});case or.PoseNet:case or.MoveNet:return cn.reduce(function(t,e,o){return t[e]=o,t},{});default:throw new Error("Model ".concat(r," is not supported."))}}(function(r){r.Keypoint="keypoint",r.BoundingBox="boundingBox"})(qs||(qs={})),function(r){r.MoveNet="MoveNet",r.BlazePose="BlazePose",r.PoseNet="PoseNet"}(or||(or={}));var E3=Object.freeze({__proto__:null,getKeypointIndexBySide:function(r){switch(r){case or.BlazePose:return ij;case or.PoseNet:case or.MoveNet:return sj;default:throw new Error("Model ".concat(r," is not supported."))}},getAdjacentPairs:function(r){switch(r){case or.BlazePose:return lj;case or.PoseNet:case or.MoveNet:return aj;default:throw new Error("Model ".concat(r," is not supported."))}},getKeypointIndexByName:T3}),qR=["SinglePose.Lightning","SinglePose.Thunder","MultiPose.Lightning"],N3={modelType:"SinglePose.Lightning",enableSmoothing:!0},jR={},XR={frequency:30,minCutOff:2.5,beta:300,derivateCutOff:2.5,thresholdCutOff:.5,thresholdBeta:5,disableValueScaling:!0},lb={maxTracks:18,maxAge:1e3,minSimilarity:.2,keypointTrackerParams:{keypointConfidenceThreshold:.3,keypointFalloff:[.026,.025,.025,.035,.035,.079,.079,.072,.072,.062,.062,.107,.107,.087,.087,.089,.089],minNumberOfKeypoints:4}},YR={maxTracks:18,maxAge:1e3,minSimilarity:.15,trackerParams:{}};function Gj(r,t,e,o){for(var n={},i=0,s=cn;i<s.length;i++){var a=s[i];n[a]=[t[e[a]].y*o.height,t[e[a]].x*o.width]}if(function(v,k){return(v[k.left_hip].score>.2||v[k.right_hip].score>.2)&&(v[k.left_shoulder].score>.2||v[k.right_shoulder].score>.2)}(t,e)){var l=(n.left_hip[0]+n.right_hip[0])/2,u=(n.left_hip[1]+n.right_hip[1])/2,c=function(v,k,N,F,M){for(var z=["left_shoulder","right_shoulder","left_hip","right_hip"],H=0,K=0,j=0;j<z.length;j++)(be=Math.abs(F-N[z[j]][0]))>H&&(H=be),(Ie=Math.abs(M-N[z[j]][1]))>K&&(K=Ie);for(var J=0,ue=0,ce=0,xe=Object.keys(N);ce<xe.length;ce++){var be,Ie,qe=xe[ce];v[k[qe]].score<.2||((be=Math.abs(F-N[qe][0]))>J&&(J=be),(Ie=Math.abs(M-N[qe][1]))>ue&&(ue=Ie))}return[H,K,J,ue]}(t,e,n,l,u),p=c[0],d=c[1],m=c[2],f=c[3],g=Math.max(1.9*d,1.9*p,1.2*m,1.2*f),x=[l-(g=Math.min(g,Math.max(u,o.width-u,l,o.height-l))),u-g];if(g>Math.max(o.width,o.height)/2)return hb(r==null,o);var y=2*g;return{yMin:x[0]/o.height,xMin:x[1]/o.width,yMax:(x[0]+y)/o.height,xMax:(x[1]+y)/o.width,height:(x[0]+y)/o.height-x[0]/o.height,width:(x[1]+y)/o.width-x[1]/o.width}}return hb(r==null,o)}function hb(r,t){var e,o,n,i;return r?t.width>t.height?(e=1,o=t.height/t.width,n=0,i=(t.width/2-t.height/2)/t.width):(e=t.width/t.height,o=1,n=(t.height/2-t.width/2)/t.height,i=0):t.width>t.height?(e=t.width/t.height,o=1,n=(t.height/2-t.width/2)/t.height,i=0):(e=1,o=t.height/t.width,n=0,i=(t.width/2-t.height/2)/t.width),{yMin:n,xMin:i,yMax:n+e,xMax:i+o,height:e,width:o}}function Hj(r){var t,e=r==null?N3:xt({},r);if(e.modelType==null)e.modelType="SinglePose.Lightning";else if(qR.indexOf(e.modelType)<0)throw new Error("Invalid architecture ".concat(e.modelType,". ")+"Should be one of ".concat(qR));if(e.enableSmoothing==null&&(e.enableSmoothing=!0),e.minPoseScore!=null&&(e.minPoseScore<0||e.minPoseScore>1))throw new Error("minPoseScore should be between 0.0 and 1.0");if(e.multiPoseMaxDimension!=null&&(e.multiPoseMaxDimension%32!=0||e.multiPoseMaxDimension<32))throw new Error("multiPoseMaxDimension must be a multiple of 32 and higher than 0");if(e.modelType==="MultiPose.Lightning"&&e.enableTracking==null&&(e.enableTracking=!0),e.modelType==="MultiPose.Lightning"&&e.enableTracking===!0)if(e.trackerType==null&&(e.trackerType=qs.BoundingBox),e.trackerType===qs.Keypoint)e.trackerConfig!=null?e.trackerConfig=function(o){var n=QR(lb,o);return n.keypointTrackerParams=xt({},lb.keypointTrackerParams),o.keypointTrackerParams!=null&&(o.keypointTrackerParams.keypointConfidenceThreshold!=null&&(n.keypointTrackerParams.keypointConfidenceThreshold=o.keypointTrackerParams.keypointConfidenceThreshold),o.keypointTrackerParams.keypointFalloff!=null&&(n.keypointTrackerParams.keypointFalloff=o.keypointTrackerParams.keypointFalloff),o.keypointTrackerParams.minNumberOfKeypoints!=null&&(n.keypointTrackerParams.minNumberOfKeypoints=o.keypointTrackerParams.minNumberOfKeypoints)),n}(e.trackerConfig):e.trackerConfig=lb;else{if(e.trackerType!==qs.BoundingBox)throw new Error("Tracker type not supported by MoveNet");e.trackerConfig!=null?e.trackerConfig=(t=e.trackerConfig,QR(YR,t)):e.trackerConfig=YR}return e}function QR(r,t){var e={maxTracks:r.maxTracks,maxAge:r.maxAge,minSimilarity:r.minSimilarity};return t.maxTracks!=null&&(e.maxTracks=t.maxTracks),t.maxAge!=null&&(e.maxAge=t.maxAge),t.minSimilarity!=null&&(e.minSimilarity=t.minSimilarity),e}var Kj=function(){function r(t,e){this.moveNetModel=t,this.modelInputResolution={height:0,width:0},this.keypointIndexByName=T3(or.MoveNet),e.modelType==="SinglePose.Lightning"?(this.modelInputResolution.width=192,this.modelInputResolution.height=192):e.modelType==="SinglePose.Thunder"&&(this.modelInputResolution.width=256,this.modelInputResolution.height=256),this.multiPoseModel=e.modelType==="MultiPose.Lightning",this.multiPoseModel||(this.keypointFilter=new fb(XR),this.cropRegionFilterYMin=new Wi(.9),this.cropRegionFilterXMin=new Wi(.9),this.cropRegionFilterYMax=new Wi(.9),this.cropRegionFilterXMax=new Wi(.9)),this.enableSmoothing=e.enableSmoothing,e.minPoseScore?this.minPoseScore=e.minPoseScore:this.minPoseScore=.25,e.multiPoseMaxDimension?this.multiPoseMaxDimension=e.multiPoseMaxDimension:this.multiPoseMaxDimension=256,this.enableTracking=e.enableTracking,this.multiPoseModel&&this.enableTracking&&(e.trackerType===qs.Keypoint?this.tracker=new Uj(e.trackerConfig):e.trackerType===qs.BoundingBox&&(this.tracker=new zj(e.trackerConfig)),this.enableSmoothing&&(this.keypointFilterMap=new Map))}return r.prototype.runSinglePersonPoseModel=function(t){return rt(this,void 0,void 0,function(){var e,o,n,i,s;return ot(this,function(a){switch(a.label){case 0:if((e=this.moveNetModel.execute(t)).shape.length!==4||e.shape[0]!==1||e.shape[1]!==1||e.shape[2]!==17||e.shape[3]!==3)throw e.dispose(),new Error("Unexpected output shape from model: [".concat(e.shape,"]"));return Jo()==="webgpu"?[3,1]:(o=e.dataSync(),[3,3]);case 1:return[4,e.data()];case 2:o=a.sent(),a.label=3;case 3:for(e.dispose(),n={keypoints:[],score:0},i=0,s=0;s<17;++s)n.keypoints[s]={y:o[3*s],x:o[3*s+1],score:o[3*s+2]},n.keypoints[s].score>.2&&(++i,n.score+=n.keypoints[s].score);return i>0&&(n.score/=i),[2,n]}})})},r.prototype.runMultiPersonPoseModel=function(t){return rt(this,void 0,void 0,function(){var e,o,n,i,s,a,l,u;return ot(this,function(c){switch(c.label){case 0:if((e=this.moveNetModel.execute(t)).shape.length!==3||e.shape[0]!==1||e.shape[2]!==56)throw e.dispose(),new Error("Unexpected output shape from model: [".concat(e.shape,"]"));return Jo()==="webgpu"?[3,1]:(o=e.dataSync(),[3,3]);case 1:return[4,e.data()];case 2:o=c.sent(),c.label=3;case 3:for(e.dispose(),n=[],i=o.length/56,s=0;s<i;++s)for(n[s]={keypoints:[]},a=56*s+51,n[s].box={yMin:o[a],xMin:o[a+1],yMax:o[a+2],xMax:o[a+3],width:o[a+3]-o[a+1],height:o[a+2]-o[a]},l=56*s+55,n[s].score=o[l],n[s].keypoints=[],u=0;u<17;++u)n[s].keypoints[u]={y:o[56*s+3*u],x:o[56*s+3*u+1],score:o[56*s+3*u+2]};return[2,n]}})})},r.prototype.estimatePoses=function(t,e,o){return e===void 0&&(e=jR),rt(this,void 0,void 0,function(){var n,i,s,a,l,u;return ot(this,function(c){switch(c.label){case 0:return e=function(p){return p==null?jR:xt({},p)}(e),t==null?(this.reset(),[2,[]]):(o==null?_3(t)&&(o=1e6*t.currentTime):o*=1e3,n=gb(t),i=bc(n),s=pr(n,0),t instanceof st||n.dispose(),a=[],this.multiPoseModel?[3,2]:[4,this.estimateSinglePose(s,i,o)]);case 1:return a=c.sent(),[3,4];case 2:return[4,this.estimateMultiplePoses(s,i,o)];case 3:a=c.sent(),c.label=4;case 4:for(l=0;l<a.length;++l)for(u=0;u<a[l].keypoints.length;++u)a[l].keypoints[u].name=cn[u],a[l].keypoints[u].y*=i.height,a[l].keypoints[u].x*=i.width;return[2,a]}})})},r.prototype.estimateSinglePose=function(t,e,o){return rt(this,void 0,void 0,function(){var n,i,s,a,l=this;return ot(this,function(u){switch(u.label){case 0:return this.cropRegion||(this.cropRegion=hb(this.cropRegion==null,e)),n=Te(function(){var c=vr([[l.cropRegion.yMin,l.cropRegion.xMin,l.cropRegion.yMax,l.cropRegion.xMax]]),p=yr([1],"int32"),d=[l.modelInputResolution.height,l.modelInputResolution.width];return Ue(Pn.cropAndResize(t,c,p,d,"bilinear",0),"int32")}),t.dispose(),[4,this.runSinglePersonPoseModel(n)];case 1:if(i=u.sent(),n.dispose(),i.score<this.minPoseScore)return this.reset(),[2,[]];for(s=0;s<i.keypoints.length;++s)i.keypoints[s].y=this.cropRegion.yMin+i.keypoints[s].y*this.cropRegion.height,i.keypoints[s].x=this.cropRegion.xMin+i.keypoints[s].x*this.cropRegion.width;return o!=null&&this.enableSmoothing&&(i.keypoints=this.keypointFilter.apply(i.keypoints,o,1)),a=Gj(this.cropRegion,i.keypoints,this.keypointIndexByName,e),this.cropRegion=this.filterCropRegion(a),[2,[i]]}})})},r.prototype.estimateMultiplePoses=function(t,e,o){return rt(this,void 0,void 0,function(){var n,i,s,a,l,u,c,p,d,m,f,g=this;return ot(this,function(x){switch(x.label){case 0:return e.width>e.height?(i=this.multiPoseMaxDimension,s=Math.round(this.multiPoseMaxDimension*e.height/e.width),n=Pn.resizeBilinear(t,[s,i]),l=i,u=32*Math.ceil(s/32),a=qr(n,[[0,0],[0,u-s],[0,0],[0,0]])):(i=Math.round(this.multiPoseMaxDimension*e.width/e.height),s=this.multiPoseMaxDimension,n=Pn.resizeBilinear(t,[s,i]),l=32*Math.ceil(i/32),u=s,a=qr(n,[[0,0],[0,0],[0,l-i],[0,0]])),n.dispose(),t.dispose(),c=Ue(a,"int32"),a.dispose(),[4,this.runMultiPersonPoseModel(c)];case 1:for(p=x.sent(),c.dispose(),p=p.filter(function(y){return y.score>=g.minPoseScore}),m=0;m<p.length;++m)for(d=0;d<p[m].keypoints.length;++d)p[m].keypoints[d].y*=u/s,p[m].keypoints[d].x*=l/i;if(this.enableTracking&&(this.tracker.apply(p,o),this.enableSmoothing)){for(m=0;m<p.length;++m)this.keypointFilterMap.has(p[m].id)||this.keypointFilterMap.set(p[m].id,new fb(XR)),p[m].keypoints=this.keypointFilterMap.get(p[m].id).apply(p[m].keypoints,o,1);f=this.tracker.getTrackIDs(),this.keypointFilterMap.forEach(function(y,v){f.has(v)||g.keypointFilterMap.delete(v)})}return[2,p]}})})},r.prototype.filterCropRegion=function(t){if(t){var e=this.cropRegionFilterYMin.apply(t.yMin),o=this.cropRegionFilterXMin.apply(t.xMin),n=this.cropRegionFilterYMax.apply(t.yMax),i=this.cropRegionFilterXMax.apply(t.xMax);return{yMin:e,xMin:o,yMax:n,xMax:i,height:n-e,width:i-o}}return this.cropRegionFilterYMin.reset(),this.cropRegionFilterXMin.reset(),this.cropRegionFilterYMax.reset(),this.cropRegionFilterXMax.reset(),null},r.prototype.dispose=function(){this.moveNetModel.dispose()},r.prototype.reset=function(){this.cropRegion=null,this.resetFilters()},r.prototype.resetFilters=function(){this.keypointFilter.reset(),this.cropRegionFilterYMin.reset(),this.cropRegionFilterXMin.reset(),this.cropRegionFilterYMax.reset(),this.cropRegionFilterXMax.reset()},r}();function qj(r){return r===void 0&&(r=N3),rt(this,void 0,void 0,function(){var t,e,o,n;return ot(this,function(i){switch(i.label){case 0:return t=Hj(r),o=!0,t.modelUrl?(o=typeof t.modelUrl=="string"&&t.modelUrl.indexOf("https://tfhub.dev")>-1,[4,Oi(t.modelUrl,{fromTFHub:o})]):[3,2];case 1:return e=i.sent(),[3,4];case 2:return n=void 0,t.modelType==="SinglePose.Lightning"?n="https://tfhub.dev/google/tfjs-model/movenet/singlepose/lightning/4":t.modelType==="SinglePose.Thunder"?n="https://tfhub.dev/google/tfjs-model/movenet/singlepose/thunder/4":t.modelType==="MultiPose.Lightning"&&(n="https://tfhub.dev/google/tfjs-model/movenet/multipose/lightning/1"),[4,Oi(n,{fromTFHub:o})];case 3:e=i.sent(),i.label=4;case 4:return Jo()==="webgl"&&G().set("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",0),[2,new Kj(e,t)]}})})}var ZR={architecture:"MobileNetV1",outputStride:16,multiplier:.75,inputResolution:{height:257,width:257}},JR=["MobileNetV1","ResNet50"],e3={MobileNetV1:[8,16],ResNet50:[16]},jj=[8,16,32],t3={MobileNetV1:[.5,.75,1],ResNet50:[1]},r3=[1,2,4],o3={maxPoses:1,flipHorizontal:!1},Xj={maxPoses:5,flipHorizontal:!1,scoreThreshold:.5,nmsRadius:20},Yj=[-123.15,-115.9,-103.06];function ub(r){return Math.floor(r/2)}var Qj=function(){function r(t,e){this.priorityQueue=new Array(t),this.numberOfElements=-1,this.getElementValue=e}return r.prototype.enqueue=function(t){this.priorityQueue[++this.numberOfElements]=t,this.swim(this.numberOfElements)},r.prototype.dequeue=function(){var t=this.priorityQueue[0];return this.exchange(0,this.numberOfElements--),this.sink(0),this.priorityQueue[this.numberOfElements+1]=null,t},r.prototype.empty=function(){return this.numberOfElements===-1},r.prototype.size=function(){return this.numberOfElements+1},r.prototype.all=function(){return this.priorityQueue.slice(0,this.numberOfElements+1)},r.prototype.max=function(){return this.priorityQueue[0]},r.prototype.swim=function(t){for(;t>0&&this.less(ub(t),t);)this.exchange(t,ub(t)),t=ub(t)},r.prototype.sink=function(t){for(;2*t<=this.numberOfElements;){var e=2*t;if(e<this.numberOfElements&&this.less(e,e+1)&&e++,!this.less(t,e))break;this.exchange(t,e),t=e}},r.prototype.getValueAt=function(t){return this.getElementValue(this.priorityQueue[t])},r.prototype.less=function(t,e){return this.getValueAt(t)<this.getValueAt(e)},r.prototype.exchange=function(t,e){var o=this.priorityQueue[t];this.priorityQueue[t]=this.priorityQueue[e],this.priorityQueue[e]=o},r}();function Zj(r,t,e,o,n,i){for(var s=i.shape,a=s[0],l=s[1],u=!0,c=Math.max(e-n,0),p=Math.min(e+n+1,a),d=c;d<p;++d){for(var m=Math.max(o-n,0),f=Math.min(o+n+1,l),g=m;g<f;++g)if(i.get(d,g,r)>t){u=!1;break}if(!u)break}return u}function Jj(r){return rt(this,void 0,void 0,function(){return ot(this,function(t){return[2,Promise.all(r.map(function(e){return e.buffer()}))]})})}function R3(r,t,e,o){return{y:o.get(r,t,e),x:o.get(r,t,e+17)}}function $3(r,t,e){var o=R3(r.heatmapY,r.heatmapX,r.id,e),n=o.y,i=o.x;return{x:r.heatmapX*t+i,y:r.heatmapY*t+n}}function P3(r,t,e,o){var n=e.x,i=e.y;return r.some(function(s){var a,l,u,c,p,d,m=s.keypoints;return a=i,l=n,u=m[o].y,c=m[o].x,(p=u-a)*p+(d=c-l)*d<=t})}var n3=cn.reduce(function(r,t,e){return r[t]=e,r},{}),D3=[["nose","left_eye"],["left_eye","left_ear"],["nose","right_eye"],["right_eye","right_ear"],["nose","left_shoulder"],["left_shoulder","left_elbow"],["left_elbow","left_wrist"],["left_shoulder","left_hip"],["left_hip","left_knee"],["left_knee","left_ankle"],["nose","right_shoulder"],["right_shoulder","right_elbow"],["right_elbow","right_wrist"],["right_shoulder","right_hip"],["right_hip","right_knee"],["right_knee","right_ankle"]].map(function(r){var t=r[0],e=r[1];return[n3[t],n3[e]]}),cb=D3.map(function(r){return r[1]}),i3=D3.map(function(r){return r[0]});function s3(r,t,e){return r<t?t:r>e?e:r}function pb(r,t,e,o){return{y:s3(Math.round(r.y/t),0,e-1),x:s3(Math.round(r.x/t),0,o-1)}}function a3(r,t){return{x:r.x+t.x,y:r.y+t.y}}function l3(r,t,e,o,n,i,s,a){a===void 0&&(a=2);for(var l=o.shape,u=l[0],c=l[1],p={y:t.y,x:t.x},d=a3(p,function(v,k,N){var F=N.shape[2]/2;return{y:N.get(k.y,k.x,v),x:N.get(k.y,k.x,F+v)}}(r,pb(p,i,u,c),s)),m=0;m<a;m++){var f=pb(d,i,u,c),g=R3(f.y,f.x,e,n);d=a3({x:f.x*i,y:f.y*i},{x:g.x,y:g.y})}var x=pb(d,i,u,c),y=o.get(x.y,x.x,e);return{y:d.y,x:d.x,name:cn[e],score:y}}function eX(r,t,e,o,n,i){var s=t.shape[2],a=cb.length,l=new Array(s),u=r.part,c=r.score,p=$3(u,o,e);l[u.id]={score:c,name:cn[u.id],y:p.y,x:p.x};for(var d=a-1;d>=0;--d){var m=cb[d],f=i3[d];l[m]&&!l[f]&&(l[f]=l3(d,l[m],f,t,e,o,i))}for(d=0;d<a;++d)m=i3[d],f=cb[d],l[m]&&!l[f]&&(l[f]=l3(d,l[m],f,t,e,o,n));return l}function tX(r,t,e){return e.reduce(function(o,n,i){var s=n.y,a=n.x,l=n.score;return P3(r,t,{y:s,x:a},i)||(o+=l),o},0)/e.length}function rX(r,t,e,o,n,i,s,a){return s===void 0&&(s=.5),a===void 0&&(a=20),rt(this,void 0,void 0,function(){var l,u,c,p,d,m,f,g,x,y,v,k;return ot(this,function(N){switch(N.label){case 0:return[4,Jj([r,t,e,o])];case 1:for(l=N.sent(),u=l[0],c=l[1],p=l[2],d=l[3],m=[],f=function(F,M,z){for(var H=z.shape,K=H[0],j=H[1],J=H[2],ue=new Qj(K*j*J,function(qe){return qe.score}),ce=0;ce<K;++ce)for(var xe=0;xe<j;++xe)for(var be=0;be<J;++be){var Ie=z.get(ce,xe,be);Ie<F||Zj(be,Ie,ce,xe,M,z)&&ue.enqueue({score:Ie,part:{heatmapY:ce,heatmapX:xe,id:be}})}return ue}(s,1,u),g=a*a;m.length<i&&!f.empty();)x=f.dequeue(),y=$3(x.part,n,c),P3(m,g,y,x.part.id)||(v=eX(x,u,c,n,p,d),k=tX(m,g,v),m.push({keypoints:v,score:k}));return[2,m]}})})}function A3(){for(var r,t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];switch(t.length){case 0:r="fn main() ";break;case 1:r="fn main(".concat(t[0]," : i32)");break;default:throw Error("Unreachable")}return r}var oX=function(){function r(t){this.variableNames=["A","B"],this.size=!0,this.workgroupSize=[32,1,1],this.outputShape=[t[0],1],this.dispatchLayout=Bi.flatDispatchLayout(this.outputShape),this.dispatch=Bi.computeDispatch(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="getpointsConfidenceOp"}return r.prototype.getUserCode=function(){return`
        `.concat(A3("index"),` {
          if (index < uniforms.size) {
            let y = B[index * 2];
            let x = B[index * 2 + 1];
            let outIndex = y * uniforms.aShape.x * uniforms.aShape.z + x * uniforms.aShape.z + index;
            result[index] = A[outIndex];
          }
        }
        `)},r}();function nX(r,t){if(Ci()instanceof sc)return function(e,o){var n=Ci(),i=new oX(o.shape),s=n.runWebGPUProgram(i,[e,o],"float32");return ur().makeTensorFromTensorInfo(s)}(r,t);throw new Error("getPointsConfidenceWebGPU is not supported in this backend!")}var iX=function(){function r(t){if(this.variableNames=["A","B"],this.size=!0,this.supportedLastDimension=2,t.length!==2||t[1]!==this.supportedLastDimension)throw new Error("GetOffsetVectorsProgram only supports shape of [x, ".concat(this.supportedLastDimension,"], but current shape is ").concat(t));this.workgroupSize=[32,1,1],this.outputShape=t;var e=[t[0],1];this.dispatchLayout=Bi.flatDispatchLayout(e),this.dispatch=Bi.computeDispatch(this.dispatchLayout,e,this.workgroupSize),this.shaderKey="GetOffsetVectors"}return r.prototype.getUserCode=function(){return`
    fn getOffsetPoint(y: i32, x: i32, index: i32) -> vec2<i32> {
      let outIndexY = y * uniforms.bShape.x * uniforms.bShape.y + x * uniforms.bShape.y + index;
      let outIndexX = outIndexY + uniforms.bShape.z;
      let outY = i32(B[outIndexY]);
      let outX = i32(B[outIndexX]);
      return vec2<i32>(outY, outX);
    }

    `.concat(A3("index"),` {
      if (index < uniforms.size) {
        let indexY = index * `).concat(this.supportedLastDimension,`;
        let indexX = indexY + 1;
        let heatmapY = A[indexY];
        let heatmapX = A[indexX];
        let out = getOffsetPoint(i32(heatmapY), i32(heatmapX), index);
        result[indexY] = f32(out[0]);
        result[indexX] = f32(out[1]);
      }
    }
    `)},r}();function sX(r,t){if(Ci()instanceof sc)return function(e,o){var n=Ci(),i=new iX(e.shape),s=n.runWebGPUProgram(i,[e,o],"float32");return ur().makeTensorFromTensorInfo(s)}(r,t);throw new Error("getOffsetVectorsGPU is not supported in this backend!")}function F3(r){var t=r.shape,e=t[0],o=t[1],n=t[2];return Te(function(){var i,s,a=Y(r,[e*o,n]),l=km(a,0),u=pr(Ae(l,Ee(o,"int32")),1),c=pr((i=l,s=o,Te(function(){var p=Ae(i,Ee(s,"int32"));return Ne(i,se(p,Ee(s,"int32")))})),1);return dt([u,c],1)})}function aX(r,t,e){return Te(function(){var o=function(n,i){for(var s=[],a=0;a<cn.length;a++){var l=n.get(a,0).valueOf(),u=n.get(a,1).valueOf(),c=lX(l,u,a,i),p=c.x,d=c.y;s.push(d),s.push(p)}return vr(s,[cn.length,2])}(r,e);return fe(Ue(se(r.toTensor(),Ee(t,"int32")),"float32"),o)})}function lX(r,t,e,o){return{y:o.get(r,t,e),x:o.get(r,t,e+cn.length)}}function uX(r,t,e){return rt(this,void 0,void 0,function(){var o,n,i,s,a,l,u,c,p,d;return ot(this,function(m){switch(m.label){case 0:return o=0,n=F3(r),[4,Promise.all([r.buffer(),t.buffer(),n.buffer()])];case 1:return i=m.sent(),s=i[0],a=i[1],l=i[2],[4,(u=aX(l,e,a)).buffer()];case 2:return c=m.sent(),p=Array.from(function(f,g){for(var x=g.shape[0],y=new Float32Array(x),v=0;v<x;v++){var k=g.get(v,0),N=g.get(v,1);y[v]=f.get(k,N,v)}return y}(s,l)),d=p.map(function(f,g){return o+=f,{y:c.get(g,0),x:c.get(g,1),score:f,name:cn[g]}}),n.dispose(),u.dispose(),[2,{keypoints:d,score:o/d.length}]}})})}function cX(r,t,e){return rt(this,void 0,void 0,function(){var o,n,i;return ot(this,function(s){return o=F3(r),n=function(a,l,u){return Te(function(){var c=sX(a,u);return fe(Ue(se(a,Ee(l,"int32")),"float32"),c)})}(o,e,t),i=nX(r,o),[2,[n,i]]})})}function u3(r,t){return(r-1)%t==0}var c3="https://storage.googleapis.com/tfjs-models/savedmodel/posenet/mobilenet/",p3="https://storage.googleapis.com/tfjs-models/savedmodel/posenet/resnet50/";function d3(r,t){return function(e,o){return(e-1)%o==0}(r,t)?r:Math.floor(r/t)*t+1}var m3=function(){function r(t,e){this.posenetModel=t;var o=this.posenetModel.inputs[0].shape;S.assert(o[1]===-1&&o[2]===-1,function(){return"Input shape [".concat(o[1],", ").concat(o[2],"] ")+"must both be equal to or -1"});var n,i,s=(n=e.inputResolution,i=e.outputStride,{height:d3(n.height,i),width:d3(n.width,i)});(function(a){S.assert(jj.indexOf(a)>=0,function(){return"outputStride of ".concat(a," is invalid. ")+"It must be either 8 or 16."})})(e.outputStride),function(a,l){S.assert(u3(a.height,l),function(){return"height of ".concat(a.height," is invalid for output stride ")+"".concat(l,".")}),S.assert(u3(a.width,l),function(){return"width of ".concat(a.width," is invalid for output stride ")+"".concat(l,".")})}(s,e.outputStride),this.inputResolution=s,this.outputStride=e.outputStride,this.architecture=e.architecture}return r.prototype.estimatePoses=function(t,e){return e===void 0&&(e=o3),rt(this,void 0,void 0,function(){return ot(this,function(o){return[2,this.estimatePosesGPU(t,e,!1)]})})},r.prototype.estimatePosesGPU=function(t,e,o){return e===void 0&&(e=o3),o===void 0&&(o=!1),rt(this,void 0,void 0,function(){var n,i,s,a,l,u,c,p,d,m,f,g,x,y,v,k,N,F;return ot(this,function(M){switch(M.label){case 0:return n=function(z){var H=z;if(H.maxPoses==null&&(H.maxPoses=1),H.maxPoses<=0)throw new Error("Invalid maxPoses ".concat(H.maxPoses,". Should be > 0."));if(H.maxPoses>1){if((H=xt(xt({},Xj),H)).scoreThreshold<0||H.scoreThreshold>1)throw new Error("Invalid scoreThreshold ".concat(H.scoreThreshold,". ")+"Should be in range [0.0, 1.0]");if(H.nmsRadius<=0)throw new Error("Invalid nmsRadius ".concat(H.nmsRadius,"."))}return H}(e),t==null?[2,o?[[],[]]:[]]:(this.maxPoses=n.maxPoses,i=mb(t,{outputTensorSize:this.inputResolution,keepAspectRatio:!0,borderMode:"replicate"}),s=i.imageTensor,a=i.padding,l=this.architecture==="ResNet50"?fe(s,Yj):C3(s,[-1,1]),u=this.posenetModel.predict(l),this.architecture==="ResNet50"?(c=lt(u[2],[0]),p=lt(u[3],[0]),d=lt(u[0],[0]),m=lt(u[1],[0])):(c=lt(u[0],[0]),p=lt(u[1],[0]),d=lt(u[2],[0]),m=lt(u[3],[0])),f=Kr(p),this.maxPoses!==1?[3,5]:o?[4,cX(f,c,this.outputStride)]:[3,2]);case 1:return x=M.sent(),v=x[0],y=x[1],g=[v,y],[3,4];case 2:return[4,uX(f,c,this.outputStride)];case 3:v=M.sent(),g=[v],M.label=4;case 4:return[3,7];case 5:if(o)throw new Error("GPU renderer only supports single pose!");return[4,rX(f,c,d,m,this.outputStride,this.maxPoses,n.scoreThreshold,n.nmsRadius)];case 6:g=M.sent(),M.label=7;case 7:if(o){if(n.flipHorizontal===!0)throw new Error("flipHorizontal is not supported!");k=this.getCanvasInfo(bc(t),this.inputResolution,a)}else F=bc(t),N=function(z,H,K,j){var J=H.height,ue=H.width,ce=J/(K.height*(1-j.top-j.bottom)),xe=ue/(K.width*(1-j.left-j.right)),be=-j.top*K.height,Ie=-j.left*K.width;if(xe===1&&ce===1&&be===0&&Ie===0)return z;for(var qe=0,je=z;qe<je.length;qe++)for(var it=0,qt=je[qe].keypoints;it<qt.length;it++){var Zt=qt[it];Zt.x=(Zt.x+Ie)*xe,Zt.y=(Zt.y+be)*ce}return z}(g,F,this.inputResolution,a),n.flipHorizontal&&(N=function(z,H){for(var K=0,j=z;K<j.length;K++)for(var J=0,ue=j[K].keypoints;J<ue.length;J++){var ce=ue[J];ce.x=H.width-1-ce.x}return z}(N,F));return s.dispose(),l.dispose(),Xe(u),c.dispose(),p.dispose(),d.dispose(),m.dispose(),f.dispose(),[2,o?[g,k]:N]}})})},r.prototype.getCanvasInfo=function(t,e,o){var n=t.height,i=t.width,s=n/(e.height*(1-o.top-o.bottom)),a=i/(e.width*(1-o.left-o.right)),l=-o.top*e.height;return[-o.left*e.width,l,a,s,t.width,t.height]},r.prototype.dispose=function(){this.posenetModel.dispose()},r.prototype.reset=function(){},r}();function pX(r){return r===void 0&&(r=ZR),rt(this,void 0,void 0,function(){var t,e,o,n,i;return ot(this,function(s){switch(s.label){case 0:return(t=function(c){var p=c||ZR;if(p.architecture==null&&(p.architecture="MobileNetV1"),JR.indexOf(p.architecture)<0)throw new Error("Invalid architecture ".concat(p.architecture,". ")+"Should be one of ".concat(JR));if(p.inputResolution==null&&(p.inputResolution={height:257,width:257}),p.outputStride==null&&(p.outputStride=16),e3[p.architecture].indexOf(p.outputStride)<0)throw new Error("Invalid outputStride ".concat(p.outputStride,". ")+"Should be one of ".concat(e3[p.architecture]," ")+"for architecture ".concat(p.architecture,"."));if(p.multiplier==null&&(p.multiplier=1),t3[p.architecture].indexOf(p.multiplier)<0)throw new Error("Invalid multiplier ".concat(p.multiplier,". ")+"Should be one of ".concat(t3[p.architecture]," ")+"for architecture ".concat(p.architecture,"."));if(p.quantBytes==null&&(p.quantBytes=4),r3.indexOf(p.quantBytes)<0)throw new Error("Invalid quantBytes ".concat(p.quantBytes,". ")+"Should be one of ".concat(r3," ")+"for architecture ".concat(p.architecture,"."));if(p.architecture==="MobileNetV1"&&p.outputStride===32&&p.multiplier!==1)throw new Error("When using an output stride of 32, you must select 1 as the multiplier.");return p}(r)).architecture!=="ResNet50"?[3,2]:(a=t.outputStride,l=t.quantBytes,u="model-stride".concat(a,".json"),e=l===4?p3+"float/"+u:p3+"quant".concat(l,"/")+u,[4,Oi(t.modelUrl||e)]);case 1:return o=s.sent(),[2,new m3(o,t)];case 2:return n=function(c,p,d){var m={1:"100",.75:"075",.5:"050"},f="model-stride".concat(c,".json");return d===4?c3+"float/".concat(m[p],"/")+f:c3+"quant".concat(d,"/").concat(m[p],"/")+f}(t.outputStride,t.multiplier,t.quantBytes),[4,Oi(t.modelUrl||n)];case 3:return i=s.sent(),[2,new m3(i,t)]}var a,l,u})})}function O3(r,t){return rt(this,void 0,void 0,function(){var e,o;return ot(this,function(n){switch(r){case or.PoseNet:return[2,pX(t)];case or.BlazePose:if(o=void 0,(e=t)!=null){if(e.runtime==="tfjs")return[2,Wj(t)];if(e.runtime==="mediapipe")return[2,mj(t)];o=e.runtime}throw new Error("Expect modelConfig.runtime to be either 'tfjs' "+"or 'mediapipe', but got ".concat(o));case or.MoveNet:return[2,qj(t)];default:throw new Error("".concat(r," is not a supported model name."))}})})}var L3={modelType:{SINGLEPOSE_LIGHTNING:"SinglePose.Lightning",SINGLEPOSE_THUNDER:"SinglePose.Thunder",MULTIPOSE_LIGHTNING:"MultiPose.Lightning"}};var js={},Ig={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function M3(r,t){js[r]=t}function to(r,t){if(!(r in js)||t!=null){let o=fX(r,t);if(o!==null)js[r]=o;else return console.log("Could not get context for WebGL version",r),null}let e=js[r];return e==null||e.isContextLost()?(delete js[r],to(r)):(e.disable(e.DEPTH_TEST),e.disable(e.STENCIL_TEST),e.disable(e.BLEND),e.disable(e.DITHER),e.disable(e.POLYGON_OFFSET_FILL),e.disable(e.SAMPLE_COVERAGE),e.enable(e.SCISSOR_TEST),e.enable(e.CULL_FACE),e.cullFace(e.BACK),js[r])}function mX(r){if(!G().getBool("IS_SAFARI")&&typeof OffscreenCanvas<"u"&&r===2)return new OffscreenCanvas(300,150);if(typeof document<"u")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function fX(r,t){if(r!==1&&r!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");let e=t??mX(r);return e.addEventListener("webglcontextlost",o=>{o.preventDefault(),delete js[r]},!1),G().getBool("SOFTWARE_WEBGL_ENABLED")&&(Ig.failIfMajorPerformanceCaveat=!1),r===1?e.getContext("webgl",Ig)||e.getContext("experimental-webgl",Ig):e.getContext("webgl2",Ig)}var Xs=function(r){return r[r.DENSE=0]="DENSE",r[r.SHARED_BATCH=1]="SHARED_BATCH",r}(Xs||{}),mr=function(r){return r[r.RENDER=0]="RENDER",r[r.UPLOAD=1]="UPLOAD",r[r.PIXELS=2]="PIXELS",r[r.DOWNLOAD=3]="DOWNLOAD",r}(mr||{}),nr=function(r){return r[r.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",r[r.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",r[r.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",r[r.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",r[r.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16",r}(nr||{});function Ys(r,t){return[t,r]}function B3(r,t){return r*t}function zp(r){let t=S.sizeFromShape(r),e=Math.ceil(t/4);return S.sizeToSquarishShape(e)}function pn(r,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(r/2))]}function V3(r,t){let[e,o]=pn(r,t);return e*o*4}function Up(r,t){let e=r,o,n,i,s,a,l,u,c,p,d;return G().getNumber("WEBGL_VERSION")===2?(o=e.R32F,n=e.R16F,i=e.RGBA16F,s=e.RGBA32F,a=e.RED,u=4,c=1,p=e.HALF_FLOAT,d=e.FLOAT,l=e.RGBA8):(o=r.RGBA,n=r.RGBA,i=r.RGBA,s=e.RGBA,a=r.RGBA,u=4,c=4,p=t!=null?t.HALF_FLOAT_OES:null,d=r.FLOAT,l=r.RGBA),{internalFormatFloat:o,internalFormatHalfFloat:n,internalFormatPackedHalfFloat:i,internalFormatPackedFloat:s,textureFormatFloat:a,downloadTextureFormat:l,downloadUnpackNumChannels:u,defaultNumChannels:c,textureTypeHalfFloat:p,textureTypeFloat:d}}function ye(r,t){let e=t();return G().getBool("DEBUG")&&hX(r),e}function hX(r){let t=r.getError();if(t!==r.NO_ERROR)throw new Error("WebGL Error: "+yX(r,t))}var gX=596e-10,xX=65504;function W3(r){return!!(G().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||r===0||gX<Math.abs(r)&&Math.abs(r)<xX)}function yX(r,t){switch(t){case r.NO_ERROR:return"NO_ERROR";case r.INVALID_ENUM:return"INVALID_ENUM";case r.INVALID_VALUE:return"INVALID_VALUE";case r.INVALID_OPERATION:return"INVALID_OPERATION";case r.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case r.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case r.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}function Gp(r,t){return Ln(r,()=>r.getExtension(t),'Extension "'+t+'" not supported on this browser.')}function z3(r,t){let e=Ln(r,()=>r.createShader(r.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(ye(r,()=>r.shaderSource(e,t)),ye(r,()=>r.compileShader(e)),r.getShaderParameter(e,r.COMPILE_STATUS)===!1)throw console.log(r.getShaderInfoLog(e)),new Error("Failed to compile vertex shader.");return e}function U3(r,t){let e=Ln(r,()=>r.createShader(r.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(ye(r,()=>r.shaderSource(e,t)),ye(r,()=>r.compileShader(e)),G().get("ENGINE_COMPILE_ONLY"))return e;if(r.getShaderParameter(e,r.COMPILE_STATUS)===!1)throw Sb(t,r.getShaderInfoLog(e)),new Error("Failed to compile fragment shader.");return e}var bX=/ERROR: [0-9]+:([0-9]+):/g;function Sb(r,t){let e=bX.exec(t);if(e==null){console.log(`Couldn't parse line number in error: ${t}`),console.log(r);return}let o=+e[1],n=r.split(`
`),i=n.length.toString().length+2,s=n.map((p,d)=>S.rightPad((d+1).toString(),i)+p),a=0;for(let p=0;p<s.length;p++)a=Math.max(s[p].length,a);let l=s.slice(0,o-1),u=s.slice(o-1,o),c=s.slice(o);console.log(l.join(`
`)),console.log(t.split(`
`)[0]),console.log(`%c ${S.rightPad(u[0],a)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join(`
`))}function G3(r){return Ln(r,()=>r.createProgram(),"Unable to create WebGLProgram.")}function H3(r,t){if(ye(r,()=>r.linkProgram(t)),!G().get("ENGINE_COMPILE_ONLY")&&r.getProgramParameter(t,r.LINK_STATUS)===!1)throw console.log(r.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}function Eg(r,t){if(ye(r,()=>r.validateProgram(t)),r.getProgramParameter(t,r.VALIDATE_STATUS)===!1)throw console.log(r.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function K3(r,t){let e=Ln(r,()=>r.createBuffer(),"Unable to create WebGLBuffer");return ye(r,()=>r.bindBuffer(r.ARRAY_BUFFER,e)),ye(r,()=>r.bufferData(r.ARRAY_BUFFER,t,r.STATIC_DRAW)),e}function q3(r,t){let e=Ln(r,()=>r.createBuffer(),"Unable to create WebGLBuffer");return ye(r,()=>r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,e)),ye(r,()=>r.bufferData(r.ELEMENT_ARRAY_BUFFER,t,r.STATIC_DRAW)),e}function j3(r){return Ln(r,()=>r.createTexture(),"Unable to create WebGLTexture.")}function X3(r,t){let e=G().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(r<=0||t<=0){let o=`[${r}x${t}]`;throw new Error("Requested texture size "+o+" is invalid.")}if(r>e||t>e){let o=`[${r}x${t}]`,n=`[${e}x${e}]`;throw new Error("Requested texture size "+o+" greater than WebGL maximum on this browser / GPU "+n+".")}}function Y3(r){return Ln(r,()=>r.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function wb(r,t,e,o,n,i,s){let a=r.getAttribLocation(t,e);return a===-1?!1:(ye(r,()=>r.bindBuffer(r.ARRAY_BUFFER,o)),ye(r,()=>r.vertexAttribPointer(a,n,r.FLOAT,!1,i,s)),ye(r,()=>r.enableVertexAttribArray(a)),!0)}function vX(r,t,e){wX(r,e),ye(r,()=>r.activeTexture(r.TEXTURE0+e)),ye(r,()=>r.bindTexture(r.TEXTURE_2D,t))}function Q3(r,t,e){return Ln(r,()=>r.getUniformLocation(t,e),'uniform "'+e+'" not present in program.')}function Z3(r,t,e){return r.getUniformLocation(t,e)}function J3(r,t,e,o){ye(r,()=>vX(r,t,o)),ye(r,()=>r.uniform1i(e,o))}function Ng(r,t,e){ye(r,()=>r.bindFramebuffer(r.FRAMEBUFFER,e)),ye(r,()=>r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,t,0))}function Cb(r,t){ye(r,()=>r.bindFramebuffer(r.FRAMEBUFFER,t)),ye(r,()=>r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,null,0))}function Hp(r){let t=r.checkFramebufferStatus(r.FRAMEBUFFER);if(t!==r.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+SX(r,t))}function SX(r,t){switch(t){case r.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case r.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case r.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case r.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}function Ln(r,t,e){let o=ye(r,()=>t());if(o==null)throw new Error(e);return o}function wX(r,t){let e=r.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,o=t+r.TEXTURE0;if(o<r.TEXTURE0||o>e){let n=`[gl.TEXTURE0, gl.TEXTURE${e}]`;throw new Error(`textureUnit must be in ${n}.`)}}function zi(r,t=2){return S.sizeFromShape(r.slice(0,r.length-t))}function Ui(r){if(r.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[r.length>1?r[r.length-2]:1,r[r.length-1]]}function Kp(r){let t=[1,1,1];return r.length===0||r.length===1&&r[0]===1||(t=[zi(r),...Ui(r)]),t}function e$(r,t=!1){let e=G().getNumber("WEBGL_MAX_TEXTURE_SIZE"),o=G().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");o===1/0&&G().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(o=e/2),t&&(e=e*2,o=o*2,r=r.map((a,l)=>l>=r.length-2?S.nearestLargerEven(r[l]):r[l]),r.length===1&&(r=[2,r[0]])),r.length!==2&&(r=S.squeezeShape(r).newShape);let n=S.sizeFromShape(r),i=null;r.length<=1&&n<=e?i=[1,n]:r.length===2&&r[0]<=e&&r[1]<=e?i=r:r.length===3&&r[0]*r[1]<=e&&r[2]<=e?i=[r[0]*r[1],r[2]]:r.length===3&&r[0]<=e&&r[1]*r[2]<=e?i=[r[0],r[1]*r[2]]:r.length===4&&r[0]*r[1]*r[2]<=e&&r[3]<=e?i=[r[0]*r[1]*r[2],r[3]]:r.length===4&&r[0]<=e&&r[1]*r[2]*r[3]<=e&&(i=[r[0],r[1]*r[2]*r[3]]);let s=i!=null&&Math.max(...i)>o&&Math.min(...i)<=(t?2:1)&&Math.min(...i)>0;if(i==null||s)if(t){let a=zi(r),l=2,u=2;r.length&&([l,u]=Ui(r)),n=a*(l/2)*(u/2),i=S.sizeToSquarishShape(n).map(c=>c*2)}else i=S.sizeToSquarishShape(n);return i}function Tg(r){return r%2===0}function Qs(r,t){if(r=r.slice(-2),t=t.slice(-2),S.arraysEqual(r,t)||!r.length||!t.length||r[0]===0||r[1]===0||t[0]===0||t[1]===0)return!0;if(r.length!==t.length){let e=r[r.length-1],o=t[t.length-1];if(e===o||Tg(e)&&Tg(o)&&(r[0]===1||t[0]===1))return!0}return r[1]===t[1]&&Tg(r[0])&&Tg(t[0])}var yb,bb;function t$(r){if(yb==null){let t=to(r);yb=t.getParameter(t.MAX_TEXTURE_SIZE)}return yb}function r$(r){if(bb==null){let t=to(r);bb=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,bb)}function o$(r){if(r===0)return 0;let t,e=to(r);return fo(e,"EXT_disjoint_timer_query_webgl2")&&r===2?t=2:fo(e,"EXT_disjoint_timer_query")?t=1:t=0,t}function fo(r,t){return r.getExtension(t)!=null}function _b(r){try{if(to(r)!=null)return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function n$(r){if(r===0)return!1;let t=to(r);if(r===1){if(!fo(t,"OES_texture_float"))return!1}else if(!fo(t,"EXT_color_buffer_float"))return!1;return vb(t)}function i$(r){if(r===0)return!1;let t=to(r);if(r===1){if(!fo(t,"OES_texture_float")||!fo(t,"WEBGL_color_buffer_float"))return!1}else{if(fo(t,"EXT_color_buffer_float"))return vb(t);let o="EXT_color_buffer_half_float";if(fo(t,o)){let n=t.getExtension(o);return CX(t,n)}return!1}return vb(t)}function vb(r){let t=Up(r),e=r.createTexture();r.bindTexture(r.TEXTURE_2D,e),r.texImage2D(r.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);let i=r.createFramebuffer();r.bindFramebuffer(r.FRAMEBUFFER,i),r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,e,0);let s=r.checkFramebufferStatus(r.FRAMEBUFFER)===r.FRAMEBUFFER_COMPLETE;return r.bindTexture(r.TEXTURE_2D,null),r.bindFramebuffer(r.FRAMEBUFFER,null),r.deleteTexture(e),r.deleteFramebuffer(i),s}function CX(r,t){let e=Up(r,t),o=r.createTexture();r.bindTexture(r.TEXTURE_2D,o),r.texImage2D(r.TEXTURE_2D,0,e.internalFormatHalfFloat,1,1,0,e.textureFormatFloat,e.textureTypeHalfFloat,null);let s=r.createFramebuffer();r.bindFramebuffer(r.FRAMEBUFFER,s),r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,o,0);let a=r.checkFramebufferStatus(r.FRAMEBUFFER)===r.FRAMEBUFFER_COMPLETE;return r.bindTexture(r.TEXTURE_2D,null),r.bindFramebuffer(r.FRAMEBUFFER,null),r.deleteTexture(o),r.deleteFramebuffer(s),a}function s$(r){return r!==2?!1:to(r).fenceSync!=null}function dn(r,t){Array.isArray(r)||(r=[r]),r.forEach(e=>{e!=null&&S.assert(e.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the WebGL backend.`)})}var Re=G();Re.registerFlag("HAS_WEBGL",()=>Re.getNumber("WEBGL_VERSION")>0);Re.registerFlag("WEBGL_VERSION",()=>_b(2)?2:_b(1)?1:0);Re.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);Re.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>Re.get("WEBGL_VERSION")===2);Re.registerFlag("WEBGL_CPU_FORWARD",()=>!0);Re.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);Re.registerFlag("WEBGL_PACK",()=>Re.getBool("HAS_WEBGL"));Re.registerFlag("WEBGL_PACK_NORMALIZATION",()=>Re.getBool("WEBGL_PACK"));Re.registerFlag("WEBGL_PACK_CLIP",()=>Re.getBool("WEBGL_PACK"));Re.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>Re.getBool("WEBGL_PACK"));Re.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>Re.getBool("WEBGL_PACK"));Re.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>Re.getBool("WEBGL_PACK"));Re.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>Re.getBool("WEBGL_PACK"));Re.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>Re.getBool("WEBGL_PACK"));Re.registerFlag("WEBGL_PACK_REDUCE",()=>Re.getBool("WEBGL_PACK"));Re.registerFlag("WEBGL_LAZILY_UNPACK",()=>Re.getBool("WEBGL_PACK"));Re.registerFlag("WEBGL_CONV_IM2COL",()=>Re.getBool("WEBGL_PACK"));Re.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",()=>Re.getBool("WEBGL_PACK"));Re.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>t$(Re.getNumber("WEBGL_VERSION")));Re.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>r$(Re.getNumber("WEBGL_VERSION")));Re.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{let r=Re.getNumber("WEBGL_VERSION");return r===0?0:o$(r)});Re.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>Re.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!wi.isMobile());Re.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>n$(Re.getNumber("WEBGL_VERSION")));Re.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>Re.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:Re.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));Re.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>i$(Re.getNumber("WEBGL_VERSION")));Re.registerFlag("WEBGL_FENCE_API_ENABLED",()=>s$(Re.getNumber("WEBGL_VERSION")));Re.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>Re.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);Re.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,r=>{if(typeof r!="number")throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but got ${r}.`);if(r<0&&r!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${r}.`)});Re.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>wi.isMobile()?1:-1,r=>{if(typeof r!="number")throw new Error(`WEBGL_FLUSH_THRESHOLD must be a number but got ${r}.`);if(r<0&&r!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${r}.`)});Re.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128);Re.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1);Re.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5);Re.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128);Re.registerFlag("WEBGL_EXP_CONV",()=>!1);Re.registerFlag("SOFTWARE_WEBGL_ENABLED",()=>Re.getBool("IS_TEST"));Re.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",()=>1/0);Re.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",()=>!1);Re.registerFlag("WEBGL2_ISNAN_CUSTOM",()=>!1);Re.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);function wt(){let r,t,e,o,n,i,s,a,l,u;return G().getNumber("WEBGL_VERSION")===2?(r="#version 300 es",t="in",e="out",o="in",n="texture",i="outputColor",s="out vec4 outputColor;",a=G().getBool("WEBGL2_ISNAN_CUSTOM")?`
      bool isnan_custom(float val) {
        uint floatToUint = floatBitsToUint(val);
        return (floatToUint & 0x7fffffffu) > 0x7f800000u;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `:"",l="",u=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(r="",t="attribute",e="varying",o="varying",n="texture2D",i="gl_FragColor",s="",a=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,l=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,u=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:r,attribute:t,varyingVs:e,varyingFs:o,texture2D:n,output:i,defineOutput:s,defineSpecialNaN:a,defineSpecialInf:l,defineRound:u}}function Vo(r,t,e="index"){let o=S.computeStrides(t);return o.map((n,i)=>{let s=`int ${r[i]} = ${e} / ${n}`,a=i===o.length-1?`int ${r[i+1]} = ${e} - ${r[i]} * ${n}`:`index -= ${r[i]} * ${n}`;return`${s}; ${a};`}).join("")}function Zs(r,t,e="index"){let o=S.computeStrides(t);return o.map((n,i)=>{let s=`int ${r[i]} = ${e} / outShapeStrides[${i}]`,a=i===o.length-1?`int ${r[i+1]} = ${e} - ${r[i]} * outShapeStrides[${i}]`:`index -= ${r[i]} * outShapeStrides[${i}]`;return`${s}; ${a};`}).join("")}function _X(r,t){let e=r.length,o=r.map(i=>`${t}[${i}]`),n=new Array(e-1);n[e-2]=o[e-1];for(let i=e-3;i>=0;--i)n[i]=`(${n[i+1]} * ${o[i+1]})`;return n}function a$(r,t,e="index"){let o=r.map((i,s)=>s),n=_X(o,t);return n.map((i,s)=>{let a=`int ${r[s]} = ${e} / ${n[s]}`,l=s===n.length-1?`int ${r[s+1]} = ${e} - ${r[s]} * ${n[s]}`:`index -= ${r[s]} * ${n[s]}`;return`${a}; ${l};`}).join("")}function vc(r){let t=S.computeStrides(r).map(e=>e.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;
  }
`}function Sc(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}var $g=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`;var{getBroadcastDims:l$}=R;function u$(r,t,e){let o=[];if(r.forEach(m=>{let f=S.sizeFromShape(m.shapeInfo.logicalShape);if(m.shapeInfo.isUniform?o.push(`uniform float ${m.name}${f>1?`[${f}]`:""};`):(o.push(`uniform sampler2D ${m.name};`),o.push(`uniform int offset${m.name};`)),e.enableShapeUniforms){let{uniformShape:g}=Pg(e.packedInputs,m.shapeInfo.logicalShape,m.shapeInfo.texShape);switch(g.length){case 1:o.push(`uniform int ${m.name}Shape;`);break;case 2:o.push(`uniform ivec2 ${m.name}Shape;`);break;case 3:o.push(`uniform ivec3 ${m.name}Shape;`);break;case 4:o.push(`uniform ivec4 ${m.name}Shape;`);break;default:break}o.push(`uniform ivec2 ${m.name}TexShape;`)}}),e.enableShapeUniforms){switch(t.logicalShape.length){case 1:o.push("uniform int outShape;");break;case 2:o.push("uniform ivec2 outShape;"),o.push("uniform int outShapeStrides;");break;case 3:o.push("uniform ivec3 outShape;"),o.push("uniform ivec2 outShapeStrides;");break;case 4:o.push("uniform ivec4 outShape;"),o.push("uniform ivec3 outShapeStrides;");break;default:break}o.push("uniform ivec2 outTexShape;")}e.customUniforms&&e.customUniforms.forEach(m=>{o.push(`uniform ${m.type} ${m.name}${m.arrayIndex?`[${m.arrayIndex}]`:""};`)});let n=o.join(`
`),i=r.map(m=>kX(m,t,e.packedInputs,e.enableShapeUniforms)).join(`
`),s=t.texShape,a=wt(),l=EX(a),u,c,p=$X(a);return t.isPacked?(u=IX(t.logicalShape,s,e.enableShapeUniforms),c=RX(a)):(u=TX(t.logicalShape,s,e.enableShapeUniforms),c=NX(a)),e.packedInputs&&(p+=FX),[p,l,c,n,u,i,e.userCode].join(`
`)}function Cc(r,t=!1){let e=r.shapeInfo.logicalShape;switch(e.length){case 0:return qX(r,t);case 1:return XX(r,t);case 2:return QX(r,t);case 3:return JX(r,t);case 4:return tY(r,t);case 5:return rY(r);case 6:return oY(r);default:throw new Error(`${e.length}-D input sampling is not yet supported`)}}function c$(r,t){switch(r.shapeInfo.logicalShape.length){case 0:return KX(r);case 1:return jX(r,t);case 2:return YX(r,t);case 3:return ZX(r,t);default:return eY(r,t)}}function kX(r,t,e=!1,o){let n="";e?n+=c$(r,o):n+=Cc(r,o);let i=r.shapeInfo.logicalShape,s=t.logicalShape;return i.length<=s.length&&(e?n+=nY(r,t):n+=iY(r,t)),n}function IX(r,t,e){switch(r.length){case 0:return p$();case 1:return OX(r,t,e);case 2:return GX(r,t,e);case 3:return MX(r,t,e);default:return VX(r,t,e)}}function TX(r,t,e){switch(r.length){case 0:return p$();case 1:return LX(r,t,e);case 2:return HX(r,t,e);case 3:return BX(r,t,e);case 4:return WX(r,t,e);case 5:return zX(r,t);case 6:return UX(r,t);default:throw new Error(`${r.length}-D output sampling is not yet supported`)}}function EX(r){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${r.texture2D}(textureSampler, uv).r;
    }
  `}function NX(r){return`
    void setOutput(float val) {
      ${r.output} = vec4(val, 0, 0, 0);
    }
  `}function RX(r){return`
    void setOutput(vec4 val) {
      ${r.output} = val;
    }
  `}function $X(r){return`${r.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${r.varyingFs} vec2 resultUV;
    ${r.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${r.defineSpecialNaN}
    ${r.defineSpecialInf}
    ${r.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${PX}
    ${DX}
    ${AX}
  `}var PX=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,DX=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,AX=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,FX=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function p$(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function OX(r,t,e){let o=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return o[0]===1?e?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${o[1]}.0);
      }
    `:o[1]===1?e?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${o[0]}.0);
      }
    `:e?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${o[0]}, ${o[1]}));
      return 2 * (resTexRC.x * ${o[1]} + resTexRC.y);
    }
  `}function LX(r,t,e){return t[0]===1?e?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${t[1]}.0);
      }
    `:t[1]===1?e?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${t[0]}.0);
      }
    `:e?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      return resTexRC.x * ${t[1]} + resTexRC.y;
    }
  `}function MX(r,t,e){if(e)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;let o=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],n=Math.ceil(r[2]/2),i=n*Math.ceil(r[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${o[0]}, ${o[1]}));
      int index = resTexRC.x * ${o[1]} + resTexRC.y;

      int b = index / ${i};
      index -= b * ${i};

      int r = 2 * (index / ${n});
      int c = imod(index, ${n}) * 2;

      return ivec3(b, r, c);
    }
  `}function BX(r,t,e){if(e)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${Zs(["r","c","d"],r)}
    return ivec3(r, c, d);
  }
`;let o=Vo(["r","c","d"],r);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${o}
      return ivec3(r, c, d);
    }
  `}function VX(r,t,e){if(e)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;let o=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],n=Math.ceil(r[r.length-1]/2),i=n*Math.ceil(r[r.length-2]/2),s=i,a="",l="b, r, c";for(let u=2;u<r.length-1;u++)s*=r[r.length-u-1],a=`
      int b${u} = index / ${s};
      index -= b${u} * ${s};
    `+a,l=`b${u}, `+l;return`
    ivec${r.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${o[0]}, ${o[1]}));
      int index = resTexRC.x * ${o[1]} + resTexRC.y;

      ${a}

      int b = index / ${i};
      index -= b * ${i};

      int r = 2 * (index / ${n});
      int c = imod(index, ${n}) * 2;

      return ivec${r.length}(${l});
    }
  `}function WX(r,t,e){if(e)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${Zs(["r","c","d","d2"],r)}
      return ivec4(r, c, d, d2);
    }
  `;let o=Vo(["r","c","d","d2"],r);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${o}
      return ivec4(r, c, d, d2);
    }
  `}function zX(r,t){let e=Vo(["r","c","d","d2","d3"],r);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},
                             ${t[1]}));

      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${e}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function UX(r,t){let e=Vo(["r","c","d","d2","d3","d4"],r);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${e}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function GX(r,t,e){let o=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(S.arraysEqual(r,t))return e?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${o[0]}, ${o[1]}));
      }
    `;let n=Math.ceil(r[1]/2);return e?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${o[0]}, ${o[1]}));

      int index = resTexRC.x * ${o[1]} + resTexRC.y;
      int r = 2 * (index / ${n});
      int c = imod(index, ${n}) * 2;

      return ivec2(r, c);
    }
  `}function HX(r,t,e){return S.arraysEqual(r,t)?e?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));
      }
    `:r[1]===1?e?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:r[0]===1?e?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:e?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      int r = index / ${r[1]};
      int c = index - r * ${r[1]};
      return ivec2(r, c);
    }
  `}function Js(r){return`offset${r}`}function KX(r){let t=r.name,e="get"+t.charAt(0).toUpperCase()+t.slice(1),o=wt();return`
    vec4 ${e}() {
      return ${o.texture2D}(${t}, halfCR);
    }
  `}function qX(r,t){let e=r.name,o="get"+e.charAt(0).toUpperCase()+e.slice(1);if(r.shapeInfo.isUniform)return`float ${o}() {return ${e};}`;let[n,i]=r.shapeInfo.texShape;if(n===1&&i===1)return`
      float ${o}() {
        return sampleTexture(${e}, halfCR);
      }
    `;let s=Js(e);if(t)return`
    float ${o}() {
      vec2 uv = uvFromFlat(${e}TexShape[0], ${e}TexShape[1], ${s});
      return sampleTexture(${e}, uv);
    }
  `;let[a,l]=r.shapeInfo.texShape;return`
    float ${o}() {
      vec2 uv = uvFromFlat(${a}, ${l}, ${s});
      return sampleTexture(${e}, uv);
    }
  `}function jX(r,t){let e=r.name,o="get"+e.charAt(0).toUpperCase()+e.slice(1),n=r.shapeInfo.texShape,i=wt();if(t)return`
    vec4 ${o}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${e}TexShape[0]) / 2.0), ceil(float(${e}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${i.texture2D}(${e}, uv);
    }
  `;let s=[Math.ceil(n[0]/2),Math.ceil(n[1]/2)];return`
    vec4 ${o}(int index) {
      vec2 uv = packedUVfrom1D(
        ${s[0]}, ${s[1]}, index);
      return ${i.texture2D}(${e}, uv);
    }
  `}function XX(r,t){let e=r.name,o="get"+e.charAt(0).toUpperCase()+e.slice(1);if(r.shapeInfo.isUniform)return`
      float ${o}(int index) {
        ${_c(r)}
      }
    `;let n=r.shapeInfo.texShape,i=n[0],s=n[1];if(s===1&&i===1)return`
      float ${o}(int index) {
        return sampleTexture(${e}, halfCR);
      }
    `;let a=Js(e);return s===1?t?`
      float ${o}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${a}) + 0.5) / float(${e}TexShape[0]));
        return sampleTexture(${e}, uv);
      }
    `:`
      float ${o}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${a}) + 0.5) / ${i}.0);
        return sampleTexture(${e}, uv);
      }
    `:i===1?t?`
      float ${o}(int index) {
        vec2 uv = vec2((float(index + ${a}) + 0.5) / float(${e}TexShape[1]), 0.5);
        return sampleTexture(${e}, uv);
      }
    `:`
      float ${o}(int index) {
        vec2 uv = vec2((float(index + ${a}) + 0.5) / ${s}.0, 0.5);
        return sampleTexture(${e}, uv);
      }
    `:t?`
    float ${o}(int index) {
      vec2 uv = uvFromFlat(${e}TexShape[0], ${e}TexShape[1], index + ${a});
      return sampleTexture(${e}, uv);
    }
  `:`
    float ${o}(int index) {
      vec2 uv = uvFromFlat(${i}, ${s}, index + ${a});
      return sampleTexture(${e}, uv);
    }
  `}function YX(r,t){let e=r.shapeInfo.logicalShape,o=r.name,n="get"+o.charAt(0).toUpperCase()+o.slice(1),i=r.shapeInfo.texShape,s=i[0],a=i[1],l=wt();if(i!=null&&S.arraysEqual(e,i))return t?`
      vec4 ${n}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}TexShape[1], ${o}TexShape[0]);

        return ${l.texture2D}(${o}, uv);
      }
    `:`
      vec4 ${n}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${a}.0, ${s}.0);

        return ${l.texture2D}(${o}, uv);
      }
    `;if(t)return`
    vec4 ${n}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${o}TexShape[0]) / 2.0), ceil(float(${o}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${o}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${l.texture2D}(${o}, uv);
    }
  `;let u=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],c=Math.ceil(e[1]/2);return`
    vec4 ${n}(int row, int col) {
      vec2 uv = packedUVfrom2D(${c}, ${u[0]}, ${u[1]}, row, col);
      return ${l.texture2D}(${o}, uv);
    }
  `}function QX(r,t){let e=r.shapeInfo.logicalShape,o=r.name,n="get"+o.charAt(0).toUpperCase()+o.slice(1),i=r.shapeInfo.texShape;if(i!=null&&S.arraysEqual(e,i)){if(t)return`
      float ${n}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}TexShape[1], ${o}TexShape[0]);
        return sampleTexture(${o}, uv);
      }
    `;let d=i[0],m=i[1];return`
    float ${n}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${m}.0, ${d}.0);
      return sampleTexture(${o}, uv);
    }
  `}let{newShape:s,keptDims:a}=S.squeezeShape(e),l=s;if(l.length<e.length){let d=kc(r,l),m=["row","col"];return`
      ${Cc(d,t)}
      float ${n}(int row, int col) {
        return ${n}(${Ic(m,a)});
      }
    `}if(r.shapeInfo.isUniform)return`
      float ${n}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${e[1]}, 1)));
        ${_c(r)}
      }
    `;let u=i[0],c=i[1],p=Js(o);return c===1?t?`
      float ${n}(int row, int col) {
        float index = dot(vec3(row, col, ${p}), vec3(${o}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${o}TexShape[0]));
        return sampleTexture(${o}, uv);
      }
    `:`
    float ${n}(int row, int col) {
      float index = dot(vec3(row, col, ${p}), vec3(${e[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);
      return sampleTexture(${o}, uv);
    }
  `:u===1?t?`
      float ${n}(int row, int col) {
        float index = dot(vec3(row, col, ${p}), vec3(${o}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${o}TexShape[1]), 0.5);
        return sampleTexture(${o}, uv);
      }
    `:`
    float ${n}(int row, int col) {
      float index = dot(vec3(row, col, ${p}), vec3(${e[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${c}.0, 0.5);
      return sampleTexture(${o}, uv);
    }
  `:t?`
      float ${n}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${o}Shape[1] + col + ${p};
        vec2 uv = uvFromFlat(${o}TexShape[0], ${o}TexShape[1], index);
        return sampleTexture(${o}, uv);
      }
    `:`
  float ${n}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${e[1]} + col + ${p};
    vec2 uv = uvFromFlat(${u}, ${c}, index);
    return sampleTexture(${o}, uv);
  }
`}function ZX(r,t){let e=r.shapeInfo.logicalShape,o=r.name,n="get"+o.charAt(0).toUpperCase()+o.slice(1),i=r.shapeInfo.texShape,s=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)];if(e[0]===1){let d=e.slice(1),m=[1,2],f=kc(r,d),g=["b","row","col"];return`
        ${c$(f,t)}
        vec4 ${n}(int b, int row, int col) {
          return ${n}(${Ic(g,m)});
        }
      `}let a=wt();if(t)return`
    vec4 ${n}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${o}TexShape[0]) / 2.0), ceil(float(${o}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${o}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${o}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${a.texture2D}(${o}, uv);
    }
  `;let l=s[0],u=s[1],c=Math.ceil(e[2]/2),p=c*Math.ceil(e[1]/2);return`
    vec4 ${n}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${l}, ${u}, ${p}, ${c}, b, row, col);
      return ${a.texture2D}(${o}, uv);
    }
  `}function JX(r,t){let e=r.shapeInfo.logicalShape,o=r.name,n="get"+o.charAt(0).toUpperCase()+o.slice(1),i=e[1]*e[2],s=e[2],{newShape:a,keptDims:l}=S.squeezeShape(e),u=a;if(u.length<e.length){let g=kc(r,u),x=["row","col","depth"];return`
        ${Cc(g,t)}
        float ${n}(int row, int col, int depth) {
          return ${n}(${Ic(x,l)});
        }
      `}if(r.shapeInfo.isUniform)return`
      float ${n}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${i}, ${s}, 1)));
        ${_c(r)}
      }
    `;let c=r.shapeInfo.texShape,p=c[0],d=c[1],m=r.shapeInfo.flatOffset;if(d===i&&m==null)return t?`
      float ${n}(int row, int col, int depth) {
        int stride1 = ${o}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${o}TexShape[1], ${o}TexShape[0]);
        return sampleTexture(${o}, uv);
      }
    `:`
        float ${n}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${s}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${d}.0, ${p}.0);
          return sampleTexture(${o}, uv);
        }
      `;if(d===s&&m==null)return t?`
      float ${n}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${o}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${o}TexShape[1], ${o}TexShape[0]);
        return sampleTexture(${o}, uv);
      }
    `:`
    float ${n}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${e[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}.0, ${p}.0);
      return sampleTexture(${o}, uv);
    }
  `;let f=Js(o);return t?`
    float ${n}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${o}Shape[1] * ${o}Shape[2];
      int stride1 = ${o}Shape[2];
      int index = row * stride0 + col * stride1 + depth + ${f};
      vec2 uv = uvFromFlat(${o}TexShape[0], ${o}TexShape[1], index);
      return sampleTexture(${o}, uv);
    }
    `:`
      float ${n}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${i} + col * ${s} + depth + ${f};
        vec2 uv = uvFromFlat(${p}, ${d}, index);
        return sampleTexture(${o}, uv);
      }
  `}function eY(r,t){let e=r.name,o="get"+e.charAt(0).toUpperCase()+e.slice(1),n=wt();if(t)return`
    vec4 ${o}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${e}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${e}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${e}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${e}TexShape[0]) / 2.0), ceil(float(${e}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${n.texture2D}(${e}, uv);
    }
  `;let i=r.shapeInfo.logicalShape,s=i.length,a=r.shapeInfo.texShape,l=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],u=l[0],c=l[1],p=Math.ceil(i[s-1]/2),d=p*Math.ceil(i[s-2]/2),m="int b, int row, int col",f=`b * ${d} + (row / 2) * ${p} + (col / 2)`;for(let g=2;g<s-1;g++)m=`int b${g}, `+m,d*=i[s-g-1],f=`b${g} * ${d} + `+f;return`
    vec4 ${o}(${m}) {
      int index = ${f};
      int texR = index / ${c};
      int texC = index - texR * ${c};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}, ${u});
      return ${n.texture2D}(${e}, uv);
    }
  `}function tY(r,t){let e=r.shapeInfo.logicalShape,o=r.name,n="get"+o.charAt(0).toUpperCase()+o.slice(1),i=e[3],s=e[2]*i,a=e[1]*s,{newShape:l,keptDims:u}=S.squeezeShape(e);if(l.length<e.length){let v=kc(r,l),k=["row","col","depth","depth2"];return`
      ${Cc(v,t)}
      float ${n}(int row, int col, int depth, int depth2) {
        return ${n}(${Ic(k,u)});
      }
    `}if(r.shapeInfo.isUniform)return`
      float ${n}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${a}, ${s}, ${i}, 1)));
        ${_c(r)}
      }
    `;let c=r.shapeInfo.flatOffset,p=r.shapeInfo.texShape,d=p[0],m=p[1],f=`int stride2 = ${o}Shape[3];`,g=`int stride1 = ${o}Shape[2] * stride2;`,x=`int stride0 = ${o}Shape[1] * stride1;`;if(m===a&&c==null)return t?`
      float ${n}(int row, int col, int depth, int depth2) {
        ${f}
        ${g}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${o}TexShape[1], ${o}TexShape[0]);
        return sampleTexture(${o}, uv);
      }
    `:`
      float ${n}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${s}, ${i}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${m}.0, ${d}.0);
        return sampleTexture(${o}, uv);
      }
    `;if(m===i&&c==null)return t?`
      float ${n}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${o}Shape[1] * ${o}Shape[2], ${o}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${o}TexShape[1], ${o}TexShape[0]);
        return sampleTexture(${o}, uv);
      }
    `:`
      float ${n}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${e[1]*e[2]}, ${e[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${m}.0, ${d}.0);
        return sampleTexture(${o}, uv);
      }
    `;let y=Js(o);return t?`
    float ${n}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${f}
      ${g}
      ${x}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${o}TexShape[0], ${o}TexShape[1], index + ${y});
      return sampleTexture(${o}, uv);
    }
  `:`
    float ${n}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${a} + col * ${s} +
          depth * ${i} + depth2;
      vec2 uv = uvFromFlat(${d}, ${m}, index + ${y});
      return sampleTexture(${o}, uv);
    }
  `}function rY(r){let t=r.shapeInfo.logicalShape,e=r.name,o="get"+e.charAt(0).toUpperCase()+e.slice(1),n=t[4],i=t[3]*n,s=t[2]*i,a=t[1]*s,{newShape:l,keptDims:u}=S.squeezeShape(t);if(l.length<t.length){let g=kc(r,l),x=["row","col","depth","depth2","depth3"];return`
      ${Cc(g)}
      float ${o}(int row, int col, int depth, int depth2, int depth3) {
        return ${o}(${Ic(x,u)});
      }
    `}if(r.shapeInfo.isUniform)return`
      float ${o}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${a}, ${s}, ${i}, ${n})) +
          depth3;
        ${_c(r)}
      }
    `;let c=r.shapeInfo.flatOffset,p=r.shapeInfo.texShape,d=p[0],m=p[1];if(m===a&&c==null)return`
      float ${o}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${s}, ${i}, ${n}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${m}.0, ${d}.0);
        return sampleTexture(${e}, uv);
      }
    `;if(m===n&&c==null)return`
      float ${o}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]},
               ${t[2]*t[3]}, ${t[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${m}.0, ${d}.0);
        return sampleTexture(${e}, uv);
      }
    `;let f=Js(e);return`
    float ${o}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${a} + col * ${s} + depth * ${i} +
          depth2 * ${n} + depth3 + ${f};
      vec2 uv = uvFromFlat(${d}, ${m}, index);
      return sampleTexture(${e}, uv);
    }
  `}function oY(r){let t=r.shapeInfo.logicalShape,e=r.name,o="get"+e.charAt(0).toUpperCase()+e.slice(1),{newShape:n,keptDims:i}=S.squeezeShape(t);if(n.length<t.length){let x=kc(r,n),y=["row","col","depth","depth2","depth3","depth4"];return`
      ${Cc(x)}
      float ${o}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${o}(${Ic(y,i)});
      }
    `}let s=t[5],a=t[4]*s,l=t[3]*a,u=t[2]*l,c=t[1]*u;if(r.shapeInfo.isUniform)return`
      float ${o}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${c}, ${u}, ${l}, ${a})) +
          dot(
            vec2(depth3, depth4),
            vec2(${s}, 1)));
        ${_c(r)}
      }
    `;let p=r.shapeInfo.flatOffset,d=r.shapeInfo.texShape,m=d[0],f=d[1];if(f===c&&p==null)return`
      float ${o}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${u}, ${l}, ${a}, ${s})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${m}.0);
        return sampleTexture(${e}, uv);
      }
    `;if(f===s&&p==null)return`
      float ${o}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]*t[4]},
               ${t[2]*t[3]*t[4]},
               ${t[3]*t[4]},
               ${t[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${m}.0);
        return sampleTexture(${e}, uv);
      }
    `;let g=Js(e);return`
    float ${o}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${c} + col * ${u} + depth * ${l} +
          depth2 * ${a} + depth3 * ${s} + depth4 + ${g};
      vec2 uv = uvFromFlat(${m}, ${f}, index);
      return sampleTexture(${e}, uv);
    }
  `}function _c(r){let t=r.name,e=S.sizeFromShape(r.shapeInfo.logicalShape);return e<2?`return ${t};`:`
    for (int i = 0; i < ${e}; i++) {
      if (i == index) {
        return ${t}[i];
      }
    }
  `}function nY(r,t){let e=r.name,o=e.charAt(0).toUpperCase()+e.slice(1),n="get"+o+"AtOutCoords",i=r.shapeInfo.logicalShape.length,s=t.logicalShape.length,a=l$(r.shapeInfo.logicalShape,t.logicalShape),l=Le(s),u=s-i,c,p=["x","y","z","w","u","v"];i===0?c="":s<2&&a.length>=1?c="coords = 0;":c=a.map(v=>`coords.${p[v+u]} = 0;`).join(`
`);let d="";s<2&&i>0?d="coords":d=r.shapeInfo.logicalShape.map((v,k)=>`coords.${p[k+u]}`).join(", ");let m="return outputValue;",g=S.sizeFromShape(r.shapeInfo.logicalShape)===1,y=S.sizeFromShape(t.logicalShape)===1;if(i===1&&!g&&!y)m=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(g&&!y)s===1?m=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:m=`
        return vec4(outputValue.x);
      `;else if(a.length){let v=i-2,k=i-1;a.indexOf(v)>-1&&a.indexOf(k)>-1?m="return vec4(outputValue.x);":a.indexOf(v)>-1?m="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":a.indexOf(k)>-1&&(m="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${n}() {
      ${l} coords = getOutputCoords();
      ${c}
      vec4 outputValue = get${o}(${d});
      ${m}
    }
  `}function iY(r,t){let e=r.name,o=e.charAt(0).toUpperCase()+e.slice(1),n="get"+o+"AtOutCoords",i=t.texShape,s=r.shapeInfo.texShape,a=r.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!r.shapeInfo.isUniform&&a===l&&r.shapeInfo.flatOffset==null&&S.arraysEqual(s,i))return`
      float ${n}() {
        return sampleTexture(${e}, resultUV);
      }
    `;let u=Le(l),c=l$(r.shapeInfo.logicalShape,t.logicalShape),p=l-a,d,m=["x","y","z","w","u","v"];a===0?d="":l<2&&c.length>=1?d="coords = 0;":d=c.map(g=>`coords.${m[g+p]} = 0;`).join(`
`);let f="";return l<2&&a>0?f="coords":f=r.shapeInfo.logicalShape.map((g,x)=>`coords.${m[x+p]}`).join(", "),`
    float ${n}() {
      ${u} coords = getOutputCoords();
      ${d}
      return get${o}(${f});
    }
  `}function Le(r){if(r<=1)return"int";if(r===2)return"ivec2";if(r===3)return"ivec3";if(r===4)return"ivec4";if(r===5)return"ivec5";if(r===6)return"ivec6";throw Error(`GPU for rank ${r} is not yet supported`)}function Pg(r,t,e){let{newShape:o,keptDims:n}=S.squeezeShape(t),i=t.length,s=r&&i===3&&t[0]===1,a=s?t.slice(1):o,l=!r&&i>1&&!S.arraysEqual(t,e)&&o.length<i||s;return{useSqueezeShape:l,uniformShape:l?a:t,keptDims:n}}function kc(r,t){let e=JSON.parse(JSON.stringify(r));return e.shapeInfo.logicalShape=t,e}function Ic(r,t){return t.map(e=>r[e]).join(", ")}function m$(r,t,e,o){let n=e.map((c,p)=>{let d={logicalShape:c.shape,texShape:c.isUniform?null:c.texData.texShape,isUniform:c.isUniform,isPacked:c.isUniform?!1:c.texData.isPacked,flatOffset:null};return c.texData!=null&&c.texData.slice!=null&&c.texData.slice.flatOffset>0&&(d.flatOffset=c.texData.slice.flatOffset),{name:t.variableNames[p],shapeInfo:d}}),i=n.map(c=>c.shapeInfo),s={logicalShape:o.shape,texShape:o.texData.texShape,isUniform:!1,isPacked:o.texData.isPacked,flatOffset:null},a=u$(n,s,t),l=U3(r.gl,a),u=r.createProgram(l);return G().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:l,source:a,webGLProgram:u,inShapeInfos:i,outShapeInfo:s,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(r.buildVao(u),Object.assign({program:t,fragmentShader:l,source:a,webGLProgram:u,inShapeInfos:i,outShapeInfo:s},kb(r,t,u)))}function kb(r,t,e){let o=[],n=[],i,s,a,l=null,u=null;u=r.getUniformLocation(e,"NAN",!1),G().getNumber("WEBGL_VERSION")===1&&(l=r.getUniformLocation(e,"INFINITY",!1));let c=!1;for(let p of t.variableNames){let d={name:p,uniform:r.getUniformLocation(e,p,c),offset:r.getUniformLocation(e,`offset${p}`,c)};t.enableShapeUniforms&&(d.shape=r.getUniformLocation(e,`${p}Shape`,c),d.texShape=r.getUniformLocation(e,`${p}TexShape`,c)),o.push(d)}if(t.enableShapeUniforms&&(i=r.getUniformLocation(e,"outShape",c),a=r.getUniformLocation(e,"outShapeStrides",c),s=r.getUniformLocation(e,"outTexShape",c)),t.customUniforms)for(let p of t.customUniforms)n.push(r.getUniformLocation(e,p.name,c));return{variablesLocations:o,customUniformLocations:n,infLoc:l,nanLoc:u,outShapeLocation:i,outShapeStridesLocation:a,outTexShapeLocation:s}}function d$(r,t){if(r.length!==t.length)throw Error(`Binary was compiled with ${r.length} inputs, but was executed with ${t.length} inputs`);r.forEach((e,o)=>{let n=e.logicalShape,i=t[o],s=i.shape;if(!S.arraysEqual(n,s))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${n} and ${s} must match`);if(e.isUniform&&i.isUniform)return;let a=e.texShape,l=i.isUniform?null:i.texData.texShape;if(!S.arraysEqual(a,l))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${a} and ${l} must match`)})}function f$(r,t,e,o,n){t.program.enableShapeUniforms||(d$(t.inShapeInfos,e),d$([t.outShapeInfo],[o]));let i=o.texData.texture,s=o.texData.texShape;o.texData.isPacked?r.setOutputPackedMatrixTexture(i.texture,s[0],s[1]):r.setOutputMatrixTexture(i.texture,s[0],s[1]),r.setProgram(t.webGLProgram),r.bindVertexArray(t.webGLProgram.vao),G().getNumber("WEBGL_VERSION")===1&&t.infLoc!==null&&r.gl.uniform1f(t.infLoc,1/0),t.nanLoc!==null&&r.gl.uniform1f(t.nanLoc,NaN);for(let l=0;l<e.length;++l){let u=e[l],{uniform:c,offset:p,shape:d,texShape:m}=t.variablesLocations[l];if(d){let{uniformShape:f}=Pg(t.program.packedInputs,u.shape,u.texData.texShape);switch(f.length){case 1:r.gl.uniform1iv(d,new Int32Array(f));break;case 2:r.gl.uniform2iv(d,new Int32Array(f));break;case 3:r.gl.uniform3iv(d,new Int32Array(f));break;case 4:r.gl.uniform4iv(d,new Int32Array(f));break;default:break}}if(m&&r.gl.uniform2i(m,u.texData.texShape[0],u.texData.texShape[1]),c!=null){if(u.isUniform){if(S.sizeFromShape(u.shape)<2)r.gl.uniform1f(c,u.uniformValues[0]);else{let f=u.uniformValues;f instanceof Float32Array||(f=new Float32Array(f)),r.gl.uniform1fv(c,f)}continue}u.texData.slice!=null&&p!=null&&r.gl.uniform1i(p,u.texData.slice.flatOffset),r.setInputMatrixTexture(u.texData.texture.texture,c,l)}}let a=t.outShapeLocation;if(a)switch(o.shape.length){case 1:r.gl.uniform1iv(a,new Int32Array(o.shape));break;case 2:r.gl.uniform2iv(a,new Int32Array(o.shape));break;case 3:r.gl.uniform3iv(a,new Int32Array(o.shape));break;case 4:r.gl.uniform4iv(a,new Int32Array(o.shape));break;default:break}if(t.outShapeStridesLocation){let l=S.computeStrides(o.shape);switch(o.shape.length){case 2:r.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(l));break;case 3:r.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(l));break;case 4:r.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(l));break;default:break}}if(t.outTexShapeLocation&&r.gl.uniform2i(t.outTexShapeLocation,o.texData.texShape[0],o.texData.texShape[1]),t.program.customUniforms&&n)for(let l=0;l<t.program.customUniforms.length;++l){let u=t.program.customUniforms[l],c=t.customUniformLocations[l],p=n[l];if(u.type==="float")r.gl.uniform1fv(c,p);else if(u.type==="vec2")r.gl.uniform2fv(c,p);else if(u.type==="vec3")r.gl.uniform3fv(c,p);else if(u.type==="vec4")r.gl.uniform4fv(c,p);else if(u.type==="int")r.gl.uniform1iv(c,p);else if(u.type==="ivec2")r.gl.uniform2iv(c,p);else if(u.type==="ivec3")r.gl.uniform3iv(c,p);else if(u.type==="ivec4")r.gl.uniform4iv(c,p);else throw Error(`uniform type ${u.type} is not supported yet.`)}r.executeProgram()}function h$(r,t,e){let o="";t.concat(e).forEach(s=>{let a=s.texData!=null&&s.texData.slice!=null&&s.texData.slice.flatOffset>0;if(r.enableShapeUniforms&&!s.isUniform){let l=s.texData.texShape,{useSqueezeShape:u,uniformShape:c,keptDims:p}=Pg(r.packedInputs,s.shape,l),d="",m="",f="";if(c.length===1&&r.packedInputs){let F=[Math.ceil(l[0]/2),Math.ceil(l[1]/2)];d=`${F[0]>1}_${F[1]>1}`}else if(c.length===2&&!r.packedInputs)m=`${c[0]>1}_${c[1]>1}`;else if(c.length>2&&!r.packedInputs){let F=S.computeStrides(c);f=`${F[0]===l[1]}_${F[F.length-1]===l[1]}`}let g=s.shape.length,x=c.length===2&&S.arraysEqual(s.shape,l),y=S.sizeFromShape(s.shape)===1,v=R.getBroadcastDims(s.shape,e.shape),k=!r.packedInputs&&g===e.shape.length&&S.arraysEqual(l,e.texData.texShape),N=r.packedInputs||c.length>2?"":`${l[0]>1}_${l[1]>1}`;o+=`${g}_${k}_${u?p:""}_${c.length}_${y}_${v}_${x}_${d}_${m}_${f}_${N}_${a}`}else{let l=s.isUniform?"uniform":s.texData.texShape;o+=`${s.shape}_${l}_${a}`}});let n=r.userCode,i=r.constructor.name;return i+="_"+o+"_"+n+`${G().getNumber("WEBGL_VERSION")}`,i}function at(r){return G().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&r<=4}var Dg=class{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=Xs.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];let e=wt();this.outputShape=t,this.enableShapeUniforms=at(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Zs(["r","c","d"],t):Vo(["r","c","d"],t)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${e.output} = result;
      }
    `}};var Ag=class{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=Xs.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];let e=wt();this.outputShape=t,this.enableShapeUniforms=at(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Zs(["r","c","d"],t):Vo(["r","c","d"],t)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${e.output} = result;
      }
    `}};var Fg=class{constructor(t){this.variableNames=["A"],this.outTexUsage=mr.DOWNLOAD;let e=wt();this.outputShape=t,this.userCode=`
      ${$g}

      void main() {
        float x = getAAtOutCoords();
        ${e.output} = encode_float(x);
      }
    `}};var Og=class{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=mr.DOWNLOAD;let e=wt();this.outputShape=t,this.userCode=`
      ${$g}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${e.output} = encode_float(x);
      }
    `}};var lY={R:0,G:1,B:2,A:3},qp=class{constructor(t,e=!1,o="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];let n=wt();this.outputShape=t,this.enableShapeUniforms=at(this.outputShape.length);let i="result";e&&(i="floor(result * 255. + 0.5)");let s="";for(let a=0;a<o.length;a++){let l=o[a];s+=`
          if(offset == ${a}) {
            result = values[${lY[l]}];
          }`}this.userCode=`
      ${this.enableShapeUniforms?Sc():vc(t)}

      void main() {
        ivec3 coords = getOutputCoords();
        int flatIndex = getFlatIndex(coords);
        float result = 0.;
        int offset = imod(flatIndex, ${o.length});

        flatIndex = idiv(flatIndex, ${o.length}, 1.);

        int r = flatIndex / texShape[1];
        if (r < texShape[0]) {
          int c = imod(flatIndex, texShape[1]);
          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
          vec4 values = ${n.texture2D}(A, uv);
          ${s}
        }
        ${n.output} = vec4(${i}, 0., 0., 0.);
      }
    `}};var Lg=class{constructor(t,e=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];let o=wt();this.outputShape=t,this.enableShapeUniforms=at(this.outputShape.length);let n="",i="result";e&&(i="floor(result * 255. + 0.5)");for(let s=0;s<=1;s++)for(let a=0;a<=1;a++){let l=s*2+a;n+=`
          localCoords = coords;
          if(localCoords[2] + ${a} < ${this.enableShapeUniforms?"outShape[2]":`${t[2]}`}) {
          localCoords[2] += ${a};
          if (localCoords[1] + ${s} < ${this.enableShapeUniforms?"outShape[1]":`${t[1]}`}) {
            localCoords[1] += ${s};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${o.texture2D}(A, uv);

            if (offset == 0) {
              result[${l}] = values[0];
            } else if (offset == 1) {
              result[${l}] = values[1];
            } else if (offset == 2) {
              result[${l}] = values[2];
            } else {
              result[${l}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?Sc():vc(t)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${n}

          ${o.output} = ${i};
        }
    `}};function g$(r){let t=wt(),e=`${t.version}
    precision highp float;
    ${t.attribute} vec3 clipSpacePos;
    ${t.attribute} vec2 uv;
    ${t.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return z3(r,e)}function x$(r){let t=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return K3(r,t)}function y$(r){let t=new Uint16Array([0,1,2,2,1,3]);return q3(r,t)}function jp(r,t,e,o,n,i){X3(t,e);let s=j3(r),a=r.TEXTURE_2D;return ye(r,()=>r.bindTexture(a,s)),ye(r,()=>r.texParameteri(a,r.TEXTURE_WRAP_S,r.CLAMP_TO_EDGE)),ye(r,()=>r.texParameteri(a,r.TEXTURE_WRAP_T,r.CLAMP_TO_EDGE)),ye(r,()=>r.texParameteri(a,r.TEXTURE_MIN_FILTER,r.NEAREST)),ye(r,()=>r.texParameteri(a,r.TEXTURE_MAG_FILTER,r.NEAREST)),G().getNumber("WEBGL_VERSION")===1?ye(r,()=>r.texImage2D(a,0,o,t,e,0,n,i,null)):ye(r,()=>r.texStorage2D(a,1,o,t,e)),ye(r,()=>r.bindTexture(r.TEXTURE_2D,null)),{texture:s,texShape:[e,t]}}function Ib(r){return r.internalFormatFloat}function b$(r,t,e,o){let[n,i]=Ys(t,e);return jp(r,n,i,Ib(o),o.textureFormatFloat,r.FLOAT)}function Tb(r){return r.internalFormatHalfFloat}function v$(r,t,e,o){let[n,i]=Ys(t,e);return jp(r,n,i,Tb(o),o.textureFormatFloat,o.textureTypeHalfFloat)}function Eb(r){return r.downloadTextureFormat}function S$(r,t,e,o){let[n,i]=Ys(t,e);return jp(r,n,i,Eb(o),r.RGBA,r.UNSIGNED_BYTE)}function Nb(r){return r.internalFormatPackedFloat}function w$(r,t,e,o){let[n,i]=pn(t,e);return jp(r,n,i,Nb(o),r.RGBA,r.FLOAT)}function Rb(r){return r.internalFormatPackedHalfFloat}function C$(r,t,e,o){let[n,i]=pn(t,e);return jp(r,n,i,Rb(o),r.RGBA,o.textureTypeHalfFloat)}function _$(r,t,e){return ye(r,()=>r.bindBuffer(r.ARRAY_BUFFER,e)),wb(r,t,"clipSpacePos",e,3,20,0)&&wb(r,t,"uv",e,2,20,12)}function k$(r,t,e,o,n,i){ye(r,()=>r.bindTexture(r.TEXTURE_2D,t));let s,a,l;n instanceof Uint8Array?(s=new Uint8Array(e*o*4),a=r.UNSIGNED_BYTE,l=r.RGBA):(s=new Float32Array(e*o*4),a=r.FLOAT,l=i.internalFormatPackedFloat),s.set(n),G().getNumber("WEBGL_VERSION")===2?ye(r,()=>r.texSubImage2D(r.TEXTURE_2D,0,0,0,e,o,r.RGBA,a,s)):ye(r,()=>r.texImage2D(r.TEXTURE_2D,0,l,e,o,0,r.RGBA,a,s)),ye(r,()=>r.bindTexture(r.TEXTURE_2D,null))}function I$(r,t,e){ye(r,()=>r.bindTexture(r.TEXTURE_2D,t)),e.data instanceof Uint8Array?G().getNumber("WEBGL_VERSION")===2?ye(r,()=>r.texSubImage2D(r.TEXTURE_2D,0,0,0,e.width,e.height,r.RGBA,r.UNSIGNED_BYTE,e.data)):ye(r,()=>r.texImage2D(r.TEXTURE_2D,0,r.RGBA,e.width,e.height,0,r.RGBA,r.UNSIGNED_BYTE,e.data)):G().getNumber("WEBGL_VERSION")===2?ye(r,()=>r.texSubImage2D(r.TEXTURE_2D,0,0,0,r.RGBA,r.UNSIGNED_BYTE,e)):ye(r,()=>r.texImage2D(r.TEXTURE_2D,0,r.RGBA,r.RGBA,r.UNSIGNED_BYTE,e)),ye(r,()=>r.bindTexture(r.TEXTURE_2D,null))}function T$(r,t,e,o){let n=r.createBuffer();ye(r,()=>r.bindBuffer(r.PIXEL_PACK_BUFFER,n));let a=4*4*t*e;return ye(r,()=>r.bufferData(r.PIXEL_PACK_BUFFER,a,r.STREAM_READ)),ye(r,()=>r.readPixels(0,0,e,t,r.RGBA,r.FLOAT,0)),ye(r,()=>r.bindBuffer(r.PIXEL_PACK_BUFFER,null)),n}function E$(r,t,e){let o=r,n=new Float32Array(e);return o.bindBuffer(o.PIXEL_PACK_BUFFER,t),o.getBufferSubData(o.PIXEL_PACK_BUFFER,0,n),o.bindBuffer(o.PIXEL_PACK_BUFFER,null),n}function N$(r,t,e,o){let[n,i]=Ys(t,e),s=4,a=new Uint8Array(B3(t*e,s));return ye(r,()=>r.readPixels(0,0,n,i,o.downloadTextureFormat,r.UNSIGNED_BYTE,a)),new Float32Array(a.buffer)}function R$(r,t,e,o,n,i,s,a){let l=r,u=new Float32Array(V3(i,s));return l.bindBuffer(l.PIXEL_PACK_BUFFER,t),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,u),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),u}function $$(r,t,e){let o=new Float32Array(t*e*4);return ye(r,()=>r.readPixels(0,0,e,t,r.RGBA,r.FLOAT,o)),o}var Tc=class{constructor(t){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];let e=G().getNumber("WEBGL_VERSION");if(t!=null?(this.gl=t,M3(e,t)):this.gl=to(e),t=this.gl,G().getNumber("WEBGL_VERSION")===2){let i=t;this.createVertexArray=()=>ye(i,()=>i.createVertexArray()),this.bindVertexArray=s=>ye(i,()=>i.bindVertexArray(s)),this.deleteVertexArray=s=>ye(i,()=>i.deleteVertexArray(s)),this.getVertexArray=()=>ye(i,()=>i.getParameter(i.VERTEX_ARRAY_BINDING))}else if(t!=null){let i=t.getExtension("OES_vertex_array_object");if(i==null)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>ye(t,()=>i.createVertexArrayOES()),this.bindVertexArray=s=>ye(t,()=>i.bindVertexArrayOES(s)),this.deleteVertexArray=s=>ye(t,()=>i.deleteVertexArrayOES(s)),this.getVertexArray=()=>ye(t,()=>t.getParameter(i.VERTEX_ARRAY_BINDING_OES))}let o="WEBGL_color_buffer_float",n="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),G().getNumber("WEBGL_VERSION")===1){let i="OES_texture_float",s="OES_texture_half_float";if(this.textureFloatExtension=Gp(this.gl,i),fo(this.gl,s))this.textureHalfFloatExtension=Gp(this.gl,s);else if(G().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(o),fo(this.gl,n))this.colorBufferHalfFloatExtension=Gp(this.gl,n);else if(G().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(o="EXT_color_buffer_float",fo(this.gl,o))this.colorBufferFloatExtension=this.gl.getExtension(o);else if(fo(this.gl,n))this.colorBufferHalfFloatExtension=this.gl.getExtension(n);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=x$(this.gl),this.indexBuffer=y$(this.gl),this.framebuffer=Y3(this.gl),this.textureConfig=Up(this.gl,this.textureHalfFloatExtension)}get debug(){return G().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");let t=this.gl;ye(t,()=>t.finish()),ye(t,()=>t.bindFramebuffer(t.FRAMEBUFFER,null)),ye(t,()=>t.deleteFramebuffer(this.framebuffer)),ye(t,()=>t.bindBuffer(t.ARRAY_BUFFER,null)),ye(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,null)),ye(t,()=>t.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(t,e){return this.throwIfDisposed(),b$(this.gl,t,e,this.textureConfig)}createFloat16MatrixTexture(t,e){return this.throwIfDisposed(),v$(this.gl,t,e,this.textureConfig)}createUnsignedBytesMatrixTexture(t,e){return this.throwIfDisposed(),S$(this.gl,t,e,this.textureConfig)}uploadPixelDataToTexture(t,e){this.throwIfDisposed(),I$(this.gl,t,e)}uploadDenseMatrixToTexture(t,e,o,n){this.throwIfDisposed(),k$(this.gl,t,e,o,n,this.textureConfig)}createFloat16PackedMatrixTexture(t,e){return this.throwIfDisposed(),C$(this.gl,t,e,this.textureConfig)}createPackedMatrixTexture(t,e){return this.throwIfDisposed(),w$(this.gl,t,e,this.textureConfig)}deleteMatrixTexture(t){this.throwIfDisposed(),this.outputTexture===t&&(Cb(this.gl,this.framebuffer),this.outputTexture=null),ye(this.gl,()=>this.gl.deleteTexture(t))}downloadByteEncodedFloatMatrixFromOutputTexture(t,e,o){return this.downloadMatrixDriver(t,()=>N$(this.gl,e,o,this.textureConfig))}downloadPackedMatrixFromBuffer(t,e,o,n,i,s){return R$(this.gl,t,e,o,n,i,s,this.textureConfig)}downloadFloat32MatrixFromBuffer(t,e){return E$(this.gl,t,e)}createBufferFromTexture(t,e,o){this.bindTextureToFrameBuffer(t);let n=T$(this.gl,e,o,this.textureConfig);return this.unbindTextureToFrameBuffer(),n}createAndWaitForFence(){let t=this.createFence(this.gl);return this.pollFence(t)}createFence(t){let e,o;if(G().getBool("WEBGL_FENCE_API_ENABLED")){let n=t,i=n.fenceSync(n.SYNC_GPU_COMMANDS_COMPLETE,0);t.flush(),o=()=>{let s=n.clientWaitSync(i,0,0);return s===n.ALREADY_SIGNALED||s===n.CONDITION_SATISFIED},e=i}else G().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(e=this.beginQuery(),this.endQuery(),o=()=>this.isQueryAvailable(e,G().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):o=()=>!0;return{query:e,isFencePassed:o}}downloadMatrixFromPackedTexture(t,e,o){return this.downloadMatrixDriver(t,()=>$$(this.gl,e,o))}createProgram(t){this.throwIfDisposed();let e=this.gl;this.vertexShader==null&&(this.vertexShader=g$(e));let o=G3(e);ye(e,()=>e.attachShader(o,this.vertexShader)),ye(e,()=>e.attachShader(o,t)),H3(e,o);let n=Object.assign(o,{vao:this.createVertexArray()});return this.debug&&Eg(e,n),n}buildVao(t){this.setProgram(t),this.bindVertexArray(t.vao);let e=this.gl;ye(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,this.indexBuffer)),_$(e,t,this.vertexBuffer)}deleteProgram(t){this.throwIfDisposed(),t===this.program&&(this.program=null),t!=null&&(ye(this.gl,()=>this.gl.deleteProgram(t)),this.deleteVertexArray(t.vao))}setProgram(t){this.throwIfDisposed(),this.program=t,this.program!=null&&this.debug&&Eg(this.gl,this.program),ye(this.gl,()=>this.gl.useProgram(t))}getUniformLocation(t,e,o=!0){return this.throwIfDisposed(),o?Q3(this.gl,t,e):Z3(this.gl,t,e)}getAttributeLocation(t,e){return this.throwIfDisposed(),ye(this.gl,()=>this.gl.getAttribLocation(t,e))}getUniformLocationNoThrow(t,e){return this.throwIfDisposed(),this.gl.getUniformLocation(t,e)}setInputMatrixTexture(t,e,o){this.throwIfDisposed(),this.throwIfNoProgram(),J3(this.gl,t,e,o)}setOutputMatrixTexture(t,e,o){this.setOutputMatrixTextureDriver(t,o,e)}setOutputPackedMatrixTexture(t,e,o){this.throwIfDisposed();let[n,i]=pn(e,o);this.setOutputMatrixTextureDriver(t,n,i)}setOutputMatrixWriteRegion(t,e,o,n){this.setOutputMatrixWriteRegionDriver(o,t,n,e)}setOutputPackedMatrixWriteRegion(t,e,o,n){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&Eg(this.gl,this.program),Hp(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();let t=this.gl;if(this.debug){let e=this.getVertexArray();console.assert(e===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}ye(t,()=>t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),ye(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=Gp(this.gl,G().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(G().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let o=this.gl,n=this.getQueryTimerExtensionWebGL2(),i=o.createQuery();return o.beginQuery(n.TIME_ELAPSED_EXT,i),i}let t=this.getQueryTimerExtensionWebGL1(),e=t.createQueryEXT();return t.beginQueryEXT(t.TIME_ELAPSED_EXT,e),e}endQuery(){if(G().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let e=this.gl,o=this.getQueryTimerExtensionWebGL2();e.endQuery(o.TIME_ELAPSED_EXT);return}let t=this.getQueryTimerExtensionWebGL1();t.endQueryEXT(t.TIME_ELAPSED_EXT)}waitForQueryAndGetTime(t){return X(this,null,function*(){return yield S.repeatedTry(()=>this.disposed||this.isQueryAvailable(t,G().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(t,G().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))})}getQueryTime(t,e){if(e===0)return null;if(e===2){let o=this.gl;return o.getQueryParameter(t,o.QUERY_RESULT)/1e6}else{let o=this.getQueryTimerExtensionWebGL1();return o.getQueryObjectEXT(t,o.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(t,e){if(e===0)return!0;if(e===2){let o=this.gl,n=this.getQueryTimerExtensionWebGL2(),i=o.getQueryParameter(t,o.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),i&&!this.disjoint}else{let o=this.getQueryTimerExtensionWebGL1(),n=o.getQueryObjectEXT(t,o.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(o.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(t){return new Promise(e=>{this.addItemToPoll(()=>t.isFencePassed(),()=>e())})}pollItems(){let t=cY(this.itemsToPoll.map(e=>e.isDoneFn));for(let e=0;e<=t;++e){let{resolveFn:o}=this.itemsToPoll[e];o()}this.itemsToPoll=this.itemsToPoll.slice(t+1)}addItemToPoll(t,e){if(this.itemsToPoll.push({isDoneFn:t,resolveFn:e}),this.itemsToPoll.length>1)return;let o;"setTimeoutCustom"in G().platform&&(o=G().platform.setTimeoutCustom.bind(G().platform)),S.repeatedTry(()=>(this.pollItems(),this.itemsToPoll.length===0),()=>0,null,o)}bindTextureToFrameBuffer(t){this.throwIfDisposed(),Ng(this.gl,t,this.framebuffer),this.debug&&Hp(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(Ng(this.gl,this.outputTexture,this.framebuffer),this.debug&&Hp(this.gl)):Cb(this.gl,this.framebuffer)}downloadMatrixDriver(t,e){this.bindTextureToFrameBuffer(t);let o=e();return this.unbindTextureToFrameBuffer(),o}setOutputMatrixTextureDriver(t,e,o){this.throwIfDisposed();let n=this.gl;Ng(n,t,this.framebuffer),this.debug&&Hp(n),this.outputTexture=t,ye(n,()=>n.viewport(0,0,e,o)),ye(n,()=>n.scissor(0,0,e,o))}setOutputMatrixWriteRegionDriver(t,e,o,n){this.throwIfDisposed(),ye(this.gl,()=>this.gl.scissor(t,e,o,n))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}};function cY(r){let t=0;for(;t<r.length&&r[t]();++t);return t-1}var{addImpl:P$,bincountImpl:Mg,bincountReduceImpl:D$,bitwiseAndImpl:A$,castImpl:F$,ceilImpl:O$,concatImpl:L$,equalImpl:M$,expImpl:B$,expm1Impl:V$,floorImpl:W$,gatherNdImpl:z$,gatherV2Impl:U$,greaterImpl:G$,greaterEqualImpl:H$,lessImpl:K$,lessEqualImpl:q$,linSpaceImpl:j$,logImpl:X$,maxImpl:Y$,maximumImpl:Q$,minimumImpl:Z$,multiplyImpl:J$,negImpl:eP,notEqualImpl:tP,prodImpl:rP,raggedGatherImpl:oP,raggedRangeImpl:nP,raggedTensorToTensorImpl:iP,rangeImpl:sP,rsqrtImpl:aP,scatterImpl:lP,sigmoidImpl:uP,simpleAbsImpl:Bg,sliceImpl:cP,sparseFillEmptyRowsImpl:pP,sparseReshapeImpl:dP,sparseSegmentReductionImpl:Vg,sqrtImpl:mP,staticRegexReplaceImpl:fP,stridedSliceImpl:hP,stringNGramsImpl:gP,stringSplitImpl:xP,stringToHashBucketFastImpl:yP,subImpl:bP,tileImpl:vP,topKImpl:SP,transposeImpl:ea,uniqueImpl:wP}=Fp;function $b(r,t){return["x","y","z","w","u","v"].slice(0,t).map(e=>`${r}.${e}`)}function Pt(r,t){return t===1?[r]:$b(r,t)}function CP(r,t){if(r===1)return"rc";let e="";for(let o=0;o<r;o++)e+=t[o],o<r-1&&(e+=",");return e}var Wg=class{constructor(t){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=t,this.rank=t.length,this.enableShapeUniforms=at(this.outputShape.length),this.rank===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{let e=Pt("rc",this.rank),o=Le(this.rank),n=this.getOutOfBoundsCondition(e),i=this.getSetup(e),s=this.getOutput(e);this.userCode=`
        void main() {
          ${o} rc = getOutputCoords();

          if(${n}) {
            setOutput(vec4(0));
          } else {
            ${i}

            setOutput(vec4(${s}));
          }
        }
      `}}getSourceCoordsArr(t){let e=[];for(let o=0;o<=1;o++)for(let n=0;n<=1;n++){let i=`${o===0?"r":"rp1"}, ${n===0?"c":"cp1"}`;for(let s=2;s<this.rank;s++)i=`${t[t.length-1-s]},`+i;e.push(i)}return e}getOutOfBoundsCondition(t){if(this.rank===1)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let e="";for(let o=this.rank-2;o<this.rank;o++)e+=`${t[o]} >= ${this.enableShapeUniforms?`outShape[${o}]`:this.outputShape[o]}`,o<this.rank-1&&(e+="||");return e}getSetup(t){if(this.rank===1)return"";let e=t.slice(-2),o=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],n=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${e[0]};
      int c = ${e[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${o};
      bool rEdge = rp1 >= ${n};
    `}getOutput(t){let e=this.getSourceCoordsArr(t);return this.rank===1?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${e[0]}),
            cEdge ? 0. : getA(${e[1]}),
            rEdge ? 0. : getA(${e[2]}),
            rEdge || cEdge ? 0. : getA(${e[3]})`}};var Ec=class{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=t,this.enableShapeUniforms=at(this.outputShape.length);let o="";for(let n=0;n<4;n++){let i="thisRC = rc;";n%2===1&&(i+="thisRC.z += 1;"),n>1&&(i+="thisRC.y += 1;"),o+=`
        ${i}
        ${n>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${n}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${n>0?"}":""}
      `}this.userCode=`
      ${pY(e,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?Sc():vc(t)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":t[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":t[2]};

        ${o}

        setOutput(result);
      }
    `}};function pY(r,t){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${t?a$(["r","c","d"],"inputShape"):Vo(["r","c","d"],r)}
      return ivec3(r, c, d);
    }
  `}var zg=class{constructor(t){this.gpgpu=t,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(t,e,o){let n=kP(e,o),i=IP(t,n,o);i in this.freeTextures||(this.freeTextures[i]=[]),i in this.usedTextures||(this.usedTextures[i]=[]);let s=_P(t,n,this.gpgpu.gl,this.gpgpu.textureConfig,o);if(this.freeTextures[i].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=s,this.log();let l=this.freeTextures[i].pop();return this.usedTextures[i].push(l),l}let a;return n===nr.PACKED_2X2_FLOAT32?a=this.gpgpu.createPackedMatrixTexture(t[0],t[1]):n===nr.PACKED_2X2_FLOAT16?a=this.gpgpu.createFloat16PackedMatrixTexture(t[0],t[1]):n===nr.UNPACKED_FLOAT32?a=this.gpgpu.createFloat32MatrixTexture(t[0],t[1]):n===nr.UNPACKED_FLOAT16?a=this.gpgpu.createFloat16MatrixTexture(t[0],t[1]):n===nr.PACKED_4X1_UNSIGNED_BYTE&&(a=this.gpgpu.createUnsignedBytesMatrixTexture(t[0],t[1])),this.usedTextures[i].push(a),this.numUsedTextures++,this._numBytesAllocated+=s,this.log(),a}releaseTexture(t,e,o,n){if(this.freeTextures==null)return;let i=kP(o,n),s=IP(e,i,n);s in this.freeTextures||(this.freeTextures[s]=[]);let a=_P(e,i,this.gpgpu.gl,this.gpgpu.textureConfig,n),l=G().getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");l!==-1&&this._numBytesAllocated>l?(this.gpgpu.deleteMatrixTexture(t.texture),this._numBytesAllocated-=a):(this.freeTextures[s].push(t),this.numFreeTextures++,this._numBytesFree+=a),this.numUsedTextures--;let u=this.usedTextures[s],c=u&&u.indexOf(t);if(c==null||c<0)throw new Error("Cannot release a texture that was never provided by this texture manager");u[c]=u[u.length-1],u.pop(),this.log()}log(){if(!this.logEnabled)return;let t=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${t})`);let e=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*e)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(let t in this.freeTextures)this.freeTextures[t].forEach(e=>{this.gpgpu.deleteMatrixTexture(e.texture)});for(let t in this.usedTextures)this.usedTextures[t].forEach(e=>{this.gpgpu.deleteMatrixTexture(e.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}};function dY(r,t){let e=r;if(t===e.R32F)return 4;if(t===e.R16F)return 2;if(t===e.RGBA32F)return 16;if(t===r.RGBA)return 16;if(t===e.RGBA16F)return 8;if(t===e.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}function _P(r,t,e,o,n){let i=mY(t,o),s;if(n){let[l,u]=pn(r[0],r[1]);s=l*u}else{let[l,u]=Ys(r[0],r[1]);s=l*u}let a=dY(e,i);return s*a}function mY(r,t){switch(r){case nr.PACKED_2X2_FLOAT32:return Nb(t);case nr.PACKED_2X2_FLOAT16:return Rb(t);case nr.UNPACKED_FLOAT32:return Ib(t);case nr.UNPACKED_FLOAT16:return Tb(t);case nr.PACKED_4X1_UNSIGNED_BYTE:return Eb(t);default:throw new Error(`Unknown physical texture type ${r}`)}}function fY(r){return G().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?r?nr.PACKED_2X2_FLOAT32:nr.UNPACKED_FLOAT32:r?nr.PACKED_2X2_FLOAT16:nr.UNPACKED_FLOAT16}function kP(r,t){if(r===mr.UPLOAD)return nr.PACKED_2X2_FLOAT32;if(r===mr.RENDER||r==null)return fY(t);if(r===mr.DOWNLOAD||r===mr.PIXELS)return nr.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${r}`)}function IP(r,t,e){return`${r[0]}_${r[1]}_${t}_${e}`}var Qt=class{constructor(t,e){this.variableNames=["A"],this.outputShape=t,this.enableShapeUniforms=at(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${e}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}},Mt="if (isnan(x)) return x;",TP="return x;",Pb="return abs(x);";var EP="return (x >= 0.0) ? x : (exp(x) - 1.0);",NP=Mt+`
  return (x < 0.0) ? 0.0 : x;
`,RP=Mt+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,mn="return x;",$P="return 1.0 / (1.0 + exp(-1.0 * x));";var DP="return x;",AP=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,FP=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,OP=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,LP="return 1.0 / (1.0 + exp(-1.0 * x));",Or=class{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.enableShapeUniforms=at(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${e}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}};var Ug=class{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=t,this.enableShapeUniforms=at(this.outputShape.length);let e=t.length,o=Pt("rc",e),n=Le(e),i=CP(e,o),s=o.slice(-2),a=e<=1?"rc":`vec2(${s.join(",")})`;this.userCode=`
      void main() {
        ${n} rc = getOutputCoords();
        vec4 packedInput = getA(${i});

        setOutput(getChannel(packedInput, ${a}));
      }
    `}};var gY=jr.whereImpl,xY=1e-7,yY=1e-4,Gg={};function bY(r){return r in Gg||(Gg[r]={}),Gg[r]}var vY=G().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),SY=600;function wY(){return G().global.screen==null?1024:G().global.screen.height*G().global.screen.width*window.devicePixelRatio*SY/1024/1024}var MP=(()=>{class r extends xn{nextDataId(){return r.nextDataId++}constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!G().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let o;if(e!=null){if(e instanceof Tc)o=e;else{let n=to(G().getNumber("WEBGL_VERSION"),e);o=new Tc(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{let n=to(G().getNumber("WEBGL_VERSION"));o=new Tc(n),this.binaryCache=bY(G().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=o,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new zg(this.gpgpu),this.numMBBeforeWarning=wY(),this.texData=new os(this,ur())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,o,n,i,s,a){let l=this.makeTensorInfo(o,n),u=this.texData.get(l.dataId);u.isPacked=!1,u.texture={texture:e,texShape:[i,s]},u.texShape=[i,s];let c=Kp(o),p=new qp(c,!1,a),d=this.runWebGLProgram(p,[l],n,[[i,s]]);return d.shape=o,u.texture=null,this.disposeIntermediateTensorInfo(l),d.dataId}write(e,o,n){if((G().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||G().getBool("DEBUG"))&&this.checkNumericalProblems(e),n==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let i={id:this.nextDataId()};return this.texData.set(i,{shape:o,dtype:n,values:e,usage:mr.UPLOAD,refCount:1}),i}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){let o=this.texData.get(e);o.refCount++}decRef(e){if(this.texData.has(e)){let o=this.texData.get(e);o.refCount--}}move(e,o,n,i,s){if(G().getBool("DEBUG")&&this.checkNumericalProblems(o),i==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:i,values:o,usage:mr.UPLOAD,refCount:s})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){let o=this.texData.get(e),{values:n,dtype:i,complexTensorInfos:s,slice:a,shape:l,isPacked:u}=o;if(a!=null){let m;u?m=new Or(l,mn):m=new Qt(l,mn);let f=this.runWebGLProgram(m,[{dataId:e,shape:l,dtype:i}],i),g=this.readSync(f.dataId);return this.disposeIntermediateTensorInfo(f),g}if(n!=null)return this.convertAndCacheOnCPU(e);if(i==="string")return n;let c=this.activeTimers!=null,p;c&&(p=S.now());let d;if(i==="complex64"){let m=this.readSync(s.real.dataId),f=this.readSync(s.imag.dataId);d=R.mergeRealAndImagArrays(m,f)}else d=this.getValuesFromTexture(e);return c&&(this.downloadWaitMs+=S.now()-p),this.convertAndCacheOnCPU(e,d)}read(e){return X(this,null,function*(){if(this.pendingRead.has(e)){let g=this.pendingRead.get(e);return new Promise(x=>g.push(x))}let o=this.texData.get(e),{values:n,shape:i,slice:s,dtype:a,complexTensorInfos:l,isPacked:u}=o;if(s!=null){let g;u?g=new Or(i,mn):g=new Qt(i,mn);let x=this.runWebGLProgram(g,[{dataId:e,shape:i,dtype:a}],a),y=this.read(x.dataId);return this.disposeIntermediateTensorInfo(x),y}if(n!=null)return this.convertAndCacheOnCPU(e);if(G().getBool("DEBUG")&&!G().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&G().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let c=null,p;if(a!=="complex64"&&G().get("WEBGL_BUFFER_SUPPORTED")){p=this.decode(e);let g=this.texData.get(p.dataId);c=this.gpgpu.createBufferFromTexture(g.texture.texture,...zp(i))}this.pendingRead.set(e,[]),a!=="complex64"&&(yield this.gpgpu.createAndWaitForFence());let d;if(a==="complex64"){let g=yield Promise.all([this.read(l.real.dataId),this.read(l.imag.dataId)]),x=g[0],y=g[1];d=R.mergeRealAndImagArrays(x,y)}else if(c==null)d=this.getValuesFromTexture(e);else{let g=S.sizeFromShape(i);d=this.gpgpu.downloadFloat32MatrixFromBuffer(c,g)}if(p!=null&&this.disposeIntermediateTensorInfo(p),c!=null){let g=this.gpgpu.gl;ye(g,()=>g.deleteBuffer(c))}let m=this.convertAndCacheOnCPU(e,d),f=this.pendingRead.get(e);return this.pendingRead.delete(e),f.forEach(g=>g(m)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&ur().removeDataId(e,this),this.pendingDeletes--),m})}readToGPU(e,o={}){let n=this.texData.get(e),{values:i,shape:s,slice:a,dtype:l,isPacked:u,texture:c}=n;if(l==="complex64")throw new Error("Does not support reading texture for complex64 dtype.");if(a!=null){let f;u?f=new Or(s,mn):f=new Qt(s,mn);let g=this.runWebGLProgram(f,[{dataId:e,shape:s,dtype:l}],l),x=this.readToGPU(g,o);return this.disposeIntermediateTensorInfo(g),x}if(c==null)throw i!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");let p=this.decode(e,o.customTexShape),d=ur().makeTensorFromTensorInfo(p),m=this.texData.get(p.dataId);return Object.assign({tensorRef:d},m.texture)}bufferSync(e){let o=this.readSync(e.dataId);if(e.dtype==="string")try{let n=o.map(i=>S.decodeString(i));return Oe(e.shape,e.dtype,n)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Oe(e.shape,e.dtype,o)}checkNumericalProblems(e){if(e!=null)for(let o=0;o<e.length;o++){let n=e[o];if(!W3(n))throw G().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${n} cannot be represented on this device.`)}}getValuesFromTexture(e){let{shape:o,dtype:n,isPacked:i}=this.texData.get(e),s=S.sizeFromShape(o);if(G().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){let m=this.decode(e),f=this.texData.get(m.dataId),g=this.gpgpu.downloadMatrixFromPackedTexture(f.texture.texture,...zp(o)).subarray(0,s);return this.disposeIntermediateTensorInfo(m),g}let a=G().getBool("WEBGL_PACK")&&i===!0,l=a?Kp(o):o,u=a?new Og(l):new Fg(l),c=this.runWebGLProgram(u,[{shape:l,dtype:n,dataId:e}],"float32"),p=this.texData.get(c.dataId),d=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(p.texture.texture,p.texShape[0],p.texShape[1]).subarray(0,s);return this.disposeIntermediateTensorInfo(c),d}timerAvailable(){return G().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){let o=this.activeTimers,n=[],i=!1;this.programTimersStack==null?(this.programTimersStack=n,i=!0):this.activeTimers.push(n),this.activeTimers=n,e();let s=S.flatten(this.activeTimers.map(u=>u.query)).filter(u=>u!=null),a=S.flatten(this.activeTimers.map(u=>u.name)).filter(u=>u!=null);this.activeTimers=o,i&&(this.programTimersStack=null);let l={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return X(this,null,function*(){if(G().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){let u=yield Promise.all(s);l.kernelMs=S.sum(u),l.getExtraProfileInfo=()=>u.map((c,p)=>({name:a[p],ms:c})).map(c=>`${c.name}: ${c.ms}`).join(", ")}else l.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,l})}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return G().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:S.now(),endMs:null}}endTimer(e){return G().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=S.now(),e)}getQueryTime(e){return X(this,null,function*(){if(G().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);let o=e;return o.endMs-o.startMs})}disposeData(e,o=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(o?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!o&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);let{complexTensorInfos:n}=this.texData.get(e);return n!=null&&(this.disposeData(n.real.dataId,o),this.disposeData(n.imag.dataId,o)),this.texData.delete(e),!0}releaseGPUData(e){let{texture:o,dtype:n,texShape:i,usage:s,isPacked:a,slice:l}=this.texData.get(e),u=l&&l.origDataId||e,c=this.dataRefCount.get(u);c>1?this.dataRefCount.set(u,c-1):(this.dataRefCount.delete(u),o!=null&&(this.numBytesInGPU-=this.computeBytes(i,n),this.textureManager.releaseTexture(o,i,s,a)));let p=this.texData.get(e);p.texture=null,p.texShape=null,p.isPacked=!1,p.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,o=vY){return G().getBool("WEBGL_CPU_FORWARD")&&e.every(n=>this.texData.get(n.dataId).texture==null&&S.sizeFromShape(n.shape)<o)}getGPGPUContext(){return this.gpgpu}where(e){R.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");let o=e.dataSync();return gY(e.shape,o)}packedUnaryOp(e,o,n){let i=new Or(e.shape,o),s=this.compileAndRun(i,[e],n);return ur().makeTensorFromTensorInfo(s)}abs(e){if(this.shouldExecuteOnCPU([e])&&e.dtype!=="complex64"){let i=Bg(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,i)}if(G().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,Pb,e.dtype);let o=new Qt(e.shape,Pb),n=this.compileAndRun(o,[e]);return ur().makeTensorFromTensorInfo(n)}makeTensorInfo(e,o,n){let i;if(o==="string"&&n!=null&&n.length>0&&S.isString(n[0])){let s=n.map(a=>S.encodeString(a));i=this.write(s,e,o)}else i=this.write(n,e,o);return this.texData.get(i).usage=null,{dataId:i,shape:e,dtype:o}}makeOutput(e,o,n){return ur().makeTensorFromTensorInfo(this.makeTensorInfo(e,o,n),this)}unpackTensor(e){let o=new Ug(e.shape);return this.runWebGLProgram(o,[e],e.dtype)}packTensor(e){let o=new Wg(e.shape);return this.runWebGLProgram(o,[e],e.dtype,null,!0)}packedReshape(e,o){let n=[zi(e.shape),...Ui(e.shape)],i={dtype:e.dtype,shape:n,dataId:e.dataId},s=[zi(o),...Ui(o)],a=new Ec(s,n),l=!0,u=[n],c=this.runWebGLProgram(a,[i],e.dtype,u,l);return{dataId:c.dataId,shape:o,dtype:c.dtype}}decode(e,o){let n=this.texData.get(e),{isPacked:i,shape:s,dtype:a}=n;if(o!=null){let m=S.sizeFromShape(s),f=o[0]*o[1]*4;S.assert(m<=f,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}let l=Kp(s),u;i?u=new Ag(l):u=new Dg(l);let c=!0,p=[o??zp(l)],d=this.runWebGLProgram(u,[{shape:l,dtype:a,dataId:e}],a,p,c,o);return{dtype:a,shape:s,dataId:d.dataId}}runWebGLProgram(e,o,n,i,s=!1,a){let l=this.makeTensorInfo(e.outputShape,n),u=this.texData.get(l.dataId);if(e.packedOutput&&(u.isPacked=!0),e.outPackingScheme===Xs.DENSE){let v=a??zp(e.outputShape);u.texShape=v.map(k=>k*2)}if(e.outTexUsage!=null&&(u.usage=e.outTexUsage),S.sizeFromShape(l.shape)===0)return u.values=S.getTypedArrayFromDType(l.dtype,0),l;let c=[],p=o.map(v=>{if(v.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let k=this.texData.get(v.dataId);if(k.texture==null){if(!e.packedInputs&&S.sizeFromShape(v.shape)<=G().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:v.shape,texData:null,isUniform:!0,uniformValues:k.values};e.packedInputs&&(k.isPacked=!0,k.shape=v.shape)}if(this.uploadToGPU(v.dataId),!!k.isPacked!=!!e.packedInputs)v=k.isPacked?this.unpackTensor(v):this.packTensor(v),c.push(v),k=this.texData.get(v.dataId);else if(k.isPacked&&!Qs(k.shape,v.shape)){let N=v,F=v.shape;v.shape=k.shape,v=this.packedReshape(v,F),c.push(v),k=this.texData.get(v.dataId),N.shape=F}return{shape:v.shape,texData:k,isUniform:!1}});this.uploadToGPU(l.dataId);let d={shape:l.shape,texData:u,isUniform:!1},m=h$(e,p,d),f=this.getAndSaveBinary(m,()=>m$(this.gpgpu,e,p,d)),g=this.activeTimers!=null,x;g&&(x=this.startTimer()),G().get("ENGINE_COMPILE_ONLY")||f$(this.gpgpu,f,p,d,i),c.forEach(v=>this.disposeIntermediateTensorInfo(v)),g&&(x=this.endTimer(x),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(x)}));let y=G().getNumber("WEBGL_FLUSH_THRESHOLD");if(y>0){let v=S.now();v-this.lastGlFlushTime>y&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=v)}if(!G().getBool("WEBGL_LAZILY_UNPACK")&&u.isPacked&&s===!1){let v=this.unpackTensor(l);return this.disposeIntermediateTensorInfo(l),v}return l}compileAndRun(e,o,n,i,s=!1){return n=n||o[0].dtype,this.runWebGLProgram(e,o,n,i,s)}getAndSaveBinary(e,o){return e in this.binaryCache||(this.binaryCache[e]=o()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(G().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(o=>{this.gpgpu.deleteProgram(this.binaryCache[o].webGLProgram),delete this.binaryCache[o]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement<"u"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=Te(()=>{if(!G().get("WEBGL_RENDER_FLOAT32_ENABLED")){let e=G().getBool("DEBUG");G().set("DEBUG",!1);let o=this.abs(Ee(1e-8)).dataSync()[0];if(G().set("DEBUG",e),o>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?xY:yY}uploadToGPU(e){let o=this.texData.get(e),{shape:n,dtype:i,values:s,texture:a,usage:l,isPacked:u}=o;if(a!=null)return;let c=this.activeTimers!=null,p;c&&(p=S.now());let d=o.texShape;if(d==null&&(d=e$(n,u),o.texShape=d),s!=null){let m=Kp(n),f,g=d[1],x=d[0],y=s instanceof Uint8Array||s instanceof Uint8ClampedArray;(u||!y)&&([g,x]=pn(d[0],d[1])),u?f=new Lg(m,y):f=new qp(m,y);let v=y?[x,g]:d,k=this.makeTensorInfo(v,i),N=this.texData.get(k.dataId);y?N.usage=mr.PIXELS:N.usage=mr.UPLOAD,N.texShape=v,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(k.dataId),g,x,s);let F=[[x,g]],z=this.runWebGLProgram(f,[k],i,F,!0),H=this.texData.get(z.dataId);o.texShape=H.texShape,o.isPacked=H.isPacked,o.usage=H.usage,G().get("ENGINE_COMPILE_ONLY")?this.disposeData(z.dataId):(o.texture=H.texture,o.values=null,this.texData.delete(z.dataId)),this.disposeIntermediateTensorInfo(k),c&&(this.uploadWaitMs+=S.now()-p)}else{let m=this.acquireTexture(d,l,i,u);o.texture=m}}convertAndCacheOnCPU(e,o){let n=this.texData.get(e),{dtype:i}=n;return o!=null&&(n.values=CY(o,i)),n.values}acquireTexture(e,o,n,i){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){let s=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${s} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,o,i)}computeBytes(e,o){return e[0]*e[1]*S.bytesPerElement(o)}checkCompileCompletion(){for(let[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}checkCompileCompletionAsync(){return X(this,null,function*(){let e=[];if(this.gpgpu.parallelCompilationExtension){for(let[,o]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(o));return Promise.all(e)}else{for(let[,o]of Object.entries(this.binaryCache)){let n=new Promise(i=>{try{this.checkCompletion_(o),i(!0)}catch(s){throw s}});e.push(n)}return Promise.all(e)}})}checkCompletionAsync_(e){return X(this,null,function*(){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(yield Hy(),this.checkCompletionAsync_(e))})}checkCompletion_(e){if(this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)===!1)throw console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)===!1?(Sb(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(let e of Object.values(this.binaryCache)){this.gpgpu.buildVao(e.webGLProgram);let{variablesLocations:o,customUniformLocations:n,infLoc:i,nanLoc:s,outShapeLocation:a,outShapeStridesLocation:l,outTexShapeLocation:u}=kb(this.gpgpu,e.program,e.webGLProgram);e.variablesLocations=o,e.customUniformLocations=n,e.infLoc=i,e.nanLoc=s,e.outShapeLocation=a,e.outShapeStridesLocation=l,e.outTexShapeLocation=u}}createTensorFromGPUData(e,o,n){e.channels=e.channels||"RGBA";let{texture:i,height:s,width:a,channels:l}=e,u=ur().backend;if(!u.gpgpu.gl.isTexture(i))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");let c=u.writeTexture(i,o,n,s,a,l);return ur().makeTensorFromDataId(c,o,n,u)}}return r.nextDataId=0,r})();function CY(r,t){if(t==="float32"||t==="complex64")return r;if(t==="int32"||t==="bool"){let e=t==="int32"?new Int32Array(r.length):new Uint8Array(r.length);for(let o=0;o<e.length;++o)e[o]=Math.round(r[o]);return e}else throw new Error(`Unknown dtype ${t}`)}wi.isBrowser()&&gm("webgl",()=>new MP,2);var Nc=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`;var Lr=class{constructor(t,e,o){this.variableNames=["A","B"],this.outputShape=R.assertAndGetBroadcastShape(e,o),this.enableShapeUniforms=at(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${t}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}};var oo=`
  result.r = isNaN.r ? NAN : result.r;
  result.g = isNaN.g ? NAN : result.g;
  result.b = isNaN.b ? NAN : result.b;
  result.a = isNaN.a ? NAN : result.a;
`;var ro=class{constructor(t,e,o,n=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=R.assertAndGetBroadcastShape(e,o);let i=this.outputShape.length;this.enableShapeUniforms=at(i);let s="";if(n)if(i===0||S.sizeFromShape(this.outputShape)===1)s=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(s=`
          ${Le(i)} coords = getOutputCoords();
        `,i===1)this.enableShapeUniforms?s+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:s+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{let l=Pt("coords",i);this.enableShapeUniforms?s+=`
            bool nextRowOutOfBounds =
              (${l[i-2]} + 1) >= outShape[${i} - 2];
            bool nextColOutOfBounds =
              (${l[i-1]} + 1) >= outShape[${i} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:s+=`
            bool nextRowOutOfBounds =
              (${l[i-2]} + 1) >= ${this.outputShape[i-2]};
            bool nextColOutOfBounds =
              (${l[i-1]} + 1) >= ${this.outputShape[i-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${t}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${s}

        setOutput(result);
      }
    `}};function Dt(r){let{inputs:t,backend:e}=r,{x:o}=t;return e.incRef(o.dataId),{dataId:o.dataId,shape:o.shape,dtype:o.dtype}}var BP={kernelName:vn,backendName:"webgl",kernelFunc:Dt};function Mr(r){let{inputs:t,backend:e}=r,{real:o,imag:n}=t,i=e.makeTensorInfo(o.shape,"complex64"),s=e.texData.get(i.dataId),a=Dt({inputs:{x:o},backend:e}),l=Dt({inputs:{x:n},backend:e});return s.complexTensorInfos={real:a,imag:l},i}var VP={kernelName:ls,backendName:"webgl",kernelFunc:Mr};var Db="return (a < 0.) ? b * a : a;",Ab=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function _Y(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{alpha:i}=o,s=e.makeTensorInfo([],"float32",S.createScalarValue(i,"float32")),a=G().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new ro(Ab,n.shape,s.shape):new Lr(Db,n.shape,s.shape),l=e.runWebGLProgram(a,[n,s],"float32");return e.disposeIntermediateTensorInfo(s),l}var WP={kernelName:Pl,backendName:"webgl",kernelFunc:_Y};var Fb="return (a < 0.) ? b * a : a;",Ob=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function kY(r){let{inputs:t,backend:e}=r,{x:o,alpha:n}=t,i=G().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new ro(Ob,o.shape,n.shape):new Lr(Fb,o.shape,n.shape);return e.runWebGLProgram(i,[o,n],"float32")}var zP={kernelName:tu,backendName:"webgl",kernelFunc:kY};var To="if (isnan(x)) return x;";function Ce({opSnippet:r,packedOpSnippet:t,cpuKernelImpl:e,dtype:o}){return({inputs:n,backend:i})=>{let{x:s}=n,a=i,l=o||s.dtype;if(a.shouldExecuteOnCPU([s])&&e!=null){let p=a.texData.get(s.dataId),d=e(p.values,l);return a.makeTensorInfo(s.shape,l,d)}let u=G().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&t!=null,c;return u?c=new Or(s.shape,t):c=new Qt(s.shape,r),a.runWebGLProgram(c,[s],l)}}function nt({opSnippet:r,packedOpSnippet:t,checkOutOfBounds:e=!1,supportsComplex:o=!1,cpuKernelImpl:n,dtype:i}){return({inputs:s,backend:a})=>{let{a:l,b:u}=s,c=a;if(o&&l.dtype==="complex64"){let f=c.texData.get(l.dataId),g=c.texData.get(u.dataId),[x,y]=[[f.complexTensorInfos.real,g.complexTensorInfos.real],[f.complexTensorInfos.imag,g.complexTensorInfos.imag]].map(k=>{let[N,F]=k,M={dataId:N.dataId,dtype:N.dtype,shape:l.shape},z={dataId:F.dataId,dtype:F.dtype,shape:u.shape},H=new Lr(r,l.shape,u.shape);return c.runWebGLProgram(H,[M,z],Tt(N.dtype,F.dtype))}),v=Mr({inputs:{real:x,imag:y},backend:c});return c.disposeIntermediateTensorInfo(x),c.disposeIntermediateTensorInfo(y),v}let p=i||Tt(l.dtype,u.dtype);if((l.dtype==="string"||u.dtype==="string"||c.shouldExecuteOnCPU([l,u]))&&n!=null){let f=c.texData.get(l.dataId).values,g=c.texData.get(u.dataId).values,x=l.dtype==="string"?R.fromUint8ToStringArray(f):f,y=l.dtype==="string"?R.fromUint8ToStringArray(g):g,[v,k]=n(l.shape,u.shape,x,y,p),N=c.makeTensorInfo(k,p),F=c.texData.get(N.dataId);return F.values=v,N}let d=G().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&t!=null,m;return d?m=new ro(t,l.shape,u.shape,e):m=new Lr(r,l.shape,u.shape),c.runWebGLProgram(m,[l,u],p)}}function Mn(r,t=!1){if(r==="linear")return t?DP:TP;if(r==="relu")return t?FP:NP;if(r==="elu")return t?AP:EP;if(r==="relu6")return t?OP:RP;if(r==="prelu")return t?Ob:Fb;if(r==="leakyrelu")return t?Ab:Db;if(r==="sigmoid")return t?LP:$P;throw new Error(`Activation ${r} has not been implemented for the WebGL backend.`)}var Rc=class{constructor(t,e,o,n=!1,i=!1,s=!1,a=null,l=!1,u=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=o,this.enableShapeUniforms=at(this.outputShape.length);let c=n?t[1]:t[2],p=Math.ceil(c/2),d=n?"i * 2, rc.y":"rc.y, i * 2",m=i?"rc.z, i * 2":"i * 2, rc.z",f=n?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],g=i?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"],x="",y="";a&&(l?x=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${a}
        }`:u?x=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${a}
        }`:x=`vec4 activation(vec4 x) {
          ${a}
        }`,y="result = activation(result);");let v=s?"result += getBiasAtOutCoords();":"";s&&this.variableNames.push("bias"),l&&this.variableNames.push("preluActivationWeights"),u&&this.variableNames.push("leakyreluAlpha");let k="rc.x",N="rc.x";t[0]<e[0]?k=`imod(rc.x, ${t[0]})`:e[0]<t[0]&&(N=`imod(rc.x, ${e[0]})`),this.userCode=`
      ${x}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${p}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        int batchA = ${k};
        int batchB = ${N};
        for (int i = 0; i < ${p}; i++) {
          vec4 a = getMatrixA(batchA, ${d});
          vec4 b = getMatrixB(batchB, ${m});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${f[0]} * ${g[0]});
          result += (${f[1]} * ${g[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${v}

        ${y}

        setOutput(result);
      }
    `}};var Lb={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"},Xp=class{constructor(t,e,o){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=R.assertAndGetBroadcastShape(e,o),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${t}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}};var UP="return a * b;";function Yp(r){let{inputs:t,backend:e}=r,{a:o,b:n}=t,i=R.upcastType(o.dtype,n.dtype);if(o.dtype==="complex64"){let a=e.texData.get(o.dataId),l=e.texData.get(n.dataId),u=new Xp(Lb.REAL,o.shape,n.shape),c=new Xp(Lb.IMAG,o.shape,n.shape),p=[{dataId:a.complexTensorInfos.real.dataId,dtype:a.complexTensorInfos.real.dtype,shape:o.shape},{dataId:a.complexTensorInfos.imag.dataId,dtype:a.complexTensorInfos.imag.dtype,shape:o.shape},{dataId:l.complexTensorInfos.real.dataId,dtype:l.complexTensorInfos.real.dtype,shape:n.shape},{dataId:l.complexTensorInfos.imag.dataId,dtype:l.complexTensorInfos.imag.dtype,shape:n.shape}],d=e.runWebGLProgram(u,p,"float32"),m=e.runWebGLProgram(c,p,"float32"),f=Mr({inputs:{real:d,imag:m},backend:e});return e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(m),f}if(e.shouldExecuteOnCPU([o,n])){let a=e.texData.get(o.dataId),l=e.texData.get(n.dataId),[u,c]=J$(o.shape,n.shape,a.values,l.values,i),p=e.makeTensorInfo(c,i),d=e.texData.get(p.dataId);return d.values=u,p}let s;return G().getBool("WEBGL_PACK_BINARY_OPERATIONS")?s=new ro(UP,o.shape,n.shape):s=new Lr(UP,o.shape,n.shape),e.runWebGLProgram(s,[o,n],i)}var GP={kernelName:pi,backendName:"webgl",kernelFunc:Yp};function HP(r,t,e){let o=[zi(r.shape),...Ui(r.shape)],n={dtype:r.dtype,shape:o,dataId:r.dataId},i=[zi(t),...Ui(t)],s=new Ec(i,o),a=!0,l=[o],u=e.runWebGLProgram(s,[n],r.dtype,l,a);return{dataId:u.dataId,shape:t,dtype:u.dtype}}function le(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{shape:i}=o,s=e,a=S.sizeFromShape(n.shape),l=S.inferFromImplicitShape(i,a),u=S.sizeFromShape(l);S.assert(a===u,()=>`The new shape (${l}) has ${u} elements and the old shape (${n.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`);let c=s.texData.get(n.dataId);return c.isPacked&&!Qs(n.shape,l)&&!(c.texture!==null&&Qs(c.shape,l))?HP(n,l,s):(s.incRef(n.dataId),{dataId:n.dataId,shape:l,dtype:n.dtype})}var KP={kernelName:iu,backendName:"webgl",kernelFunc:le};var Qp=class{constructor(t,e){this.variableNames=["x"];let{windowSize:o,batchSize:n,inSize:i,outSize:s}=t;this.outputShape=[n,s];let a=Math.floor(o/4)*4,l=o%4,u="sumValue += dot(values, ones);";if(e!=null){let p=1/e;u=`sumValue += dot(values * ${S.isInt(p)?p.toPrecision(2):p}, ones);`}let c="";i%o>0&&(c=`
        if (inIdx < 0 || inIdx >= ${i}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${c}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${o};

        float sumValue = 0.0;

        for (int i = 0; i < ${a}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${u}
        }

        int inIdx = inOffset + ${a};
        if (${l===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${u}
        } else if (${l===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${u}
        } else if (${l===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${u}
        }
        setOutput(sumValue);
      }
    `}};var Hg=class{constructor(t,e){this.variableNames=["x"];let{windowSize:o,batchSize:n,inSize:i,outSize:s}=t;this.outputShape=[n,s];let a="0.0",l="";e==="prod"?a="1.0":e==="min"?(a="1.0 / 1e-20",l="min"):e==="max"&&(a="-1.0 / 1e-20",l="max");let u=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;e==="sum"?u="sumValue":e==="prod"?u="prodValue":e==="all"?u="allValue":e==="any"&&(u="anyValue");let c=Math.floor(o/4)*4,p=o%4,d=`
      if (${e==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${e==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${l}(values, minMaxValue);
        if (${e==="min"} || ${e==="max"}) {
          minMaxValue = ${l}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,m="vec4";e==="all"?(a="1.0",d=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,m="bvec4"):e==="any"&&(a="0.0",d=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,m="bvec4");let f="";i%o>0&&(f=`
        if (inIdx < 0 || inIdx >= ${i}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${a};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${f}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${o};

        vec4 minMaxValue = vec4(${a});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${c}; i += 4) {
          int inIdx = inOffset + i;
          ${m} values = ${m}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${d}
        }

        int inIdx = inOffset + ${c};
        if (${p===1}) {
          ${m} values = ${m}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${d}
        } else if (${p===2}) {
          ${m} values = ${m}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${d}
        } else if (${p===3}) {
          ${m} values = ${m}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${d}
        }
        setOutput(${u});
      }
    `}};function TY(r){let t=[];for(;t.length===0||t[t.length-1].outSize!==1;){let e=t.length?t[t.length-1].outSize:r[1],o=R.computeOptimalWindowSize(e);t.push({inSize:e,windowSize:o,outSize:Math.ceil(e/o)})}return t}function no(r,t,e,o){let n=TY(r.shape),i=r;for(let s=0;s<n.length;s++){let{inSize:a,windowSize:l,outSize:u}=n[s],c,p;e==="mean"?c=s===0?new Qp({windowSize:l,inSize:a,batchSize:r.shape[0],outSize:u},a):new Qp({windowSize:l,inSize:a,batchSize:r.shape[0],outSize:u}):c=new Hg({windowSize:l,inSize:a,batchSize:r.shape[0],outSize:u},e),p=i,i=o.runWebGLProgram(c,[i],t),p.dataId!==r.dataId&&o.disposeIntermediateTensorInfo(p)}return i}var Kg=class{constructor(t,e){this.variableNames=["A"];let o=new Array(t.length);for(let s=0;s<o.length;s++)o[s]=t[e[s]];this.outputShape=o,this.rank=o.length;let n=Le(this.rank),i=EY(e);this.userCode=`
    void main() {
      ${n} resRC = getOutputCoords();
      setOutput(getA(${i}));
    }
    `}};function EY(r){let t=r.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);let e=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],o=new Array(t);for(let n=0;n<r.length;n++)o[r[n]]=e[n];return o.join()}var qg=class{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;let o=new Array(t.length);for(let c=0;c<o.length;c++)o[c]=t[e[c]];if(this.outputShape=o,this.rank=o.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);let n=Le(this.rank),i=$b("rc",this.rank),s=new Array(this.rank);for(let c=0;c<e.length;c++)s[e[c]]=i[c];let a=`vec2(${s.slice(-2).join()})`,l=`++${i[this.rank-1]} < ${o[this.rank-1]}`,u=`getChannel(getA(${s.join()}), ${a})`;this.userCode=`
    void main() {
      ${n} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${u};
      if(${l}) {
        result[1] = ${u};
      }
      --${i[this.rank-1]};
      if(++${i[this.rank-2]} < ${o[this.rank-2]}) {
        result[2] = ${u};
        if(${l}) {
          result[3] = ${u};
        }
      }
      setOutput(result);
    }
    `}};function Gi(r,t,e){let o=G().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new qg(r.shape,t):new Kg(r.shape,t);return e.runWebGLProgram(o,[r],r.dtype)}function qP(r,t,e,o){let n=t,i=r.shape.length,s=S.parseAxisParam(n,r.shape),a=s,l=R.getAxesPermutation(a,i),u=l!=null,c=r;u&&(c=Gi(r,l,o),a=R.getInnerMostAxes(a.length,i)),R.assertAxesAreInnerMostDims("sum",a,i);let[p,d]=R.computeOutAndReduceShapes(c.shape,a),m=p;e&&(m=R.expandShapeToKeepDim(p,s));let f=S.sizeFromShape(d),x=S.sizeFromShape(r.shape)/f,y=le({inputs:{x:c},attrs:{shape:[x,f]},backend:o}),v=Cn(r.dtype),k=no(y,v,"sum",o),N=le({inputs:{x:k},attrs:{shape:m},backend:o});return o.disposeIntermediateTensorInfo(y),o.disposeIntermediateTensorInfo(k),u&&o.disposeIntermediateTensorInfo(c),N}function ta(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{axis:i,keepDims:s}=o;return qP(n,i,s,e)}var jP={kernelName:vu,backendName:"webgl",kernelFunc:ta};function yt(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{perm:i}=o,s=e,a=n.shape.length,l=new Array(a);for(let c=0;c<l.length;c++)l[c]=n.shape[i[c]];let u;if(s.shouldExecuteOnCPU([n])){let p=s.texData.get(n.dataId).values,d=ea(p,n.shape,n.dtype,i,l);u=s.makeTensorInfo(l,n.dtype);let m=s.texData.get(u.dataId);m.values=d}else u=Gi(n,i,s);return u}var XP={kernelName:bi,backendName:"webgl",kernelFunc:yt};var Mb=1e3;function ra({a:r,b:t,transposeA:e,transposeB:o,backend:n,bias:i=null,preluActivationWeights:s=null,leakyreluAlpha:a=0,activation:l=null}){let u=r.shape.length,c=t.shape.length,p=e?r.shape[u-2]:r.shape[u-1],d=o?t.shape[c-1]:t.shape[c-2],m=e?r.shape[u-1]:r.shape[u-2],f=o?t.shape[c-2]:t.shape[c-1],g=r.shape.slice(0,-2),x=t.shape.slice(0,-2),y=S.sizeFromShape(g),v=S.sizeFromShape(x),N=nn.assertAndGetBroadcastShape(r.shape.slice(0,-2),t.shape.slice(0,-2)).concat([m,f]);S.assert(p===d,()=>`Error in matMul: inner shapes (${p}) and (${d}) of Tensors with shapes ${r.shape} and ${t.shape} and transposeA=${e} and transposeB=${o} must match.`);let F=e?[y,p,m]:[y,m,p],M=o?[v,f,d]:[v,d,f],z=le({inputs:{x:r},backend:n,attrs:{shape:F}}),H=le({inputs:{x:t},backend:n,attrs:{shape:M}}),K=[z,H],j=Math.max(y,v),J=e?z.shape[1]:z.shape[2],ue=i!=null,ce=s!=null,xe=l==="leakyrelu",be=l!=null?Mn(l,!0):null,Ie=ue||ce||xe||be!=null,qe;if((m===1||f===1)&&J>Mb&&Ie===!1){let it=z,qt=H;e&&(it=yt({inputs:{x:z},backend:n,attrs:{perm:[0,2,1]}}),K.push(it)),o&&(qt=yt({inputs:{x:H},backend:n,attrs:{perm:[0,2,1]}}),K.push(qt));let Zt=f!==1,Uo=f===1,fn=it;Zt&&(fn=le({inputs:{x:it},backend:n,attrs:{shape:[j,J,1]}}),K.push(fn));let ia=f===1?2:1,sa=qt;Uo&&(sa=le({inputs:{x:qt},backend:n,attrs:{shape:[j,1,J]}}),K.push(sa));let Mc=Yp({inputs:{a:fn,b:sa},backend:n});qe=ta({inputs:{x:Mc},backend:n,attrs:{axis:ia,keepDims:!0}}),K.push(Mc)}else{let it=Tt(r.dtype,t.dtype),qt=new Rc(F,M,[j,m,f],e,o,ue,be,ce,xe),Zt=[z,H];if(i!=null&&Zt.push(i),ce&&Zt.push(s),xe){let Uo=n.makeTensorInfo([],"float32",S.createScalarValue(a,"float32"));Zt.push(Uo),K.push(Uo)}qe=n.runWebGLProgram(qt,Zt,it)}let je=le({inputs:{x:qe},backend:n,attrs:{shape:N}});K.push(qe);for(let it of K)n.disposeIntermediateTensorInfo(it);return je}function NY(r){let{inputs:t,backend:e,attrs:o}=r,{a:n,b:i,bias:s,preluActivationWeights:a}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:p}=o;return ra({a:n,b:i,transposeA:l,transposeB:u,backend:e,bias:s,preluActivationWeights:a,leakyreluAlpha:p,activation:c})}var YP={kernelName:fs,backendName:"webgl",kernelFunc:NY};var QP="return abs(x);";function RY(r){let{inputs:t,backend:e}=r,{x:o}=t;if(e.shouldExecuteOnCPU([o])&&o.dtype!=="complex64"){let i=e.texData.get(o.dataId),s=Bg(i.values);return e.makeTensorInfo(o.shape,o.dtype,s)}let n;return G().getBool("WEBGL_PACK_UNARY_OPERATIONS")?n=new Or(o.shape,QP):n=new Qt(o.shape,QP),e.runWebGLProgram(n,[o],o.dtype)}var ZP={kernelName:as,backendName:"webgl",kernelFunc:RY};var $Y=Mt+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,PY=Ce({opSnippet:$Y}),JP={kernelName:$a,backendName:"webgl",kernelFunc:PY};var DY=Mt+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,AY=Ce({opSnippet:DY}),eD={kernelName:Pa,backendName:"webgl",kernelFunc:AY};var tD="return a + b;",FY=nt({opSnippet:tD,packedOpSnippet:tD,supportsComplex:!0,cpuKernelImpl:P$}),rD={kernelName:Zo,backendName:"webgl",kernelFunc:FY};var jg=class{constructor(t,e){this.outputShape=[],this.outputShape=t,this.variableNames=e.map((i,s)=>`T${s}`);let o=[];this.variableNames.forEach(i=>{o.push(`float v${i} = get${i}AtOutCoords();`)});let n=this.variableNames.map(i=>`v${i}`).join(" + ");this.userCode=`
      void main() {
        ${o.join(`
        `)}

        float result = ${n};
        setOutput(result);
      }
    `}};var Xg=class{constructor(t,e){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.variableNames=e.map((i,s)=>`T${s}`);let o=[];this.variableNames.forEach(i=>{o.push(`vec4 v${i} = get${i}AtOutCoords();`)});let n=this.variableNames.map(i=>`v${i}`).join(" + ");this.userCode=`
      void main() {
        ${o.join(`
        `)}

        vec4 result = ${n};
        setOutput(result);
      }
    `}};function Yg(r){let{inputs:t,backend:e}=r,o=t;if(o.length===1)return Dt({inputs:{x:o[0]},backend:e});if(o.length>G().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){let l=Math.floor(o.length/2),u=Yg({inputs:o.slice(0,l),backend:e}),c=Yg({inputs:o.slice(l),backend:e});return Yg({inputs:[u,c],backend:e})}let n=o.map(l=>l.dtype).reduce((l,u)=>Tt(l,u)),i=o.map(l=>l.shape),a=G().getBool("WEBGL_PACK")?new Xg(o[0].shape,i):new jg(o[0].shape,i);return e.runWebGLProgram(a,o,n)}var oD={kernelName:Da,backendName:"webgl",kernelFunc:Yg};function OY(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{axis:i,keepDims:s}=o,a=n.shape.length,l=S.parseAxisParam(i,n.shape),u=l,c=R.getAxesPermutation(u,a),p=n;c!=null&&(p=yt({inputs:{x:n},backend:e,attrs:{perm:c}}),u=R.getInnerMostAxes(u.length,a)),R.assertAxesAreInnerMostDims("all",u,a);let[d,m]=R.computeOutAndReduceShapes(p.shape,u),f=S.sizeFromShape(m),g=le({inputs:{x:p},backend:e,attrs:{shape:[-1,f]}}),x=no(g,g.dtype,"all",e),y;if(s){let v=R.expandShapeToKeepDim(d,l);y=le({inputs:{x},backend:e,attrs:{shape:v}})}else y=le({inputs:{x},backend:e,attrs:{shape:d}});return e.disposeIntermediateTensorInfo(g),e.disposeIntermediateTensorInfo(x),c!=null&&e.disposeIntermediateTensorInfo(p),y}var nD={kernelName:Aa,backendName:"webgl",kernelFunc:OY};function LY(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{axis:i,keepDims:s}=o,a=n.shape.length,l=S.parseAxisParam(i,n.shape),u=l,c=R.getAxesPermutation(u,a),p=n;c!=null&&(p=yt({inputs:{x:n},backend:e,attrs:{perm:c}}),u=R.getInnerMostAxes(u.length,a)),R.assertAxesAreInnerMostDims("any",u,a);let[d,m]=R.computeOutAndReduceShapes(p.shape,u),f=S.sizeFromShape(m),g=le({inputs:{x:p},backend:e,attrs:{shape:[-1,f]}}),x=no(g,g.dtype,"any",e),y;if(s){let v=R.expandShapeToKeepDim(d,l);y=le({inputs:{x},backend:e,attrs:{shape:v}})}else y=le({inputs:{x},backend:e,attrs:{shape:d}});return e.disposeIntermediateTensorInfo(g),e.disposeIntermediateTensorInfo(x),c!=null&&e.disposeIntermediateTensorInfo(p),y}var iD={kernelName:Fa,backendName:"webgl",kernelFunc:LY};var Qg=class{constructor(t,e,o){this.variableNames=["A"];let{windowSize:n,batchSize:i,outSize:s}=t;o||this.variableNames.push("bestIndicesA"),this.outputShape=[i,s];let a=e==="max"?">":"<",l=o?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${n}; i++) {
          int inIdx = ${l};
          float candidate = getA(batch, inIdx);
          if (candidate ${a} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}};var Zg=class{constructor(t,e,o,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,S.assert(t.length>2,()=>`Packed arg${o.charAt(0).toUpperCase()+o.slice(1)} supports only inputs with rank above 2.`);let i=t[t.length-1],s=Math.ceil(i/e);this.outputShape=t.slice(0,-1),s>1&&this.outputShape.push(s),n||this.variableNames.push("bestIndicesA");let a=this.outputShape,l=a.length,u=Le(l),c=Pt("coords",l),p,d;if(s===1){d=l+1;let H=Le(d);p=`
        ${H} sourceLocR = ${H}(${c.join()}, 0);
        ++${c[l-1]};
        ${H} sourceLocG = ${H}(${c.join()}, 0);
        ++${c[l-2]};
        ${H} sourceLocA = ${H}(${c.join()}, 0);
        --${c[l-1]};
        ${H} sourceLocB = ${H}(${c.join()}, 0);
        --${c[l-2]};`}else d=l,p=`
        ${u} sourceLocR = coords;
        ++${c[l-1]};
        ${u} sourceLocG = coords;
        ++${c[l-2]};
        ${u} sourceLocA = coords;
        --${c[l-1]};
        ${u} sourceLocB = coords;
        --${c[l-2]};`;let m=["x","y","z","w","u","v"].slice(0,d),f="."+m[d-1],g=m.map(H=>"int "+H),x=Pt("sourceLocR",d-1).concat("inIdx.r"),y=Pt("sourceLocG",d-1).concat("inIdx.g"),v=Pt("sourceLocB",d-1).concat("inIdx.b"),k=Pt("sourceLocA",d-1).concat("inIdx.a"),N=o==="max"?"greaterThan":"lessThan",F=n?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${x.join()}),
                             getBestIndicesAChannel(${y.join()}),
                             getBestIndicesAChannel(${v.join()}),
                             getBestIndicesAChannel(${k.join()})));`,M=`vec4(
            getAChannel(${x.join()}),
            hasNextCol ? getAChannel(${y.join()}) : 0.,
            hasNextRow ? getAChannel(${v.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${k.join()}) : 0.)`,z=n?"":`
      float getBestIndicesAChannel(${g.join()}) {
        return getChannel(getBestIndicesA(${m.join()}),
                                          vec2(${m.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${g.join()}) {
        return getChannel(getA(${m.join()}),
                               vec2(${m.slice(-2).join()}));
      }
      ${z}
      void main() {
        ${u} coords = getOutputCoords();
        bool hasNextCol = ${c[l-1]} < ${a[l-1]-1};
        bool hasNextRow = ${c[l-2]} < ${a[l-2]-1};
        ${p}
        ivec4 srcIdx = ivec4(sourceLocR${f}, sourceLocG${f},
          sourceLocB${f}, sourceLocA${f}) * ${e};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${M};

        for (int i = 0; i < ${e}; i++) {
          inIdx = srcIdx;
          ${F}
          vec4 candidate = ${M};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${N}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}};function sD(r,t,e,o=null){let n=t.shape[0],i=t.shape[1];o!=null&&(n=o.shape[0],i=o.shape[1]);let s=R.computeOptimalWindowSize(i),a={windowSize:s,inSize:i,batchSize:n,outSize:Math.ceil(i/s)},l=new Qg(a,e,o==null),u=[t];o!=null&&u.push(o);let c=r.runWebGLProgram(l,u,"int32");if(c.shape[1]===1)return c;let p=sD(r,t,e,c);return r.disposeIntermediateTensorInfo(c),p}function aD(r,t,e,o=null){let n=o!=null?o.shape:t.shape,i=n[n.length-1],s=R.computeOptimalWindowSize(i),a=new Zg(n,s,e,o==null),l=o==null?[t]:[t,o],u=r.runWebGLProgram(a,l,"int32");if(u.shape.length===t.shape.length){let c=aD(r,t,e,u);return r.disposeIntermediateTensorInfo(u),c}return u}function Jg(r,t,e,o){let n=[e];if(R.assertAxesAreInnerMostDims("arg"+o.charAt(0).toUpperCase()+o.slice(1),n,t.shape.length),!G().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){let i=[],s=r.texData.get(t.dataId),a=s!==null&&s.isPacked,l=t;a&&(l=r.unpackTensor(t),i.push(l));let[u,c]=R.computeOutAndReduceShapes(l.shape,n),p=S.sizeFromShape(c),d=le({inputs:{x:l},backend:r,attrs:{shape:[-1,p]}});i.push(d);let m=sD(r,d,o);i.push(m);let f=le({inputs:{x:m},backend:r,attrs:{shape:u}});return i.forEach(g=>r.disposeIntermediateTensorInfo(g)),f}return aD(r,t,o)}function MY(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{axis:i}=o,s=S.parseAxisParam(i,n.shape),a=R.getAxesPermutation(s,n.shape.length),l=n,u=[];a!=null&&(l=yt({inputs:{x:n},backend:e,attrs:{perm:a}}),u.push(l),s=R.getInnerMostAxes(s.length,l.shape.length)),R.assertAxesAreInnerMostDims("argMax",[s[0]],l.shape.length);let c=Jg(e,l,s[0],"max");return u.forEach(p=>e.disposeIntermediateTensorInfo(p)),c}var lD={kernelName:Oa,backendName:"webgl",kernelFunc:MY};function BY(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{axis:i}=o,s=S.parseAxisParam(i,n.shape),a=R.getAxesPermutation(s,n.shape.length),l=n,u=[];a!=null&&(l=yt({inputs:{x:n},backend:e,attrs:{perm:a}}),u.push(l),s=R.getInnerMostAxes(s.length,l.shape.length)),R.assertAxesAreInnerMostDims("argMin",[s[0]],l.shape.length);let c=Jg(e,l,s[0],"min");return u.forEach(p=>e.disposeIntermediateTensorInfo(p)),c}var uD={kernelName:La,backendName:"webgl",kernelFunc:BY};var VY=Mt+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,WY=Ce({opSnippet:VY}),cD={kernelName:Ma,backendName:"webgl",kernelFunc:WY};var zY=Mt+"return log(x + sqrt(x * x + 1.0));",UY=Ce({opSnippet:zY}),pD={kernelName:Ba,backendName:"webgl",kernelFunc:UY};var GY=Mt+`
  return atan(x);
`,HY=Ce({opSnippet:GY}),dD={kernelName:Va,backendName:"webgl",kernelFunc:HY};var KY=Nc+`
  return atan(a, b);
`,qY=`
  vec4 result = atan(a, b);
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+oo+`
  return result;
`,jY=nt({opSnippet:KY,packedOpSnippet:qY}),mD={kernelName:za,backendName:"webgl",kernelFunc:jY};var XY=Mt+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,YY=Ce({opSnippet:XY}),fD={kernelName:Wa,backendName:"webgl",kernelFunc:YY};var Wo=class{constructor(t,e,o,n=!1,i=!1){if(this.variableNames=["x"],e==="avg"&&o)throw new Error("Cannot compute positions for average pool.");let s=t.filterWidth,a=t.strideHeight,l=t.strideWidth,u=t.dilationHeight,c=t.dilationWidth,p=t.effectiveFilterHeight,d=t.effectiveFilterWidth,m=t.padInfo.top,f=t.padInfo.left;this.outputShape=t.outShape;let g=e==="avg",x=`((batch  * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + d`,y=`(xR * ${t.inWidth} + xC) * ${t.inChannels} + d`,v="0.0";if(g||(v="-1.0 / 1e-20"),o){let H=">=";this.userCode=`
        const ivec2 strides = ivec2(${a}, ${l});
        const ivec2 pads = ivec2(${m}, ${f});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${p};
              wR += ${u}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${d};
                wC += ${c}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${H} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${n?i?x:y:`wR * ${d} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let k="max",N=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;e==="avg"&&(N="avgValue / max(count, 1.0)");let F=Math.floor(s/4)*4,M=s%4,z=`
      if (${g}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${k}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${a}, ${l});
      const ivec2 pads = ivec2(${m}, ${f});
      const float initializationValue = ${v};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${t.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${v});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${p};
            wR += ${u}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${t.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${F}; wC += 4) {
            int xC = xCCorner + wC * ${c};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              getValue(batch, xR, xC + 2 * ${c}, d),
              getValue(batch, xR, xC + 3 * ${c}, d)
            );

            ${z}
          }

          int xC = xCCorner + ${F};
          if (${M===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${z}
          } else if (${M===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              initializationValue,
              initializationValue
            );

            ${z}
          } else if (${M===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              getValue(batch, xR, xC + 2 * ${c}, d),
              initializationValue
            );

            ${z}
          }
        }
        setOutput(${N});
      }
    `}},Hi=class{constructor(t,e,o,n=!1,i=!1){if(this.variableNames=["x"],e==="avg"&&o)throw new Error("Cannot compute positions for average pool.");let s=t.filterWidth,a=t.strideDepth,l=t.strideHeight,u=t.strideWidth,c=t.dilationDepth,p=t.dilationHeight,d=t.dilationWidth,m=t.effectiveFilterDepth,f=t.effectiveFilterHeight,g=t.effectiveFilterWidth,x=t.padInfo.front,y=t.padInfo.top,v=t.padInfo.left;this.outputShape=t.outShape;let k=e==="avg",N="0.0";if(k||(N="-1.0 / 1e-20"),o){let j=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${a}, ${l}, ${u});
        const ivec3 pads = ivec3(${x}, ${y}, ${v});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${m};
              wD += ${c}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${t.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${f};
                wR += ${p}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${t.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${g};
                  wC += ${d}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${t.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${j} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${n?i?`(((batch * ${t.inDepth} + xD) * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`((xD * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`wD * ${f} * ${g} +
                      wR * ${g} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let F="max",M=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;e==="avg"&&(M="avgValue / max(count, 1.0)");let z=Math.floor(s/4)*4,H=s%4,K=`
      if (${k}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${F}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${a}, ${l}, ${u});
      const ivec3 pads = ivec3(${x}, ${y}, ${v});
      const float initializationValue = ${N};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${t.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${N});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${m};
            wD += ${c}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${t.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${f};
            wR += ${p}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${z}; wC += 4) {
              int xC = xCCorner + wC * ${d};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                getValue(batch, xD, xR, xC + 2 * ${d}, ch),
                getValue(batch, xD, xR, xC + 3 * ${d}, ch)
              );

              ${K}
            }

            int xC = xCCorner + ${z};
            if (${H===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${K}
            } else if (${H===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                initializationValue,
                initializationValue
              );

              ${K}
            } else if (${H===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                getValue(batch, xD, xR, xC + 2 * ${d}, ch),
                initializationValue
              );

              ${K}
            }
          }
        }
        setOutput(${M});
      }
    `}};function QY(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t;dn(n,"avgPool");let{filterSize:i,strides:s,pad:a,dimRoundingMode:l}=o,u=1;S.assert(R.eitherStridesOrDilationsAreOne(s,u),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${s} and dilations '${u}'`);let c=R.computePool2DInfo(n.shape,i,s,u,a,l);if(c.filterWidth===1&&c.filterHeight===1&&S.arraysEqual(c.inShape,c.outShape))return Dt({inputs:{x:n},backend:e});let p=new Wo(c,"avg",!1);return e.runWebGLProgram(p,[n],"float32")}var hD={kernelName:Ua,backendName:"webgl",kernelFunc:QY};function ZY(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{filterSize:i,strides:s,pad:a,dimRoundingMode:l,dataFormat:u}=o,c=[1,1,1],p=R.computePool3DInfo(n.shape,i,s,c,a,l,u),d=new Hi(p,"avg",!1);return e.runWebGLProgram(d,[n],"float32")}var gD={kernelName:Ga,backendName:"webgl",kernelFunc:ZY};var ex=class{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;let e=t.filterHeight,o=t.filterWidth,n=t.strideHeight,i=t.strideWidth,s=t.dilationHeight,a=t.dilationWidth,l=t.effectiveFilterHeight,u=t.effectiveFilterWidth,c=l-1-t.padInfo.top,p=u-1-t.padInfo.left,d=1/(e*o);this.userCode=`
      const ivec2 pads = ivec2(${c}, ${p});
      const float avgMultiplier = float(${d});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${l};
            wR += ${s}) {
          float dyR = float(dyRCorner + wR) / ${n}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${u};
            wC+= ${a}) {
            float dyC = float(dyCCorner + wC) / ${i}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}},tx=class{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;let e=t.filterDepth,o=t.filterHeight,n=t.filterWidth,i=t.strideDepth,s=t.strideHeight,a=t.strideWidth,l=t.dilationDepth,u=t.dilationHeight,c=t.dilationWidth,p=t.effectiveFilterDepth,d=t.effectiveFilterHeight,m=t.effectiveFilterWidth,f=p-1-t.padInfo.front,g=d-1-t.padInfo.top,x=m-1-t.padInfo.left,y=1/(e*o*n);this.userCode=`
      const ivec3 pads = ivec3(${f}, ${g}, ${x});
      const float avgMultiplier = float(${y});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${p};
            wD += ${l}) {
          float dyD = float(dyDCorner + wD) / ${i}.0;

          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${d};
              wR += ${u}) {
            float dyR = float(dyRCorner + wR) / ${s}.0;

            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${m};
                wC += ${c}) {
              float dyC = float(dyCCorner + wC) / ${a}.0;

              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function JY(r){let{inputs:t,backend:e,attrs:o}=r,{dy:n,input:i}=t,s=i,{filterSize:a,strides:l,pad:u,dimRoundingMode:c}=o,p=[1,1,1],d=R.computePool3DInfo(s.shape,a,l,p,u,c),m=new tx(d);return e.runWebGLProgram(m,[n],s.dtype)}var xD={kernelName:Wd,backendName:"webgl",kernelFunc:JY};function eQ(r){let{inputs:t,backend:e,attrs:o}=r,{dy:n,input:i}=t,s=i;dn([n,i],"avgPoolGrad");let{filterSize:a,strides:l,pad:u}=o,c=R.computePool2DInfo(s.shape,a,l,1,u),p=new ex(c);return e.runWebGLProgram(p,[n],s.dtype)}var yD={kernelName:Vd,backendName:"webgl",kernelFunc:eQ};function tQ(r){let{inputs:t,backend:e,attrs:o}=r,{a:n,b:i}=t,{transposeA:s,transposeB:a}=o;return ra({a:n,b:i,transposeA:s,transposeB:a,backend:e})}var bD={kernelName:Ha,backendName:"webgl",kernelFunc:tQ};var rx=class{constructor(t,e,o,n,i,s){this.outputShape=[],this.variableNames=["x","mean","variance"],R.assertAndGetBroadcastShape(t,e),R.assertAndGetBroadcastShape(t,o);let a="0.0";n!=null&&(R.assertAndGetBroadcastShape(t,n),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let l="1.0";i!=null&&(R.assertAndGetBroadcastShape(t,i),this.variableNames.push("scale"),l="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${a};
        float scale = ${l};
        float inv = scale * inversesqrt(variance + float(${s}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}};var ox=class{constructor(t,e,o,n,i,s){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],R.assertAndGetBroadcastShape(t,e),R.assertAndGetBroadcastShape(t,o);let a="vec4(0.0)";n!=null&&(R.assertAndGetBroadcastShape(t,n),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let l="vec4(1.0)";i!=null&&(R.assertAndGetBroadcastShape(t,i),this.variableNames.push("scale"),l="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`
      void main() {
        vec4 offset = ${a};
        vec4 scale = ${l};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${s}));

        setOutput((x - mean) * inv + offset);
      }
    `}};var rQ=({inputs:r,backend:t,attrs:e})=>{let{x:o,mean:n,variance:i,offset:s,scale:a}=r;S.assert(n.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),S.assert(s==null||n.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),S.assert(a==null||n.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:l}=e;l==null&&(l=.001);let u=[o,n,i],c=null;s!=null&&(c=s.shape,u.push(s));let p=null;a!=null&&(p=a.shape,u.push(a));let d=G().getBool("WEBGL_PACK_NORMALIZATION")?new ox(o.shape,n.shape,i.shape,c,p,l):new rx(o.shape,n.shape,i.shape,c,p,l);return t.runWebGLProgram(d,u,u[0].dtype)},vD={kernelName:_l,backendName:"webgl",kernelFunc:rQ};var nx=class{constructor(t){this.variableNames=["source"],this.outputShape=t,this.rank=t.length;let e=Le(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let o=oQ(this.rank),n,i=t.map((s,a)=>`sourceLoc.${Bb[a]} = start[${a}] + coords.${Bb[a]};`);n=`
        ${e} sourceLoc;
        ${e} coords = getOutputCoords();
        ${i.join(`
`)}
      `,this.userCode=`
      void main() {
        ${n}
        setOutput(getSource(${o}));
      }
    `}},Bb=["x","y","z","w","u","v"];function oQ(r){if(r===1)return"sourceLoc";if(r<=6)return Bb.slice(0,r).map(t=>"sourceLoc."+t).join(",");throw Error(`Slicing for rank ${r} is not yet supported`)}var ix=class{constructor(t){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.rank=t.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let e=Le(this.rank),o=Pt("coords",this.rank),n=Pt("sourceLoc",this.rank),i=this.rank===1?"sourceLoc":`vec2(${n.slice(-2).join()})`,s=`getChannel(getSource(${n.join()}), ${i})`,a=`
      result.x = ${s};
      if (++${o[this.rank-1]} < ${t[this.rank-1]}) {
        ++${n[this.rank-1]};
        result.y = ${s};
        --${n[this.rank-1]};
      }
    `,l=this.rank===1?"":`
      --${o[this.rank-1]};
      if (++${o[this.rank-2]} < ${t[this.rank-2]}) {
        ++${n[this.rank-2]};
        result.z = ${s};
        if (++${o[this.rank-1]} < ${t[this.rank-1]}) {
          ++${n[this.rank-1]};
          result.w = ${s};
        }
      }
    `,u=this.rank<=4?`sourceLoc = coords +
            ${e}(${t.map((c,p)=>`start[${p}]`).join()});`:t.map((c,p)=>`${n[p]} = ${o[p]} + start[${p}];`).join(`
`);this.userCode=`
      void main() {
        ${e} coords = getOutputCoords();
        ${e} sourceLoc;
        ${u}
        vec4 result = vec4(0.);
        ${a}
        ${l}
        setOutput(result);
      }
    `}};function nQ(r,t,e,o){let n=o.texData.get(r.dataId),i=o.makeTensorInfo(e,r.dtype),s=o.texData.get(i.dataId);Object.assign(s,n),s.refCount=1,s.shape=e,s.dtype=r.dtype;let a=Ut.computeFlatOffset(t,S.computeStrides(r.shape));n.slice&&(a+=n.slice.flatOffset),s.slice={flatOffset:a,origDataId:n.slice&&n.slice.origDataId||r.dataId};let l=o.dataRefCount.get(s.slice.origDataId)||1;return o.dataRefCount.set(s.slice.origDataId,l+1),i}function zo(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{begin:i,size:s}=o,[a,l]=Ut.parseSliceParams(n,i,s);if(Ut.assertParamsValid(n,a,l),S.sizeFromShape(l)===0)return e.makeTensorInfo(l,n.dtype,[]);if(e.shouldExecuteOnCPU([n])||n.dtype==="string"){let p=e.texData.get(n.dataId),d=cP(p.values,a,l,n.shape,n.dtype);return e.makeTensorInfo(l,n.dtype,d)}let{isPacked:u}=e.texData.get(n.dataId),c=Ut.isSliceContinous(n.shape,a,l);if(u||!c){let p=G().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new ix(l):new nx(l),d=[a];return e.runWebGLProgram(p,[n],n.dtype,d)}return e.uploadToGPU(n.dataId),nQ(n,a,l,e)}var SD={kernelName:ds,backendName:"webgl",kernelFunc:zo};var iQ=r=>{let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{blockShape:i,crops:s}=o;S.assert(n.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");let a=i.reduce((v,k)=>v*k),l=R.getReshaped(n.shape,i,a),u=R.getPermuted(l.length,i.length),c=R.getReshapedPermuted(n.shape,i,a),p=R.getSliceBeginCoords(s,i.length),d=R.getSliceSize(c,s,i.length),m=[],f=le({inputs:{x:n},backend:e,attrs:{shape:l}}),g=yt({inputs:{x:f},backend:e,attrs:{perm:u}}),x=le({inputs:{x:g},backend:e,attrs:{shape:c}}),y=zo({inputs:{x},backend:e,attrs:{begin:p,size:d}});return m.push(f),m.push(g),m.push(x),m.forEach(v=>e.disposeIntermediateTensorInfo(v)),y},wD={kernelName:Ka,backendName:"webgl",kernelFunc:iQ};function sQ(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,weights:i}=t,{size:s}=o,a=e.readSync(n.dataId),l=e.readSync(i.dataId),u=Mg(a,l,i.dtype,i.shape,s);return e.makeTensorInfo([s],i.dtype,u)}var CD={kernelName:qa,backendName:"webgl",kernelFunc:sQ};var aQ=`
  int r = int(a.r) & int(b.r);
  int g = int(a.g) & int(b.g);
  int rb = int(a.b) & int(b.b);
  int ra = int(a.a) & int(b.a);
  return vec4(r, g, rb, ra);
`,lQ=`
  return float(int(a.r) & int(b.r));
`;function uQ(r){let{inputs:t,backend:e}=r,{a:o,b:n}=t,i=G().getBool("WEBGL_PACK_BINARY_OPERATIONS"),s=G().getNumber("WEBGL_VERSION");if(e.shouldExecuteOnCPU([o,n])||s===1){let l=e.texData.get(o.dataId).values,u=e.texData.get(n.dataId).values,[c,p]=A$(o.shape,n.shape,l,u,o.dtype),d=e.makeTensorInfo(p,o.dtype),m=e.texData.get(d.dataId);return m.values=c,d}let a;return i?a=new ro(aQ,o.shape,n.shape,!1):a=new Lr(lQ,o.shape,n.shape),e.runWebGLProgram(a,[o,n],o.dtype)}var _D={kernelName:ja,backendName:"webgl",kernelFunc:uQ};function cQ(r){let{inputs:t,backend:e}=r,{s0:o,s1:n}=t,i=e.readSync(o.dataId),s=e.readSync(n.dataId),a=R.assertAndGetBroadcastShape(Array.from(i),Array.from(s));return e.makeTensorInfo([a.length],"int32",Int32Array.from(a))}var kD={kernelName:Xa,backendName:"webgl",kernelFunc:cQ};var pQ="return float(a != b);",Vb=nt({opSnippet:pQ,cpuKernelImpl:tP,dtype:"bool"}),ID={kernelName:di,backendName:"webgl",kernelFunc:Vb};function Bn(r){let{inputs:t,backend:e}=r,{input:o}=t,n=e.texData.get(o.dataId);return Dt({inputs:{x:n.complexTensorInfos.real},backend:e})}var TD={kernelName:ps,backendName:"webgl",kernelFunc:Bn};var dQ="return float(int(x));";function ED(r,t){let e=new Qt(r.shape,dQ),o=t.runWebGLProgram(e,[r],"int32");return{dataId:o.dataId,shape:o.shape,dtype:o.dtype}}function Wb(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{dtype:i}=o;if(i==="complex64"){if(n.dtype==="complex64")return Dt({inputs:{x:n},backend:e});let s=yr(n.shape),a=Wb({inputs:{x:n},backend:e,attrs:{dtype:"float32"}}),l=Mr({inputs:{real:a,imag:s},backend:e});return s.dispose(),e.disposeIntermediateTensorInfo(a),l}if(n.dtype==="complex64"){let s=Bn({inputs:{input:n},backend:e}),a=Wb({inputs:{x:s},backend:e,attrs:{dtype:i}});return e.disposeIntermediateTensorInfo(s),a}if(!S.hasEncodingLoss(n.dtype,i)){let s=Dt({inputs:{x:n},backend:e});return{dataId:s.dataId,shape:s.shape,dtype:i}}if(e.shouldExecuteOnCPU([n])){let s=e.texData.get(n.dataId).values,[a,l,u]=F$(s,n.shape,n.dtype,i);return e.makeTensorInfo(a,l,u)}if(i==="int32")return ED(n,e);if(i==="bool"){let s=e.makeTensorInfo([],"bool",S.getTypedArrayFromDType("bool",1)),l=Vb({inputs:{a:n,b:s},backend:e});return e.disposeIntermediateTensorInfo(s),l}throw new Error(`Error in Cast: failed to cast ${n.dtype} to ${i}`)}var ND={kernelName:bn,backendName:"webgl",kernelFunc:Wb};var RD="return ceil(x);",mQ=Ce({opSnippet:RD,packedOpSnippet:RD,cpuKernelImpl:O$}),$D={kernelName:Zn,backendName:"webgl",kernelFunc:mQ};var sx=class{constructor(t){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=t,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}};var ax=class{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=t,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}};function fQ(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{clipValueMin:i,clipValueMax:s}=o,a;G().getBool("WEBGL_PACK_CLIP")?a=new ax(n.shape):a=new sx(n.shape);let l=[[i],[s]];return e.runWebGLProgram(a,[n],n.dtype,l)}var PD={kernelName:Ya,backendName:"webgl",kernelFunc:fQ};var lx=class{constructor(t){this.variableNames=["real","imag"],this.outputShape=t,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}};function DD(r,t){return{dataId:t.dataId,dtype:t.dtype,shape:r.shape}}function hQ(r){let{inputs:t,backend:e}=r,{x:o}=t,n=e.texData.get(o.dataId),i=new lx(o.shape),s=[DD(o,n.complexTensorInfos.real),DD(o,n.complexTensorInfos.imag)];return e.runWebGLProgram(i,s,s[0].dtype)}var AD={kernelName:Qa,backendName:"webgl",kernelFunc:hQ};var ux=class{constructor(t){this.outputShape=[],this.outputShape=R.computeOutShape(t,1),this.variableNames=t.map((s,a)=>`T${a}`);let e=new Array(t.length-1);e[0]=t[0][1];for(let s=1;s<e.length;s++)e[s]=e[s-1]+t[s][1];let o=[`if (yC < ${e[0]}) setOutput(getT0(yR, yC));`];for(let s=1;s<e.length;s++){let a=e[s-1];o.push(`else if (yC < ${e[s]}) setOutput(getT${s}(yR, yC-${a}));`)}let n=e.length,i=e[e.length-1];o.push(`else setOutput(getT${n}(yR, yC-${i}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${o.join(`
        `)}
      }
    `}};var px=class{constructor(t,e){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=R.computeOutShape(t,e);let o=this.outputShape,n=o.length,i=Le(n),s=Pt("coords",n),a=["x","y","z","w","u","v"].slice(0,n);this.variableNames=t.map((g,x)=>`T${x}`);let l=new Array(t.length-1);l[0]=t[0][e];for(let g=1;g<l.length;g++)l[g]=l[g-1]+t[g][e];let u=a[e],c=a.slice(-2),p=a.join(),d=`if (${u} < ${l[0]}) {
        return getChannel(
            getT0(${p}), vec2(${c.join()}));
        }`;for(let g=1;g<l.length;g++){let x=l[g-1];d+=`
        if (${u} < ${l[g]}  && ${u} >= ${l[g-1]}) {
          return getChannel(
            getT${g}(${cx(a,u,x)}),
            vec2(${cx(c,u,x)}));
        }`}let m=l.length,f=l[l.length-1];d+=`
        return getChannel(
          getT${m}(${cx(a,u,f)}),
          vec2(${cx(c,u,f)}));`,this.userCode=`
      float getValue(${a.map(g=>"int "+g)}) {
        ${d}
      }

      void main() {
        ${i} coords = getOutputCoords();
        vec4 result = vec4(getValue(${s}), 0., 0., 0.);

        ${s[n-1]} = ${s[n-1]} + 1;
        if (${s[n-1]} < ${o[n-1]}) {
          result.g = getValue(${s});
        }

        ${s[n-2]} = ${s[n-2]} + 1;
        if (${s[n-2]} < ${o[n-2]}) {
          result.a = getValue(${s});
        }

        ${s[n-1]} = ${s[n-1]} - 1;
        if (${s[n-2]} < ${o[n-2]} &&
            ${s[n-1]} < ${o[n-1]}) {
          result.b = getValue(${s});
        }
        setOutput(result);
      }
    `}};function cx(r,t,e){let o=r.indexOf(t);return r.map((i,s)=>s===o?`${i} - ${e}`:i).join()}function oa(r){let{inputs:t,backend:e}=r,{input:o}=t,n=e.texData.get(o.dataId);return Dt({inputs:{x:n.complexTensorInfos.imag},backend:e})}var FD={kernelName:El,backendName:"webgl",kernelFunc:oa};function $c(r,t,e){let o=r[0].dtype;if(o==="complex64"){let m=r.map(v=>Bn({inputs:{input:v},backend:e})),f=r.map(v=>oa({inputs:{input:v},backend:e})),g=$c(m,t,e),x=$c(f,t,e),y=Mr({inputs:{real:g,imag:x},backend:e});return m.forEach(v=>e.disposeIntermediateTensorInfo(v)),f.forEach(v=>e.disposeIntermediateTensorInfo(v)),e.disposeIntermediateTensorInfo(g),e.disposeIntermediateTensorInfo(x),y}let n=e.shouldExecuteOnCPU(r);if(o==="string"&&(n=!0),n){let m=r.map(N=>{let M=[-1,S.sizeFromShape(N.shape.slice(t))];return le({inputs:{x:N},backend:e,attrs:{shape:M}})}),f=m.map(N=>({vals:e.readSync(N.dataId),shape:N.shape})),g=R.computeOutShape(m.map(N=>N.shape),1),x=m[0].shape[0]===1,y=L$(f,g,o,x),v=R.computeOutShape(r.map(N=>N.shape),t),k=e.makeTensorInfo(v,o,y);return m.forEach(N=>e.disposeIntermediateTensorInfo(N)),k}let i=r.filter(m=>S.sizeFromShape(m.shape)>0),s=G().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&i[0].shape.length>1;if(i.length===1){let m=s?new Qt(r[0].shape,mn):new Or(r[0].shape,mn);return e.runWebGLProgram(m,r,o)}let a=G().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(i.length>a){let m=[];for(let g=0;g<i.length;g+=a){let x=i.slice(g,g+a);m.push($c(x,t,e))}let f=$c(m,t,e);for(let g of m)e.disposeIntermediateTensorInfo(g);return f}if(s){let m=new px(i.map(f=>f.shape),t);return e.runWebGLProgram(m,i,o)}let{tensors2D:l,outShape:u}=gQ(i,t,e),c=new ux(l.map(m=>m.shape)),p=e.runWebGLProgram(c,l,o);l.forEach(m=>e.disposeIntermediateTensorInfo(m));let d=le({inputs:{x:p},attrs:{shape:u},backend:e});return e.disposeIntermediateTensorInfo(p),d}function gQ(r,t,e){let o=R.computeOutShape(r.map(i=>i.shape),t);return{tensors2D:r.map(i=>le({inputs:{x:i},attrs:{shape:[-1,S.sizeFromShape(i.shape.slice(t))]},backend:e})),outShape:o}}function zb(r){let{inputs:t,backend:e,attrs:o}=r,{axis:n}=o,i=S.parseAxisParam(n,t[0].shape)[0],s=t.map(u=>u.shape);R.assertParamsConsistent(s,i);let a=R.computeOutShape(t.map(u=>u.shape),i);if(S.sizeFromShape(a)===0)return e.makeTensorInfo(a,t[0].dtype,[]);let l=t.filter(u=>S.sizeFromShape(u.shape)>0);return l.length===1?Dt({inputs:{x:l[0]},backend:e}):$c(l,i,e)}var OD={kernelName:Za,backendName:"webgl",kernelFunc:zb};var Pc=class{constructor(t,e=!1,o=null,n=!1,i=!1){this.variableNames=["x","W"],this.outputShape=t.outShape;let s=t.padInfo.top,a=t.padInfo.left,l=t.strideHeight,u=t.strideWidth,c=t.dilationHeight,p=t.dilationWidth,d=t.filterHeight,m=t.filterWidth,f=Math.floor(t.inChannels/4)*4,g=t.inChannels%4,x=t.dataFormat==="channelsLast",y=x?1:2,v=x?2:3,k=x?3:1,N="",F="";o&&(n?N=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${o}
        }`:i?N=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${o}
        }`:N=`
          float activation(float x) {
            ${o}
          }
        `,F="result = activation(result);");let M=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),n&&this.variableNames.push("preluActivationWeights"),i&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${N}

      const ivec2 strides = ivec2(${l}, ${u});
      const ivec2 pads = ivec2(${s}, ${a});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${k}];

        ivec2 xRCCorner =
            ivec2(coords[${y}], coords[${v}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${d}; wR++) {
          int xR = xRCorner + wR * ${c};

          if (xR < 0 || xR >= ${t.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${m}; wC++) {
            int xC = xCCorner + wC * ${p};

            if (xC < 0 || xC >= ${t.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${f}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${x}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${g===1}) {

              if (${x}) {
                dotProd +=
                    getX(batch, xR, xC, ${f}) *
                    getW(wR, wC, ${f}, d2);
              } else {
                dotProd +=
                    getX(batch, ${f}, xR, xC) *
                    getW(wR, wC, ${f}, d2);
              }

            } else if (${g===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${f}, d2),
                getW(wR, wC, ${f} + 1, d2)
              );

              if (${x}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${f}),
                  getX(batch, xR, xC, ${f} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${f}, xR, xC),
                  getX(batch, ${f} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${g===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${f}, d2),
                getW(wR, wC, ${f} + 1, d2),
                getW(wR, wC, ${f} + 2, d2)
              );

              if (${x}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${f}),
                  getX(batch, xR, xC, ${f} + 1),
                  getX(batch, xR, xC, ${f} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${f}, xR, xC),
                  getX(batch, ${f} + 1, xR, xC),
                  getX(batch, ${f} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${M}
        ${F}
        setOutput(result);
      }
    `}},dx=class{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;let e=t.padInfo.front,o=t.padInfo.top,n=t.padInfo.left,i=t.strideDepth,s=t.strideHeight,a=t.strideWidth,l=t.dilationDepth,u=t.dilationHeight,c=t.dilationWidth,p=t.filterDepth,d=t.filterHeight,m=t.filterWidth,f=Math.floor(t.inChannels/4)*4,g=t.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${i}, ${s}, ${a});
      const ivec3 pads = ivec3(${e}, ${o}, ${n});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${p}; wF++) {
          int xF = xFCorner + wF * ${l};

          if (xF < 0 || xF >= ${t.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${d}; wR++) {
            int xR = xRCorner + wR * ${u};

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${m}; wC++) {
              int xC = xCCorner + wC * ${c};

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${f}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${g===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${f}) *
                  getW(wF, wR, wC, ${f}, d2);
              } else if (${g===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${f}),
                  getX(batch, xF, xR, xC, ${f} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${f}, d2),
                  getW(wF, wR, wC, ${f} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${g===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${f}),
                  getX(batch, xF, xR, xC, ${f} + 1),
                  getX(batch, xF, xR, xC, ${f} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${f}, d2),
                  getW(wF, wR, wC, ${f} + 1, d2),
                  getW(wF, wR, wC, ${f} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}};var Dc=class{constructor(t,e=!1,o=null,n=!1,i=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=at(this.outputShape.length);let s=t.padInfo.left,a=t.strideWidth,l=t.dilationWidth,u=t.filterHeight,c=t.filterWidth,p=c,d=`
       int xR; int xC; int xCOffset;
       vec4 wTexel; vec4 previous; vec4 final;`;for(let x=0;x<c;x++)d+=`
           vec4 xTexelC${x*2};
           int xTexelC${x*2}Ready;
           vec4 xTexelC${x*2+1};
           int xTexelC${x*2+1}Ready;
           vec4 xC${x};`;d+=`
     for (int r = 0; r < ${u}; r++) {
      for (int d1 = 0; d1 < ${t.inChannels}; d1 += 2) {
       `;for(let x=0;x<c;x++)d+=`
           xTexelC${x*2} = vec4(0.0);
           xTexelC${x*2}Ready = 0;
           xTexelC${x*2+1} = vec4(0.0);
           xTexelC${x*2+1}Ready = 0;
           xC${x} = vec4(0.0);`;d+=`
         xR = xRCorner + r * dilations[0];
         if (xR >=0 && xR < inDims[0]) {
       `;for(let x=0;x<(p+1)/2;x++){let y=x*2;if(d+=`
           xC = xCCorner + ${y*l};
           `,a===1){if(y<c&&(s%2===1?(d+=`
                 xCOffset = xC + 1;
                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y}Ready == 0) {
                   xTexelC${y} = getX(batch, xR, xCOffset, d1);

                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${y}.zw = vec2(0.0);
                   }
                   xTexelC${y}Ready = 1;
                 }
               `,l===1&&y>0?d+=`
                 xC${y} = vec4(xTexelC${y-2}.zw, xTexelC${y}.xy);
                 `:d+=`
                   xCOffset = xC + 1 - 2;

                   if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       previous.zw = vec2(0.0);
                     }

                     xC${y} = vec4(previous.zw, xTexelC${y}.xy);
                   } else {
                     xC${y} = vec4(0.0, 0.0, xTexelC${y}.xy);
                   }
                   `):d+=`
                 if (xC >= 0 && xC < inDims[1] && xTexelC${y}Ready == 0) {
                   xTexelC${y} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${y}.zw = vec2(0.0);
                   }
                   xTexelC${y}Ready = 1;
                 }

                 xC${y} = xTexelC${y};
                 `,y+1<c)){let v=s%2===0?S.nearestLargerEven(l):l;l%2===0&&s%2===1||l%2!==0&&s%2!==1?(d+=`
                   xCOffset = xC + imod(pads[1], 2) + ${v};

                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                     xTexelC${y+1} = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       xTexelC${y+1}.zw = vec2(0.0);
                     }
                     xTexelC${y+1}Ready = 1;
                   }
                   `,l>1?d+=`
                     xCOffset -= 2;
                     if (xCOffset >= 0 && xCOffset < inDims[1]) {
                      previous = getX(batch, xR, xCOffset, d1);
                      xC${y+1} = vec4(previous.zw, xTexelC${y+1}.xy);
                     } else {
                      xC${y+1} = vec4(0.0, 0.0, xTexelC${y+1}.xy);
                     }
                     `:d+=`
                     xC${y+1} = vec4(xTexelC${y}.zw, xTexelC${y+1}.xy);
                     `):v===1?d+=`
                     xC${y+1} = xTexelC${y};
                     `:d+=`
                     xCOffset = xC + ${v};

                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                       xTexelC${y+1} = getX(batch, xR, xCOffset, d1);
                       if (xCOffset + 1 >= inDims[1]) {
                         xTexelC${y+1}.zw = vec2(0.0);
                       }
                       xTexelC${y+1}Ready = 1;
                     }

                     xC${y+1} = xTexelC${y+1};
                     `}}else y<c&&(s%2===1?(d+=`
                 xCOffset = xC + 1 - strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y}Ready == 0) {
                   xTexelC${y} = getX(batch, xR, xCOffset, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${y}.zw = vec2(0.0);
                   }
                   xTexelC${y}Ready = 1;
                 }

                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${y+1}Ready == 0) {
                   xTexelC${y+1} = getX(batch, xR, xC + 1, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xC + 2 >= inDims[1]) {
                     xTexelC${y+1}.zw = vec2(0.0);
                   }
                   xTexelC${y+1}Ready = 1;
                 }

                 xC${y} = vec4(xTexelC${y}.zw, xTexelC${y+1}.zw);
               `,y+1<c&&(d+=`
                   final = vec4(0.0);
                   xCOffset = xC + 1 + strides[1];
                   if(xCOffset >= 0 && xCOffset < inDims[1]) {
                     final = getX(batch, xR, xCOffset, d1);
                   }
                   xC${y+1} = vec4(xTexelC${y+1}.xy, final.xy);
                 `)):(d+=`
                 if(xC >= 0 && xC < inDims[1] && xTexelC${y}Ready == 0) {
                   xTexelC${y} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${y}.zw = vec2(0.0);
                   }
                   xTexelC${y}Ready = 1;
                 }

                 xCOffset = xC + strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                   xTexelC${y+1} = getX(batch, xR, xCOffset, d1);
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${y+1}.zw = vec2(0.);
                   }
                   xTexelC${y+1}Ready = 1;
                 }

                 xC${y} = vec4(
                   xTexelC${y}.xy, xTexelC${y+1}.xy);
               `,y+1<c&&(d+=`
                   xC${y+1} = vec4(xTexelC${y}.zw, xTexelC${y+1}.zw);
                 `)));y<c&&(d+=`
             wTexel = getW(r, ${y}, d1, d2);
             dotProd += xC${y}.xxzz * vec4(wTexel.xy, wTexel.xy);
             if(d1 + 1 < ${t.inChannels}) {
               dotProd += xC${y}.yyww * vec4(wTexel.zw, wTexel.zw);
             }
           `,y+1<c&&(d+=`
               wTexel = getW(r, ${y+1}, d1, d2);
               dotProd += xC${y+1}.xxzz * vec4(wTexel.xy, wTexel.xy);
               if(d1 + 1 < ${t.inChannels}) {
                 dotProd += xC${y+1}.yyww * vec4(wTexel.zw, wTexel.zw);
               }
             `))}d+=`
     }
   `,d+=`
     }
   `,d+=`
     }
   `;let m="",f="";o&&(n?m=`vec4 activation(vec4 a) {
           vec4 b = getPreluActivationWeightsAtOutCoords();
           ${o}
         }`:i?m=`vec4 activation(vec4 a) {
           vec4 b = getLeakyreluAlphaAtOutCoords();
           ${o}
         }`:m=`vec4 activation(vec4 x) {
           ${o}
         }`,f="result = activation(result);");let g=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),n&&this.variableNames.push("preluActivationWeights"),i&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
       ${m}

       void main() {
         ivec4 coords = getOutputCoords();
         int batch = coords.x;
         ivec2 xRCCorner = coords.yz * strides - pads;
         int d2 = coords.w;
         int xRCorner = xRCCorner.x;
         int xCCorner = xRCCorner.y;

         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
         vec4 dotProd = vec4(0.000000000000001);

         ${d}

         vec4 result = dotProd - vec4(0.000000000000001);
         ${g}
         ${f}
         setOutput(result);
       }
     `}};var mx=class{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=t,this.enableShapeUniforms=at(this.outputShape.length);let{dataFormat:o}=e,n=wt(),i=o==="channelsLast",s=i?1:2,a=i?2:3,l=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${t[2]} && pos < ${t[1]}) {`,u="";for(let c=0;c<=1;c++)for(let p=0;p<=1;p++)u+=`
          blockIndex = rc.z + ${p};
          pos = rc.y + ${c};

          ${l}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${s}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${a}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${i}) {
                  innerDims = vec2(d1, ch);
                  result[${c*2+p}] = getChannel(
                    getA(rc.x, d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${c*2+p}] = getChannel(
                    getA(rc.x, ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${u}

        ${n.output} = result;
      }
    `}};function fx(r,t){let e=r.length;return e>=3?t?[...r.slice(0,-3),r[e-3]*r[e-2],r[e-1]]:[...r.slice(0,-3),r[e-3],r[e-2]*r[e-1]]:!t&&e===1&&r[0]>1?[r[0],1]:null}function hx({x:r,filter:t,convInfo:e,backend:o,bias:n=null,preluActivationWeights:i=null,leakyreluAlpha:s=0,activation:a=null}){let l=r.shape,u=o.texData.get(r.dataId),c=e.inChannels,p=l[0]*l[1]*l[2],d=e.outChannels,m=e.dataFormat==="channelsLast",f=!1,g=!1,x,y=[];if(i!=null){let N=fx(i.shape,m);N!=null&&(i=le({inputs:{x:i},backend:o,attrs:{shape:N}}),y.push(i))}if(n!=null){let N=fx(n.shape,m);N!=null&&(n=le({inputs:{x:n},backend:o,attrs:{shape:N}}),y.push(n))}if(!((p===1||d===1)&&c>Mb)&&u.isPacked&&m&&u.texture!=null&&l[2]%2!==0&&S.arraysEqual(u.shape.slice(-3),l.slice(-3))){let N=l[0]*l[1]*(l[2]+1),F={dataId:r.dataId,shape:[1,N,e.inChannels],dtype:r.dtype},M=u.shape;u.shape=u.shape.slice(),u.shape[u.shape.length-2]++,S.assert(Qs(u.shape,F.shape),()=>`packed reshape ${u.shape} to ${F.shape} isn't free`);let z=le({inputs:{x:t},backend:o,attrs:{shape:[1,e.inChannels,e.outChannels]}});y.push(z);let H=ra({a:F,b:z,backend:o,transposeA:f,transposeB:g,bias:n,activation:a,preluActivationWeights:i,leakyreluAlpha:s}),K=o.texData.get(H.dataId);S.assert(K.isPacked,()=>"batchMatMul result is expected to be packed"),u.shape=M,K.shape=e.outShape,x=Dt({inputs:{x:H},backend:o}),x.shape=e.outShape,y.push(H)}else{let N=e.outHeight*e.outWidth,F=le({inputs:{x:r},backend:o,attrs:{shape:m?[e.batchSize,N,e.inChannels]:[e.batchSize,e.inChannels,N]}}),M=le({inputs:{x:t},backend:o,attrs:{shape:[1,e.inChannels,e.outChannels]}}),z=ra({a:m?F:M,b:m?M:F,transposeA:!m,transposeB:g,backend:o,bias:n,activation:a,preluActivationWeights:i,leakyreluAlpha:s});x=le({inputs:{x:z},backend:o,attrs:{shape:e.outShape}}),y.push(F),y.push(M),y.push(z)}for(let N of y)o.disposeIntermediateTensorInfo(N);return x}function gx({x:r,filter:t,convInfo:e,backend:o,bias:n=null,preluActivationWeights:i=null,leakyreluAlpha:s=0,activation:a=null}){let{filterWidth:l,filterHeight:u,inChannels:c,outWidth:p,outHeight:d,dataFormat:m}=e,f=m==="channelsLast",g=l*u*c,x=d*p,y=[e.batchSize,g,x],v=!0,k=!1,N=[];if(i!=null){let je=fx(i.shape,f);je!=null&&(i=le({inputs:{x:i},backend:o,attrs:{shape:je}}),N.push(i))}if(n!=null){let je=fx(n.shape,f);je!=null&&(n=le({inputs:{x:n},backend:o,attrs:{shape:je}}),N.push(n))}let F=le({inputs:{x:t},backend:o,attrs:{shape:[1,g,S.sizeFromShape(t.shape)/g]}});N.push(F);let M=new mx(y,e),z=[r.shape,[e.padInfo.top,e.padInfo.left],[e.strideHeight,e.strideWidth],[e.dilationHeight,e.dilationWidth],[e.inChannels],[e.filterWidth*e.inChannels],[e.outWidth]],H=o.runWebGLProgram(M,[r],"float32",z),K=le({inputs:{x:H},backend:o,attrs:{shape:y}});N.push(H),N.push(K);let j=n!=null,J=i!=null,ue=a==="leakyrelu",ce=a?Mn(a,!0):null,xe=new Rc(f?K.shape:F.shape,f?F.shape:K.shape,f?[e.batchSize,x,e.outChannels]:[e.batchSize,e.outChannels,x],v,k,j,ce,J,ue),be=f?[K,F]:[F,K];if(n&&be.push(n),J&&be.push(i),ue){let je=o.makeTensorInfo([],"float32",S.createScalarValue(s,"float32"));be.push(je),N.push(je)}let Ie=o.runWebGLProgram(xe,be,"float32"),qe=le({inputs:{x:Ie},backend:o,attrs:{shape:e.outShape}});N.push(Ie);for(let je of N)o.disposeIntermediateTensorInfo(je);return qe}function xQ(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,filter:i}=t,{strides:s,pad:a,dataFormat:l,dilations:u,dimRoundingMode:c}=o,p=R.convertConv2DDataFormat(l),d=R.computeConv2DInfo(n.shape,i.shape,s,u,a,c,!1,p),m;if(d.filterHeight===1&&d.filterWidth===1&&d.dilationHeight===1&&d.dilationWidth===1&&d.strideHeight===1&&d.strideWidth===1&&(d.padInfo.type==="SAME"||d.padInfo.type==="VALID"))m=hx({x:n,filter:i,convInfo:d,backend:e});else if(d.strideWidth<=2&&p==="channelsLast"&&G().getBool("WEBGL_EXP_CONV")){let g=new Dc(d),x=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];m=e.runWebGLProgram(g,[n,i],"float32",x)}else if(G().getBool("WEBGL_CONV_IM2COL"))m=gx({x:n,filter:i,convInfo:d,backend:e});else{let g=new Pc(d);m=e.runWebGLProgram(g,[n,i],"float32")}let f=le({inputs:{x:m},backend:e,attrs:{shape:d.outShape}});return e.disposeIntermediateTensorInfo(m),f}var LD={kernelName:Ja,backendName:"webgl",kernelFunc:xQ};var xx=class{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;let e=t.strideHeight,o=t.strideWidth,n=t.padInfo.top,i=t.padInfo.left,s=t.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${t.batchSize}; b++) {
          for (int yR = 0; yR < ${t.outHeight}; yR++) {
            int xR = wR + yR * ${e} - ${n};

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${t.outWidth}; yC++) {
              int xC = wC + yC * ${o} - ${i};

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              ${s?`float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);`:`float dyValue = getDy(b, d2, yR, yC);
              float xValue = getX(b, d1, xR, xC);
              dotProd += (xValue * dyValue);`}
            }
          }
        }
        setOutput(dotProd);
      }
    `}},yx=class{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;let e=t.filterHeight,o=t.filterWidth,n=t.strideHeight,i=t.strideWidth,s=t.dataFormat==="channelsLast",a=e-1-t.padInfo.top,l=o-1-t.padInfo.left,u=s?1:2,c=s?2:3,p=s?3:1;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${l});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${p}];

        ivec2 dyCorner = ivec2(coords[${u}], coords[${c}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${e}; wR++) {
          float dyR = float(dyRCorner + wR) / ${n}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${e} - 1 - wR;

          for (int wC = 0; wC < ${o}; wC++) {
            float dyC = float(dyCCorner + wC) / ${i}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${o} - 1 - wC;

            for (int d2 = 0; d2 < ${t.outChannels}; d2++) {

              if (${s}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}},bx=class{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;let e=t.strideDepth,o=t.strideHeight,n=t.strideWidth,i=t.padInfo.front,s=t.padInfo.top,a=t.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${t.batchSize}; b++) {
          for (int yF = 0; yF < ${t.outDepth}; yF++) {
            int xF = wF + yF * ${e} - ${i};

            if (xF < 0 || xF >= ${t.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${t.outHeight}; yR++) {
              int xR = wR + yR * ${o} - ${s};

              if (xR < 0 || xR >= ${t.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${t.outWidth}; yC++) {
                int xC = wC + yC * ${n} - ${a};

                if (xC < 0 || xC >= ${t.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}},vx=class{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;let e=t.filterDepth,o=t.filterHeight,n=t.filterWidth,i=t.strideDepth,s=t.strideHeight,a=t.strideWidth,l=e-1-t.padInfo.front,u=o-1-t.padInfo.top,c=n-1-t.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${l}, ${u}, ${c});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${e}; wF++) {
          float dyF = float(dyFCorner + wF) / ${i}.0;

          if (dyF < 0.0 || dyF >= ${t.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${e} - 1 - wF;

          for (int wR = 0; wR < ${o}; wR++) {
            float dyR = float(dyRCorner + wR) / ${s}.0;

            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${o} - 1 - wR;

            for (int wC = 0; wC < ${n}; wC++) {
              float dyC = float(dyCCorner + wC) / ${a}.0;

              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${n} - 1 - wC;

              for (int d2 = 0; d2 < ${t.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function yQ(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,dy:i}=t,{strides:s,pad:a,dataFormat:l,dimRoundingMode:u,filterShape:c}=o,p=R.convertConv2DDataFormat(l),d=R.computeConv2DInfo(n.shape,c,s,1,a,u,!1,p),m=new xx(d);return e.runWebGLProgram(m,[n,i],"float32")}var MD={kernelName:el,backendName:"webgl",kernelFunc:yQ};var Sx=class{constructor(t){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=t.inShape,this.enableShapeUniforms=at(this.outputShape.length);let e=t.filterHeight,o=t.filterWidth,n=e-1-t.padInfo.top,i=o-1-t.padInfo.left;this.userCode=`
      const ivec2 pads = ivec2(${n}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];

        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        vec4 result = vec4(0.);
        for (int wR = 0; wR < ${e}; wR++) {
          float dyR = float(dyRCorner + wR) / strides[0];
          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);
          int wRPerm = ${e} - 1 - wR;

          for (int wC = 0; wC < ${o}; wC++) {
            int wCPerm = ${o} - 1 - wC;

            float dyC = float(dyCCorner + wC) / strides[1];
            bool idyCVal = (dyC >= 0.0) && (dyC < ${t.outWidth}.0)
              && (fract(dyC) == 0.0);
            int idyC = int(dyC);

            float dyC2 = float(dyCCorner + wC + 1) / strides[1];
            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${t.outWidth}.0)
              && (fract(dyC2) == 0.0);
            int idyC2 = int(dyC2);

            if (idyCVal && idyCVal2) {
              for (int d2 = 0; d2 < ${t.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?
                  dySample : getDy(batch, idyR, idyC2, d2);

                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));

                dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample2.xy : dySample2.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal) {
              for (int d2 = 0; d2 < ${t.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal2) {
              for (int d2 = 0; d2 < ${t.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC2, d2);
                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            }
          }
        }
        setOutput(result);
      }
    `}};function bQ(r){let{inputs:t,backend:e,attrs:o}=r,{dy:n,filter:i}=t,{inputShape:s,strides:a,pad:l,dataFormat:u,dimRoundingMode:c}=o,p=R.convertConv2DDataFormat(u),d=R.computeConv2DInfo(s,i.shape,a,1,l,c,!1,p);if(G().getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&p==="channelsLast"){let m=[[d.strideHeight,d.strideWidth]],f=new Sx(d);return e.runWebGLProgram(f,[n,i],"float32",m)}else{let m=new yx(d);return e.runWebGLProgram(m,[n,i],"float32")}}var BD={kernelName:tl,backendName:"webgl",kernelFunc:bQ};function vQ(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,filter:i}=t,{strides:s,pad:a,dilations:l}=o,u=R.computeConv3DInfo(n.shape,i.shape,s,l,a),c=new dx(u);return e.runWebGLProgram(c,[n,i],"float32")}var VD={kernelName:rl,backendName:"webgl",kernelFunc:vQ};function SQ(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,dy:i}=t,{strides:s,pad:a,filterShape:l}=o,u=R.computeConv3DInfo(n.shape,l,s,1,a),c=new bx(u);return e.runWebGLProgram(c,[n,i],"float32")}var WD={kernelName:zd,backendName:"webgl",kernelFunc:SQ};function wQ(r){let{inputs:t,backend:e,attrs:o}=r,{dy:n,filter:i}=t,{pad:s,strides:a,inputShape:l}=o,u=R.computeConv3DInfo(l,i.shape,a,1,s),c=new vx(u);return e.runWebGLProgram(c,[n,i],"float32")}var zD={kernelName:ol,backendName:"webgl",kernelFunc:wQ};var CQ=To+`
  return cos(x);
`,_Q=`
  vec4 result = cos(x);
  bvec4 isNaN = isnan(x);
  ${oo}
  return result;
`,kQ=Ce({opSnippet:CQ,packedOpSnippet:_Q}),UD={kernelName:nl,backendName:"webgl",kernelFunc:kQ};var IQ=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,TQ=Ce({opSnippet:IQ}),GD={kernelName:il,backendName:"webgl",kernelFunc:TQ};var wx=class{constructor(t,e,o,n,i){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];let[s,a,l,u]=t,[c]=e,[p,d]=o;this.outputShape=[c,p,d,u];let m=n==="bilinear"?1:0,[f,g]=[`${a-1}.0`,`${l-1}.0`],[x,y,v]=p>1?[`${(a-1)/(p-1)}`,"(y2-y1) * height_ratio",`y1*${f} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${f}`],[k,N,F]=d>1?[`${(l-1)/(d-1)}`,"(x2-x1) * width_ratio",`x1*${g} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${g}`];this.userCode=`
      const float height_ratio = float(${x});
      const float width_ratio = float(${k});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${s}) {
          return;
        }

        float height_scale = ${y};
        float width_scale = ${N};

        float in_y = ${v};
        if( in_y < 0.0 || in_y > ${f} ) {
          setOutput(float(${i}));
          return;
        }
        float in_x = ${F};
        if( in_x < 0.0 || in_x > ${g} ) {
          setOutput(float(${i}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${m} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}};var EQ=r=>{let{inputs:t,backend:e,attrs:o}=r,{image:n,boxes:i,boxInd:s}=t,{cropSize:a,method:l,extrapolationValue:u}=o,c=new wx(n.shape,i.shape,a,l,u);return e.runWebGLProgram(c,[n,i,s],"float32")},HD={kernelName:ll,backendName:"webgl",kernelFunc:EQ};var Ac=function(r){return r.Prod="*",r.Sum="+",r}(Ac||{}),Zp=class{constructor(t,e,o,n){this.op=t,this.outputShape=e,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];let i=this.outputShape.length,s=this.op===Ac.Prod?"1.0":"0.0",a=o?s:`getX(${KD(i,"coords",this.op)})`,l=this.outputShape[this.outputShape.length-1],u="",c="";o?(u=n?`end != ${l-1}`:"end != 0",c=n?"end + 1":"end - 1"):(u=n?`end + pow2 < ${l}`:"end >= pow2",c=n?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${Le(i)} coords = getOutputCoords();
        int end = ${qD(i,"coords",this.op)};
        float val = ${a};
        int pow2 = int(pow(2.0, index));
        if (${u}) {
          int idx = ${c};
          ${qD(i,"coords",this.op)} = idx;
          val ${this.op}= getX(${KD(i,"coords",this.op)});
        }
        setOutput(val);
      }
    `}};function KD(r,t,e){if(r===1)return`${t}`;if(r===2)return`${t}.x, ${t}.y`;if(r===3)return`${t}.x, ${t}.y, ${t}.z`;if(r===4)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw new Error(`Cumulative ${e} for rank ${r} is not yet supported`)}function qD(r,t,e){if(r===1)return`${t}`;if(r===2)return`${t}.y`;if(r===3)return`${t}.z`;if(r===4)return`${t}.w`;throw new Error(`Cumulative ${e} for rank ${r} is not yet supported`)}function Cx(r,t,e,o,n,i){let s=t.shape.length,a=R.getAxesPermutation([o],s),l=t;a!=null&&(l=yt({inputs:{x:t},backend:e,attrs:{perm:a}}));let u=R.getInnerMostAxes(1,s)[0];if(u!==s-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${o}`);let c=l.shape[u],p=Dt({inputs:{x:l},backend:e});for(let d=0;d<=Math.ceil(Math.log2(c))-1;d++){let m=new Zp(r,l.shape,!1,i),f=[[d]],g=p;p=e.runWebGLProgram(m,[p],p.dtype,f),e.disposeIntermediateTensorInfo(g)}if(n){let d=new Zp(r,l.shape,n,i),m=p;p=e.runWebGLProgram(d,[p],p.dtype),e.disposeIntermediateTensorInfo(m)}if(a!=null){let d=R.getUndoAxesPermutation(a),m=yt({inputs:{x:p},backend:e,attrs:{perm:d}});return e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(l),m}return p}function NQ(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{axis:i,exclusive:s,reverse:a}=o;return Cx(Ac.Prod,n,e,i,s,a)}var jD={kernelName:sl,backendName:"webgl",kernelFunc:NQ};function RQ(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{axis:i,exclusive:s,reverse:a}=o;return Cx(Ac.Sum,n,e,i,s,a)}var XD={kernelName:al,backendName:"webgl",kernelFunc:RQ};function $Q(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,weights:i}=t,{size:s,binaryOutput:a}=o;if(n.shape.length===1){let l=e.readSync(n.dataId),u=e.readSync(i.dataId),c=Mg(l,u,i.dtype,i.shape,s);return e.makeTensorInfo([s],i.dtype,c)}else if(n.shape.length===2){let l=e.bufferSync(n),u=e.bufferSync(i),c=D$(l,u,s,a);return e.makeTensorInfo(c.shape,i.dtype,c.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${n.shape.length}.`)}var YD={kernelName:ul,backendName:"webgl",kernelFunc:$Q};var _x=class{constructor(t,e,o){this.variableNames=["x"],this.outputShape=[],this.outputShape=t,this.blockSize=e,this.dataFormat=o,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${e};
      int offset_h = imod(h, ${e});
      int in_w = w / ${e};
      int offset_w = imod(w, ${e});
      int offset_d = (offset_h * ${e} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};function PQ(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{blockSize:i,dataFormat:s}=o,a=n.shape[0],l=s==="NHWC"?n.shape[1]:n.shape[2],u=s==="NHWC"?n.shape[2]:n.shape[3],c=s==="NHWC"?n.shape[3]:n.shape[1],p=l*i,d=u*i,m=c/(i*i),f=s==="NHWC"?[a,p,d,m]:[a,m,p,d],g=new _x(f,i,s);return e.runWebGLProgram(g,[n],n.dtype)}var QD={kernelName:cl,backendName:"webgl",kernelFunc:PQ};var Fc=class{constructor(t,e=!1,o=null,n=!1,i=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=at(this.outputShape.length);let s=t.filterHeight,a=t.filterWidth,l=t.outChannels/t.inChannels,u="",c="";o&&(n?u=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${o}
        }`:i?u=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${o}
        }`:u=`
          float activation(float x) {
            ${o}
          }
        `,c="result = activation(result);");let p=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),n&&this.variableNames.push("preluActivationWeights"),i&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${u}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${l};
        int q = d2 - d1 * ${l};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${s}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${a}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${p}
        ${c}
        setOutput(result);
      }
    `}};var Oc=class{constructor(t,e=!1,o=null,n=!1,i=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=at(this.outputShape.length);let s=t.outChannels/t.inChannels,a=t.padInfo.left,l=t.strideWidth,u=t.dilationWidth,c=t.filterHeight,p=t.filterWidth,d=p,m=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let y=0;y<p;y++)m+=`
          vec4 xTexelC${y*2};
          int xTexelC${y*2}Ready;
          vec4 xTexelC${y*2+1};
          int xTexelC${y*2+1}Ready;
          vec4 xC${y};`;m+=`
    for (int r = 0; r < ${c}; r++) {
      `;for(let y=0;y<p;y++)m+=`
          xTexelC${y*2} = vec4(0.0);
          xTexelC${y*2}Ready = 0;
          xTexelC${y*2+1} = vec4(0.0);
          xTexelC${y*2+1}Ready = 0;
          xC${y} = vec4(0.0);`;m+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let y=0;y<(d+1)/2;y++){let v=y*2;if(m+=`
          xC = xCCorner + ${v*u};
          `,l===1){if(v<p&&(a%2===1?(m+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${v}Ready == 0) {
                  xTexelC${v} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${v}.zw = vec2(0.0);
                  }
                  xTexelC${v}Ready = 1;
                }
              `,u===1&&v>0?m+=`
                xC${v} = vec4(xTexelC${v-2}.zw, xTexelC${v}.xy);
                `:m+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${v} = vec4(previous.zw, xTexelC${v}.xy);
                  } else {
                    xC${v} = vec4(0.0, 0.0, xTexelC${v}.xy);
                  }
                  `):m+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${v}Ready == 0) {
                  xTexelC${v} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${v}.zw = vec2(0.0);
                  }
                  xTexelC${v}Ready = 1;
                }

                xC${v} = xTexelC${v};
                `,v+1<p)){let k=a%2===0?S.nearestLargerEven(u):u;u%2===0&&a%2===1||u%2!==0&&a%2!==1?(m+=`
                  xCOffset = xC + imod(pads[1], 2) + ${k};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${v+1}Ready == 0) {
                    xTexelC${v+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${v+1}.zw = vec2(0.0);
                    }
                    xTexelC${v+1}Ready = 1;
                  }
                  `,u>1?m+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);
                     xC${v+1} = vec4(previous.zw, xTexelC${v+1}.xy);
                    } else {
                     xC${v+1} = vec4(0.0, 0.0, xTexelC${v+1}.xy);
                    }
                    `:m+=`
                    xC${v+1} = vec4(xTexelC${v}.zw, xTexelC${v+1}.xy);
                    `):k===1?m+=`
                    xC${v+1} = xTexelC${v};
                    `:m+=`
                    xCOffset = xC + ${k};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${v+1}Ready == 0) {
                      xTexelC${v+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${v+1}.zw = vec2(0.0);
                      }
                      xTexelC${v+1}Ready = 1;
                    }

                    xC${v+1} = xTexelC${v+1};
                    `}}else v<p&&(a%2===1?(m+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${v}Ready == 0) {
                  xTexelC${v} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${v}.zw = vec2(0.0);
                  }
                  xTexelC${v}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${v+1}Ready == 0) {
                  xTexelC${v+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${v+1}.zw = vec2(0.0);
                  }
                  xTexelC${v+1}Ready = 1;
                }

                xC${v} = vec4(xTexelC${v}.zw, xTexelC${v+1}.zw);
              `,v+1<p&&(m+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${v+1} = vec4(xTexelC${v+1}.xy, final.xy);
                `)):(m+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${v}Ready == 0) {
                  xTexelC${v} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${v}.zw = vec2(0.0);
                  }
                  xTexelC${v}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${v+1}Ready == 0) {
                  xTexelC${v+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${v+1}.zw = vec2(0.);
                  }
                  xTexelC${v+1}Ready = 1;
                }

                xC${v} = vec4(
                  xTexelC${v}.xy, xTexelC${v+1}.xy);
              `,v+1<p&&(m+=`
                  xC${v+1} = vec4(xTexelC${v}.zw, xTexelC${v+1}.zw);
                `)));v<p&&(m+=`
            wTexel = getW(r, ${v}, d1, q);
            dotProd += xC${v} * vec4(wTexel.xz, wTexel.xz);
          `,v+1<p&&(m+=`
              wTexel = getW(r, ${v+1}, d1, q);
              dotProd += xC${v+1} * vec4(wTexel.xz, wTexel.xz);
            `))}m+=`
    }
  `,m+=`
      }
    `;let f="",g="";o&&(n?f=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${o}
        }`:i?f=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${o}
        }`:f=`vec4 activation(vec4 x) {
          ${o}
        }`,g="result = activation(result);");let x=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),n&&this.variableNames.push("preluActivationWeights"),i&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${f}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${s};
        int q = d2 - d1 * ${s};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${m}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${x}
        ${g}
        setOutput(result);
      }
    `}};function DQ(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,filter:i}=t,{strides:s,pad:a,dilations:l,dimRoundingMode:u}=o,c=l;c==null&&(c=[1,1]),S.assert(R.eitherStridesOrDilationsAreOne(s,c),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${s} and dilations '${c}'`);let p=R.computeConv2DInfo(n.shape,i.shape,s,c,a,u,!0),d;G().getBool("WEBGL_PACK_DEPTHWISECONV")&&p.strideWidth<=2&&p.outChannels/p.inChannels===1?d=new Oc(p):d=new Fc(p);let m=[[p.padInfo.top,p.padInfo.left],[p.strideHeight,p.strideWidth],[p.dilationHeight,p.dilationWidth],[p.inHeight,p.inWidth]];return e.runWebGLProgram(d,[n,i],"float32",m)}var ZD={kernelName:pl,backendName:"webgl",kernelFunc:DQ};var kx=class{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;let e=t.strideHeight,o=t.strideWidth,n=t.padInfo.top,i=t.padInfo.left,s=t.outChannels/t.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${s} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${t.batchSize}; b++) {
          for (int yR = 0; yR < ${t.outHeight}; yR++) {
            int xR = wR + yR * ${e} - ${n};

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${t.outWidth}; yC++) {
              int xC = wC + yC * ${o} - ${i};

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}},Ix=class{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;let e=t.filterHeight,o=t.filterWidth,n=t.strideHeight,i=t.strideWidth,s=e-1-t.padInfo.top,a=o-1-t.padInfo.left,l=t.outChannels/t.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${s}, ${a});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${e}; wR++) {
          float dyR = float(dyRCorner + wR) / ${n}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${e} - 1 - wR;

          for (int wC = 0; wC < ${o}; wC++) {
            float dyC = float(dyCCorner + wC) / ${i}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${o} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${l}; dm++) {
              int d2 = d1 * ${l} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function AQ(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,dy:i}=t,{strides:s,dilations:a,pad:l,dimRoundingMode:u,filterShape:c}=o,p=R.computeConv2DInfo(n.shape,c,s,a,l,u,!0),d=new kx(p);return e.runWebGLProgram(d,[n,i],"float32")}var JD={kernelName:dl,backendName:"webgl",kernelFunc:AQ};function FQ(r){let{inputs:t,backend:e,attrs:o}=r,{dy:n,filter:i}=t,{strides:s,dilations:a,pad:l,dimRoundingMode:u,inputShape:c}=o,p=R.computeConv2DInfo(c,i.shape,s,a,l,u,!0),d=new Ix(p);return e.runWebGLProgram(d,[n,i],"float32")}var eA={kernelName:ml,backendName:"webgl",kernelFunc:FQ};var Tx=class{constructor(t){this.variableNames=["X"],this.outputShape=[t,t],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}};function OQ(r){let{inputs:t,backend:e}=r,{x:o}=t,n=[...o.shape,...o.shape],i=S.sizeFromShape(o.shape),s=le({inputs:{x:o},backend:e,attrs:{shape:[i]}}),a=new Tx(i),l=e.runWebGLProgram(a,[s],s.dtype),u=le({inputs:{x:l},backend:e,attrs:{shape:n}});return e.disposeIntermediateTensorInfo(s),e.disposeIntermediateTensorInfo(l),u}var tA={kernelName:fl,backendName:"webgl",kernelFunc:OQ};var Ex=class{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;let{inHeight:e,inWidth:o,padInfo:n,strideHeight:i,strideWidth:s,filterHeight:a,filterWidth:l,dilationHeight:u,dilationWidth:c}=t,{top:p,left:d}=n;this.userCode=`
      const ivec2 strides = ivec2(${i}, ${s});
      const ivec2 pads = ivec2(${p}, ${d});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${a}; h++) {
          int hIn = hBeg + h * ${u};

          if (hIn >= 0 && hIn < ${e}) {
            for (int w = 0; w < ${l}; w++) {
              int wIn = wBeg + w * ${c};

              if (wIn >= 0 && wIn < ${o}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}};function LQ(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,filter:i}=t,{strides:s,pad:a,dilations:l}=o,u=R.computeDilation2DInfo(n.shape,i.shape,s,a,"NHWC",l),c,p=new Ex(u);c=e.runWebGLProgram(p,[n,i],"float32");let d=le({inputs:{x:c},backend:e,attrs:{shape:u.outShape}});return e.disposeIntermediateTensorInfo(c),d}var rA={kernelName:hl,backendName:"webgl",kernelFunc:LQ};function MQ(r){let{inputs:t,backend:e,attrs:o}=r,{equation:n}=o,i=t,{allDims:s,summedDims:a,idDims:l}=R.decodeEinsumEquation(n,i.length);R.checkEinsumDimSizes(s.length,l,i);let{path:u,steps:c}=R.getEinsumComputePath(a,l),p=c.length,d=null,m=s.length,f=[];for(let g=0;g<p;++g){for(let x of c[g]){let{permutationIndices:y,expandDims:v}=R.getEinsumPermutation(m,l[x]),k;R.isIdentityPermutation(y)?k=i[x]:(k=yt({inputs:{x:i[x]},backend:e,attrs:{perm:y}}),f.push(k));let N=k.shape.slice();for(let F=0;F<v.length;++F)N.splice(v[F],0,1);S.arraysEqual(k.shape,N)||(k=le({inputs:{x:k},backend:e,attrs:{shape:N}}),f.push(k)),d===null?d=k:(d=Yp({inputs:{a:k,b:d},backend:e}),f.push(d))}g<p-1&&(u[g]>=0&&(d=ta({inputs:{x:d},backend:e,attrs:{axis:u[g]-(s.length-m),keepDims:!1}}),f.push(d)),m--)}for(let g of f)g!==d&&e.disposeIntermediateTensorInfo(g);return d}var oA={kernelName:xl,backendName:"webgl",kernelFunc:MQ};var BQ="return (x >= 0.0) ? x : (exp(x) - 1.0);",VQ=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,WQ=Ce({opSnippet:BQ,packedOpSnippet:VQ}),nA={kernelName:yl,backendName:"webgl",kernelFunc:WQ};var zQ="return (b >= 0.0) ? a : a * (b + 1.0);",UQ=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,GQ=r=>{let{inputs:t,backend:e}=r,{dy:o,y:n}=t,i=G().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new ro(UQ,o.shape,n.shape):new Lr(zQ,o.shape,n.shape);return e.runWebGLProgram(i,[o,n],o.dtype)},iA={kernelName:Ud,backendName:"webgl",kernelFunc:GQ};var HQ=`
  return vec4(equal(a, b));
`,KQ="return float(a == b);",qQ=nt({opSnippet:KQ,packedOpSnippet:HQ,dtype:"bool",cpuKernelImpl:M$}),sA={kernelName:Jn,backendName:"webgl",kernelFunc:qQ};var jQ=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${R.ERF_P};
  float a1 = ${R.ERF_A1};
  float a2 = ${R.ERF_A2};
  float a3 = ${R.ERF_A3};
  float a4 = ${R.ERF_A4};
  float a5 = ${R.ERF_A5};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,XQ=Ce({opSnippet:jQ}),aA={kernelName:bl,backendName:"webgl",kernelFunc:XQ};var YQ=To+`
  return exp(x);
`,QQ=`
  vec4 result = exp(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Ub=Ce({opSnippet:YQ,packedOpSnippet:QQ,cpuKernelImpl:B$,dtype:"float32"}),lA={kernelName:ei,backendName:"webgl",kernelFunc:Ub};function Nx(r){let{inputs:t,attrs:e,backend:o}=r,{dim:n}=e,{input:i}=t,s=i.shape.length,a=i.shape.slice(),l=n;return n<0&&(S.assert(-(s+1)<=n,()=>`Axis must be in the interval [${-(s+1)}, ${s}]`),l=s+n+1),a.splice(l,0,1),le({inputs:{x:i},backend:o,attrs:{shape:a}})}var uA={kernelName:vl,backendName:"webgl",kernelFunc:Nx};var cA="return exp(x) - 1.0;",ZQ=Ce({opSnippet:cA,packedOpSnippet:cA,cpuKernelImpl:V$}),pA={kernelName:ti,backendName:"webgl",kernelFunc:ZQ};var Jp=class{constructor(t,e,o){this.variableNames=["real","imag"];let n=e[1];this.outputShape=e;let i=o?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,s=o?`${n}.0`:"1.0",a;if(t==="real")a="return real * expR - imag * expI;";else if(t==="imag")a="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${t}.`);this.userCode=`
      const float exponentMultiplier = ${i};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${a}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${n});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${n}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${s};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}};function Rx(r,t,e){let o=e.texData.get(r.dataId),n=S.sizeFromShape(r.shape),i=r.shape[r.shape.length-1],s=n/i,a=le({inputs:{x:r},backend:e,attrs:{shape:[s,i]}}),l=a.shape,u=new Jp("real",l,t),c=new Jp("imag",l,t),p=[{dataId:o.complexTensorInfos.real.dataId,dtype:o.complexTensorInfos.real.dtype,shape:l},{dataId:o.complexTensorInfos.imag.dataId,dtype:o.complexTensorInfos.imag.dtype,shape:l}],d=e.runWebGLProgram(u,p,"float32"),m=e.runWebGLProgram(c,p,"float32"),f=Mr({inputs:{real:d,imag:m},backend:e});e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(m);let g=le({inputs:{x:f},backend:e,attrs:{shape:r.shape}});return e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(f),g}function JQ(r){let{inputs:t,backend:e}=r,{input:o}=t;return Rx(o,!1,e)}var dA={kernelName:Sl,backendName:"webgl",kernelFunc:JQ};var $x=class{constructor(t,e){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=t,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}};function Vn(r){let{backend:t,attrs:e}=r,{shape:o,value:n}=e,{dtype:i}=e;if(i=i||S.inferDtype(n),i==="string"){let s=S.getArrayFromDType(i,S.sizeFromShape(o));return s.fill(n),t.makeTensorInfo(o,i,s)}else{let s=new $x(o,n),a=[[n]];return t.runWebGLProgram(s,[],i,a)}}var mA={kernelName:wl,backendName:"webgl",kernelFunc:Vn};var Px=class{constructor(t){this.variableNames=["Image"],this.outputShape=[];let e=t[2];this.outputShape=t,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${e} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${e}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}};var fA={kernelName:Cl,backendName:"webgl",kernelFunc:({inputs:r,backend:t})=>{let{image:e}=r,o=t,n=new Px(e.shape);return o.runWebGLProgram(n,[e],e.dtype)}};var hA="return floor(x);",eZ=Ce({opSnippet:hA,packedOpSnippet:hA,cpuKernelImpl:W$}),gA={kernelName:ri,backendName:"webgl",kernelFunc:eZ};var tZ=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,rZ=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,oZ=nt({opSnippet:tZ,packedOpSnippet:rZ,dtype:"int32"}),xA={kernelName:oi,backendName:"webgl",kernelFunc:oZ};var Dx=class{constructor(t){this.variableNames=["A"];let e=wt(),[o,n]=t;this.outputShape=t,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${n}.0, ${o}.0);

        vec4 values = ${e.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}};var Ax=class{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;let e=wt(),[o,n]=t;this.outputShape=t,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${n}.0, ${o}.0);
            vec4 values = ${e.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${e.output} = result;
      }
    `}};var yA={kernelName:ms,backendName:"webgl",kernelFunc:nZ},Lc,Gb=G().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");function nZ(r){let{inputs:t,backend:e,attrs:o}=r,{pixels:n}=t,{numChannels:i}=o,s=typeof HTMLVideoElement<"u"&&n instanceof HTMLVideoElement,a=typeof HTMLImageElement<"u"&&n instanceof HTMLImageElement,[l,u]=s?[n.videoWidth,n.videoHeight]:[n.width,n.height],c=[u,l],p=[u,l,i];if(a||s){let g=G().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(Lc==null||g!==Gb)&&(Gb=g,Lc=document.createElement("canvas").getContext("2d",{willReadFrequently:Gb})),Lc.canvas.width=l,Lc.canvas.height=u,Lc.drawImage(n,0,0,l,u),n=Lc.canvas}let d=e.makeTensorInfo(c,"int32");e.texData.get(d.dataId).usage=mr.PIXELS,e.gpgpu.uploadPixelDataToTexture(e.getTexture(d.dataId),n);let m=G().getBool("WEBGL_PACK")?new Ax(p):new Dx(p),f=e.runWebGLProgram(m,[d],"int32");return e.disposeData(d.dataId),f}function iZ(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,filter:i,bias:s,preluActivationWeights:a}=t,{strides:l,pad:u,dataFormat:c,dilations:p,dimRoundingMode:d,activation:m,leakyreluAlpha:f}=o,g=R.convertConv2DDataFormat(c),x=R.computeConv2DInfo(n.shape,i.shape,l,p,u,d,!1,g),y,v=[],k=s!=null,N=a!=null,F=m==="leakyrelu",M=()=>{let H=[n,i],K=(j,J)=>{if(J==="NCHW"&&j.shape.length===1&&j.shape[0]!==1){let ue=le({inputs:{x:j},backend:e,attrs:{shape:[j.shape[0],1,1]}});return v.push(ue),ue}return j};if(k&&H.push(K(s,c)),N&&H.push(K(a,c)),F){let j=e.makeTensorInfo([],"float32",S.createScalarValue(f,"float32"));H.push(j),v.push(j)}return H};if(x.filterHeight===1&&x.filterWidth===1&&x.dilationHeight===1&&x.dilationWidth===1&&x.strideHeight===1&&x.strideWidth===1&&(x.padInfo.type==="SAME"||x.padInfo.type==="VALID"))y=hx({x:n,filter:i,convInfo:x,backend:e,bias:s,activation:m,preluActivationWeights:a,leakyreluAlpha:f});else if(x.strideWidth<=2&&g==="channelsLast"&&G().getBool("WEBGL_EXP_CONV")){let H=m?Mn(m,!0):null,K=new Dc(x,k,H,N,F),j=[[x.padInfo.top,x.padInfo.left],[x.strideHeight,x.strideWidth],[x.dilationHeight,x.dilationWidth],[x.inHeight,x.inWidth]],J=M();y=e.runWebGLProgram(K,J,"float32",j)}else if(G().getBool("WEBGL_CONV_IM2COL"))y=gx({x:n,filter:i,convInfo:x,backend:e,bias:s,activation:m,preluActivationWeights:a,leakyreluAlpha:f});else{let H=m?Mn(m,!1):null,K=new Pc(x,k,H,N,F),j=M();y=e.runWebGLProgram(K,j,"float32")}let z=le({inputs:{x:y},backend:e,attrs:{shape:x.outShape}});return v.push(y),v.forEach(H=>e.disposeIntermediateTensorInfo(H)),z}var bA={kernelName:hs,backendName:"webgl",kernelFunc:iZ};function sZ(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,filter:i,bias:s,preluActivationWeights:a}=t,{strides:l,pad:u,dilations:c,dimRoundingMode:p,activation:d,leakyreluAlpha:m}=o,f=[],g=c;g==null&&(g=[1,1]),S.assert(R.eitherStridesOrDilationsAreOne(l,g),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${g}'`);let x=R.computeConv2DInfo(n.shape,i.shape,l,g,u,p,!0),y=G().getBool("WEBGL_PACK_DEPTHWISECONV")&&x.strideWidth<=2&&x.outChannels/x.inChannels===1,v=d?Mn(d,y):null,k=[n,i],N=s!=null,F=a!=null,M=d==="leakyrelu";if(N&&k.push(s),F&&k.push(a),M){let j=e.makeTensorInfo([],"float32",S.createScalarValue(m,"float32"));k.push(j),f.push(j)}let z;y?z=new Oc(x,N,v,F,M):z=new Fc(x,N,v,F,M);let H=[[x.padInfo.top,x.padInfo.left],[x.strideHeight,x.strideWidth],[x.dilationHeight,x.dilationWidth],[x.inHeight,x.inWidth]],K=e.runWebGLProgram(z,k,"float32",H);return f.forEach(j=>e.disposeIntermediateTensorInfo(j)),K}var vA={kernelName:gs,backendName:"webgl",kernelFunc:sZ};var Fx=class{constructor(t,e,o,n){this.sliceDim=t,this.strides=e,this.paramsShape=n,this.variableNames=["x","indices"],this.outputShape=o;let i=Le(o.length),s=`
    int index;`;for(let a=0;a<this.sliceDim;a++)s+=`
          index = round(getIndices(coords[0], ${a}));
          out_of_bounds = out_of_bounds || index < 0;
          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[a]};
          flattenIndex += index * ${this.strides[a]};`;this.userCode=`
         void main() {
          ${i} coords = getOutputCoords();
          int flattenIndex = 0;
          bool out_of_bounds = false;

          ${s}

          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));
        }
      `}};function aZ(r){let{inputs:t,backend:e}=r,{params:o,indices:n}=t,i=n.shape,s=i[i.length-1],a=S.sizeFromShape(o.shape),[l,u,c,p]=R.prepareAndValidate(o,n),d=le({inputs:{x:n},backend:e,attrs:{shape:[u,s]}}),m=le({inputs:{x:o},backend:e,attrs:{shape:[S.sizeFromShape(o.shape)/c,c]}});if(e.shouldExecuteOnCPU([o,n])||o.dtype==="string"){let y=e.readSync(n.dataId),v=e.bufferSync(o),k=z$(y,v,o.dtype,u,s,c,p,o.shape,a);return e.makeTensorInfo(l,o.dtype,k.values)}let f=new Fx(s,p,[u,c],o.shape),g=e.runWebGLProgram(f,[m,d],m.dtype),x=le({inputs:{x:g},backend:e,attrs:{shape:l}});return e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(g),x}var SA={kernelName:Il,backendName:"webgl",kernelFunc:aZ};var Ox=class{constructor(t,e){this.variableNames=["A","indices"],this.outputShape=e,this.rank=e.length;let o=Le(this.rank),n=lZ(t,2);this.userCode=`
      void main() {
        ${o} resRC = getOutputCoords();
        int index = int(getIndices(resRC.x, resRC.z));
        float inBounds = (index >= 0) && (index < ${t[2]}) ? 1.0 : 0.0;
        setOutput(inBounds * getA(${n}));
      }
    `}};function lZ(r,t){let e=["resRC.x","resRC.y","resRC.z","resRC.w"],o=[];for(let n=0;n<r.length;n++)n===2?o.push("index"):o.push(`${e[n]}`);return o.join()}function Hb(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,indices:i}=t,{axis:s,batchDims:a}=o,l=S.parseAxisParam(s,n.shape)[0];if(G().get("DEBUG")){let v=e.readSync(i.dataId),k=n.shape[l];for(let N=0;N<v.length;++N){let F=v[N];S.assert(F<=k-1&&F>=0,()=>`GatherV2: the index value ${F} is not in [0, ${k-1}]`)}}let u=R.segment_util.collectGatherOpShapeInfo(n,i,l,a),c=S.sizeFromShape(i.shape),p=[],d=le({inputs:{x:n},backend:e,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),m=le({inputs:{x:i},backend:e,attrs:{shape:[u.batchSize,c/u.batchSize]}});p.push(d),p.push(m);let f=[u.batchSize,u.outerSize,c/u.batchSize,u.sliceSize];if(e.shouldExecuteOnCPU([n,i])||n.dtype==="string"){let v=e.bufferSync(m),k=e.bufferSync(d),N=U$(k,v,f);return p.forEach(F=>e.disposeIntermediateTensorInfo(F)),e.makeTensorInfo(u.outputShape,N.dtype,N.values)}let g=new Ox(d.shape,f),x=e.runWebGLProgram(g,[d,m],d.dtype);p.push(x);let y=le({inputs:{x},backend:e,attrs:{shape:u.outputShape}});return p.forEach(v=>e.disposeIntermediateTensorInfo(v)),y}var wA={kernelName:kl,backendName:"webgl",kernelFunc:Hb};var uZ="return float(a > b);",cZ=`
  return vec4(greaterThan(a, b));
`,pZ=nt({opSnippet:uZ,packedOpSnippet:cZ,cpuKernelImpl:G$,dtype:"bool"}),CA={kernelName:ni,backendName:"webgl",kernelFunc:pZ};var dZ="return float(a >= b);",mZ=`
  return vec4(greaterThanEqual(a, b));
`,fZ=nt({opSnippet:dZ,packedOpSnippet:mZ,dtype:"bool",cpuKernelImpl:H$}),_A={kernelName:ii,backendName:"webgl",kernelFunc:fZ};function hZ(r){let{inputs:t,backend:e}=r,{input:o}=t;return Rx(o,!0,e)}var kA={kernelName:Tl,backendName:"webgl",kernelFunc:hZ};var gZ="return float(!isnan(x) && !isinf(x));",xZ=Ce({opSnippet:gZ,dtype:"bool"}),IA={kernelName:Nl,backendName:"webgl",kernelFunc:xZ};var yZ="return float(isinf(x));",bZ=Ce({opSnippet:yZ,dtype:"bool"}),TA={kernelName:Rl,backendName:"webgl",kernelFunc:bZ};var vZ="return float(isnan(x));",SZ=Ce({opSnippet:vZ,dtype:"bool"}),EA={kernelName:$l,backendName:"webgl",kernelFunc:SZ};var wZ="return float(a < b);",CZ=`
  return vec4(lessThan(a, b));
`,_Z=nt({opSnippet:wZ,packedOpSnippet:CZ,cpuKernelImpl:K$,dtype:"bool"}),NA={kernelName:si,backendName:"webgl",kernelFunc:_Z};var kZ="return float(a <= b);",IZ=`
  return vec4(lessThanEqual(a, b));
`,TZ=nt({opSnippet:kZ,packedOpSnippet:IZ,cpuKernelImpl:q$,dtype:"bool"}),RA={kernelName:ai,backendName:"webgl",kernelFunc:TZ};function EZ(r){let{backend:t,attrs:e}=r,{start:o,stop:n,num:i}=e,s=j$(o,n,i);return t.makeTensorInfo([s.length],"float32",s)}var $A={kernelName:Dl,backendName:"webgl",kernelFunc:EZ};var NZ=To+`
  return x < 0.0 ? 0./0. : log(x);
`,RZ=`
  vec4 result = log(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);
  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);
  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);
  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);
  return result;
`,$Z=Ce({opSnippet:NZ,packedOpSnippet:RZ,cpuKernelImpl:X$}),PA={kernelName:li,backendName:"webgl",kernelFunc:$Z};var PZ=To+`
  return log(1.0 + x);
`,DZ=Ce({opSnippet:PZ}),DA={kernelName:Al,backendName:"webgl",kernelFunc:DZ};var AZ="return float(a >= 1.0 && b >= 1.0);",FZ=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,OZ=nt({opSnippet:AZ,packedOpSnippet:FZ,dtype:"bool"}),AA={kernelName:Fl,backendName:"webgl",kernelFunc:OZ};var LZ="return float(!(x >= 1.0));",MZ=Ce({opSnippet:LZ}),FA={kernelName:Ol,backendName:"webgl",kernelFunc:MZ};var BZ="return float(a >= 1.0 || b >= 1.0);",VZ=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,WZ=nt({opSnippet:BZ,packedOpSnippet:VZ,dtype:"bool"}),OA={kernelName:Ll,backendName:"webgl",kernelFunc:WZ};var Lx=class{constructor(t,e,o,n,i){this.variableNames=["x"],this.outputShape=[];let s=e,a=t[3]-1;this.outputShape=t;let l,u=`float(${o}) + float(${n}) * sum`;i===.5?l=`inversesqrt(${u})`:i===1?l=`1.0/(${u})`:l=`exp(log(${u}) * float(-${i}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${s}; j <= ${s}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${a}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${l};
        setOutput(val);
      }
    `}};var Mx=class{constructor(t,e,o,n,i){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;let s=e,a=t[3]-1;this.outputShape=t;let l,u=`float(${o}) + float(${n}) * sum`;i===.5?l=`inversesqrt(${u})`:i===1?l=`1.0/(${u})`:l=`exp(log(${u}) * float(-${i}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${s};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${s}; j <= ${s}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${a}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${l};
        setOutput(result);
      }
    `}};var zZ=r=>{let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{depthRadius:i,bias:s,alpha:a,beta:l}=o,u=G().getBool("WEBGL_PACK_NORMALIZATION")?new Mx(n.shape,i,s,a,l):new Lx(n.shape,i,s,a,l);return e.runWebGLProgram(u,[n],n.dtype)},LA={kernelName:Ml,backendName:"webgl",kernelFunc:zZ};var Bx=class{constructor(t,e,o,n,i){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=t,this.depth=t[3],this.depthRadius=e,this.bias=o,this.alpha=n,this.beta=i,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${e})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${e} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${n}) * norm + float(${o});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${n})
                * float(${i})
                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${i});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}};var UZ=r=>{let{inputs:t,backend:e,attrs:o}=r,{x:n,y:i,dy:s}=t,{depthRadius:a,bias:l,alpha:u,beta:c}=o,p=new Bx(n.shape,a,l,u,c);return e.runWebGLProgram(p,[n,i,s],n.dtype)},MA={kernelName:Gd,backendName:"webgl",kernelFunc:UZ};function BA(r,t,e,o){let n=S.sizeFromShape(t),s=S.sizeFromShape(r.shape)/n,a=le({inputs:{x:r},attrs:{shape:[s,n]},backend:o}),l=no(a,r.dtype,"max",o),u=le({inputs:{x:l},attrs:{shape:e},backend:o});return o.disposeIntermediateTensorInfo(a),o.disposeIntermediateTensorInfo(l),u}function Kb(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{reductionIndices:i,keepDims:s}=o,a=n.shape.length,l=S.parseAxisParam(i,n.shape),u=l,c=R.getAxesPermutation(u,a),p=c!=null,d=e.shouldExecuteOnCPU([n]),m=n;if(p){if(d){let k=e.texData.get(m.dataId).values,N=new Array(a);for(let z=0;z<N.length;z++)N[z]=n.shape[c[z]];let F=ea(k,n.shape,n.dtype,c,N);m=e.makeTensorInfo(N,n.dtype);let M=e.texData.get(m.dataId);M.values=F}else m=Gi(n,c,e);u=R.getInnerMostAxes(u.length,a)}R.assertAxesAreInnerMostDims("max",u,a);let[f,g]=R.computeOutAndReduceShapes(m.shape,u),x=f;s&&(x=R.expandShapeToKeepDim(f,l));let y;if(d){let k=e.texData.get(m.dataId).values,N=Y$(k,S.sizeFromShape(g),x,n.dtype);y=e.makeTensorInfo(x,n.dtype);let F=e.texData.get(y.dataId);F.values=N}else y=BA(m,g,x,e);return p&&e.disposeIntermediateTensorInfo(m),y}var VA={kernelName:Bl,backendName:"webgl",kernelFunc:Kb};var GZ=Nc+`
  return max(a, b);
`,HZ=`
  vec4 result = vec4(max(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+oo+`
  return result;
`,KZ=nt({opSnippet:GZ,packedOpSnippet:HZ,cpuKernelImpl:Q$}),WA={kernelName:ui,backendName:"webgl",kernelFunc:KZ};function qZ(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t;dn(n,"maxPool");let{filterSize:i,strides:s,pad:a,dimRoundingMode:l}=o,u=1;S.assert(R.eitherStridesOrDilationsAreOne(s,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '${u}'`);let c=R.computePool2DInfo(n.shape,i,s,u,a,l);if(c.filterWidth===1&&c.filterHeight===1&&S.arraysEqual(c.inShape,c.outShape))return Dt({inputs:{x:n},backend:e});let p=new Wo(c,"max",!1);return e.runWebGLProgram(p,[n],n.dtype)}var zA={kernelName:Vl,backendName:"webgl",kernelFunc:qZ};function jZ(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{filterSize:i,strides:s,pad:a,dataFormat:l,dimRoundingMode:u}=o,c=[1,1,1],p=R.computePool3DInfo(n.shape,i,s,c,a,u,l),d=new Hi(p,"max",!1);return e.runWebGLProgram(d,[n],n.dtype)}var UA={kernelName:Wl,backendName:"webgl",kernelFunc:jZ};var Vx=class{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;let e=t.strideHeight,o=t.strideWidth,n=t.dilationHeight,i=t.effectiveFilterHeight,s=t.effectiveFilterWidth,a=i-1-t.padInfo.top,l=s-1-t.padInfo.left,u=i*s-1;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${l});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${i};
          wR += ${n}) {
          float dyR = float(dyRCorner + wR) / ${e}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${s}; wC++) {
            float dyC = float(dyCCorner + wC) / ${o}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${u} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${s} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}},Wx=class{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;let e=t.strideDepth,o=t.strideHeight,n=t.strideWidth,i=t.dilationDepth,s=t.dilationHeight,a=t.dilationWidth,l=t.effectiveFilterDepth,u=t.effectiveFilterHeight,c=t.effectiveFilterWidth,p=l-1-t.padInfo.front,d=u-1-t.padInfo.top,m=c-1-t.padInfo.left,f=l*u*c-1;this.userCode=`
      const ivec3 pads = ivec3(${p}, ${d}, ${m});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${l};
           wD += ${i}) {
          float dyD = float(dyDCorner + wD) / ${e}.0;

          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${u};
              wR += ${s}) {
            float dyR = float(dyRCorner + wR) / ${o}.0;

            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${c};
                wC += ${a}) {
              float dyC = float(dyCCorner + wC) / ${n}.0;

              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${f} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${u} * ${c} +
                  wR * ${c} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function XZ(r){let{inputs:t,backend:e,attrs:o}=r,{dy:n,input:i}=t,s=i,{filterSize:a,strides:l,pad:u,dimRoundingMode:c}=o,p=[1,1,1],d=R.computePool3DInfo(s.shape,a,l,p,u,c),m=new Hi(d,"max",!0),f=e.runWebGLProgram(m,[s],s.dtype),g=new Wx(d),x=e.runWebGLProgram(g,[n,f],s.dtype);return e.disposeIntermediateTensorInfo(f),x}var GA={kernelName:Kd,backendName:"webgl",kernelFunc:XZ};function YZ(r){let{inputs:t,backend:e,attrs:o}=r,{dy:n,input:i,output:s}=t,a=i;dn([i,s],"maxPoolGrad");let{filterSize:l,strides:u,pad:c,dimRoundingMode:p}=o,d=R.computePool2DInfo(a.shape,l,u,1,c,p),m=!0,f=new Wo(d,"max",m),g=e.runWebGLProgram(f,[a],a.dtype),x=new Vx(d),y=e.runWebGLProgram(x,[n,g],a.dtype);return e.disposeIntermediateTensorInfo(g),y}var HA={kernelName:Hd,backendName:"webgl",kernelFunc:YZ};function KA(r,t,e,o){let n=new Wo(e,"max",!1),i=o.runWebGLProgram(n,[r],"float32");n=new Wo(e,"max",!0,!0,t);let s=o.runWebGLProgram(n,[r],"float32");return[i,s]}var qA={kernelName:zl,backendName:"webgl",kernelFunc:({inputs:r,attrs:t,backend:e})=>{let{x:o}=r,{filterSize:n,strides:i,pad:s,includeBatchInIndex:a}=t,l=e;S.assert(o.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${o.shape.length}.`);let u=[1,1];S.assert(R.eitherStridesOrDilationsAreOne(i,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);let c=R.computePool2DInfo(o.shape,n,i,u,s),[p,d]=KA(o,a,c,l);return[p,d]}};function jA(r,t,e,o){let n=S.sizeFromShape(t),s=S.sizeFromShape(r.shape)/n,a=le({inputs:{x:r},attrs:{shape:[s,n]},backend:o}),l=no(a,"float32","mean",o),u=le({inputs:{x:l},attrs:{shape:e},backend:o});return o.disposeIntermediateTensorInfo(a),o.disposeIntermediateTensorInfo(l),u}var XA={kernelName:Ul,backendName:"webgl",kernelFunc:({inputs:r,attrs:t,backend:e})=>{let{x:o}=r,{keepDims:n,axis:i}=t,s=e,a=o.shape.length,l=S.parseAxisParam(i,o.shape),u=l,c=R.getAxesPermutation(u,a),p=c!=null,d=s.shouldExecuteOnCPU([o]),m=[],f=o;if(p){if(d){let N=s.texData.get(f.dataId).values,F=new Array(a);for(let H=0;H<F.length;H++)F[H]=o.shape[c[H]];let M=ea(N,o.shape,o.dtype,c,F);f=s.makeTensorInfo(F,o.dtype);let z=s.texData.get(f.dataId);z.values=M}else f=Gi(o,c,s);m.push(f),u=R.getInnerMostAxes(u.length,a)}R.assertAxesAreInnerMostDims("sum",u,a);let[g,x]=R.computeOutAndReduceShapes(f.shape,u),y=g;n&&(y=R.expandShapeToKeepDim(g,l));let v=jA(f,x,y,s);for(let k of m)s.disposeIntermediateTensorInfo(k);return v}};function QZ(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{axis:i,keepDims:s}=o,a=n.shape.length,l=S.parseAxisParam(i,n.shape),u=l,c=R.getAxesPermutation(u,a),p=n;c!=null&&(p=yt({inputs:{x:n},backend:e,attrs:{perm:c}}),u=R.getInnerMostAxes(u.length,n.shape.length)),R.assertAxesAreInnerMostDims("min",u,a);let[d,m]=R.computeOutAndReduceShapes(p.shape,u),f=S.sizeFromShape(m),g=le({inputs:{x:p},backend:e,attrs:{shape:[-1,f]}}),x=no(g,g.dtype,"min",e),y;if(s){let v=R.expandShapeToKeepDim(d,l);y=le({inputs:{x},backend:e,attrs:{shape:v}})}else y=le({inputs:{x},backend:e,attrs:{shape:d}});return e.disposeIntermediateTensorInfo(g),e.disposeIntermediateTensorInfo(x),c!=null&&e.disposeIntermediateTensorInfo(p),y}var YA={kernelName:Gl,backendName:"webgl",kernelFunc:QZ};var ZZ=Nc+`
  return min(a, b);
`,JZ=`
  vec4 result = vec4(min(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+oo+`
  return result;
`,eJ=nt({opSnippet:ZZ,packedOpSnippet:JZ,cpuKernelImpl:Z$}),QA={kernelName:ci,backendName:"webgl",kernelFunc:eJ};var zx=class{constructor(t,e,o){this.variableNames=["x"],this.outputShape=e.map((c,p)=>c[0]+t[p]+c[1]);let n=t.length,i=Le(n),s=e.map(c=>c[0]).join(","),a=e.map((c,p)=>c[0]+t[p]).join(","),l=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,n),u=o==="reflect"?0:1;if(n===1){this.userCode=`
        int start = ${s};
        int end = ${a};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${u};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${u};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${i} start = ${i}(${s});
      ${i} end = ${i}(${a});

      void main() {
        ${i} outC = getOutputCoords();
        for (int i = 0; i < ${n}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${u};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};
          }
        }
        ${i} coords = outC - start;
        setOutput(getX(${l}));
      }
    `}};var Ux=class{constructor(t,e,o){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.map((f,g)=>f[0]+t[g]+f[1]);let n=t.length,i=Le(n),s=e.map(f=>f[0]).join(","),a=e.map((f,g)=>f[0]+t[g]).join(","),l=Pt("rc",n),u=Pt("source",n),c=`${l[n-1]} < ${this.outputShape[n-1]}`,p=n===1?"source":`vec2(${u.slice(-2).join()})`,d=o==="reflect"?0:1,m="";if(n===1){let f=`
        ${i} source = rc;
        if (source < start) {
          source = start * 2 - source - ${d};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${d};
        }
        source -= start;
      `;m=`
        ${i} rc = outputLoc;
        ${f}
        result[0] = getChannel(getX(${u.join()}), ${p});
        ${l[n-1]} += 1;
        if(${c}) {
          ${f}
          result[1] = getChannel(getX(${u.join()}), ${p});
        }
      `}else{let f=`
        ${i} source = rc;
        ${i} lt = ${i}(lessThan(source, start));
        ${i} gte = ${i}(greaterThanEqual(source, end));
        ${i} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${d}) +
                gte * ((end - 1) * 2 - source + ${d});
        source -= start;
      `;m=`
        ${i} rc = outputLoc;
        ${f}
        result[0] = getChannel(getX(${u.join()}), ${p});
        ${l[n-1]} += 1;
        if(${c}) {
          ${f}
          result[1] = getChannel(getX(${u.join()}), ${p});
        }
        rc = outputLoc;
        ${l[n-2]} += 1;
        if(${l[n-2]} < ${this.outputShape[n-2]}) {
          ${f}
          result[2] = getChannel(getX(${u.join()}), ${p});
          ${l[n-1]} += 1;
          if(${c}) {
            ${f}
            result[3] = getChannel(getX(${u.join()}), ${p});
          }
        }
      `}this.userCode=`
      const ${i} start = ${i}(${s});
      const ${i} end = ${i}(${a});

      void main() {
        ${i} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${m}
        setOutput(result);
      }
    `}};var tJ=({inputs:r,backend:t,attrs:e})=>{let{x:o}=r,{paddings:n,mode:i}=e,s=G().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Ux(o.shape,n,i):new zx(o.shape,n,i);return t.runWebGLProgram(s,[o],o.dtype)},ZA={kernelName:Hl,backendName:"webgl",kernelFunc:tJ};var rJ=`if (b == 0.0) return NAN;
  return mod(a, b);`,oJ=`
  vec4 result = mod(a, b);
  bvec4 isNaN = equal(b, vec4(0.0));
  `+oo+`
  return result;
`,nJ=nt({opSnippet:rJ,packedOpSnippet:oJ}),JA={kernelName:Kl,backendName:"webgl",kernelFunc:nJ};var Gx=class{constructor(t,e,o){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[t,o],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${e-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${e-1}));
      }
    `}};var iJ=`
if (a == b) {
  return 1.0;
};
return a / b;`,sJ=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,qb=nt({opSnippet:iJ,packedOpSnippet:sJ,checkOutOfBounds:!0}),eF={kernelName:gl,backendName:"webgl",kernelFunc:qb};var tF="return a - b;",jb=nt({opSnippet:tF,packedOpSnippet:tF,supportsComplex:!0,cpuKernelImpl:bP}),rF={kernelName:xi,backendName:"webgl",kernelFunc:jb};function Xb(r){let{inputs:t,backend:e,attrs:o}=r,{logits:n}=t,{dim:i}=o,s=S.parseAxisParam([i],n.shape),a=Kb({inputs:{x:n},backend:e,attrs:{reductionIndices:s,keepDims:!1}}),l=R.expandShapeToKeepDim(a.shape,s),u=le({inputs:{x:a},backend:e,attrs:{shape:l}}),c=jb({inputs:{a:n,b:u},backend:e}),p=Ub({inputs:{x:c},backend:e}),d=ta({inputs:{x:p},backend:e,attrs:{axis:s,keepDims:!1}}),m=le({inputs:{x:d},backend:e,attrs:{shape:l}}),f=qb({inputs:{a:p,b:m},backend:e});return e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(u),e.disposeIntermediateTensorInfo(c),e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(m),f}var oF={kernelName:Cu,backendName:"webgl",kernelFunc:Xb};function aJ(r){let{inputs:t,backend:e,attrs:o}=r,{logits:n}=t,{numSamples:i,seed:s,normalized:a}=o,l=a?n:Xb({inputs:{logits:n},backend:e,attrs:{dim:n.shape.length-1}}),u=l.shape[0],c=l.shape[1],p=new Gx(u,c,i),d=[[s]],m=e.runWebGLProgram(p,[l],"int32",d);return a||e.disposeIntermediateTensorInfo(l),m}var nF={kernelName:ql,backendName:"webgl",kernelFunc:aJ};var lJ=Mt+`
  return -x;
`,uJ=`
  vec4 result = -x;
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`;function cJ(r){let{inputs:t,backend:e}=r,{x:o}=t;if(e.shouldExecuteOnCPU([o])){let i=e.texData.get(o.dataId),[s,a]=eP(i.values,o.shape,o.dtype);return e.makeTensorInfo(a,o.dtype,s)}let n;return G().getBool("WEBGL_PACK_UNARY_OPERATIONS")?n=new Or(o.shape,uJ):n=new Qt(o.shape,lJ),e.runWebGLProgram(n,[o],o.dtype)}var iF={kernelName:us,backendName:"webgl",kernelFunc:cJ};var pJ=jr.nonMaxSuppressionV3Impl;function dJ(r){R.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:e,attrs:o}=r,{boxes:n,scores:i}=t,{maxOutputSize:s,iouThreshold:a,scoreThreshold:l}=o,u=e.readSync(n.dataId),c=e.readSync(i.dataId),{selectedIndices:p}=pJ(u,c,s,a,l);return e.makeTensorInfo([p.length],"int32",new Int32Array(p))}var sF={kernelName:jl,backendName:"webgl",kernelFunc:dJ};var mJ=jr.nonMaxSuppressionV4Impl;function fJ(r){R.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:e,attrs:o}=r,{boxes:n,scores:i}=t,{maxOutputSize:s,iouThreshold:a,scoreThreshold:l,padToMaxOutputSize:u}=o,c=e.readSync(n.dataId),p=e.readSync(i.dataId),{selectedIndices:d,validOutputs:m}=mJ(c,p,s,a,l,u);return[e.makeTensorInfo([d.length],"int32",new Int32Array(d)),e.makeTensorInfo([],"int32",new Int32Array([m]))]}var aF={kernelName:qd,backendName:"webgl",kernelFunc:fJ};var hJ=jr.nonMaxSuppressionV5Impl;function gJ(r){R.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:e,attrs:o}=r,{boxes:n,scores:i}=t,{maxOutputSize:s,iouThreshold:a,scoreThreshold:l,softNmsSigma:u}=o,c=e.readSync(n.dataId),p=e.readSync(i.dataId),d=s,m=a,f=l,g=u,{selectedIndices:x,selectedScores:y}=hJ(c,p,d,m,f,g);return[e.makeTensorInfo([x.length],"int32",new Int32Array(x)),e.makeTensorInfo([y.length],"float32",new Float32Array(y))]}var lF={kernelName:Xl,backendName:"webgl",kernelFunc:gJ};var Hx=class{constructor(t,e,o,n){this.variableNames=["indices"],this.outputShape=[t,e],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${n}), float(${o}),
                      float(index == coords.y)));
      }
    `}};var xJ=r=>{let{inputs:t,backend:e,attrs:o}=r,{indices:n}=t,{dtype:i,depth:s,onValue:a,offValue:l}=o,u=S.sizeFromShape(n.shape),c=new Hx(u,s,a,l),p=le({inputs:{x:n},backend:e,attrs:{shape:[u]}}),d=e.runWebGLProgram(c,[p],i);e.disposeIntermediateTensorInfo(p);let m=[...n.shape,s],f=le({inputs:{x:d},backend:e,attrs:{shape:m}});return e.disposeIntermediateTensorInfo(d),f},uF={kernelName:Ql,backendName:"webgl",kernelFunc:xJ};function ed(r){let{inputs:t,backend:e}=r,{x:o}=t;if(o.dtype==="complex64"){let n=Bn({inputs:{input:o},backend:e}),i=ed({inputs:{x:n},backend:e}),s=oa({inputs:{input:o},backend:e}),a=ed({inputs:{x:s},backend:e}),l=Mr({inputs:{real:i,imag:a},backend:e});return e.disposeIntermediateTensorInfo(n),e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(s),e.disposeIntermediateTensorInfo(a),l}else return Vn({attrs:{shape:o.shape,dtype:o.dtype,value:o.dtype==="string"?"":0},backend:e})}var cF={kernelName:Ou,backendName:"webgl",kernelFunc:ed};function pF(r){let{inputs:t,backend:e}=r,{x:o}=t;if(o.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(o.dtype==="complex64"){let n=Bn({inputs:{input:o},backend:e}),i=pF({inputs:{x:n},backend:e}),s=oa({inputs:{input:o},backend:e}),a=ed({inputs:{x:s},backend:e}),l=Mr({inputs:{real:i,imag:a},backend:e});return e.disposeIntermediateTensorInfo(n),e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(s),e.disposeIntermediateTensorInfo(a),l}else return Vn({attrs:{shape:o.shape,dtype:o.dtype,value:1},backend:e})}var dF={kernelName:Yl,backendName:"webgl",kernelFunc:pF};function yJ(r){let{inputs:t,backend:e,attrs:o}=r,{axis:n}=o;if(t.length===1)return Nx({inputs:{input:t[0]},backend:e,attrs:{dim:n}});let i=t[0].shape,s=t[0].dtype;t.forEach(c=>{S.assertShapesMatch(i,c.shape,"All tensors passed to stack must have matching shapes"),S.assert(s===c.dtype,()=>"All tensors passed to stack must have matching dtypes")});let a=[],l=t.map(c=>{let p=Nx({inputs:{input:c},backend:e,attrs:{dim:n}});return a.push(p),p}),u=zb({inputs:l,backend:e,attrs:{axis:n}});return a.forEach(c=>e.disposeIntermediateTensorInfo(c)),u}var mF={kernelName:Zl,backendName:"webgl",kernelFunc:yJ};var Kx=class{constructor(t,e,o){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=e.map((u,c)=>u[0]+t[c]+u[1]);let n=t.length,i=Le(n),s=e.map(u=>u[0]).join(","),a=e.map((u,c)=>u[0]+t[c]).join(","),l=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,n);if(n===1){this.userCode=`
        int start = ${s};
        int end = ${a};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${i} start = ${i}(${s});
      ${i} end = ${i}(${a});

      void main() {
        ${i} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${i} coords = outC - start;
          setOutput(getX(${l}));
        }
      }
    `}};var qx=class{constructor(t,e,o){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=e.map((g,x)=>g[0]+t[x]+g[1]);let n=t.length,i=Le(n),s=e.map(g=>g[0]).join(","),a=e.map((g,x)=>g[0]+t[x]).join(","),l=Pt("rc",n),u=Pt("source",n),c=`${l[n-1]} < ${this.outputShape[n-1]}`,p=n===1?"source":`vec2(${u.slice(-2).join()})`,d=[`${i} rc = outputLoc;`,`${l[n-1]} += 1;
       if(${c}) {
      `,n===1?"":`}
       rc = outputLoc;
       ${l[n-2]} += 1;
       if(${l[n-2]} < ${this.outputShape[n-2]}) {`,n===1?"":`  ${l[n-1]} += 1;
         if(${c}) {`],m=n===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))",f="";for(let g=0,x=n===1?2:4;g<x;g++)f+=`
        ${d[g]}
        if (${m}) {
          result[${g}] = float(value);
        } else {
          ${i} source = rc - start;
          result[${g}] = getChannel(getX(${u.join()}), ${p});
        }
      `;f+=n===1?"} ":"}}",this.userCode=`
      const ${i} start = ${i}(${s});
      const ${i} end = ${i}(${a});

      void main() {
        ${i} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${f}
        setOutput(result);
      }
    `}};var Yb=r=>{let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{paddings:i,constantValue:s}=o;if(S.sizeFromShape(n.shape)===0){let u=i.map((c,p)=>c[0]+n.shape[p]+c[1]);return Vn({backend:e,attrs:{shape:u,value:s,dtype:n.dtype}})}let a=G().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new qx(n.shape,i,s):new Kx(n.shape,i,s),l=[[s]];return e.runWebGLProgram(a,[n],n.dtype,l)},fF={kernelName:Jl,backendName:"webgl",kernelFunc:Yb};var bJ=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,vJ=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  bvec4 isNaN1 = lessThan(a, vec4(0.0));
  bvec4 isNaN2 = lessThan(floor(b), b);
  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);
  `+oo+`
  return result;
`,SJ=nt({opSnippet:bJ,packedOpSnippet:vJ}),hF={kernelName:eu,backendName:"webgl",kernelFunc:SJ};function wJ(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{axis:i,keepDims:s}=o,a=n.shape.length,l=[],u=S.parseAxisParam(i,n.shape),c=u,p=R.getAxesPermutation(c,a),d=n;p!=null&&(d=yt({inputs:{x:n},backend:e,attrs:{perm:p}}),c=R.getInnerMostAxes(c.length,a),l.push(d)),R.assertAxesAreInnerMostDims("prod",c,a);let m;if(e.shouldExecuteOnCPU([d])){let f=e.texData.get(d.dataId).values,{outVals:g,outShape:x,outDtype:y}=rP(d.shape,d.dtype,f,c);m=e.makeTensorInfo(x,y,g)}else{let[f,g]=R.computeOutAndReduceShapes(d.shape,c),x=S.sizeFromShape(g),y=le({inputs:{x:d},backend:e,attrs:{shape:[-1,x]}}),v=Cn(n.dtype),k=no(y,v,"prod",e);m=le({inputs:{x:k},backend:e,attrs:{shape:f}}),l.push(y),l.push(k)}if(s){l.push(m);let f=R.expandShapeToKeepDim(m.shape,u);m=le({inputs:{x:m},backend:e,attrs:{shape:f}})}return l.forEach(f=>e.disposeIntermediateTensorInfo(f)),m}var gF={kernelName:cs,backendName:"webgl",kernelFunc:wJ};function CJ(r){let{inputs:t,backend:e,attrs:o}=r,{paramsNestedSplits:n,paramsDenseValues:i,indices:s}=t,{outputRaggedRank:a}=o,l=n.map(y=>e.readSync(y.dataId)),u=n.map(y=>y.shape),c=e.readSync(i.dataId),p=e.readSync(s.dataId),[d,m,f]=oP(l,u,c,i.shape,i.dtype,p,s.shape,a),g=d.map(y=>e.makeTensorInfo([y.length],"int32",y)),x=e.makeTensorInfo(f,i.dtype,m);return g.concat([x])}var xF={kernelName:jd,backendName:"webgl",kernelFunc:CJ};function _J(r){let{inputs:t,backend:e}=r,{starts:o,limits:n,deltas:i}=t,s=e.readSync(o.dataId),a=e.readSync(n.dataId),l=e.readSync(i.dataId),[u,c]=nP(s,o.shape,o.dtype,a,n.shape,l,i.shape),p=e.makeTensorInfo([u.length],"int32",u),d=e.makeTensorInfo([c.length],o.dtype,c);return[p,d]}var yF={kernelName:Xd,backendName:"webgl",kernelFunc:_J};function kJ(r){let{inputs:t,backend:e,attrs:o}=r,{shape:n,values:i,defaultValue:s,rowPartitionTensors:a}=t,{rowPartitionTypes:l}=o,u=e.readSync(n.dataId),c=e.readSync(i.dataId),p=e.readSync(s.dataId),d=a.map(x=>e.readSync(x.dataId)),m=a.map(x=>x.shape),[f,g]=iP(u,n.shape,c,i.shape,i.dtype,p,s.shape,d,m,l);return e.makeTensorInfo(f,i.dtype,g)}var bF={kernelName:Yd,backendName:"webgl",kernelFunc:kJ};var Qb=r=>{let{backend:t,attrs:e}=r,{start:o,stop:n,step:i,dtype:s}=e,a=sP(o,n,i,s);return t.makeTensorInfo([a.length],s,a)},vF={kernelName:ru,backendName:"webgl",kernelFunc:Qb};var IJ="return 1.0 / x;",TJ=Ce({opSnippet:IJ}),SF={kernelName:ou,backendName:"webgl",kernelFunc:TJ};var EJ=Mt+`
  return (x < 0.0) ? 0.0 : x;
`,NJ=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,RJ=Ce({opSnippet:EJ,packedOpSnippet:NJ}),wF={kernelName:nu,backendName:"webgl",kernelFunc:RJ};var $J=Mt+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,PJ=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,DJ=Ce({opSnippet:$J,packedOpSnippet:PJ}),CF={kernelName:lu,backendName:"webgl",kernelFunc:DJ};var jx=class{constructor(t,e,o,n,i){this.variableNames=["A"],this.outputShape=[];let[s,a,l,u]=t;this.outputShape=[s,e,o,u];let c=[n&&e>1?a-1:a,n&&o>1?l-1:l],p=[n&&e>1?e-1:e,n&&o>1?o-1:o],d;i?d="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":d="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${c[0]/p[0]},
          ${c[1]/p[1]});
      const vec2 inputShapeRC = vec2(${a}.0, ${l}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${d};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}};var Xx=class{constructor(t,e,o,n,i){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[s,a,l,u]=t;this.outputShape=[s,e,o,u];let c=[n&&e>1?a-1:a,n&&o>1?l-1:l],p=[n&&e>1?e-1:e,n&&o>1?o-1:o],d;i?d="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":d="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${c[0]/p[0]},
          ${c[1]/p[1]},
          ${c[1]/p[1]});
      const vec3 inputShapeRC = vec3(${a}.0, ${l}.0,
                                     ${l}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${d};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${u-1};
        bool hasNextRow = coords.z < ${o-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}};function AJ(r){let{inputs:t,backend:e,attrs:o}=r,{images:n}=t,{alignCorners:i,halfPixelCenters:s,size:a}=o,[l,u]=a,c=G().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new Xx(n.shape,l,u,i,s):new jx(n.shape,l,u,i,s);return e.runWebGLProgram(c,[n],"float32")}var _F={kernelName:au,backendName:"webgl",kernelFunc:AJ};var Yx=class{constructor(t,e,o){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e;let[,n,i]=e,[,s,a]=t,l=[o&&s>1?n-1:n,o&&a>1?i-1:i],u=[o&&s>1?s-1:s,o&&a>1?a-1:a],c=l[0]/u[0],p=l[1]/u[1],d=1/c,m=1/p,f=Math.ceil(d)*2+2,g=Math.ceil(m)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${c});
        const float widthScale = float(${p});

        const float invHeightScale = float(${d});
        const float invWidthScale = float(${m});

        const int winHeight = int(${f});
        const int winWidth = int(${g});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${s}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${a}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${n-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${i-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function FJ(r){let{inputs:t,backend:e,attrs:o}=r,{images:n,dy:i}=t,{alignCorners:s}=o,a=new Yx(i.shape,n.shape,s);return e.runWebGLProgram(a,[i],i.dtype)}var kF={kernelName:Zd,backendName:"webgl",kernelFunc:FJ};var Qx=class{constructor(t,e,o,n,i){this.variableNames=["A"],this.outputShape=[];let[s,a,l,u]=t;this.outputShape=[s,e,o,u];let c=[n&&e>1?a-1:a,n&&o>1?l-1:l],p=[n&&e>1?e-1:e,n&&o>1?o-1:o],d=n?"0.5":"0.0",m;i?m="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":m="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${c[0]/p[0]},
          ${c[1]/p[1]});
      const vec2 inputShapeRC = vec2(${a}.0, ${l}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${m};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}};var Zx=class{constructor(t,e,o,n,i){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[s,a,l,u]=t;this.outputShape=[s,e,o,u];let c=[n&&e>1?a-1:a,n&&o>1?l-1:l],p=[n&&e>1?e-1:e,n&&o>1?o-1:o],d=n?"0.5":"0.0",m;i?m="max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":m="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${c[0]/p[0]},
          ${c[1]/p[1]},
          ${c[1]/p[1]});
      const vec3 inputShapeRC = vec3(${a}.0, ${l}.0,
                                     ${l}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${m};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${u-1};
        bool hasNextRow = coords.z < ${o-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}};function OJ(r){let{inputs:t,backend:e,attrs:o}=r,{images:n}=t,{alignCorners:i,halfPixelCenters:s,size:a}=o,[l,u]=a,c=G().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new Zx(n.shape,l,u,i,s):new Qx(n.shape,l,u,i,s);return e.runWebGLProgram(c,[n],n.dtype)}var IF={kernelName:su,backendName:"webgl",kernelFunc:OJ};var Jx=class{constructor(t,e,o){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e;let[,n,i]=e,[,s,a]=t,l=[o&&s>1?n-1:n,o&&a>1?i-1:i],u=[o&&s>1?s-1:s,o&&a>1?a-1:a],c=l[0]/u[0],p=l[1]/u[1],d=1/c,m=1/p,f=Math.ceil(d)*2+2,g=Math.ceil(m)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${c});
        const float widthScale = float(${p});

        const float invHeightScale = float(${d});
        const float invWidthScale = float(${m});

        const int winHeight = int(${f});
        const int winWidth = int(${g});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${s}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${a}) {
              continue;
            }

            float sourceFracRow =
              float(${l[0]}) *
                (float(dyR) / float(${u[0]}));

            float sourceFracCol =
                float(${l[1]}) *
                  (float(dyC) / float(${u[1]}));

            int sourceNearestRow = int(min(
                float(int(${n}) - 1),
                ${o} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${i}) - 1),
                ${o} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function LJ(r){let{inputs:t,backend:e,attrs:o}=r,{images:n,dy:i}=t,{alignCorners:s}=o,a=new Jx(i.shape,n.shape,s);return e.runWebGLProgram(a,[i],i.dtype)}var TF={kernelName:Qd,backendName:"webgl",kernelFunc:LJ};var e0=class{constructor(t,e){this.variableNames=["x"];let o=t.length;if(o>4)throw new Error(`WebGL backend: Reverse of rank-${o} tensor is not yet supported`);if(this.outputShape=t,o===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${t[0]} - coord - 1));
        }
      `;return}let n=a=>e.indexOf(a)!==-1&&t[a]!==1?`${t[a]} - coords[${a}] - 1`:`coords[${a}]`,i=t.map((a,l)=>n(l)).join(","),s=Le(o);this.userCode=`
      void main() {
        ${s} coords = getOutputCoords();
        setOutput(getX(${i}));
      }
    `}};var t0=class{constructor(t,e){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;let o=t.length;if(o>4)throw new Error(`WebGL backend: Reverse of rank-${o} tensor is not yet supported`);this.outputShape=t;let n=Pt("rc",o),i=`${n[o-1]} + 1 < ${this.outputShape[o-1]}`,s=`${n[o-2]} + 1 < ${this.outputShape[o-2]}`,a=Le(o);o===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${t[0]} - rc - 1),
            ${t[0]} - rc - 1);
          if(${i}){
              result.g = getChannel(getX(${t[0]} - (rc  + 1) - 1),
                ${t[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${a} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${l(n.slice())};
          if(${i}){
            result.g = ${u(n.slice())};
          }
          if(${s}) {
            result.b = ${c(n.slice())};
            if(${i}) {
              result.a = ${p(n.slice())};
            }
          }
          setOutput(result);
        }
    `;function l(f){return d(f)}function u(f){return f[o-1]="("+f[o-1]+" + 1)",d(f)}function c(f){return f[o-2]="("+f[o-2]+" + 1)",d(f)}function p(f){return f[o-1]="("+f[o-1]+" + 1)",f[o-2]="("+f[o-2]+" + 1)",d(f)}function d(f){let g=t.map((v,k)=>m(k,f)),x=g.join(","),y=g.slice(-2).join(",");return`getChannel(getX(${x}), vec2(${y}))`}function m(f,g){return e.indexOf(f)!==-1&&t[f]!==1?`${t[f]} - ${g[f]} - 1`:`${g[f]}`}}};function MJ(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{dims:i}=o,s=n.shape.length,a=S.parseAxisParam(i,n.shape);if(s===0)return Dt({inputs:{x:n},backend:e});let l=G().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new t0(n.shape,a):new e0(n.shape,a);return e.runWebGLProgram(l,[n],n.dtype)}var EF={kernelName:uu,backendName:"webgl",kernelFunc:MJ};var r0=class{constructor(t,e){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];let o=t[1],n=t[2];this.outputShape=t;let i="";typeof e=="number"?i=`float outputValue = ${e.toFixed(2)};`:i=`
        vec3 fill = vec3(${e.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${i}
          if(coordX >= 0 && coordX < ${n} && coordY >= 0 && coordY < ${o}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}};var NF={kernelName:Mu,backendName:"webgl",kernelFunc:({inputs:r,attrs:t,backend:e})=>{let{image:o}=r,{radians:n,fillValue:i,center:s}=t,a=e,l=new r0(o.shape,i),[u,c]=R.getImageCenter(s,o.shape[1],o.shape[2]),p=[[u,c,Math.sin(n),Math.cos(n)]];return a.runWebGLProgram(l,[o],o.dtype,p)}};var BJ=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,VJ=Ce({opSnippet:BJ}),RF={kernelName:cu,backendName:"webgl",kernelFunc:VJ};var WJ="return inversesqrt(x);",zJ=Ce({opSnippet:WJ,cpuKernelImpl:aP}),$F={kernelName:mi,backendName:"webgl",kernelFunc:zJ};var Ki=class{constructor(t,e,o,n,i,s,a=!0,l=!1){this.variableNames=["updates","indices","defaultValue"],this.outputShape=s;let u=Le(i.length),c=Le(s.length),p="";o===1?p="i":o===2&&(p="i, j");let d=`getIndices(${p})`,m="";n===1?m="i":n===2&&(m="i, coords[1]");let f=`getUpdates(${m})`,g="";l&&(g="coords[0], coords[1]");let x=`getDefaultValue(${g})`,y=e>1?"strides[j]":"strides";this.userCode=`
        ${u} strides = ${u}(${i});

        void main() {
          ${c} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${t}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${e}; j++) {
              int index = round(${d});
              flattenedIndex += index * ${y};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${f};
              found = true;
            }
          }
          setOutput(mix(${x}, sum, float(found)));
        }
      `}};var o0=class{constructor(t,e,o,n,i,s,a=!0,l=!1){this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=s;let u=Le(i.length),c=Le(s.length),p="";o===1?p="i":o===2&&(p="i, j");let d=`getIndices(${p})`,m="";n===1?m="i":n===2&&(m="i, coords[1]");let f=`getUpdates(${m})`,g="";l&&(g="coords[0], coords[1]");let x=`getDefaultValue(${g})`,y=e>1?"strides[j]":"strides",v=e>1?"strides[j + 1]":"strides";this.userCode=`
        ${u} strides = ${u}(${i});

        void main() {
          ${c} coords = getOutputCoords();
          vec4 sum = vec4(0.);
          vec4 found = vec4(0.);
          for (int i = 0; i < ${t}; i+=2) {
            ivec2 flattenedIndex = ivec2(0);
            for (int j = 0; j < ${e}; j+=2) {
              ivec4 index = round(${d});
              flattenedIndex += index.xz * ${y};
              if (j + 1 < ${e}) {
                flattenedIndex += index.yw * ${v};
              }
            }
            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||
                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {
              vec4 updVals = ${f};
              if (flattenedIndex[0] == coords[0]) {
                sum.xy += updVals.xy;
                found.xy = vec2(1.);
              } else if (flattenedIndex[0] == coords[0] + 1) {
                sum.zw += updVals.xy;
                found.zw = vec2(1.);
              }
              if (flattenedIndex[1] == coords[0]) {
                sum.xy += updVals.zw;
                found.xy = vec2(1.);
              } else if (flattenedIndex[1] == coords[0] + 1) {
                sum.zw += updVals.zw;
                found.zw = vec2(1.);
              }
            }
          }
          setOutput(mix(${x}, sum, found));
        }
      `}};function UJ(r){let{inputs:t,backend:e,attrs:o}=r,{indices:n,updates:i}=t,{shape:s}=o,{sliceRank:a,numUpdates:l,sliceSize:u,strides:c,outputSize:p}=R.calculateShapes(i,n,s),d=[p/u,u];if(p===0)return e.makeTensorInfo(s,n.dtype);let m=le({inputs:{x:n},backend:e,attrs:{shape:[l,a]}}),f=le({inputs:{x:i},backend:e,attrs:{shape:[l,u]}}),g=e.makeTensorInfo([],"float32",new Float32Array([0])),x;G().getBool("WEBGL_PACK")?x=new o0(l,a,m.shape.length,f.shape.length,c,d):x=new Ki(l,a,m.shape.length,f.shape.length,c,d);let y=e.runWebGLProgram(x,[f,m,g],f.dtype),v=le({inputs:{x:y},backend:e,attrs:{shape:s}});return e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(y),e.disposeIntermediateTensorInfo(g),v}var PF={kernelName:pu,backendName:"webgl",kernelFunc:UJ};var n0=class{constructor(t,e,o,n){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[t,o];let i="while (left < right) {",s=`for (int i = 0; i < ${Math.ceil(Math.log2(e+1))}; ++i) { if (left >= right) break;`,a=G().getNumber("WEBGL_VERSION")===2?i:s,l=n==="left"?"<":"<=";this.userCode=`
       int findBound(int batch, float value) {
         int left = 0;
         int right = numInputs;
         int mid;
         ${a}
           mid = (left + right) / 2;
           if (getSortedSequence(batch, mid) ${l} value) {
             left = mid + 1;
           } else {
             right = mid;
           }
         }
         return right;
       }

       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int valueIndex = coords[1];

         float value = getValues(batch, valueIndex);

         setOutput(float(findBound(batch, value)));
       }
     `}};function GJ(r){let{inputs:t,backend:e,attrs:o}=r,{sortedSequence:n,values:i}=t,{side:s}=o,a=new n0(n.shape[0],n.shape[1],i.shape[1],s),l=[[n.shape[1]]];return e.runWebGLProgram(a,[n,i],"int32",l)}var DF={kernelName:mu,backendName:"webgl",kernelFunc:GJ};var i0=class{constructor(t,e,o){this.variableNames=["c","a","b"],this.outputShape=e;let n,i;if(o>4)throw Error(`Where for rank ${o} is not yet supported`);if(o===1)i="resRC",n="resRC";else{let a=["resRC.x","resRC.y","resRC.z","resRC.w"],l=[],u=[];for(let c=0;c<e.length;c++)u.push(`${a[c]}`),c<t&&l.push(`${a[c]}`);n=l.join(),i=u.join()}let s=Le(o);this.userCode=`
      void main() {
        ${s} resRC = getOutputCoords();
        float cVal = getC(${n});
        if (cVal >= 1.0) {
          setOutput(getA(${i}));
        } else {
          setOutput(getB(${i}));
        }
      }
    `}};function HJ(r){let{inputs:t,backend:e}=r,{condition:o,t:n,e:i}=t,s=new i0(o.shape.length,n.shape,n.shape.length);return e.runWebGLProgram(s,[o,n,i],Tt(n.dtype,i.dtype))}var AF={kernelName:fu,backendName:"webgl",kernelFunc:HJ};var KJ=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${R.SELU_SCALEALPHA};
  float scale = ${R.SELU_SCALE};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,qJ=Ce({opSnippet:KJ}),FF={kernelName:hu,backendName:"webgl",kernelFunc:qJ};var jJ=To+`
  return 1.0 / (1.0 + exp(-1.0 * x));
`,XJ=`
  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,YJ=Ce({opSnippet:jJ,packedOpSnippet:XJ,cpuKernelImpl:uP}),OF={kernelName:fi,backendName:"webgl",kernelFunc:YJ};var QJ=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,ZJ=Ce({opSnippet:QJ}),LF={kernelName:yu,backendName:"webgl",kernelFunc:ZJ};var JJ=To+`
  return sin(x);
`,eee=`
  vec4 result = sin(x);
  bvec4 isNaN = isnan(x);
  ${oo}
  return result;
`,tee=Ce({opSnippet:JJ,packedOpSnippet:eee}),MF={kernelName:gu,backendName:"webgl",kernelFunc:tee};var ree=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,oee=Ce({opSnippet:ree}),BF={kernelName:xu,backendName:"webgl",kernelFunc:oee};var nee=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,iee=Ce({opSnippet:nee}),VF={kernelName:bu,backendName:"webgl",kernelFunc:iee};var see=r=>{let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{blockShape:i,paddings:s}=o;S.assert(n.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");let a=i.reduce((y,v)=>y*v),l=[[0,0]];l.push(...s);for(let y=1+i.length;y<n.shape.length;++y)l.push([0,0]);let u=[],c=Yb({inputs:{x:n},backend:e,attrs:{paddings:l,constantValue:0}}),p=R.getReshaped(c.shape,i,a,!1),d=R.getPermuted(p.length,i.length,!1),m=R.getReshapedPermuted(c.shape,i,a,!1),f=le({inputs:{x:c},backend:e,attrs:{shape:p}}),g=yt({inputs:{x:f},backend:e,attrs:{perm:d}}),x=le({inputs:{x:g},backend:e,attrs:{shape:m}});return u.push(c),u.push(f),u.push(g),u.forEach(y=>e.disposeIntermediateTensorInfo(y)),x},WF={kernelName:Su,backendName:"webgl",kernelFunc:see};function aee(r){let{inputs:t,backend:e}=r,{indices:o,values:n,denseShape:i,defaultValue:s}=t;if(i.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
         ${i.shape}`);if(o.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
         ${o.shape}`);if(n.shape.length!==1)throw new Error(`Values must be a vector, saw:
         ${n.shape}`);if(s.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${s.shape}`);let a=e.readSync(o.dataId),l=e.readSync(n.dataId),u=e.readSync(i.dataId),c=e.readSync(s.dataId)[0],[p,d,m,f,g]=pP(a,o.shape,o.dtype,l,n.dtype,u,c);return[e.makeTensorInfo(d,o.dtype,p),e.makeTensorInfo([d[0]],n.dtype,m),e.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(x=>Number(x)))),e.makeTensorInfo([g.length],o.dtype,new Int32Array(g))]}var zF={kernelName:Jd,backendName:"webgl",kernelFunc:aee};function lee(r){let{inputs:t,backend:e}=r,{inputIndices:o,inputShape:n,newShape:i}=t;if(o.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape ${o.shape}`);if(n.shape.length!==1)throw new Error(`Input shape should be a vector but received shape ${n.shape}`);if(i.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${i.shape}`);let s=Array.from(e.readSync(n.dataId)),a=e.readSync(o.dataId),l=Array.from(e.readSync(i.dataId)),[u,c,p]=dP(a,o.shape,o.dtype,s,l);return[e.makeTensorInfo(c,o.dtype,u),e.makeTensorInfo([p.length],i.dtype,new Int32Array(p))]}var UF={kernelName:em,backendName:"webgl",kernelFunc:lee};function uee(r){let{inputs:t,backend:e}=r,{data:o,indices:n,segmentIds:i}=t;if(o.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(n.shape.length!==1)throw new Error(`Indices should be a vector but received shape
              ${n.shape}`);if(i.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
              ${i.shape}`);let s=e.readSync(o.dataId),a=e.readSync(n.dataId),l=e.readSync(i.dataId),[u,c]=Vg(s,o.shape,o.dtype,a,l,!0);return e.makeTensorInfo(c,o.dtype,u)}var GF={kernelName:_u,backendName:"webgl",kernelFunc:uee};function cee(r){let{inputs:t,backend:e}=r,{data:o,indices:n,segmentIds:i}=t;if(o.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(n.shape.length!==1)throw new Error(`Indices should be a vector but received shape
             ${n.shape}`);if(i.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
             ${i.shape}`);let s=e.readSync(o.dataId),a=e.readSync(n.dataId),l=e.readSync(i.dataId),[u,c]=Vg(s,o.shape,o.dtype,a,l);return e.makeTensorInfo(c,o.dtype,u)}var HF={kernelName:ku,backendName:"webgl",kernelFunc:cee};function pee(r){let{inputs:t,backend:e,attrs:o}=r,{sparseIndices:n,sparseValues:i,defaultValue:s}=t,{outputShape:a}=o,{sliceRank:l,numUpdates:u,sliceSize:c,strides:p,outputSize:d}=R.calculateShapes(i,n,a),m=!1;if(i.dtype==="string"){let y=e.bufferSync(n),v=e.bufferSync(i),k=S.decodeString(e.readSync(s.dataId)[0]),N=lP(y,v,a,d,c,u,l,p,k,m);return e.makeTensorInfo(a,N.dtype,N.values)}let f=new Ki(u,l,n.shape.length,i.shape.length,p,[d,1],m),g=e.runWebGLProgram(f,[i,n,s],i.dtype),x=le({inputs:{x:g},backend:e,attrs:{shape:a}});return e.disposeIntermediateTensorInfo(g),x}var KF={kernelName:Iu,backendName:"webgl",kernelFunc:pee};function dee(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{numOrSizeSplits:i,axis:s}=o,a=S.parseAxisParam(s,n.shape)[0],l=R.prepareSplitSize(n,i,a),u=n.shape.length,c=new Array(u).fill(0),p=n.shape.slice();return l.map(d=>{let m=[...p];m[a]=d;let f=zo({inputs:{x:n},backend:e,attrs:{begin:c,size:m}});return c[a]+=d,f})}var qF={kernelName:wu,backendName:"webgl",kernelFunc:dee};var jF="return sqrt(x);",mee=Ce({opSnippet:jF,packedOpSnippet:jF,cpuKernelImpl:mP}),XF={kernelName:hi,backendName:"webgl",kernelFunc:mee};var fee="return x * x;",hee=Ce({opSnippet:fee}),YF={kernelName:tm,backendName:"webgl",kernelFunc:hee};var QF="return (a - b) * (a - b);",gee=nt({opSnippet:QF,packedOpSnippet:QF}),ZF={kernelName:gi,backendName:"webgl",kernelFunc:gee};function xee(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t;if(n.dtype!=="string")throw new Error("Input must be of datatype string");let i=e.readSync(n.dataId),s=R.fromUint8ToStringArray(i),a=fP(s,"string",o);return e.makeTensorInfo(n.shape,"string",a)}var JF={kernelName:Tu,backendName:"webgl",kernelFunc:xee};function yee({inputs:r,attrs:t,backend:e}){let{x:o}=r,n=Mt+`
    return x > 0.0 ? 1.0 : float(${t.alpha});
  `,i=new Qt(o.shape,n);return e.runWebGLProgram(i,[o],o.dtype)}var eO={kernelName:Lu,backendName:"webgl",kernelFunc:yee};var s0=class{constructor(t,e,o){this.variableNames=["x"],this.outputShape=o;let n=o.length,i=Le(o.length),s=Le(o.length),a="";if(n===1)a="coords * strides + begin";else{let l=0;a=o.map((u,c)=>(l++,o.length===1?`coords * strides[${c}] + begin[${c}]`:`coords[${l-1}] * strides[${c}] + begin[${c}]`)).join(",")}this.userCode=`
      ${i} begin = ${i}(${t});
      ${i} strides = ${i}(${e});

      void main() {
        ${s} coords = getOutputCoords();
        setOutput(getX(${a}));
      }
    `}};function bee(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{begin:i,end:s,strides:a,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:p,shrinkAxisMask:d}=o,{finalShapeSparse:m,finalShape:f,isIdentity:g,sliceDim0:x,isSimpleSlice:y,begin:v,end:k,strides:N}=Ut.sliceInfo(n.shape,i,s,a,l,u,c,p,d),F;if(g)F=le({inputs:{x:n},backend:e,attrs:{shape:f}});else if(x||y){S.assert(n.shape.length>=1,()=>`Input must have rank at least 1, got: ${n.shape.length}`);let z=Ut.computeOutShape(v,k,N),H=zo({inputs:{x:n},backend:e,attrs:{begin:v,size:z}});F=le({inputs:{x:H},backend:e,attrs:{shape:f}}),e.disposeIntermediateTensorInfo(H)}else if(e.shouldExecuteOnCPU([n])){let H=e.readSync(n.dataId),K=Oe(n.shape,n.dtype,H),j=hP(m,K,N,v);F=e.makeTensorInfo(f,n.dtype,j.values)}else{let H=new s0(v,N,m);F=e.runWebGLProgram(H,[n],n.dtype)}let M=le({inputs:{x:F},backend:e,attrs:{shape:f}});return e.disposeIntermediateTensorInfo(F),M}var tO={kernelName:Eu,backendName:"webgl",kernelFunc:bee};function vee(r){let{inputs:t,backend:e,attrs:o}=r,{separator:n,nGramWidths:i,leftPad:s,rightPad:a,padWidth:l,preserveShortSequences:u}=o,{data:c,dataSplits:p}=t,d=e.readSync(c.dataId),m=e.readSync(p.dataId),[f,g]=gP(d,m,n,i,s,a,l,u);return[e.makeTensorInfo([f.length],"string",f),e.makeTensorInfo(p.shape,"int32",g)]}var rO={kernelName:Nu,backendName:"webgl",kernelFunc:vee};function See(r){let{inputs:t,backend:e,attrs:o}=r,{skipEmpty:n}=o,{input:i,delimiter:s}=t;if(i.dtype!=="string")throw new Error("Input must be of datatype string");if(i.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${i.shape}`);if(s.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${s.shape}`);let a=e.readSync(i.dataId),l=e.readSync(s.dataId)[0],[u,c,p]=xP(a,l,n),d=c.length;return[e.makeTensorInfo([d,2],"int32",u),e.makeTensorInfo([d],"string",c),e.makeTensorInfo([2],"int32",new Int32Array(p))]}var oO={kernelName:rm,backendName:"webgl",kernelFunc:See};function wee(r){let{inputs:t,backend:e,attrs:o}=r,{numBuckets:n}=o,{input:i}=t;if(i.dtype!=="string")throw new Error("Input must be of datatype string");if(n<=0)throw new Error("Number of buckets must be at least 1");let s=e.readSync(i.dataId),a=yP(s,n);return e.makeTensorInfo(i.shape,"int32",a)}var nO={kernelName:om,backendName:"webgl",kernelFunc:wee};var Cee="return tan(x);",_ee=Ce({opSnippet:Cee}),iO={kernelName:Ru,backendName:"webgl",kernelFunc:_ee};var kee=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,Iee=Ce({opSnippet:kee}),sO={kernelName:$u,backendName:"webgl",kernelFunc:Iee};function Tee(r){let{inputs:t,backend:e,attrs:o}=r,{tensor:n,indices:i,updates:s}=t,{}=o,{sliceRank:a,numUpdates:l,sliceSize:u,strides:c,outputSize:p}=R.calculateShapes(s,i,n.shape),d=[p/u,u];if(p===0)return e.makeTensorInfo(n.shape,i.dtype);let m=le({inputs:{x:i},backend:e,attrs:{shape:[l,a]}}),f=le({inputs:{x:s},backend:e,attrs:{shape:[l,u]}}),g=le({inputs:{x:n},backend:e,attrs:{shape:d}}),x=new Ki(l,a,m.shape.length,f.shape.length,c,d,!1,!0),y=e.runWebGLProgram(x,[f,m,g],g.dtype),v=le({inputs:{x:y},backend:e,attrs:{shape:n.shape}});return e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(g),e.disposeIntermediateTensorInfo(y),v}var aO={kernelName:du,backendName:"webgl",kernelFunc:Tee};var a0=class{constructor(t,e){this.variableNames=["A"];let o=new Array(t.length);for(let s=0;s<o.length;s++)o[s]=t[s]*e[s];this.outputShape=o,this.rank=o.length;let n=Le(this.rank),i=Eee(t);this.userCode=`
      void main() {
        ${n} resRC = getOutputCoords();
        setOutput(getA(${i}));
      }
    `}};function Eee(r){let t=r.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(t===1)return`imod(resRC, ${r[0]})`;let e=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],o=[];for(let n=0;n<r.length;n++)o.push(`imod(${e[n]}, ${r[n]})`);return o.join()}function Zb(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{reps:i}=o;if(n.dtype==="string"||n.shape.length>5){let l=e.readSync(n.dataId),u=n.dtype==="string"?l.map(d=>S.decodeString(d)):l,c=Oe(n.shape,n.dtype,u),p=vP(c,i);return e.makeTensorInfo(p.shape,p.dtype,p.values)}let s=new a0(n.shape,i);return e.runWebGLProgram(s,[n],n.dtype)}var lO={kernelName:yi,backendName:"webgl",kernelFunc:Zb};var l0=class{constructor(t){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=t,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}},u0=class{constructor(t){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=t,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}};function na(r,t){t!==null&&r.disposeIntermediateTensorInfo(t)}function uO(r){let t=1;for(;t<r;)t*=2;return t}function Nee(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{k:i,sorted:s}=o,a=G().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=G().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),u=n.shape,c=u[u.length-1];if(e.shouldExecuteOnCPU([n])||c<a||i>l){let j=e.readSync(n.dataId),[J,ue]=SP(j,u,n.dtype,i,s);return[e.makeTensorInfo(J.shape,J.dtype,J.values),e.makeTensorInfo(ue.shape,ue.dtype,ue.values)]}if(i===0)return u[u.length-1]=0,[e.makeTensorInfo(u,n.dtype,[]),e.makeTensorInfo(u,"int32",[])];if(c===1)return[n,Vn({attrs:{shape:u,dtype:"int32",value:0},backend:e})];let p=e.texData.get(n.dataId),d=p!==null&&p.isPacked,m=d?e.unpackTensor(n):n,g=S.sizeFromShape(u)/c,x=le({inputs:{x:m},attrs:{shape:[g,c]},backend:e});d&&na(e,m);let y=uO(i),v=uO(c),k=null,N=()=>k===null?[x,x]:[x,k],F=(j,J,ue)=>{let ce=N(),xe=new l0(ue),Ie=[[c],[k===null?1:0],[Number.NEGATIVE_INFINITY],[j],[J]],qe=k;k=e.runWebGLProgram(xe,ce,"int32",Ie),na(e,qe)};for(let j=1;j<y;j*=2){let J=j*2;for(let ue=j;ue>=1;ue/=2)F(J,ue,[g,v])}for(let j=v;j>y;j/=2){let J=N(),ue=new u0([g,j/2]),xe=[[c],[k===null?1:0],[y]],be=k;k=e.runWebGLProgram(ue,J,"int32",xe),na(e,be);let Ie=y/2,qe=Ie*2;for(let je=Ie;je>=1;je/=2)F(qe,je,k.shape)}let M=k;k=zo({inputs:{x:k},backend:e,attrs:{begin:0,size:[g,i]}}),na(e,M);let z=Hb({inputs:{x,indices:k},backend:e,attrs:{axis:1,batchDims:1}});na(e,x);let H=u.slice(0,-1);H.push(i),M=k,k=le({inputs:{x:k},attrs:{shape:H},backend:e}),na(e,M);let K=z;return z=le({inputs:{x:z},attrs:{shape:H},backend:e}),na(e,K),[z,k]}var cO={kernelName:Pu,backendName:"webgl",kernelFunc:Nee};var c0=class{constructor(t,e,o,n,i,s){this.variableNames=["Image","Transforms"],this.outputShape=s;let a=o==="nearest"?1:2,l;switch(n){case"constant":l=1;break;case"reflect":l=2;break;case"wrap":l=3;break;case"nearest":l=4;break;default:l=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${l} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${l} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${l} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${t} && 0 <= coordX && coordX < ${e}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${i});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${i});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${e}));
                float mapY = mapCoord(inY, float(${t}));

                if (${a} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}};function Ree(r){let{inputs:t,backend:e,attrs:o}=r,{image:n,transforms:i}=t,{interpolation:s,fillMode:a,fillValue:l,outputShape:u}=o,[c,p,d,m]=n.shape,[f,g]=u??[p,d],x=[c,f,g,m],y=new c0(p,d,s,a,l,x);return e.runWebGLProgram(y,[n,i],"float32")}var pO={kernelName:Du,backendName:"webgl",kernelFunc:Ree};function $ee(r){let{inputs:t,attrs:e,backend:o}=r,{axis:n}=e,{x:i}=t;dn(i,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");let s=o.readSync(i.dataId),{outputValues:a,outputShape:l,indices:u}=wP(s,n,i.shape,i.dtype);return[o.makeTensorInfo(l,i.dtype,a),o.makeTensorInfo([u.length],"int32",u)]}var dO={kernelName:nm,backendName:"webgl",kernelFunc:$ee};function Pee(r){let{inputs:t,backend:e,attrs:o}=r,{value:n}=t,{axis:i}=o;i<0&&(i+=n.shape.length);let s=n,a=s.shape.length,l=n.shape[i],u=new Array(a-1),c=0;for(let g=0;g<a;g++)g!==i&&(u[c++]=s.shape[g]);let p=[],d=new Array(a).fill(0),m=s.shape.slice();m[i]=1;let f=new Array(l);for(let g=0;g<f.length;g++){d[i]=g;let x=zo({inputs:{x:s},backend:e,attrs:{begin:d,size:m}}),y=le({inputs:{x},backend:e,attrs:{shape:u}});f[g]=y,p.push(x)}return p.forEach(g=>e.disposeIntermediateTensorInfo(g)),f}var mO={kernelName:Au,backendName:"webgl",kernelFunc:Pee};var p0=class{constructor(t,e){this.variableNames=["x","segmentIds"];let o=t.windowSize,n=t.batchSize,i=t.inSize,s=t.numSegments,a=s*Math.ceil(i/o);this.outputShape=[n,a];let l="0.0",u="sumValue",c=Math.floor(o/4)*4,p=o%4,d=`
        sumValue += dot(values, segFilter);
    `,m="";i%o>0&&(m=`
        if (inIdx < 0 || inIdx >= ${i}) {
          return initializationValue;
        }
      `);let f="";i%o>0&&(f=`
        if (inIdx < 0 || inIdx >= ${i}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${l};

      float getValue(int batch, int inIdx) {
        ${m}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${f}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${s})) * float(${o}));
        int currentSeg = int(mod(float(outIdx), float(${s})));

        float sumValue = 0.0;

        for (int i = 0; i < ${c}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${d}
        }

        int inIdx = inOffset + ${c};
        if (${p===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${d}
        } else if (${p===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${d}
        } else if (${p===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${d}
        }
        setOutput(${u});
      }
    `}};function Dee(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,segmentIds:i}=t,{numSegments:s}=o,a=n.shape.length,l=[],u=0,c=R.getAxesPermutation([u],a),p=n;c!=null&&(p=yt({inputs:{x:n},backend:e,attrs:{perm:c}}),l.push(p),u=R.getInnerMostAxes(1,a)[0]);let d=R.segment_util.computeOutShape(p.shape,u,s),m=S.sizeFromShape([p.shape[u]]),f=le({inputs:{x:p},backend:e,attrs:{shape:[-1,m]}});l.push(f);let g=Cn(n.dtype),x=(N,F,M,z,H)=>{let K=N.shape[0],j=N.shape[1],J=R.segment_util.segOpComputeOptimalWindowSize(j,H),ue={windowSize:J,inSize:j,batchSize:K,numSegments:H},ce=new p0(ue,F),xe=e.compileAndRun(ce,[N,M],z);if(l.push(xe),xe.shape[1]===H)return xe;let be=Qb({backend:e,attrs:{start:0,stop:H,step:1,dtype:"float32"}}),Ie=Zb({inputs:{x:be},backend:e,attrs:{reps:[j/J]}});return l.push(be),l.push(Ie),x(xe,F,Ie,z,H)},y=x(f,"unsortedSegmentSum",i,g,s),v=le({inputs:{x:y},backend:e,attrs:{shape:d}}),k=v;if(c!=null){l.push(v);let N=R.getUndoAxesPermutation(c);k=yt({inputs:{x:k},backend:e,attrs:{perm:N}})}return l.forEach(N=>e.disposeIntermediateTensorInfo(N)),k}var fO={kernelName:Fu,backendName:"webgl",kernelFunc:Dee};var Aee=[YP,ZP,JP,eD,rD,oD,nD,iD,lD,uD,cD,pD,dD,mD,fD,hD,gD,xD,yD,bD,vD,wD,CD,_D,kD,ND,$D,PD,VP,AD,OD,LD,MD,BD,VD,WD,zD,UD,GD,HD,jD,XD,YD,QD,ZD,JD,eA,tA,rA,oA,nA,iA,sA,aA,lA,uA,pA,dA,mA,fA,gA,xA,yA,bA,vA,SA,wA,CA,_A,BP,kA,FD,IA,TA,EA,WP,NA,RA,$A,PA,DA,AA,FA,OA,LA,MA,VA,WA,zA,UA,GA,HA,qA,XA,YA,QA,ZA,JA,nF,GP,iF,sF,aF,lF,ID,uF,dF,mF,fF,hF,zP,gF,xF,yF,bF,vF,TD,eF,SF,wF,CF,KP,_F,kF,IF,TF,EF,NF,RF,$F,PF,DF,AF,FF,OF,LF,MF,BF,SD,oF,VF,WF,zF,UF,GF,HF,KF,qF,XF,YF,ZF,JF,eO,tO,rO,oO,nO,rF,jP,iO,sO,aO,lO,cO,pO,XP,dO,mO,fO,cF];for(let r of Aee)sm(r);var Fee=["videoElement"],Oee=["canvasElement"];function Lee(r,t){if(r&1&&(I(0,"div",32)(1,"div",33),O(2),E(),I(3,"div",34),O(4,"REPS"),E()()),r&2){let e=L();D(2),We(e.repCount)}}function Mee(r,t){r&1&&(I(0,"p"),O(1,"Requesting camera access..."),E())}function Bee(r,t){r&1&&(I(0,"p"),O(1,"Loading video feed..."),E())}function Vee(r,t){r&1&&(I(0,"p"),O(1,"Loading AI model, please wait..."),E())}function Wee(r,t){if(r&1&&(I(0,"div",35),ae(1,Mee,2,0,"p",36)(2,Bee,2,0,"p",36)(3,Vee,2,0,"p",36),E()),r&2){let e=L();D(),B("ngIf",!e.videoStream),D(),B("ngIf",e.videoStream&&!e.isCameraReady),D(),B("ngIf",e.isCameraReady&&!e.modelReady)}}function zee(r,t){r&1&&(I(0,"p"),O(1,"Camera access was lost or denied. Please reload or check permissions."),E())}function Uee(r,t){r&1&&(I(0,"p"),O(1,"AI Model failed to load. Try reloading."),E())}function Gee(r,t){if(r&1){let e=ke();I(0,"button",38),ie("click",function(){re(e);let n=L(2);return oe(n.setupCamera())}),O(1,"Retry Camera"),E()}}function Hee(r,t){if(r&1){let e=ke();I(0,"button",38),ie("click",function(){re(e);let n=L(2);return oe(n.loadPoseDetectionModel())}),O(1,"Retry AI Model"),E()}}function Kee(r,t){if(r&1&&(I(0,"div",35),ae(1,zee,2,0,"p",36)(2,Uee,2,0,"p",36)(3,Gee,2,0,"button",37)(4,Hee,2,0,"button",37),E()),r&2){let e=L();D(),B("ngIf",!(e.videoStream!=null&&e.videoStream.active)),D(),B("ngIf",!e.modelReady&&(e.videoStream==null?null:e.videoStream.active)),D(),B("ngIf",!(e.videoStream!=null&&e.videoStream.active)),D(),B("ngIf",!e.modelReady&&(e.videoStream==null?null:e.videoStream.active))}}function qee(r,t){if(r&1){let e=ke();I(0,"button",39),ie("click",function(){re(e);let n=L();return oe(n.startWorkout())}),O(1," Start Workout "),E()}if(r&2){let e=L();B("disabled",!e.isCameraReady||!e.modelReady)}}function jee(r,t){if(r&1){let e=ke();I(0,"button",40),ie("click",function(){re(e);let n=L();return oe(n.stopWorkout())}),O(1," Stop Workout "),E()}}function Xee(r,t){if(r&1){let e=ke();I(0,"button",41),ie("click",function(){re(e);let n=L();return oe(n.toggleRecording())}),O(1),E()}if(r&2){let e=L();Po("recording",e.isRecording),D(),$e(" ",e.isRecording?"Stop Recording":"Start Recording"," ")}}function Yee(r,t){if(r&1&&(I(0,"li",49),O(1),pt(2,"uppercase"),E()),r&2){let e=t.$implicit;B("ngClass","feedback-"+e.type),D(),Gt(" [",Vt(2,3,e.type),"] ",e.message," ")}}function Qee(r,t){r&1&&(I(0,"div",50),O(1," No feedback yet. Start your workout! "),E())}function Zee(r,t){if(r&1){let e=ke();I(0,"div",42),ie("click",function(){re(e);let n=L();return oe(n.toggleFeedbackVisibility())}),I(1,"div",43),ie("click",function(n){return re(e),oe(n.stopPropagation())}),I(2,"div",44)(3,"h3"),O(4,"Feedback & Log"),E(),I(5,"button",45),ie("click",function(){re(e);let n=L();return oe(n.toggleFeedbackVisibility())}),O(6,"\xD7"),E()(),I(7,"div",46)(8,"ul"),ae(9,Yee,3,5,"li",47),E(),ae(10,Qee,2,0,"div",48),E()()()}if(r&2){let e=L();D(9),B("ngForOf",e.feedbackMessages),D(),B("ngIf",e.feedbackMessages.length===0)}}var d0=class r{constructor(t){this.hostElement=t}videoElementRef;canvasElementRef;videoStream=null;mediaRecorder=null;recordedChunks=[];poseDetector=null;modelReady=!1;isFeedbackVisible=!1;isControlsExpanded=!1;isCameraReady=!1;isRecording=!1;isWorkoutActive=!1;repCount=0;elapsedTime=0;timerInterval;feedbackMessages=[];currentExercise="Right Bicep Curl";changeDetectorRef=Ve(pa);ngZone=Ve(oS);animationFrameId=null;currentRepCycleState="START";exerciseSpecificLogic=null;KEYPOINT_SCORE_THRESHOLD=.5;STABLE_FRAME_COUNT=3;lastFramesStates={};BICEP_ELBOW_ANGLE_UP=50;BICEP_ELBOW_ANGLE_DOWN=160;BICEP_WRIST_ELBOW_VERTICAL_DIFF_DOWN=10;SNATCH_HIP_EXTENSION_ANGLE_START=170;SNATCH_ARM_LOCKOUT_SHOULDER_WRIST_ALIGNMENT_Y=30;SNATCH_KNEE_ANGLE_BOTTOM=80;PRESS_ELBOW_ANGLE_UP=170;PRESS_ELBOW_ANGLE_RACK=90;PRESS_WRIST_SHOULDER_Y_DIFF_UP=-10;PRESS_WRIST_SHOULDER_Y_DIFF_RACK=20;PRESS_WRIST_SHOULDER_X_ALIGNMENT=30;PRESS_TORSO_LEAN_X_ALIGNMENT=40;JERK_ELBOW_LOCKOUT_ANGLE=165;JERK_ELBOW_RACK_ANGLE=90;JERK_KNEE_DIP_ANGLE=90;JERK_SECOND_DIP_KNEE_ANGLE=100;JERK_WRIST_SHOULDER_Y_DIFF_LOCKOUT=-20;JERK_WRIST_SHOULDER_X_ALIGNMENT=30;alternatingArm="";fabPosition={x:0,y:0};isFabDragging=!1;fabDragStartOffset={x:0,y:0};fabElementRef;ngOnInit(){return X(this,null,function*(){this.addFeedback("info","Initializing TensorFlow.js backend...");try{yield dy("webgl"),yield my(),this.addFeedback("info",`TensorFlow.js backend set to: ${Jo()}`)}catch(t){console.error("Error setting TF backend:",t),this.addFeedback("error",`Error setting TF backend: ${t instanceof Error?t.message:String(t)}`);try{yield dy("cpu"),yield my(),this.addFeedback("warning",`Fell back to TF.js backend: ${Jo()}`)}catch(e){this.addFeedback("error",`CPU backend also failed: ${e instanceof Error?e.message:String(e)}`);return}}yield this.setupCamera(),yield this.loadPoseDetectionModel(),this.setExerciseLogic(this.currentExercise),this.initializeFabPosition()})}ngOnDestroy(){this.stopWorkout(),this.stopCamera(),this.poseDetector&&(this.poseDetector.dispose(),this.addFeedback("info","Pose detection model disposed."),this.poseDetector=null)}setupCamera(){return X(this,null,function*(){try{if(navigator.mediaDevices&&navigator.mediaDevices.getUserMedia){if(this.videoStream=yield navigator.mediaDevices.getUserMedia({video:{facingMode:"user",width:{ideal:640},height:{ideal:480}}}),this.videoElementRef&&this.canvasElementRef){let t=this.videoElementRef.nativeElement,e=this.canvasElementRef.nativeElement;t.srcObject=this.videoStream,t.onloadedmetadata=()=>{t.play().then(()=>{this.isCameraReady=!0,this.addFeedback("info","Camera ready."),e.width=t.videoWidth,e.height=t.videoHeight,this.changeDetectorRef.detectChanges()}).catch(o=>{console.error("Error playing video:",o),this.addFeedback("error","Could not start video playback.")})}}}else this.addFeedback("error","getUserMedia not supported in this browser."),this.isCameraReady=!1}catch(t){console.error("Error accessing camera:",t),this.addFeedback("error",`Error accessing camera: ${t instanceof Error?t.message:String(t)}`),t.name==="NotAllowedError"&&this.addFeedback("warning","Camera permission denied. Please allow camera access."),this.isCameraReady=!1}this.changeDetectorRef.detectChanges()})}loadPoseDetectionModel(){return X(this,null,function*(){this.poseDetector&&(this.poseDetector.dispose(),this.poseDetector=null),this.modelReady=!1,this.addFeedback("info","Loading pose detection model (MoveNet Lightning)..."),this.changeDetectorRef.detectChanges();try{let t=or.MoveNet,e={modelType:L3.modelType.SINGLEPOSE_LIGHTNING};this.poseDetector=yield O3(t,e),this.modelReady=!0,this.addFeedback("success","Pose detection model loaded successfully!")}catch(t){console.error("Error loading pose detection model:",t),this.addFeedback("error",`Could not load AI model: ${t instanceof Error?t.message:String(t)}`),this.modelReady=!1}finally{this.changeDetectorRef.detectChanges()}})}startWorkout(){if(!this.isCameraReady){this.addFeedback("warning","Camera not ready.");return}if(!this.modelReady||!this.poseDetector){this.addFeedback("warning","AI Model not ready. Please wait or try reloading model.");return}this.isWorkoutActive=!0,this.repCount=0,this.elapsedTime=0,this.lastFramesStates={},this.currentRepCycleState="START",this.feedbackMessages=[{type:"success",message:"Workout started! Form tracking active."}],this.changeDetectorRef.detectChanges(),this.timerInterval=setInterval(()=>{this.elapsedTime++,this.changeDetectorRef.detectChanges()},1e3),this.animationFrameId&&cancelAnimationFrame(this.animationFrameId),this.animationFrameId=requestAnimationFrame(this.processVideoFrame)}stopWorkout(){this.isWorkoutActive=!1,this.timerInterval&&(clearInterval(this.timerInterval),this.timerInterval=null),this.animationFrameId&&(cancelAnimationFrame(this.animationFrameId),this.animationFrameId=null),this.addFeedback("info",`Workout stopped. Total reps: ${this.repCount}. Time: ${this.formatTime(this.elapsedTime)}`);let t=this.canvasElementRef?.nativeElement;if(t){let e=t.getContext("2d");e&&e.clearRect(0,0,t.width,t.height)}this.changeDetectorRef.detectChanges()}stopCamera(){this.videoStream&&(this.videoStream.getTracks().forEach(t=>t.stop()),this.videoStream=null),this.videoElementRef?.nativeElement.srcObject&&(this.videoElementRef.nativeElement.srcObject=null),this.isCameraReady=!1,this.changeDetectorRef.detectChanges()}processVideoFrame=()=>X(this,null,function*(){if(!this.isWorkoutActive||!this.videoElementRef||!this.canvasElementRef||!this.poseDetector||!this.modelReady){this.isWorkoutActive&&(this.animationFrameId=requestAnimationFrame(this.processVideoFrame));return}let t=this.videoElementRef.nativeElement,e=this.canvasElementRef.nativeElement;if(t.readyState<t.HAVE_CURRENT_DATA){this.animationFrameId=requestAnimationFrame(this.processVideoFrame);return}try{if((e.width!==t.videoWidth||e.height!==t.videoHeight)&&(e.width=t.videoWidth,e.height=t.videoHeight,t.videoWidth===0||t.videoHeight===0)){this.animationFrameId=requestAnimationFrame(this.processVideoFrame);return}let o=yield this.poseDetector.estimatePoses(t,{flipHorizontal:!1}),n=e.getContext("2d");if(n&&(n.clearRect(0,0,e.width,e.height),o&&o.length>0)){let i=o[0];this.drawPose(i.keypoints,n),this.analyzePoseForReps(i)}}catch(o){console.error("Error during pose estimation or drawing:",o),this.addFeedback("error","AI processing error. Workout may be affected.")}this.isWorkoutActive&&(this.animationFrameId=requestAnimationFrame(this.processVideoFrame))});drawPose(t,e){e.fillStyle="aqua";for(let i of t)i.score!=null&&i.score>=.3&&(e.beginPath(),e.arc(i.x,i.y,5,0,2*Math.PI),e.fill());let n=E3.getAdjacentPairs(or.MoveNet);e.strokeStyle="lime",e.lineWidth=3;for(let[i,s]of n){let a=t[i],l=t[s];a&&l&&(a.score??0)>=.3&&(l.score??0)>=.3&&(e.beginPath(),e.moveTo(a.x,a.y),e.lineTo(l.x,l.y),e.stroke())}}setExerciseLogic(t){this.currentRepCycleState="START",this.repCount=0,this.lastFramesStates={},this.addFeedback("info",`Switched to exercise: ${t}`),this.currentExercise=t,t==="Right Bicep Curl"?this.exerciseSpecificLogic=this.analyzeRightBicepCurl:t==="Left Bicep Curl"?this.exerciseSpecificLogic=this.analyzeLeftBicepCurl:t==="Alternating Bicep Curl"?this.exerciseSpecificLogic=this.analyzeAlternatingBicepCurl:t==="Kettlebell Snatch"?this.exerciseSpecificLogic=this.analyzeKettlebellSnatch:t==="Kettlebell Press"?this.exerciseSpecificLogic=this.analyzeKettlebellPress:t==="Goblet Squat"?this.exerciseSpecificLogic=this.analyzeGobletSquat:t==="Deadlift"?this.exerciseSpecificLogic=this.analyzeDeadlift:t==="Kettlebell Jerk"?this.exerciseSpecificLogic=this.analyzeKettlebellJerk:(this.addFeedback("warning",`No specific logic implemented for exercise: ${t}`),this.exerciseSpecificLogic=null),this.changeDetectorRef.detectChanges()}analyzePoseForReps(t){this.exerciseSpecificLogic&&this.exerciseSpecificLogic.call(this,t)}analyzeRightBicepCurl(t){let e=t.keypoints.find(s=>s.name==="right_shoulder"),o=t.keypoints.find(s=>s.name==="right_elbow"),n=t.keypoints.find(s=>s.name==="right_wrist");if(!e||!o||!n||(e.score??0)<this.KEYPOINT_SCORE_THRESHOLD||(o.score??0)<this.KEYPOINT_SCORE_THRESHOLD||(n.score??0)<this.KEYPOINT_SCORE_THRESHOLD)return;let i=this.calculateAngle(e,o,n);i!==null&&(this.currentRepCycleState==="START"?i<this.BICEP_ELBOW_ANGLE_UP&&(this.currentRepCycleState="UP",this.addFeedback("info",`Curl: Up phase detected (Angle: ${i.toFixed(0)}\xB0)`)):this.currentRepCycleState==="UP"&&i>this.BICEP_ELBOW_ANGLE_DOWN&&(this.incrementRep(),this.currentRepCycleState="START",this.addFeedback("success",`Curl: Down phase, Rep Complete! (Angle: ${i.toFixed(0)}\xB0)`)))}analyzeLeftBicepCurl(t){let e=t.keypoints.find(s=>s.name==="left_shoulder"),o=t.keypoints.find(s=>s.name==="left_elbow"),n=t.keypoints.find(s=>s.name==="left_wrist");if(!e||!o||!n||(e.score??0)<this.KEYPOINT_SCORE_THRESHOLD||(o.score??0)<this.KEYPOINT_SCORE_THRESHOLD||(n.score??0)<this.KEYPOINT_SCORE_THRESHOLD)return;let i=this.calculateAngle(e,o,n);i!==null&&(this.currentRepCycleState==="START"?i<this.BICEP_ELBOW_ANGLE_UP&&(this.currentRepCycleState="UP",this.addFeedback("info",`Left Curl: Up phase detected (Angle: ${i.toFixed(0)}\xB0)`)):this.currentRepCycleState==="UP"&&i>this.BICEP_ELBOW_ANGLE_DOWN&&(this.incrementRep(),this.currentRepCycleState="START",this.addFeedback("success",`Left Curl: Down phase, Rep Complete! (Angle: ${i.toFixed(0)}\xB0)`)))}analyzeAlternatingBicepCurl(t){let e=t.keypoints.find(c=>c.name==="right_shoulder"),o=t.keypoints.find(c=>c.name==="right_elbow"),n=t.keypoints.find(c=>c.name==="right_wrist"),i=t.keypoints.find(c=>c.name==="left_shoulder"),s=t.keypoints.find(c=>c.name==="left_elbow"),a=t.keypoints.find(c=>c.name==="left_wrist");if(!e||!o||!n||!i||!s||!a||(e.score??0)<this.KEYPOINT_SCORE_THRESHOLD||(o.score??0)<this.KEYPOINT_SCORE_THRESHOLD||(n.score??0)<this.KEYPOINT_SCORE_THRESHOLD||(i.score??0)<this.KEYPOINT_SCORE_THRESHOLD||(s.score??0)<this.KEYPOINT_SCORE_THRESHOLD||(a.score??0)<this.KEYPOINT_SCORE_THRESHOLD)return;let l=this.calculateAngle(e,o,n),u=this.calculateAngle(i,s,a);l===null||u===null||(this.alternatingArm||(this.alternatingArm="right"),this.alternatingArm==="right"?this.currentRepCycleState==="START"?l<this.BICEP_ELBOW_ANGLE_UP&&(this.currentRepCycleState="UP",this.addFeedback("info",`Alt Curl: Right up phase (Angle: ${l.toFixed(0)}\xB0)`)):this.currentRepCycleState==="UP"&&l>this.BICEP_ELBOW_ANGLE_DOWN&&(this.incrementRep(),this.currentRepCycleState="START",this.alternatingArm="left",this.addFeedback("success",`Alt Curl: Right down, Rep Complete! (Angle: ${l.toFixed(0)}\xB0)`)):this.alternatingArm==="left"&&(this.currentRepCycleState==="START"?u<this.BICEP_ELBOW_ANGLE_UP&&(this.currentRepCycleState="UP",this.addFeedback("info",`Alt Curl: Left up phase (Angle: ${u.toFixed(0)}\xB0)`)):this.currentRepCycleState==="UP"&&u>this.BICEP_ELBOW_ANGLE_DOWN&&(this.incrementRep(),this.currentRepCycleState="START",this.alternatingArm="right",this.addFeedback("success",`Alt Curl: Left down, Rep Complete! (Angle: ${u.toFixed(0)}\xB0)`))))}analyzeKettlebellSnatch(t){this.addFeedback("info","Snatch: Analyzing (placeholder)...");let e=t.keypoints.find(n=>n.name==="right_shoulder"),o=t.keypoints.find(n=>n.name==="right_wrist");e&&o&&(e.score??0)>.5&&(o.score??0)>.5&&o.y<e.y-this.SNATCH_ARM_LOCKOUT_SHOULDER_WRIST_ALIGNMENT_Y}analyzeKettlebellPress(t){let e=t.keypoints.find(p=>p.name==="right_shoulder"),o=t.keypoints.find(p=>p.name==="right_elbow"),n=t.keypoints.find(p=>p.name==="right_wrist"),i=t.keypoints.find(p=>p.name==="right_hip");if(!e||!o||!n||!i||[e,o,n,i].some(p=>(p.score??0)<this.KEYPOINT_SCORE_THRESHOLD))return;let s=this.calculateAngle(e,o,n);if(s===null)return;let a=s>this.PRESS_ELBOW_ANGLE_UP&&n.y<e.y+this.PRESS_WRIST_SHOULDER_Y_DIFF_UP,l=s<this.PRESS_ELBOW_ANGLE_RACK&&Math.abs(n.y-e.y)<this.PRESS_WRIST_SHOULDER_Y_DIFF_RACK+20,u=this.isStateStable("press_overhead",a),c=this.isStateStable("press_racked",l);if(this.currentRepCycleState==="START")u&&(this.currentRepCycleState="UP",this.addFeedback("info",`Press: Lockout achieved (Elbow: ${s.toFixed(0)}\xB0)`),this.lastFramesStates={});else if(this.currentRepCycleState==="UP"){if(c)this.incrementRep(),this.addFeedback("success","Press: Rep complete! Returned to rack."),this.currentRepCycleState="START",this.lastFramesStates={};else if(u){let p=Math.abs(n.x-e.x),d=Math.abs(e.x-i.x);p>this.PRESS_WRIST_SHOULDER_X_ALIGNMENT&&this.addFeedback("warning","Press: Check wrist/shoulder horizontal alignment at lockout."),d>this.PRESS_TORSO_LEAN_X_ALIGNMENT&&this.addFeedback("warning","Press: Possible torso lean at lockout. Stay upright.")}}}analyzeGobletSquat(t){let e=t.keypoints.find(g=>g.name==="left_hip"),o=t.keypoints.find(g=>g.name==="right_hip"),n=t.keypoints.find(g=>g.name==="left_knee"),i=t.keypoints.find(g=>g.name==="right_knee"),s=t.keypoints.find(g=>g.name==="left_ankle"),a=t.keypoints.find(g=>g.name==="right_ankle");if([e,o,n,i,s,a].some(g=>(g?.score??0)<this.KEYPOINT_SCORE_THRESHOLD))return;let l=this.calculateAngle(e,n,s),u=this.calculateAngle(o,i,a);if(!l||!u)return;let c=(l+u)/2,p=c<90,d=c>160,m=this.isStateStable("goblet_down",p),f=this.isStateStable("goblet_up",d);this.currentRepCycleState==="START"&&m?(this.currentRepCycleState="UP",this.addFeedback("info","Squat: Down phase"),this.lastFramesStates={}):this.currentRepCycleState==="UP"&&f&&(this.incrementRep(),this.addFeedback("success","Squat: Rep complete!"),this.currentRepCycleState="START",this.lastFramesStates={})}analyzeDeadlift(t){let e=t.keypoints.find(g=>g.name==="left_hip"),o=t.keypoints.find(g=>g.name==="right_hip"),n=t.keypoints.find(g=>g.name==="left_knee"),i=t.keypoints.find(g=>g.name==="right_knee"),s=t.keypoints.find(g=>g.name==="left_shoulder"),a=t.keypoints.find(g=>g.name==="right_shoulder");if([e,o,n,i,s,a].some(g=>(g?.score??0)<this.KEYPOINT_SCORE_THRESHOLD))return;let l=this.calculateAngle(s,e,n),u=this.calculateAngle(a,o,i);if(l===null||u===null)return;let c=(l+u)/2,p=c<90,d=c>160,m=this.isStateStable("deadlift_bottom",p),f=this.isStateStable("deadlift_top",d);this.currentRepCycleState==="START"&&m?(this.currentRepCycleState="UP",this.addFeedback("info","Deadlift: Bottom position"),this.lastFramesStates={}):this.currentRepCycleState==="UP"&&f&&(this.incrementRep(),this.addFeedback("success","Deadlift: Rep complete!"),this.currentRepCycleState="START",this.lastFramesStates={})}analyzeKettlebellJerk(t){let e=t.keypoints.find(y=>y.name==="right_shoulder"),o=t.keypoints.find(y=>y.name==="right_elbow"),n=t.keypoints.find(y=>y.name==="right_wrist"),i=t.keypoints.find(y=>y.name==="right_hip"),s=t.keypoints.find(y=>y.name==="right_knee"),a=t.keypoints.find(y=>y.name==="right_ankle");if([e,o,n,i,s,a].some(y=>(y?.score??0)<this.KEYPOINT_SCORE_THRESHOLD))return;let l=this.calculateAngle(e,o,n),u=this.calculateAngle(i,s,a),c=n.y<e.y+this.JERK_WRIST_SHOULDER_Y_DIFF_LOCKOUT,p=Math.abs(n.x-e.x),d=u<this.JERK_KNEE_DIP_ANGLE,m=u<this.JERK_SECOND_DIP_KNEE_ANGLE,f=this.isStateStable("jerk_dip",d),g=this.isStateStable("jerk_second_dip",m),x=this.isStateStable("jerk_lockout",l>this.JERK_ELBOW_LOCKOUT_ANGLE&&c);this.currentRepCycleState==="START"?f&&(this.currentRepCycleState="UP",this.addFeedback("info","Jerk: First dip detected (drive)."),this.lastFramesStates={}):this.currentRepCycleState==="UP"&&(g&&c&&(this.currentRepCycleState="UP",this.addFeedback("info","Jerk: Second dip under bell.")),x&&(p>this.JERK_WRIST_SHOULDER_X_ALIGNMENT&&this.addFeedback("warning","Jerk: Check wrist/shoulder alignment at lockout."),this.incrementRep(),this.addFeedback("success","Jerk: Rep complete!"),this.currentRepCycleState="START",this.lastFramesStates={}))}calculateAngle(t,e,o){if(!t||!e||!o||(t.score??0)<this.KEYPOINT_SCORE_THRESHOLD||(e.score??0)<this.KEYPOINT_SCORE_THRESHOLD||(o.score??0)<this.KEYPOINT_SCORE_THRESHOLD)return null;let n=t.x-e.x,i=t.y-e.y,s=o.x-e.x,a=o.y-e.y,l=n*s+i*a,u=Math.sqrt(n*n+i*i),c=Math.sqrt(s*s+a*a);if(u===0||c===0)return null;let p=Math.max(-1,Math.min(1,l/(u*c)));return Math.acos(p)*(180/Math.PI)}isStateStable(t,e){return this.lastFramesStates[t]||(this.lastFramesStates[t]=[]),this.lastFramesStates[t].push(e),this.lastFramesStates[t].length>this.STABLE_FRAME_COUNT&&this.lastFramesStates[t].shift(),this.lastFramesStates[t].length<this.STABLE_FRAME_COUNT?!1:this.lastFramesStates[t].every(o=>o===e)}incrementRep(){this.ngZone.run(()=>{this.repCount++,this.addFeedback("success",`Rep ${this.repCount} counted!`)})}addFeedback(t,e){this.ngZone.run(()=>{let o=`[${new Date().toLocaleTimeString()}] ${e}`;this.feedbackMessages.unshift({type:t,message:o}),this.feedbackMessages.length>20&&this.feedbackMessages.pop(),this.changeDetectorRef.detectChanges()})}formatTime(t){let e=Math.floor(t/60),o=t%60;return`${e.toString().padStart(2,"0")}:${o.toString().padStart(2,"0")}`}toggleFeedbackVisibility(){this.isFeedbackVisible=!this.isFeedbackVisible,this.changeDetectorRef.detectChanges()}toggleControlsExpansion(){this.isControlsExpanded=!this.isControlsExpanded,this.changeDetectorRef.detectChanges()}startRecording(){if(!this.videoStream){this.addFeedback("warning","No video stream to record.");return}if(this.mediaRecorder&&this.mediaRecorder.state==="recording"){this.addFeedback("info","Already recording.");return}try{this.recordedChunks=[];let t=["video/webm; codecs=vp9,opus","video/webm; codecs=vp9","video/webm; codecs=vp8,opus","video/webm; codecs=vp8","video/mp4","video/webm"],e=t.find(o=>MediaRecorder.isTypeSupported(o));if(!e){this.addFeedback("error","No supported video format for recording."),console.error("No supported MediaRecorder MimeType found from list:",t);return}this.addFeedback("info",`Using recording format: ${e}`),this.mediaRecorder=new MediaRecorder(this.videoStream,{mimeType:e}),this.mediaRecorder.ondataavailable=o=>{o.data.size>0&&this.recordedChunks.push(o.data)},this.mediaRecorder.onstop=()=>{let o=new Blob(this.recordedChunks,{type:e}),n=URL.createObjectURL(o),i=document.createElement("a");document.body.appendChild(i),i.style.display="none",i.href=n;let s=e.includes("mp4")?"mp4":e.includes("webm")?"webm":"video";i.download=`workout-${new Date().toISOString().replace(/:/g,"-")}.${s}`,i.click(),window.URL.revokeObjectURL(n),i.remove(),this.addFeedback("success","Video recording saved."),this.isRecording=!1,this.changeDetectorRef.detectChanges()},this.mediaRecorder.onerror=o=>{let n=o;console.error("MediaRecorder error:",n.error||o),this.addFeedback("error",`Recording error: ${n.error?.name||"Unknown error"}`),this.isRecording=!1,this.changeDetectorRef.detectChanges()},this.mediaRecorder.start(),this.isRecording=!0,this.addFeedback("info","Recording started."),this.changeDetectorRef.detectChanges()}catch(t){console.error("Error starting recording:",t),this.addFeedback("error",`Failed to start recording: ${t instanceof Error?t.message:String(t)}`),this.isRecording=!1,this.changeDetectorRef.detectChanges()}}stopRecording(){this.mediaRecorder&&this.mediaRecorder.state==="recording"?(this.mediaRecorder.stop(),this.addFeedback("info","Stopping recording...")):(this.addFeedback("info","Not currently recording."),this.isRecording&&(this.isRecording=!1,this.changeDetectorRef.detectChanges()))}toggleRecording(){this.isRecording?this.stopRecording():this.startRecording()}initializeFabPosition(){this.fabPosition.x=window.innerWidth-56-20,this.fabPosition.y=window.innerHeight-56-20}onFabMouseDown(t){if(t.button!==0)return;t.preventDefault(),this.isFabDragging=!1;let o=t.currentTarget.getBoundingClientRect();this.fabDragStartOffset.x=t.clientX-o.left,this.fabDragStartOffset.y=t.clientY-o.top;let n=5,i=t.clientX,s=t.clientY,a=u=>{let c=u.clientX-i,p=u.clientY-s;!this.isFabDragging&&(Math.abs(c)>n||Math.abs(p)>n)&&(this.isFabDragging=!0),this.isFabDragging&&this.updateFabPosition(u.clientX,u.clientY)},l=()=>{window.removeEventListener("mousemove",a),window.removeEventListener("mouseup",l),this.isFabDragging=!1};window.addEventListener("mousemove",a),window.addEventListener("mouseup",l)}onFabTouchStart(t){if(t.touches.length!==1)return;t.preventDefault(),this.isFabDragging=!1;let o=t.currentTarget.getBoundingClientRect(),n=t.touches[0];this.fabDragStartOffset.x=n.clientX-o.left,this.fabDragStartOffset.y=n.clientY-o.top;let i=5,s=n.clientX,a=n.clientY,l=!1,u=p=>{if(p.touches.length!==1)return;let d=p.touches[0],m=d.clientX-s,f=d.clientY-a;!this.isFabDragging&&(Math.abs(m)>i||Math.abs(f)>i)&&(this.isFabDragging=!0,l=!0),this.isFabDragging&&this.updateFabPosition(d.clientX,d.clientY)},c=()=>{window.removeEventListener("touchmove",u),window.removeEventListener("touchend",c),l||this.toggleControlsExpansion(),this.isFabDragging=!1};window.addEventListener("touchmove",u,{passive:!1}),window.addEventListener("touchend",c)}onDocumentMouseMove(t){this.isFabDragging&&(t.preventDefault(),this.updateFabPosition(t.clientX,t.clientY))}onDocumentTouchMove(t){if(!this.isFabDragging||t.touches.length!==1)return;let e=t.touches[0];this.updateFabPosition(e.clientX,e.clientY)}onDocumentMouseUp(t){this.isFabDragging&&(this.isFabDragging=!1)}onDocumentTouchEnd(t){this.isFabDragging&&(this.isFabDragging=!1)}updateFabPosition(t,e){let o=this.hostElement.nativeElement.getBoundingClientRect(),n=56,i=t-this.fabDragStartOffset.x-o.left,s=e-this.fabDragStartOffset.y-o.top;i=Math.max(0,Math.min(i,o.width-n)),s=Math.max(0,Math.min(s,o.height-n)),this.fabPosition={x:i,y:s}}static \u0275fac=function(e){return new(e||r)(tS(Jv))};static \u0275cmp=go({type:r,selectors:[["app-workout-tracker"]],viewQuery:function(e,o){if(e&1&&(Un(Fee,5),Un(Oee,5)),e&2){let n;Gn(n=Hn())&&(o.videoElementRef=n.first),Gn(n=Hn())&&(o.canvasElementRef=n.first)}},hostBindings:function(e,o){e&1&&ie("mousemove",function(i){return o.onDocumentMouseMove(i)},Xc)("touchmove",function(i){return o.onDocumentTouchMove(i)},Xc)("mouseup",function(i){return o.onDocumentMouseUp(i)},Xc)("touchend",function(i){return o.onDocumentTouchEnd(i)},Xc)},decls:48,vars:19,consts:[["videoElement",""],["canvasElement",""],[1,"workout-tracker-container"],["class","rep-counter-display-area",4,"ngIf"],[1,"video-area"],["autoplay","","playsinline","","muted","",1,"video-feed"],[1,"pose-canvas"],["class","video-placeholder",4,"ngIf"],[1,"controls-fab",3,"click","mousedown","touchstart"],["width","50px","height","50px","viewBox","0 0 24 24","xmlns","http://www.w3.org/2000/svg","fill","currentColor"],["d","M19.43,12.98c0.04-0.32,0.07-0.64,0.07-0.98s-0.03-0.66-0.07-0.98l2.11-1.65c0.19-0.15,0.24-0.42,0.12-0.64 l-2-3.46c-0.12-0.22-0.39-0.3-0.61-0.22l-2.49,1c-0.52-0.4-1.08-0.73-1.69-0.98l-0.38-2.65C14.46,2.18,14.25,2,14,2h-4 c-0.25,0-0.46,0.18-0.49,0.42L9.11,5.07C8.5,5.32,7.94,5.66,7.41,6.05L4.92,5.05C4.7,4.96,4.44,5.05,4.32,5.26L2.32,8.72 c-0.12,0.22-0.07,0.49,0.12,0.64l2.11,1.65C4.49,11.34,4.46,11.67,4.46,12s0.03,0.66,0.07,0.98l-2.11,1.65 c-0.19,0.15-0.24,0.42-0.12,0.64l2,3.46c0.12,0.22,0.39,0.3,0.61,0.22l2.49-1c0.52,0.4,1.08,0.73,1.69,0.98l0.38,2.65 c0.03,0.24,0.24,0.42,0.49,0.42h4c0.25,0,0.46-0.18,0.49-0.42l0.38-2.65c0.61-0.25,1.17-0.59,1.69-0.98l2.49,1 c0.23,0.09,0.49,0,0.61-0.22l2-3.46c0.12-0.22,0.07-0.49-0.12-0.64L19.43,12.98z M12,15.5c-1.93,0-3.5-1.57-3.5-3.5 s1.57-3.5,3.5-3.5s3.5,1.57,3.5,3.5S13.93,15.5,12,15.5z"],[1,"expandable-controls-panel"],[1,"main-controls"],[1,"exercise-selector"],["for","exercise"],["id","exercise",3,"ngModelChange","ngModel"],["value","Right Bicep Curl"],["value","Left Bicep Curl"],["value","Alternating Bicep Curl"],["value","Kettlebell Snatch"],["value","Kettlebell Press"],["value","Goblet Squat"],["value","Deadlift"],["value","Kettlebell Jerk"],[1,"status-info"],[1,"timer"],[1,"action-buttons"],["class","action-btn start-btn",3,"disabled","click",4,"ngIf"],["class","action-btn stop-btn",3,"click",4,"ngIf"],["class","action-btn record-btn",3,"recording","click",4,"ngIf"],[1,"action-btn","feedback-modal-btn",3,"click"],["class","modal-overlay",3,"click",4,"ngIf"],[1,"rep-counter-display-area"],[1,"rep-count-value"],[1,"rep-count-label"],[1,"video-placeholder"],[4,"ngIf"],["class","action-btn retry-btn",3,"click",4,"ngIf"],[1,"action-btn","retry-btn",3,"click"],[1,"action-btn","start-btn",3,"click","disabled"],[1,"action-btn","stop-btn",3,"click"],[1,"action-btn","record-btn",3,"click"],[1,"modal-overlay",3,"click"],[1,"modal-content",3,"click"],[1,"modal-header"],[1,"modal-close-btn",3,"click"],[1,"modal-body"],[3,"ngClass",4,"ngFor","ngForOf"],["class","no-feedback",4,"ngIf"],[3,"ngClass"],[1,"no-feedback"]],template:function(e,o){if(e&1){let n=ke();I(0,"div",2),ae(1,Lee,5,1,"div",3),I(2,"div",4),pe(3,"video",5,0)(5,"canvas",6,1),ae(7,Wee,4,3,"div",7)(8,Kee,5,4,"div",7),E(),I(9,"button",8),ie("click",function(){return re(n),oe(o.toggleControlsExpansion())})("mousedown",function(s){return re(n),oe(o.onFabMouseDown(s))})("touchstart",function(s){return re(n),oe(o.onFabTouchStart(s))}),_e(),I(10,"svg",9),pe(11,"path",10),E()(),Ge(),I(12,"div",11)(13,"div",12)(14,"div",13)(15,"label",14),O(16,"Exercise: "),E(),I(17,"select",15),ts("ngModelChange",function(s){return re(n),es(o.currentExercise,s)||(o.currentExercise=s),oe(s)}),ie("ngModelChange",function(s){return re(n),oe(o.setExerciseLogic(s))}),I(18,"option",16),O(19,"Right Bicep Curl"),E(),I(20,"option",17),O(21,"Left Bicep Curl"),E(),I(22,"option",18),O(23,"Alternating Bicep Curl"),E(),I(24,"option",19),O(25,"Kettlebell Snatch"),E(),I(26,"option",20),O(27,"Kettlebell Press"),E(),I(28,"option",21),O(29,"Goblet Squat"),E(),I(30,"option",22),O(31,"Deadlift"),E(),I(32,"option",23),O(33,"Kettlebell Jerk"),E()()(),I(34,"div",24)(35,"span"),O(36),E(),I(37,"div",25),O(38,"Time: "),I(39,"span"),O(40),E()()(),I(41,"div",26),ae(42,qee,2,1,"button",27)(43,jee,2,0,"button",28)(44,Xee,2,3,"button",29),I(45,"button",30),ie("click",function(){return re(n),oe(o.toggleFeedbackVisibility())}),O(46," View Log "),E()()()(),ae(47,Zee,11,2,"div",31),E()}e&2&&(D(),B("ngIf",o.isWorkoutActive),D(2),Po("hidden",!o.isCameraReady),D(4),B("ngIf",!o.isCameraReady&&!o.modelReady),D(),B("ngIf",o.isCameraReady&&!o.isWorkoutActive&&(!(o.videoStream!=null&&o.videoStream.active)||!o.modelReady)),D(),Qc("left",o.fabPosition.x,"px")("top",o.fabPosition.y,"px"),D(3),Po("expanded",o.isControlsExpanded),D(5),Ji("ngModel",o.currentExercise),D(19),Gt("",o.currentExercise," - ",o.modelReady?"AI Ready":"AI Loading..."),D(4),We(o.formatTime(o.elapsedTime)),D(2),B("ngIf",!o.isWorkoutActive),D(),B("ngIf",o.isWorkoutActive),D(),B("ngIf",o.isCameraReady&&(o.videoStream==null?null:o.videoStream.active)),D(3),B("ngIf",o.isFeedbackVisible))},dependencies:[vo,da,Yo,bo,sS,ba,kd,Id,_d,xa,ya],styles:["[_nghost-%COMP%]{display:flex;flex-direction:column;width:100%;height:100vh;overflow:hidden;background-color:#343a40}.workout-tracker-container[_ngcontent-%COMP%]{display:flex;flex-direction:column;width:100%;flex-grow:1;overflow:hidden;position:relative}.rep-counter-display-area[_ngcontent-%COMP%]{position:absolute;top:20px;left:50%;transform:translate(-50%);z-index:10;background-color:#0009;padding:10px 25px;border-radius:10px;text-align:center;color:#f0f0f0;box-shadow:0 2px 8px #0000004d}.rep-counter-display-area[_ngcontent-%COMP%]   .rep-count-value[_ngcontent-%COMP%]{font-size:4rem;font-weight:700;line-height:1;color:#28a745;text-shadow:1px 1px 2px rgba(0,0,0,.5)}.rep-counter-display-area[_ngcontent-%COMP%]   .rep-count-label[_ngcontent-%COMP%]{font-size:1rem;text-transform:uppercase;letter-spacing:1px;margin-top:2px}.video-area[_ngcontent-%COMP%]{z-index:1;position:relative;width:100%;flex-grow:1;background-color:#000;overflow:hidden;display:flex;justify-content:center;align-items:center}.video-feed[_ngcontent-%COMP%]{display:block;width:100%;height:100%;object-fit:contain}.video-feed.hidden[_ngcontent-%COMP%]{display:none}.pose-canvas[_ngcontent-%COMP%]{position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none}.video-placeholder[_ngcontent-%COMP%]{color:#f8f9fa;text-align:center;padding:20px}.video-placeholder[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{background-color:#007bff}.controls-fab[_ngcontent-%COMP%]{position:absolute;bottom:20px;right:20px;width:56px;height:56px;background-color:#007bff;color:#fff;border-radius:50%;border:none;box-shadow:0 4px 12px #0000004d;display:flex;justify-content:center;align-items:center;cursor:pointer;z-index:990;transition:background-color .3s ease,transform .3s ease}.controls-fab[_ngcontent-%COMP%]:hover{background-color:#0062cc;transform:scale(1.05)}.controls-fab[_ngcontent-%COMP%]   .material-icons-outlined[_ngcontent-%COMP%]{font-size:28px}.expandable-controls-panel[_ngcontent-%COMP%]{position:absolute;bottom:0;left:0;width:100%;background-color:#1e1e1ef2;box-shadow:0 -3px 15px #0006;transform:translateY(100%);transition:transform .3s ease-in-out,opacity .3s ease-in-out;opacity:0;z-index:980;display:flex;justify-content:center;padding-top:15px;padding-bottom:10px;box-sizing:border-box}.expandable-controls-panel.expanded[_ngcontent-%COMP%]{transform:translateY(0);opacity:1}.main-controls[_ngcontent-%COMP%]{color:#f8f9fa;padding:10px 15px;border-radius:8px;width:100%;max-width:700px;display:flex;flex-direction:column;gap:12px}.exercise-selector[_ngcontent-%COMP%]{display:flex;align-items:center;gap:8px}.exercise-selector[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{font-size:.9em}.exercise-selector[_ngcontent-%COMP%]   select[_ngcontent-%COMP%]{padding:6px 10px;border-radius:4px;border:1px solid #6c757d;background-color:#343a40;color:#f8f9fa;flex-grow:1}.status-info[_ngcontent-%COMP%]{display:flex;justify-content:space-around;align-items:center;font-size:.9em;text-align:center;flex-wrap:wrap;gap:10px}.status-info[_ngcontent-%COMP%]   .timer[_ngcontent-%COMP%]{background-color:#0003;padding:5px 10px;border-radius:4px}.status-info[_ngcontent-%COMP%]   .timer[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{font-weight:700;color:#007bff}.action-buttons[_ngcontent-%COMP%]{display:flex;justify-content:center;gap:10px;flex-wrap:wrap}.action-btn[_ngcontent-%COMP%]{padding:10px 15px;font-size:.9em;border:none;border-radius:5px;cursor:pointer;transition:background-color .2s ease,transform .1s ease;color:#fff;min-width:120px;text-align:center}.action-btn[_ngcontent-%COMP%]:hover{opacity:.9}.action-btn[_ngcontent-%COMP%]:active{transform:translateY(1px)}.action-btn[_ngcontent-%COMP%]:disabled{background-color:#6c757d!important;cursor:not-allowed;opacity:.7}.start-btn[_ngcontent-%COMP%]{background-color:#28a745}.start-btn[_ngcontent-%COMP%]:hover{background-color:#1e7e34}.stop-btn[_ngcontent-%COMP%]{background-color:#dc3545}.stop-btn[_ngcontent-%COMP%]:hover{background-color:#bd2130}.record-btn[_ngcontent-%COMP%]{background-color:#17a2b8}.record-btn[_ngcontent-%COMP%]:hover{background-color:#117a8b}.record-btn.recording[_ngcontent-%COMP%]{background-color:#ffc107;color:#343a40}.record-btn.recording[_ngcontent-%COMP%]:hover{background-color:#d39e00}.feedback-modal-btn[_ngcontent-%COMP%]{background-color:#6c757d}.feedback-modal-btn[_ngcontent-%COMP%]:hover{background-color:#545b62}.modal-overlay[_ngcontent-%COMP%]{position:fixed;top:0;left:0;width:100%;height:100%;background-color:#0009;display:flex;justify-content:center;align-items:center;z-index:1000;padding:20px;box-sizing:border-box}.modal-content[_ngcontent-%COMP%]{background-color:#fff;color:#212529;padding:20px;border-radius:8px;box-shadow:0 5px 15px #0000004d;width:100%;max-width:600px;max-height:80vh;display:flex;flex-direction:column}.modal-header[_ngcontent-%COMP%]{display:flex;justify-content:space-between;align-items:center;border-bottom:1px solid #eee;padding-bottom:10px;margin-bottom:15px}.modal-header[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%]{margin:0;font-size:1.4em}.modal-close-btn[_ngcontent-%COMP%]{background:none;border:none;font-size:1.8em;line-height:1;cursor:pointer;padding:0 5px;color:#6c757d}.modal-close-btn[_ngcontent-%COMP%]:hover{color:#343a40}.modal-body[_ngcontent-%COMP%]{flex-grow:1}.modal-body[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%]{list-style-type:none;padding:0;margin:0}.modal-body[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]{padding:6px 0;font-size:.9em;border-bottom:1px solid #f0f0f0;word-break:break-word}.modal-body[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]:last-child{border-bottom:none}.modal-body[_ngcontent-%COMP%]   .feedback-info[_ngcontent-%COMP%]{color:#007bff}.modal-body[_ngcontent-%COMP%]   .feedback-success[_ngcontent-%COMP%]{color:#28a745}.modal-body[_ngcontent-%COMP%]   .feedback-warning[_ngcontent-%COMP%]{color:#ffc107}.modal-body[_ngcontent-%COMP%]   .feedback-error[_ngcontent-%COMP%]{color:#dc3545}.no-feedback[_ngcontent-%COMP%]{color:#6c757d;font-style:italic;padding:20px 0;text-align:center}"]})};var ACt=[{path:"",component:Pd,title:"My Routines"},{path:"routine/new",component:gn,data:{mode:"routineBuilder",isNew:!0},title:"Create New Routine"},{path:"routine/edit/:routineId",component:gn,data:{mode:"routineBuilder",isNew:!1},title:"Edit Routine"},{path:"routine/view/:routineId",component:gn,data:{mode:"routineBuilder",isNew:!1,isView:!0},title:"View Routine"},{path:"log/manual/new",component:gn,data:{mode:"manualLogEntry",isNew:!0},title:"Log Past Workout"},{path:"log/manual/new/from/:routineId",component:gn,data:{mode:"manualLogEntry",isNew:!0,prefillFromRoutine:!0},title:"Log Workout from Routine"},{path:"log/manual/edit/:logId",component:gn,data:{mode:"manualLogEntry",isNew:!1},title:"Edit Workout Log"},{path:"play/:routineId",component:Od,title:"Workout Session"},{path:"summary/:logId",component:Ld,title:"Workout Summary"},{path:"routine/kb-workout-tracker",component:d0}];export{ACt as WORKOUT_TRACKER_ROUTES};
