import{b as z}from"./chunk-LKJXIS4Z.js";import{$ as F,D as O,Eb as Y,G as T,N as I,O as $,P as q,Q as B,R as k,V as R,Xb as _,b as g,ba as V,g as m,ga as G,h as A,o as M,va as U}from"./chunk-BZUOG3X2.js";import{g as v}from"./chunk-GAL4ENT6.js";var D=(function(i){return i.readonly="readonly",i.readwrite="readwrite",i})(D||{}),X=new q(null),H=new q("Indexed DB"),ee=new q("Server Indexed DB");function te(i,a){return i.objectStoreNames.contains(a)}function w(i,a,p){if(!i){p("You need to use the openDatabase function to create a database before you query it!");return}te(i,a)||p(`objectStore does not exists: ${a}`)}function j(i,a){let p=i.transaction(a.storeName,a.dbMode);return p.onerror=a.error,p.onabort=a.abort,p}function S(i,a,p,e){return{storeName:a,dbMode:i,error:n=>{p(n)},abort:n=>{p(n)}}}var K=[];function y(i,a,p,e){return new Promise((n,t)=>{i||t("IndexedDB not available");let r=i.open(a,p),o;r.onsuccess=()=>{o=r.result,K.push(o),n(o)},r.onerror=()=>{t(`IndexedDB error: ${r.error}`)},typeof e=="function"&&(r.onupgradeneeded=c=>{e(c,o)})})}function P(i,a,p,e,n){return v(this,null,function*(){return new Promise((t,r)=>{if(!i)return;let o=i.open(a,p);o.onupgradeneeded=c=>v(null,null,function*(){let s=c.target.result,d=e.map(l=>v(null,null,function*(){if(!s.objectStoreNames.contains(l.store)){let u=s.createObjectStore(l.store,l.storeConfig);for(let h of l.storeSchema)u.createIndex(h.name,h.keypath,h.options)}}));yield Promise.all(d);let f=n&&n();if(f){let l=Object.keys(f).map(u=>parseInt(u,10)).filter(u=>u>c.oldVersion).sort((u,h)=>u-h);for(let u of l)f[u](s,o.transaction)}s.close(),t()}),o.onsuccess=c=>{c.target.result.close(),t()},o.onerror=c=>{r(c)}})})}function re(i,a,p){if(!i||!a||!p)throw Error('Params: "dbName", "version", "storeName" are mandatory.');return new g(e=>{try{let n=a+1,t=indexedDB.open(i,n);t.onupgradeneeded=r=>{let o=r.target.result;o.deleteObjectStore(p),o.close(),console.log("onupgradeneeded"),e.next(),e.complete()},t.onerror=r=>e.error(r)}catch(n){e.error(n)}})}function ne(i){return new Promise((a,p)=>{if(!i){p(new Error("No database to close"));return}try{i.close(),a()}catch(e){p(`Error closing database: ${e}`)}})}function x(){return function(i,a,p){let e=p.value;return p.value=function(...n){let t=e.apply(this,n);return t instanceof g?t.pipe(T(()=>v(this,null,function*(){let r=K.map(o=>v(this,null,function*(){yield ne(o)}));yield Promise.all(r),K.length=0}))):t},p}}var oe=(()=>{let a=class a{constructor(e,n){this.dbConfigs=e,this.indexedDB=n,this.defaultDatabaseName=null,Object.values(this.dbConfigs).forEach((t,r,o)=>this.instanciateConfig(t,o.length===1))}instanciateConfig(e,n){return v(this,null,function*(){if(!e.name)throw new Error("NgxIndexedDB: Please, provide the dbName in the configuration");if((e.isDefault??!1)&&this.defaultDatabaseName)throw new Error("NgxIndexedDB: Only one database can be set as default");((e.isDefault??!1)&&!this.defaultDatabaseName||n)&&(this.defaultDatabaseName=e.name,this.selectedDb=e.name),yield P(this.indexedDB,e.name,e.version,e.objectStoresMeta,e.migrationFactory),y(this.indexedDB,e.name).then(t=>{t.version!==e.version&&(Y()&&(console.warn(`
            Your DB Config doesn't match the most recent version of the DB with name ${e.name}, please update it
            DB current version: ${t.version};
            Your configuration: ${e.version};
            `),console.warn(`Using latest version ${t.version}`)),this.dbConfigs[e.name].version=t.version),t.close()})})}get dbConfig(){return this.dbConfigs[this.selectedDb]}getDatabaseVersion(){return new g(e=>{y(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(n=>{e.next(n.version),e.complete()}).catch(n=>e.error(`error during get version of database => ${n} `))})}selectDb(e){if(e=e??this.defaultDatabaseName,!e)throw new Error("No database name specified and no default database set.");if(!Object.keys(this.dbConfigs).includes(e))throw new Error(`NgxIndexedDB: Database ${e} is not initialized.`);this.selectedDb=e}createObjectStore(e,n){return v(this,null,function*(){let t=[e];yield P(this.indexedDB,this.dbConfig.name,++this.dbConfig.version,t,n)})}createDynamicObjectStore(e,n){return v(this,null,function*(){let t=[e];yield P(this.indexedDB,this.dbConfig.name,this.dbConfig.version,t,n)})}add(e,n,t){return new g(r=>{y(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(o=>{let s=j(o,S(D.readwrite,e,l=>r.error(l))).objectStore(e),f=!!t?s.add(n,t):s.add(n);f.onsuccess=l=>v(this,null,function*(){let u=l.target.result,h=s.get(u);h.onsuccess=b=>{r.next(b.target.result),r.complete()},h.onerror=b=>{r.error(b)}}),f.onerror=l=>{r.error(l)}}).catch(o=>r.error(o))})}bulkAdd(e,n){let t=new Promise((r,o)=>{y(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(c=>{let d=j(c,S(D.readwrite,e,r,o)).objectStore(e),f=n.map(l=>new Promise(u=>{let h=l.key;delete l.key;let C=!!h?d.add(l,h):d.add(l);C.onsuccess=E=>{let Z=E.target.result;u(Z)}}));r(Promise.all(f))}).catch(c=>o(c))});return A(t)}bulkDelete(e,n){let t=n.map(r=>new Promise((o,c)=>{y(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(s=>{let d=j(s,S(D.readwrite,e,c,o));d.objectStore(e).delete(r),d.oncomplete=()=>{this.getAll(e).pipe(O(1)).subscribe(l=>{o(l)})}}).catch(s=>c(s))}));return A(Promise.all(t))}getByKey(e,n){return new g(t=>{y(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(r=>{let s=j(r,S(D.readonly,e,t.error)).objectStore(e).get(n);s.onsuccess=d=>{t.next(d.target.result),t.complete()},s.onerror=d=>{t.error(d)}}).catch(r=>t.error(r))})}bulkGet(e,n){let t=n.map(r=>this.getByKey(e,r));return new g(r=>{M(t).subscribe(o=>{r.next(o),r.complete()})})}getByID(e,n){return new g(t=>{y(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(r=>{w(r,e,d=>t.error(d));let s=j(r,S(D.readonly,e,t.error,t.next)).objectStore(e).get(n);s.onsuccess=d=>{t.next(d.target.result),t.complete()}}).catch(r=>t.error(r))})}getByIndex(e,n,t){return new g(r=>{y(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(o=>{w(o,e,l=>r.error(l));let f=j(o,S(D.readonly,e,r.error)).objectStore(e).index(n).get(t);f.onsuccess=l=>{r.next(l.target.result),r.complete()}}).catch(o=>r.error(o))})}getAll(e){return new g(n=>{y(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(t=>{w(t,e,s=>n.error(s));let c=j(t,S(D.readonly,e,n.error,n.next)).objectStore(e).getAll();c.onerror=s=>{n.error(s)},c.onsuccess=({target:{result:s}})=>{n.next(s),n.complete()}}).catch(t=>n.error(t))})}update(e,n){return new g(t=>{y(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(r=>{w(r,e,d=>t.error(d));let c=j(r,S(D.readwrite,e,d=>t.error(d))).objectStore(e),s=c.put(n);s.onsuccess=d=>v(this,null,function*(){let f=d.target.result,l=c.get(f);l.onsuccess=u=>{t.next(u.target.result),t.complete()}})}).catch(r=>t.error(r))})}bulkPut(e,n){let t;return new g(r=>{y(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(o=>{w(o,e,s=>r.error(s)),t=j(o,S(D.readwrite,e,s=>r.error(s)));let c=t.objectStore(e);n.forEach((s,d)=>{let f=c.put(s);d===n.length-1&&(f.onsuccess=l=>{t.commit(),r.next(l.target.result),r.complete()}),f.onerror=l=>{t.abort(),r.error(l)}})}).catch(o=>{t?.abort(),r.error(o)})})}delete(e,n){return new g(t=>{y(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(r=>{w(r,e,s=>t.error(s));let o=j(r,S(D.readwrite,e,s=>t.error(s)));o.objectStore(e).delete(n),o.onerror=s=>t.error(s),o.oncomplete=()=>{this.getAll(e).pipe(O(1)).subscribe({next:s=>{t.next(s)},error:s=>t.error(s),complete:()=>t.complete()})}}).catch(r=>t.error(r))})}deleteByKey(e,n){return new g(t=>{y(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(r=>{w(r,e,s=>t.error(s));let o=j(r,S(D.readwrite,e,s=>t.error(s)));o.objectStore(e).delete(n),o.onerror=s=>t.error(s),o.oncomplete=()=>{t.next(),t.complete()}}).catch(r=>t.error(r))})}deleteAllByIndex(e,n,t,r){return new g(o=>{y(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(c=>{w(c,e,u=>o.error(u));let l=j(c,S(D.readwrite,e,o.error)).objectStore(e).index(n).openCursor(t,r);l.onerror=u=>o.error(u),l.onsuccess=u=>{let h=u.target.result;h?(h.delete(),h.continue()):(o.next(),o.complete())}}).catch(c=>o.error(c))})}clear(e){return new g(n=>{y(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(t=>{w(t,e,c=>n.error(c));let r=j(t,S(D.readwrite,e,c=>n.error(c)));r.objectStore(e).clear(),r.onerror=c=>n.error(c),r.oncomplete=()=>{n.next(),n.complete()}}).catch(t=>n.error(t))})}deleteDatabase(){return new g(e=>{y(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(n=>v(this,null,function*(){n.close();let t=this.indexedDB.deleteDatabase(this.dbConfig.name);t.onsuccess=()=>{e.next(),e.complete()},t.onerror=r=>e.error(r),t.onblocked=()=>{console.warn("Delete blocked: Ensure all tabs, instances, or connections are closed. Database name:",this.dbConfig.name),e.error(new Error("Unable to delete database because it's blocked"))}})).catch(n=>e.error(n))})}openCursor(e){let{storeName:n,query:t,direction:r,mode:o=D.readonly}=e;return new g(c=>{y(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(s=>{w(s,n,u=>c.error(u));let d=j(s,S(o,n,c.error)),l=d.objectStore(n).openCursor(t,r);d.oncomplete=()=>c.complete(),l.onerror=u=>c.error(u),l.onsuccess=u=>{let h=u.target.result;h&&c.next(h)}}).catch(s=>c.error(s))})}openCursorByIndex(e){let{storeName:n,indexName:t,query:r,direction:o,mode:c=D.readonly}=e;return new g(s=>{y(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(d=>{w(d,n,b=>s.error(b));let f=j(d,S(c,n,s.error)),h=f.objectStore(n).index(t).openCursor(r,o);f.oncomplete=()=>s.complete(),h.onerror=b=>s.error(b),h.onsuccess=b=>{let C=b.target.result;C&&s.next(C)}}).catch(d=>s.error(d))})}getAllByIndex(e,n,t,r){return new g(o=>{y(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(c=>{w(c,e,h=>o.error(h));let l=j(c,S(D.readonly,e,o.error)).objectStore(e).index(n).openCursor(t,r),u=[];l.onerror=h=>o.error(h),l.onsuccess=h=>{let b=h.target.result;b?(u.push(b.value),b.continue()):(o.next(u),o.complete())}}).catch(c=>o.error(c))})}getAllKeysByIndex(e,n,t,r){return new g(o=>{y(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(c=>{w(c,e,h=>o.error(h));let f=j(c,S(D.readonly,e,o.error)).objectStore(e).index(n),l=[],u=f.openKeyCursor(t,r);u.onerror=h=>o.error(h),u.onsuccess=h=>{let b=h.target.result;if(b){let{primaryKey:C,key:E}=b;l.push({primaryKey:C,key:E}),b.continue()}else o.next(l),o.complete()}}).catch(c=>o.error(c))})}count(e,n){return new g(t=>{y(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(r=>{w(r,e,d=>t.error(d));let s=j(r,S(D.readonly,e,t.error)).objectStore(e).count(n);s.onerror=d=>t.error(d),s.onsuccess=d=>{t.next(d.target.result),t.complete()}}).catch(r=>t.error(r))})}countByIndex(e,n,t){return new g(r=>{y(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(o=>{w(o,e,l=>r.error(l));let f=j(o,S(D.readonly,e,r.error)).objectStore(e).index(n).count(t);f.onerror=l=>r.error(l),f.onsuccess=l=>{r.next(l.target.result),r.complete()}}).catch(o=>r.error(o))})}deleteObjectStore(e){return re(this.dbConfig.name,++this.dbConfig.version,e)}getAllObjectStoreNames(){return new g(e=>{y(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(n=>{e.next(Array.from(n.objectStoreNames)),e.complete()}).catch(n=>e.error(n))})}};a.\u0275fac=function(n){return new(n||a)(B(X),B(H))},a.\u0275prov=I({token:a,factory:a.\u0275fac});let i=a;return m([x()],i.prototype,"getDatabaseVersion",null),m([x()],i.prototype,"add",null),m([x()],i.prototype,"bulkAdd",null),m([x()],i.prototype,"bulkDelete",null),m([x()],i.prototype,"getByKey",null),m([x()],i.prototype,"bulkGet",null),m([x()],i.prototype,"getByID",null),m([x()],i.prototype,"getByIndex",null),m([x()],i.prototype,"getAll",null),m([x()],i.prototype,"update",null),m([x()],i.prototype,"bulkPut",null),m([x()],i.prototype,"delete",null),m([x()],i.prototype,"deleteByKey",null),m([x()],i.prototype,"deleteAllByIndex",null),m([x()],i.prototype,"clear",null),m([x()],i.prototype,"deleteDatabase",null),m([x()],i.prototype,"openCursor",null),m([x()],i.prototype,"openCursorByIndex",null),m([x()],i.prototype,"getAllByIndex",null),m([x()],i.prototype,"getAllKeysByIndex",null),m([x()],i.prototype,"count",null),m([x()],i.prototype,"countByIndex",null),m([x()],i.prototype,"getAllObjectStoreNames",null),i})(),L=class{cmp(){return 0}databases(){return Promise.resolve([])}deleteDatabase(){return{onupgradeneeded:null,onblocked:null,onerror:null,onsuccess:null,error:null}}open(){return{onupgradeneeded:null,onblocked:null,onerror:null,onsuccess:null,error:null}}};function J(){R(J);let i=k(G),a=k(ee,{optional:!0})??new L;return _(i)?k(F).defaultView.indexedDB:a}var se=(...i)=>{let a=i.reduce((p,e)=>(p[e.name]=e,p),{});return[oe,{provide:X,useValue:a},{provide:H,useFactory:J}]},ge=(()=>{let a=class a{static forRoot(...e){return{ngModule:a,providers:[...se(...e)]}}};a.\u0275fac=function(n){return new(n||a)},a.\u0275mod=U({type:a}),a.\u0275inj=$({});let i=a;return i})();var Q="app_language",W=class i{constructor(a){this.translate=a}currentLang=V("en");supportedLanguages=["en","es","it","fr","de"];init(){this.translate.setDefaultLang("en");let a=localStorage.getItem(Q),p=this.translate.getBrowserLang(),e;a&&this.supportedLanguages.includes(a)?e=a:p&&this.supportedLanguages.includes(p)?e=p:e=this.translate.getDefaultLang(),this.setLanguage(e)}setLanguage(a){this.translate.use(a),localStorage.setItem(Q,a),this.currentLang.set(a)}static \u0275fac=function(p){return new(p||i)(B(z))};static \u0275prov=I({token:i,factory:i.\u0275fac,providedIn:"root"})};export{oe as a,ge as b,W as c};
