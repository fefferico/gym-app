import{b as a}from"./chunk-C4Z2IQD2.js";import{N as s,R as c,Vc as u,g as r,k as o}from"./chunk-IXDEYEG7.js";var l=class n{storageService=c(u);UNIT_STORAGE_KEY="fitTrackPro_weightUnit";KG_TO_LBS_FACTOR=2.20462;unitSubject=new o("kg");unit$=this.unitSubject.asObservable();currentUnit=a(this.unitSubject,{initialValue:"kg"});constructor(){this._initializeUnit()}_initializeUnit(){return r(this,null,function*(){let t=yield this.loadUnitPreference();this.unitSubject.next(t)})}loadUnitPreference(){return r(this,null,function*(){let t=yield this.storageService.getItem(this.UNIT_STORAGE_KEY);return t==="kg"||t==="lbs"?t:"kg"})}setUnitPreference(t){t==="kg"||t==="lbs"?(this.storageService.setItem(this.UNIT_STORAGE_KEY,t),this.unitSubject.next(t),console.log("UnitsService: Unit preference set to",t)):console.warn("UnitsService: Attempted to set invalid unit preference:",t)}convertFromKg(t,e){if(t==null)return t;let i=e||this.currentUnit();return i==="kg"?t:i==="lbs"?Number.isFinite(t)?parseFloat((t*this.KG_TO_LBS_FACTOR).toFixed(2)):(console.warn("UnitsService: Invalid number passed to convertFromKg:",t),t):(console.warn("UnitsService: Attempted conversion to invalid target unit:",e),t)}convertToKg(t,e){if(t==null)return t;let i=e||this.currentUnit();return i==="kg"?t:i==="lbs"?Number.isFinite(t)?parseFloat((t/this.KG_TO_LBS_FACTOR).toFixed(2)):(console.warn("UnitsService: Invalid number passed to convertToKg:",t),t):(console.warn("UnitsService: Attempted conversion from invalid source unit:",e),t)}getUnitLabel(){return this.currentUnit()}getUnitSuffix(){return this.currentUnit()}static \u0275fac=function(e){return new(e||n)};static \u0275prov=s({token:n,factory:n.\u0275fac,providedIn:"root"})};export{l as a};
