import{a as ZS,b as Jd,c as ew}from"./chunk-3ZMK762F.js";import"./chunk-GXPPJEAD.js";import{a as WS}from"./chunk-377GP6PN.js";import{a as em}from"./chunk-7QHL7O2X.js";import{a as JS}from"./chunk-VQDD6UEP.js";import{a as fi}from"./chunk-7APYXRYK.js";import"./chunk-LWEBPOLI.js";import"./chunk-ABIZCNN3.js";import{a as zS}from"./chunk-OZW5BBHY.js";import{a as GS,b as HS,c as KS,d as qS,e as jS,g as XS,h as YS,i as QS}from"./chunk-KH3SIE57.js";import"./chunk-DYVNCEQ4.js";import{a as Zd}from"./chunk-GPU42A7S.js";import{a as US}from"./chunk-K4KFLPA4.js";import{a as Qd}from"./chunk-5GNCS2EV.js";import{a as fn,b as mi}from"./chunk-5DPDJ6ZA.js";import{c as Md,d as $a,f as ci,g as gp,h as Aa}from"./chunk-YAHOZYMW.js";import{a as VS,b as Ma,j as py,n as Ot,p as Yd,q as Ba}from"./chunk-7MRZKHNC.js";import{$a as fe,$b as DS,A as jt,Aa as Gr,Ab as Ea,B as IS,Ba as NS,Bc as MS,Dc as BS,Ea as an,Ec as qd,F as TS,Fa as D,Fb as un,Fc as di,G as ka,Ga as k,Gb as cn,Gc as jd,H as si,Ha as T,Hb as Yr,Hc as $o,I as gs,Ia as se,Ja as pr,Jc as mn,Ka as dr,Kc as Oa,Lc as Xd,Ma as me,Mb as Od,Mc as La,Na as ne,Nb as Na,Oa as O,Ob as AS,P as $e,Pb as pn,Qb as dn,Sa as Hr,Sb as Qr,T as Y,Ta as Kr,Tb as vr,U as Q,Ua as qr,V as Ue,Va as Uo,W as bt,Wa as hp,Xa as yo,Ya as RS,Za as L,_ as ge,_a as Oe,_b as Ld,a as vS,ab as Ft,ac as Ra,ba as Rd,cb as No,cc as ui,d as bS,da as ai,db as Ro,dc as Pa,eb as Po,fa as Ia,gb as Dd,gc as Wt,ha as Pd,hb as uy,ia as xs,ib as li,ic as Da,j as SS,ja as $d,jb as jr,jc as lt,k as sn,ka as ys,kb as PS,kc as pi,la as E,lb as cy,lc as Bd,mc as FS,n as Eo,nb as Ke,o as Dn,ob as ht,oc as Fa,p as wS,pa as ES,pb as Xr,pc as Vd,q as ly,qa as fp,qb as Fd,qc as Wd,r as _S,rb as ln,t as mp,tc as Ud,u as CS,ua as zr,ub as gt,uc as OS,vb as $S,vc as LS,w as Nd,wa as Ta,wc as zd,xa as Ad,xc as Gd,yc as Hd,z as kS,za as te,zc as Kd}from"./chunk-EOMZYKKV.js";import{a as Vt,b as qt,d as xo,e as pt,f as ay,g as j}from"./chunk-GAL4ENT6.js";var iw=xo(nw=>{"use strict";(function(){"use strict";var r;function t(h){var v=0;return function(){return v<h.length?{done:!1,value:h[v++]}:{done:!0}}}var e=typeof Object.defineProperties=="function"?Object.defineProperty:function(h,v,C){return h==Array.prototype||h==Object.prototype||(h[v]=C.value),h};function o(h){h=[typeof globalThis=="object"&&globalThis,h,typeof window=="object"&&window,typeof self=="object"&&self,typeof global=="object"&&global];for(var v=0;v<h.length;++v){var C=h[v];if(C&&C.Math==Math)return C}throw Error("Cannot find global object")}var n=o(this);function i(h,v){if(v)e:{var C=n;h=h.split(".");for(var $=0;$<h.length-1;$++){var V=h[$];if(!(V in C))break e;C=C[V]}h=h[h.length-1],$=C[h],v=v($),v!=$&&v!=null&&e(C,h,{configurable:!0,writable:!0,value:v})}}i("Symbol",function(h){function v(z){if(this instanceof v)throw new TypeError("Symbol is not a constructor");return new C($+(z||"")+"_"+V++,z)}function C(z,U){this.h=z,e(this,"description",{configurable:!0,writable:!0,value:U})}if(h)return h;C.prototype.toString=function(){return this.h};var $="jscomp_symbol_"+(1e9*Math.random()>>>0)+"_",V=0;return v}),i("Symbol.iterator",function(h){if(h)return h;h=Symbol("Symbol.iterator");for(var v="Array Int8Array Uint8Array Uint8ClampedArray Int16Array Uint16Array Int32Array Uint32Array Float32Array Float64Array".split(" "),C=0;C<v.length;C++){var $=n[v[C]];typeof $=="function"&&typeof $.prototype[h]!="function"&&e($.prototype,h,{configurable:!0,writable:!0,value:function(){return s(t(this))}})}return h});function s(h){return h={next:h},h[Symbol.iterator]=function(){return this},h}function a(h){var v=typeof Symbol<"u"&&Symbol.iterator&&h[Symbol.iterator];return v?v.call(h):{next:t(h)}}function l(h){if(!(h instanceof Array)){h=a(h);for(var v,C=[];!(v=h.next()).done;)C.push(v.value);h=C}return h}var u=typeof Object.assign=="function"?Object.assign:function(h,v){for(var C=1;C<arguments.length;C++){var $=arguments[C];if($)for(var V in $)Object.prototype.hasOwnProperty.call($,V)&&(h[V]=$[V])}return h};i("Object.assign",function(h){return h||u});var c=typeof Object.create=="function"?Object.create:function(h){function v(){}return v.prototype=h,new v},p;if(typeof Object.setPrototypeOf=="function")p=Object.setPrototypeOf;else{var d;e:{var m={a:!0},f={};try{f.__proto__=m,d=f.a;break e}catch{}d=!1}p=d?function(h,v){if(h.__proto__=v,h.__proto__!==v)throw new TypeError(h+" is not extensible");return h}:null}var g=p;function x(h,v){if(h.prototype=c(v.prototype),h.prototype.constructor=h,g)g(h,v);else for(var C in v)if(C!="prototype")if(Object.defineProperties){var $=Object.getOwnPropertyDescriptor(v,C);$&&Object.defineProperty(h,C,$)}else h[C]=v[C];h.za=v.prototype}function y(){this.m=!1,this.j=null,this.i=void 0,this.h=1,this.v=this.s=0,this.l=null}function b(h){if(h.m)throw new TypeError("Generator is already running");h.m=!0}y.prototype.u=function(h){this.i=h};function I(h,v){h.l={ma:v,na:!0},h.h=h.s||h.v}y.prototype.return=function(h){this.l={return:h},this.h=this.v};function N(h,v,C){return h.h=C,{value:v}}function M(h){this.h=new y,this.i=h}function B(h,v){b(h.h);var C=h.h.j;return C?W(h,"return"in C?C.return:function($){return{value:$,done:!0}},v,h.h.return):(h.h.return(v),H(h))}function W(h,v,C,$){try{var V=v.call(h.h.j,C);if(!(V instanceof Object))throw new TypeError("Iterator result "+V+" is not an object");if(!V.done)return h.h.m=!1,V;var z=V.value}catch(U){return h.h.j=null,I(h.h,U),H(h)}return h.h.j=null,$.call(h.h,z),H(h)}function H(h){for(;h.h.h;)try{var v=h.i(h.h);if(v)return h.h.m=!1,{value:v.value,done:!1}}catch(C){h.h.i=void 0,I(h.h,C)}if(h.h.m=!1,h.h.l){if(v=h.h.l,h.h.l=null,v.na)throw v.ma;return{value:v.return,done:!0}}return{value:void 0,done:!0}}function K(h){this.next=function(v){return b(h.h),h.h.j?v=W(h,h.h.j.next,v,h.h.u):(h.h.u(v),v=H(h)),v},this.throw=function(v){return b(h.h),h.h.j?v=W(h,h.h.j.throw,v,h.h.u):(I(h.h,v),v=H(h)),v},this.return=function(v){return B(h,v)},this[Symbol.iterator]=function(){return this}}function X(h){function v($){return h.next($)}function C($){return h.throw($)}return new Promise(function($,V){function z(U){U.done?$(U.value):Promise.resolve(U.value).then(v,C).then(z,V)}z(h.next())})}function re(h){return X(new K(new M(h)))}i("Promise",function(h){function v(U){this.i=0,this.j=void 0,this.h=[],this.u=!1;var q=this.l();try{U(q.resolve,q.reject)}catch(oe){q.reject(oe)}}function C(){this.h=null}function $(U){return U instanceof v?U:new v(function(q){q(U)})}if(h)return h;C.prototype.i=function(U){if(this.h==null){this.h=[];var q=this;this.j(function(){q.m()})}this.h.push(U)};var V=n.setTimeout;C.prototype.j=function(U){V(U,0)},C.prototype.m=function(){for(;this.h&&this.h.length;){var U=this.h;this.h=[];for(var q=0;q<U.length;++q){var oe=U[q];U[q]=null;try{oe()}catch(de){this.l(de)}}}this.h=null},C.prototype.l=function(U){this.j(function(){throw U})},v.prototype.l=function(){function U(de){return function(ye){oe||(oe=!0,de.call(q,ye))}}var q=this,oe=!1;return{resolve:U(this.I),reject:U(this.m)}},v.prototype.I=function(U){if(U===this)this.m(new TypeError("A Promise cannot resolve to itself"));else if(U instanceof v)this.L(U);else{e:switch(typeof U){case"object":var q=U!=null;break e;case"function":q=!0;break e;default:q=!1}q?this.F(U):this.s(U)}},v.prototype.F=function(U){var q=void 0;try{q=U.then}catch(oe){this.m(oe);return}typeof q=="function"?this.M(q,U):this.s(U)},v.prototype.m=function(U){this.v(2,U)},v.prototype.s=function(U){this.v(1,U)},v.prototype.v=function(U,q){if(this.i!=0)throw Error("Cannot settle("+U+", "+q+"): Promise already settled in state"+this.i);this.i=U,this.j=q,this.i===2&&this.K(),this.H()},v.prototype.K=function(){var U=this;V(function(){if(U.D()){var q=n.console;typeof q<"u"&&q.error(U.j)}},1)},v.prototype.D=function(){if(this.u)return!1;var U=n.CustomEvent,q=n.Event,oe=n.dispatchEvent;return typeof oe>"u"?!0:(typeof U=="function"?U=new U("unhandledrejection",{cancelable:!0}):typeof q=="function"?U=new q("unhandledrejection",{cancelable:!0}):(U=n.document.createEvent("CustomEvent"),U.initCustomEvent("unhandledrejection",!1,!0,U)),U.promise=this,U.reason=this.j,oe(U))},v.prototype.H=function(){if(this.h!=null){for(var U=0;U<this.h.length;++U)z.i(this.h[U]);this.h=null}};var z=new C;return v.prototype.L=function(U){var q=this.l();U.T(q.resolve,q.reject)},v.prototype.M=function(U,q){var oe=this.l();try{U.call(q,oe.resolve,oe.reject)}catch(de){oe.reject(de)}},v.prototype.then=function(U,q){function oe(Ae,_e){return typeof Ae=="function"?function(Ve){try{de(Ae(Ve))}catch(Ye){ye(Ye)}}:_e}var de,ye,Be=new v(function(Ae,_e){de=Ae,ye=_e});return this.T(oe(U,de),oe(q,ye)),Be},v.prototype.catch=function(U){return this.then(void 0,U)},v.prototype.T=function(U,q){function oe(){switch(de.i){case 1:U(de.j);break;case 2:q(de.j);break;default:throw Error("Unexpected state: "+de.i)}}var de=this;this.h==null?z.i(oe):this.h.push(oe),this.u=!0},v.resolve=$,v.reject=function(U){return new v(function(q,oe){oe(U)})},v.race=function(U){return new v(function(q,oe){for(var de=a(U),ye=de.next();!ye.done;ye=de.next())$(ye.value).T(q,oe)})},v.all=function(U){var q=a(U),oe=q.next();return oe.done?$([]):new v(function(de,ye){function Be(Ve){return function(Ye){Ae[Ve]=Ye,_e--,_e==0&&de(Ae)}}var Ae=[],_e=0;do Ae.push(void 0),_e++,$(oe.value).T(Be(Ae.length-1),ye),oe=q.next();while(!oe.done)})},v});function ce(h,v){h instanceof String&&(h+="");var C=0,$=!1,V={next:function(){if(!$&&C<h.length){var z=C++;return{value:v(z,h[z]),done:!1}}return $=!0,{done:!0,value:void 0}}};return V[Symbol.iterator]=function(){return V},V}i("Array.prototype.keys",function(h){return h||function(){return ce(this,function(v){return v})}}),i("Array.prototype.fill",function(h){return h||function(v,C,$){var V=this.length||0;for(0>C&&(C=Math.max(0,V+C)),($==null||$>V)&&($=V),$=Number($),0>$&&($=Math.max(0,V+$)),C=Number(C||0);C<$;C++)this[C]=v;return this}});function pe(h){return h||Array.prototype.fill}i("Int8Array.prototype.fill",pe),i("Uint8Array.prototype.fill",pe),i("Uint8ClampedArray.prototype.fill",pe),i("Int16Array.prototype.fill",pe),i("Uint16Array.prototype.fill",pe),i("Int32Array.prototype.fill",pe),i("Uint32Array.prototype.fill",pe),i("Float32Array.prototype.fill",pe),i("Float64Array.prototype.fill",pe),i("Object.is",function(h){return h||function(v,C){return v===C?v!==0||1/v===1/C:v!==v&&C!==C}}),i("Array.prototype.includes",function(h){return h||function(v,C){var $=this;$ instanceof String&&($=String($));var V=$.length;for(C=C||0,0>C&&(C=Math.max(C+V,0));C<V;C++){var z=$[C];if(z===v||Object.is(z,v))return!0}return!1}}),i("String.prototype.includes",function(h){return h||function(v,C){if(this==null)throw new TypeError("The 'this' value for String.prototype.includes must not be null or undefined");if(v instanceof RegExp)throw new TypeError("First argument to String.prototype.includes must not be a regular expression");return this.indexOf(v,C||0)!==-1}});var be=this||self;function we(h,v){h=h.split(".");var C=be;h[0]in C||typeof C.execScript>"u"||C.execScript("var "+h[0]);for(var $;h.length&&($=h.shift());)h.length||v===void 0?C[$]&&C[$]!==Object.prototype[$]?C=C[$]:C=C[$]={}:C[$]=v}function Te(h){var v;e:{if((v=be.navigator)&&(v=v.userAgent))break e;v=""}return v.indexOf(h)!=-1}var qe=Array.prototype.map?function(h,v){return Array.prototype.map.call(h,v,void 0)}:function(h,v){for(var C=h.length,$=Array(C),V=typeof h=="string"?h.split(""):h,z=0;z<C;z++)z in V&&($[z]=v.call(void 0,V[z],z,h));return $},je={},it=null;function Qt(h){var v=h.length,C=3*v/4;C%3?C=Math.floor(C):"=.".indexOf(h[v-1])!=-1&&(C="=.".indexOf(h[v-2])!=-1?C-2:C-1);var $=new Uint8Array(C),V=0;return rr(h,function(z){$[V++]=z}),V!==C?$.subarray(0,V):$}function rr(h,v){function C(oe){for(;$<h.length;){var de=h.charAt($++),ye=it[de];if(ye!=null)return ye;if(!/^[\s\xa0]*$/.test(de))throw Error("Unknown base64 encoding at char: "+de)}return oe}en();for(var $=0;;){var V=C(-1),z=C(0),U=C(64),q=C(64);if(q===64&&V===-1)break;v(V<<2|z>>4),U!=64&&(v(z<<4&240|U>>2),q!=64&&v(U<<6&192|q))}}function en(){if(!it){it={};for(var h="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789".split(""),v=["+/=","+/","-_=","-_.","-_"],C=0;5>C;C++){var $=h.concat(v[C].split(""));je[C]=$;for(var V=0;V<$.length;V++){var z=$[V];it[z]===void 0&&(it[z]=V)}}}}var $n=typeof Uint8Array<"u",Sa=!(Te("Trident")||Te("MSIE"))&&typeof be.btoa=="function";function wa(h){if(!Sa){var v;v===void 0&&(v=0),en(),v=je[v];for(var C=Array(Math.floor(h.length/3)),$=v[64]||"",V=0,z=0;V<h.length-2;V+=3){var U=h[V],q=h[V+1],oe=h[V+2],de=v[U>>2];U=v[(U&3)<<4|q>>4],q=v[(q&15)<<2|oe>>6],oe=v[oe&63],C[z++]=de+U+q+oe}switch(de=0,oe=$,h.length-V){case 2:de=h[V+1],oe=v[(de&15)<<2]||$;case 1:h=h[V],C[z]=v[h>>2]+v[(h&3)<<4|de>>4]+oe+$}return C.join("")}for(v="";10240<h.length;)v+=String.fromCharCode.apply(null,h.subarray(0,10240)),h=h.subarray(10240);return v+=String.fromCharCode.apply(null,h),btoa(v)}var op=RegExp("[-_.]","g");function HO(h){switch(h){case"-":return"+";case"_":return"/";case".":return"=";default:return""}}function _1(h){if(!Sa)return Qt(h);op.test(h)&&(h=h.replace(op,HO)),h=atob(h);for(var v=new Uint8Array(h.length),C=0;C<h.length;C++)v[C]=h.charCodeAt(C);return v}var C1;function M0(){return C1||(C1=new Uint8Array(0))}var np={},KO=typeof Uint8Array.prototype.slice=="function",Zt=0,Er=0;function k1(h){var v=0>h;h=Math.abs(h);var C=h>>>0;h=Math.floor((h-C)/4294967296),v&&(C=a(I1(C,h)),v=C.next().value,h=C.next().value,C=v),Zt=C>>>0,Er=h>>>0}var qO=typeof BigInt=="function";function I1(h,v){return v=~v,h?h=~h+1:v+=1,[h,v]}function T1(h,v){this.i=h>>>0,this.h=v>>>0}function E1(h){if(!h)return N1||(N1=new T1(0,0));if(!/^-?\d+$/.test(h))return null;if(16>h.length)k1(Number(h));else if(qO)h=BigInt(h),Zt=Number(h&BigInt(4294967295))>>>0,Er=Number(h>>BigInt(32)&BigInt(4294967295));else{var v=+(h[0]==="-");Er=Zt=0;for(var C=h.length,$=v,V=(C-v)%6+v;V<=C;$=V,V+=6)$=Number(h.slice($,V)),Er*=1e6,Zt=1e6*Zt+$,4294967296<=Zt&&(Er+=Zt/4294967296|0,Zt%=4294967296);v&&(v=a(I1(Zt,Er)),h=v.next().value,v=v.next().value,Zt=h,Er=v)}return new T1(Zt,Er)}var N1;function R1(h,v){return Error("Invalid wire type: "+h+" (at position "+v+")")}function B0(){return Error("Failed to read varint, encoding is invalid.")}function P1(h,v){return Error("Tried to read past the end of the data "+v+" > "+h)}function ds(){throw Error("Invalid UTF8")}function $1(h,v){return v=String.fromCharCode.apply(null,v),h==null?v:h+v}var xd=void 0,V0,jO=typeof TextDecoder<"u",A1,XO=typeof TextEncoder<"u",D1;function F1(h){if(h!==np)throw Error("illegal external caller")}function ip(h,v){if(F1(v),this.V=h,h!=null&&h.length===0)throw Error("ByteString should be constructed with non-empty values")}function W0(){return D1||(D1=new ip(null,np))}function O1(h){F1(np);var v=h.V;return v=v==null||$n&&v!=null&&v instanceof Uint8Array?v:typeof v=="string"?_1(v):null,v==null?v:h.V=v}function YO(h){if(typeof h=="string")return{buffer:_1(h),C:!1};if(Array.isArray(h))return{buffer:new Uint8Array(h),C:!1};if(h.constructor===Uint8Array)return{buffer:h,C:!1};if(h.constructor===ArrayBuffer)return{buffer:new Uint8Array(h),C:!1};if(h.constructor===ip)return{buffer:O1(h)||M0(),C:!0};if(h instanceof Uint8Array)return{buffer:new Uint8Array(h.buffer,h.byteOffset,h.byteLength),C:!1};throw Error("Type not convertible to a Uint8Array, expected a Uint8Array, an ArrayBuffer, a base64 encoded string, a ByteString or an Array of numbers")}function L1(h,v){this.i=null,this.m=!1,this.h=this.j=this.l=0,U0(this,h,v)}function U0(h,v,C){C=C===void 0?{}:C,h.S=C.S===void 0?!1:C.S,v&&(v=YO(v),h.i=v.buffer,h.m=v.C,h.l=0,h.j=h.i.length,h.h=h.l)}L1.prototype.reset=function(){this.h=this.l};function ms(h,v){if(h.h=v,v>h.j)throw P1(h.j,v)}function sp(h){var v=h.i,C=h.h,$=v[C++],V=$&127;if($&128&&($=v[C++],V|=($&127)<<7,$&128&&($=v[C++],V|=($&127)<<14,$&128&&($=v[C++],V|=($&127)<<21,$&128&&($=v[C++],V|=$<<28,$&128&&v[C++]&128&&v[C++]&128&&v[C++]&128&&v[C++]&128&&v[C++]&128)))))throw B0();return ms(h,C),V}function M1(h,v){if(0>v)throw Error("Tried to read a negative byte length: "+v);var C=h.h,$=C+v;if($>h.j)throw P1(v,h.j-C);return h.h=$,C}var B1=[];function z0(){this.h=[]}z0.prototype.length=function(){return this.h.length},z0.prototype.end=function(){var h=this.h;return this.h=[],h};function V1(h,v,C){for(;0<C||127<v;)h.h.push(v&127|128),v=(v>>>7|C<<25)>>>0,C>>>=7;h.h.push(v)}function fs(h,v){for(;127<v;)h.h.push(v&127|128),v>>>=7;h.h.push(v)}function G0(h,v){if(B1.length){var C=B1.pop();U0(C,h,v),h=C}else h=new L1(h,v);this.h=h,this.j=this.h.h,this.i=this.l=-1,this.setOptions(v)}G0.prototype.setOptions=function(h){h=h===void 0?{}:h,this.ca=h.ca===void 0?!1:h.ca},G0.prototype.reset=function(){this.h.reset(),this.j=this.h.h,this.i=this.l=-1};function W1(h){var v=h.h;if(v.h==v.j)return!1;h.j=h.h.h;var C=sp(h.h)>>>0;if(v=C>>>3,C&=7,!(0<=C&&5>=C))throw R1(C,h.j);if(1>v)throw Error("Invalid field number: "+v+" (at position "+h.j+")");return h.l=v,h.i=C,!0}function yd(h){switch(h.i){case 0:if(h.i!=0)yd(h);else e:{h=h.h;for(var v=h.h,C=v+10,$=h.i;v<C;)if(($[v++]&128)===0){ms(h,v);break e}throw B0()}break;case 1:h=h.h,ms(h,h.h+8);break;case 2:h.i!=2?yd(h):(v=sp(h.h)>>>0,h=h.h,ms(h,h.h+v));break;case 5:h=h.h,ms(h,h.h+4);break;case 3:v=h.l;do{if(!W1(h))throw Error("Unmatched start-group tag: stream EOF");if(h.i==4){if(h.l!=v)throw Error("Unmatched end-group tag");break}yd(h)}while(!0);break;default:throw R1(h.i,h.j)}}var vd=[];function QO(){this.j=[],this.i=0,this.h=new z0}function _a(h,v){v.length!==0&&(h.j.push(v),h.i+=v.length)}function ZO(h,v){if(v=v.R){_a(h,h.h.end());for(var C=0;C<v.length;C++)_a(h,O1(v[C])||M0())}}var An=typeof Symbol=="function"&&typeof Symbol()=="symbol"?Symbol():void 0;function hs(h,v){return An?h[An]|=v:h.A!==void 0?h.A|=v:(Object.defineProperties(h,{A:{value:v,configurable:!0,writable:!0,enumerable:!1}}),v)}function U1(h,v){An?h[An]&&(h[An]&=~v):h.A!==void 0&&(h.A&=~v)}function zt(h){var v;return An?v=h[An]:v=h.A,v??0}function tn(h,v){An?h[An]=v:h.A!==void 0?h.A=v:Object.defineProperties(h,{A:{value:v,configurable:!0,writable:!0,enumerable:!1}})}function H0(h){return hs(h,1),h}function JO(h,v){tn(v,(h|0)&-51)}function bd(h,v){tn(v,(h|18)&-41)}var K0={};function Sd(h){return h!==null&&typeof h=="object"&&!Array.isArray(h)&&h.constructor===Object}var ap,z1=[];tn(z1,23),ap=Object.freeze(z1);function q0(h){if(zt(h.o)&2)throw Error("Cannot mutate an immutable Message")}function j0(h){var v=h.length;(v=v?h[v-1]:void 0)&&Sd(v)?v.g=1:(v={},h.push((v.g=1,v)))}function G1(h){var v=h.i+h.G;return h.B||(h.B=h.o[v]={})}function Vo(h,v){return v===-1?null:v>=h.i?h.B?h.B[v]:void 0:h.o[v+h.G]}function rn(h,v,C,$){q0(h),lp(h,v,C,$)}function lp(h,v,C,$){h.j&&(h.j=void 0),v>=h.i||$?G1(h)[v]=C:(h.o[v+h.G]=C,(h=h.B)&&v in h&&delete h[v])}function X0(h,v,C,$){var V=Vo(h,v);Array.isArray(V)||(V=ap);var z=zt(V);if(z&1||H0(V),$)z&2||hs(V,2),C&1||Object.freeze(V);else{$=!(C&2);var U=z&2;C&1||!U?$&&z&16&&!U&&U1(V,16):(V=H0(Array.prototype.slice.call(V)),lp(h,v,V))}return V}function Y0(h,v){var C=Vo(h,v),$=C==null?C:typeof C=="number"||C==="NaN"||C==="Infinity"||C==="-Infinity"?Number(C):void 0;return $!=null&&$!==C&&lp(h,v,$),$}function H1(h,v,C,$,V){h.h||(h.h={});var z=h.h[C],U=X0(h,C,3,V);if(!z){var q=U;z=[];var oe=!!(zt(h.o)&16);U=!!(zt(q)&2);var de=q;!V&&U&&(q=Array.prototype.slice.call(q));for(var ye=U,Be=0;Be<q.length;Be++){var Ae=q[Be],_e=v,Ve=!1;if(Ve=Ve===void 0?!1:Ve,Ae=Array.isArray(Ae)?new _e(Ae):Ve?new _e:void 0,Ae!==void 0){_e=Ae.o;var Ye=Ve=zt(_e);U&&(Ye|=2),oe&&(Ye|=16),Ye!=Ve&&tn(_e,Ye),_e=Ye,ye=ye||!!(2&_e),z.push(Ae)}}return h.h[C]=z,oe=zt(q),v=oe|33,v=ye?v&-9:v|8,oe!=v&&(ye=q,Object.isFrozen(ye)&&(ye=Array.prototype.slice.call(ye)),tn(ye,v),q=ye),de!==q&&lp(h,C,q),(V||$&&U)&&hs(z,2),$&&Object.freeze(z),z}return V||(V=Object.isFrozen(z),$&&!V?Object.freeze(z):!$&&V&&(z=Array.prototype.slice.call(z),h.h[C]=z)),z}function Q0(h,v,C){var $=!!(zt(h.o)&2);if(v=H1(h,v,C,$,$),h=X0(h,C,3,$),!($||zt(h)&8)){for($=0;$<v.length;$++){if(C=v[$],zt(C.o)&2){var V=Q1(C,!1);V.j=C}else V=C;C!==V&&(v[$]=V,h[$]=V.o)}hs(h,8)}return v}function on(h,v,C){if(C!=null&&typeof C!="number")throw Error("Value of float/double field must be a number|null|undefined, found "+typeof C+": "+C);rn(h,v,C)}function K1(h,v,C,$,V){q0(h);var z=H1(h,C,v,!1,!1);return C=$??new C,h=X0(h,v,2,!1),V!=null?(z.splice(V,0,C),h.splice(V,0,C.o)):(z.push(C),h.push(C.o)),C.C()&&U1(h,8),C}function wd(h,v){return h??v}function nn(h,v,C){return C=C===void 0?0:C,wd(Y0(h,v),C)}var _d;function eL(h){switch(typeof h){case"number":return isFinite(h)?h:String(h);case"object":if(h)if(Array.isArray(h)){if((zt(h)&128)!==0)return h=Array.prototype.slice.call(h),j0(h),h}else{if($n&&h!=null&&h instanceof Uint8Array)return wa(h);if(h instanceof ip){var v=h.V;return v==null?"":typeof v=="string"?v:h.V=wa(v)}}}return h}function q1(h,v,C,$){if(h!=null){if(Array.isArray(h))h=Z0(h,v,C,$!==void 0);else if(Sd(h)){var V={},z;for(z in h)V[z]=q1(h[z],v,C,$);h=V}else h=v(h,$);return h}}function Z0(h,v,C,$){var V=zt(h);$=$?!!(V&16):void 0,h=Array.prototype.slice.call(h);for(var z=0;z<h.length;z++)h[z]=q1(h[z],v,C,$);return C(V,h),h}function tL(h){return h.ja===K0?h.toJSON():eL(h)}function rL(h,v){h&128&&j0(v)}function j1(h,v,C){if(C=C===void 0?bd:C,h!=null){if($n&&h instanceof Uint8Array)return h.length?new ip(new Uint8Array(h),np):W0();if(Array.isArray(h)){var $=zt(h);return $&2?h:v&&!($&32)&&($&16||$===0)?(tn(h,$|2),h):(h=Z0(h,j1,$&4?bd:C,!0),v=zt(h),v&4&&v&2&&Object.freeze(h),h)}return h.ja===K0?Y1(h):h}}function X1(h,v,C,$,V,z,U){if(h=h.h&&h.h[C]){if($=zt(h),$&2?$=h:(z=qe(h,Y1),bd($,z),Object.freeze(z),$=z),q0(v),U=$==null?ap:H0([]),$!=null){for(z=!!$.length,h=0;h<$.length;h++){var q=$[h];z=z&&!(zt(q.o)&2),U[h]=q.o}z=(z?8:0)|1,h=zt(U),(h&z)!==z&&(Object.isFrozen(U)&&(U=Array.prototype.slice.call(U)),tn(U,h|z)),v.h||(v.h={}),v.h[C]=$}else v.h&&(v.h[C]=void 0);lp(v,C,U,V)}else rn(v,C,j1($,z,U),V)}function Y1(h){return zt(h.o)&2||(h=Q1(h,!0),hs(h.o,2)),h}function Q1(h,v){var C=h.o,$=[];hs($,16);var V=h.constructor.h;if(V&&$.push(V),V=h.B,V){$.length=C.length,$.fill(void 0,$.length,C.length);var z={};$[$.length-1]=z}(zt(C)&128)!==0&&j0($),v=v||h.C()?bd:JO,z=h.constructor,_d=$,$=new z($),_d=void 0,h.R&&($.R=h.R.slice()),z=!!(zt(C)&16);for(var U=V?C.length-1:C.length,q=0;q<U;q++)X1(h,$,q-h.G,C[q],!1,z,v);if(V)for(var oe in V)X1(h,$,+oe,V[oe],!0,z,v);return $}function Wr(h,v,C){h==null&&(h=_d),_d=void 0;var $=this.constructor.i||0,V=0<$,z=this.constructor.h,U=!1;if(h==null){h=z?[z]:[];var q=48,oe=!0;V&&($=0,q|=128),tn(h,q)}else{if(!Array.isArray(h)||z&&z!==h[0])throw Error();var de=q=hs(h,0);if((oe=(16&de)!==0)&&((U=(32&de)!==0)||(de|=32)),V){if(128&de)$=0;else if(0<h.length){var ye=h[h.length-1];if(Sd(ye)&&"g"in ye){$=0,de|=128,delete ye.g;var Be=!0,Ae;for(Ae in ye){Be=!1;break}Be&&h.pop()}}}else if(128&de)throw Error();q!==de&&tn(h,de)}this.G=(z?0:-1)-$,this.h=void 0,this.o=h;e:{if(z=this.o.length,$=z-1,z&&(z=this.o[$],Sd(z))){this.B=z,this.i=$-this.G;break e}v!==void 0&&-1<v?(this.i=Math.max(v,$+1-this.G),this.B=void 0):this.i=Number.MAX_VALUE}if(!V&&this.B&&"g"in this.B)throw Error('Unexpected "g" flag in sparse object of message that is not a group type.');if(C){v=oe&&!U&&!0,V=this.i;var _e;for(oe=0;oe<C.length;oe++)U=C[oe],U<V?(U+=this.G,($=h[U])?Z1($,v):h[U]=ap):(_e||(_e=G1(this)),($=_e[U])?Z1($,v):_e[U]=ap)}}Wr.prototype.toJSON=function(){return Z0(this.o,tL,rL)},Wr.prototype.C=function(){return!!(zt(this.o)&2)};function Z1(h,v){if(Array.isArray(h)){var C=zt(h),$=1;!v||C&2||($|=16),(C&$)!==$&&tn(h,C|$)}}Wr.prototype.ja=K0,Wr.prototype.toString=function(){return this.o.toString()};function J1(h,v,C){if(C){var $={},V;for(V in C){var z=C[V],U=z.ra;U||($.J=z.xa||z.oa.W,z.ia?($.aa=nS(z.ia),U=function(q){return function(oe,de,ye){return q.J(oe,de,ye,q.aa)}}($)):z.ka?($.Z=iS(z.da.P,z.ka),U=function(q){return function(oe,de,ye){return q.J(oe,de,ye,q.Z)}}($)):U=$.J,z.ra=U),U(v,h,z.da),$={J:$.J,aa:$.aa,Z:$.Z}}}ZO(v,h)}var Cd=Symbol();function eS(h,v,C){return h[Cd]||(h[Cd]=function($,V){return v($,V,C)})}function tS(h){var v=h[Cd];if(!v){var C=ey(h);v=function($,V){return sS($,V,C)},h[Cd]=v}return v}function oL(h){var v=h.ia;if(v)return tS(v);if(v=h.wa)return eS(h.da.P,v,h.ka)}function nL(h){var v=oL(h),C=h.da,$=h.oa.U;return v?function(V,z){return $(V,z,C,v)}:function(V,z){return $(V,z,C)}}function rS(h,v){var C=h[v];return typeof C=="function"&&C.length===0&&(C=C(),h[v]=C),Array.isArray(C)&&(cp in C||up in C||0<C.length&&typeof C[0]=="function")?C:void 0}function oS(h,v,C,$,V,z){v.P=h[0];var U=1;if(h.length>U&&typeof h[U]!="number"){var q=h[U++];C(v,q)}for(;U<h.length;){C=h[U++];for(var oe=U+1;oe<h.length&&typeof h[oe]!="number";)oe++;switch(q=h[U++],oe-=U,oe){case 0:$(v,C,q);break;case 1:(oe=rS(h,U))?(U++,V(v,C,q,oe)):$(v,C,q,h[U++]);break;case 2:oe=U++,oe=rS(h,oe),V(v,C,q,oe,h[U++]);break;case 3:z(v,C,q,h[U++],h[U++],h[U++]);break;case 4:z(v,C,q,h[U++],h[U++],h[U++],h[U++]);break;default:throw Error("unexpected number of binary field arguments: "+oe)}}return v}var kd=Symbol();function nS(h){var v=h[kd];if(!v){var C=J0(h);v=function($,V){return aS($,V,C)},h[kd]=v}return v}function iS(h,v){var C=h[kd];return C||(C=function($,V){return J1($,V,v)},h[kd]=C),C}var up=Symbol();function iL(h,v){h.push(v)}function sL(h,v,C){h.push(v,C.W)}function aL(h,v,C,$){var V=nS($),z=J0($).P,U=C.W;h.push(v,function(q,oe,de){return U(q,oe,de,z,V)})}function lL(h,v,C,$,V,z){var U=iS($,z),q=C.W;h.push(v,function(oe,de,ye){return q(oe,de,ye,$,U)})}function J0(h){var v=h[up];return v||(v=oS(h,h[up]=[],iL,sL,aL,lL),cp in h&&up in h&&(h.length=0),v)}var cp=Symbol();function uL(h,v){h[0]=v}function cL(h,v,C,$){var V=C.U;h[v]=$?function(z,U,q){return V(z,U,q,$)}:V}function pL(h,v,C,$,V){var z=C.U,U=tS($),q=ey($).P;h[v]=function(oe,de,ye){return z(oe,de,ye,q,U,V)}}function dL(h,v,C,$,V,z,U){var q=C.U,oe=eS($,V,z);h[v]=function(de,ye,Be){return q(de,ye,Be,$,oe,U)}}function ey(h){var v=h[cp];return v||(v=oS(h,h[cp]={},uL,cL,pL,dL),cp in h&&up in h&&(h.length=0),v)}function sS(h,v,C){for(;W1(v)&&v.i!=4;){var $=v.l,V=C[$];if(!V){var z=C[0];z&&(z=z[$])&&(V=C[$]=nL(z))}if(!V||!V(v,h,$)){V=v,$=h,z=V.j,yd(V);var U=V;if(!U.ca){if(V=U.h.h-z,U.h.h=z,U=U.h,V==0)V=W0();else{if(z=M1(U,V),U.S&&U.m)V=U.i.subarray(z,z+V);else{U=U.i;var q=z;V=z+V,V=q===V?M0():KO?U.slice(q,V):new Uint8Array(U.subarray(q,V))}V=V.length==0?W0():new ip(V,np)}(z=$.R)?z.push(V):$.R=[V]}}}return h}function aS(h,v,C){for(var $=C.length,V=$%2==1,z=V?1:0;z<$;z+=2)(0,C[z+1])(v,h,C[z]);J1(h,v,V?C[0]:void 0)}function pp(h,v){return{U:h,W:v}}var Wo=pp(function(h,v,C){if(h.i!==5)return!1;h=h.h;var $=h.i,V=h.h,z=$[V],U=$[V+1],q=$[V+2];return $=$[V+3],ms(h,h.h+4),U=(z<<0|U<<8|q<<16|$<<24)>>>0,h=2*(U>>31)+1,z=U>>>23&255,U&=8388607,rn(v,C,z==255?U?NaN:1/0*h:z==0?h*Math.pow(2,-149)*U:h*Math.pow(2,z-150)*(U+Math.pow(2,23))),!0},function(h,v,C){if(v=Y0(v,C),v!=null){fs(h.h,8*C+5),h=h.h;var $=+v;$===0?0<1/$?Zt=Er=0:(Er=0,Zt=2147483648):isNaN($)?(Er=0,Zt=2147483647):($=(C=0>$?-2147483648:0)?-$:$,34028234663852886e22<$?(Er=0,Zt=(C|2139095040)>>>0):11754943508222875e-54>$?($=Math.round($/Math.pow(2,-149)),Er=0,Zt=(C|$)>>>0):(v=Math.floor(Math.log($)/Math.LN2),$*=Math.pow(2,-v),$=Math.round(8388608*$),16777216<=$&&++v,Er=0,Zt=(C|v+127<<23|$&8388607)>>>0)),C=Zt,h.h.push(C>>>0&255),h.h.push(C>>>8&255),h.h.push(C>>>16&255),h.h.push(C>>>24&255)}}),mL=pp(function(h,v,C){if(h.i!==0)return!1;var $=h.h,V=0,z=h=0,U=$.i,q=$.h;do{var oe=U[q++];V|=(oe&127)<<z,z+=7}while(32>z&&oe&128);for(32<z&&(h|=(oe&127)>>4),z=3;32>z&&oe&128;z+=7)oe=U[q++],h|=(oe&127)<<z;if(ms($,q),128>oe)$=V>>>0,oe=h>>>0,(h=oe&2147483648)&&($=~$+1>>>0,oe=~oe>>>0,$==0&&(oe=oe+1>>>0)),$=4294967296*oe+($>>>0);else throw B0();return rn(v,C,h?-$:$),!0},function(h,v,C){v=Vo(v,C),v!=null&&(typeof v=="string"&&E1(v),v!=null&&(fs(h.h,8*C),typeof v=="number"?(h=h.h,k1(v),V1(h,Zt,Er)):(C=E1(v),V1(h.h,C.i,C.h))))}),fL=pp(function(h,v,C){return h.i!==0?!1:(rn(v,C,sp(h.h)),!0)},function(h,v,C){if(v=Vo(v,C),v!=null&&v!=null)if(fs(h.h,8*C),h=h.h,C=v,0<=C)fs(h,C);else{for(v=0;9>v;v++)h.h.push(C&127|128),C>>=7;h.h.push(1)}}),lS=pp(function(h,v,C){if(h.i!==2)return!1;var $=sp(h.h)>>>0;h=h.h;var V=M1(h,$);if(h=h.i,jO){var z=h,U;(U=V0)||(U=V0=new TextDecoder("utf-8",{fatal:!0})),h=V+$,z=V===0&&h===z.length?z:z.subarray(V,h);try{var q=U.decode(z)}catch(Be){if(xd===void 0){try{U.decode(new Uint8Array([128]))}catch{}try{U.decode(new Uint8Array([97])),xd=!0}catch{xd=!1}}throw!xd&&(V0=void 0),Be}}else{q=V,$=q+$,V=[];for(var oe=null,de,ye;q<$;)de=h[q++],128>de?V.push(de):224>de?q>=$?ds():(ye=h[q++],194>de||(ye&192)!==128?(q--,ds()):V.push((de&31)<<6|ye&63)):240>de?q>=$-1?ds():(ye=h[q++],(ye&192)!==128||de===224&&160>ye||de===237&&160<=ye||((z=h[q++])&192)!==128?(q--,ds()):V.push((de&15)<<12|(ye&63)<<6|z&63)):244>=de?q>=$-2?ds():(ye=h[q++],(ye&192)!==128||(de<<28)+(ye-144)>>30!==0||((z=h[q++])&192)!==128||((U=h[q++])&192)!==128?(q--,ds()):(de=(de&7)<<18|(ye&63)<<12|(z&63)<<6|U&63,de-=65536,V.push((de>>10&1023)+55296,(de&1023)+56320))):ds(),8192<=V.length&&(oe=$1(oe,V),V.length=0);q=$1(oe,V)}return rn(v,C,q),!0},function(h,v,C){if(v=Vo(v,C),v!=null){var $=!1;if($=$===void 0?!1:$,XO){if($&&/(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])/.test(v))throw Error("Found an unpaired surrogate");v=(A1||(A1=new TextEncoder)).encode(v)}else{for(var V=0,z=new Uint8Array(3*v.length),U=0;U<v.length;U++){var q=v.charCodeAt(U);if(128>q)z[V++]=q;else{if(2048>q)z[V++]=q>>6|192;else{if(55296<=q&&57343>=q){if(56319>=q&&U<v.length){var oe=v.charCodeAt(++U);if(56320<=oe&&57343>=oe){q=1024*(q-55296)+oe-56320+65536,z[V++]=q>>18|240,z[V++]=q>>12&63|128,z[V++]=q>>6&63|128,z[V++]=q&63|128;continue}else U--}if($)throw Error("Found an unpaired surrogate");q=65533}z[V++]=q>>12|224,z[V++]=q>>6&63|128}z[V++]=q&63|128}}v=V===z.length?z:z.subarray(0,V)}fs(h.h,8*C+2),fs(h.h,v.length),_a(h,h.h.end()),_a(h,v)}}),uS=pp(function(h,v,C,$,V){if(h.i!==2)return!1;v=K1(v,C,$),C=h.h.j,$=sp(h.h)>>>0;var z=h.h.h+$,U=z-C;if(0>=U&&(h.h.j=z,V(v,h,void 0,void 0,void 0),U=z-h.h.h),U)throw Error("Message parsing ended unexpectedly. Expected to read "+($+" bytes, instead read "+($-U)+" bytes, either the data ended unexpectedly or the message misreported its own length"));return h.h.h=z,h.h.j=C,!0},function(h,v,C,$,V){if(v=Q0(v,$,C),v!=null)for($=0;$<v.length;$++){var z=h;fs(z.h,8*C+2);var U=z.h.end();_a(z,U),U.push(z.i),z=U,V(v[$],h),U=h;var q=z.pop();for(q=U.i+U.h.length()-q;127<q;)z.push(q&127|128),q>>>=7,U.i++;z.push(q),U.i++}});function ty(h){return function(v,C){e:{if(vd.length){var $=vd.pop();$.setOptions(C),U0($.h,v,C),v=$}else v=new G0(v,C);try{var V=ey(h),z=sS(new V.P,v,V);break e}finally{V=v.h,V.i=null,V.m=!1,V.l=0,V.j=0,V.h=0,V.S=!1,v.l=-1,v.i=-1,100>vd.length&&vd.push(v)}z=void 0}return z}}function ry(h){return function(){var v=new QO;aS(this,v,J0(h)),_a(v,v.h.end());for(var C=new Uint8Array(v.i),$=v.j,V=$.length,z=0,U=0;U<V;U++){var q=$[U];C.set(q,z),z+=q.length}return v.j=[C],C}}function Ca(h){Wr.call(this,h)}x(Ca,Wr);var cS=[Ca,1,fL,2,Wo,3,lS,4,lS];Ca.prototype.l=ry(cS);function oy(h){Wr.call(this,h,-1,hL)}x(oy,Wr),oy.prototype.addClassification=function(h,v){return K1(this,1,Ca,h,v),this};var hL=[1],gL=ty([oy,1,uS,cS]);function dp(h){Wr.call(this,h)}x(dp,Wr);var pS=[dp,1,Wo,2,Wo,3,Wo,4,Wo,5,Wo];dp.prototype.l=ry(pS);function dS(h){Wr.call(this,h,-1,xL)}x(dS,Wr);var xL=[1],yL=ty([dS,1,uS,pS]);function Id(h){Wr.call(this,h)}x(Id,Wr);var mS=[Id,1,Wo,2,Wo,3,Wo,4,Wo,5,Wo,6,mL],vL=ty(mS);Id.prototype.l=ry(mS);function fS(h,v,C){if(C=h.createShader(C===0?h.VERTEX_SHADER:h.FRAGMENT_SHADER),h.shaderSource(C,v),h.compileShader(C),!h.getShaderParameter(C,h.COMPILE_STATUS))throw Error(`Could not compile WebGL shader.

`+h.getShaderInfoLog(C));return C}function bL(h){return Q0(h,Ca,1).map(function(v){var C=Vo(v,1);return{index:C??0,qa:nn(v,2),label:Vo(v,3)!=null?wd(Vo(v,3),""):void 0,displayName:Vo(v,4)!=null?wd(Vo(v,4),""):void 0}})}function SL(h){return{x:nn(h,1),y:nn(h,2),z:nn(h,3),visibility:Y0(h,4)!=null?nn(h,4):void 0}}function ny(h){return Q0(yL(h),dp,1).map(SL)}function iy(h,v){this.i=h,this.h=v,this.m=0}function hS(h,v,C){return wL(h,v),typeof h.h.canvas.transferToImageBitmap=="function"?Promise.resolve(h.h.canvas.transferToImageBitmap()):C?Promise.resolve(h.h.canvas):typeof createImageBitmap=="function"?createImageBitmap(h.h.canvas):(h.j===void 0&&(h.j=document.createElement("canvas")),new Promise(function($){h.j.height=h.h.canvas.height,h.j.width=h.h.canvas.width,h.j.getContext("2d",{}).drawImage(h.h.canvas,0,0,h.h.canvas.width,h.h.canvas.height),$(h.j)}))}function wL(h,v){var C=h.h;if(h.s===void 0){var $=fS(C,`
  attribute vec2 aVertex;
  attribute vec2 aTex;
  varying vec2 vTex;
  void main(void) {
    gl_Position = vec4(aVertex, 0.0, 1.0);
    vTex = aTex;
  }`,0),V=fS(C,`
  precision mediump float;
  varying vec2 vTex;
  uniform sampler2D sampler0;
  void main(){
    gl_FragColor = texture2D(sampler0, vTex);
  }`,1),z=C.createProgram();if(C.attachShader(z,$),C.attachShader(z,V),C.linkProgram(z),!C.getProgramParameter(z,C.LINK_STATUS))throw Error(`Could not compile WebGL program.

`+C.getProgramInfoLog(z));$=h.s=z,C.useProgram($),V=C.getUniformLocation($,"sampler0"),h.l={O:C.getAttribLocation($,"aVertex"),N:C.getAttribLocation($,"aTex"),ya:V},h.v=C.createBuffer(),C.bindBuffer(C.ARRAY_BUFFER,h.v),C.enableVertexAttribArray(h.l.O),C.vertexAttribPointer(h.l.O,2,C.FLOAT,!1,0,0),C.bufferData(C.ARRAY_BUFFER,new Float32Array([-1,-1,-1,1,1,1,1,-1]),C.STATIC_DRAW),C.bindBuffer(C.ARRAY_BUFFER,null),h.u=C.createBuffer(),C.bindBuffer(C.ARRAY_BUFFER,h.u),C.enableVertexAttribArray(h.l.N),C.vertexAttribPointer(h.l.N,2,C.FLOAT,!1,0,0),C.bufferData(C.ARRAY_BUFFER,new Float32Array([0,1,0,0,1,0,1,1]),C.STATIC_DRAW),C.bindBuffer(C.ARRAY_BUFFER,null),C.uniform1i(V,0)}$=h.l,C.useProgram(h.s),C.canvas.width=v.width,C.canvas.height=v.height,C.viewport(0,0,v.width,v.height),C.activeTexture(C.TEXTURE0),h.i.bindTexture2d(v.glName),C.enableVertexAttribArray($.O),C.bindBuffer(C.ARRAY_BUFFER,h.v),C.vertexAttribPointer($.O,2,C.FLOAT,!1,0,0),C.enableVertexAttribArray($.N),C.bindBuffer(C.ARRAY_BUFFER,h.u),C.vertexAttribPointer($.N,2,C.FLOAT,!1,0,0),C.bindFramebuffer(C.DRAW_FRAMEBUFFER?C.DRAW_FRAMEBUFFER:C.FRAMEBUFFER,null),C.clearColor(0,0,0,0),C.clear(C.COLOR_BUFFER_BIT),C.colorMask(!0,!0,!0,!0),C.drawArrays(C.TRIANGLE_FAN,0,4),C.disableVertexAttribArray($.O),C.disableVertexAttribArray($.N),C.bindBuffer(C.ARRAY_BUFFER,null),h.i.bindTexture2d(0)}function _L(h){this.h=h}var CL=new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11]);function kL(h,v){return v+h}function gS(h,v){window[h]=v}function IL(h){var v=document.createElement("script");return v.setAttribute("src",h),v.setAttribute("crossorigin","anonymous"),new Promise(function(C){v.addEventListener("load",function(){C()},!1),v.addEventListener("error",function(){C()},!1),document.body.appendChild(v)})}function TL(){return re(function(h){switch(h.h){case 1:return h.s=2,N(h,WebAssembly.instantiate(CL),4);case 4:h.h=3,h.s=0;break;case 2:return h.s=0,h.l=null,h.return(!1);case 3:return h.return(!0)}})}function sy(h){if(this.h=h,this.listeners={},this.l={},this.L={},this.s={},this.v={},this.M=this.u=this.ga=!0,this.I=Promise.resolve(),this.fa="",this.D={},this.locateFile=h&&h.locateFile||kL,typeof window=="object")var v=window.location.pathname.toString().substring(0,window.location.pathname.toString().lastIndexOf("/"))+"/";else if(typeof location<"u")v=location.pathname.toString().substring(0,location.pathname.toString().lastIndexOf("/"))+"/";else throw Error("solutions can only be loaded on a web page or in a web worker");if(this.ha=v,h.options){v=a(Object.keys(h.options));for(var C=v.next();!C.done;C=v.next()){C=C.value;var $=h.options[C].default;$!==void 0&&(this.l[C]=typeof $=="function"?$():$)}}}r=sy.prototype,r.close=function(){return this.j&&this.j.delete(),Promise.resolve()};function EL(h){var v,C,$,V,z,U,q,oe,de,ye,Be;return re(function(Ae){switch(Ae.h){case 1:return h.ga?(v=h.h.files===void 0?[]:typeof h.h.files=="function"?h.h.files(h.l):h.h.files,N(Ae,TL(),2)):Ae.return();case 2:if(C=Ae.i,typeof window=="object")return gS("createMediapipeSolutionsWasm",{locateFile:h.locateFile}),gS("createMediapipeSolutionsPackedAssets",{locateFile:h.locateFile}),U=v.filter(function(_e){return _e.data!==void 0}),q=v.filter(function(_e){return _e.data===void 0}),oe=Promise.all(U.map(function(_e){var Ve=Td(h,_e.url);if(_e.path!==void 0){var Ye=_e.path;Ve=Ve.then(function(Nt){return h.overrideFile(Ye,Nt),Promise.resolve(Nt)})}return Ve})),de=Promise.all(q.map(function(_e){return _e.simd===void 0||_e.simd&&C||!_e.simd&&!C?IL(h.locateFile(_e.url,h.ha)):Promise.resolve()})).then(function(){var _e,Ve,Ye;return re(function(Nt){if(Nt.h==1)return _e=window.createMediapipeSolutionsWasm,Ve=window.createMediapipeSolutionsPackedAssets,Ye=h,N(Nt,_e(Ve),2);Ye.i=Nt.i,Nt.h=0})}),ye=function(){return re(function(_e){return h.h.graph&&h.h.graph.url?_e=N(_e,Td(h,h.h.graph.url),0):(_e.h=0,_e=void 0),_e})}(),N(Ae,Promise.all([de,oe,ye]),7);if(typeof importScripts!="function")throw Error("solutions can only be loaded on a web page or in a web worker");return $=v.filter(function(_e){return _e.simd===void 0||_e.simd&&C||!_e.simd&&!C}).map(function(_e){return h.locateFile(_e.url,h.ha)}),importScripts.apply(null,l($)),V=h,N(Ae,createMediapipeSolutionsWasm(Module),6);case 6:V.i=Ae.i,h.m=new OffscreenCanvas(1,1),h.i.canvas=h.m,z=h.i.GL.createContext(h.m,{antialias:!1,alpha:!1,va:typeof WebGL2RenderingContext<"u"?2:1}),h.i.GL.makeContextCurrent(z),Ae.h=4;break;case 7:if(h.m=document.createElement("canvas"),Be=h.m.getContext("webgl2",{}),!Be&&(Be=h.m.getContext("webgl",{}),!Be))return alert("Failed to create WebGL canvas context when passing video frame."),Ae.return();h.K=Be,h.i.canvas=h.m,h.i.createContext(h.m,!0,!0,{});case 4:h.j=new h.i.SolutionWasm,h.ga=!1,Ae.h=0}})}function NL(h){var v,C,$,V,z,U,q,oe;return re(function(de){if(de.h==1){if(h.h.graph&&h.h.graph.url&&h.fa===h.h.graph.url)return de.return();if(h.u=!0,!h.h.graph||!h.h.graph.url){de.h=2;return}return h.fa=h.h.graph.url,N(de,Td(h,h.h.graph.url),3)}for(de.h!=2&&(v=de.i,h.j.loadGraph(v)),C=a(Object.keys(h.D)),$=C.next();!$.done;$=C.next())V=$.value,h.j.overrideFile(V,h.D[V]);if(h.D={},h.h.listeners)for(z=a(h.h.listeners),U=z.next();!U.done;U=z.next())q=U.value,AL(h,q);oe=h.l,h.l={},h.setOptions(oe),de.h=0})}r.reset=function(){var h=this;return re(function(v){h.j&&(h.j.reset(),h.s={},h.v={}),v.h=0})},r.setOptions=function(h,v){var C=this;if(v=v||this.h.options){for(var $=[],V=[],z={},U=a(Object.keys(h)),q=U.next();!q.done;z={X:z.X,Y:z.Y},q=U.next())if(q=q.value,!(q in this.l&&this.l[q]===h[q])){this.l[q]=h[q];var oe=v[q];oe!==void 0&&(oe.onChange&&(z.X=oe.onChange,z.Y=h[q],$.push(function(de){return function(){var ye;return re(function(Be){if(Be.h==1)return N(Be,de.X(de.Y),2);ye=Be.i,ye===!0&&(C.u=!0),Be.h=0})}}(z))),oe.graphOptionXref&&(q=Object.assign({},{calculatorName:"",calculatorIndex:0},oe.graphOptionXref,{valueNumber:oe.type===1?h[q]:0,valueBoolean:oe.type===0?h[q]:!1,valueString:oe.type===2?h[q]:""}),V.push(q)))}($.length!==0||V.length!==0)&&(this.u=!0,this.H=(this.H===void 0?[]:this.H).concat(V),this.F=(this.F===void 0?[]:this.F).concat($))}};function RL(h){var v,C,$,V,z,U,q;return re(function(oe){switch(oe.h){case 1:if(!h.u)return oe.return();if(!h.F){oe.h=2;break}v=a(h.F),C=v.next();case 3:if(C.done){oe.h=5;break}return $=C.value,N(oe,$(),4);case 4:C=v.next(),oe.h=3;break;case 5:h.F=void 0;case 2:if(h.H){for(V=new h.i.GraphOptionChangeRequestList,z=a(h.H),U=z.next();!U.done;U=z.next())q=U.value,V.push_back(q);h.j.changeOptions(V),V.delete(),h.H=void 0}h.u=!1,oe.h=0}})}r.initialize=function(){var h=this;return re(function(v){return v.h==1?N(v,EL(h),2):v.h!=3?N(v,NL(h),3):N(v,RL(h),0)})};function Td(h,v){var C,$;return re(function(V){return v in h.L?V.return(h.L[v]):(C=h.locateFile(v,""),$=fetch(C).then(function(z){return z.arrayBuffer()}),h.L[v]=$,V.return($))})}r.overrideFile=function(h,v){this.j?this.j.overrideFile(h,v):this.D[h]=v},r.clearOverriddenFiles=function(){this.D={},this.j&&this.j.clearOverriddenFiles()},r.send=function(h,v){var C=this,$,V,z,U,q,oe,de,ye,Be;return re(function(Ae){switch(Ae.h){case 1:return C.h.inputs?($=1e3*(v??performance.now()),N(Ae,C.I,2)):Ae.return();case 2:return N(Ae,C.initialize(),3);case 3:for(V=new C.i.PacketDataList,z=a(Object.keys(h)),U=z.next();!U.done;U=z.next())if(q=U.value,oe=C.h.inputs[q]){e:{var _e=h[q];switch(oe.type){case"video":var Ve=C.s[oe.stream];if(Ve||(Ve=new iy(C.i,C.K),C.s[oe.stream]=Ve),Ve.m===0&&(Ve.m=Ve.i.createTexture()),typeof HTMLVideoElement<"u"&&_e instanceof HTMLVideoElement)var Ye=_e.videoWidth,Nt=_e.videoHeight;else typeof HTMLImageElement<"u"&&_e instanceof HTMLImageElement?(Ye=_e.naturalWidth,Nt=_e.naturalHeight):(Ye=_e.width,Nt=_e.height);Nt={glName:Ve.m,width:Ye,height:Nt},Ye=Ve.h,Ye.canvas.width=Nt.width,Ye.canvas.height=Nt.height,Ye.activeTexture(Ye.TEXTURE0),Ve.i.bindTexture2d(Ve.m),Ye.texImage2D(Ye.TEXTURE_2D,0,Ye.RGBA,Ye.RGBA,Ye.UNSIGNED_BYTE,_e),Ve.i.bindTexture2d(0),Ve=Nt;break e;case"detections":for(Ve=C.s[oe.stream],Ve||(Ve=new _L(C.i),C.s[oe.stream]=Ve),Ve.data||(Ve.data=new Ve.h.DetectionListData),Ve.data.reset(_e.length),Nt=0;Nt<_e.length;++Nt){Ye=_e[Nt];var kt=Ve.data,ur=kt.setBoundingBox,To=Nt,Ur=Ye.la,ct=new Id;if(on(ct,1,Ur.sa),on(ct,2,Ur.ta),on(ct,3,Ur.height),on(ct,4,Ur.width),on(ct,5,Ur.rotation),rn(ct,6,Ur.pa),Ur=ct.l(),ur.call(kt,To,Ur),Ye.ea)for(kt=0;kt<Ye.ea.length;++kt){ct=Ye.ea[kt],ur=Ve.data,To=ur.addNormalizedLandmark,Ur=Nt,ct=Object.assign({},ct,{visibility:ct.visibility?ct.visibility:0});var cr=new dp;on(cr,1,ct.x),on(cr,2,ct.y),on(cr,3,ct.z),ct.visibility&&on(cr,4,ct.visibility),ct=cr.l(),To.call(ur,Ur,ct)}if(Ye.ba)for(kt=0;kt<Ye.ba.length;++kt)ur=Ve.data,To=ur.addClassification,Ur=Nt,ct=Ye.ba[kt],cr=new Ca,on(cr,2,ct.qa),ct.index&&rn(cr,1,ct.index),ct.label&&rn(cr,3,ct.label),ct.displayName&&rn(cr,4,ct.displayName),ct=cr.l(),To.call(ur,Ur,ct)}Ve=Ve.data;break e;default:Ve={}}}switch(de=Ve,ye=oe.stream,oe.type){case"video":V.pushTexture2d(Object.assign({},de,{stream:ye,timestamp:$}));break;case"detections":Be=de,Be.stream=ye,Be.timestamp=$,V.pushDetectionList(Be);break;default:throw Error("Unknown input config type: '"+oe.type+"'")}}return C.j.send(V),N(Ae,C.I,4);case 4:V.delete(),Ae.h=0}})};function PL(h,v,C){var $,V,z,U,q,oe,de,ye,Be,Ae,_e,Ve,Ye,Nt;return re(function(kt){switch(kt.h){case 1:if(!C)return kt.return(v);for($={},V=0,z=a(Object.keys(C)),U=z.next();!U.done;U=z.next())q=U.value,oe=C[q],typeof oe!="string"&&oe.type==="texture"&&v[oe.stream]!==void 0&&++V;1<V&&(h.M=!1),de=a(Object.keys(C)),U=de.next();case 2:if(U.done){kt.h=4;break}if(ye=U.value,Be=C[ye],typeof Be=="string")return Ye=$,Nt=ye,N(kt,$L(h,ye,v[Be]),14);if(Ae=v[Be.stream],Be.type==="detection_list"){if(Ae){for(var ur=Ae.getRectList(),To=Ae.getLandmarksList(),Ur=Ae.getClassificationsList(),ct=[],cr=0;cr<ur.size();++cr){var ii=vL(ur.get(cr)),DL=nn(ii,1),FL=nn(ii,2),OL=nn(ii,3),LL=nn(ii,4),ML=nn(ii,5,0),Ed=void 0;Ed=Ed===void 0?0:Ed,ii={la:{sa:DL,ta:FL,height:OL,width:LL,rotation:ML,pa:wd(Vo(ii,6),Ed)},ea:ny(To.get(cr)),ba:bL(gL(Ur.get(cr)))},ct.push(ii)}ur=ct}else ur=[];$[ye]=ur,kt.h=7;break}if(Be.type==="proto_list"){if(Ae){for(ur=Array(Ae.size()),To=0;To<Ae.size();To++)ur[To]=Ae.get(To);Ae.delete()}else ur=[];$[ye]=ur,kt.h=7;break}if(Ae===void 0){kt.h=3;break}if(Be.type==="float_list"){$[ye]=Ae,kt.h=7;break}if(Be.type==="proto"){$[ye]=Ae,kt.h=7;break}if(Be.type!=="texture")throw Error("Unknown output config type: '"+Be.type+"'");return _e=h.v[ye],_e||(_e=new iy(h.i,h.K),h.v[ye]=_e),N(kt,hS(_e,Ae,h.M),13);case 13:Ve=kt.i,$[ye]=Ve;case 7:Be.transform&&$[ye]&&($[ye]=Be.transform($[ye])),kt.h=3;break;case 14:Ye[Nt]=kt.i;case 3:U=de.next(),kt.h=2;break;case 4:return kt.return($)}})}function $L(h,v,C){var $;return re(function(V){return typeof C=="number"||C instanceof Uint8Array||C instanceof h.i.Uint8BlobList?V.return(C):C instanceof h.i.Texture2dDataOut?($=h.v[v],$||($=new iy(h.i,h.K),h.v[v]=$),V.return(hS($,C,h.M))):V.return(void 0)})}function AL(h,v){for(var C=v.name||"$",$=[].concat(l(v.wants)),V=new h.i.StringList,z=a(v.wants),U=z.next();!U.done;U=z.next())V.push_back(U.value);z=h.i.PacketListener.implement({onResults:function(q){for(var oe={},de=0;de<v.wants.length;++de)oe[$[de]]=q.get(de);var ye=h.listeners[C];ye&&(h.I=PL(h,oe,v.outs).then(function(Be){Be=ye(Be);for(var Ae=0;Ae<v.wants.length;++Ae){var _e=oe[$[Ae]];typeof _e=="object"&&_e.hasOwnProperty&&_e.hasOwnProperty("delete")&&_e.delete()}Be&&(h.I=Be)}))}}),h.j.attachMultiListener(V,z),V.delete()}r.onResults=function(h,v){this.listeners[v||"$"]=h},we("Solution",sy),we("OptionType",{BOOL:0,NUMBER:1,ua:2,0:"BOOL",1:"NUMBER",2:"STRING"});function xS(h){switch(h===void 0&&(h=0),h){case 1:return"pose_landmark_full.tflite";case 2:return"pose_landmark_heavy.tflite";default:return"pose_landmark_lite.tflite"}}function yS(h){var v=this;h=h||{},this.h=new sy({locateFile:h.locateFile,files:function(C){return[{url:"pose_solution_packed_assets_loader.js"},{simd:!1,url:"pose_solution_wasm_bin.js"},{simd:!0,url:"pose_solution_simd_wasm_bin.js"},{data:!0,url:xS(C.modelComplexity)}]},graph:{url:"pose_web.binarypb"},listeners:[{wants:["pose_landmarks","world_landmarks","segmentation_mask","image_transformed"],outs:{image:{type:"texture",stream:"image_transformed"},poseLandmarks:{type:"proto",stream:"pose_landmarks",transform:ny},poseWorldLandmarks:{type:"proto",stream:"world_landmarks",transform:ny},segmentationMask:{type:"texture",stream:"segmentation_mask"}}}],inputs:{image:{type:"video",stream:"input_frames_gpu"}},options:{useCpuInference:{type:0,graphOptionXref:{calculatorType:"InferenceCalculator",fieldName:"use_cpu_inference"},default:typeof window!="object"||window.navigator===void 0?!1:"iPad Simulator;iPhone Simulator;iPod Simulator;iPad;iPhone;iPod".split(";").includes(navigator.platform)||navigator.userAgent.includes("Mac")&&"ontouchend"in document},selfieMode:{type:0,graphOptionXref:{calculatorType:"GlScalerCalculator",calculatorIndex:1,fieldName:"flip_horizontal"}},modelComplexity:{type:1,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculatorModelComplexity",fieldName:"int_value"},onChange:function(C){var $,V,z;return re(function(U){return U.h==1?($=xS(C),V="third_party/mediapipe/modules/pose_landmark/"+$,N(U,Td(v.h,$),2)):(z=U.i,v.h.overrideFile(V,z),U.return(!0))})}},smoothLandmarks:{type:0,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculatorSmoothLandmarks",fieldName:"bool_value"}},enableSegmentation:{type:0,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculatorEnableSegmentation",fieldName:"bool_value"}},smoothSegmentation:{type:0,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculatorSmoothSegmentation",fieldName:"bool_value"}},minDetectionConfidence:{type:1,graphOptionXref:{calculatorType:"TensorsToDetectionsCalculator",calculatorName:"poselandmarkgpu__posedetectiongpu__TensorsToDetectionsCalculator",fieldName:"min_score_thresh"}},minTrackingConfidence:{type:1,graphOptionXref:{calculatorType:"ThresholdingCalculator",calculatorName:"poselandmarkgpu__poselandmarkbyroigpu__tensorstoposelandmarksandsegmentation__ThresholdingCalculator",fieldName:"threshold"}}}})}r=yS.prototype,r.reset=function(){this.h.reset()},r.close=function(){return this.h.close(),Promise.resolve()},r.onResults=function(h){this.h.onResults(h)},r.initialize=function(){var h=this;return re(function(v){return N(v,h.h.initialize(),0)})},r.send=function(h,v){var C=this;return re(function($){return N($,C.h.send(h,v),0)})},r.setOptions=function(h){this.h.setOptions(h)},we("Pose",yS),we("POSE_CONNECTIONS",[[0,1],[1,2],[2,3],[3,7],[0,4],[4,5],[5,6],[6,8],[9,10],[11,12],[11,13],[13,15],[15,17],[15,19],[15,21],[17,19],[12,14],[14,16],[16,18],[16,20],[16,22],[18,20],[11,23],[12,24],[23,24],[23,25],[24,26],[25,27],[26,28],[27,29],[28,30],[29,31],[30,32],[27,31],[28,32]]),we("POSE_LANDMARKS",{NOSE:0,LEFT_EYE_INNER:1,LEFT_EYE:2,LEFT_EYE_OUTER:3,RIGHT_EYE_INNER:4,RIGHT_EYE:5,RIGHT_EYE_OUTER:6,LEFT_EAR:7,RIGHT_EAR:8,LEFT_RIGHT:9,RIGHT_LEFT:10,LEFT_SHOULDER:11,RIGHT_SHOULDER:12,LEFT_ELBOW:13,RIGHT_ELBOW:14,LEFT_WRIST:15,RIGHT_WRIST:16,LEFT_PINKY:17,RIGHT_PINKY:18,LEFT_INDEX:19,RIGHT_INDEX:20,LEFT_THUMB:21,RIGHT_THUMB:22,LEFT_HIP:23,RIGHT_HIP:24,LEFT_KNEE:25,RIGHT_KNEE:26,LEFT_ANKLE:27,RIGHT_ANKLE:28,LEFT_HEEL:29,RIGHT_HEEL:30,LEFT_FOOT_INDEX:31,RIGHT_FOOT_INDEX:32}),we("POSE_LANDMARKS_LEFT",{LEFT_EYE_INNER:1,LEFT_EYE:2,LEFT_EYE_OUTER:3,LEFT_EAR:7,LEFT_RIGHT:9,LEFT_SHOULDER:11,LEFT_ELBOW:13,LEFT_WRIST:15,LEFT_PINKY:17,LEFT_INDEX:19,LEFT_THUMB:21,LEFT_HIP:23,LEFT_KNEE:25,LEFT_ANKLE:27,LEFT_HEEL:29,LEFT_FOOT_INDEX:31}),we("POSE_LANDMARKS_RIGHT",{RIGHT_EYE_INNER:4,RIGHT_EYE:5,RIGHT_EYE_OUTER:6,RIGHT_EAR:8,RIGHT_LEFT:10,RIGHT_SHOULDER:12,RIGHT_ELBOW:14,RIGHT_WRIST:16,RIGHT_PINKY:18,RIGHT_INDEX:20,RIGHT_THUMB:22,RIGHT_HIP:24,RIGHT_KNEE:26,RIGHT_ANKLE:28,RIGHT_HEEL:30,RIGHT_FOOT_INDEX:32}),we("POSE_LANDMARKS_NEUTRAL",{NOSE:0}),we("VERSION","0.5.1675469404")}).call(nw)});var Iw=xo((Wse,kw)=>{"use strict";kw.exports=It;var Ao=null;try{Ao=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}function It(r,t,e){this.low=r|0,this.high=t|0,this.unsigned=!!e}It.prototype.__isLong__;Object.defineProperty(It.prototype,"__isLong__",{value:!0});function to(r){return(r&&r.__isLong__)===!0}It.isLong=to;var gw={},xw={};function Ds(r,t){var e,o,n;return t?(r>>>=0,(n=0<=r&&r<256)&&(o=xw[r],o)?o:(e=Tt(r,(r|0)<0?-1:0,!0),n&&(xw[r]=e),e)):(r|=0,(n=-128<=r&&r<128)&&(o=gw[r],o)?o:(e=Tt(r,r<0?-1:0,!1),n&&(gw[r]=e),e))}It.fromInt=Ds;function Do(r,t){if(isNaN(r))return t?As:Fo;if(t){if(r<0)return As;if(r>=Sw)return Cw}else{if(r<=-vw)return eo;if(r+1>=vw)return _w}return r<0?Do(-r,t).neg():Tt(r%sc|0,r/sc|0,t)}It.fromNumber=Do;function Tt(r,t,e){return new It(r,t,e)}It.fromBits=Tt;var Am=Math.pow;function ky(r,t,e){if(r.length===0)throw Error("empty string");if(r==="NaN"||r==="Infinity"||r==="+Infinity"||r==="-Infinity")return Fo;if(typeof t=="number"?(e=t,t=!1):t=!!t,e=e||10,e<2||36<e)throw RangeError("radix");var o;if((o=r.indexOf("-"))>0)throw Error("interior hyphen");if(o===0)return ky(r.substring(1),t,e).neg();for(var n=Do(Am(e,8)),i=Fo,s=0;s<r.length;s+=8){var a=Math.min(8,r.length-s),l=parseInt(r.substring(s,s+a),e);if(a<8){var u=Do(Am(e,a));i=i.mul(u).add(Do(l))}else i=i.mul(n),i=i.add(Do(l))}return i.unsigned=t,i}It.fromString=ky;function Go(r,t){return typeof r=="number"?Do(r,t):typeof r=="string"?ky(r,t):Tt(r.low,r.high,typeof t=="boolean"?t:r.unsigned)}It.fromValue=Go;var yw=65536,MW=1<<24,sc=yw*yw,Sw=sc*sc,vw=Sw/2,bw=Ds(MW),Fo=Ds(0);It.ZERO=Fo;var As=Ds(0,!0);It.UZERO=As;var ic=Ds(1);It.ONE=ic;var ww=Ds(1,!0);It.UONE=ww;var Cy=Ds(-1);It.NEG_ONE=Cy;var _w=Tt(-1,2147483647,!1);It.MAX_VALUE=_w;var Cw=Tt(-1,-1,!0);It.MAX_UNSIGNED_VALUE=Cw;var eo=Tt(0,-2147483648,!1);It.MIN_VALUE=eo;var ve=It.prototype;ve.toInt=function(){return this.unsigned?this.low>>>0:this.low};ve.toNumber=function(){return this.unsigned?(this.high>>>0)*sc+(this.low>>>0):this.high*sc+(this.low>>>0)};ve.toString=function(t){if(t=t||10,t<2||36<t)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(eo)){var e=Do(t),o=this.div(e),n=o.mul(e).sub(this);return o.toString(t)+n.toInt().toString(t)}else return"-"+this.neg().toString(t);for(var i=Do(Am(t,6),this.unsigned),s=this,a="";;){var l=s.div(i),u=s.sub(l.mul(i)).toInt()>>>0,c=u.toString(t);if(s=l,s.isZero())return c+a;for(;c.length<6;)c="0"+c;a=""+c+a}};ve.getHighBits=function(){return this.high};ve.getHighBitsUnsigned=function(){return this.high>>>0};ve.getLowBits=function(){return this.low};ve.getLowBitsUnsigned=function(){return this.low>>>0};ve.getNumBitsAbs=function(){if(this.isNegative())return this.eq(eo)?64:this.neg().getNumBitsAbs();for(var t=this.high!=0?this.high:this.low,e=31;e>0&&(t&1<<e)==0;e--);return this.high!=0?e+33:e+1};ve.isZero=function(){return this.high===0&&this.low===0};ve.eqz=ve.isZero;ve.isNegative=function(){return!this.unsigned&&this.high<0};ve.isPositive=function(){return this.unsigned||this.high>=0};ve.isOdd=function(){return(this.low&1)===1};ve.isEven=function(){return(this.low&1)===0};ve.equals=function(t){return to(t)||(t=Go(t)),this.unsigned!==t.unsigned&&this.high>>>31===1&&t.high>>>31===1?!1:this.high===t.high&&this.low===t.low};ve.eq=ve.equals;ve.notEquals=function(t){return!this.eq(t)};ve.neq=ve.notEquals;ve.ne=ve.notEquals;ve.lessThan=function(t){return this.comp(t)<0};ve.lt=ve.lessThan;ve.lessThanOrEqual=function(t){return this.comp(t)<=0};ve.lte=ve.lessThanOrEqual;ve.le=ve.lessThanOrEqual;ve.greaterThan=function(t){return this.comp(t)>0};ve.gt=ve.greaterThan;ve.greaterThanOrEqual=function(t){return this.comp(t)>=0};ve.gte=ve.greaterThanOrEqual;ve.ge=ve.greaterThanOrEqual;ve.compare=function(t){if(to(t)||(t=Go(t)),this.eq(t))return 0;var e=this.isNegative(),o=t.isNegative();return e&&!o?-1:!e&&o?1:this.unsigned?t.high>>>0>this.high>>>0||t.high===this.high&&t.low>>>0>this.low>>>0?-1:1:this.sub(t).isNegative()?-1:1};ve.comp=ve.compare;ve.negate=function(){return!this.unsigned&&this.eq(eo)?eo:this.not().add(ic)};ve.neg=ve.negate;ve.add=function(t){to(t)||(t=Go(t));var e=this.high>>>16,o=this.high&65535,n=this.low>>>16,i=this.low&65535,s=t.high>>>16,a=t.high&65535,l=t.low>>>16,u=t.low&65535,c=0,p=0,d=0,m=0;return m+=i+u,d+=m>>>16,m&=65535,d+=n+l,p+=d>>>16,d&=65535,p+=o+a,c+=p>>>16,p&=65535,c+=e+s,c&=65535,Tt(d<<16|m,c<<16|p,this.unsigned)};ve.subtract=function(t){return to(t)||(t=Go(t)),this.add(t.neg())};ve.sub=ve.subtract;ve.multiply=function(t){if(this.isZero())return Fo;if(to(t)||(t=Go(t)),Ao){var e=Ao.mul(this.low,this.high,t.low,t.high);return Tt(e,Ao.get_high(),this.unsigned)}if(t.isZero())return Fo;if(this.eq(eo))return t.isOdd()?eo:Fo;if(t.eq(eo))return this.isOdd()?eo:Fo;if(this.isNegative())return t.isNegative()?this.neg().mul(t.neg()):this.neg().mul(t).neg();if(t.isNegative())return this.mul(t.neg()).neg();if(this.lt(bw)&&t.lt(bw))return Do(this.toNumber()*t.toNumber(),this.unsigned);var o=this.high>>>16,n=this.high&65535,i=this.low>>>16,s=this.low&65535,a=t.high>>>16,l=t.high&65535,u=t.low>>>16,c=t.low&65535,p=0,d=0,m=0,f=0;return f+=s*c,m+=f>>>16,f&=65535,m+=i*c,d+=m>>>16,m&=65535,m+=s*u,d+=m>>>16,m&=65535,d+=n*c,p+=d>>>16,d&=65535,d+=i*u,p+=d>>>16,d&=65535,d+=s*l,p+=d>>>16,d&=65535,p+=o*c+n*u+i*l+s*a,p&=65535,Tt(m<<16|f,p<<16|d,this.unsigned)};ve.mul=ve.multiply;ve.divide=function(t){if(to(t)||(t=Go(t)),t.isZero())throw Error("division by zero");if(Ao){if(!this.unsigned&&this.high===-2147483648&&t.low===-1&&t.high===-1)return this;var e=(this.unsigned?Ao.div_u:Ao.div_s)(this.low,this.high,t.low,t.high);return Tt(e,Ao.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?As:Fo;var o,n,i;if(this.unsigned){if(t.unsigned||(t=t.toUnsigned()),t.gt(this))return As;if(t.gt(this.shru(1)))return ww;i=As}else{if(this.eq(eo)){if(t.eq(ic)||t.eq(Cy))return eo;if(t.eq(eo))return ic;var s=this.shr(1);return o=s.div(t).shl(1),o.eq(Fo)?t.isNegative()?ic:Cy:(n=this.sub(t.mul(o)),i=o.add(n.div(t)),i)}else if(t.eq(eo))return this.unsigned?As:Fo;if(this.isNegative())return t.isNegative()?this.neg().div(t.neg()):this.neg().div(t).neg();if(t.isNegative())return this.div(t.neg()).neg();i=Fo}for(n=this;n.gte(t);){o=Math.max(1,Math.floor(n.toNumber()/t.toNumber()));for(var a=Math.ceil(Math.log(o)/Math.LN2),l=a<=48?1:Am(2,a-48),u=Do(o),c=u.mul(t);c.isNegative()||c.gt(n);)o-=l,u=Do(o,this.unsigned),c=u.mul(t);u.isZero()&&(u=ic),i=i.add(u),n=n.sub(c)}return i};ve.div=ve.divide;ve.modulo=function(t){if(to(t)||(t=Go(t)),Ao){var e=(this.unsigned?Ao.rem_u:Ao.rem_s)(this.low,this.high,t.low,t.high);return Tt(e,Ao.get_high(),this.unsigned)}return this.sub(this.div(t).mul(t))};ve.mod=ve.modulo;ve.rem=ve.modulo;ve.not=function(){return Tt(~this.low,~this.high,this.unsigned)};ve.and=function(t){return to(t)||(t=Go(t)),Tt(this.low&t.low,this.high&t.high,this.unsigned)};ve.or=function(t){return to(t)||(t=Go(t)),Tt(this.low|t.low,this.high|t.high,this.unsigned)};ve.xor=function(t){return to(t)||(t=Go(t)),Tt(this.low^t.low,this.high^t.high,this.unsigned)};ve.shiftLeft=function(t){return to(t)&&(t=t.toInt()),(t&=63)===0?this:t<32?Tt(this.low<<t,this.high<<t|this.low>>>32-t,this.unsigned):Tt(0,this.low<<t-32,this.unsigned)};ve.shl=ve.shiftLeft;ve.shiftRight=function(t){return to(t)&&(t=t.toInt()),(t&=63)===0?this:t<32?Tt(this.low>>>t|this.high<<32-t,this.high>>t,this.unsigned):Tt(this.high>>t-32,this.high>=0?0:-1,this.unsigned)};ve.shr=ve.shiftRight;ve.shiftRightUnsigned=function(t){if(to(t)&&(t=t.toInt()),t&=63,t===0)return this;var e=this.high;if(t<32){var o=this.low;return Tt(o>>>t|e<<32-t,e>>>t,this.unsigned)}else return t===32?Tt(e,0,this.unsigned):Tt(e>>>t-32,0,this.unsigned)};ve.shru=ve.shiftRightUnsigned;ve.shr_u=ve.shiftRightUnsigned;ve.toSigned=function(){return this.unsigned?Tt(this.low,this.high,!1):this};ve.toUnsigned=function(){return this.unsigned?this:Tt(this.low,this.high,!0)};ve.toBytes=function(t){return t?this.toBytesLE():this.toBytesBE()};ve.toBytesLE=function(){var t=this.high,e=this.low;return[e&255,e>>>8&255,e>>>16&255,e>>>24,t&255,t>>>8&255,t>>>16&255,t>>>24]};ve.toBytesBE=function(){var t=this.high,e=this.low;return[t>>>24,t>>>16&255,t>>>8&255,t&255,e>>>24,e>>>16&255,e>>>8&255,e&255]};It.fromBytes=function(t,e,o){return o?It.fromBytesLE(t,e):It.fromBytesBE(t,e)};It.fromBytesLE=function(t,e){return new It(t[0]|t[1]<<8|t[2]<<16|t[3]<<24,t[4]|t[5]<<8|t[6]<<16|t[7]<<24,e)};It.fromBytesBE=function(t,e){return new It(t[4]<<24|t[5]<<16|t[6]<<8|t[7],t[0]<<24|t[1]<<16|t[2]<<8|t[3],e)}});var h_=xo((fc,f_)=>{"use strict";var _U=function(){if(typeof self<"u")return self;if(typeof window<"u")return window;if(typeof global<"u")return global;throw new Error("unable to locate global object")},Us=_U();f_.exports=fc=Us.fetch;Us.fetch&&(fc.default=Us.fetch.bind(Us));fc.Headers=Us.Headers;fc.Request=Us.Request;fc.Response=Us.Response});var g_=xo(()=>{"use strict"});var U2=xo((W2,Qy)=>{"use strict";(function(r,t,e){function o(a){var l=this,u=s();l.next=function(){var c=2091639*l.s0+l.c*23283064365386963e-26;return l.s0=l.s1,l.s1=l.s2,l.s2=c-(l.c=c|0)},l.c=1,l.s0=u(" "),l.s1=u(" "),l.s2=u(" "),l.s0-=u(a),l.s0<0&&(l.s0+=1),l.s1-=u(a),l.s1<0&&(l.s1+=1),l.s2-=u(a),l.s2<0&&(l.s2+=1),u=null}function n(a,l){return l.c=a.c,l.s0=a.s0,l.s1=a.s1,l.s2=a.s2,l}function i(a,l){var u=new o(a),c=l&&l.state,p=u.next;return p.int32=function(){return u.next()*4294967296|0},p.double=function(){return p()+(p()*2097152|0)*11102230246251565e-32},p.quick=p,c&&(typeof c=="object"&&n(c,u),p.state=function(){return n(u,{})}),p}function s(){var a=4022871197,l=function(u){u=String(u);for(var c=0;c<u.length;c++){a+=u.charCodeAt(c);var p=.02519603282416938*a;a=p>>>0,p-=a,p*=a,a=p>>>0,p-=a,a+=p*4294967296}return(a>>>0)*23283064365386963e-26};return l}t&&t.exports?t.exports=i:e&&e.amd?e(function(){return i}):this.alea=i})(W2,typeof Qy=="object"&&Qy,typeof define=="function"&&define)});var G2=xo((z2,Zy)=>{"use strict";(function(r,t,e){function o(s){var a=this,l="";a.x=0,a.y=0,a.z=0,a.w=0,a.next=function(){var c=a.x^a.x<<11;return a.x=a.y,a.y=a.z,a.z=a.w,a.w^=a.w>>>19^c^c>>>8},s===(s|0)?a.x=s:l+=s;for(var u=0;u<l.length+64;u++)a.x^=l.charCodeAt(u)|0,a.next()}function n(s,a){return a.x=s.x,a.y=s.y,a.z=s.z,a.w=s.w,a}function i(s,a){var l=new o(s),u=a&&a.state,c=function(){return(l.next()>>>0)/4294967296};return c.double=function(){do var p=l.next()>>>11,d=(l.next()>>>0)/4294967296,m=(p+d)/(1<<21);while(m===0);return m},c.int32=l.next,c.quick=c,u&&(typeof u=="object"&&n(u,l),c.state=function(){return n(l,{})}),c}t&&t.exports?t.exports=i:e&&e.amd?e(function(){return i}):this.xor128=i})(z2,typeof Zy=="object"&&Zy,typeof define=="function"&&define)});var K2=xo((H2,Jy)=>{"use strict";(function(r,t,e){function o(s){var a=this,l="";a.next=function(){var c=a.x^a.x>>>2;return a.x=a.y,a.y=a.z,a.z=a.w,a.w=a.v,(a.d=a.d+362437|0)+(a.v=a.v^a.v<<4^(c^c<<1))|0},a.x=0,a.y=0,a.z=0,a.w=0,a.v=0,s===(s|0)?a.x=s:l+=s;for(var u=0;u<l.length+64;u++)a.x^=l.charCodeAt(u)|0,u==l.length&&(a.d=a.x<<10^a.x>>>4),a.next()}function n(s,a){return a.x=s.x,a.y=s.y,a.z=s.z,a.w=s.w,a.v=s.v,a.d=s.d,a}function i(s,a){var l=new o(s),u=a&&a.state,c=function(){return(l.next()>>>0)/4294967296};return c.double=function(){do var p=l.next()>>>11,d=(l.next()>>>0)/4294967296,m=(p+d)/(1<<21);while(m===0);return m},c.int32=l.next,c.quick=c,u&&(typeof u=="object"&&n(u,l),c.state=function(){return n(l,{})}),c}t&&t.exports?t.exports=i:e&&e.amd?e(function(){return i}):this.xorwow=i})(H2,typeof Jy=="object"&&Jy,typeof define=="function"&&define)});var j2=xo((q2,ev)=>{"use strict";(function(r,t,e){function o(s){var a=this;a.next=function(){var u=a.x,c=a.i,p,d,m;return p=u[c],p^=p>>>7,d=p^p<<24,p=u[c+1&7],d^=p^p>>>10,p=u[c+3&7],d^=p^p>>>3,p=u[c+4&7],d^=p^p<<7,p=u[c+7&7],p=p^p<<13,d^=p^p<<9,u[c]=d,a.i=c+1&7,d};function l(u,c){var p,d,m=[];if(c===(c|0))d=m[0]=c;else for(c=""+c,p=0;p<c.length;++p)m[p&7]=m[p&7]<<15^c.charCodeAt(p)+m[p+1&7]<<13;for(;m.length<8;)m.push(0);for(p=0;p<8&&m[p]===0;++p);for(p==8?d=m[7]=-1:d=m[p],u.x=m,u.i=0,p=256;p>0;--p)u.next()}l(a,s)}function n(s,a){return a.x=s.x.slice(),a.i=s.i,a}function i(s,a){s==null&&(s=+new Date);var l=new o(s),u=a&&a.state,c=function(){return(l.next()>>>0)/4294967296};return c.double=function(){do var p=l.next()>>>11,d=(l.next()>>>0)/4294967296,m=(p+d)/(1<<21);while(m===0);return m},c.int32=l.next,c.quick=c,u&&(u.x&&n(u,l),c.state=function(){return n(l,{})}),c}t&&t.exports?t.exports=i:e&&e.amd?e(function(){return i}):this.xorshift7=i})(q2,typeof ev=="object"&&ev,typeof define=="function"&&define)});var Y2=xo((X2,tv)=>{"use strict";(function(r,t,e){function o(s){var a=this;a.next=function(){var u=a.w,c=a.X,p=a.i,d,m;return a.w=u=u+1640531527|0,m=c[p+34&127],d=c[p=p+1&127],m^=m<<13,d^=d<<17,m^=m>>>15,d^=d>>>12,m=c[p]=m^d,a.i=p,m+(u^u>>>16)|0};function l(u,c){var p,d,m,f,g,x=[],y=128;for(c===(c|0)?(d=c,c=null):(c=c+"\0",d=0,y=Math.max(y,c.length)),m=0,f=-32;f<y;++f)c&&(d^=c.charCodeAt((f+32)%c.length)),f===0&&(g=d),d^=d<<10,d^=d>>>15,d^=d<<4,d^=d>>>13,f>=0&&(g=g+1640531527|0,p=x[f&127]^=d+g,m=p==0?m+1:0);for(m>=128&&(x[(c&&c.length||0)&127]=-1),m=127,f=4*128;f>0;--f)d=x[m+34&127],p=x[m=m+1&127],d^=d<<13,p^=p<<17,d^=d>>>15,p^=p>>>12,x[m]=d^p;u.w=g,u.X=x,u.i=m}l(a,s)}function n(s,a){return a.i=s.i,a.w=s.w,a.X=s.X.slice(),a}function i(s,a){s==null&&(s=+new Date);var l=new o(s),u=a&&a.state,c=function(){return(l.next()>>>0)/4294967296};return c.double=function(){do var p=l.next()>>>11,d=(l.next()>>>0)/4294967296,m=(p+d)/(1<<21);while(m===0);return m},c.int32=l.next,c.quick=c,u&&(u.X&&n(u,l),c.state=function(){return n(l,{})}),c}t&&t.exports?t.exports=i:e&&e.amd?e(function(){return i}):this.xor4096=i})(X2,typeof tv=="object"&&tv,typeof define=="function"&&define)});var Z2=xo((Q2,rv)=>{"use strict";(function(r,t,e){function o(s){var a=this,l="";a.next=function(){var c=a.b,p=a.c,d=a.d,m=a.a;return c=c<<25^c>>>7^p,p=p-d|0,d=d<<24^d>>>8^m,m=m-c|0,a.b=c=c<<20^c>>>12^p,a.c=p=p-d|0,a.d=d<<16^p>>>16^m,a.a=m-c|0},a.a=0,a.b=0,a.c=-1640531527,a.d=1367130551,s===Math.floor(s)?(a.a=s/4294967296|0,a.b=s|0):l+=s;for(var u=0;u<l.length+20;u++)a.b^=l.charCodeAt(u)|0,a.next()}function n(s,a){return a.a=s.a,a.b=s.b,a.c=s.c,a.d=s.d,a}function i(s,a){var l=new o(s),u=a&&a.state,c=function(){return(l.next()>>>0)/4294967296};return c.double=function(){do var p=l.next()>>>11,d=(l.next()>>>0)/4294967296,m=(p+d)/(1<<21);while(m===0);return m},c.int32=l.next,c.quick=c,u&&(typeof u=="object"&&n(u,l),c.state=function(){return n(l,{})}),c}t&&t.exports?t.exports=i:e&&e.amd?e(function(){return i}):this.tychei=i})(Q2,typeof rv=="object"&&rv,typeof define=="function"&&define)});var J2=xo(()=>{"use strict"});var tC=xo((eC,_f)=>{"use strict";(function(r,t,e){var o=256,n=6,i=52,s="random",a=e.pow(o,n),l=e.pow(2,i),u=l*2,c=o-1,p;function d(I,N,M){var B=[];N=N==!0?{entropy:!0}:N||{};var W=x(g(N.entropy?[I,b(t)]:I??y(),3),B),H=new m(B),K=function(){for(var X=H.g(n),re=a,ce=0;X<l;)X=(X+ce)*o,re*=o,ce=H.g(1);for(;X>=u;)X/=2,re/=2,ce>>>=1;return(X+ce)/re};return K.int32=function(){return H.g(4)|0},K.quick=function(){return H.g(4)/4294967296},K.double=K,x(b(H.S),t),(N.pass||M||function(X,re,ce,pe){return pe&&(pe.S&&f(pe,H),X.state=function(){return f(H,{})}),ce?(e[s]=X,re):X})(K,W,"global"in N?N.global:this==e,N.state)}function m(I){var N,M=I.length,B=this,W=0,H=B.i=B.j=0,K=B.S=[];for(M||(I=[M++]);W<o;)K[W]=W++;for(W=0;W<o;W++)K[W]=K[H=c&H+I[W%M]+(N=K[W])],K[H]=N;(B.g=function(X){for(var re,ce=0,pe=B.i,be=B.j,we=B.S;X--;)re=we[pe=c&pe+1],ce=ce*o+we[c&(we[pe]=we[be=c&be+re])+(we[be]=re)];return B.i=pe,B.j=be,ce})(o)}function f(I,N){return N.i=I.i,N.j=I.j,N.S=I.S.slice(),N}function g(I,N){var M=[],B=typeof I,W;if(N&&B=="object")for(W in I)try{M.push(g(I[W],N-1))}catch{}return M.length?M:B=="string"?I:I+"\0"}function x(I,N){for(var M=I+"",B,W=0;W<M.length;)N[c&W]=c&(B^=N[c&W]*19)+M.charCodeAt(W++);return b(N)}function y(){try{var I;return p&&(I=p.randomBytes)?I=I(o):(I=new Uint8Array(o),(r.crypto||r.msCrypto).getRandomValues(I)),b(I)}catch{var N=r.navigator,M=N&&N.plugins;return[+new Date,r,M,r.screen,b(t)]}}function b(I){return String.fromCharCode.apply(0,I)}if(x(e.random(),t),typeof _f=="object"&&_f.exports){_f.exports=d;try{p=J2()}catch{}}else typeof define=="function"&&define.amd?define(function(){return d}):e["seed"+s]=d})(typeof self<"u"?self:eC,[],Math)});var oC=xo((ESe,rC)=>{"use strict";var d6=U2(),m6=G2(),f6=K2(),h6=j2(),g6=Y2(),x6=Z2(),Xs=tC();Xs.alea=d6;Xs.xor128=m6;Xs.xorwow=f6;Xs.xorshift7=h6;Xs.xor4096=g6;Xs.tychei=x6;rC.exports=Xs});var BL=(r,t)=>({"bg-primary text-white focus:ring-primary-dark":r,"bg-gray-200 text-gray-700 hover:bg-gray-300 dark:bg-gray-600 dark:text-gray-200 dark:hover:bg-gray-500 focus:ring-gray-400":t});function VL(r,t){if(r&1&&(k(0,"option",49),L(1),Ke(2,"titlecase"),T()),r&2){let e=t.$implicit;D("value",e),E(),fe("",ht(2,2,e)," ")}}function WL(r,t){if(r&1&&(k(0,"option",49),L(1),Ke(2,"titlecase"),T()),r&2){let e=t.$implicit;D("value",e),E(),Oe(ht(2,2,e))}}function UL(r,t){if(r&1){let e=me();k(0,"button",54),ne("shortPress",function(){let n=Y(e).$implicit,i=O(2);return Q(i.toggleEquipmentFilter(n))}),L(1),Ke(2,"titlecase"),T()}if(r&2){let e=t.$implicit,o=O(2);D("ngClass",jr(5,BL,o.selectedEquipment().includes(e),!o.selectedEquipment().includes(e))),an("aria-checked",o.selectedEquipment().includes(e)),E(),fe(" ",ht(2,3,e)," ")}}function zL(r,t){if(r&1&&(k(0,"div",50)(1,"label",51),L(2,"Equipment"),T(),k(3,"div",52),te(4,UL,3,8,"button",53),T()()),r&2){let e=O();E(4),D("ngForOf",e.uniqueRoutineEquipments())}}function GL(r,t){if(r&1&&(k(0,"span"),L(1," Showing "),k(2,"strong",55),L(3),T(),L(4," of "),k(5,"strong",55),L(6),T(),L(7," routines "),T()),r&2){let e=O();E(3),Oe(e.filteredRoutines().length),E(3),Oe(e.allRoutinesForList().length)}}function HL(r,t){if(r&1&&se(0,"p",80),r&2){let e=O().$implicit,o=O(3);D("innerHTML",o.updateSanitizedDescription(e.description),Pd)("title",e.description)}}function KL(r,t){if(r&1){let e=me();k(0,"div",81),se(1,"app-icon",82),k(2,"span",83),L(3,"Goal:"),T(),k(4,"button",84),ne("click",function(n){Y(e);let i=O().$implicit,s=O(3);return Q(s.filterByGoal(i.goal,n))}),L(5),Ke(6,"titlecase"),T()()}if(r&2){let e=O().$implicit;E(5),fe(" ",ht(6,1,e.goal)," ")}}function qL(r,t){if(r&1){let e=me();k(0,"button",88),ne("click",function(n){let i=Y(e).$implicit,s=O(5);return Q(s.filterByMuscleGroup(i,n))}),L(1),Ke(2,"titlecase"),T()}if(r&2){let e=t.$implicit;E(),fe(" ",ht(2,1,e)," ")}}function jL(r,t){if(r&1&&(k(0,"div",85),se(1,"app-icon",86),k(2,"span",83),L(3,"Muscles:"),T(),te(4,qL,3,3,"button",87),T()),r&2){let e=O().$implicit,o=O(3);E(4),D("ngForOf",o.getRoutineMainMuscleGroups(e))}}function XL(r,t){if(r&1&&(k(0,"div",89),se(1,"app-icon",90),k(2,"span",83),L(3,"Last:"),T(),L(4),Ke(5,"date"),T()),r&2){let e=O().$implicit;E(4),fe(" ",Xr(5,1,e.lastPerformed,"dd/MM/yy HH:mm")," ")}}function YL(r,t){r&1&&(k(0,"div",91),se(1,"app-icon",90),L(2," Not performed yet "),T())}function QL(r,t){if(r&1&&(k(0,"div",92),se(1,"app-icon",93),k(2,"span",83),L(3,"Est. duration:"),T(),L(4),T()),r&2){let e=O().$implicit,o=O(3);E(4),fe(" ~",o.getRoutineDuration(e)," min ")}}function ZL(r,t){if(r&1&&(k(0,"div",94),se(1,"app-icon",95),k(2,"span",83),L(3,"Last duration:"),T(),L(4),T()),r&2){let e=O().$implicit,o=O(3);E(4),fe(" ",o.lastRoutineDurations()[e.id]," min ")}}function JL(r,t){if(r&1){let e=me();k(0,"div",96),ne("click",function(n){Y(e);let i=O(4);return Q(i.toggleOnlyHiddenRoutines(n))})("shortPress",function(n){Y(e);let i=O(4);return Q(i.toggleOnlyHiddenRoutines(n))})("longPress",function(n){Y(e);let i=O().$implicit,s=O(3);return Q(s.unhideRoutine(i.id,n,!0))}),k(1,"span",97),se(2,"app-icon",98),L(3),Ke(4,"titlecase"),T()()}r&2&&(D("title","Click to filter for favourites. Long-press for unmark as favourite"),E(3),fe(" ",ht(4,2,"Hidden")," "))}function e4(r,t){if(r&1){let e=me();k(0,"div",99),ne("shortPress",function(n){Y(e);let i=O(4);return Q(i.toggleOnlyFavouriteRoutines(n))})("longPress",function(n){Y(e);let i=O().$implicit,s=O(3);return Q(s.unmarkAsFavourite(i.id,n,!0))}),k(1,"span",100),se(2,"app-icon",101),L(3),Ke(4,"titlecase"),T()()}r&2&&(D("title","Click to filter for favourites. Long-press for unmark as favourite"),E(3),fe(" ",ht(4,2,"Favourite")," "))}function t4(r,t){if(r&1){let e=me();k(0,"app-action-menu",102),ne("itemClick",function(n){Y(e);let i=O(4);return Q(i.handleActionMenuItemClick(n))})("closeMenu",function(){Y(e);let n=O(4);return Q(n.onCloseActionMenu())}),T()}if(r&2){let e=O().$implicit,o=O(3);D("items",o.getRoutineDropdownActionItems(e.id,"dropdown"))("isVisible",o.areActionsVisible(e.id))}}function r4(r,t){if(r&1){let e=me();k(0,"app-action-menu",103),ne("itemClick",function(n){Y(e);let i=O(4);return Q(i.handleActionMenuItemClick(n))})("closeMenu",function(){Y(e);let n=O(4);return Q(n.onCloseActionMenu())}),T()}if(r&2){let e=O().$implicit,o=O(3);D("items",o.getRoutineDropdownActionItems(e.id,"compact-bar"))("isVisible",o.areActionsVisible(e.id))}}function o4(r,t){if(r&1){let e=me();k(0,"button",59),ne("click",function(n){let i=Y(e).$implicit,s=O(3);return Q(s.viewRoutineDetails(i.id,n))}),k(1,"div",60)(2,"div",61)(3,"h2",62),L(4),T()(),te(5,HL,1,2,"p",63),k(6,"div",64),te(7,KL,7,3,"div",65),T(),te(8,jL,5,1,"div",66)(9,XL,6,4,"div",67)(10,YL,3,0,"div",68),k(11,"div"),te(12,QL,5,1,"div",69),T(),k(13,"div"),te(14,ZL,5,1,"div",70),T(),k(15,"div",71),te(16,JL,5,4,"div",72)(17,e4,5,4,"div",73),T()(),k(18,"div",74)(19,"div",75)(20,"button",76),ne("click",function(n){let i=Y(e).$implicit,s=O(3);return Q(s.toggleActions(i.id,n))}),se(21,"app-icon",77),T(),te(22,t4,1,2,"app-action-menu",78),T()(),te(23,r4,1,2,"app-action-menu",79),T()}if(r&2){let e=t.$implicit,o=O(3);hp("z-index",o.areActionsVisible(e.id)?50:"auto"),E(3),D("title",e.name),E(),Oe(e.name),E(),D("ngIf",e.description),E(2),D("ngIf",e.goal),E(),D("ngIf",o.getRoutineMainMuscleGroups(e).length>0),E(),D("ngIf",e.lastPerformed),E(),D("ngIf",!e.lastPerformed),E(2),D("ngIf",e&&o.getRoutineDuration(e)>0),E(2),D("ngIf",o.lastRoutineDurations()[e.id]),E(2),D("ngIf",e.isHidden),E(),D("ngIf",e.isFavourite),E(3),an("aria-label","Actions for "+e.name)("aria-expanded",o.areActionsVisible(e.id)),E(2),D("ngIf",o.areActionsVisible(e.id)&&!o.menuModeCompact),E(),D("ngIf",o.areActionsVisible(e.id)&&o.menuModeCompact)}}function n4(r,t){if(r&1&&(k(0,"div",57),te(1,o4,24,17,"button",58),T()),r&2){let e=O(2);E(),D("ngForOf",e.filteredRoutines())}}function i4(r,t){if(r&1&&(k(0,"div"),te(1,n4,2,1,"div",56),T()),r&2){let e=O(),o=Uo(67);E(),D("ngIf",e.filteredRoutines().length>0)("ngIfElse",o)}}function s4(r,t){if(r&1){let e=me();k(0,"button",110),ne("shortPress",function(){Y(e);let n=O(2);return Q(n.navigateToCreateRoutine())}),se(1,"app-icon",111),L(2," CREATE YOUR FIRST ROUTINE "),T()}}function a4(r,t){if(r&1&&(k(0,"div",104),se(1,"app-icon",105),k(2,"h3",106),L(3),T(),k(4,"p",107),L(5),T(),k(6,"div",108),te(7,s4,3,0,"button",109),T()()),r&2){let e=O();E(3),fe(" ",e.routineSearchTerm()||e.selectedRoutineGoal()||e.selectedRoutineMuscleGroup()?"No Routines Match Filters":"No Routines Yet!"," "),E(2),fe(" ",e.routineSearchTerm()||e.selectedRoutineGoal()||e.selectedRoutineMuscleGroup()?"Try adjusting your filters.":"Get started by creating your first workout routine."," "),E(2),D("ngIf",!(e.routineSearchTerm()||e.selectedRoutineGoal()||e.selectedRoutineMuscleGroup()))}}function l4(r,t){r&1&&(k(0,"div",112),Ue(),k(1,"svg",113),se(2,"circle",114)(3,"path",115),T(),bt(),k(4,"p",7),L(5,"Loading..."),T(),k(6,"p",116),L(7,"Loading routines..."),T()())}function u4(r,t){if(r&1){let e=me();k(0,"button",117),ne("shortPress",function(){Y(e);let n=O();return Q(n.scrollToTop())}),se(1,"app-icon",118),k(2,"span",7),L(3,"Back to Top"),T()()}r&2&&(E(),yo("rotate-90",!0),D("strokeWidth",2.5))}function c4(r,t){if(r&1){let e=me();k(0,"div",119)(1,"div",120)(2,"span",121),L(3," CREATE ROUTINE "),T(),k(4,"button",122),ne("shortPress",function(){Y(e);let n=O();return Q(n.navigateToCreateRoutine())}),se(5,"app-icon",123),k(6,"span",7),L(7,"CREATE NEW ROUTINE"),T()()(),k(8,"div",120)(9,"span",124),L(10," START NEW SESSION "),T(),k(11,"button",125),ne("shortPress",function(){Y(e);let n=O();return Q(n.startNewSession())}),Ue(),k(12,"svg",126),se(13,"path",127),T(),bt(),k(14,"span",7),L(15,"Start New Ad-Hoc Session"),T()()()()}r&2&&D("@fabSlideUp",void 0)}var tm=class r{workoutService=$e(Ma);exerciseService=$e(fn);trackingService=$e(mi);trainingService=$e(Ba);router=$e(ui);alertService=$e(Oa);spinnerService=$e(Qd);toastService=$e(La);storageService=$e(Xd);themeService=$e(zS);platformId=$e(Ia);sanitizer=$e(Ld);sanitizedDescription="";routines$;allRoutinesForList=ge([]);routinesSubscription;exercisesSubscription;showBackToTopButton=ge(!1);onWindowScroll(){let t=window.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop||0;this.showBackToTopButton.set(t>400)}visibleActionsRutineId=ge(null);menuModeCompact=!1;isFilterAccordionOpen=ge(!1);routineSearchTerm=ge("");selectedRoutineGoal=ge(null);selectedEquipment=ge([]);selectedRoutineMuscleGroup=ge(null);uniqueRoutineGoals=ge([]);uniqueRoutineEquipments=ge([]);uniqueRoutineMuscleGroups=ge([]);allExercisesMap=new Map;PAUSED_WORKOUT_KEY="fitTrackPro_pausedWorkoutState";maxDuration=ge(120);selectedMaxDuration=ge(120);showHiddenRoutines=ge(!1);showFavouriteRoutinesOnly=ge(!1);hideRoutines=t=>{this.showHiddenRoutines.set(t),t?this.toastService.info("Showing hidden routines",2e3,"Hidden Routines"):this.toastService.info("Hiding hidden routines",2e3,"Hidden Routines"),this.vibrate(),this.closeFilterAndScrollToTop()};showFavouriteOnlyRoutines=t=>{this.showFavouriteRoutinesOnly.set(t),t&&this.toastService.info("Showing only favourite routines",2e3,"Hidden Routines"),this.vibrate(),this.closeFilterAndScrollToTop()};closeFilterAndScrollToTop(){window.scrollTo({top:0,behavior:"smooth"}),this.isFilterAccordionOpen.set(!1)}filteredRoutines=gt(()=>{let t=this.allRoutinesForList(),e=this.showHiddenRoutines(),o=this.showFavouriteRoutinesOnly();e||(t=t.filter(c=>!c.isHidden)),o&&(t=t.filter(c=>c.isFavourite));let n=this.routineSearchTerm().toLowerCase(),i=this.selectedRoutineGoal(),s=this.selectedRoutineMuscleGroup(),a=this.selectedEquipment(),l=this.selectedMaxDuration();if(t=t.map(c=>qt(Vt({},c),{estimatedDuration:this.getRoutineDuration(c)})).filter(c=>c.estimatedDuration<=l),n){let c=n.split(/\s+/).filter(Boolean);t=t.filter(p=>{let d=[p.name,p.description||""].join(" ").toLowerCase();return c.every(m=>d.includes(m))})}return i&&(t=t.filter(c=>c.goal?.toLowerCase()===i.toLowerCase())),s&&(t=t.filter(c=>c.exercises.some(p=>this.allExercisesMap.get(p.exerciseId)?.primaryMuscleGroup.toLowerCase()===s.toLowerCase()))),a.length>0&&(t=t.filter(c=>{let p=new Set;return c.exercises.forEach(d=>{let m=this.allExercisesMap.get(d.exerciseId);m?.equipment&&p.add(m.equipment),m?.equipmentNeeded?.forEach(f=>{f.toLowerCase().includes("kettlebell")?p.add("Kettlebell"):p.add(f.split(" (")[0].trim())})}),a.every(d=>p.has(d))})),t});toggleEquipmentFilter(t){this.selectedEquipment.update(e=>{let o=new Set(e);return o.has(t)?o.delete(t):o.add(t),Array.from(o)})}isFabActionsOpen=ge(!1);isTouchDevice=!1;ngOnInit(){vr(this.platformId)&&(window.scrollTo(0,0),this.isTouchDevice="ontouchstart"in window||navigator.maxTouchPoints>0),this.menuModeCompact=this.themeService.isMenuModeCompact(),this.exercisesSubscription=this.exerciseService.getExercises().subscribe(t=>{t.forEach(e=>this.allExercisesMap.set(e.id,e)),this.loadRoutinesAndPopulateFilters()}),this.routines$=this.workoutService.routines$}loadRoutinesAndPopulateFilters(){return j(this,null,function*(){this.routinesSubscription=this.workoutService.routines$.subscribe(t=>j(this,null,function*(){this.allRoutinesForList.set(t),this.populateRoutineFilterOptions(t),yield this.populateLastRoutineDurations(t)}))})}populateRoutineFilterOptions(t){if(!t||t.length===0){this.maxDuration.set(120);return}let e=new Set,o=new Set,n=new Set,i=0;t.forEach(a=>{let l=this.getRoutineDuration(a);l>i&&(i=l),a.goal&&e.add(a.goal),a.exercises.forEach(u=>{let c=this.allExercisesMap.get(u.exerciseId);c?.primaryMuscleGroup&&o.add(c.primaryMuscleGroup),c?.equipmentNeeded?c.equipmentNeeded.forEach(p=>{let d=p.indexOf(" (alternative)"),m=p.indexOf(" (optional)"),f=p.indexOf("Dumbbells"),g=p.indexOf("Dumbbell(s)"),x=p.indexOf("Kettlebells"),y=p.indexOf("Kettlebell(s)");d>=0&&(p=p.substring(0,d)),m>=0&&(p=p.substring(0,m)),(y>=0||x>=0)&&(p="Kettlebell"),(f>=0||g>=0)&&(p="Dumbbell"),n.add(p)}):c?.equipment&&n.add(c.equipment)})});let s=Math.min(Math.ceil(i/10)*10,180);this.maxDuration.set(s>0?s:120),this.selectedMaxDuration.set(s>0?s:120),this.uniqueRoutineGoals.set(Array.from(e).sort()),this.uniqueRoutineMuscleGroups.set(Array.from(o).sort()),this.uniqueRoutineEquipments.set(Array.from(n).sort())}toggleFilterAccordion(){this.isFilterAccordionOpen.update(t=>!t)}onRoutineSearchTermChange(t){let e=t.target;this.routineSearchTerm.set(e.value)}onRoutineGoalChange(t){let e=t.target;this.selectedRoutineGoal.set(e.value||null)}onRoutineMuscleGroupChange(t){let e=t.target;this.selectedRoutineMuscleGroup.set(e.value||null)}onDurationFilterChange(t){let e=t.target;this.selectedMaxDuration.set(Number(e.value)),this.vibrate()}clearFilters(){this.vibrate(),this.routineSearchTerm.set(""),this.selectedRoutineGoal.set(null),this.selectedRoutineMuscleGroup.set(null),this.selectedEquipment.set([]),this.showHiddenRoutines.set(!1),this.showFavouriteRoutinesOnly.set(!1),this.selectedMaxDuration.set(this.maxDuration());let t=document.getElementById("routine-search-term");t&&(t.value="");let e=document.getElementById("routine-goal-filter");e&&(e.value="");let o=document.getElementById("routine-muscle-filter");o&&(o.value="");let n=document.getElementById("routine-equipment-filter");n&&(n.value="")}navigateToCreateRoutine(){this.router.navigate(["/workout/routine/new"])}editRoutine(t,e){this.router.navigate(["/workout/routine/edit",t]),this.visibleActionsRutineId.set(null)}deleteRoutine(t,e){return j(this,null,function*(){this.visibleActionsRutineId.set(null);let o=this.allRoutinesForList().find(l=>l.id===t);if(!o){this.toastService.error("Routine not found for deletion",0,"Error");return}let n=(yield Eo(this.trackingService.getWorkoutLogsByRoutineId(t).pipe(jt(1))))||[],i=(yield Eo(this.trainingService.getProgramsByRoutineId(t).pipe(jt(1))))||[],s=`Are you sure you want to delete the routine "${o.name}"?`;if(n.length>0&&(s+=` This will also delete ${n.length} associated workout log(s).`),i.length>0)if(i.length===1){let l=i[0].schedule.find(c=>c.routineId===t),u=l?"'"+l.routineName+"'":"";s+=` This will also delete the entries in ${u||"1"} associated program(s).`}else s+=` This will also delete the entries in ${i.length} associated program(s).`;(n.length>0||i.length>0)&&(s+=" This action cannot be undone.");let a=yield this.alertService.showConfirm("Delete Routine",s,"Delete");if(a&&a.data)try{this.spinnerService.show(),n.length>0&&(yield this.trackingService.clearWorkoutLogsByRoutineId(t)),yield this.workoutService.deleteRoutine(t),this.toastService.success(`Routine "${o.name}" deleted successfully.`,4e3,"Routine Deleted")}catch(l){console.error("Error during deletion:",l),this.toastService.error("Failed to delete routine or its logs",0,"Deletion Failed")}finally{this.spinnerService.hide()}})}startWorkout(t,e){return j(this,null,function*(){if(this.visibleActionsRutineId.set(null),!vr(this.platformId)){this.router.navigate(["/workout/play",t]);return}let o=this.storageService.getItem(this.PAUSED_WORKOUT_KEY);if(o){let n=o.sessionRoutine?.name||"a previous session",i=o.workoutDate?` from ${Ot(new Date(o.workoutDate),"MMM d, HH:mm")}`:"",s=[{text:`Resume: ${n.substring(0,15)}${n.length>15?"...":""}`,role:"confirm",data:"resume_paused",cssClass:"bg-green-500 hover:bg-green-600 text-white",icon:"play"},{text:"Discard Paused & Start New",role:"confirm",data:"discard_start_new",cssClass:"bg-red-500 hover:bg-red-600 text-white",icon:"change"},{text:"Cancel",role:"cancel",data:"cancel",icon:"cancel"}],a=yield this.alertService.showConfirmationDialog("Workout in Progress",`You have a paused workout ("${n}"${i}). What would you like to do?`,s);if(a&&a.data==="resume_paused"){let l=o.routineId||"ad-hoc";this.router.navigate(["/workout/play",o.routineId||""],{queryParams:{resume:"true"}})}else a&&a.data==="discard_start_new"&&(this.storageService.removeItem(this.PAUSED_WORKOUT_KEY),this.toastService.info("Previous paused workout discarded.",3e3),this.router.navigate(["/workout/play",t]))}else this.router.navigate(["/workout/play",t])})}vibrate(){let t=navigator;t&&"vibrate"in t&&t.vibrate(50)}viewRoutineDetails(t,e){if(e&&e.target){let o=e.target;if(o.className&&o.className.includes("bg-primary"))return}this.vibrate(),this.router.navigate(["/workout/routine/view",t,{isView:"routineBuilder"}]),this.visibleActionsRutineId.set(null)}hideRoutine(t,e){e?.stopPropagation();let o=this.allRoutinesForList().find(n=>n.id===t);o&&(o.isHidden=!0,this.workoutService.updateRoutine(o),this.loadRoutinesAndPopulateFilters())}unhideRoutine(t,e,o=!1){return j(this,null,function*(){e?.stopPropagation();let n=this.allRoutinesForList().find(i=>i.id===t);if(n){if(o){let i=[{text:"Cancel",role:"cancel",data:"cancel"},{text:"Unmark",role:"confirm",data:"confirm"}],s=yield this.alertService.showConfirmationDialog("Unhide routine",`Would you like to unhide ${n.name} from hidden ones?`,i);if(!s||!s.data||s.data==="cancel")return}n.isHidden=!1,this.workoutService.updateRoutine(n),this.loadRoutinesAndPopulateFilters(),this.toastService.success(`Removed ${n.name} from hidden ones`)}})}markAsFavourite(t,e){e?.stopPropagation();let o=this.allRoutinesForList().find(n=>n.id===t);o&&(o.isFavourite=!0,this.workoutService.updateRoutine(o),this.loadRoutinesAndPopulateFilters(),this.toastService.info(`Routine "${o.name}" added to favourites`))}unmarkAsFavourite(t,e,o=!1){return j(this,null,function*(){e?.stopPropagation();let n=this.allRoutinesForList().find(i=>i.id===t);if(n){if(o){let i=[{text:"Cancel",role:"cancel",data:"cancel"},{text:"Unmark",role:"confirm",data:"confirm"}],s=yield this.alertService.showConfirmationDialog("Unmark favourite routine",`Would you like to unmark ${n.name} from favourites?`,i);if(!s||!s.data||s.data==="cancel")return}n.isFavourite=!1,this.workoutService.updateRoutine(n),this.loadRoutinesAndPopulateFilters(),this.toastService.info(`Routine "${n.name}" removed from favourites`)}})}getRoutineMainMuscleGroups(t){if(!this.allExercisesMap.size||!t.exercises.length)return[];let e=new Set;return t.exercises.forEach(o=>{let n=this.allExercisesMap.get(o.exerciseId);n?.primaryMuscleGroup&&e.add(n.primaryMuscleGroup)}),Array.from(e).slice(0,3)}cloneAndEditRoutine(t,e){return j(this,null,function*(){this.visibleActionsRutineId.set(null);let o=this.allRoutinesForList().find(i=>i.id===t);if(!o){this.toastService.error("Routine not found for cloning",0,"Error");return}let n=qt(Vt({},structuredClone(o)),{name:o.name+" (Copy)",createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()});try{this.spinnerService.show(),n=yield this.workoutService.addRoutine(n),this.toastService.success(`Routine "${n.name}" cloned successfully.`,3e3,"Routine Cloned"),this.router.navigate(["/workout/routine/edit",n.id]),this.visibleActionsRutineId.set(null)}catch(i){console.error("Error during routine cloning:",i),this.toastService.error("Failed to clone routine",0,"Clone Failed")}finally{this.spinnerService.hide()}})}ngOnDestroy(){this.routinesSubscription?.unsubscribe(),this.exercisesSubscription?.unsubscribe()}startKB(){this.router.navigate(["/workout/routine/kb-workout-tracker"])}getIconPath(t){return this.exerciseService.getIconPath(t)}getRoutineDropdownActionItems(t,e){let o="rounded text-left px-3 py-1.5 sm:px-4 sm:py-2 font-medium text-gray-600 dark:text-gray-300 hover:bg-primary flex items-center text-sm hover:text-white dark:hover:text-gray-100 dark:hover:text-white",n="rounded text-left px-3 py-1.5 sm:px-4 sm:py-2 font-medium text-gray-600 dark:text-gray-300 hover:bg-red-600 flex items-center text-sm hover:text-gray-100 hover:animate-pulse",i=this.allRoutinesForList().find(p=>p.id===t),s={label:"HIDE",actionKey:"hide",iconSvg:`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path fill-rule="evenodd" d="M3.28 2.22a.75.75 0 00-1.06 1.06l14.5 14.5a.75.75 0 101.06-1.06l-1.745-1.745a10.029 10.029 0 003.3-4.38 1.651 1.651 0 000-1.185A10.004 10.004 0 009.999 3a9.956 9.956 0 00-4.744 1.194L3.28 2.22zM7.752 6.69l1.092 1.092a2.5 2.5 0 013.374 3.373l1.091 1.092a4 4 0 00-5.557-5.557z" clip-rule="evenodd" />
        <path d="M10.748 13.93l2.523 2.523a9.987 9.987 0 01-3.27.547c-4.257 0-7.893-2.66-9.336-6.41a1.651 1.651 0 010-1.186A10.007 10.007 0 012.839 6.02L6.07 9.252a4 4 0 004.678 4.678z" /></svg>`,iconClass:"w-8 h-8 mr-2",buttonClass:(e==="dropdown"?"w-full ":"")+o,data:{routineId:t}},a={label:"UNHIDE",actionKey:"unhide",iconSvg:'<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M10 12.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5Z" /><path fill-rule="evenodd" d="M.664 10.59a1.651 1.651 0 010-1.186A10.004 10.004 0 0110 3c4.257 0 7.893 2.66 9.336 6.41.147.381.146.804 0 1.186A10.004 10.004 0 0110 17c-4.257 0-7.893-2.66-9.336-6.41ZM14 10a4 4 0 11-8 0 4 4 0 018 0Z" clip-rule="evenodd" /></svg>',iconClass:"w-8 h-8 mr-2",buttonClass:(e==="dropdown"?"w-full ":"")+o,data:{routineId:t}},l={label:"FAVOURITE",actionKey:"markAsFavourite",iconSvg:`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
          <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"/>
        </svg>`,iconClass:"w-8 h-8 mr-2",buttonClass:(e==="dropdown"?"w-full ":"")+o,data:{routineId:t}},u={label:"UNMARK",actionKey:"unmarkAsFavourite",iconSvg:`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
        <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"/>
        <line x1="2" y1="20" x2="22" y2="4"></line>
      </svg>`,iconClass:"w-8 h-8 mr-2",buttonClass:(e==="dropdown"?"w-full ":"")+o,data:{routineId:t}},c=[{label:"VIEW",actionKey:"view",iconSvg:'<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M10 12.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5Z" /><path fill-rule="evenodd" d="M.664 10.59a1.651 1.651 0 010-1.186A10.004 10.004 0 0110 3c4.257 0 7.893 2.66 9.336 6.41.147.381.146.804 0 1.186A10.004 10.004 0 0110 17c-4.257 0-7.893-2.66-9.336-6.41ZM14 10a4 4 0 11-8 0 4 4 0 018 0Z" clip-rule="evenodd" /></svg>',iconClass:"w-8 h-8 mr-2",buttonClass:(e==="dropdown"?"w-full ":"")+o,data:{routineId:t}},{label:"START",actionKey:"start",iconSvg:'<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" d="M5.25 5.653c0-.856.917-1.398 1.667-.986l11.54 6.347a1.125 1.125 0 0 1 0 1.972l-11.54 6.347a1.125 1.125 0 0 1-1.667-.986V5.653Z" /></svg>',iconClass:"w-8 h-8 mr-2",buttonClass:(e==="dropdown"?"w-full ":"")+o,data:{routineId:t}},{label:"EDIT",actionKey:"edit",iconSvg:'<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" d="m16.862 4.487 1.687-1.688a1.875 1.875 0 1 1 2.652 2.652L10.582 16.07a4.5 4.5 0 0 1-1.897 1.13L6 18l.8-2.685a4.5 4.5 0 0 1 1.13-1.897l8.932-8.931Zm0 0L19.5 7.125M18 14v4.75A2.25 2.25 0 0 1 15.75 21H5.25A2.25 2.25 0 0 1 3 18.75V8.25A2.25 2.25 0 0 1 5.25 6H10" /></svg>',iconClass:"w-8 h-8 mr-2",buttonClass:(e==="dropdown"?"w-full ":"")+o,data:{routineId:t}},{label:"CLONE",actionKey:"clone",iconSvg:'<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" fill="none"><path d="M 5 3 H 16 A 2 2 0 0 1 18 5 V 16 A 2 2 0 0 1 16 18 H 5 A 2 2 0 0 1 3 16 V 5 A 2 2 0 0 1 5 3 Z M 8 6 H 19 A 2 2 0 0 1 21 8 V 19 A 2 2 0 0 1 19 21 H 8 A 2 2 0 0 1 6 19 V 8 A 2 2 0 0 1 8 6 Z" /></svg>',iconClass:"w-8 h-8 mr-2",buttonClass:(e==="dropdown"?"w-full ":"")+o,data:{routineId:t}},{isDivider:!0},{label:"DELETE",actionKey:"delete",iconSvg:'<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path fill-rule="evenodd" d="M8.75 1A2.75 2.75 0 006 3.75v.443c-.795.077-1.58.177-2.365.298a.75.75 0 10.23 1.482l.149-.022.841 10.518A2.75 2.75 0 007.596 19h4.807a2.75 2.75 0 002.742-2.53l.841-10.52.149.023a.75.75 0 00.23-1.482A41.03 41.03 0 0014 4.193V3.75A2.75 2.75 0 0011.25 1h-2.5ZM10 4c.84 0 1.673.025 2.5.075V3.75c0-.69-.56-1.25-1.25-1.25h-2.5c-.69 0-1.25.56-1.25 1.25v.325C8.327 4.025 9.16 4 10 4ZM8.58 7.72a.75.75 0 00-1.5.06l.3 7.5a.75.75 0 101.5-.06l-.3-7.5Zm4.34.06a.75.75 0 10-1.5-.06l-.3 7.5a.75.75 0 101.5.06l.3-7.5Z" clip-rule="evenodd" /></svg>',iconClass:"w-8 h-8 mr-2",buttonClass:(e==="dropdown"?"w-full ":"")+n,data:{routineId:t}}];return i?.isHidden?c.push(a):this.showHiddenRoutines()||c.push(s),i?.isFavourite?c.push(u):c.push(l),c}handleActionMenuItemClick(t,e){let o=t.data?.routineId;if(o){switch(t.actionKey){case"view":this.viewRoutineDetails(o);break;case"hide":this.hideRoutine(o);break;case"unhide":this.unhideRoutine(o);break;case"markAsFavourite":this.markAsFavourite(o);break;case"unmarkAsFavourite":this.unmarkAsFavourite(o);break;case"start":this.startWorkout(o);break;case"edit":this.editRoutine(o);break;case"clone":this.cloneAndEditRoutine(o);break;case"delete":this.deleteRoutine(o);break}this.activeRoutineIdActions.set(null)}}activeRoutineIdActions=ge(null);toggleActions(t,e){e.stopPropagation(),this.activeRoutineIdActions.update(o=>o===t?null:t)}areActionsVisible(t){return this.activeRoutineIdActions()===t}onCloseActionMenu(){this.activeRoutineIdActions.set(null)}getRoutineDuration(t){return t?this.workoutService.getEstimatedRoutineDuration(t):0}lastRoutineDurations=ge({});populateLastRoutineDurations(t){return j(this,null,function*(){let e={},o={};yield Promise.all(t.map(n=>j(this,null,function*(){let i=yield Eo(this.trackingService.getLastPerformanceForRoutine(n.id).pipe(jt(1)));i&&i.lastPerformedDate&&i.durationMinutes?e[n.id]=i.durationMinutes:e[n.id]=0,o[n.id]={duration:e[n.id],name:n.name}}))),this.lastRoutineDurations.set(e)})}scrollToTop(){vr(this.platformId)&&window.scrollTo({top:0,behavior:"smooth"})}toggleOnlyFavouriteRoutines(t){t?.stopPropagation(),this.showFavouriteRoutinesOnly.set(!this.showFavouriteRoutinesOnly()),this.toastService.info(`Showing ${this.showFavouriteRoutinesOnly()?"only favourite":"all"} routines`,3e3,"Filter Update")}toggleOnlyHiddenRoutines(t){t?.stopPropagation(),this.showHiddenRoutines.set(!this.showHiddenRoutines())}filterByGoal(t,e){if(e?.stopPropagation(),this.onRoutineGoalChange(e),e&&e.target&&t){let o=e.target;o.value=t,this.onRoutineGoalChange(e),this.toastService.info(`Filtered routines by goal '${t}'`)}}filterByMuscleGroup(t,e){if(e?.stopPropagation(),e&&e.target&&t){let o=e.target;o.value=t,this.onRoutineMuscleGroupChange(e),this.toastService.info(`Filtered routines by muscle '${t}'`)}}updateSanitizedDescription(t){return this.sanitizer.bypassSecurityTrustHtml(t)}handleFabClick(){this.isFabActionsOpen.update(t=>!t)}handleFabMouseEnter(){this.isTouchDevice||this.isFabActionsOpen.set(!0)}handleFabMouseLeave(){this.isTouchDevice||this.isFabActionsOpen.set(!1)}startNewSession(){this.router.navigate(["/workout/play",-1],{queryParams:{newSession:"true"}})}static \u0275fac=function(e){return new(e||r)};static \u0275cmp=zr({type:r,selectors:[["app-routine-list"]],hostBindings:function(e,o){e&1&&ne("scroll",function(){return o.onWindowScroll()},$d)},decls:82,vars:30,consts:[["noRoutines",""],["loadingRoutines",""],[1,"container","mx-auto","p-2","sm:p-4"],[1,"flex","justify-between","items-center","pb-2"],[1,"text-2xl","font-bold","text-gray-800","dark:text-gray-200"],["appPress","","aria-controls","filter-accordion",1,"rounded-md","text-gray-600","dark:text-gray-300","hover:bg-gray-200","dark:hover:bg-gray-700","focus:outline-none","focus:ring-2","focus:ring-primary","dark:focus:ring-primary-light","transition-all","duration-300","ease-in-out",3,"shortPress"],["name","filter",1,"w-10","h-10","transition-transform","duration-300"],[1,"sr-only"],["id","filter-accordion",1,"overflow-y-auto","transition-all","duration-500","ease-in-out","rounded-md","scrollbar-thin","scrollbar-thumb-primary","scrollbar-track-gray-200","dark:scrollbar-track-gray-800"],[1,"p-4","bg-white","dark:bg-gray-700","rounded-md","shadow-md","border","dark:border-gray-600","mt-2"],[1,"text-xl","font-semibold","text-gray-700","dark:text-gray-300","mb-4"],[1,"grid","grid-cols-1","md:grid-cols-3","gap-4","items-start"],["for","routine-search-term",1,"block","text-sm","font-medium","text-gray-700","dark:text-gray-300","mb-1"],["type","text","id","routine-search-term","placeholder","Enter routine name or description...",1,"block","w-full","p-2","border","border-gray-300","dark:border-gray-600","rounded-md","shadow-sm","focus:ring-primary","focus:border-primary","dark:bg-gray-600","dark:text-gray-200",3,"input","value"],["for","routine-goal-filter",1,"block","text-sm","font-medium","text-gray-700","dark:text-gray-300","mb-1"],["id","routine-goal-filter",1,"block","w-full","p-2","border","border-gray-300","dark:border-gray-600","rounded-md","shadow-sm","focus:ring-primary","focus:border-primary","dark:bg-gray-600","dark:text-gray-200",3,"change","value"],["value",""],[3,"value",4,"ngFor","ngForOf"],["for","routine-muscle-filter",1,"block","text-sm","font-medium","text-gray-700","dark:text-gray-300","mb-1"],["id","routine-muscle-filter",1,"block","w-full","p-2","border","border-gray-300","dark:border-gray-600","rounded-md","shadow-sm","focus:ring-primary","focus:border-primary","dark:bg-gray-600","dark:text-gray-200",3,"change","value"],[1,"mt-4","pt-4","border-t","border-gray-200","dark:border-gray-600","md:border-none"],["for","duration-filter",1,"block","text-sm","font-medium","text-gray-700","dark:text-gray-300","mb-2"],[1,"text-primary","dark:text-primary-light"],["type","range","id","duration-filter","min","0","step","5",1,"w-full","h-2","bg-gray-300","dark:bg-gray-600","rounded-md","appearance-none","cursor-pointer",3,"input","max","value"],[1,"border-t","border-gray-200","dark:border-gray-600","md:border-none"],[1,"flex","flex-col","tems-center","justify-between","pt-4"],[1,"text-sm","text-gray-500","dark:text-gray-400","mr-1"],["for","show-hidden-routine",1,"inline-flex","items-center","cursor-pointer","mt-2"],["type","checkbox","id","show-hidden-routine","appPress","",1,"sr-only","peer",3,"change","checked"],[1,"relative","w-11","h-6","bg-gray-200","peer-focus:outline-none","peer-focus:ring-4","peer-focus:ring-blue-300","dark:peer-focus:ring-blue-800","rounded-full","peer","dark:bg-gray-600","peer-checked:after:translate-x-full","rtl:peer-checked:after:-translate-x-full","peer-checked:after:border-white","after:content-['']","after:absolute","after:top-[2px]","after:start-[2px]","after:bg-white","after:border-gray-300","after:border","after:rounded-full","after:h-5","after:w-5","after:transition-all","dark:border-gray-600","peer-checked:bg-primary","dark:peer-checked:bg-primary-dark"],[1,"ms-3","text-sm","font-medium","text-gray-900","dark:text-gray-300"],["for","show-favourite-routine",1,"inline-flex","items-center","cursor-pointer","mt-2"],["type","checkbox","id","show-favourite-routine","appPress","",1,"sr-only","peer",3,"change"],["class","mt-4",4,"ngIf"],[1,"mt-4","flex","justify-between","items-center"],[1,"flex","px-4","py-2","bg-yellow-200","dark:bg-yellow-700","text-gray-700","dark:text-gray-200","rounded-md","hover:bg-yellow-300","dark:hover:bg-yellow-500","text-sm","items-center",3,"click"],["name","trash",1,"w-5","h-5","mr-1"],["aria-live","polite","aria-atomic","true",1,"text-sm","text-gray-600","dark:text-gray-400"],[4,"ngIf"],[4,"ngIf","ngIfElse"],["type","button",1,"p-2","rounded-md","mt-5","text-gray-600","dark:text-gray-300","hover:bg-gray-200","dark:hover:bg-gray-700","focus:outline-none","focus:ring-2","focus:ring-primary","dark:focus:ring-primary-light","transition-all","duration-300","ease-in-out",3,"click"],["alt","",1,"w-6","h-6","sm:w-8","sm:h-8","object-contain",3,"src"],[1,"fixed","bottom-20","right-6","z-40","flex","flex-col","items-center","gap-4"],["appPress","","type","button","class","bg-primary dark:bg-primary text-white rounded-full p-3 shadow-lg hover:bg-primary-dark dark:hover:bg-primary-light focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-focus dark:focus:ring-offset-gray-900 transition-opacity animate-fade-in flex items-center",3,"shortPress",4,"ngIf"],[1,"flex","flex-col-reverse","items-center","gap-4",3,"mouseenter","mouseleave"],["appPress","","type","button","aria-haspopup","true",1,"flex","h-14","w-14","items-center","justify-center","rounded-full","bg-primary","text-white","shadow-xl","transition-all","duration-300","hover:bg-primary-dark","hover:scale-105","focus:outline-none","focus:ring-2","focus:ring-primary-focus","focus:ring-offset-2","dark:ring-offset-gray-900",3,"shortPress"],["xmlns","http://www.w3.org/2000/svg","fill","none","viewBox","0 0 24 24","stroke","currentColor","stroke-width","2.5","aria-hidden","true",1,"h-8","w-8","transition-transform","duration-300"],["stroke-linecap","round","stroke-linejoin","round","d","M12 6v6m0 0v6m0-6h6m-6 0H6"],["class","flex flex-col items-center gap-4",4,"ngIf"],[3,"value"],[1,"mt-4"],[1,"block","text-sm","font-medium","text-gray-700","dark:text-gray-300","mb-2"],[1,"flex","flex-wrap","gap-2"],["appPress","","type","button","role","switch","class","px-3 py-1.5 text-xs font-semibold rounded-full transition-colors duration-200 ease-in-out focus:outline-none focus:ring-2 focus:ring-offset-2 dark:focus:ring-offset-gray-800",3,"ngClass","shortPress",4,"ngFor","ngForOf"],["appPress","","type","button","role","switch",1,"px-3","py-1.5","text-xs","font-semibold","rounded-full","transition-colors","duration-200","ease-in-out","focus:outline-none","focus:ring-2","focus:ring-offset-2","dark:focus:ring-offset-gray-800",3,"shortPress","ngClass"],[1,"text-gray-800","dark:text-gray-200"],["class","grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 mt-4",4,"ngIf","ngIfElse"],[1,"grid","grid-cols-1","md:grid-cols-2","lg:grid-cols-3","gap-4","mt-4"],["type","button","class","bg-white dark:bg-gray-700 rounded-md shadow-md hover:shadow-lg transition-shadow duration-200 relative group transform hover:-translate-y-1 text-left",3,"zIndex","click",4,"ngFor","ngForOf"],["type","button",1,"bg-white","dark:bg-gray-700","rounded-md","shadow-md","hover:shadow-lg","transition-shadow","duration-200","relative","group","transform","hover:-translate-y-1","text-left",3,"click"],[1,"p-3"],[1,"flex","justify-between","items-start","mb-1.5"],[1,"text-lg","font-semibold","text-primary","dark:text-primary-light","pr-8",3,"title"],["class","text-gray-600 dark:text-gray-400 mb-2 line-clamp-2 text-sm sm:text-xs",3,"innerHTML","title",4,"ngIf"],[1,"flex","justify-between","text-sm","text-gray-500","dark:text-gray-300","mb-2","space-x-2"],["class","flex items-center gap-1",4,"ngIf"],["class","flex items-center text-sm text-gray-500 dark:text-gray-300 mb-2 flex-wrap gap-1",4,"ngIf"],["class","text-sm text-gray-500 dark:text-gray-300 flex gap-1 mb-2",4,"ngIf"],["class","text-sm text-gray-500 dark:text-gray-300 italic flex gap-1 mb-2",4,"ngIf"],["class","text-sm text-gray-500 dark:text-gray-300 flex gap-1 mb-1",4,"ngIf"],["class","text-sm text-gray-500 dark:text-gray-300 flex gap-1",4,"ngIf"],[1,"flex","my-2","text-sm","sm:text-xs","text-gray-500","dark:text-gray-300"],["appPress","","class","favourite-span",3,"title","click","shortPress","longPress",4,"ngIf"],["appPress","","class","favourite-span",3,"title","shortPress","longPress",4,"ngIf"],[1,"absolute","top-2","right-2"],[1,"relative"],["aria-haspopup","true",1,"p-1.5","text-gray-500","dark:text-gray-400","hover:bg-gray-200","dark:hover:bg-gray-700","rounded-full","focus:outline-none",3,"click"],["name","menu_action",1,"h-5","w-5"],["displayMode","dropdown",3,"items","isVisible","itemClick","closeMenu",4,"ngIf"],["displayMode","compact-bar",3,"items","isVisible","itemClick","closeMenu",4,"ngIf"],[1,"text-gray-600","dark:text-gray-400","mb-2","line-clamp-2","text-sm","sm:text-xs",3,"innerHTML","title"],[1,"flex","items-center","gap-1"],["name","goal",1,"w-6","h-6"],[1,"font-medium"],["type","button",1,"bg-blue-100","text-xs","text-blue-700","dark:bg-blue-700","dark:text-blue-200","px-1.5","py-0.5","rounded-full","hover:bg-blue-200","dark:hover:bg-blue-600",3,"click"],[1,"flex","items-center","text-sm","text-gray-500","dark:text-gray-300","mb-2","flex-wrap","gap-1"],["name","muscle",1,"w-6","h-6"],["type","button","class","text-center text-xs bg-purple-100 text-purple-700 dark:bg-purple-700 dark:text-purple-200 px-1.5 py-0.5 rounded-full hover:bg-purple-200 dark:hover:bg-purple-600",3,"click",4,"ngFor","ngForOf"],["type","button",1,"text-center","text-xs","bg-purple-100","text-purple-700","dark:bg-purple-700","dark:text-purple-200","px-1.5","py-0.5","rounded-full","hover:bg-purple-200","dark:hover:bg-purple-600",3,"click"],[1,"text-sm","text-gray-500","dark:text-gray-300","flex","gap-1","mb-2"],["name","calendar",1,"w-6","h-6"],[1,"text-sm","text-gray-500","dark:text-gray-300","italic","flex","gap-1","mb-2"],[1,"text-sm","text-gray-500","dark:text-gray-300","flex","gap-1","mb-1"],["name","clock",1,"w-6","h-6"],[1,"text-sm","text-gray-500","dark:text-gray-300","flex","gap-1"],["name","schedule",1,"w-6","h-6"],["appPress","",1,"favourite-span",3,"click","shortPress","longPress","title"],[1,"text-2xs","bg-yellow-300","text-yellow-600","dark:bg-yellow-700","dark:text-yellow-200","text-2xs","text-white","px-1.5","py-0.5","rounded-full","mx-1","mb-1","inline-block","flex","gap-1","items-center"],["name","hidden",1,"h-5","w-5"],["appPress","",1,"favourite-span",3,"shortPress","longPress","title"],[1,"bg-primary","text-2xs","text-white","px-1.5","py-0.5","rounded-full","mx-1","mb-1","inline-block","flex","gap-1","items-center"],["name","favourite",1,"h-5","w-5"],["displayMode","dropdown",3,"itemClick","closeMenu","items","isVisible"],["displayMode","compact-bar",3,"itemClick","closeMenu","items","isVisible"],[1,"text-center","py-12","px-6","bg-white","dark:bg-gray-700","rounded-md","shadow-md"],["name","routines","aria-hidden","true",1,"h-16","w-16","text-gray-400","dark:text-gray-500"],[1,"text-xl","font-semibold","text-gray-700","dark:text-gray-300","mb-2"],[1,"text-gray-500","dark:text-gray-400","mb-6"],[1,"flex","justify-center"],["appPress","","class","flex items-center bg-primary hover:bg-primary-dark text-white font-semibold py-2 px-6 rounded-md shadow-md hover:shadow-lg transition-all duration-300 focus:outline-none focus:ring-2 focus:ring-primary-light focus:ring-opacity-75",3,"shortPress",4,"ngIf"],["appPress","",1,"flex","items-center","bg-primary","hover:bg-primary-dark","text-white","font-semibold","py-2","px-6","rounded-md","shadow-md","hover:shadow-lg","transition-all","duration-300","focus:outline-none","focus:ring-2","focus:ring-primary-light","focus:ring-opacity-75",3,"shortPress"],["name","create",1,"h-5","w-5","mr-2"],["role","status",1,"text-center","py-10"],["aria-hidden","true","xmlns","http://www.w3.org/2000/svg","fill","none","viewBox","0 0 24 24",1,"animate-spin","h-8","w-8","text-primary","dark:text-primary-light","mx-auto"],["cx","12","cy","12","r","10","stroke","currentColor","stroke-width","4",1,"opacity-25"],["fill","currentColor","d","M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z",1,"opacity-75"],["aria-hidden","true",1,"text-lg","text-gray-600","dark:text-gray-400","mt-3"],["appPress","","type","button",1,"bg-primary","dark:bg-primary","text-white","rounded-full","p-3","shadow-lg","hover:bg-primary-dark","dark:hover:bg-primary-light","focus:outline-none","focus:ring-2","focus:ring-offset-2","focus:ring-primary-focus","dark:focus:ring-offset-gray-900","transition-opacity","animate-fade-in","flex","items-center",3,"shortPress"],["name","back",1,"w-6","h-6",3,"strokeWidth"],[1,"flex","flex-col","items-center","gap-4"],[1,"group","relative","flex","items-center"],[1,"absolute","right-full","sm:hidden","whitespace-nowrap","rounded-md","bg-blue-500","px-3","py-2","text-sm","font-semibold","text-white","group-hover:block",2,"margin-right","-10px"],["appPress","","type","button",1,"flex","h-12","w-12","items-center","justify-center","rounded-full","bg-blue-500","text-white","shadow-lg","transition-transform","hover:scale-110","focus:outline-none","focus:ring-2","focus:ring-blue-400","focus:ring-offset-2","dark:ring-offset-gray-900",3,"shortPress"],["name","create",1,"h-7","w-7"],[1,"absolute","right-full","mr-4","sm:hidden","whitespace-nowrap","rounded-md","bg-green-500","px-3","py-2","text-sm","font-semibold","text-white","group-hover:block",2,"margin-right","-10px"],["appPress","","routerLink","/workout/play/-1","type","button",1,"flex","h-12","w-12","items-center","justify-center","rounded-full","bg-green-500","text-white","shadow-lg","transition-transform","hover:scale-110","focus:outline-none","focus:ring-2","focus:ring-green-400","focus:ring-offset-2","dark:ring-offset-gray-900",3,"shortPress"],["xmlns","http://www.w3.org/2000/svg","viewBox","0 0 20 20","fill","currentColor","aria-hidden","true",1,"h-7","w-7","pl-0.5"],["d","M6.3 2.841A1.5 1.5 0 0 0 4 4.11V15.89a1.5 1.5 0 0 0 2.3 1.269l9.344-5.89a1.5 1.5 0 0 0 0-2.538L6.3 2.84z"]],template:function(e,o){if(e&1){let n=me();k(0,"div",2)(1,"header",3)(2,"h1",4),L(3,"My Routines"),T(),k(4,"button",5),ne("shortPress",function(){return Y(n),Q(o.toggleFilterAccordion())}),se(5,"app-icon",6),k(6,"span",7),L(7,"Toggle Filters"),T()()(),k(8,"main")(9,"div",8)(10,"div",9)(11,"h2",10),L(12,"Filter Routines"),T(),k(13,"div",11)(14,"div")(15,"label",12),L(16,"Search Name/Desc."),T(),k(17,"input",13),ne("input",function(s){return Y(n),Q(o.onRoutineSearchTermChange(s))}),T()(),k(18,"div")(19,"label",14),L(20,"Goal"),T(),k(21,"select",15),ne("change",function(s){return Y(n),Q(o.onRoutineGoalChange(s))}),k(22,"option",16),L(23,"Any Goal"),T(),te(24,VL,3,4,"option",17),T()(),k(25,"div")(26,"label",18),L(27,"Targets Muscle"),T(),k(28,"select",19),ne("change",function(s){return Y(n),Q(o.onRoutineMuscleGroupChange(s))}),k(29,"option",16),L(30,"Any Muscle Group"),T(),te(31,WL,3,4,"option",17),T()(),k(32,"div",20)(33,"label",21),L(34," Max Duration: "),k(35,"strong",22),L(36),T()(),k(37,"input",23),ne("input",function(s){return Y(n),Q(o.onDurationFilterChange(s))}),T()(),k(38,"div",24)(39,"div",25)(40,"div")(41,"p",26),L(42,"Hidden routines"),T()(),k(43,"label",27)(44,"input",28),ne("change",function(){return Y(n),Q(o.hideRoutines(!o.showHiddenRoutines()))}),T(),se(45,"div",29),k(46,"span",30),L(47),T()()(),k(48,"div",25)(49,"div")(50,"p",26),L(51,"Favourite routines"),T()(),k(52,"label",31)(53,"input",32),ne("change",function(){return Y(n),Q(o.showFavouriteOnlyRoutines(!o.showFavouriteRoutinesOnly()))}),T(),se(54,"div",29),k(55,"span",30),L(56),T()()()()(),te(57,zL,5,1,"div",33),k(58,"div",34)(59,"button",35),ne("click",function(){return Y(n),Q(o.clearFilters())}),se(60,"app-icon",36),L(61," CLEAR FILTERS "),T(),k(62,"div",37),te(63,GL,8,2,"span",38),T()()()(),te(64,i4,2,2,"div",39),Ke(65,"async"),te(66,a4,8,3,"ng-template",null,0,ln),T(),te(68,l4,8,0,"ng-template",null,1,ln),k(70,"button",40),ne("click",function(){return Y(n),Q(o.startKB())}),se(71,"img",41),L(72," START TRACKING (VERY WIP) "),T(),k(73,"div",42),te(74,u4,4,3,"button",43),k(75,"div",44),ne("mouseenter",function(){return Y(n),Q(o.handleFabMouseEnter())})("mouseleave",function(){return Y(n),Q(o.handleFabMouseLeave())}),k(76,"button",45),ne("shortPress",function(){return Y(n),Q(o.handleFabClick())}),Ue(),k(77,"svg",46),se(78,"path",47),T(),bt(),k(79,"span",7),L(80,"Open creation menu"),T()(),te(81,c4,16,1,"div",48),T()()()}if(e&2){let n=Uo(69);E(4),an("aria-expanded",o.isFilterAccordionOpen()),E(),yo("rotate-180",o.isFilterAccordionOpen()),E(4),hp("max-height",o.isFilterAccordionOpen()?"600px":"0px"),yo("mb-6",o.isFilterAccordionOpen()),E(8),D("value",o.routineSearchTerm()),E(4),D("value",o.selectedRoutineGoal()||""),E(3),D("ngForOf",o.uniqueRoutineGoals()),E(4),D("value",o.selectedRoutineMuscleGroup()||""),E(3),D("ngForOf",o.uniqueRoutineMuscleGroups()),E(5),fe("",o.selectedMaxDuration()," min"),E(),D("max",o.maxDuration())("value",o.selectedMaxDuration()),E(7),D("checked",o.showHiddenRoutines()),E(3),fe(" ",o.showHiddenRoutines()?"Hide":"Show"," Hidden Routines "),E(9),fe(" ",o.showFavouriteRoutinesOnly()?"Normal":"Only"," Favourite Routines "),E(),D("ngIf",o.uniqueRoutineEquipments().length>0),E(6),D("ngIf",o.allRoutinesForList().length>0),E(),D("ngIf",ht(65,28,o.routines$))("ngIfElse",n),E(7),D("src",o.getIconPath("kettlebell"),xs),E(3),D("ngIf",o.showBackToTopButton()),E(2),an("aria-expanded",o.isFabActionsOpen()),E(),yo("rotate-45",o.isFabActionsOpen()),E(4),D("ngIf",o.isFabActionsOpen())}},dependencies:[Qr,un,cn,Yr,Od,Na,pn,Pa,Zd,$o,mn],encapsulation:2,data:{animation:[Md("fabSlideUp",[Aa(":enter",[ci({opacity:0,transform:"translateY(200%)"}),$a("250ms ease-out",ci({opacity:1,transform:"translateY(0)"}))]),Aa(":leave",[$a("200ms ease-in",ci({opacity:0,transform:"translateY(100%)"}))])]),Md("slideInOutActions",[gp("void",ci({height:"0px",opacity:0,overflow:"hidden",paddingTop:"0",paddingBottom:"0",marginTop:"0",marginBottom:"0"})),gp("*",ci({height:"*",opacity:1,overflow:"hidden",paddingTop:"0.5rem",paddingBottom:"0.5rem"})),Aa("void <=> *",$a("200ms ease-in-out"))]),Md("dropdownMenu",[gp("void",ci({opacity:0,transform:"scale(0.75) translateY(-10px)",transformOrigin:"top right"})),gp("*",ci({opacity:1,transform:"scale(1) translateY(0)",transformOrigin:"top right"})),Aa("void => *",[$a("150ms cubic-bezier(0.25, 0.8, 0.25, 1)")]),Aa("* => void",[$a("100ms cubic-bezier(0.25, 0.8, 0.25, 1)")])])]}})};var Ua=class r{decimalPipe=$e(dn);unitsService=$e(fi);transform(t,e="1.0-2"){if(t==null)return null;let o=this.unitsService.convertFromKg(t,this.unitsService.currentUnit()),n=this.decimalPipe.transform(o,e),i=this.unitsService.getUnitLabel();return`${n} ${i}`}static \u0275fac=function(e){return new(e||r)};static \u0275pipe=Ad({name:"weightUnit",type:r,pure:!0})};var rm=class r{constructor(t,e){this.renderer=t;this.el=e;this.mouseDownHandler=this.onMouseDown.bind(this),this.touchStartHandler=this.onTouchStart.bind(this),this.pressEndHandler=this.onPressEnd.bind(this)}longPressEnabled=!0;longPressDelay=300;longPressClass="is-long-pressing";longPress=new Gr;timer;isPressing=!1;mouseDownHandler;touchStartHandler;pressEndHandler;ngOnInit(){let t=this.el.nativeElement;t.addEventListener("mousedown",this.mouseDownHandler),t.addEventListener("mouseup",this.pressEndHandler),t.addEventListener("mouseleave",this.pressEndHandler),t.addEventListener("touchstart",this.touchStartHandler,{passive:!1}),t.addEventListener("touchend",this.pressEndHandler),t.addEventListener("touchcancel",this.pressEndHandler)}onMouseDown(t){this.longPressEnabled&&this.startTimer()}onTouchStart(t){this.longPressEnabled&&this.startTimer()}startTimer(){this.isPressing=!0,this.timer=setTimeout(()=>{this.isPressing&&(this.renderer.addClass(this.el.nativeElement,this.longPressClass),this.longPress.emit())},this.longPressDelay)}onPressEnd(){this.timer&&(clearTimeout(this.timer),this.timer=null),this.isPressing=!1,this.renderer.removeClass(this.el.nativeElement,this.longPressClass)}ngOnDestroy(){let t=this.el.nativeElement;t.removeEventListener("mousedown",this.mouseDownHandler),t.removeEventListener("mouseup",this.pressEndHandler),t.removeEventListener("mouseleave",this.pressEndHandler),t.removeEventListener("touchstart",this.touchStartHandler),t.removeEventListener("touchend",this.pressEndHandler),t.removeEventListener("touchcancel",this.pressEndHandler),this.onPressEnd()}static \u0275fac=function(e){return new(e||r)(fp(ES),fp(ai))};static \u0275dir=Ta({type:r,selectors:[["","appLongPressDrag",""]],inputs:{longPressEnabled:"longPressEnabled",longPressDelay:"longPressDelay",longPressClass:"longPressClass"},outputs:{longPress:"longPress"}})};var om=class r{textAreaElement=$e(ai).nativeElement;onInput(){this.adjustHeight()}ngOnInit(){setTimeout(()=>this.adjustHeight(),0)}adjustHeight(){this.textAreaElement.style.height="auto",this.textAreaElement.style.height=`${this.textAreaElement.scrollHeight}px`}static \u0275fac=function(e){return new(e||r)};static \u0275dir=Ta({type:r,selectors:[["textarea","appAutoGrow",""]],hostBindings:function(e,o){e&1&&ne("input",function(){return o.onInput()})}})};var nm=class r{elementRef=$e(ai);clickOutside=new Gr;onDocumentClick(t){let e=t.target;e instanceof Node&&!this.elementRef.nativeElement.contains(e)&&this.clickOutside.emit(t)}static \u0275fac=function(e){return new(e||r)};static \u0275dir=Ta({type:r,selectors:[["","appClickOutside",""]],hostBindings:function(e,o){e&1&&ne("click",function(i){return o.onDocumentClick(i)},ys)},outputs:{clickOutside:"clickOutside"}})};var p4=["exerciseSearchFied"],d4=(r,t)=>({"p-3 mr-1 hover:bg-gray-400 dark:hover:bg-gray-800 rounded-md cursor-pointer transition-all duration-150 ease-in-out flex justify-between items-center scrollbar-thin scrollbar-thumb-primary scrollbar-track-gray-200 dark:scrollbar-track-gray-800 transform hover:-translate-y-1 shadow-sm hover:shadow-md transition-shadow":!0,"bg-gray-200 dark:bg-gray-600":r,"bg-gray-100 dark:bg-gray-500":t});function m4(r,t){if(r&1){let e=me();k(0,"input",22,0),ne("ngModelChange",function(n){Y(e);let i=O(2);return Q(i.onSearchTermChange(n))})("keydown.enter",function(){Y(e);let n=O(2);return Q(n.onSearchEnter())}),T()}if(r&2){let e=O(2);D("placeholder",e.searchPlaceholder)("ngModel",e.internalSearchTerm())}}function f4(r,t){if(r&1){let e=me();k(0,"button",23),ne("shortPress",function(){Y(e);let n=O(2);return Q(n.onFindSimilar())}),L(1," Or Show Similar Exercises "),T()}}function h4(r,t){if(r&1){let e=me();k(0,"button",24),ne("shortPress",function(){Y(e);let n=O(2);return Q(n.onBackToSearch())}),se(1,"app-icon",25),L(2," Back to Search "),T()}}function g4(r,t){if(r&1&&(k(0,"span",31),L(1),Ke(2,"titlecase"),Ke(3,"titlecase"),T()),r&2){let e=O().$implicit;E(),Ft("",ht(2,2,e.category)," ",e.primaryMuscleGroup?ht(3,4," - "+e.primaryMuscleGroup):"")}}function x4(r,t){r&1&&(pr(0),L(1,"Custom"),dr())}function y4(r,t){r&1&&(pr(0),L(1," | "),dr())}function v4(r,t){if(r&1&&(pr(0),L(1),Ke(2,"date"),dr()),r&2){let e=O(2).$implicit;E(),fe("Used ",Fd(2,1,e.lastUsedAt,"dd-MM-yy","UTC"))}}function b4(r,t){if(r&1&&(k(0,"span",32),L(1," [ "),te(2,x4,2,0,"ng-container",33)(3,y4,2,0,"ng-container",33)(4,v4,3,5,"ng-container",33),L(5," ] "),T()),r&2){let e=O().$implicit;E(2),D("ngIf",e.isCustom),E(),D("ngIf",e.isCustom&&e.lastUsedAt),E(),D("ngIf",e.lastUsedAt)}}function S4(r,t){if(r&1){let e=me();k(0,"li",26),ne("shortPress",function(){let n=Y(e).$implicit,i=O(2);return Q(i.onExerciseClicked(n))}),k(1,"div")(2,"span",27),L(3),T(),te(4,g4,4,6,"span",28)(5,b4,6,3,"span",29),T(),se(6,"app-icon",30),T()}if(r&2){let e=t.$implicit,o=t.odd,n=O(2);D("ngClass",jr(7,d4,o,!o)),E(3),Oe(e.name),E(),D("ngIf",e.category),E(),D("ngIf",e.isCustom||e.lastUsedAt),E(),RS("h-6 w-6 mr-1 flex-shrink-0 "+n.itemIconClass),D("name",n.itemIconName)}}function w4(r,t){if(r&1&&(k(0,"li",34),L(1),T()),r&2){let e=O(2);E(),fe(" ",e.isShowingSimilarView?"No similar exercises found.":"No exercises match your search."," ")}}function _4(r,t){if(r&1){let e=me();k(0,"div",35)(1,"button",36),ne("shortPress",function(){Y(e);let n=O(2);return Q(n.onCreateCustom())}),L(2," Or, create a new custom exercise entry... "),T()()}}function C4(r,t){if(r&1){let e=me();k(0,"div",2),ne("click",function(){Y(e);let n=O();return Q(n.onClose())}),k(1,"div",3),ne("click",function(n){return Y(e),Q(n.stopPropagation())}),k(2,"div",4)(3,"div",5)(4,"h3",6),L(5),T(),k(6,"button",7),ne("shortPress",function(){Y(e);let n=O();return Q(n.onClose())}),se(7,"app-icon",8),T()(),k(8,"div",9),te(9,m4,2,2,"input",10)(10,f4,2,0,"button",11)(11,h4,3,0,"button",12),T()(),k(12,"div",13)(13,"cdk-virtual-scroll-viewport",14)(14,"ul",15),te(15,S4,7,10,"li",16)(16,w4,2,1,"li",17),T()()(),te(17,_4,3,0,"div",18),k(18,"div",19)(19,"button",20),ne("click",function(){Y(e);let n=O();return Q(n.onClose())}),se(20,"app-icon",21),L(21," CANCEL "),T()()()()}if(r&2){let e=O();E(5),Oe(e.title),E(4),D("ngIf",!e.isShowingSimilarView),E(),D("ngIf",e.showSimilarButton&&!e.isShowingSimilarView),E(),D("ngIf",e.isShowingSimilarView),E(4),D("cdkVirtualForOf",e.filteredExercises()),E(),D("ngIf",e.filteredExercises().length===0),E(),D("ngIf",e.showCreateCustomLink)}}var za=class r{myExerciseInput;isOpen=!1;title="Select Exercise";exercises=[];searchPlaceholder="Search exercises...";itemIconName="add";itemIconClass="text-primary dark:text-primary-light";showSimilarButton=!1;showCreateCustomLink=!1;isShowingSimilarView=!1;close=new Gr;exerciseSelected=new Gr;findSimilarClicked=new Gr;createCustomClicked=new Gr;backToSearchClicked=new Gr;internalSearchTerm=ge("");set searchTerm(t){this.internalSearchTerm.set(t)}searchTermChange=new Gr;exerciseService=new fn;filteredExercises=gt(()=>{let t=this.internalSearchTerm().toLowerCase();if(!t)return this.exercises;let e=this.exerciseService.normalizeExerciseNameForSearch(t);return this.exercises.filter(o=>o.name.toLowerCase().includes(e)||o.category?.toLowerCase().includes(t)||o.primaryMuscleGroup?.toLowerCase().includes(t))});onExerciseClicked(t){this.exerciseSelected.emit(t)}onClose(){this.close.emit()}onFindSimilar(){this.findSimilarClicked.emit()}onCreateCustom(){this.createCustomClicked.emit()}onBackToSearch(){this.backToSearchClicked.emit()}onSearchTermChange(t){this.internalSearchTerm.set(t),this.searchTermChange.emit(t)}onSearchEnter(){let t=this.filteredExercises();if(t.length===1){let e=t[0];this.onExerciseClicked(e)}}focusOnSearchInput(t){t&&setTimeout(()=>{t.focus(),t.select()},0)}ngOnChanges(t){t.isOpen&&this.isOpen&&setTimeout(()=>{this.myExerciseInput?.nativeElement.focus(),this.myExerciseInput?.nativeElement.select()},0)}static \u0275fac=function(e){return new(e||r)};static \u0275cmp=zr({type:r,selectors:[["app-exercise-selection-modal"]],viewQuery:function(e,o){if(e&1&&Hr(p4,5),e&2){let n;Kr(n=qr())&&(o.myExerciseInput=n.first)}},inputs:{isOpen:"isOpen",title:"title",exercises:"exercises",searchPlaceholder:"searchPlaceholder",itemIconName:"itemIconName",itemIconClass:"itemIconClass",showSimilarButton:"showSimilarButton",showCreateCustomLink:"showCreateCustomLink",isShowingSimilarView:"isShowingSimilarView",searchTerm:"searchTerm"},outputs:{close:"close",exerciseSelected:"exerciseSelected",findSimilarClicked:"findSimilarClicked",createCustomClicked:"createCustomClicked",backToSearchClicked:"backToSearchClicked",searchTermChange:"searchTermChange"},features:[Rd],decls:1,vars:1,consts:[["exerciseSearchFied",""],["class","fixed inset-0 bg-gray-700 bg-opacity-75 transition-opacity overflow-y-auto h-full w-full z-[70] flex items-center justify-center p-4 backdrop-blur-sm",3,"click",4,"ngIf"],[1,"fixed","inset-0","bg-gray-700","bg-opacity-75","transition-opacity","overflow-y-auto","h-full","w-full","z-[70]","flex","items-center","justify-center","p-4","backdrop-blur-sm",3,"click"],[1,"relative","transform","overflow-hidden","rounded-md","bg-white","dark:bg-gray-700","text-left","shadow-xl","transition-all","sm:my-8","sm:w-full","sm:max-w-lg","flex","flex-col","max-h-[90vh]",3,"click"],[1,"px-5","py-2","flex-shrink-0"],[1,"flex","justify-between","items-center"],[1,"text-xl","font-semibold","text-gray-900","dark:text-gray-100"],["type","button","appPress","",1,"p-1","rounded-full","text-gray-400","hover:text-gray-600","dark:hover:text-gray-300","focus:outline-none",3,"shortPress"],["name","cancel",1,"w-6","h-6"],[1,"my-4","text-center"],["type","text","class","w-full p-2 border border-gray-300 dark:border-gray-600 rounded-md dark:bg-gray-700 dark:text-gray-200",3,"placeholder","ngModel","ngModelChange","keydown.enter",4,"ngIf"],["appPress","","class","justify-center inline-flex items-center mt-2 px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-blue-600 hover:bg-blue-700",3,"shortPress",4,"ngIf"],["appPress","","class","justify-center inline-flex items-center px-4 py-2 border border-gray-300 dark:border-gray-600 text-sm font-medium rounded-md shadow-sm text-gray-700 dark:text-gray-200 bg-white dark:bg-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600",3,"shortPress",4,"ngIf"],[1,"h-80","px-4","sm:px-6","py-2"],["itemSize","20",1,"h-full","custom-scrollbar"],[1,"space-y-1"],["appPressScroll","","class","p-3 rounded-md cursor-pointer transition-all duration-150 ease-in-out flex justify-between items-center transform hover:-translate-y-1 shadow-sm hover:shadow-md",3,"ngClass","shortPress",4,"cdkVirtualFor","cdkVirtualForOf"],["class","text-gray-500 dark:text-gray-400 text-center p-4",4,"ngIf"],["class","py-3 border-t border-gray-200 dark:border-gray-600 text-center",4,"ngIf"],[1,"bg-gray-50","dark:bg-gray-800","px-4","py-3","sm:flex","sm:flex-row-reverse","sm:px-6","flex-shrink-0","justify-center"],["type","button",1,"mt-3","inline-flex","w-full","justify-center","rounded-md","bg-white","dark:bg-gray-600","px-3","py-2","text-sm","font-semibold","text-gray-900","dark:text-gray-200","shadow-sm","ring-1","ring-inset","ring-gray-300","dark:ring-gray-500","hover:bg-gray-50","dark:hover:bg-gray-500","sm:mt-0","sm:w-auto",3,"click"],["name","cancel",1,"w-6","h-6","mr-1"],["type","text",1,"w-full","p-2","border","border-gray-300","dark:border-gray-600","rounded-md","dark:bg-gray-700","dark:text-gray-200",3,"ngModelChange","keydown.enter","placeholder","ngModel"],["appPress","",1,"justify-center","inline-flex","items-center","mt-2","px-4","py-2","border","border-transparent","text-sm","font-medium","rounded-md","shadow-sm","text-white","bg-blue-600","hover:bg-blue-700",3,"shortPress"],["appPress","",1,"justify-center","inline-flex","items-center","px-4","py-2","border","border-gray-300","dark:border-gray-600","text-sm","font-medium","rounded-md","shadow-sm","text-gray-700","dark:text-gray-200","bg-white","dark:bg-gray-700","hover:bg-gray-50","dark:hover:bg-gray-600",3,"shortPress"],["name","back",1,"w-5","h-5","mr-2"],["appPressScroll","",1,"p-3","rounded-md","cursor-pointer","transition-all","duration-150","ease-in-out","flex","justify-between","items-center","transform","hover:-translate-y-1","shadow-sm","hover:shadow-md",3,"shortPress","ngClass"],[1,"font-medium","text-gray-800","dark:text-gray-200"],["class","block text-xs text-gray-500 dark:text-gray-400",4,"ngIf"],["class","block text-xs text-gray-500 dark:text-gray-400 italic",4,"ngIf"],[3,"name"],[1,"block","text-xs","text-gray-500","dark:text-gray-400"],[1,"block","text-xs","text-gray-500","dark:text-gray-400","italic"],[4,"ngIf"],[1,"text-gray-500","dark:text-gray-400","text-center","p-4"],[1,"py-3","border-t","border-gray-200","dark:border-gray-600","text-center"],["type","button","appPress","",1,"text-sm","text-primary","dark:text-primary-light","hover:underline",3,"shortPress"]],template:function(e,o){e&1&&te(0,C4,22,7,"div",1),e&2&&D("ngIf",o.isOpen)},dependencies:[Qr,un,Yr,Na,pn,di,Da,pi,Fa,mn,$o,WS,qS,GS,KS,HS],encapsulation:2})};var k4=["exerciseSearchFied"],I4=["setRepsInput"],T4=["expandedSetElement"],im=(r,t)=>({"border-red-500 dark:border-red-400":r,"border-gray-300 dark:border-gray-500":t}),E4=r=>({"superset-spacing":r}),N4=r=>({"pt-1":r}),R4=(r,t)=>({"grid-cols-6":r,"grid-cols-5":t}),tw=()=>["warmup","dropset","failure","amrap","myorep","restpause"],P4=(r,t)=>({"bg-gray-50 dark:bg-gray-700/50 text-gray-800 dark:text-gray-200":r,"cursor-default":t}),$4=r=>({"bg-gray-100 dark:bg-gray-800/50":r});function A4(r,t){if(r&1&&(k(0,"div",19),L(1),T()),r&2){let e=O();E(),fe(" ",e.errorMessage(),`
`)}}function D4(r,t){if(r&1){let e=me();k(0,"app-action-menu",26),ne("itemClick",function(n){Y(e);let i=O(2);return Q(i.handleActionMenuItemClick(n))})("closeMenu",function(){Y(e);let n=O(2);return Q(n.onCloseActionMenu())}),T()}if(r&2){let e=O().ngIf,o=O();D("items",o.getRoutineDropdownActionItems(e.id,"dropdown"))("isVisible",o.areActionsVisible(e.id))}}function F4(r,t){if(r&1){let e=me();k(0,"div",20)(1,"div",21)(2,"button",22),ne("click",function(n){let i=Y(e).ngIf,s=O();return Q(s.toggleActions(i.id,n))}),Ue(),k(3,"svg",23),se(4,"path",24),T()(),te(5,D4,1,2,"app-action-menu",25),T()()}if(r&2){let e=t.ngIf,o=O();E(5),D("ngIf",o.areActionsVisible(e.id))}}function O4(r,t){if(r&1&&(k(0,"div")(1,"label",30),L(2),T()()),r&2){let e,o=O(2);E(2),Oe((e=o.builderForm.get("name"))==null?null:e.value)}}function L4(r,t){r&1&&(k(0,"span"),L(1,"Routine name is required"),T())}function M4(r,t){if(r&1&&(k(0,"div",34),te(1,L4,2,0,"span",13),T()),r&2){let e,o=O(3);E(),D("ngIf",(e=o.builderForm.get("name"))==null||e.errors==null?null:e.errors.required)}}function B4(r,t){if(r&1&&(k(0,"div")(1,"label",31),L(2,"Routine Name"),T(),se(3,"input",32),te(4,M4,2,1,"div",33),T()),r&2){let e,o,n=O(2);E(3),D("ngClass",jr(2,im,((e=n.builderForm.get("name"))==null?null:e.invalid)&&((e=n.builderForm.get("name"))==null?null:e.touched),!((e=n.builderForm.get("name"))!=null&&e.invalid&&((e=n.builderForm.get("name"))!=null&&e.touched)))),E(),D("ngIf",((o=n.builderForm.get("name"))==null?null:o.invalid)&&(((o=n.builderForm.get("name"))==null?null:o.dirty)||((o=n.builderForm.get("name"))==null?null:o.touched)))}}function V4(r,t){if(r&1&&(k(0,"div"),se(1,"p",35),T()),r&2){let e=O(2);E(),D("innerHTML",e.sanitizedDescription,Pd)}}function W4(r,t){r&1&&(k(0,"div")(1,"label",36),L(2,"Description (Optional)"),T(),se(3,"textarea",37),T())}function U4(r,t){if(r&1&&(k(0,"div")(1,"label",38)(2,"span",39),L(3,"Goal: "),T(),L(4),T()()),r&2){let e,o=O(2);E(4),fe(" ",((e=o.builderForm.get("goal"))==null||e.value==null?null:e.value.toUpperCase())||"")}}function z4(r,t){if(r&1&&(k(0,"option",44),L(1),T()),r&2){let e=t.$implicit;D("value",e.value),E(),fe("",e.label," ")}}function G4(r,t){if(r&1&&(k(0,"div")(1,"label",40),L(2,"Primary Goal"),T(),k(3,"select",41)(4,"option",42),L(5,"-- Set routine goal --"),T(),te(6,z4,2,2,"option",43),T()()),r&2){let e=O(2);E(6),D("ngForOf",e.routineGoals)}}function H4(r,t){if(r&1&&(k(0,"div",45)(1,"span",39),L(2,"Last:"),T(),L(3),Ke(4,"date"),T()),r&2){let e=O(2);E(3),fe(" ",Xr(4,1,e.routine&&e.routine.lastPerformed,"dd/MM/yy HH:mm")," ")}}function K4(r,t){r&1&&(k(0,"div",46),L(1," Not performed yet "),T())}function q4(r,t){if(r&1&&(k(0,"div",45)(1,"span",39),L(2,"Est. duration:"),T(),L(3),T()),r&2){let e=O(2);E(3),fe(" ~",e.getRoutineDuration()," min ")}}function j4(r,t){if(r&1&&(k(0,"div",47)(1,"span",39),L(2,"Last duration:"),T(),L(3),T()),r&2){let e=O(2);E(3),fe(" ",e.lastRoutineDuration," min ")}}function X4(r,t){if(r&1&&(pr(0),te(1,O4,3,1,"div",13)(2,B4,5,5,"div",13)(3,V4,2,1,"div",13)(4,W4,4,0,"div",13)(5,U4,5,1,"div",13)(6,G4,7,1,"div",13)(7,H4,5,4,"div",27)(8,K4,2,0,"div",28),k(9,"div"),te(10,q4,4,1,"div",27),T(),k(11,"div"),te(12,j4,4,1,"div",29),T(),dr()),r&2){let e=O();E(),D("ngIf",e.isViewMode),E(),D("ngIf",e.isEditableMode()),E(),D("ngIf",e.isViewMode),E(),D("ngIf",e.isEditableMode()),E(),D("ngIf",e.isViewMode),E(),D("ngIf",e.isEditableMode()),E(),D("ngIf",e.routine&&e.routine.lastPerformed),E(),D("ngIf",e.routine&&!e.routine.lastPerformed),E(2),D("ngIf",e.routine&&e.getRoutineDuration()>0),E(2),D("ngIf",e.lastRoutineDuration)}}function Y4(r,t){if(r&1&&(k(0,"span"),L(1),T()),r&2){let e=O(3);E(),Oe(e.getLogTitleForProgramEntry())}}function Q4(r,t){if(r&1&&(k(0,"header",64)(1,"h1",65),te(2,Y4,2,1,"span",13),T()()),r&2){let e=O(2);E(2),D("ngIf",e.isEditableMode)}}function Z4(r,t){r&1&&(k(0,"span"),L(1,"Date is required"),T())}function J4(r,t){if(r&1&&(k(0,"div",34),te(1,Z4,2,0,"span",13),T()),r&2){let e,o=O(2);E(),D("ngIf",(e=o.builderForm.get("workoutDate"))==null||e.errors==null?null:e.errors.required)}}function eM(r,t){r&1&&(k(0,"span"),L(1,"Start time is required"),T())}function tM(r,t){if(r&1&&(k(0,"div",34),te(1,eM,2,0,"span",13),T()),r&2){let e,o=O(2);E(),D("ngIf",(e=o.builderForm.get("startTime"))==null||e.errors==null?null:e.errors.required)}}function rM(r,t){r&1&&(k(0,"span"),L(1,"End time is required"),T())}function oM(r,t){if(r&1&&(k(0,"div",34),te(1,rM,2,0,"span",13),T()),r&2){let e,o=O(2);E(),D("ngIf",(e=o.builderForm.get("endTime"))==null||e.errors==null?null:e.errors.required)}}function nM(r,t){if(r&1&&(k(0,"option",44),L(1),T()),r&2){let e=t.$implicit;D("value",e.id),E(),Oe(e.name)}}function iM(r,t){if(r&1&&(k(0,"option",44),L(1),T()),r&2){let e=t.$implicit;D("value",e.id),E(),fe("",e.name," ")}}function sM(r,t){if(r&1){let e=me();pr(0),te(1,Q4,3,1,"header",48),k(2,"div",49)(3,"div")(4,"label",50),L(5,"Workout Date"),T(),se(6,"input",51),te(7,J4,2,1,"div",33),T(),k(8,"div")(9,"label",52),L(10,"Start Time"),T(),se(11,"input",53),te(12,tM,2,1,"div",33),T(),k(13,"div")(14,"label",54),L(15,"End Time"),T(),k(16,"input",55),ne("change",function(){Y(e);let n=O();return Q(n.handleEndTimeChange())}),T(),te(17,oM,2,1,"div",33),T()(),k(18,"div")(19,"label",56),L(20,"Workout Title (Optional)"),T(),se(21,"input",57),T(),k(22,"div")(23,"label",58),L(24,"Based on Routine (Optional)"),T(),k(25,"select",59)(26,"option",42),L(27,"-- Log Ad-hoc Routine --"),T(),te(28,nM,2,2,"option",43),T()(),k(29,"div")(30,"label",60),L(31,"Based on Program (Optional)"),T(),k(32,"select",61)(33,"option",42),L(34,"-- Log Ad-hoc Program --"),T(),te(35,iM,2,2,"option",43),T()(),k(36,"div")(37,"label",62),L(38,"Overall Notes (Optional)"),T(),se(39,"textarea",63),T(),dr()}if(r&2){let e,o,n,i,s,a,l=O();E(),D("ngIf",l.checkIfLogForProgram()),E(5),D("ngClass",jr(9,im,((e=l.builderForm.get("workoutDate"))==null?null:e.invalid)&&((e=l.builderForm.get("workoutDate"))==null?null:e.touched),!((e=l.builderForm.get("workoutDate"))!=null&&e.invalid&&((e=l.builderForm.get("workoutDate"))!=null&&e.touched)))),E(),D("ngIf",((o=l.builderForm.get("workoutDate"))==null?null:o.invalid)&&(((o=l.builderForm.get("workoutDate"))==null?null:o.dirty)||((o=l.builderForm.get("workoutDate"))==null?null:o.touched))),E(4),D("ngClass",jr(12,im,((n=l.builderForm.get("startTime"))==null?null:n.invalid)&&((n=l.builderForm.get("startTime"))==null?null:n.touched),!((n=l.builderForm.get("startTime"))!=null&&n.invalid&&((n=l.builderForm.get("startTime"))!=null&&n.touched)))),E(),D("ngIf",((i=l.builderForm.get("startTime"))==null?null:i.invalid)&&(((i=l.builderForm.get("startTime"))==null?null:i.dirty)||((i=l.builderForm.get("startTime"))==null?null:i.touched))),E(4),D("ngClass",jr(15,im,((s=l.builderForm.get("endTime"))==null?null:s.invalid)&&((s=l.builderForm.get("endTime"))==null?null:s.touched),!((s=l.builderForm.get("endTime"))!=null&&s.invalid&&((s=l.builderForm.get("endTime"))!=null&&s.touched)))),E(),D("ngIf",((a=l.builderForm.get("endTime"))==null?null:a.invalid)&&(((a=l.builderForm.get("endTime"))==null?null:a.dirty)||((a=l.builderForm.get("endTime"))==null?null:a.touched))),E(11),D("ngForOf",l.availableRoutines),E(7),D("ngForOf",l.availablePrograms)}}function aM(r,t){if(r&1){let e=me();k(0,"button",74),ne("click",function(){Y(e);let n=O(2);return Q(n.openExerciseSelectionModal())}),se(1,"app-icon",75),L(2," ADD EXERCISE "),T()}}function lM(r,t){if(r&1){let e=me();k(0,"button",90),ne("click",function(){Y(e);let n=O(5);return Q(n.groupSelectedAsSuperset())}),L(1),T()}if(r&2){let e=O(5);D("disabled",e.isViewMode),E(),fe(" Group Superset (",e.selectedExerciseIndicesForSuperset().length,") ")}}function uM(r,t){if(r&1){let e=me();k(0,"button",91),ne("click",function(){Y(e);let n=O(2).index,i=O(3);return Q(i.ungroupSuperset(n))}),L(1),T()}if(r&2){let e=O(5);D("disabled",e.isViewMode),E(),fe(" Ungroup Superset (",e.selectedExerciseIndicesForSuperset().length,") ")}}function cM(r,t){if(r&1&&(k(0,"div",87),te(1,lM,2,2,"button",88)(2,uM,2,2,"button",89),T()),r&2){let e=O(4);E(),D("ngIf",!e.canUngroupSelectedExercises()),E(),D("ngIf",e.canUngroupSelectedExercises())}}function pM(r,t){r&1&&(k(0,"div",92),Ue(),k(1,"svg",93),se(2,"path",94),T()())}function dM(r,t){if(r&1){let e=me();k(0,"input",95),ne("change",function(n){Y(e);let i=O().index,s=O(3);return Q(s.toggleExerciseSelectionForSuperset(i,n))}),T()}if(r&2){let e=O().index,o=O(3);D("id","superset-select-"+e)("checked",o.selectedExerciseIndicesForSuperset().includes(e))("disabled",o.isViewMode)}}function mM(r,t){if(r&1&&(k(0,"div",99),L(1),T()),r&2){let e,o=O(2).$implicit;E(),Ft(" ",((e=o.get("rounds"))==null?null:e.value)||1," ",(((e=o.get("rounds"))==null?null:e.value)||1)===1?"round":"rounds"," ")}}function fM(r,t){if(r&1){let e=me();k(0,"app-icon",107),ne("shortPress",function(){Y(e);let n=O(3).$implicit,i=O(3);return Q(i.openModal(n.value))}),T()}if(r&2){let e=O(6);D("appTooltip",e.exerciseInfoTooltipString)}}function hM(r,t){if(r&1&&(k(0,"p"),L(1),T()),r&2){let e=O(3).$implicit,o=O(3);E(),fe(" Duration (s): ",o.getSetDurationPerformed(e)," ")}}function gM(r,t){if(r&1&&(k(0,"p"),L(1),T()),r&2){let e,o=O(3).$implicit,n=O(3);E(),Ft(" Sets: ",o==null||(e=o.get("sets"))==null?null:e.value.length," ",!n.isExerciseCardioOnlyCtrl(o)&&n.getSetReps(o)?"( Reps: "+n.getSetReps(o)+" )":""," ")}}function xM(r,t){if(r&1&&(k(0,"p"),L(1),T()),r&2){let e=O(3).$implicit,o=O(3);E(),Ft(" Weight (",o.unitService.getUnitLabel(),"): ",o.getSetWeightsUsed(e)," ")}}function yM(r,t){if(r&1&&(k(0,"div",100),se(1,"img",101),Ke(2,"async"),k(3,"div",102)(4,"div",103)(5,"h3",104),L(6),T(),te(7,fM,1,1,"app-icon",105),T(),k(8,"div",106),te(9,hM,2,1,"p",13)(10,gM,2,2,"p",13)(11,xM,2,2,"p",13),T()()()),r&2){let e,o,n,i,s,a,l,u=O(2).$implicit,c=O(3);E(),D("src",ht(2,7,c.getIconPath((e=u.get("exerciseId"))==null?null:e.value)),xs),E(4),D("title",(o=u.get("exerciseName"))==null?null:o.value),E(),fe(" ",(n=u.get("exerciseName"))==null?null:n.value," "),E(),D("ngIf",(i=u.get("exerciseId"))==null?null:i.value),E(2),D("ngIf",(u==null||(s=u.get("sets"))==null?null:s.value)&&(u==null||(s=u.get("sets"))==null?null:s.value.length)>=1&&c.checkIfTimedExercise(u)),E(),D("ngIf",(u==null||(a=u.get("sets"))==null?null:a.value)&&(u==null||(a=u.get("sets"))==null?null:a.value.length)>=1),E(),D("ngIf",(u==null||(l=u.get("sets"))==null?null:l.value)&&(u==null||(l=u.get("sets"))==null?null:l.value.length)>1&&c.checkIfWeightedExercise(u))}}function vM(r,t){if(r&1&&(k(0,"div",96),te(1,mM,2,2,"div",97)(2,yM,12,9,"div",98),T()),r&2){let e,o=O(),n=o.$implicit,i=o.index,s=O(3);E(),D("ngIf",((e=n.get("supersetId"))==null?null:e.value)&&s.getSetsFormArray(n).controls.length>0&&((e=n.get("supersetOrder"))==null?null:e.value)===0),E(),D("ngIf",!s.shouldShowExpandedExercise(i)&&s.getSetsFormArray(n).controls.length>0)}}function bM(r,t){if(r&1){let e=me();k(0,"div",108)(1,"button",109),ne("click",function(n){Y(e);let i=O().index;return O(3).removeExercise(i),Q(n.stopPropagation())}),Ue(),k(2,"svg",110),se(3,"rect",111)(4,"path",112),T()()()}}function SM(r,t){if(r&1&&(k(0,"span",126),L(1),T()),r&2){let e,o=O(2).$implicit;E(),Ft(" Superset exercise (",(((e=o.get("supersetOrder"))==null?null:e.value)??0)+1," of ",(e=o.get("supersetSize"))==null?null:e.value,") ")}}function wM(r,t){if(r&1){let e=me();k(0,"app-icon",107),ne("shortPress",function(){Y(e);let n=O(2).$implicit,i=O(3);return Q(i.openModal(n.value))}),T()}if(r&2){let e=O(5);D("appTooltip",e.exerciseInfoTooltipString)}}function _M(r,t){if(r&1){let e=me();k(0,"div",127)(1,"label",128),L(2,"Rounds:"),T(),k(3,"input",129),ne("change",function(){let n;Y(e);let i=O(2),s=i.$implicit,a=i.index,l=O(3);return Q(l.syncSupersetRounds((n=s.get("supersetId"))==null?null:n.value,(n=s.get("rounds"))==null?null:n.value,a))}),T()()}if(r&2){let e,o=O(2),n=o.$implicit,i=o.index,s=O(3);E(),D("for","rounds-"+i),E(2),D("id","rounds-"+i)("readonly",((e=n.get("supersetId"))==null?null:e.value)&&(((e=n.get("supersetOrder"))==null?null:e.value)??0)>0||s.isViewMode)}}function CM(r,t){if(r&1){let e=me();k(0,"button",130),ne("click",function(){Y(e);let n=O(2).index,i=O(3);return Q(i.removeExercise(n))}),Ue(),k(1,"svg",131),se(2,"rect",111)(3,"path",112),T(),L(4," Remove "),T()}}function kM(r,t){if(r&1){let e=me();k(0,"button",132),ne("click",function(){Y(e);let n=O(2).index,i=O(3);return Q(i.ungroupSuperset(n))}),Ue(),k(1,"svg",133),se(2,"path",134),T(),L(3," Ungroup "),T()}if(r&2){let e=O(5);D("disabled",e.isViewMode)}}function IM(r,t){if(r&1&&(k(0,"div")(1,"label",135),L(2),T(),se(3,"textarea",136),T()),r&2){let e=O(2).index,o=O(3);E(),D("for","exerciseNotes-"+e),E(),fe(" ",o.mode==="routineBuilder"?"Exercise Notes (Optional)":"Notes for this Logged Exercise (Optional)"," "),E(),D("id","exerciseNotes-"+e)("readonly",o.isViewMode)}}function TM(r,t){r&1&&(k(0,"div",138),L(1," Weight "),T())}function EM(r,t){if(r&1&&(k(0,"div")(1,"strong"),L(2),T()()),r&2){let e=O().$implicit,o=O(6);E(2),fe(" ",e.weight!=null?e.weight+" "+o.unitService.getUnitLabel():"-"," ")}}function NM(r,t){if(r&1){let e=me();Ue(),k(0,"svg",144),ne("click",function(){Y(e);let n=O().$implicit,i=O(6);return Q(i.showNotesModal(n.notes))}),se(1,"path",145),T()}}function RM(r,t){r&1&&(k(0,"span",146),L(1,"-"),T())}function PM(r,t){r&1&&se(0,"div",147)}function $M(r,t){if(r&1&&(pr(0),k(1,"div",39),L(2),T(),k(3,"div")(4,"strong"),L(5),T()(),te(6,EM,3,1,"div",13),Ke(7,"isWeighted"),k(8,"div")(9,"strong"),L(10),T()(),k(11,"div")(12,"strong"),L(13),T()(),k(14,"div",140),te(15,NM,2,0,"svg",141)(16,RM,2,0,"span",142),T(),te(17,PM,1,0,"div",143),dr()),r&2){let e=t.$implicit,o=t.index,n=t.last,i=O(3).$implicit;E(2),Oe(o+1),E(3),fe(" ",e.reps||"-"," "),E(),D("ngIf",ht(7,8,i.getRawValue())),E(4),fe(" ",e.duration||"-"," "),E(3),fe(" ",e.restAfterSet||"-"," "),E(2),D("ngIf",e.notes),E(),D("ngIf",!e.notes),E(),D("ngIf",!n)}}function AM(r,t){if(r&1&&(k(0,"div",137),Ke(1,"isWeighted"),Ke(2,"isWeighted"),k(3,"div",138),L(4,"Set"),T(),k(5,"div",138),L(6,"Reps"),T(),te(7,TM,2,0,"div",139),Ke(8,"isWeighted"),k(9,"div",138),L(10,"Time"),T(),k(11,"div",138),L(12,"Rest"),T(),k(13,"div",138),L(14,"Notes "),T(),te(15,$M,18,10,"ng-container",77),T()),r&2){let e,o=O(2).$implicit;D("ngClass",jr(9,R4,ht(1,3,o.getRawValue()),!ht(2,5,o.getRawValue()))),E(7),D("ngIf",ht(8,7,o.getRawValue())),E(8),D("ngForOf",(e=o.get("sets"))==null?null:e.value)}}function DM(r,t){if(r&1){let e=me();k(0,"button",155),ne("click",function(n){Y(e);let i=O(3),s=i.$implicit,a=i.index;return O(3).addSet(s,a),Q(n.stopPropagation())}),L(1," + Add Set "),T()}}function FM(r,t){if(r&1&&(k(0,"div",156)(1,"div",157),L(2,"#"),T(),k(3,"div",158),L(4,"Type"),T(),k(5,"div",159),L(6),T(),k(7,"div",158),L(8),T(),k(9,"div",157),L(10),T(),k(11,"div",159),L(12),T(),k(13,"div",157),L(14),T(),se(15,"div",160),T()),r&2){let e=O(6);E(6),Oe(e.mode==="manualLogEntry"?"Reps Ach.":"Reps"),E(2),Ft("",e.mode==="manualLogEntry"?"Wt Used":"Weight"," (",e.unitService.getUnitLabel(),")"),E(2),Oe(e.mode==="manualLogEntry"?"Time Perf.":"Time"),E(2),Oe(e.mode==="routineBuilder"?"Rest":"Notes"),E(2),Oe(e.mode==="routineBuilder"?"Tempo":"")}}function OM(r,t){if(r&1&&(pr(0),L(1),dr()),r&2){let e,o=O(2).$implicit;E(),fe("",(e=o.get("restAfterSet"))==null?null:e.value,"s")}}function LM(r,t){if(r&1&&(pr(0),L(1),dr()),r&2){let e,o=O(2).$implicit;E(),Oe(((e=o.get("notes"))==null?null:e.value)||"-")}}function MM(r,t){if(r&1&&(pr(0),L(1),dr()),r&2){let e,o=O(2).$implicit;E(),Oe(((e=o.get("tempo"))==null?null:e.value)||"-")}}function BM(r,t){if(r&1){let e=me();k(0,"div",173)(1,"button",174),ne("click",function(n){Y(e);let i=O(2).index,s=O(3),a=s.$implicit,l=s.index;return O(3).removeSet(a,l,i),Q(n.stopPropagation())}),Ue(),k(2,"svg",110),se(3,"rect",111)(4,"path",112),T()()()}}function VM(r,t){r&1&&se(0,"div",160)}function WM(r,t){if(r&1){let e=me();k(0,"div",164),ne("click",function(n){Y(e);let i=O().index,s=O(3).index,a=O(3);return Q(a.toggleSetExpansion(s,i,n))}),k(1,"div",165),L(2),T(),k(3,"div",166),Ke(4,"titlecase"),L(5),Ke(6,"titlecase"),T(),k(7,"div",167),L(8),T(),k(9,"div",167),L(10),Ke(11,"weightUnit"),T(),k(12,"div",168),L(13),T(),k(14,"div",169),te(15,OM,2,1,"ng-container",13)(16,LM,2,1,"ng-container",13),T(),k(17,"div",170),te(18,MM,2,1,"ng-container",13),T(),te(19,BM,5,0,"div",171)(20,VM,1,0,"div",172),T()}if(r&2){let e,o,n,i,s,a,l,u,c=O(),p=c.$implicit,d=c.index,m=O(6);D("ngClass",jr(22,P4,!uy(21,tw).includes(((e=p.get("type"))==null?null:e.value)??"")&&!m.isViewMode,m.isViewMode)),E(2),Oe(d+1),E(),D("title",ht(4,14,(o=p.get("type"))==null?null:o.value)),E(2),Oe(ht(6,16,(n=p.get("type"))==null?null:n.value)||"Standard"),E(3),Oe((i=p.get(m.mode==="manualLogEntry"?"repsAchieved":"reps"))==null?null:i.value??"-"),E(2),Oe(Xr(11,18,(s=p.get(m.mode==="manualLogEntry"?"weightUsed":"weight"))==null?null:s.value,"1.0-2")),E(3),Oe((a=p.get(m.mode==="manualLogEntry"?"durationPerformed":"duration"))!=null&&a.value?((a=p.get(m.mode==="manualLogEntry"?"durationPerformed":"duration"))==null?null:a.value)+"s":"-"),E(),D("title",m.mode==="routineBuilder"?((l=p.get("restAfterSet"))==null?null:l.value)+"s":(l=p.get("notes"))==null?null:l.value),E(),D("ngIf",m.mode==="routineBuilder"),E(),D("ngIf",m.mode==="manualLogEntry"),E(),D("title",(u=p.get("tempo"))==null?null:u.value),E(),D("ngIf",m.mode==="routineBuilder"),E(),D("ngIf",!m.isViewMode),E(),D("ngIf",m.isViewMode)}}function UM(r,t){if(r&1&&(k(0,"option",44),L(1),T()),r&2){let e=t.$implicit;D("value",e.value),E(),Oe(e.label)}}function zM(r,t){if(r&1&&(k(0,"div")(1,"label",178),L(2),T(),se(3,"input",188),T()),r&2){let e=O(2).index,o=O(3).index,n=O(3);E(),D("for","reps-exp-"+o+"-"+e),E(),fe("Reps ",n.mode==="manualLogEntry"?"(Achieved)":""),E(),D("id","reps-exp-"+o+"-"+e)("formControlName",n.mode==="manualLogEntry"?"repsAchieved":"reps")("readonly",n.isViewMode)}}function GM(r,t){if(r&1&&(k(0,"div")(1,"label",178),L(2,"Tempo"),T(),se(3,"input",189),T()),r&2){let e=O(2).index,o=O(3).index,n=O(3);E(),D("for","tempo-exp-"+o+"-"+e),E(2),D("id","tempo-exp-"+o+"-"+e)("readonly",n.isViewMode)}}function HM(r,t){if(r&1&&(k(0,"div",190)(1,"label",178),L(2,"Set Notes"),T(),se(3,"input",191),T()),r&2){let e=O(2).index,o=O(3).index,n=O(3);E(),D("for","setNotes-exp-"+o+"-"+e),E(2),D("id","setNotes-exp-"+o+"-"+e)("readonly",n.isViewMode)}}function KM(r,t){if(r&1){let e=me();k(0,"div",175,0)(2,"div",176)(3,"div",177)(4,"label",178),L(5,"Set Type"),T(),k(6,"select",179),te(7,UM,2,2,"option",43),T()(),te(8,zM,4,5,"div",13),k(9,"div")(10,"label",178),L(11),T(),se(12,"input",180),T(),k(13,"div")(14,"label",178),L(15),T(),se(16,"input",181),T(),te(17,GM,4,3,"div",13),k(18,"div")(19,"label",178),L(20),T(),se(21,"input",182),T(),te(22,HM,4,3,"div",183),T(),k(23,"div",184)(24,"button",185),ne("click",function(n){Y(e);let i=O(7);return Q(i.collapseExpandedSet(!1,n))}),Ue(),k(25,"svg",186),se(26,"path",187),T()()()()}if(r&2){let e,o,n,i=O(),s=i.$implicit,a=i.index,l=O(3),u=l.$implicit,c=l.index,p=O(3);D("ngClass",li(24,$4,!uy(23,tw).includes(((e=s.get("type"))==null?null:e.value)??""))),E(4),D("for","setType-exp-"+c+"-"+a),E(2),D("id","setType-exp-"+c+"-"+a)("disabled",p.isViewMode),E(),D("ngForOf",p.availableSetTypes),E(),D("ngIf",!p.isExerciseCardioOnlyCtrl(u)),E(2),D("for","weight-exp-"+c+"-"+a),E(),Ft("Weight (",p.unitService.getUnitLabel(),") ",p.mode==="manualLogEntry"?"(Used)":""),E(),D("id","weight-exp-"+c+"-"+a)("formControlName",p.mode==="manualLogEntry"?"weightUsed":"weight")("readonly",p.isViewMode),E(2),D("for","duration-exp-"+c+"-"+a),E(),fe("Time (s) ",p.mode==="manualLogEntry"?"(Performed)":""),E(),D("id","duration-exp-"+c+"-"+a)("formControlName",p.mode==="manualLogEntry"?"durationPerformed":"duration")("readonly",p.isViewMode),E(),D("ngIf",((o=s.get("tempo"))==null?null:o.value)||p.isEditableMode()),E(2),D("for","rest-exp-"+c+"-"+a),E(),fe("Rest (s) ",p.mode==="manualLogEntry"?"(Done)":""),E(),D("id","rest-exp-"+c+"-"+a)("readonly",p.isViewMode),E(),D("ngIf",((n=s.get("notes"))==null?null:n.value)||p.isEditableMode())}}function qM(r,t){if(r&1&&(k(0,"div",161),te(1,WM,21,25,"div",162)(2,KM,27,26,"div",163),T()),r&2){let e=t.index,o=O(3).index,n=O(3);D("formGroupName",e),E(),D("ngIf",!n.isSetExpanded(o,e)),E(),D("ngIf",n.isSetExpanded(o,e))}}function jM(r,t){if(r&1&&(k(0,"div",148)(1,"div",149)(2,"h4",150),L(3,"Sets:"),T(),te(4,DM,2,0,"button",151),T(),k(5,"div",152),te(6,FM,16,6,"div",153)(7,qM,3,3,"div",154),T()()),r&2){let e,o=O(2),n=o.$implicit,i=o.index,s=O(3);E(4),D("ngIf",!s.isViewMode),E(2),D("ngIf",s.getSetsFormArray(n).controls.length>0&&((e=s.expandedSetPath())==null?null:e.exerciseIndex)!==i),E(),D("ngForOf",s.getSetsFormArray(n).controls)}}function XM(r,t){if(r&1&&(k(0,"div",113)(1,"div",114)(2,"div",115),te(3,SM,2,2,"span",116),k(4,"div",117),se(5,"img",118),Ke(6,"async"),k(7,"h3",119),L(8),T(),te(9,wM,1,1,"app-icon",105),T()(),k(10,"div",120),te(11,_M,4,3,"div",121)(12,CM,5,0,"button",122)(13,kM,4,1,"button",123),T()(),te(14,IM,4,4,"div",13)(15,AM,16,12,"div",124)(16,jM,8,3,"div",125),T()),r&2){let e,o,n,i,s,a,l,u=O().$implicit,c=O(3);E(3),D("ngIf",c.mode==="routineBuilder"&&((e=u.get("supersetId"))==null?null:e.value)),E(2),D("src",ht(6,10,c.getIconPath((o=u.get("exerciseId"))==null?null:o.value)),xs),E(3),fe(" ",((n=u.get("exerciseName"))==null?null:n.value)||"Select Exercise"," "),E(),D("ngIf",(i=u.get("exerciseId"))==null?null:i.value),E(2),D("ngIf",c.mode==="routineBuilder"&&((s=u.get("supersetId"))==null?null:s.value)&&((s=u.get("supersetOrder"))==null?null:s.value)===0),E(),D("ngIf",!c.isViewMode),E(),D("ngIf",c.mode==="routineBuilder"&&c.isEditableMode()&&((a=u.get("supersetId"))==null?null:a.value)),E(),D("ngIf",((l=c.builderForm.get("notes"))==null?null:l.value)||c.isEditableMode()),E(),D("ngIf",!c.isCompactView&&c.isViewMode),E(),D("ngIf",!c.isCompactView&&c.isEditableMode())}}function YM(r,t){if(r&1){let e=me();pr(0),k(1,"div",78),ne("click",function(n){let i=Y(e).index,s=O(3);return Q(s.toggleSetExpansion(i,0,n))})("clickOutside",function(n){Y(e);let i=O(3);return Q(i.collapseExpandedSet(!1,n))}),te(2,cM,3,2,"div",79),k(3,"div",80)(4,"div",81),te(5,pM,3,0,"div",82)(6,dM,1,3,"input",83)(7,vM,3,2,"div",84)(8,bM,5,0,"div",85),T(),te(9,XM,17,12,"div",86),T()(),dr()}if(r&2){let e=t.$implicit,o=t.index,n=O(3);E(),D("title",n.isEditableMode()?"Drag to reorder":"")("ngClass",li(16,E4,n.isSupersetSpacing(o))),E(),D("ngIf",n.mode==="routineBuilder"&&n.isEditableMode()&&n.selectedExerciseIndicesForSuperset().length>=2&&o===n.firstSelectedExerciseIndexForSuperset),E(),D("cdkDragDisabled",!n.isEditableMode()||n.isSetExpanded(o,0))("longPressEnabled",n.isEditableMode()&&!n.isSetExpanded(o,0))("longPressDelay",150)("cdkDragData",e)("formGroupName",o)("cdkDragStartDelay",110)("ngClass",n.getExerciseCardClasses(e,o)),E(),D("ngClass",li(18,N4,n.isSetExpanded(o,0))),E(),D("ngIf",n.isEditableMode()),E(),D("ngIf",n.mode==="routineBuilder"&&(n.isEditableMode()||n.isNewMode)&&!n.isViewMode),E(),D("ngIf",!n.shouldShowExpandedExercise(o)),E(),D("ngIf",!n.shouldShowExpandedExercise(o)&&!n.isViewMode),E(),D("ngIf",n.shouldShowExpandedExercise(o))}}function QM(r,t){if(r&1){let e=me();k(0,"div",76),ne("cdkDropListDropped",function(n){Y(e);let i=O(2);return Q(i.onExerciseDrop(n))}),te(1,YM,10,20,"ng-container",77),T()}if(r&2){let e=O(2);D("cdkDropListData",e.exercisesFormArray.controls)("cdkDropListDisabled",!e.isEditableMode),E(),D("ngForOf",e.exercisesFormArray.controls)}}function ZM(r,t){if(r&1){let e=me();k(0,"div",192)(1,"p",193),L(2,"No exercises added yet"),T(),k(3,"button",194),ne("click",function(){Y(e);let n=O(2);return Q(n.openExerciseSelectionModal())}),L(4," + ADD FIRST EXERCISE "),T()()}}function JM(r,t){if(r&1){let e=me();k(0,"div",192)(1,"p",193),L(2,"Select a routine or ADD EXERCISEs manually to log"),T(),k(3,"button",194),ne("click",function(){Y(e);let n=O(2);return Q(n.openExerciseSelectionModal())}),L(4," + ADD FIRST EXERCISE TO LOG "),T()()}}function eB(r,t){r&1&&(k(0,"div",195),L(1," The selected routine has no exercises. Add them manually or edit the routine template. "),T())}function tB(r,t){if(r&1){let e=me();k(0,"div",196)(1,"button",197),ne("click",function(){Y(e);let n=O(2);return Q(n.openExerciseSelectionModal())}),Ue(),k(2,"svg",198),se(3,"circle",199)(4,"line",200)(5,"line",201),T(),L(6," ADD ANOTHER EXERCISE "),T()()}}function rB(r,t){if(r&1&&(k(0,"section",66)(1,"div",67)(2,"h2",68),L(3),T(),te(4,aM,3,0,"button",69),T(),te(5,QM,2,3,"div",70)(6,ZM,5,0,"div",71)(7,JM,5,0,"div",71)(8,eB,2,0,"div",72)(9,tB,7,0,"div",73),T()),r&2){let e,o,n,i=O();E(3),Oe(i.mode==="routineBuilder"?"Exercises":"Logged Exercises"),E(),D("ngIf",!i.isViewMode&&(!i.exercisesFormArray.controls||i.exercisesFormArray.controls.length>0)),E(),D("ngIf",i.exercisesFormArray.length>0),E(),D("ngIf",!i.isViewMode&&i.exercisesFormArray.length===0&&i.mode==="routineBuilder"&&((e=i.builderForm.get("goal"))==null?null:e.value)!=="rest"),E(),D("ngIf",i.mode==="manualLogEntry"&&i.exercisesFormArray.length===0&&!((o=i.builderForm.get("routineIdForLog"))!=null&&o.value)),E(),D("ngIf",i.mode==="manualLogEntry"&&i.exercisesFormArray.length===0&&((n=i.builderForm.get("routineIdForLog"))==null?null:n.value)),E(),D("ngIf",!i.isViewMode&&i.exercisesFormArray.length>0)}}function oB(r,t){r&1&&(k(0,"section",202)(1,"p",203),L(2,"This is a rest day routine. No exercises are needed"),T()())}function nB(r,t){r&1&&se(0,"app-icon",75)}function iB(r,t){r&1&&se(0,"app-icon",210)}function sB(r,t){if(r&1&&(k(0,"div",204)(1,"button",205),se(2,"app-icon",206),L(3," CANCEL "),T(),k(4,"button",207),te(5,nB,1,0,"app-icon",208)(6,iB,1,0,"app-icon",209),L(7),T()()),r&2){let e,o=O();E(),D("routerLink",o.mode==="routineBuilder"?"/workout":"/history/list"),E(3),D("disabled",o.builderForm.invalid||o.exercisesFormArray.length===0&&!(o.mode==="routineBuilder"&&((e=o.builderForm.get("goal"))==null?null:e.value)==="rest")),E(),D("ngIf",o.isNewMode),E(),D("ngIf",!o.isNewMode),E(),fe(" ",o.mode==="routineBuilder"?o.isNewMode?"CREATE ROUTINE":"SAVE CHANGES":o.isNewMode?"LOG WORKOUT":"SAVE LOG CHANGES"," ")}}function aB(r,t){if(r&1){let e=me();k(0,"app-modal",211),ne("isOpenChange",function(){Y(e);let n=O();return Q(n.notesModalsData.set(null))}),k(1,"div",212)(2,"textarea",213),L(3),T(),k(4,"button",214),ne("click",function(){Y(e);let n=O();return Q(n.notesModalsData.set(null))}),L(5," CLOSE "),T()()()}if(r&2){let e=t.ngIf;D("isOpen",!!e)("modalTitle","Notes"),E(2),D("disabled",!0),E(),Oe(e)}}function lB(r,t){if(r&1){let e=me();k(0,"app-modal",211),Po("isOpenChange",function(n){Y(e);let i=O();return Ro(i.isSimpleModalOpen,n)||(i.isSimpleModalOpen=n),Q(n)}),se(1,"app-exercise-detail",215),T()}if(r&2){let e=O();No("isOpen",e.isSimpleModalOpen),D("modalTitle",e.exerciseDetailsName),E(),D("id",e.exerciseDetailsId)("isModal",!0)}}var hn=class r{fb=$e(qd);router=$e(ui);route=$e(Ra);workoutService=$e(Ma);trainingService=$e(Ba);exerciseService=$e(fn);unitService=$e(fi);spinnerService=$e(Qd);alertService=$e(Oa);toastService=$e(La);trackingService=$e(mi);cdr=$e(Ea);platformId=$e(Ia);setRepsInputs;expandedSetElements;myExerciseInput;isAllExpandedInViewMode=ge(!1);exerciseInfoTooltipString="Exercise details and progression";lastRoutineDuration=0;routine=void 0;builderForm;mode="routineBuilder";isEditableMode=ge(!1);isEditMode=!1;isNewMode=!0;isViewMode=!1;currentRoutineId=null;currentProgramId=null;dateParam=null;currentLogId=null;routeSub;initialRoutineIdForLogEdit=void 0;initialProgramIdForLogEdit=void 0;isCompactView=!0;subscriptions=new vS;expandedSetPath=ge(null);expandedSetPaths=[];availableSetTypes=[{value:"standard",label:"Standard"},{value:"warmup",label:"Warm-up"},{value:"superset",label:"Superset"},{value:"amrap",label:"AMRAP"},{value:"dropset",label:"Dropset"},{value:"failure",label:"To Failure"},{value:"myorep",label:"Myo-rep"},{value:"restpause",label:"Rest-Pause"},{value:"custom",label:"Custom Type"}];routineGoals=[{value:"hypertrophy",label:"Hypertrophy"},{value:"strength",label:"Strength"},{value:"tabata",label:"Tabata"},{value:"muscular endurance",label:"Muscular endurance"},{value:"cardiovascular endurance",label:"Cardiovascular endurance"},{value:"fat loss / body composition",label:"Fat loss / body composition"},{value:"mobility & flexibility",label:"Mobility & flexibility"},{value:"power / explosiveness",label:"Power / explosiveness"},{value:"speed & agility",label:"Speed & agility"},{value:"balance & coordination",label:"Balance & coordination"},{value:"skill acquisition",label:"Skill acquisition"},{value:"rehabilitation / injury prevention",label:"Rehabilitation / injury prevention"},{value:"mental health / stress relief",label:"Mental health"},{value:"general health & longevity",label:"General health & longevity"},{value:"sport-specific performance",label:"Sport-specific performance"},{value:"maintenance",label:"Maintenance"},{value:"rest",label:"Rest"},{value:"custom",label:"Custom"}];isExerciseModalOpen=!1;availableExercises=[];availableRoutines=[];availablePrograms=[];modalSearchTerm=ge("");filteredAvailableExercises=gt(()=>{let t=this.modalSearchTerm().toLowerCase();return t?(t=this.exerciseService.normalizeExerciseNameForSearch(t),this.availableExercises.filter(e=>e.name.toLowerCase().includes(t)||e.category&&e.category.toLowerCase().includes(t)||e.primaryMuscleGroup&&e.primaryMuscleGroup.toLowerCase().includes(t))):this.availableExercises});selectedExerciseIndicesForSuperset=ge([]);sanitizer=$e(Ld);sanitizedDescription="";constructor(){this.builderForm=this.fb.group({name:[""],description:[""],goal:["custom"],workoutDate:[""],startTime:[""],endTime:[""],overallNotesLog:[""],routineIdForLog:[""],programIdForLog:[""],exercises:this.fb.array([])})}ngOnInit(){vr(this.platformId)&&window.scrollTo(0,0),this.loadAvailableExercises(),this.subscriptions.add(this.workoutService.routines$.pipe(jt(1)).subscribe(i=>{this.availableRoutines=i})),this.subscriptions.add(this.trainingService.programs$.pipe(jt(1)).subscribe(i=>{this.availablePrograms=i})),this.routeSub=this.route.data.pipe(ka(i=>{this.mode=i.mode||"routineBuilder",this.isNewMode=i.isNew===!0,console.log(`Builder ngOnInit: Mode=${this.mode}, isNewMode=${this.isNewMode}`),this.currentRoutineId=this.route.snapshot.paramMap.get("routineId"),this.currentLogId=this.route.snapshot.paramMap.get("logId"),this.currentProgramId=this.route.snapshot.queryParamMap.get("programId");let s=this.route.snapshot.queryParamMap.get("date");if(this.dateParam=s?new Date(s):null,this.isViewMode=this.mode==="routineBuilder"&&!!this.currentRoutineId&&!this.isNewMode&&this.route.snapshot.routeConfig?.path?.includes("view")||!1,this.isEditMode=!this.isNewMode&&!this.isViewMode,this.isEditableMode.set(this.isEditMode||this.isNewMode),this.configureFormValidatorsAndFieldsForMode(),this.expandedSetPath.set(null),this.exercisesFormArray.clear({emitEvent:!1}),this.builderForm.reset(this.getDefaultFormValuesForMode(),{emitEvent:!1}),this.mode==="routineBuilder"){if(this.currentLogId&&this.isNewMode)return this.trackingService.getWorkoutLogById(this.currentLogId);if(this.currentRoutineId&&(this.isEditMode||this.isViewMode))return this.workoutService.getRoutineById(this.currentRoutineId)}else if(this.mode==="manualLogEntry"){if(this.currentLogId&&this.isEditMode)return this.trackingService.getWorkoutLogById(this.currentLogId);if(this.currentRoutineId&&this.isNewMode)return this.workoutService.getRoutineById(this.currentRoutineId)}return sn(null)}),gs(i=>{i?this.mode==="routineBuilder"&&this.currentLogId&&this.isNewMode?this.prefillRoutineFormFromLog(i):this.mode==="routineBuilder"?(this.routine=i,this.patchFormWithRoutineData(i)):this.mode==="manualLogEntry"&&this.isEditMode&&this.currentLogId?this.patchFormWithLogData(i):this.mode==="manualLogEntry"&&this.isNewMode&&this.currentRoutineId&&this.prefillLogFormFromRoutine(i):!this.isNewMode&&(this.currentRoutineId||this.currentLogId)&&(this.toastService.error("Data not found.",0,"Error"),this.router.navigate([this.mode==="routineBuilder"?"/workout":"/history/list"])),this.isViewMode?(this.toggleFormState(!0),this.isAllExpandedInViewMode.set(!0),this.isCompactView=!1):this.toggleFormState(!1)})).subscribe(),this.subscriptions.add(this.routeSub),this.mode==="manualLogEntry"&&this.builderForm.get("routineIdForLog")?.valueChanges.subscribe(i=>{if(this.isEditMode&&i===this.initialRoutineIdForLogEdit&&!this.builderForm.get("routineIdForLog")?.dirty||this.isEditMode&&i===this.initialProgramIdForLogEdit&&!this.builderForm.get("programIdForLog")?.dirty)return;let s=this.availableRoutines.find(a=>a.id===i);s?this.prefillLogFormFromRoutine(s,!1):(this.exercisesFormArray.clear(),this.isEditMode||this.builderForm.get("name")?.setValue("Ad-hoc Workout"))});let t=this.builderForm.get("goal")?.valueChanges.subscribe(i=>{if(this.mode==="routineBuilder"&&i==="rest"){for(;this.exercisesFormArray.length;)this.exercisesFormArray.removeAt(0);this.exercisesFormArray.clearValidators()}this.mode==="routineBuilder"&&i==="tabata"&&(this.exercisesFormArray.controls.forEach(s=>{s.get("sets").controls.forEach(l=>{l.patchValue({duration:40,restAfterSet:20,reps:null,weight:null})})}),this.toastService.info("Exercises updated to standard TABATA schema 40 work / 20 rest")),this.exercisesFormArray.updateValueAndValidity()});this.subscriptions.add(t);let e=this.builderForm.get("description")?.valueChanges.subscribe(i=>{this.updateSanitizedDescription(i||"")});this.subscriptions.add(e);let o=this.builderForm.get("sets")?.valueChanges.subscribe(i=>{this.getRoutineDuration()});this.subscriptions.add(o);let n=this.builderForm.get("rounds")?.valueChanges.subscribe(i=>{this.getRoutineDuration()});this.subscriptions.add(n),this.getLastRoutineDuration()}onSearchEnter(){let t=this.filteredAvailableExercises();if(t.length===1){let e=t[0];this.selectExerciseFromLibrary(e)}}updateSanitizedDescription(t){this.sanitizedDescription=this.sanitizer.bypassSecurityTrustHtml(t)}getDefaultFormValuesForMode(){if(this.mode==="manualLogEntry"){let t=new Date;return{name:"",description:"",goal:"custom",workoutDate:Ot(t,"yyyy-MM-dd"),startTime:Ot(t,"HH:mm"),endTime:Ot(t,"HH:mm"),overallNotesLog:"",routineIdForLog:"",programIdForLog:"",exercises:[]}}else return{name:"",description:"",goal:"",workoutDate:"",startTime:"",endTime:"",overallNotesLog:"",routineIdForLog:"",programIdForLog:"",exercises:[]}}configureFormValidatorsAndFieldsForMode(){let t=this.builderForm.get("name"),e=this.builderForm.get("goal"),o=this.builderForm.get("workoutDate"),n=this.builderForm.get("startTime"),i=this.builderForm.get("endTime");t?.clearValidators(),e?.clearValidators(),o?.clearValidators(),n?.clearValidators(),i?.clearValidators(),this.mode==="routineBuilder"?(t?.setValidators(lt.required),e?.setValidators(lt.required),this.builderForm.get("exercises")?.setValidators(lt.nullValidator)):(o?.setValidators(lt.required),n?.setValidators(lt.required),i?.setValidators(lt.required),this.builderForm.get("exercises")?.setValidators(lt.required)),this.builderForm.updateValueAndValidity({emitEvent:!1})}toggleFormState(t){t?this.builderForm.disable({emitEvent:!1}):(this.builderForm.enable({emitEvent:!1}),this.mode==="routineBuilder"?(this.builderForm.get("workoutDate")?.disable({emitEvent:!1}),this.builderForm.get("startTime")?.disable({emitEvent:!1}),this.builderForm.get("endTime")?.disable({emitEvent:!1}),this.builderForm.get("overallNotesLog")?.disable({emitEvent:!1}),this.builderForm.get("routineIdForLog")?.disable({emitEvent:!1}),this.builderForm.get("programIdForLog")?.disable({emitEvent:!1})):(this.builderForm.get("description")?.disable({emitEvent:!1}),this.builderForm.get("goal")?.disable({emitEvent:!1}),this.checkIfLogForProgram()&&(this.builderForm.get("programIdForLog")?.disable(),this.builderForm.get("workoutDate")?.disable(),this.builderForm.get("routineIdForLog")?.disable())),this.exercisesFormArray.controls.forEach(e=>{this.updateRoundsControlability(e)}))}checkIfLogForProgram(){return!!(this.currentProgramId&&this.mode==="manualLogEntry"&&this.dateParam&&this.currentRoutineId)}getLogTitleForProgramEntry(){if(this.checkIfLogForProgram()){let t=this.availablePrograms.find(o=>o.id===this.currentProgramId),e=this.availableRoutines.find(o=>o.id===this.currentRoutineId);if(t)return`Log for Program: ${t.name} - Routine: ${e?.name||"Ad-hoc"}`}return"Ad-hoc Workout"}get exercisesFormArray(){return this.builderForm.get("exercises")}getSetsFormArray(t){return t.get("sets")}addRepsListener(t){let e=this.setupRepsListener(t);this.subscriptions.add(e)}setupRepsListener(t){let e=this.getSetsFormArray(t),o=e.valueChanges.pipe(kS(300),TS(null),ly(n=>{let i=e.controls;return SS(i).pipe(ly((s,a)=>{let l=s.get("reps");return l?l.valueChanges.pipe(Dn(u=>({reps:u,setIndex:a,exerciseId:t.get("id")?.value})),IS((u,c)=>u.reps===c.reps)):sn(null)}))}),Nd(n=>n!==null)).subscribe(n=>{console.log(`Reps changed on Ex: ${n.exerciseId}, Set: ${n.setIndex} to ${n.reps}`),this.getRoutineDuration()});this.subscriptions.add(o)}loadAvailableExercises(){this.exerciseService.getExercises().pipe(jt(1)).subscribe(t=>this.availableExercises=t)}patchFormWithRoutineData(t){this.builderForm.patchValue({name:t.name,description:t.description,goal:t.goal},{emitEvent:!1}),this.updateSanitizedDescription(t.description||""),this.exercisesFormArray.clear({emitEvent:!1}),t.exercises.forEach(e=>{let o=this.createExerciseFormGroup(e,!0,!1);this.exercisesFormArray.push(o,{emitEvent:!1}),this.addRepsListener(o)}),this.builderForm.markAsPristine()}patchFormWithLogData(t){this.initialRoutineIdForLogEdit=t.routineId,this.initialProgramIdForLogEdit=t.programId,this.builderForm.patchValue({name:t.routineName||"Logged Workout",workoutDate:Ot(Yd(t.date),"yyyy-MM-dd"),startTime:Ot(new Date(t.startTime),"HH:mm"),endTime:t.endTime?Ot(new Date(t.endTime),"HH:mm"):t.startTime&&t.durationMinutes?Ot(new Date(new Date(t.startTime).getTime()+t.durationMinutes*6e4),"HH:mm"):"",overallNotesLog:t.notes||"",routineIdForLog:t.routineId||"",programIdForLog:t.programId||""},{emitEvent:!1}),this.exercisesFormArray.clear({emitEvent:!1}),t.exercises.forEach(e=>{this.exercisesFormArray.push(this.createExerciseFormGroupFromLog(e),{emitEvent:!1})}),this.toggleFormState(!1),this.expandedSetPath.set(null),this.builderForm.markAsPristine()}prefillLogFormFromRoutine(t,e=!0){let o={name:`Log: ${t.name}`,routineIdForLog:t.id};if(e){let n=new Date,i=this.dateParam?this.dateParam:n;o.programIdForLog=this.currentProgramId||null,o.workoutDate=Ot(i,"yyyy-MM-dd"),o.startTime=Ot(i,"HH:mm")}this.builderForm.patchValue(o,{emitEvent:!1}),this.exercisesFormArray.clear({emitEvent:!1}),t.exercises.forEach(n=>{this.exercisesFormArray.push(this.createExerciseFormGroup(n,!1,!0),{emitEvent:!1})}),this.builderForm.markAsDirty()}prefillRoutineFormFromLog(t){this.builderForm.patchValue({name:`${t.routineName||"Logged Workout"} - As Routine`,description:t.notes||"",goal:this.availableRoutines.find(e=>e.id===t.routineId)?.goal||"custom"},{emitEvent:!1}),this.updateSanitizedDescription(t.notes||""),this.exercisesFormArray.clear({emitEvent:!1}),t.exercises.forEach(e=>{let o=this.createRoutineExerciseFromLoggedExercise(e);this.exercisesFormArray.push(o,{emitEvent:!1})}),this.toggleFormState(!1),this.builderForm.markAsDirty()}createRoutineExerciseFromLoggedExercise(t){let e=t.sets.map(n=>{let i={id:this.workoutService.generateExerciseSetId(),reps:n.repsAchieved,weight:n.weightUsed??null,duration:n.durationPerformed,restAfterSet:n.targetRestAfterSet??60,type:n.type,notes:n.notes,tempo:n.targetTempo};return this.createSetFormGroup(i,!1)}),o=this.fb.group({id:this.workoutService.generateWorkoutExerciseId(),exerciseId:[t.exerciseId,lt.required],exerciseName:[t.exerciseName],notes:[t.notes||""],sets:this.fb.array(e),supersetId:[t.supersetId||null],supersetOrder:[t.supersetOrder??null],supersetSize:[t.supersetSize??null],rounds:[t.rounds||0,[lt.min(0)]]});return o.get("supersetId")?.valueChanges.subscribe(()=>this.updateRoundsControlability(o)),this.updateRoundsControlability(o),this.addRepsListener(o),o}createExerciseFormGroup(t,e=!1,o=!1){let n=t?.exerciseId?this.availableExercises.find(a=>a.id===t.exerciseId):null,i=t?.sets||[],s=this.fb.group({id:[t?.id||this.workoutService.generateWorkoutExerciseId()],exerciseId:[t?.exerciseId||"",lt.required],exerciseName:[t?.exerciseName||n?.name||"Select Exercise"],notes:[t?.notes||""],sets:this.fb.array(i.map(a=>this.createSetFormGroup(a,o))),supersetId:[e?t?.supersetId:null],supersetOrder:[e?t?.supersetOrder:null],supersetSize:[e?t?.supersetSize:null],rounds:[e?t?.rounds??0:0,[lt.min(0)]]});return e?(s.get("supersetId")?.valueChanges.subscribe(()=>this.updateRoundsControlability(s)),s.get("supersetOrder")?.valueChanges.subscribe(()=>this.updateRoundsControlability(s)),this.updateRoundsControlability(s)):s.get("rounds")?.enable({emitEvent:!1}),s.get("exerciseId")?.valueChanges.subscribe(a=>{let l=this.availableExercises.find(u=>u.id===a);s.get("exerciseName")?.setValue(l?.name||"Unknown Exercise",{emitEvent:!1})}),s}createExerciseFormGroupFromLog(t){return this.fb.group({id:[t.id||Wt()],exerciseId:[t.exerciseId,lt.required],exerciseName:[t.exerciseName,lt.required],notes:[t.notes||""],sets:this.fb.array(t.sets.map(e=>this.createSetFormGroup(e,!0))),supersetId:[null],supersetOrder:[null],supersetSize:[null],rounds:[0]})}createSetFormGroup(t,e=!1){let o,n,i,s,a,l,u,c,p,d,m=Wt(),f,g=new Date().toISOString();if(t)if(m=t.id||m,"repsAchieved"in t){let y=t;o=y.repsAchieved,i=y.weightUsed,a=y.durationPerformed,u=y.notes,c=y.type||"standard",f=y.plannedSetId,g=y.timestamp,p=y.targetTempo||"",d=y.restAfterSetUsed}else{let y=t;o=y.reps,n=y.reps,i=y.weight,s=y.weight,a=y.duration,l=y.duration,u=y.notes,c=y.type||"standard",p=y.tempo,d=y.restAfterSet,f=y.id}else o=null,i=null,a=null,u="",c="standard",p="",d=60;let x={id:[m],type:[c,lt.required],notes:[u||""]};return e?(x.repsAchieved=[o??null,[y=>{let b=y.parent;if(!b)return null;let I=b.get("weightUsed")?.value,N=b.get("durationPerformed")?.value;return(I==null||I==="")&&(N==null||N==="")?lt.required(y):null},lt.min(0)]],x.weightUsed=[this.unitService.convertFromKg(i,this.unitService.currentUnit())??null,[lt.min(0)]],x.durationPerformed=[a??null,[lt.min(0)]],x.plannedSetId=[f],x.timestamp=[g],x.tempo=[p],x.restAfterSet=[d]):(x.reps=[o??null,[lt.min(0)]],x.targetReps=[n??null,[lt.min(0)]],x.weight=[this.unitService.convertFromKg(i,this.unitService.currentUnit())??null,[lt.min(0)]],x.targetWeight=[this.unitService.convertFromKg(s,this.unitService.currentUnit())??null,[lt.min(0)]],x.duration=[a??null,[lt.min(0)]],x.targetDuration=[l??null,[lt.min(0)]],x.tempo=[p||""],x.restAfterSet=[d??60,[lt.required,lt.min(0)]]),this.fb.group(x)}scrollIntoVie(){setTimeout(()=>{let t=this.exercisesFormArray.length-1,e=this.expandedSetElements.get(t)?.nativeElement;e&&e.scrollIntoView({behavior:"smooth",block:"start"})},2e3)}openExerciseSelectionModal(){this.isViewMode||(this.modalSearchTerm.set(""),this.isExerciseModalOpen=!0,setTimeout(()=>{this.myExerciseInput&&this.myExerciseInput.nativeElement&&this.myExerciseInput?.nativeElement?.focus()}))}closeExerciseSelectionModal(){this.isExerciseModalOpen=!1}onModalSearchTermChange(t){let e=t.target;this.modalSearchTerm.set(e.value)}selectExerciseFromLibrary(t){let e=this.isExerciseCardioOnly(t.id),o={id:this.workoutService.generateExerciseSetId(),type:"standard",reps:e?0:8,weight:0,restAfterSet:60,duration:e?60:void 0,tempo:"",notes:""},n={id:this.workoutService.generateWorkoutExerciseId(),exerciseId:t.id,exerciseName:t.name,sets:[o],type:"standard",supersetId:null,supersetOrder:null,supersetSize:null,rounds:0},i;this.mode==="routineBuilder"?(i=this.createExerciseFormGroup(n,!0,!1),this.addRepsListener(i),this.exercisesFormArray.push(i),this.toggleSetExpansion(this.exercisesFormArray.length-1,0)):(i=this.createExerciseFormGroup(n,!1,!0),this.exercisesFormArray.push(i)),this.closeExerciseSelectionModal()}ngAfterViewInit(){this.expandedSetElements.changes.subscribe(t=>{let e=t.first;e&&this.expandedSetPath()&&setTimeout(()=>{e.nativeElement.scrollIntoView({behavior:"smooth",block:"center"})},100)})}addSet(t,e){if(this.isViewMode)return;if(t.get("supersetId")?.value){this.toastService.warning("Exercises in a superset can only have one set",4e3,"Action Blocked");return}let o=this.getSetsFormArray(t),n;if(o.length>0){let s=o.at(o.length-1).value,a=Vt({},s);if(delete a.id,this.mode==="manualLogEntry"){let l=t.get("exerciseId")?.value;n=this.createSetFormGroup({id:a.id??this.workoutService.generateExerciseSetId(),exerciseId:l,exerciseName:a.exerciseName,repsAchieved:a.repsAchieved,weightUsed:a.weightUsed,durationPerformed:a.durationPerformed,notes:a.notes,type:a.type,plannedSetId:a.plannedSetId,timestamp:new Date().toISOString(),targetReps:a.targetReps,targetWeight:a.targetWeight,targetDuration:a.targetDuration,targetTempo:a.targetTempo},!0)}else n=this.createSetFormGroup({id:a.id??this.workoutService.generateExerciseSetId(),reps:a.reps,weight:a.weight,duration:a.duration,notes:a.notes,type:a.type,tempo:a.tempo,restAfterSet:a.restAfterSet},!1)}else n=this.createSetFormGroup(void 0,this.mode==="manualLogEntry");o.push(n),this.cdr.detectChanges();let i=o.length-1;this.toggleSetExpansion(e,i)}removeSet(t,e,o,n){if(n?.stopPropagation(),this.isViewMode)return;this.getSetsFormArray(t).removeAt(o);let s=this.expandedSetPath();s&&s.exerciseIndex===e&&s.setIndex===o?this.expandedSetPath.set(null):s&&s.exerciseIndex===e&&s.setIndex>o&&this.expandedSetPath.set({exerciseIndex:e,setIndex:s.setIndex-1})}toggleSetExpansion(t,e,o){if(this.isAllExpandedInViewMode.set(!1),o?.stopPropagation(),navigator.vibrate&&navigator.vibrate(50),o&&(o.target instanceof HTMLInputElement||o.target instanceof HTMLTextAreaElement||o.target instanceof HTMLSelectElement)||this.expandedSetPath()!==null&&this.expandedSetPath()?.exerciseIndex===t&&this.expandedSetPath()?.setIndex===e)return;if(this.isViewMode&&!(this.expandedSetPath()?.exerciseIndex===t&&this.expandedSetPath()?.setIndex===e)){this.expandedSetPath.set({exerciseIndex:t,setIndex:e}),this.isCompactView=!1;return}else if(this.isViewMode){this.expandedSetPath.set(null);return}let n=this.expandedSetPath();n?.exerciseIndex===t&&n?.setIndex===e||(this.expandedSetPath.set({exerciseIndex:t,setIndex:e}),this.isCompactView=!1,this.cdr.detectChanges(),setTimeout(()=>{let i=this.expandedSetElements.first?.nativeElement;if(i){let s=i.querySelector('input[type="text"], input[type="number"]');s&&s.focus()}},50))}isSetExpanded(t,e){let o=this.expandedSetPath();return o?.exerciseIndex===t&&o?.setIndex===e}collapseExpandedSet(t=!1,e){this.isAllExpandedInViewMode.set(!1),this.expandedSetPath.set(null),this.isCompactView=t,e?.stopPropagation()}getFormErrors(t){let e={};return Object.keys(t.controls).forEach(o=>{let n=t.get(o).errors;if(n&&(e[o]=n),t.get(o)instanceof FS||t.get(o)instanceof BS){let i=this.getFormErrors(t.get(o));Object.keys(i).length>0&&(e[o]=i)}}),e}get f(){return this.builderForm.controls}toggleExerciseSelectionForSuperset(t,e){if(this.isViewMode)return;let o=e.target;this.selectedExerciseIndicesForSuperset.update(n=>{let i;return o.checked?i=n.includes(t)?n:[...n,t]:i=n.filter(s=>s!==t),i.sort((s,a)=>s-a)}),this.isCompactView}canGroupSelectedExercises(){let t=this.selectedExerciseIndicesForSuperset();if(t.length<2)return!1;let e=this.exercisesFormArray.at(t[0]).get("supersetId")?.value;for(let o=1;o<t.length;o++){let n=t[o],i=this.exercisesFormArray.at(n).get("supersetId")?.value;if(e&&i&&e!==i||!e&&i)return!1}return!0}canUngroupSelectedExercises(){let t=this.selectedExerciseIndicesForSuperset();if(t.length===0)return!1;let e=Array.from(new Set(t.map(n=>this.exercisesFormArray.at(n).get("supersetId")?.value).filter(n=>!!n)));return Array.from(new Set(e)).length===1}onExerciseDrop(t){if(!this.isViewMode&&t.previousContainer===t.container){let e=this.exercisesFormArray;jS(e.controls,t.previousIndex,t.currentIndex),e.updateValueAndValidity(),this.selectedExerciseIndicesForSuperset.set([]),this.handleSupersetIntegrityAfterDrag(t.previousIndex,t.currentIndex),this.recalculateSupersetOrders(),this.expandedSetPath.set(null)}}handleSupersetIntegrityAfterDrag(t,e){let o=new Set;if(o.add(t),o.add(e),t<e)for(let i=t;i<=e;i++)o.add(i);else for(let i=e;i<=t;i++)o.add(i);let n=new Set;o.forEach(i=>{if(i<this.exercisesFormArray.length){let a=this.exercisesFormArray.at(i).get("supersetId")?.value;a&&n.add(a)}}),n.forEach(i=>{this.exercisesFormArray.controls.forEach(s=>{let a=s;a.get("supersetId")?.value===i&&a.patchValue({supersetId:null,supersetOrder:null,supersetSize:null})})}),this.recalculateSupersetOrders()}recalculateSupersetOrders(){let t=new Map;this.exercisesFormArray.controls.forEach(e=>{let o=e,n=o.get("supersetId")?.value;n?(t.has(n)||t.set(n,[]),t.get(n).push(o)):(o.patchValue({supersetOrder:null,supersetSize:null},{emitEvent:!1}),this.updateRoundsControlability(o))}),t.forEach((e,o)=>{e.length<2?e.forEach(n=>{n.patchValue({supersetId:null,supersetOrder:null,supersetSize:null}),this.updateRoundsControlability(n)}):(e.sort((n,i)=>this.exercisesFormArray.controls.indexOf(n)-this.exercisesFormArray.controls.indexOf(i)),e.forEach((n,i)=>{n.patchValue({supersetOrder:i,supersetSize:e.length},{emitEvent:!1}),this.updateRoundsControlability(n)}))}),this.exercisesFormArray.updateValueAndValidity({emitEvent:!1})}groupSelectedAsSuperset(){if(this.isViewMode)return;let t=this.selectedExerciseIndicesForSuperset().sort((i,s)=>i-s);if(t.length<2){this.toastService.warning("Select at least two exercises",3e3,"Superset Error");return}for(let i=1;i<t.length;i++)if(t[i]!==t[i-1]+1){this.toastService.warning("Selected exercises must be next to each other to form a superset",5e3,"Superset Error");return}let e=Wt(),o=t.length,n=1;t.forEach((i,s)=>{let a=this.exercisesFormArray.at(i);a.patchValue({supersetId:e,supersetOrder:s,supersetSize:o,rounds:n,type:"superset"}),this.updateRoundsControlability(a);let l=a.get("sets");for(;l.length>1;)l.removeAt(1);l.controls.forEach(u=>{s<o-1&&u.get("restAfterSet")?.setValue(0)})}),this.selectedExerciseIndicesForSuperset.set([]),this.toastService.success("Superset created! Each exercise is now limited to one set",4e3,"Success")}ungroupSuperset(t){if(this.isViewMode)return;let o=this.exercisesFormArray.at(t).get("supersetId")?.value;o&&(this.exercisesFormArray.controls.forEach(n=>{let i=n;i.get("supersetId")?.value===o&&(i.patchValue({supersetId:null,supersetOrder:null,supersetSize:null}),this.updateRoundsControlability(i))}),this.selectedExerciseIndicesForSuperset.set([]),this.toastService.info("Superset ungrouped",3e3,"Ungrouped"))}removeExercise(t){if(this.isViewMode)return;let o=this.exercisesFormArray.at(t).get("supersetId")?.value;this.exercisesFormArray.removeAt(t),this.selectedExerciseIndicesForSuperset.set([]),o&&this.recalculateSupersetOrders(),this.toastService.info("Exercise removed",2e3),this.expandedSetPath.set(null)}errorMessage=ge(null);onSubmit(){return j(this,null,function*(){if(this.isViewMode){this.toastService.info("View mode. No changes",3e3,"View Mode");return}this.mode==="routineBuilder"&&this.recalculateSupersetOrders();let t=this.mode==="routineBuilder"&&this.builderForm.get("goal")?.value==="rest";if(this.mode==="routineBuilder"&&(this.builderForm.get("name")?.invalid||this.builderForm.get("goal")?.invalid)||this.mode==="manualLogEntry"&&(this.builderForm.get("workoutDate")?.invalid||this.builderForm.get("startTime")?.invalid||this.builderForm.get("endTime")?.invalid)){this.builderForm.markAllAsTouched(),this.toastService.error("Please fill all required details.",0,"Validation Error");return}if(!t&&this.exercisesFormArray.length===0){this.toastService.error(this.mode==="manualLogEntry"?"Log must have exercises.":"Routine needs exercises.",0,"Validation Error");return}if(this.mode==="routineBuilder"&&!t&&!this.validateSupersetIntegrity()){this.toastService.error("Invalid superset configuration.",0,"Validation Error");return}if(this.builderForm.invalid){this.toastService.error("Please correct validation errors.",0,"Validation Error"),this.builderForm.markAllAsTouched();return}let e=this.builderForm.getRawValue();this.spinnerService.show(this.isNewMode?"Saving...":"Updating...");try{if(this.mode==="routineBuilder")this.routine=this.mapFormToRoutine(e),this.isNewMode?this.routine=this.workoutService.addRoutine(this.routine):this.routine=this.workoutService.updateRoutine(this.routine),this.toastService.success(`Routine ${this.isNewMode?"created":"updated"}!`,4e3,"Success"),this.isNewMode&&this.routine&&(this.isEditMode=!0,this.isNewMode=!1,this.currentRoutineId=this.routine.id);else{let o=e.workoutDate,n=e.startTime,i=e.endTime,s=`${o}T${n}:00`,a=`${o}T${i}:00`,l;try{let d=Yd(s);if(!py(d))throw new Error("Invalid starting date/time for log entry");l=d.getTime()}catch{this.toastService.error("Invalid starting date or time format",0,"Error"),this.spinnerService.hide();return}let u;try{let d=Yd(a);if(!py(d))throw new Error("Invalid ending date/time for log entry");u=d.getTime()}catch{this.toastService.error("Invalid ending date or time format",0,"Error"),this.spinnerService.hide();return}let c=e.exercises.map(d=>({id:d.id,exerciseId:d.exerciseId,exerciseName:d.exerciseName,notes:d.notes,sets:d.sets.map(m=>({id:m.id||Wt(),exerciseName:d.exerciseName,plannedSetId:m.plannedSetId,exerciseId:d.exerciseId,type:m.type,repsAchieved:m.repsAchieved,weightUsed:this.unitService.convertToKg(m.weightUsed,this.unitService.currentUnit())??void 0,durationPerformed:m.durationPerformed,notes:m.notes,targetReps:m.targetReps,targetWeight:m.targetWeight,targetDuration:m.targetDuration,targetTempo:m.targetTempo,rpe:void 0,timestamp:m.timestamp||new Date().toISOString()})),rounds:d.rounds||0,type:d.type||"standard"})),p={date:Ot(new Date(l),"yyyy-MM-dd"),startTime:l,endTime:u,durationMinutes:Math.round(u?(u-l)/6e4:(Date.now()-l)/6e4),routineId:e.routineIdForLog||void 0,routineName:e.routineIdForLog?this.availableRoutines.find(d=>d.id===e.routineIdForLog)?.name||e.name||"Workout from Routine":e.name||"Ad-hoc Workout",programId:e.programIdForLog||void 0,notes:e.overallNotesLog,exercises:c};if(this.isEditMode&&this.currentLogId){let d=qt(Vt({},p),{id:this.currentLogId});yield this.trackingService.updateWorkoutLog(d),this.toastService.success("Log updated!",4e3,"Success"),this.router.navigate(["/history/log",this.currentLogId])}else{let d=p,m=this.trackingService.addWorkoutLog(d);this.toastService.success("Workout logged!",4e3,"Success"),this.router.navigate(["/history/log",m.id])}}this.builderForm.markAsPristine()}catch(o){console.error("Error saving:",o),this.toastService.error(`Failed to save: ${o.message||"Unknown error"}`,0,"Save Error")}finally{this.spinnerService.hide()}})}validateSupersetIntegrity(){let t=this.exercisesFormArray.value,e=new Map;for(let o of t)o.supersetId&&(e.has(o.supersetId)||e.set(o.supersetId,[]),e.get(o.supersetId).push(o));for(let[o,n]of e.entries()){if(n.length<2)return!1;let i=n.sort((a,l)=>(a.supersetOrder??1/0)-(l.supersetOrder??1/0));for(let a=0;a<i.length;a++)if(i[a].supersetOrder!==a)return!1;let s=i.map(a=>this.exercisesFormArray.controls.findIndex(l=>l.get("id")?.value===a.id));for(let a=1;a<s.length;a++)if(s[a]!==s[a-1]+1)return!1}return!0}get firstSelectedExerciseIndexForSuperset(){let t=this.selectedExerciseIndicesForSuperset();return t.length>0?t[0]:null}updateRoundsControlability(t){let e=t.get("supersetId")?.value,o=t.get("supersetOrder")?.value,n=t.get("rounds");if(this.isViewMode){n?.disable({emitEvent:!1});return}if(e&&o!==null&&o>0){n?.disable({emitEvent:!1});let i=this.exercisesFormArray.controls.find(s=>s.get("supersetId")?.value===e&&s.get("supersetOrder")?.value===0);i&&n?.setValue(i.get("rounds")?.value??1,{emitEvent:!1})}else n?.enable({emitEvent:!1})}syncSupersetRounds(t,e,o){this.isViewMode||!t||e===null||e===void 0||e<1||this.exercisesFormArray.at(o).get("supersetOrder")?.value!==0||this.exercisesFormArray.controls.forEach(i=>{let s=i;s.get("supersetId")?.value===t&&s.get("rounds")?.value!==e&&s.get("rounds")?.setValue(e,{emitEvent:!1})})}startCurrentWorkout(){this.currentRoutineId?this.router.navigate(["/workout/play",this.currentRoutineId]):this.toastService.error("Cannot start workout: Routine ID is missing",0,"Error")}enableEditMode(){this.isViewMode&&this.currentRoutineId&&(this.isViewMode=!1,this.isEditMode=!0,this.toggleFormState(!1),this.toastService.info("Edit mode enabled",3e3,"Mode Changed"))}ngOnDestroy(){this.subscriptions.unsubscribe()}getExerciseCardClasses(t,e){let o=this.mode==="routineBuilder"&&!!t.get("supersetId")?.value,n=t.get("supersetOrder")?.value??-1,i=t.get("exerciseName")?.value,s=t.get("supersetSize")?.value??0,a=this.mode==="routineBuilder"&&this.selectedExerciseIndicesForSuperset().includes(e),l=o&&n===0,u=o&&n===s-1,c=o&&!l&&!u,p=this.isCompactView,d=this.isEditMode,m=this.firstSelectedExerciseIndexForSuperset,f=t.get("sets")?.value||[],g=f.length>0&&f.every(y=>y.type==="warmup");return{"border rounded":!0,"shadow-sm":!0,"border-orange-500 dark:border-orange-400 bg-orange-50 dark:bg-orange-800/30":o,"ring-2 ring-orange-400 dark:ring-orange-300 shadow-md":a,"dark:bg-orange-800/40":o&&a,"bg-blue-800/40":g,"border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-800":!o&&!a&&!g,"rounded-b-none border-b-transparent dark:border-b-transparent":this.mode==="routineBuilder"&&o&&(l||c),"rounded-t-none border-t-transparent dark:border-t-transparent":o&&(u||c),"border-x border-t":o&&l,"mb-2":!o||o&&u,"cursor-grab":this.isEditableMode(),"cursor-pointer":!this.isEditableMode()}}hasAdjacentSupersets(t){let e=this.exercisesFormArray;if(t<0||t>=e.length)return!1;let o=e.at(t).get("supersetId")?.value;if(!o)return!1;if(t>0){let n=e.at(t-1).get("supersetId")?.value;if(n&&n===o)return!0}if(t<e.length-1){let n=e.at(t+1).get("supersetId")?.value;if(n&&n===o)return!0}return!1}isSupersetSpacing(t){if(t<=0)return!1;let e=this.exercisesFormArray.at(t).get("id")?.value,o=this.exercisesFormArray.at(t-1).get("id")?.value;return t>0&&e&&e!==o}handleTrulyCustomExerciseEntry(t=!1){return j(this,null,function*(){let e=[{name:"exerciseName",type:"text",placeholder:"Custom Exercise Name",value:"",attributes:{required:!0},label:"Custom Exercise Name"},{name:"numSets",type:"number",placeholder:"Number of Sets (e.g., 3)",value:"3",attributes:{min:"1",required:!0},label:"Number of Sets"},{name:"equipmentNeeded",type:"text",placeholder:"Equipment",value:"",attributes:{required:!1},label:"Equipment"},{name:"description",type:"textarea",placeholder:"Description",value:"",attributes:{required:!1},label:"Description"}];t&&this.toastService.error("Invalid input for custom exercise",0,"Error");let o=yield this.alertService.showPromptDialog("Add New Custom Exercise","Define exercise name and sets:",e,"Add Exercise");if(o&&o.exerciseName){let n=String(o.exerciseName).trim(),i=String(o.description).trim(),s=o.numSets?parseInt(String(o.numSets),10):3;if(!n||s<=0){this.toastService.error("Invalid input for custom exercise",0,"Error");return}let a=Array.from({length:s},()=>({id:`custom-adhoc-set-${Wt()}`,reps:8,weight:null,duration:void 0,restAfterSet:60,type:"standard",notes:""})),u={id:`custom-adhoc-ex-${n.trim().toLowerCase().replace(/\s+/g,"-")}-${Wt()}`,name:n,description:i,category:"custom",muscleGroups:[],primaryMuscleGroup:"",imageUrls:[]};this.closeExerciseSelectionModal(),this.exerciseService.addExercise(u);let c={id:this.workoutService.generateWorkoutExerciseId(),exerciseId:u.id,exerciseName:u.name,sets:a,type:"standard",supersetId:null,supersetOrder:null,supersetSize:null,rounds:0},p=this.createExerciseFormGroup(c,!0,!1);this.exercisesFormArray.push(p),this.toggleSetExpansion(this.exercisesFormArray.length-1,0),this.addRepsListener(p)}else{if(!o)return;this.handleTrulyCustomExerciseEntry(!0);return}})}getRoutineDuration(){return this.routine?(this.routine=this.mapFormToRoutine(this.builderForm.getRawValue()),this.workoutService.getEstimatedRoutineDuration(this.routine)):0}getLastRoutineDuration(){return j(this,null,function*(){if(this.lastRoutineDuration=0,this.routine){let t=yield Eo(this.trackingService.getLastPerformanceForRoutine(this.routine.id).pipe(jt(1)));t&&t.lastPerformedDate&&t.durationMinutes&&(this.lastRoutineDuration=t.durationMinutes)}})}mapFormToRoutine(t){return{id:this.currentRoutineId||Wt(),name:t.name,description:t.description,goal:t.goal,exercises:t.goal==="rest"?[]:t.exercises.map(o=>qt(Vt({},o),{id:o.id||Wt(),sets:o.sets.map(n=>qt(Vt({},n),{weight:this.unitService.convertToKg(n.weight,this.unitService.currentUnit())??null}))})),isFavourite:this.routine?.isFavourite,isHidden:this.routine?.isHidden,lastPerformed:this.routine?.lastPerformed||""}}getRoutineDropdownActionItems(t,e){let o="rounded text-left px-3 py-1.5 sm:px-4 sm:py-2 font-medium text-gray-600 dark:text-gray-300 hover:bg-primary flex items-center text-sm hover:text-white dark:hover:text-gray-100 dark:hover:text-white",n="rounded text-left px-3 py-1.5 sm:px-4 sm:py-2 font-medium text-gray-600 dark:text-gray-300 hover:bg-red-600 flex items-center text-sm hover:text-gray-100 hover:animate-pulse",i={label:"EDIT",actionKey:"edit",iconSvg:'<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" d="m16.862 4.487 1.687-1.688a1.875 1.875 0 1 1 2.652 2.652L10.582 16.07a4.5 4.5 0 0 1-1.897 1.13L6 18l.8-2.685a4.5 4.5 0 0 1 1.13-1.897l8.932-8.931Zm0 0L19.5 7.125M18 14v4.75A2.25 2.25 0 0 1 15.75 21H5.25A2.25 2.25 0 0 1 3 18.75V8.25A2.25 2.25 0 0 1 5.25 6H10" /></svg>',iconClass:"w-8 h-8 mr-2",buttonClass:(e==="dropdown"?"w-full ":"")+o,data:{routineId:t}},s=this.routine,a=[{label:"START",actionKey:"start",iconSvg:'<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" d="M5.25 5.653c0-.856.917-1.398 1.667-.986l11.54 6.347a1.125 1.125 0 0 1 0 1.972l-11.54 6.347a1.125 1.125 0 0 1-1.667-.986V5.653Z" /></svg>',iconClass:"w-8 h-8 mr-2",buttonClass:(e==="dropdown"?"w-full ":"")+o,data:{routineId:t}},{label:"CLONE",actionKey:"clone",iconSvg:'<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" fill="none"><path d="M 5 3 H 16 A 2 2 0 0 1 18 5 V 16 A 2 2 0 0 1 16 18 H 5 A 2 2 0 0 1 3 16 V 5 A 2 2 0 0 1 5 3 Z M 8 6 H 19 A 2 2 0 0 1 21 8 V 19 A 2 2 0 0 1 19 21 H 8 A 2 2 0 0 1 6 19 V 8 A 2 2 0 0 1 8 6 Z" /></svg>',iconClass:"w-8 h-8 mr-2",buttonClass:(e==="dropdown"?"w-full ":"")+o,data:{routineId:t}}];return this.isViewMode&&a.push(i),a}handleActionMenuItemClick(t,e){let o=this.routine?.id;if(o){switch(t.actionKey){case"start":this.startCurrentWorkout();break;case"edit":this.router.navigate(["/workout/routine/edit",o]);break;case"clone":this.cloneAndEditRoutine(o);break}this.activeRoutineIdActions.set(null)}}activeRoutineIdActions=ge(null);toggleActions(t,e){e.stopPropagation(),this.activeRoutineIdActions.update(o=>o===t?null:t)}areActionsVisible(t){return this.activeRoutineIdActions()===t}onCloseActionMenu(){this.activeRoutineIdActions.set(null)}cloneAndEditRoutine(t,e){return j(this,null,function*(){let o=this.routine;if(!o){this.toastService.error("Routine not found for cloning",0,"Error");return}let n=qt(Vt({},structuredClone(o)),{name:o.name+" (Copy)",createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()});try{this.spinnerService.show(),n=yield this.workoutService.addRoutine(n),this.toastService.success(`Routine "${n.name}" cloned successfully.`,3e3,"Routine Cloned"),this.router.navigate(["/workout/routine/edit",n.id])}catch(i){console.error("Error during routine cloning:",i),this.toastService.error("Failed to clone routine",0,"Clone Failed")}finally{this.spinnerService.hide()}})}checkIfTimedExercise(t){let e=t?.getRawValue();return e?.sets.some(o=>o.targetDuration)||e?.sets.some(o=>o.duration)}checkIfWeightedExercise(t){let e=t?.getRawValue();return e?.sets.some(o=>o.targetWeight)||e?.sets.some(o=>o.weight)}getSetReps(t){let e=t?.getRawValue();if(!e||!e.sets)return"";let o;this.currentLogId&&!this.isNewMode?o=e.sets.map(s=>s.repsAchieved):o=e.sets.map(s=>s.reps);let n=o.filter(i=>i!=null&&i!==void 0);return n.length>0?n.join(" - "):""}getSetWeightsUsed(t){return this.currentLogId?t?.getRawValue()?.sets.map(o=>o.weightUsed).join(" - "):t?.getRawValue()?.sets.map(o=>o.weight).join(" - ")}getSetDurationPerformed(t){return this.currentLogId?t?.getRawValue()?.sets.map(o=>o.durationPerformed).join(" - "):t?.getRawValue()?.sets.map(o=>o.duration).join(" - ")}getIconPath(t){if(!t)return sn(this.exerciseService.getIconPath("default-exercise"));let e=this.routine?.exercises.find(o=>o.exerciseId===t);return e?this.exerciseService.getExerciseById(e.exerciseId).pipe(Dn(o=>{if(o){let n=this.exerciseService.determineExerciseIcon(o,o.name);return this.exerciseService.getIconPath(n)}else return this.exerciseService.getIconPath("default-exercise")})):sn(this.exerciseService.getIconPath("default-exercise"))}checkTextClass(t,e){if(!t)return"text-gray-700 dark:text-gray-300";let o=0,n=0;return e==="reps"?(o=t.repsAchieved??0,n=t.targetReps??0):e==="duration"?(o=t.durationPerformed??0,n=t.targetDuration??0):e==="weight"&&(o=t.weightUsed??0,n=t.targetWeight??0),o>n?"text-green-500 dark:text-green-400":o<n?"text-red-500 dark:text-red-400":"text-gray-800 dark:text-white"}notesModalsData=ge(null);showNotesModal(t){this.notesModalsData.set(t)}shouldShowExpandedExercise(t){return this.isCompactView?!1:this.isAllExpandedInViewMode()?!0:this.expandedSetPath()?.exerciseIndex===t}isExerciseDetailModalOpen=ge(!1);isSimpleModalOpen=ge(!1);exerciseDetailsId="";exerciseDetailsName="";openModal(t){this.exerciseDetailsId=t.exerciseId,this.exerciseDetailsName=t.exerciseName||"Exercise details",this.isSimpleModalOpen.set(!0)}isExerciseCardioOnlyCtrl(t){let e=t.value?.exerciseId;return this.isExerciseCardioOnly(e)}isExerciseCardioOnly(t){if(!t)return!1;let e=this.availableExercises.find(o=>o.id===t);return e&&e.category?e.category==="cardio":!1}handleEndTimeChange(){let t=this.builderForm.get("workoutDate"),e=this.builderForm.get("startTime"),o=this.builderForm.get("endTime");if(!t||!e||!o)return;let n=t.value,i=e.value,s=o.value;if(!n||!i||!s)return;let a=new Date(`${n}T${i}:00`),l=new Date(`${n}T${s}:00`);if(l.getTime()<a.getTime()){l.setDate(l.getDate()+1);let u=Ot(l,"yyyy-MM-dd");t.setValue(u,{emitEvent:!1}),this.toastService.info("End time was before start time, assuming next day")}}static \u0275fac=function(e){return new(e||r)};static \u0275cmp=zr({type:r,selectors:[["app-workout-builder"]],viewQuery:function(e,o){if(e&1&&(Hr(k4,5),Hr(I4,5),Hr(T4,5)),e&2){let n;Kr(n=qr())&&(o.myExerciseInput=n.first),Kr(n=qr())&&(o.setRepsInputs=n),Kr(n=qr())&&(o.expandedSetElements=n)}},features:[Dd([dn])],decls:20,vars:15,consts:[["expandedSetElement",""],["class","my-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded-md dark:bg-red-900/30 dark:border-red-600 dark:text-red-300",4,"ngIf"],[1,"container","mx-auto","p-2","sm:p-4"],[1,"flex","items-center","justify-between","p-2"],[1,"flex","justify-between","items-center"],[1,"text-gray-600","dark:text-gray-300","hover:text-primary","dark:hover:text-primary-light","p-2","-ml-1",3,"routerLink"],["fill","none","stroke","currentColor","viewBox","0 0 24 24","xmlns","http://www.w3.org/2000/svg",1,"w-6","h-6"],["stroke-linecap","round","stroke-linejoin","round","stroke-width","2","d","M15 19l-7-7 7-7"],[1,"w-10","h-10"],[1,"flex","items-center","space-x-2","flex-shrink-0"],["class","",4,"ngIf"],[1,"space-y-6","mb-6","p-1","bg-white","dark:bg-gray-700","rounded-md","shadow-xl","overflow-hidden",3,"ngSubmit","formGroup"],[1,"space-y-2","p-2","rounded-md","shadow-sm","dark:shadow-none"],[4,"ngIf"],["class","px-2",4,"ngIf"],["class","p-4 bg-blue-50 dark:bg-blue-900/30 rounded-md text-center",4,"ngIf"],["class","py-2 px-1 flex justify-end space-x-3",4,"ngIf"],["title","ADD EXERCISE TO ROUTINE","itemIconName","plus-circle","itemIconClass","text-primary dark:text-primary-light",3,"searchTermChange","exerciseSelected","createCustomClicked","close","isOpen","searchTerm","exercises","showCreateCustomLink"],[3,"isOpen","modalTitle","isOpenChange",4,"ngIf"],[1,"my-4","p-3","bg-red-100","border","border-red-400","text-red-700","rounded-md","dark:bg-red-900/30","dark:border-red-600","dark:text-red-300"],[1,""],[1,"relative"],[1,"p-1.5","text-gray-500","dark:text-gray-400","hover:bg-gray-200","dark:hover:bg-gray-700","rounded-full","focus:outline-none",3,"click"],["xmlns","http://www.w3.org/2000/svg","fill","none","viewBox","0 0 24 24","stroke","currentColor","stroke-width","2",1,"h-5","w-5"],["stroke-linecap","round","stroke-linejoin","round","d","M12 5v.01M12 12v.01M12 19v.01M12 6a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2z"],["displayMode","dropdown",3,"items","isVisible","itemClick","closeMenu",4,"ngIf"],["displayMode","dropdown",3,"itemClick","closeMenu","items","isVisible"],["class","text-m text-gray-500 dark:text-gray-300",4,"ngIf"],["class","text-sm text-gray-500 dark:text-gray-300 italic flex gap-1 mb-2",4,"ngIf"],["class","text-sm text-gray-500 dark:text-gray-300 flex gap-1",4,"ngIf"],[1,"block","text-xl","font-black","text-gray-700","dark:text-gray-300"],["for","routineName",1,"block","text-m","font-medium","text-gray-700","dark:text-gray-300"],["type","text","id","routineName","formControlName","name","placeholder","Routine name",1,"mt-1","block","w-full","p-2","border","rounded-md","shadow-sm","focus:ring-primary","focus:border-primary","dark:bg-gray-600","dark:border-gray-500","dark:text-gray-200",3,"ngClass"],["class","text-red-500 dark:text-red-400 text-xs mt-1",4,"ngIf"],[1,"text-red-500","dark:text-red-400","text-xs","mt-1"],[1,"mt-1","block","w-full","shadow-sm","dark:shadow-none","dark:text-gray-200",3,"innerHTML"],["for","description",1,"block","text-m","font-medium","text-gray-700","dark:text-gray-300"],["id","description","formControlName","description","rows","3","placeholder","Description (optional)",1,"mt-1","block","w-full","p-2","border","border-gray-300","dark:border-gray-500","rounded-md","shadow-sm","dark:bg-gray-600","dark:text-gray-200"],[1,"block","text-m","text-gray-700","dark:text-gray-300"],[1,"font-medium"],["for","goal",1,"block","text-m","font-medium","text-gray-700","dark:text-gray-300"],["id","goal","formControlName","goal",1,"mt-1","block","w-full","p-2","border","border-gray-300","dark:border-gray-500","rounded-md","shadow-sm","dark:bg-gray-600","dark:text-gray-200"],["value",""],[3,"value",4,"ngFor","ngForOf"],[3,"value"],[1,"text-m","text-gray-500","dark:text-gray-300"],[1,"text-sm","text-gray-500","dark:text-gray-300","italic","flex","gap-1","mb-2"],[1,"text-sm","text-gray-500","dark:text-gray-300","flex","gap-1"],["class","flex items-center justify-between py-2",4,"ngIf"],[1,"grid","grid-cols-1","md:grid-cols-3","gap-4"],["for","workoutDate",1,"block","text-sm","font-medium","text-gray-700","dark:text-gray-300"],["type","date","id","workoutDate","formControlName","workoutDate",1,"mt-1","block","w-full","p-2","border","rounded-md","shadow-sm","dark:bg-gray-600","dark:border-gray-500","dark:text-gray-200",3,"ngClass"],["for","startTime",1,"block","text-sm","font-medium","text-gray-700","dark:text-gray-300"],["type","time","id","startTime","formControlName","startTime",1,"mt-1","block","w-full","p-2","border","rounded-md","shadow-sm","dark:bg-gray-600","dark:border-gray-500","dark:text-gray-200",3,"ngClass"],["for","endTime",1,"block","text-sm","font-medium","text-gray-700","dark:text-gray-300"],["type","time","id","endTime","formControlName","endTime",1,"mt-1","block","w-full","p-2","border","rounded-md","shadow-sm","dark:bg-gray-600","dark:border-gray-500","dark:text-gray-200",3,"change","ngClass"],["for","logWorkoutName",1,"block","text-sm","font-medium","text-gray-700","dark:text-gray-300"],["type","text","id","logWorkoutName","formControlName","name","placeholder","e.g., Morning Chest Session",1,"mt-1","block","w-full","p-2","border","border-gray-300","dark:border-gray-500","rounded-md","shadow-sm","dark:bg-gray-600","dark:text-gray-200"],["for","routineIdForLog",1,"block","text-sm","font-medium","text-gray-700","dark:text-gray-300"],["id","routineIdForLog","formControlName","routineIdForLog",1,"mt-1","block","w-full","p-2","border","border-gray-300","dark:border-gray-500","rounded-md","shadow-sm","dark:bg-gray-600","dark:text-gray-200"],["for","programIdForLog",1,"block","text-sm","font-medium","text-gray-700","dark:text-gray-300"],["id","programIdForLog","formControlName","programIdForLog",1,"mt-1","block","w-full","p-2","border","border-gray-300","dark:border-gray-500","rounded-md","shadow-sm","dark:bg-gray-600","dark:text-gray-200"],["for","overallNotesLog",1,"block","text-sm","font-medium","text-gray-700","dark:text-gray-300"],["id","overallNotesLog","formControlName","overallNotesLog","rows","2",1,"mt-1","block","w-full","p-2","border","border-gray-300","dark:border-gray-500","rounded-md","shadow-sm","dark:bg-gray-600","dark:text-gray-200"],[1,"flex","items-center","justify-between","py-2"],[1,"text-2xl","font-bold","text-gray-800","dark:text-gray-200"],[1,"px-2"],[1,"flex","justify-between","items-center","mb-4"],[1,"text-xl","font-semibold","text-gray-700","dark:text-gray-300"],["type","button","class","flex items-center bg-green-500 hover:enabled:bg-green-600 text-white text-m font-medium py-2 px-3 rounded-md transition-all duration-150 ease-in-out disabled:opacity-50 disabled:cursor-not-allowed",3,"click",4,"ngIf"],["cdkDropList","","formArrayName","exercises","class","exercise-list-container space-y-4",3,"cdkDropListData","cdkDropListDisabled","cdkDropListDropped",4,"ngIf"],["class","text-center py-6 text-gray-500 dark:text-gray-400 border border-dashed dark:border-gray-700 rounded-md mt-4",4,"ngIf"],["class","text-center py-4 text-gray-500 dark:text-gray-400",4,"ngIf"],["class","flex mt-6 justify-center",4,"ngIf"],["type","button",1,"flex","items-center","bg-green-500","hover:enabled:bg-green-600","text-white","text-m","font-medium","py-2","px-3","rounded-md","transition-all","duration-150","ease-in-out","disabled:opacity-50","disabled:cursor-not-allowed",3,"click"],["name","create",1,"h-5","w-5","mr-1"],["cdkDropList","","formArrayName","exercises",1,"exercise-list-container","space-y-4",3,"cdkDropListDropped","cdkDropListData","cdkDropListDisabled"],[4,"ngFor","ngForOf"],["appClickOutside","",1,"relative","group","exercise-card-wrapper",3,"click","clickOutside","title","ngClass"],["class","absolute left-1/2 -translate-x-1/2 z-20","style","top: -1.25rem;",4,"ngIf"],["cdkDrag","","appLongPressDrag","","longPressClass","is-long-pressing",1,"exercise-item","relative","transition-all",3,"cdkDragDisabled","longPressEnabled","longPressDelay","cdkDragData","formGroupName","cdkDragStartDelay","ngClass"],[1,"flex","items-center","space-x-1",3,"ngClass"],["class","p-1 text-gray-400 hover:text-gray-600 dark:text-gray-500 dark:hover:text-gray-300 flex-shrink-0","title","Drag to reorder",4,"ngIf"],["type","checkbox","title","Select the exercise for the Superset","class","h-6 w-6 text-orange-600 border-gray-300 dark:border-gray-600 rounded focus:ring-orange-500 flex-shrink-0 disabled:opacity-50",3,"id","checked","disabled","change",4,"ngIf"],["class","flex-grow min-w-0 py-2 px-0",4,"ngIf"],["class","flex-shrink-0 ml-auto",4,"ngIf"],["class","p-2",4,"ngIf"],[1,"absolute","left-1/2","-translate-x-1/2","z-20",2,"top","-1.25rem"],["type","button","class","bg-orange-600 hover:bg-orange-700 text-white text-xs font-semibold py-1.5 px-3 rounded-full shadow-lg",3,"disabled","click",4,"ngIf"],["type","button","class","bg-violet-600 hover:bg-violet-700 text-white text-xs font-semibold py-1.5 px-3 rounded-full shadow-lg",3,"disabled","click",4,"ngIf"],["type","button",1,"bg-orange-600","hover:bg-orange-700","text-white","text-xs","font-semibold","py-1.5","px-3","rounded-full","shadow-lg",3,"click","disabled"],["type","button",1,"bg-violet-600","hover:bg-violet-700","text-white","text-xs","font-semibold","py-1.5","px-3","rounded-full","shadow-lg",3,"click","disabled"],["title","Drag to reorder",1,"p-1","text-gray-400","hover:text-gray-600","dark:text-gray-500","dark:hover:text-gray-300","flex-shrink-0"],["xmlns","http://www.w3.org/2000/svg","viewBox","0 0 24 24",1,"w-5","h-5"],["d","M 7 17 L 7 3 M 4 6 L 7 3 L 10 6 M 17 7 L 17 21 M 14 18 L 17 21 L 20 18","fill","none","stroke","currentColor","stroke-width","2","stroke-linecap","round","stroke-linejoin","round"],["type","checkbox","title","Select the exercise for the Superset",1,"h-6","w-6","text-orange-600","border-gray-300","dark:border-gray-600","rounded","focus:ring-orange-500","flex-shrink-0","disabled:opacity-50",3,"change","id","checked","disabled"],[1,"flex-grow","min-w-0","py-2","px-0"],["class","text-md font-medium text-orange-600 dark:text-orange-400 mt-0.5",4,"ngIf"],["class","flex items-center text-s text-gray-500 dark:text-gray-400 mt-0.5 gap-4 pl-2",4,"ngIf"],[1,"text-md","font-medium","text-orange-600","dark:text-orange-400","mt-0.5"],[1,"flex","items-center","text-s","text-gray-500","dark:text-gray-400","mt-0.5","gap-4","pl-2"],["alt","Exercise Icon",1,"w-6","h-6","sm:w-8","sm:h-8","object-contain",3,"src"],[1,"min-w-0"],[1,"flex"],[1,"font-semibold","text-gray-800","dark:text-gray-100","truncate",3,"title"],["name","info","class","h-4 w-4 text-gray-400 dark:text-gray-300 cursor-help","width","20","height","20","viewBox","0 0 20 20","xmlns","http://www.w3.org/2000/svg","appPress","",3,"appTooltip","shortPress",4,"ngIf"],[1,"text-xs","text-gray-500","dark:text-gray-400","truncate"],["name","info","width","20","height","20","viewBox","0 0 20 20","xmlns","http://www.w3.org/2000/svg","appPress","",1,"h-4","w-4","text-gray-400","dark:text-gray-300","cursor-help",3,"shortPress","appTooltip"],[1,"flex-shrink-0","ml-auto"],["type","button","title","Remove Exercise",1,"p-1","text-red-500","hover:text-red-700","dark:text-red-400","dark:hover:text-red-300","rounded-full","hover:bg-red-100","dark:hover:bg-red-900/30","disabled:opacity-50",3,"click"],["xmlns","http://www.w3.org/2000/svg","viewBox","0 0 16 16",1,"w-4","h-4"],["width","16","height","16","rx","3","ry","3","fill","red"],["fill","#ffffff","fill-rule","evenodd","clip-rule","evenodd","d","M4.22 4.22a.75.75 0 0 1 1.06 0L8 7.94l2.72-2.72a.75.75 0 1 1 1.06 1.06L9.06 9l2.72 2.72a.75.75 0 1 1-1.06 1.06L8 10.06 5.28 12.78a.75.75 0 0 1-1.06-1.06L6.94 9 4.22 6.28a.75.75 0 0 1 0-1.06z"],[1,"p-2"],[1,"flex","flex-col","sm:flex-row","justify-between","items-start","sm:items-center","pb-2","pt-1","sm:pt-0"],[1,"flex-grow"],["class","text-xs text-orange-600 dark:text-orange-400 font-normal block mb-1",4,"ngIf"],[1,"flex","items-center"],["alt","Exercise Icon",1,"w-6","h-6","sm:w-8","sm:h-8","object-contain","mr-3","flex-shrink-0",3,"src"],[1,"text-lg","font-semibold","text-gray-800","dark:text-gray-100"],[1,"flex","flex-col","items-start","sm:items-end","space-y-1","flex-shrink-0","w-full","sm:w-auto","mt-2","sm:mt-0"],["class","flex items-center space-x-1",4,"ngIf"],["type","button","class","flex items-center text-xs text-red-600 bg-red-200 hover:text-red-700 dark:text-red-400 dark:hover:text-red-300 font-medium py-1 px-2 rounded-md hover:enabled:bg-red-100 dark:enabled:hover:bg-red-900/50 disabled:opacity-50",3,"click",4,"ngIf"],["type","button","class","flex bg-violet-200 items-center text-xs text-violet-600 hover:text-violet-700 dark:text-violet-400 dark:hover:text-violet-300 font-medium py-1 px-2 rounded-md hover:bg-violet-100 dark:hover:bg-violet-900/50 disabled:opacity-50",3,"disabled","click",4,"ngIf"],["class","grid gap-x-4 gap-y-2 px-2 py-2 bg-white rounded-md dark:bg-gray-800 text-gray-900 dark:text-white",3,"ngClass",4,"ngIf"],["class","space-y-1",4,"ngIf"],[1,"text-xs","text-orange-600","dark:text-orange-400","font-normal","block","mb-1"],[1,"flex","items-center","space-x-1"],[1,"text-xs","font-medium","text-gray-600","dark:text-gray-400","whitespace-nowrap",3,"for"],["type","number","formControlName","rounds","min","1",1,"w-16","p-1","text-m","border-gray-300","dark:border-gray-500","border-2","rounded-md","focus:ring-primary","focus:border-primary","dark:bg-gray-600","dark:text-gray-200","disabled:opacity-50","disabled:bg-gray-300","dark:disabled:bg-gray-500",3,"change","id","readonly"],["type","button",1,"flex","items-center","text-xs","text-red-600","bg-red-200","hover:text-red-700","dark:text-red-400","dark:hover:text-red-300","font-medium","py-1","px-2","rounded-md","hover:enabled:bg-red-100","dark:enabled:hover:bg-red-900/50","disabled:opacity-50",3,"click"],["xmlns","http://www.w3.org/2000/svg","viewBox","0 0 16 16",1,"w-4","h-4","mr-2"],["type","button",1,"flex","bg-violet-200","items-center","text-xs","text-violet-600","hover:text-violet-700","dark:text-violet-400","dark:hover:text-violet-300","font-medium","py-1","px-2","rounded-md","hover:bg-violet-100","dark:hover:bg-violet-900/50","disabled:opacity-50",3,"click","disabled"],["xmlns","http://www.w3.org/2000/svg","fill","none","viewBox","0 0 24 24","stroke-width","1.5","stroke","currentColor",1,"w-4","h-4","mr-1"],["stroke-linecap","round","stroke-linejoin","round","d","M3.75 3.75v4.5m0-4.5h4.5m-4.5 0L9 9M3.75 20.25v-4.5m0 4.5h4.5m-4.5 0L9 15M20.25 3.75v4.5m0-4.5h-4.5m4.5 0L15 9m5.25 11.25v-4.5m0 4.5h-4.5m4.5 0L15 15"],[1,"block","text-s","font-medium","text-gray-600","dark:text-gray-400","mb-0.5",3,"for"],["formControlName","notes","rows","1","appAutoGrow","",1,"mt-0.5","block","w-full","p-1.5","text-sm","border-gray-300","dark:border-gray-500","rounded-md","shadow-sm","dark:bg-gray-600","dark:text-gray-200",3,"id","readonly"],[1,"grid","gap-x-4","gap-y-2","px-2","py-2","bg-white","rounded-md","dark:bg-gray-800","text-gray-900","dark:text-white",3,"ngClass"],[1,"font-bold","text-xs","uppercase","text-gray-500","dark:text-gray-400"],["class","font-bold text-xs uppercase text-gray-500 dark:text-gray-400",4,"ngIf"],[1,"cursor-pointer"],["xmlns","http://www.w3.org/2000/svg","class","h-8 w-8 text-gray-500 dark:text-white","fill","none","viewBox","0 0 24 24","stroke","currentColor","stroke-width","2",3,"click",4,"ngIf"],["class","text-gray-500 dark:text-white",4,"ngIf"],["class","col-span-full h-px bg-gray-200 dark:bg-gray-700",4,"ngIf"],["xmlns","http://www.w3.org/2000/svg","fill","none","viewBox","0 0 24 24","stroke","currentColor","stroke-width","2",1,"h-8","w-8","text-gray-500","dark:text-white",3,"click"],["stroke-linecap","round","stroke-linejoin","round","d","M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-3 7h3m-3 4h3m-6-4h.01M9 16h.01"],[1,"text-gray-500","dark:text-white"],[1,"col-span-full","h-px","bg-gray-200","dark:bg-gray-700"],[1,"space-y-1"],[1,"flex","justify-between","items-center","py-1"],[1,"text-m","font-semibold","text-gray-700","dark:text-gray-300"],["type","button","class","text-xs bg-blue-200 text-blue-600 hover:text-blue-700 dark:text-blue-400 dark:hover:text-blue-300 font-medium py-0.5 px-1.5 rounded-md hover:enabled:bg-blue-100 dark:hover:bg-blue-900/50",3,"click",4,"ngIf"],["formArrayName","sets",1,"space-y-1.5"],["class","grid grid-cols-12 gap-x-1 py-1 px-1.5 text-xs font-medium text-gray-500 dark:text-gray-400 border-b dark:border-gray-600",4,"ngIf"],[3,"formGroupName",4,"ngFor","ngForOf"],["type","button",1,"text-xs","bg-blue-200","text-blue-600","hover:text-blue-700","dark:text-blue-400","dark:hover:text-blue-300","font-medium","py-0.5","px-1.5","rounded-md","hover:enabled:bg-blue-100","dark:hover:bg-blue-900/50",3,"click"],[1,"grid","grid-cols-12","gap-x-1","py-1","px-1.5","text-xs","font-medium","text-gray-500","dark:text-gray-400","border-b","dark:border-gray-600"],[1,"col-span-1","text-center"],[1,"col-span-2","text-center","truncate"],[1,"col-span-2","text-center"],[1,"col-span-1"],[3,"formGroupName"],["class","grid grid-cols-12 gap-x-1 items-center py-1.5 px-1.5 rounded-md hover:bg-gray-100 dark:hover:bg-gray-800/60 cursor-pointer border dark:border-gray-700 dark:text-white",3,"ngClass","click",4,"ngIf"],["class","p-1 rounded-md shadow-inner space-y-2",3,"ngClass",4,"ngIf"],[1,"grid","grid-cols-12","gap-x-1","items-center","py-1.5","px-1.5","rounded-md","hover:bg-gray-100","dark:hover:bg-gray-800/60","cursor-pointer","border","dark:border-gray-700","dark:text-white",3,"click","ngClass"],[1,"col-span-1","text-s","text-center","font-medium"],[1,"col-span-2","text-xs","text-center","truncate",3,"title"],[1,"col-span-2","text-s","text-center"],[1,"col-span-1","text-s","text-center"],[1,"col-span-2","text-s","text-center","truncate",3,"title"],[1,"col-span-1","text-s","text-center","truncate",3,"title"],["class","col-span-1 flex items-center justify-end",4,"ngIf"],["class","col-span-1",4,"ngIf"],[1,"col-span-1","flex","items-center","justify-end"],["type","button","title","Remove Set",1,"flex","items-center","text-red-500","hover:text-red-600","dark:text-red-400","dark:hover:text-red-300","p-0.5","rounded-full","hover:bg-red-100","dark:hover:bg-red-900/30","disabled:opacity-50",3,"click"],[1,"p-1","rounded-md","shadow-inner","space-y-2",3,"ngClass"],[1,"grid","grid-cols-2","sm:grid-cols-3","gap-x-3","gap-y-2","items-end"],[1,"col-span-full","sm:col-span-1"],[1,"block","text-s","font-medium","text-gray-600","dark:text-gray-400",3,"for"],["formControlName","type",1,"mt-0.5","w-full","p-1.5","text-m","border-gray-300","dark:border-gray-500","rounded-md","dark:bg-gray-600","dark:text-gray-200","disabled:opacity-70","disabled:cursor-not-allowed",3,"id","disabled"],["type","number","placeholder","Weight",1,"mt-0.5","w-full","p-1.5","text-m","border-gray-300","dark:border-gray-500","rounded-md","dark:bg-gray-600","dark:text-gray-200","disabled:opacity-70","disabled:cursor-not-allowed",3,"id","formControlName","readonly"],["type","number","placeholder","Secs",1,"mt-0.5","w-full","p-1.5","text-m","border-gray-300","dark:border-gray-500","rounded-md","dark:bg-gray-600","dark:text-gray-200","disabled:opacity-70","disabled:cursor-not-allowed",3,"id","formControlName","readonly"],["type","number","formControlName","restAfterSet","placeholder","Rest",1,"mt-0.5","w-full","p-1.5","text-m","border-gray-300","dark:border-gray-500","rounded-md","dark:bg-gray-600","dark:text-gray-200","disabled:opacity-70","disabled:cursor-not-allowed",3,"id","readonly"],["class","col-span-full",4,"ngIf"],[1,"mt-2","text-right"],["type","button","title","Collapse set",1,"bg-blue-200","text-xs","text-blue-600","hover:text-blue-700","dark:text-blue-400","dark:hover:text-blue-300","font-medium","py-1","px-2","rounded-md",3,"click"],["xmlns","http://www.w3.org/2000/svg","viewBox","0 0 24 24","width","24","height","24"],["d","M 12 5 L 12 10 M 9 7 L 12 10 L 15 7 M 12 19 L 12 14 M 9 17 L 12 14 L 15 17","fill","none","stroke","currentColor","stroke-width","1.5","stroke-linecap","round","stroke-linejoin","round"],["type","number","placeholder","Reps",1,"mt-0.5","w-full","p-1.5","text-m","border-gray-300","dark:border-gray-500","rounded-md","dark:bg-gray-600","dark:text-gray-200","disabled:opacity-70","disabled:cursor-not-allowed",3,"id","formControlName","readonly"],["type","text","formControlName","tempo","placeholder","e.g. 2010",1,"mt-0.5","w-full","p-1.5","text-m","border-gray-300","dark:border-gray-500","rounded-md","dark:bg-gray-600","dark:text-gray-200","disabled:opacity-70","disabled:cursor-not-allowed",3,"id","readonly"],[1,"col-span-full"],["type","text","formControlName","notes","placeholder","e.g. Good form",1,"mt-0.5","w-full","p-1.5","text-m","border-gray-300","dark:border-gray-500","rounded-md","dark:bg-gray-600","dark:text-gray-200","disabled:opacity-70","disabled:cursor-not-allowed",3,"id","readonly"],[1,"text-center","py-6","text-gray-500","dark:text-gray-400","border","border-dashed","dark:border-gray-700","rounded-md","mt-4"],[1,"mb-2"],["type","button",1,"bg-green-500","hover:bg-green-600","text-white","text-m","font-medium","py-2","px-3","rounded-md",3,"click"],[1,"text-center","py-4","text-gray-500","dark:text-gray-400"],[1,"flex","mt-6","justify-center"],["type","button",1,"flex","items-center","justify-center","bg-green-500","hover:bg-green-600","text-white","font-semibold","py-2","px-6","rounded-md","shadow-md","hover:shadow-lg","transition-all","duration-300","focus:outline-none","focus:ring-2","focus:ring-green-400","focus:ring-opacity-75",3,"click"],["xmlns","http://www.w3.org/2000/svg","width","20","height","20","viewBox","0 0 24 24","fill","none","stroke","currentColor","stroke-width","2","stroke-linecap","round","stroke-linejoin","round",1,"mr-2"],["cx","12","cy","12","r","10"],["x1","12","y1","8","x2","12","y2","16"],["x1","8","y1","12","x2","16","y2","12"],[1,"p-4","bg-blue-50","dark:bg-blue-900/30","rounded-md","text-center"],[1,"text-m","text-blue-700","dark:text-blue-300"],[1,"py-2","px-1","flex","justify-end","space-x-3"],["type","button",1,"flex","items-center","px-4","py-2","border","border-gray-300","dark:border-gray-600","rounded-md","shadow-sm","text-m","font-medium","text-gray-700","dark:text-gray-200","hover:bg-gray-50","dark:hover:bg-gray-500",3,"routerLink"],["name","cancel",1,"h-5","w-5"],["type","submit",1,"flex","items-center","justify-center","px-4","py-2","border","border-transparent","rounded-md","shadow-sm","text-sm","font-medium","text-white","bg-primary","hover:bg-primary-dark","focus:outline-none","focus:ring-2","focus:ring-offset-2","focus:ring-primary-dark","disabled:opacity-50",3,"disabled"],["name","create","class","h-5 w-5 mr-1",4,"ngIf"],["name","save","class","h-5 w-5 mr-1",4,"ngIf"],["name","save",1,"h-5","w-5","mr-1"],[3,"isOpenChange","isOpen","modalTitle"],[1,"flex","flex-col","p-4","text-left","text-gray-700","dark:text-gray-200"],["name","","id","",1,"font-semibold","pb-2","dark:border-gray-600","dark:bg-gray-800",3,"disabled"],[1,"px-4","py-2","bg-primary","text-white","rounded-md","hover:bg-primary-dark","focus:outline-none","focus:ring-2","focus:ring-primary-light",3,"click"],[3,"id","isModal"]],template:function(e,o){if(e&1&&(te(0,A4,2,1,"div",1),k(1,"div",2)(2,"header",3)(3,"div",4)(4,"button",5),Ue(),k(5,"svg",6),se(6,"path",7),T()(),bt(),se(7,"div",8),T(),k(8,"div",9),te(9,F4,6,1,"div",10),T()(),k(10,"form",11),ne("ngSubmit",function(){return o.onSubmit()}),k(11,"section",12),te(12,X4,13,10,"ng-container",13)(13,sM,40,18,"ng-container",13),T(),te(14,rB,10,7,"section",14)(15,oB,3,0,"section",15)(16,sB,8,5,"div",16),T(),k(17,"app-exercise-selection-modal",17),Po("searchTermChange",function(i){return Ro(o.modalSearchTerm,i)||(o.modalSearchTerm=i),i}),ne("exerciseSelected",function(i){return o.selectExerciseFromLibrary(i)})("createCustomClicked",function(){return o.handleTrulyCustomExerciseEntry()})("close",function(){return o.closeExerciseSelectionModal()}),T(),te(18,aB,6,4,"app-modal",18)(19,lB,2,4,"app-modal",18),T()),e&2){let n,i;D("ngIf",o.errorMessage()),E(4),D("routerLink",o.mode==="routineBuilder"?"/workout":"/history/list"),E(5),D("ngIf",o.routine),E(),D("formGroup",o.builderForm),E(2),D("ngIf",o.mode==="routineBuilder"),E(),D("ngIf",o.mode==="manualLogEntry"),E(),D("ngIf",o.mode==="manualLogEntry"||((n=o.builderForm.get("goal"))==null?null:n.value)!=="rest"),E(),D("ngIf",o.mode==="routineBuilder"&&((i=o.builderForm.get("goal"))==null?null:i.value)==="rest"),E(),D("ngIf",!o.isViewMode),E(),D("isOpen",o.isExerciseModalOpen),No("searchTerm",o.modalSearchTerm),D("exercises",o.availableExercises)("showCreateCustomLink",!0),E(),D("ngIf",o.notesModalsData()),E(),D("ngIf",o.exerciseDetailsId)}},dependencies:[Qr,un,cn,Yr,Od,Na,pn,jd,Vd,Hd,Kd,Da,Wd,Gd,pi,Bd,MS,Ud,zd,OS,LS,Pa,di,QS,YS,XS,Ua,rm,om,Zd,ZS,Jd,nm,em,$o,mn,US,za],styles:[".exercise-list-container[_ngcontent-%COMP%]{min-height:60px}.exercise-item[_ngcontent-%COMP%]{transition:transform .2s ease-out,box-shadow .2s ease-out}.is-long-pressing[_ngcontent-%COMP%]{transform:scale(1.03);box-shadow:0 5px 15px #00000040;border-color:#e0460d;border-width:2px;z-index:1000}.cdk-drag-placeholder[_ngcontent-%COMP%]{opacity:.4;background:#ccc;border:dotted 2px #999;min-height:100px;transition:transform .25s cubic-bezier(0,0,.2,1);display:block;margin-bottom:.5rem}.cdk-drag-preview[_ngcontent-%COMP%]{box-shadow:0 5px 5px -3px #0003,0 8px 10px 1px #00000024,0 3px 14px 2px #0000001f;border-radius:.5rem;background-color:var(--card-background-color, white)}body.dark[_ngcontent-%COMP%]   .cdk-drag-preview[_ngcontent-%COMP%]{background-color:var(--dark-card-background-color, #1f2937)}.cdk-drop-list-dragging[_ngcontent-%COMP%]   .exercise-item[_ngcontent-%COMP%]:not(.cdk-drag-placeholder){transition:transform .25s cubic-bezier(0,0,.2,1)}.cdk-drag-handle[_ngcontent-%COMP%]{cursor:grab;padding:.25rem;color:#9ca3af;position:relative;top:.25rem;right:.25rem}.cdk-drag-handle[_ngcontent-%COMP%]:hover{color:#4b5563}.dark[_ngcontent-%COMP%]   .cdk-drag-handle[_ngcontent-%COMP%]{color:#6b7280}.dark[_ngcontent-%COMP%]   .cdk-drag-handle[_ngcontent-%COMP%]:hover{color:#d1d5db}@media (min-width: 640px){.cdk-drag-handle[_ngcontent-%COMP%]{position:static}}.superset-spacing[_ngcontent-%COMP%]{margin-top:0!important}"]})};var uB=["progressCircleSvg"];function cB(r,t){if(r&1&&(k(0,"div",17),L(1),T()),r&2){let e=O(2);E(),fe(" Prepare for: ",e.nextUpText," ")}}function pB(r,t){if(r&1){let e=me();k(0,"div",2)(1,"div",3),se(2,"div",4),k(3,"div",5)(4,"span",6),L(5),T()()(),k(6,"div",7),Ue(),k(7,"svg",8,0),se(9,"circle",9)(10,"circle",10),T(),bt(),k(11,"div",11)(12,"div",12),L(13),k(14,"span",13),L(15),T()(),k(16,"div",14),L(17),T()()(),k(18,"button",15),ne("shortPress",function(){Y(e);let n=O();return Q(n.skipTimer())}),L(19," SKIP "),T(),te(20,cB,2,1,"div",16),T()}if(r&2){let e=O();yo("opacity-100",e.isVisible)("opacity-0",!e.isVisible),E(5),fe(" Session time: ",e.mainTimer()," "),E(4),an("r",e.getCircleRadius()),E(),an("r",e.getCircleRadius())("stroke-dasharray",e.getCircleCircumference())("stroke-dashoffset",e.strokeDashoffset()),E(3),fe(" ",e.displayTime()),E(2),Oe(e.displayTentsTime()),E(2),fe(" ",e.mainText," "),E(3),D("ngIf",e.nextUpText)}}var sm=class r{isVisible=!1;mainTimer=ge("00:00:00");durationSeconds=60;mainText="RESTING";nextUpText=null;timerFinished=new Gr;timerSkipped=new Gr;progressCircleSvg;timerIntervalId;circleRadius=90;circumference=2*Math.PI*this.circleRadius;timerUpdateIntervalMs=100;remainingTime=ge(0);initialDuration=ge(0);strokeDashoffset=gt(()=>{let t=this.initialDuration();if(t<=0)return this.circumference;let e=Math.max(0,this.remainingTime())/t;return this.circumference*(1-e)});displayTime=gt(()=>{let t=Math.max(0,this.remainingTime()),e=Math.floor(t/60),o=Math.floor(t%60);return e>0?`${e}:${o.toString().padStart(2,"0")}`:`${o}`});displayTentsTime=gt(()=>`.${Math.floor(Math.max(0,this.remainingTime())*10)%10}`);ngOnChanges(t){t.isVisible&&(this.isVisible?this.startTimer():this.stopTimer()),t.durationSeconds&&this.isVisible?this.startTimer():t.durationSeconds&&!this.isVisible&&(this.initialDuration.set(this.durationSeconds),this.remainingTime.set(this.durationSeconds))}ngAfterViewInit(){}startTimer(){if(this.stopTimer(),this.initialDuration.set(this.durationSeconds),this.remainingTime.set(this.durationSeconds),this.durationSeconds<=0){this.timerFinished.emit();return}let t=this.timerUpdateIntervalMs/1e3;this.timerIntervalId=setInterval(()=>{this.remainingTime.update(e=>{let o=e-t;return o<=0?(this.stopTimer(),this.timerFinished.emit(),0):o})},this.timerUpdateIntervalMs)}stopTimer(){this.timerIntervalId&&(clearInterval(this.timerIntervalId),this.timerIntervalId=null)}skipTimer(){this.stopTimer(),this.timerSkipped.emit(this.remainingTime())}ngOnDestroy(){this.stopTimer()}getCircleCircumference(){return this.circumference}getCircleRadius(){return this.circleRadius}static \u0275fac=function(e){return new(e||r)};static \u0275cmp=zr({type:r,selectors:[["app-full-screen-rest-timer"]],viewQuery:function(e,o){if(e&1&&Hr(uB,5),e&2){let n;Kr(n=qr())&&(o.progressCircleSvg=n.first)}},inputs:{isVisible:"isVisible",mainTimer:"mainTimer",durationSeconds:"durationSeconds",mainText:"mainText",nextUpText:"nextUpText"},outputs:{timerFinished:"timerFinished",timerSkipped:"timerSkipped"},features:[Rd],decls:1,vars:1,consts:[["progressCircleSvg",""],["class","fixed inset-0 z-50 flex flex-col items-center justify-center bg-black/70 backdrop-blur-sm transition-opacity duration-300 ease-in-out",3,"opacity-100","opacity-0",4,"ngIf"],[1,"fixed","inset-0","z-50","flex","flex-col","items-center","justify-center","bg-black/70","backdrop-blur-sm","transition-opacity","duration-300","ease-in-out"],[1,"absolute","top-8","left-0","right-0","flex","justify-center","pointer-events-none",2,"min-width","300px"],[1,"text-3xl","text-white","dark:text-gray-200"],[1,"font-medium","bg-black/70","px-3","p-2","rounded-full","text-3xl","text-white","dark:text-gray-200"],[1,"mx-4"],[1,"relative","flex","flex-col","items-center","justify-center","text-white"],["viewBox","0 0 200 200",1,"w-64","h-64","md:w-80","md:h-80","transform","-rotate-90"],["cx","100","cy","100","fill","transparent","stroke","rgba(255, 255, 255, 0.2)","stroke-width","16"],["cx","100","cy","100","fill","transparent","stroke","currentColor","stroke-width","18","stroke-linecap","round",1,"text-primary"],[1,"absolute","inset-0","flex","flex-col","items-center","justify-center","text-center"],[1,"text-6xl","md:text-7xl","font-bold","tabular-nums"],[1,"text-4xl","md:text-5xl","font-bold","tabular-nums"],[1,"mt-2","text-xl","md:text-2xl","font-medium","uppercase","tracking-wider"],["appPress","",1,"mt-12","py-3","px-10","bg-yellow-500","hover:bg-yellow-800","text-white","font-semibold","rounded-full","shadow-md","transition-colors","duration-150","text-lg",3,"shortPress"],["class","mt-5 px-1 text-center text-xl text-gray-300",4,"ngIf"],[1,"mt-5","px-1","text-center","text-xl","text-gray-300"]],template:function(e,o){e&1&&te(0,pB,21,13,"div",1),e&2&&D("ngIf",o.isVisible)},dependencies:[Qr,Yr,$o],encapsulation:2,changeDetection:0})};var am=class r{transform(t,e="auto",o=!1){let n=Number(t);if(t==null||isNaN(n))return o||e===!0?"00:00:00":"00:00";let i=Math.max(0,Math.abs(n)),s=Math.floor(i/3600),a=Math.floor(i%3600/60),l=Math.floor(i%60),u=String(a).padStart(2,"0"),c=String(l).padStart(2,"0"),p=o;if(e==="auto"&&!o)p=s>0;else if(e===!0)p=!0;else if(e===!1){let d=Math.floor(i/60),m=Math.floor(i%60);return`${String(d).padStart(2,"0")}:${String(m).padStart(2,"0")}`}if(p)return`${String(s).padStart(2,"0")}:${u}:${c}`;{let d=Math.floor(i/60);return`${String(d).padStart(2,"0")}:${c}`}}static \u0275fac=function(e){return new(e||r)};static \u0275pipe=Ad({name:"formatSeconds",type:r,pure:!0})};var dB=["exerciseSearchFied"],mB=["intervalListItem"],fB=(r,t,e)=>({"tabata-work-bg":r,"tabata-rest-bg":t,"tabata-prepare-bg":e}),hB=(r,t)=>({"bg-white/90 text-black font-bold shadow-2xl -translate-y-px":r,"text-white/60 opacity-80":t}),gB=r=>({"filter dark:invert":r}),xB=(r,t,e,o)=>({"text-red-500":r,"animate-pulse":t,"text-green-500 dark:text-green-400":e,"text-gray-800 dark:text-gray-100":o}),yB=(r,t)=>({"bg-green-500 hover:bg-green-600":r,"bg-yellow-500 hover:bg-yellow-600 text-white":t}),vB=(r,t,e,o)=>({"bg-primary hover:bg-primary-dark active:bg-primary-dark focus:outline-none focus:ring-0":r,"bg-green-500 hover:bg-green-600 focus:ring-green-400":t,"bg-blue-500 hover:bg-blue-600 focus:ring-blue-400":e,"bg-gray-400 dark:bg-gray-600 text-gray-800 dark:text-gray-200 cursor-not-allowed":o}),rw=r=>({"rotate-180":r});function bB(r,t){r&1&&(Ue(),k(0,"svg",36),se(1,"path",37),T())}function SB(r,t){r&1&&(Ue(),k(0,"svg",36),se(1,"path",38),T())}function wB(r,t){if(r&1&&(k(0,"div",39),L(1),T()),r&2){let e=O(4);E(),Ft(" Round ",e.currentBlockRound()," / ",e.totalBlockRounds()," ")}}function _B(r,t){if(r&1&&(k(0,"span",45),L(1),T()),r&2){let e=O().$implicit;E(),Oe(e.exerciseName)}}function CB(r,t){if(r&1&&(k(0,"li",40,2)(2,"div",41)(3,"span",42),L(4),T(),k(5,"span",43),L(6),T(),te(7,_B,2,1,"span",44),T()()),r&2){let e=t.$implicit,o=t.index,n=O(4);E(2),D("ngClass",jr(5,hB,o===n.currentTabataIntervalIndex(),o!==n.currentTabataIntervalIndex())),E(2),Oe(e.currentIntervalNumber),E(2),Ft("",e.type,": ",e.duration,"s"),E(),D("ngIf",e.type==="work")}}function kB(r,t){if(r&1){let e=me();pr(0),se(1,"div",16),k(2,"div",17)(3,"header",18)(4,"div",19),L(5),T(),k(6,"div",20)(7,"button",21),ne("shortPress",function(){Y(e);let n=O(3);return Q(n.toggleTabataPause())}),te(8,bB,2,0,"svg",22)(9,SB,2,0,"svg",22),T()()(),k(10,"main",23),te(11,wB,2,2,"div",24),k(12,"h1",25),L(13),Ke(14,"number"),T(),k(15,"p",26),L(16),T()(),k(17,"div",27)(18,"ul",28),te(19,CB,8,8,"li",29),T()(),k(20,"footer",30)(21,"button",31),ne("shortPress",function(){Y(e);let n=O(3);return Q(n.previousTabataInterval())}),Ue(),k(22,"svg",32),se(23,"path",33),T()(),bt(),k(24,"div",34),L(25),T(),k(26,"button",31),ne("shortPress",function(){Y(e);let n=O(3);return Q(n.nextTabataInterval())}),Ue(),k(27,"svg",32),se(28,"path",35),T()()()(),dr()}if(r&2){let e=t.ngIf,o=O(3);E(),D("ngClass",PS(17,fB,e.type==="work",e.type==="rest",e.type==="prepare")),E(4),fe(" Total: ",o.sessionTimerDisplay()," "),E(3),D("ngIf",o.sessionState()==="playing"),E(),D("ngIf",o.sessionState()==="paused"),E(2),D("ngIf",o.totalBlockRounds()>1),E(),yo("animate-pulse",o.tabataTimeRemaining()<=3&&o.tabataTimeRemaining()>0),E(),fe(" ",o.tabataTimeRemaining()>=0?Xr(14,14,o.tabataTimeRemaining(),"2.0-0"):"00"," "),E(3),fe(" ",e.exerciseName||e.type," "),E(3),D("ngForOf",o.tabataIntervals()),E(2),D("disabled",o.currentTabataIntervalIndex()===0),E(4),Ft(" ",e.currentIntervalNumber," / ",e.totalIntervals," "),E(),D("disabled",o.currentTabataIntervalIndex()===o.tabataIntervals().length-1)}}function IB(r,t){if(r&1&&(k(0,"div",14),te(1,kB,29,21,"ng-container",15),T()),r&2){let e=O(2);E(),D("ngIf",e.currentTabataInterval())}}function TB(r,t){if(r&1){let e=me();k(0,"div",62)(1,"h2",63),L(2,"Session Paused"),T(),k(3,"p",64),L(4),T(),k(5,"button",65),ne("shortPress",function(){Y(e);let n=O(4);return Q(n.resumeSession())}),se(6,"app-icon",66),L(7," RESUME WORKOUT "),T(),k(8,"button",67),ne("shortPress",function(){Y(e);let n=O(4);return Q(n.quitWorkout())}),se(9,"app-icon",68),L(10," QUIT WORKOUT (NO SAVE) "),T()()}if(r&2){let e=O(4);E(4),fe("Elapsed Time: ",e.sessionTimerDisplay())}}function EB(r,t){if(r&1&&se(0,"img",85),r&2){let e=O().ngIf,o=O(5);D("src",o.getIconPath(e.iconName),xs)("alt",e.name+" icon")("ngClass",li(3,gB,e.iconName!=="default-exercise"&&e.iconName!==""&&e.iconName!==null))}}function NB(r,t){if(r&1&&(k(0,"div",83),te(1,EB,1,5,"img",84),T()),r&2){let e=t.ngIf;E(),D("ngIf",e.iconName)}}function RB(r,t){r&1&&se(0,"div",86)}function PB(r,t){if(r&1&&(k(0,"p",87)(1,"span",88),L(2),T(),k(3,"span",88),L(4),T(),k(5,"span",88),L(6),T()()),r&2){let e=O().ngIf;E(2),Oe(e.exerciseData.id),E(2),Oe(e.exerciseData.exerciseId),E(2),Oe(e.exerciseData.exerciseName)}}function $B(r,t){if(r&1&&(k(0,"span"),L(1),T()),r&2){let e=O(6);E(),fe("/",e.getTotalWarmupSetsForCurrentExercise())}}function AB(r,t){if(r&1&&(k(0,"span",89),L(1),te(2,$B,2,1,"span",15),T()),r&2){let e=O(5);E(),fe(" Warm-up Set ",e.getCurrentWarmupSetNumber()," "),E(),D("ngIf",e.getTotalWarmupSetsForCurrentExercise()>0)}}function DB(r,t){if(r&1&&(k(0,"span"),L(1),T()),r&2){let e=O(5);E(),Ft(" Set ",e.getCurrentWorkingSetNumber(),"/",e.getWorkingSetCountForCurrentExercise()," ")}}function FB(r,t){if(r&1&&(k(0,"span",90),L(1),T()),r&2){let e=O(5);E(),Ft(" (Round ",e.currentBlockRound(),"/",e.totalBlockRounds(),") ")}}function OB(r,t){if(r&1&&(k(0,"span",91),L(1),T()),r&2){let e=O().ngIf;E(),Ft(" (Superset ",(e.exerciseData.supersetOrder??0)+1,"/",e.exerciseData.supersetSize??"?",") ")}}function LB(r,t){r&1&&(k(0,"span",95),L(1,"Marked as Skipped"),T())}function MB(r,t){r&1&&(k(0,"span",96),L(1,"Marked for Later"),T())}function BB(r,t){if(r&1&&(k(0,"div",92),te(1,LB,2,0,"span",93)(2,MB,2,0,"span",94),T()),r&2){let e=O().ngIf;E(),D("ngIf",e.exerciseData.sessionStatus==="skipped"),E(),D("ngIf",e.exerciseData.sessionStatus==="do_later")}}function VB(r,t){if(r&1){let e=me();k(0,"div",97)(1,"h3",98),L(2,"Get Ready!"),T(),k(3,"p",99),L(4),T(),k(5,"p",100),L(6),T(),k(7,"button",101),ne("shortPress",function(){Y(e);let n=O(5);return Q(n.skipPresetTimer())}),L(8," Skip Countdown & Start Set "),T()()}if(r&2){let e=O(5);E(4),fe("",e.presetTimerCountdownDisplay(),"s"),E(2),fe(" Prepare for: ",e.getCurrentUpText()," ")}}function WB(r,t){if(r&1){let e=me();k(0,"div")(1,"label",105),L(2),T(),k(3,"div",106)(4,"button",107),ne("shortPress",function(){Y(e);let n=O(6);return Q(n.onShortPressWeightDecrement())})("longPress",function(){Y(e);let n=O(6);return Q(n.onLongPressWeightDecrement())})("pressRelease",function(){Y(e);let n=O(6);return Q(n.onPressRelease())}),Ue(),k(5,"svg",108),se(6,"path",109),T()(),bt(),k(7,"div",110),ne("shortPress",function(){Y(e);let n=O(6);return Q(n.editWeightWithPrompt())}),L(8),Ke(9,"number"),T(),se(10,"input",111),k(11,"button",112),ne("shortPress",function(){Y(e);let n=O(6);return Q(n.onShortPressWeightIncrement())})("longPress",function(){Y(e);let n=O(6);return Q(n.onLongPressWeightIncrement())})("pressRelease",function(){Y(e);let n=O(6);return Q(n.onPressRelease())}),Ue(),k(12,"svg",108),se(13,"path",113),T()()()()}if(r&2){let e=O(6);E(2),fe("Weight (",e.weightUnitDisplaySymbol,")"),E(2),D("disabled",e.getDisabled()),E(4),fe(" ",Xr(9,4,e.csf.actualWeight.value,"1.0-2")??"0"," "),E(3),D("disabled",e.getDisabled())}}function UB(r,t){if(r&1){let e=me();k(0,"div")(1,"label",105),L(2,"Reps"),T(),k(3,"div",106)(4,"button",107),ne("shortPress",function(){Y(e);let n=O(6);return Q(n.onShortPressRepsDecrement())})("longPress",function(){Y(e);let n=O(6);return Q(n.onLongPressRepsDecrement())})("pressRelease",function(){Y(e);let n=O(6);return Q(n.onPressRelease())}),Ue(),k(5,"svg",108),se(6,"path",109),T()(),bt(),k(7,"input",114),ne("shortPress",function(){Y(e);let n=O(6);return Q(n.editRepsWithPrompt())}),T(),k(8,"button",112),ne("shortPress",function(){Y(e);let n=O(6);return Q(n.onShortPressRepsIncrement())})("longPress",function(){Y(e);let n=O(6);return Q(n.onLongPressRepsIncrement())})("pressRelease",function(){Y(e);let n=O(6);return Q(n.onPressRelease())}),Ue(),k(9,"svg",108),se(10,"path",113),T()()()()}if(r&2){let e=O(6);E(4),D("disabled",e.getDisabled()),E(4),D("disabled",e.getDisabled())}}function zB(r,t){if(r&1&&(k(0,"span"),L(1),Ke(2,"date"),T()),r&2){let e=O(3).ngIf;E(),fe("(Target: ",Fd(2,1,e.setData.duration*1e3,"mm:ss","UTC"),")")}}function GB(r,t){r&1&&se(0,"app-icon",124)}function HB(r,t){r&1&&se(0,"app-icon",125)}function KB(r,t){r&1&&(k(0,"span",126),L(1,"START TIMER"),T())}function qB(r,t){r&1&&(k(0,"span",126),L(1,"PAUSE TIMER"),T())}function jB(r,t){r&1&&(k(0,"span",126),L(1,"RESUME TIMER"),T())}function XB(r,t){if(r&1){let e=me();k(0,"button",127),ne("shortPress",function(){Y(e);let n=O(7);return Q(n.resetTimedSet())}),se(1,"app-icon",128),L(2," RESET "),T()}}function YB(r,t){if(r&1){let e=me();k(0,"div")(1,"label",115),L(2," Time "),te(3,zB,3,5,"span",15),T(),k(4,"div",116),L(5),Ke(6,"formatSeconds"),T(),se(7,"input",117),k(8,"div",118)(9,"button",119),ne("click",function(){Y(e);let n=O(6);return Q(n.toggleTimedSetTimer())}),te(10,GB,1,0,"app-icon",120)(11,HB,1,0,"app-icon",121)(12,KB,2,0,"span",122)(13,qB,2,0,"span",122)(14,jB,2,0,"span",122),T(),te(15,XB,3,0,"button",123),T()()}if(r&2){let e,o=O(2).ngIf,n=O(4);E(3),D("ngIf",o.setData.duration>0),E(),D("ngClass",cy(12,xB,n.isTimedSetOvertime(),n.isTimedSetOvertime()&&n.timedSetTimerState()==="running",!n.isTimedSetOvertime()&&n.timedSetTimerState()==="running"&&(((e=n.activeSetInfo())==null||e.setData==null?null:e.setData.duration)??0)>0&&n.timedSetElapsedSeconds()>0,n.timedSetTimerState()==="idle"||n.timedSetTimerState()==="paused")),E(),fe(" ",ht(6,10,n.timedSetDisplay())," "),E(4),D("ngClass",jr(17,yB,n.timedSetTimerState()==="idle"||n.timedSetTimerState()==="paused",n.timedSetTimerState()==="running")),E(),D("ngIf",n.timedSetTimerState()==="idle"||n.timedSetTimerState()==="paused"),E(),D("ngIf",n.timedSetTimerState()==="running"),E(),D("ngIf",n.timedSetTimerState()==="idle"),E(),D("ngIf",n.timedSetTimerState()==="running"),E(),D("ngIf",n.timedSetTimerState()==="paused"),E(),D("ngIf",n.timedSetTimerState()!=="idle")}}function QB(r,t){if(r&1){let e=me();k(0,"div",129)(1,"label",130),ne("shortPress",function(){Y(e);let n=O(6);return Q(n.showNotes.set(!n.showNotes()))}),L(2,"Set Notes (Optional)"),T(),se(3,"textarea",131),T()}if(r&2){let e=O(6);E(3),D("disabled",e.getDisabled())}}function ZB(r,t){if(r&1){let e=me();k(0,"div",132),ne("shortPress",function(){Y(e);let n=O(6);return Q(n.showNotes.set(!n.showNotes()))}),k(1,"div",133),Ue(),k(2,"svg",134),se(3,"path",135),T(),L(4," Notes "),T()()}r&2&&(E(3),an("d","M12 6.042A8.967 8.967 0 006 3.75c-1.052 0-2.062.18-3 .512v14.25A8.987 8.987 0 016 18c2.305 0 4.408.867 6 2.292m0-14.25a8.966 8.966 0 016-2.292c1.052 0 2.062.18 3 .512v14.25A8.987 8.987 0 0018 18a8.967 8.967 0 00-6 2.292m0-14.25v14.25"))}function JB(r,t){if(r&1&&(k(0,"div")(1,"form",102),te(2,WB,14,7,"div",15)(3,UB,11,2,"div",15)(4,YB,16,20,"div",15)(5,QB,4,1,"div",103)(6,ZB,5,1,"div",104),T()()),r&2){let e,o=O().ngIf,n=O(4);E(),D("formGroup",n.currentSetForm),E(),D("ngIf",n.csf.actualWeight),E(),D("ngIf",n.csf.actualReps&&o.setData.reps!==void 0&&((e=n.activeSetInfo())==null||e.baseExerciseInfo==null?null:e.baseExerciseInfo.category)!=="cardio"),E(),D("ngIf",o.setData.duration),E(),D("ngIf",n.showNotes()),E(),D("ngIf",!n.showNotes())}}function eV(r,t){if(r&1){let e=me();k(0,"div",136)(1,"div",137)(2,"button",138),ne("shortPress",function(){Y(e);let n=O(5);return Q(n.handleMainAction())}),L(3),T()()()}if(r&2){let e=O(5);E(2),D("disabled",e.sessionState()==="paused"||e.playerSubState()===e.PlayerSubState.PresetCountdown&&e.presetTimerCountdownDisplay()!=="0"&&e.presetTimerCountdownDisplay()!==null||e.playerSubState()===e.PlayerSubState.Resting&&e.isRestTimerVisible())("ngClass",cy(3,vB,e.playerSubState()===e.PlayerSubState.PerformingSet&&!e.checkIfLatestOfEverything(),e.playerSubState()===e.PlayerSubState.PerformingSet&&e.checkIfLatestOfEverything(),e.playerSubState()===e.PlayerSubState.PresetCountdown,e.playerSubState()===e.PlayerSubState.Resting&&e.isRestTimerVisible())),E(),fe(" ",e.mainActionButtonLabel()," ")}}function tV(r,t){if(r&1&&(k(0,"div",139)(1,"span",140),L(2,"Next up: "),T(),k(3,"span"),L(4),T()()),r&2){let e=O(5);D("title",e.getNextUpText(e.activeSetInfo(),e.routine()??null)||"Next Exercise"),E(4),Oe(e.getNextUpText(e.activeSetInfo(),e.routine()??null)||"Next Exercise")}}function rV(r,t){if(r&1){let e=me();k(0,"div",69)(1,"div",70),ne("shortPress",function(){let n=Y(e).ngIf,i=O(4);return Q(i.openModal(n.exerciseData))}),te(2,NB,2,1,"div",71)(3,RB,1,0,"ng-template",null,4,ln),k(5,"h2",72),L(6),T()(),k(7,"div",73),te(8,PB,7,3,"p",74),k(9,"p",75),te(10,AB,3,2,"span",76)(11,DB,2,2,"span",15)(12,FB,2,2,"span",77)(13,OB,2,2,"span",78),T()(),te(14,BB,3,2,"div",79)(15,VB,9,2,"div",80)(16,JB,7,6,"div",15)(17,eV,4,8,"div",81)(18,tV,5,2,"div",82),T()}if(r&2){let e=t.ngIf,o=Uo(4),n=O(4);E(),D("title","Click/tap for more info about the exercise"),E(),D("ngIf",n.currentBaseExercise())("ngIfElse",o),E(3),D("title",e.exerciseData.exerciseName),E(),fe(" ",e.exerciseData.exerciseName||"Loading Exercise..."," "),E(2),D("ngIf",!1),E(2),D("ngIf",e.type==="warmup"),E(),D("ngIf",e.type!=="warmup"),E(),D("ngIf",n.totalBlockRounds()>1&&n.currentBlockRound()>0),E(),D("ngIf",e.exerciseData.supersetId),E(),D("ngIf",e.exerciseData.sessionStatus&&e.exerciseData.sessionStatus!=="pending"),E(),D("ngIf",n.playerSubState()===n.PlayerSubState.PresetCountdown),E(),D("ngIf",n.playerSubState()===n.PlayerSubState.PerformingSet),E(),D("ngIf",n.routine()&&n.sessionState()==="playing"&&n.activeSetInfo()),E(),D("ngIf",n.getNextUpText(n.activeSetInfo(),n.routine()??null)&&n.playerSubState()!=="preset_countdown")}}function oV(r,t){if(r&1&&(k(0,"p",148),L(1),T()),r&2){let e=O(5);E(),fe(" ",e.currentWorkoutLogExercises().length===0?"No sets logged yet":"All planned sets are done. Well done!"," ")}}function nV(r,t){if(r&1){let e=me();k(0,"button",149),ne("shortPress",function(){Y(e);let n=O(5);return Q(n.finishWorkoutAndReportStatus())}),L(1," Confirm & Save Workout "),T()}}function iV(r,t){if(r&1){let e=me();k(0,"button",150),ne("shortPress",function(){Y(e);let n=O(5);return Q(n.backToRoutines())}),Ue(),k(1,"svg",151),se(2,"path",152),T(),L(3," BACK TO WORKOUTS "),T()}}function sV(r,t){if(r&1){let e=me();k(0,"div",141)(1,"h2",142),L(2),T(),te(3,oV,2,1,"p",143)(4,nV,2,0,"button",144),k(5,"div",145),te(6,iV,4,0,"button",146),k(7,"button",147),ne("shortPress",function(){Y(e);let n=O(4);return Q(n.addExerciseDuringSession())}),L(8," + ADD EXERCISE TO SESSION "),T()()()}if(r&2){let e=O(4);E(2),fe(" ",e.sessionState()==="error"?"Error Loading Workout":e.currentWorkoutLogExercises().length===0?e.routineId==="-1"?"Workout to be started":"Workout Ended":"Workout Complete!"," "),E(),D("ngIf",e.sessionState()!=="error"),E(),D("ngIf",e.sessionState()!=="error"&&e.currentWorkoutLogExercises().length>0),E(2),D("ngIf",e.sessionState()!=="error"&&e.currentWorkoutLogExercises().length===0),E(),D("disabled",e.sessionState()==="paused")}}function aV(r,t){if(r&1){let e=me();k(0,"div")(1,"div",155),L(2,"UP NEXT"),T(),k(3,"div",156),L(4),T(),k(5,"div",157),L(6),Ke(7,"number"),k(8,"button",158),ne("shortPress",function(){Y(e);let n=O(5);return Q(n.skipRest())}),L(9,"(Skip)"),T()()()}if(r&2){let e=O(5);E(3),D("title",e.restTimerNextUpText()),E(),fe(" ",e.restTimerNextUpText()||"Next Exercise"," "),E(2),fe(" Rest: ",e.restTimerDisplay()||Xr(7,3,e.restDuration(),"1.0-0")+"s"," ")}}function lV(r,t){if(r&1){let e=me();k(0,"div")(1,"div",156),L(2),T(),k(3,"div",159),L(4),T(),k(5,"button",160),ne("shortPress",function(){Y(e);let n=O(5);return Q(n.skipPresetTimer())}),L(6,"(Skip Countdown)"),T()()}if(r&2){let e=O(5);E(),D("title",e.restTimerMainText()),E(),fe(" ",e.restTimerMainText()," "),E(2),fe(" ",e.presetTimerCountdownDisplay(),"s ")}}function uV(r,t){if(r&1&&(k(0,"footer",153)(1,"div",154),te(2,aV,10,6,"div",15)(3,lV,7,3,"div",15),T()()),r&2){let e=O(4);E(2),D("ngIf",e.playerSubState()===e.PlayerSubState.Resting&&!e.isRestTimerVisible()),E(),D("ngIf",e.playerSubState()===e.PlayerSubState.PresetCountdown)}}function cV(r,t){if(r&1){let e=me();k(0,"div",47),te(1,TB,11,1,"div",48),k(2,"header",49)(3,"button",50),ne("shortPress",function(){Y(e);let n=O(3);return Q(n.goBack())}),Ue(),k(4,"svg",51),se(5,"path",52),T()(),bt(),k(6,"div",53),ne("shortPress",function(){Y(e);let n=O(3);return Q(n.jumpToExercise("Session overview"))}),k(7,"h1",54),L(8),T(),k(9,"div",55),L(10),T()(),k(11,"button",56),ne("shortPress",function(){Y(e);let n=O(3);return Q(n.toggleWorkoutMenu())}),Ue(),k(12,"svg",57),se(13,"path",58),T()()(),bt(),k(14,"main",59),te(15,rV,19,15,"div",60)(16,sV,9,5,"ng-template",null,3,ln),T(),te(18,uV,4,2,"footer",61),T()}if(r&2){let e=Uo(17),o=O(2).ngIf,n=O();E(),D("ngIf",n.sessionState()==="paused"),E(5),D("title","Click for session overview"),E(2),fe(" ",o.name||"Workout"," "),E(2),Oe(n.sessionTimerDisplay()),E(),D("disabled",n.sessionState()==="loading"||n.sessionState()==="error"||n.sessionState()==="paused"&&!n.isWorkoutMenuVisible()),E(4),D("ngIf",n.activeSetInfo())("ngIfElse",e),E(3),D("ngIf",n.routine()&&n.sessionState()==="playing"&&n.activeSetInfo()&&(n.playerSubState()===n.PlayerSubState.Resting&&!n.isRestTimerVisible()||n.playerSubState()===n.PlayerSubState.PresetCountdown))}}function pV(r,t){if(r&1&&te(0,cV,19,8,"div",46),r&2){let e=O(2),o=Uo(7);D("ngIf",e.routine()!==void 0)("ngIfElse",o)}}function dV(r,t){if(r&1&&(pr(0,12),te(1,IB,2,1,"div",13)(2,pV,1,2,"ng-template",null,1,ln),dr()),r&2){let e=Uo(3),o=O();E(),D("ngIf",o.isTabataMode())("ngIfElse",e)}}function mV(r,t){if(r&1){let e=me();k(0,"button",182),ne("shortPress",function(){Y(e);let n=O(2);return Q(n.jumpToExercise())}),se(1,"app-icon",183),L(2," JUMP TO EXERCISE "),T()}if(r&2){let e,o=O(2);D("disabled",o.sessionState()==="paused"||!(!((e=o.routine())==null||e.exercises==null)&&e.exercises.length))}}function fV(r,t){if(r&1){let e=me();k(0,"button",184),ne("shortPress",function(){Y(e);let n=O(2);return Q(n.openSwitchExerciseModal())}),se(1,"app-icon",185),L(2," SWITCH EXERCISE "),T()}}function hV(r,t){r&1&&(k(0,"span",189),L(1,"(already started main sets)"),T())}function gV(r,t){if(r&1){let e=me();k(0,"button",186),ne("shortPress",function(){Y(e);let n=O(2);return Q(n.addWarmupSet())}),se(1,"app-icon",187),k(2,"p"),L(3,"ADD WARM-UP SET"),T(),te(4,hV,2,0,"span",188),T()}if(r&2){let e=O(2);D("disabled",!e.canAddWarmupSet()||e.sessionState()==="paused"||!e.activeSetInfo()),E(4),D("ngIf",!e.canAddWarmupSet())}}function xV(r,t){if(r&1){let e=me();k(0,"button",190),ne("shortPress",function(){Y(e);let n=O(2);return Q(n.skipCurrentSet())}),se(1,"app-icon",191),L(2," SKIP CURRENT SET "),T()}if(r&2){let e=O(2);D("disabled",!e.activeSetInfo()||e.sessionState()==="paused")}}function yV(r,t){if(r&1){let e=me();k(0,"button",192),ne("shortPress",function(){Y(e);let n=O(2);return Q(n.skipCurrentExercise())}),se(1,"app-icon",191),L(2," MARK EXERCISE AS SKIPPED "),T()}if(r&2){let e=O(2);D("disabled",!e.activeSetInfo()||e.sessionState()==="paused")}}function vV(r,t){if(r&1){let e=me();k(0,"button",193),ne("shortPress",function(){Y(e);let n=O(2);return Q(n.markCurrentExerciseDoLater())}),se(1,"app-icon",194),L(2," MARK EXERCISE FOR LATER "),T()}if(r&2){let e=O(2);D("disabled",!e.activeSetInfo()||e.sessionState()==="paused")}}function bV(r,t){if(r&1){let e=me();k(0,"button",195),ne("shortPress",function(){Y(e);let n=O(2);return Q(n.finishWorkoutEarly())}),se(1,"app-icon",196),L(2," FINISH WORKOUT EARLY "),T()}if(r&2){let e=O(2);D("disabled",e.sessionState()==="paused"||e.currentWorkoutLogExercises().length===0)}}function SV(r,t){if(r&1){let e=me();k(0,"div",161)(1,"div",162),se(2,"div"),k(3,"h2",163),L(4,"Workout Menu"),T(),k(5,"button",164),ne("shortPress",function(){Y(e);let n=O();return Q(n.closeWorkoutMenu())}),se(6,"app-icon",165),T()(),k(7,"div",166)(8,"button",167),ne("shortPress",function(){Y(e);let n=O();return Q(n.pauseSession())}),se(9,"app-icon",168),L(10," PAUSE WORKOUT "),T(),te(11,mV,3,1,"button",169)(12,fV,3,0,"button",170),k(13,"button",171),ne("shortPress",function(){Y(e);let n=O();return Q(n.openPerformanceInsightsFromMenu())}),se(14,"app-icon",172),L(15," PERFORMANCE INSIGHTS "),T(),te(16,gV,5,2,"button",173),k(17,"button",174),ne("shortPress",function(){Y(e);let n=O();return Q(n.addExerciseDuringSession())}),se(18,"app-icon",175),L(19," ADD EXERCISE TO SESSION "),T(),te(20,xV,3,1,"button",176)(21,yV,3,1,"button",177)(22,vV,3,1,"button",178)(23,bV,3,1,"button",179),k(24,"button",180),ne("shortPress",function(){Y(e);let n=O();return Q(n.quitWorkout())}),se(25,"app-icon",181),L(26," QUIT WORKOUT (NO SAVE) "),T()()()}if(r&2){let e=O();E(8),D("disabled",e.sessionState()!=="playing"),E(3),D("ngIf",!e.checkIfSuperSetIsStarted()),E(),D("ngIf",e.canSwitchExercise()),E(),D("disabled",e.sessionState()==="paused"||!e.activeSetInfo()),E(3),D("ngIf",!e.checkIfSuperSetIsStarted()),E(),D("disabled",e.sessionState()==="paused"),E(3),D("ngIf",!e.checkIfSetIsPartOfRounds()),E(),D("ngIf",!e.checkIfSetIsPartOfRounds()),E(),D("ngIf",!e.checkIfSetIsPartOfRounds()),E(),D("ngIf",e.currentWorkoutLogExercises().length>0)}}function wV(r,t){r&1&&(k(0,"span",238),L(1,"(Warm-up) "),T())}function _V(r,t){if(r&1&&(k(0,"span"),L(1,"Reps: "),k(2,"strong",239),L(3),T()()),r&2){let e=O().$implicit;E(3),Oe(e.repsAchieved)}}function CV(r,t){if(r&1&&(k(0,"span"),L(1,"Weight: "),k(2,"strong",239),L(3),Ke(4,"weightUnit"),T()()),r&2){let e=O().$implicit;E(3),Oe(ht(4,1,e.weightUsed))}}function kV(r,t){if(r&1&&(k(0,"span",240),L(1,"Time: "),k(2,"strong",239),L(3),T()()),r&2){let e=O().$implicit;E(3),fe("",e.durationPerformed,"s")}}function IV(r,t){if(r&1&&(k(0,"p",241),L(1),T()),r&2){let e=O().$implicit;E(),fe(" ",e.notes," ")}}function TV(r,t){if(r&1&&(k(0,"div",232)(1,"p",233),te(2,wV,2,0,"span",234),L(3),T(),k(4,"div",235),te(5,_V,4,1,"span",15)(6,CV,5,3,"span",15)(7,kV,4,1,"span",236),T(),te(8,IV,2,1,"p",237),T()),r&2){let e=t.$implicit,o=t.index;E(2),D("ngIf",e.type==="warmup"),E(),fe(" Set #",o+1,": "),E(2),D("ngIf",e.repsAchieved!==void 0),E(),D("ngIf",e.weightUsed!==void 0&&e.weightUsed!==null),E(),D("ngIf",e.durationPerformed!==void 0),E(),D("ngIf",e.notes)}}function EV(r,t){if(r&1&&(k(0,"div",230),te(1,TV,9,6,"div",231),T()),r&2){let e=O(3);E(),D("ngForOf",e.allPreviousLoggedSetsForCurrentExercise())}}function NV(r,t){r&1&&(k(0,"div",242),L(1," No sets completed yet for this exercise in this workout. "),T())}function RV(r,t){r&1&&(k(0,"span",238),L(1," (Warm-up)"),T())}function PV(r,t){if(r&1&&(k(0,"span"),L(1,"Reps: "),k(2,"strong",239),L(3),T()()),r&2){let e=O().$implicit;E(3),Oe(e.repsAchieved)}}function $V(r,t){if(r&1&&(k(0,"span"),L(1,"Weight: "),k(2,"strong",239),L(3),Ke(4,"weightUnit"),T()()),r&2){let e=O().$implicit;E(3),Oe(ht(4,1,e.weightUsed))}}function AV(r,t){if(r&1&&(k(0,"span",240),L(1,"Time: "),k(2,"strong",239),L(3),T()()),r&2){let e=O().$implicit;E(3),fe("",e.durationPerformed,"s")}}function DV(r,t){if(r&1&&(k(0,"p",241),L(1),T()),r&2){let e=O().$implicit;E(),fe(" ",e.notes," ")}}function FV(r,t){if(r&1&&(k(0,"div",232)(1,"p",233)(2,"span",244),L(3),T(),te(4,RV,2,0,"span",234),L(5),T(),k(6,"div",235),te(7,PV,4,1,"span",15)(8,$V,5,3,"span",15)(9,AV,4,1,"span",236),T(),te(10,DV,2,1,"p",237),T()),r&2){let e=t.$implicit;E(3),fe("",e.exerciseName||"Exercise",":"),E(),D("ngIf",e.type==="warmup"),E(),fe(" Set #",e.plannedSetId,": "),E(2),D("ngIf",e.repsAchieved!==void 0),E(),D("ngIf",e.weightUsed!==void 0&&e.weightUsed!==null),E(),D("ngIf",e.durationPerformed!==void 0),E(),D("ngIf",e.notes)}}function OV(r,t){if(r&1&&(k(0,"div",243),te(1,FV,11,7,"div",231),T()),r&2){let e=O(3);E(),D("ngForOf",e.allPreviousLoggedSetsForCurrentSession())}}function LV(r,t){r&1&&(k(0,"div",242),L(1," No sets logged today for any exercise yet. "),T())}function MV(r,t){if(r&1&&(k(0,"li",253)(1,"span",254),L(2,"Reps:"),T(),k(3,"strong",255),L(4),T()()),r&2){let e=O().ngIf;E(4),Oe(e.repsAchieved)}}function BV(r,t){if(r&1&&(k(0,"li",253)(1,"span",254),L(2,"Weight:"),T(),k(3,"strong",255),L(4),Ke(5,"weightUnit"),T()()),r&2){let e=O().ngIf;E(4),Oe(ht(5,1,e.weightUsed))}}function VV(r,t){if(r&1&&(k(0,"li",253)(1,"span",254),L(2,"Time:"),T(),k(3,"strong",255),L(4),T()()),r&2){let e=O().ngIf;E(4),fe("",e.durationPerformed,"s")}}function WV(r,t){if(r&1&&(k(0,"li",256),L(1),T()),r&2){let e=O().ngIf;E(),fe("Notes: ",e.notes)}}function UV(r,t){if(r&1&&(k(0,"div",245)(1,"p",246)(2,"span",247),Ue(),k(3,"svg",248),se(4,"path",249),T(),L(5),Ke(6,"date"),T()(),bt(),k(7,"ul",250),te(8,MV,5,1,"li",251)(9,BV,6,3,"li",251)(10,VV,5,1,"li",251)(11,WV,2,1,"li",252),T()()),r&2){let e=t.ngIf,o=O(3);E(5),fe(" Last time (",Xr(6,5,o.lastPerformanceForCurrentExercise==null?null:o.lastPerformanceForCurrentExercise.lastPerformedDate,"dd/MM/yy"),"): "),E(3),D("ngIf",e.repsAchieved!==void 0),E(),D("ngIf",e.weightUsed!==void 0&&e.weightUsed!==null),E(),D("ngIf",e.durationPerformed!==void 0),E(),D("ngIf",e.notes)}}function zV(r,t){r&1&&(k(0,"div",257),L(1," No previous performance recorded for this exercise yet. "),T())}function GV(r,t){if(r&1&&(k(0,"div")(1,"span"),L(2),T(),k(3,"strong",265),L(4),T(),k(5,"em",266),L(6),Ke(7,"date"),T()()),r&2){let e=t.$implicit,o=O(5);E(2),fe("",e.pbType,": "),E(2),Oe(o.formatPbValue(e)),E(2),fe(" (",Xr(7,3,e.timestamp,"shortDate"),")")}}function HV(r,t){if(r&1&&(k(0,"div",263),te(1,GV,8,6,"div",264),T()),r&2){let e=O(4);E(),D("ngForOf",e.exercisePBs())}}function KV(r,t){if(r&1&&(k(0,"div",267),L(1),T()),r&2){let e,o=O(4);E(),fe(" No personal bests recorded yet for ",(e=o.currentBaseExercise())==null?null:e.name,". ")}}function qV(r,t){if(r&1&&(k(0,"div",258)(1,"p",259)(2,"span",247),se(3,"app-icon",260),L(4),T()(),te(5,HV,2,1,"div",261)(6,KV,2,1,"div",262),T()),r&2){let e,o,n=O(3);E(4),fe(" Personal Bests for ",((e=n.currentBaseExercise())==null?null:e.name)||"this exercise",": "),E(),D("ngIf",n.exercisePBs().length>0),E(),D("ngIf",n.currentBaseExercise()&&n.exercisePBs().length===0&&!(!((o=n.currentBaseExercise())==null||o.id==null)&&o.id.startsWith("custom-")))}}function jV(r,t){if(r&1){let e=me();k(0,"div",272),ne("shortPress",function(){Y(e);let n=O(4);return Q(n.startEditTarget("reps"))}),L(1),T()}if(r&2){let e=O(2).ngIf;E(),fe(" ",e.setData.reps," ")}}function XV(r,t){if(r&1){let e=me();k(0,"div",20)(1,"input",273),Po("ngModelChange",function(n){Y(e);let i=O(4);return Ro(i.editingTargetValue,n)||(i.editingTargetValue=n),Q(n)}),ne("keyup.enter",function(){Y(e);let n=O(4);return Q(n.confirmEditTarget())})("keyup.escape",function(){Y(e);let n=O(4);return Q(n.cancelEditTarget())}),T(),k(2,"button",274),ne("shortPress",function(){Y(e);let n=O(4);return Q(n.confirmEditTarget())}),Ue(),k(3,"svg",275),se(4,"path",276),T()(),bt(),k(5,"button",277),ne("shortPress",function(){Y(e);let n=O(4);return Q(n.cancelEditTarget())}),Ue(),k(6,"svg",275),se(7,"path",278),T()()()}if(r&2){let e=O(4);E(),No("ngModel",e.editingTargetValue)}}function YV(r,t){if(r&1&&(k(0,"div",268)(1,"label",269),L(2,"Target Reps"),T(),te(3,jV,2,1,"div",270)(4,XV,8,1,"div",271),T()),r&2){let e=O(3);E(3),D("ngIf",e.editingTarget!=="reps"),E(),D("ngIf",e.editingTarget==="reps")}}function QV(r,t){if(r&1){let e=me();k(0,"div",272),ne("shortPress",function(){Y(e);let n=O(4);return Q(n.startEditTarget("weight"))}),L(1),Ke(2,"weightUnit"),T()}if(r&2){let e=O(2).ngIf;E(),fe(" ",ht(2,1,e.setData.weight)," ")}}function ZV(r,t){if(r&1){let e=me();k(0,"div",20)(1,"input",273),Po("ngModelChange",function(n){Y(e);let i=O(4);return Ro(i.editingTargetValue,n)||(i.editingTargetValue=n),Q(n)}),ne("keyup.enter",function(){Y(e);let n=O(4);return Q(n.confirmEditTarget())})("keyup.escape",function(){Y(e);let n=O(4);return Q(n.cancelEditTarget())}),T(),k(2,"button",274),ne("shortPress",function(){Y(e);let n=O(4);return Q(n.confirmEditTarget())}),Ue(),k(3,"svg",275),se(4,"path",276),T()(),bt(),k(5,"button",277),ne("shortPress",function(){Y(e);let n=O(4);return Q(n.cancelEditTarget())}),Ue(),k(6,"svg",275),se(7,"path",278),T()()()}if(r&2){let e=O(4);E(),No("ngModel",e.editingTargetValue)}}function JV(r,t){if(r&1&&(k(0,"div",268)(1,"label",269),L(2,"Target Weight"),T(),te(3,QV,3,3,"div",270)(4,ZV,8,1,"div",271),T()),r&2){let e=O(3);E(3),D("ngIf",e.editingTarget!=="weight"),E(),D("ngIf",e.editingTarget==="weight")}}function eW(r,t){if(r&1){let e=me();k(0,"div",272),ne("shortPress",function(){Y(e);let n=O(4);return Q(n.startEditTarget("duration"))}),L(1),k(2,"span",279),L(3,"s"),T()()}if(r&2){let e=O(2).ngIf;E(),fe(" ",e.setData.duration)}}function tW(r,t){if(r&1){let e=me();k(0,"div",20)(1,"input",273),Po("ngModelChange",function(n){Y(e);let i=O(4);return Ro(i.editingTargetValue,n)||(i.editingTargetValue=n),Q(n)}),ne("keyup.enter",function(){Y(e);let n=O(4);return Q(n.confirmEditTarget())})("keyup.escape",function(){Y(e);let n=O(4);return Q(n.cancelEditTarget())}),T(),k(2,"button",274),ne("shortPress",function(){Y(e);let n=O(4);return Q(n.confirmEditTarget())}),Ue(),k(3,"svg",275),se(4,"path",276),T()(),bt(),k(5,"button",277),ne("shortPress",function(){Y(e);let n=O(4);return Q(n.cancelEditTarget())}),Ue(),k(6,"svg",275),se(7,"path",278),T()()()}if(r&2){let e=O(4);E(),No("ngModel",e.editingTargetValue)}}function rW(r,t){if(r&1&&(k(0,"div",268)(1,"label",269),L(2,"Target Time"),T(),te(3,eW,4,1,"div",270)(4,tW,8,1,"div",271),T()),r&2){let e=O(3);E(3),D("ngIf",e.editingTarget!=="duration"),E(),D("ngIf",e.editingTarget==="duration")}}function oW(r,t){if(r&1&&(k(0,"div",268)(1,"label",269),L(2,"Target Tempo"),T(),k(3,"span",280),L(4),T()()),r&2){let e=O().ngIf;E(4),Oe(e.setData.tempo)}}function nW(r,t){if(r&1&&(k(0,"div",281)(1,"p",282)(2,"span",247),se(3,"app-icon",283),L(4," Planned Notes for this Set: "),T()(),k(5,"p",284),L(6),T()()),r&2){let e=O().ngIf;E(6),Oe(e.setData.notes)}}function iW(r,t){if(r&1){let e=me();k(0,"div",211)(1,"div",212)(2,"button",213),ne("shortPress",function(){Y(e);let n=O(2);return Q(n.toggleCompletedSetsForExerciseInfo())}),k(3,"span",214),se(4,"app-icon",215),L(5),T(),Ue(),k(6,"svg",216),se(7,"path",217),T()(),te(8,EV,2,1,"div",218)(9,NV,2,0,"div",219),T(),bt(),k(10,"div",212)(11,"button",213),ne("shortPress",function(){Y(e);let n=O(2);return Q(n.toggleCompletedSetsForDayInfo())}),k(12,"span",214),se(13,"app-icon",220),L(14),T(),Ue(),k(15,"svg",216),se(16,"path",217),T()(),te(17,OV,2,1,"div",221)(18,LV,2,0,"div",219),T(),te(19,UV,12,8,"div",222)(20,zV,2,0,"div",223)(21,qV,7,3,"div",224),bt(),k(22,"div",225)(23,"h4",226),L(24,"Set Targets:"),T(),k(25,"div",227),te(26,YV,5,2,"div",228)(27,JV,5,2,"div",228)(28,rW,5,2,"div",228)(29,oW,5,1,"div",228),T()(),te(30,nW,7,1,"div",229),T()}if(r&2){let e,o,n,i=t.ngIf,s=O(2);E(5),Ft(" This Exercise (",((e=s.currentBaseExercise())==null?null:e.name)||"Current",") - Completed Sets (",s.allPreviousLoggedSetsForCurrentExercise().length,") "),E(),D("ngClass",li(17,rw,s.showCompletedSetsForExerciseInfo())),E(2),D("ngIf",s.allPreviousLoggedSetsForCurrentExercise().length>0&&s.showCompletedSetsForExerciseInfo()),E(),D("ngIf",s.allPreviousLoggedSetsForCurrentExercise().length===0&&s.showCompletedSetsForExerciseInfo()),E(5),fe(" Today's Logged Sets (All Exercises) (",s.allPreviousLoggedSetsForCurrentSession().length,") "),E(),D("ngClass",li(19,rw,s.showCompletedSetsForDayInfo())),E(2),D("ngIf",s.allPreviousLoggedSetsForCurrentSession().length>0&&s.showCompletedSetsForDayInfo()),E(),D("ngIf",s.allPreviousLoggedSetsForCurrentSession().length===0&&s.showCompletedSetsForDayInfo()),E(),D("ngIf",s.trackingService.findPreviousSetPerformance(s.lastPerformanceForCurrentExercise,i.setData,i.setIndex)),E(),D("ngIf",!s.lastPerformanceForCurrentExercise&&s.activeSetInfo()&&!(!((o=s.activeSetInfo())==null||o.exerciseData==null||o.exerciseData.exerciseId==null)&&o.exerciseData.exerciseId.startsWith("custom-"))),E(),D("ngIf",s.exercisePBs().length>0||s.currentBaseExercise()&&!(!((n=s.currentBaseExercise())==null||n.id==null)&&n.id.startsWith("custom-"))),E(5),D("ngIf",i.setData.reps!==void 0),E(),D("ngIf",i.setData.weight!==void 0&&i.setData.weight!==null),E(),D("ngIf",i.setData.duration!==void 0),E(),D("ngIf",i.setData.tempo),E(),D("ngIf",i.setData.notes)}}function sW(r,t){if(r&1){let e=me();k(0,"div",197)(1,"div",198)(2,"header",199)(3,"div",200),Ue(),k(4,"svg",201),se(5,"path",202),T(),bt(),k(6,"h3",203),L(7,"Performance Insights & Targets"),T()(),k(8,"button",204),ne("shortPress",function(){Y(e);let n=O();return Q(n.closePerformanceInsights())}),Ue(),k(9,"svg",205),se(10,"path",206),T()()(),te(11,iW,31,21,"div",207),bt(),k(12,"footer",208)(13,"button",209),ne("shortPress",function(){Y(e);let n=O();return Q(n.closePerformanceInsights())}),se(14,"app-icon",210),L(15," DONE "),T()()()()}if(r&2){let e=O();E(11),D("ngIf",e.activeSetInfo())}}function aW(r,t){r&1&&(k(0,"div",285)(1,"p",286),L(2,"Loading workout player..."),T()())}function lW(r,t){if(r&1){let e=me();k(0,"app-modal",287),Po("isOpenChange",function(n){Y(e);let i=O();return Ro(i.isSimpleModalOpen,n)||(i.isSimpleModalOpen=n),Q(n)}),se(1,"app-exercise-detail",288),T()}if(r&2){let e=O();No("isOpen",e.isSimpleModalOpen),D("modalTitle",e.exerciseDetailsName),E(),D("id",e.exerciseDetailsId)("isModal",!0)}}var ow=(o=>(o.PerformingSet="performing_set",o.PresetCountdown="preset_countdown",o.Resting="resting",o))(ow||{}),xp=class r{route=$e(Ra);router=$e(ui);workoutService=$e(Ma);exerciseService=$e(fn);trackingService=$e(mi);alertService=$e(Oa);toastService=$e(La);fb=$e(qd);storageService=$e(Xd);cdr=$e(Ea);unitService=$e(fi);trainingProgramService=$e(Ba);appSettingsService=$e(JS);progressiveOverloadService=$e(VS);platformId=$e(Ia);routine=ge(void 0);program=ge(void 0);sessionState=ge("loading");PlayerSubState=ow;playerSubState=ge("performing_set");currentExerciseIndex=ge(0);currentSetIndex=ge(0);currentBlockRound=ge(1);totalBlockRounds=ge(1);myExerciseInput;showNotes=ge(!1);sessionTimerDisplay=ge("00:00");workoutStartTime=0;sessionTimerElapsedSecondsBeforePause=0;timerSub;timedSetTimerState=ge("idle");timedSetElapsedSeconds=ge(0);timedSetIntervalSub;soundPlayedForThisCountdownSegment=!1;presetTimerCountdownDisplay=ge(null);presetTimerDuration=ge(0);presetTimerSub;isRestTimerVisible=ge(!1);restDuration=ge(0);restTimerDisplay=ge(null);restTimerMainText=ge("RESTING");restTimerNextUpText=ge(null);nextActionButtonLabel=gt(()=>{switch(this.playerSubState()){case"preset_countdown":return"GETTING READY...";case"resting":return"RESTING...";case"performing_set":default:return"SET DONE"}});currentSetForm;lastPerformanceForCurrentExercise=null;editingTarget=null;editingTargetValue="";routineId=null;isExerciseAddModalOpen=ge(!1);availableExercises=[];modalSearchTerm=ge("");filteredAvailableExercises=gt(()=>{let t=this.modalSearchTerm().toLowerCase();return t?(t=this.exerciseService.normalizeExerciseNameForSearch(t),this.availableExercises.filter(e=>e.name.toLowerCase().includes(t)||e.category&&e.category.toLowerCase().includes(t)||e.primaryMuscleGroup&&e.primaryMuscleGroup.toLowerCase().includes(t))):this.availableExercises});PAUSED_WORKOUT_KEY="fitTrackPro_pausedWorkoutState";PAUSED_STATE_VERSION="1.2";originalRoutineSnapshot=[];currentWorkoutLogExercises=ge([]);wasRestTimerVisibleOnPause=!1;restTimerRemainingSecondsOnPause=0;restTimerInitialDurationOnPause=0;restTimerMainTextOnPause="RESTING";restTimerNextUpTextOnPause=null;wasTimedSetRunningOnPause=!1;autoSaveSub;AUTO_SAVE_INTERVAL_MS=8e3;isSessionConcluded=!1;routerEventsSub;isInitialLoadComplete=!1;exercisesProposedThisCycle={doLater:!1,skipped:!1};intervalListItems;isTabataMode=ge(!1);tabataIntervals=ge([]);currentTabataIntervalIndex=ge(0);tabataTimeRemaining=ge(0);currentTabataInterval=gt(()=>{let t=this.tabataIntervals(),e=this.currentTabataIntervalIndex();return t[e]||null});tabataIntervalMap=[];tabataTimerSub;HEADER_OVERVIEW_STRING="JUMP TO EXERCISE";headerOverviewString="JUMP TO EXERCISE";shouldStartWithPresetTimer=gt(()=>{let t=this.activeSetInfo();if(!t)return!1;let e=this.appSettingsService.enablePresetTimer(),o=this.appSettingsService.presetTimerDurationSeconds();if(!e||o<=0)return!1;let n=this.routine(),i=t.exerciseIndex,s=t.setIndex;if(!n||!n.exercises[i]||!n.exercises[i].sets[s])return!1;let a=i===0&&s===0&&this.currentBlockRound()===1,l=1/0;if(s>0)l=n.exercises[i].sets[s-1].restAfterSet;else if(i>0){let u=n.exercises[i-1];l=u.sets[u.sets.length-1].restAfterSet}return a||l===0});checkIfLatestOfEverything(){let t=this.checkIfLatestSetOfExercise(),e=this.checkIfLatestSetOfRound(),o=this.checkIfLatestRoundOfRounds();return this.checkIfLatestSetOfWorkoutConsideringPending()&&o&&t&&e}checkIfSuperSetIsStarted(){let t=this.routine()?.exercises,e=this.activeSetInfo()?.exerciseIndex,o=t&&e!==void 0?t[e]:void 0;return this.checkIfSetIsPartOfRounds()&&(e??0)>0}mainActionButtonLabel=gt(()=>{let t=this.activeSetInfo(),e=this.routine();switch(this.playerSubState()){case"preset_countdown":return`PREPARING... ${this.presetTimerCountdownDisplay()}s`;case"resting":return`RESTING: ${this.restTimerDisplay()}`;case"performing_set":if(!t)return"SET DONE";let o=this.checkIfLatestSetOfExercise(),n=this.checkIfLatestSetOfRound(),i=this.checkIfSetIsPartOfRounds(),s=this.checkIfLatestRoundOfRounds();return this.checkIfLatestSetOfWorkoutConsideringPending()&&s&&o&&n?"FINISH WORKOUT":i?n?s?"COMPLETE EXERCISE":"COMPLETE ROUND":"SET DONE":o?"COMPLETE EXERCISE":"SET DONE";default:return"SET DONE"}});destroy$=new bS;routeSub;rpeValue=ge(null);rpeOptions=Array.from({length:10},(t,e)=>e+1);showRpeSlider=ge(!1);timedSetDisplay=gt(()=>{let t=this.timedSetTimerState(),e=this.timedSetElapsedSeconds(),n=this.activeSetInfo()?.setData?.duration;return t==="idle"?(n!==void 0&&n>0?n:this.csf?.actualDuration?.value??0).toString():n!==void 0&&n>0?(n-e).toString():e.toString()});isTimedSetOvertime=gt(()=>{if(this.timedSetTimerState()==="idle")return!1;let e=this.timedSetElapsedSeconds(),o=this.activeSetInfo()?.setData?.duration;return o!==void 0&&o>0&&e>o});unloadNotification(t){this.closeWorkoutMenu(),this.sessionState()==="playing"&&this.routine()&&this.currentWorkoutLogExercises().length>0&&this.captureAndSaveStateForUnload()}get weightUnitDisplaySymbol(){return this.unitService.getUnitLabel()}getWorkingSetCountForCurrentExercise=gt(()=>{let t=this.routine(),e=this.currentExerciseIndex();return t&&t.exercises[e]?t.exercises[e].sets.filter(o=>o.type!=="warmup").length:0});getCurrentWorkingSetNumber=gt(()=>{let t=this.activeSetInfo(),e=this.routine();if(!t||!e||t.type==="warmup")return 0;let o=e.exercises[t.exerciseIndex],n=0;for(let i=0;i<=t.setIndex;i++)o.sets[i].type!=="warmup"&&n++;return n});getCurrentWarmupSetNumber=gt(()=>{let t=this.activeSetInfo(),e=this.routine();if(!t||!e||t.type!=="warmup")return 0;let o=e.exercises[t.exerciseIndex],n=0;for(let i=0;i<=t.setIndex;i++)o.sets[i].type==="warmup"&&n++;return n});getWorkingSets(t){return t.sets?t.sets.filter(e=>e.type!=="warmup").length:1}activeSetInfo=gt(()=>{let t=this.routine(),e=this.currentExerciseIndex(),o=this.currentSetIndex();if(t&&t.exercises[e]&&t.exercises[e].sets[o]){let n=t.exercises[e],i=t.exercises[e].sets[o],a=this.currentWorkoutLogExercises().find(u=>u.exerciseId===n.exerciseId)?.sets.find(u=>u.plannedSetId===i.id),l;return this.exerciseService.getExerciseById(n.exerciseId).subscribe(u=>{l=u}),{exerciseIndex:e,setIndex:o,exerciseData:n,setData:i,type:i.type??"standard",baseExerciseInfo:l,isCompleted:!!a,actualReps:a?.repsAchieved,actualWeight:a?.weightUsed,actualDuration:a?.durationPerformed,notes:a?.notes||i?.notes}}return null});currentBaseExercise=ge(void 0);exercisePBs=ge([]);allPreviousLoggedSetsForCurrentExercise=gt(()=>{let t=this.activeSetInfo();if(!t||t.setIndex===0)return[];let e=this.currentWorkoutLogExercises().find(o=>o.exerciseId===t.exerciseData.exerciseId);if(e&&e.sets.length>0){let o=[];for(let n=0;n<t.setIndex;n++){let i=t.exerciseData.sets[n]?.id;if(i){let s=e.sets.find(a=>a.plannedSetId===i);s&&o.push(s)}}return o}return[]});allPreviousLoggedSetsForCurrentSession=gt(()=>{let t=this.activeSetInfo();if(!t)return[];let e=[];for(let o of this.currentWorkoutLogExercises())for(let n of o.sets){let i=this.routine();if(!i)continue;let s=i.exercises.findIndex(c=>c.exerciseId===o.exerciseId),a=i.exercises.find(c=>c.exerciseId===o.exerciseId),l=a?.sets.find(c=>c.id===n.plannedSetId),u=l?a?.sets.findIndex(c=>c.id===l.id):-1;if(u!==void 0&&u>=0&&(n.plannedSetId=u+1+" of "+a?.sets.length),!(s<0)){if(s<t.exerciseIndex)e.push(n);else if(s===t.exerciseIndex){let c=i.exercises[s].sets.findIndex(p=>p.id===n.plannedSetId);c>-1&&c<t.setIndex&&e.push(n)}}}return e});isWorkoutMenuVisible=ge(!1);isPerformanceInsightsVisible=ge(!1);showCompletedSetsInfo=ge(!1);isPerformingDeferredExercise=!1;lastActivatedDeferredExerciseId=null;constructor(){this.initializeCurrentSetForm(),$S(()=>{let t=this.currentTabataIntervalIndex();this.intervalListItems&&this.intervalListItems.length>t&&this.intervalListItems.toArray()[t].nativeElement.scrollIntoView({behavior:"smooth",block:"start"})})}startSessionTimer(){this.sessionState()!=="paused"&&(this.timerSub&&this.timerSub.unsubscribe(),this.timerSub=mp(0,1e3).pipe(si(this.destroy$)).subscribe(()=>{if(this.sessionState()==="playing"){let t=Math.floor((Date.now()-this.workoutStartTime)/1e3),e=this.sessionTimerElapsedSecondsBeforePause+t,o=Math.floor(e/3600),n=Math.floor(e%3600/60),i=e%60;o>0?this.sessionTimerDisplay.set(`${o}:${String(n).padStart(2,"0")}:${String(i).padStart(2,"0")}`):this.sessionTimerDisplay.set(`${String(n).padStart(2,"0")}:${String(i).padStart(2,"0")}`)}}))}updateRestTimerDisplay(t){let e=Math.floor(t/60),o=t%60;this.restTimerDisplay.set(`${String(e).padStart(2,"0")}:${String(o).padStart(2,"0")}`)}addLoggedSetToCurrentLog(t,e){let o=this.currentWorkoutLogExercises(),n=this.routine()?.exercises.findIndex(a=>a.id===t.id),i,s=-1;for(let a=0;a<o.length;a++){let l=o[a],u=this.routine()?.exercises.find(c=>c.id===t.id);if(l.exerciseId===t.exerciseId&&u&&u.id===t.id&&u.id===l.id){i=l,s=a;break}}if(i){let a=i.sets.findIndex(l=>l.plannedSetId===e.plannedSetId);a>-1?i.sets[a]=e:i.sets.push(e)}else{let a=this.currentBaseExercise()?.name||t.exerciseName||"Unknown Exercise",l={id:t.id,exerciseId:t.exerciseId,exerciseName:a,sets:[e],rounds:t.rounds||0,type:e.type||"standard"};t.rounds&&t.rounds>0&&(l.supersetId=t.supersetId?t.supersetId:null,l.supersetOrder=t.supersetOrder!==null?t.supersetOrder:null,l.supersetSize=t.supersetSize!==null?t.supersetSize:null,l.supersetRounds=t.rounds!==null?t.rounds:null),typeof n=="number"&&n>=0&&n<=o.length?o.splice(n,0,l):o.push(l)}this.currentWorkoutLogExercises.set([...o])}finishWorkout(){return j(this,null,function*(){yield this.finishWorkoutAndReportStatus()})}comparePerformedToOriginal(t,e){let o=[],n=!1,i=e.filter(c=>t.some(p=>p.exerciseId===c.exerciseId)),s=new Set(e.map(c=>c.exerciseId)),a=new Set(e.map(c=>c.exerciseName)),l=[],u=[];for(let c of t)s.has(c.exerciseId)||a.has(c.exerciseName)?l.push(c):u.push(c);if((l.length!==e.length||u.length>0)&&(l.length!==e.length?o.push(`Number of exercises or their content changed [Original number exercises: ${e.length}, performed number exercises: ${l.length}]`):o.push(`Number of exercises or their content changed [Original number exercises: ${e.length}, performed number exercises: ${e.length+u.length}]`),n=!0),u.length>0)for(let c of u)o.push(`Exercise added: ${c.exerciseName} `);for(let c of e){let p=t.find(d=>d.exerciseId===c.exerciseId);if(!p){o.push(`Exercise "${c.exerciseName||c.exerciseId}" was in the plan but not performed`),n=!0;continue}if(p.sets.length!==c.sets.length&&p.rounds!==c.rounds)o.push(`Set count for "${p.exerciseName||p.exerciseId}" changed (was ${c.sets.length}, now ${p.sets.length})`),n=!0;else for(let d=0;d<p.sets.length;d++){let m=c.sets[d]?.type==="warmup",f=p.sets[d]?.type==="warmup";if(m!==f){o.push(`Warm-up status for set ${d+1} of "${p.exerciseName}" changed`),n=!0;break}}}return{majorDifference:n,details:o}}convertLoggedToWorkoutExercises(t){let e=this.routine();return t.map(o=>{let n=e?.exercises.find(s=>s.exerciseId===o.exerciseId);return{id:Wt(),exerciseId:o.exerciseId,exerciseName:o.exerciseName,supersetId:n?.supersetId||null,supersetOrder:n?.supersetOrder??null,supersetSize:n?.supersetSize??null,rounds:n?.rounds??1,notes:n?.notes,sets:o.sets.map(s=>{let a=n?.sets.find(l=>l.id===s.plannedSetId);return{id:Wt(),reps:s.targetReps??s.repsAchieved,weight:s.targetWeight??s.weightUsed,duration:s.targetDuration??s.durationPerformed,tempo:s.targetTempo||a?.tempo,restAfterSet:a?.restAfterSet||60,notes:s.notes,type:s.type}}),type:(n?.supersetSize??0)>=1?"superset":"standard"}})}get csf(){return this.currentSetForm.controls}toggleTimedSetTimer(){if(this.sessionState()==="paused"){this.toastService.warning("Session is paused. Please resume to use the timer",3e3,"Paused");return}let t=this.timedSetTimerState();t==="idle"||t==="paused"?this.startOrResumeTimedSet():t==="running"&&this.pauseTimedSet()}startOrResumeTimedSet(){if(this.timedSetTimerState()==="idle"){this.timedSetElapsedSeconds.set(0);let t=this.activeSetInfo()?.setData?.duration;t!==void 0&&t>0&&this.currentSetForm.get("actualDuration")?.setValue(t,{emitEvent:!1}),this.soundPlayedForThisCountdownSegment=!1}this.timedSetTimerState.set("running"),this.timedSetIntervalSub&&this.timedSetIntervalSub.unsubscribe(),this.timedSetIntervalSub=mp(0,1e3).pipe(si(this.destroy$)).subscribe(()=>{if(this.timedSetTimerState()==="running"){this.timedSetElapsedSeconds.update(s=>s+1);let t=this.timedSetElapsedSeconds();this.currentSetForm.get("actualDuration")?.setValue(t,{emitEvent:!1});let o=this.activeSetInfo()?.setData?.duration,n=this.appSettingsService.enableTimerCountdownSound(),i=this.appSettingsService.countdownSoundSeconds();if(n&&o&&o>20&&t>0){let s=o-t;s<=i&&s>=0&&(s===0?(this.playClientGong(),this.soundPlayedForThisCountdownSegment=!0):this.playClientBeep())}}else this.timedSetIntervalSub&&this.timedSetIntervalSub.unsubscribe()})}pauseTimedSet(){this.timedSetIntervalSub&&(this.timedSetIntervalSub.unsubscribe(),this.timedSetIntervalSub=void 0),this.timedSetTimerState.set("paused")}resetTimedSet(){this.timedSetIntervalSub&&(this.timedSetIntervalSub.unsubscribe(),this.timedSetIntervalSub=void 0),this.timedSetTimerState.set("idle"),this.timedSetElapsedSeconds.set(0);let t=this.activeSetInfo()?.setData?.duration;this.currentSetForm.get("actualDuration")?.setValue(t??0,{emitEvent:!1}),this.soundPlayedForThisCountdownSegment=!1}stopAndLogTimedSet(){(this.timedSetTimerState()==="running"||this.timedSetTimerState()==="paused")&&this.pauseTimedSet()}checkIfLatestSetOfExercise(){let t=this.activeSetInfo(),e=this.routine();if(!t||!e)return!1;if(t.exerciseData.sessionStatus&&t.exerciseData.sessionStatus!=="pending")return!0;let o=e.exercises[t.exerciseIndex];if(t.setIndex===o.sets.length-1)return!0;for(let n=t.setIndex+1;n<o.sets.length;n++)if(o.sets[n].type!=="warmup")return!1;return!0}checkIfLatestSetOfRound(){let t=this.activeSetInfo(),e=this.routine();if(!t||!e)return!1;let o=e.exercises[t.exerciseIndex];if(!o.supersetId&&(!o.rounds||o.rounds<=1))return this.checkIfLatestSetOfExercise();let n=t.exerciseIndex,i=t.exerciseIndex;return o.supersetId&&o.supersetOrder!==null&&(n=t.exerciseIndex-o.supersetOrder,i=n+(o.supersetSize?o.supersetSize-1:0)),t.exerciseIndex===i&&t.setIndex===e.exercises[i].sets.length-1}checkIfLatestRoundOfRounds(){let t=this.routine(),e=this.activeSetInfo();if(!t||!e)return!1;let o=t.exercises[e.exerciseIndex];if(!o)return!1;let n=o.rounds??1;return o.supersetId&&o.supersetOrder!==null&&(n=t.exercises.find(s=>s.supersetId===o.supersetId&&s.supersetOrder===0)?.rounds??1),this.currentBlockRound()===n}checkIfSetIsPartOfRounds(){let t=this.activeSetInfo(),e=this.routine();if(!t||!e)return!1;let o=e.exercises[t.exerciseIndex];if(!o)return!1;let n=1;return o.supersetId?n=e.exercises.find(s=>s.supersetId===o.supersetId&&s.supersetOrder===0)?.rounds??1:n=o.rounds??1,n>1}checkIfLatestSetOfWorkout(){return this.checkIfLatestSetOfWorkoutConsideringPending()}checkIfLatestSetOfWorkoutConsideringPending(){let t=this.activeSetInfo(),e=this.routine();if(!t||!e||!this.checkIfLatestSetOfExercise()||this.checkIfSetIsPartOfRounds()&&!this.checkIfLatestRoundOfRounds())return!1;let o=t.exerciseData,n=t.exerciseIndex;o.supersetId&&o.supersetOrder!==null&&o.supersetSize&&(n=t.exerciseIndex-o.supersetOrder+(o.supersetSize-1));for(let s=n+1;s<e.exercises.length;s++){let a=e.exercises[s];if(a.sessionStatus==="pending"&&(a.sets?.length??0)>0)return!1}return!e.exercises.some(s=>(s.sessionStatus==="do_later"||s.sessionStatus==="skipped")&&!this.isExerciseFullyLogged(s))}getUnfinishedOrDeferredExercises(t){let e=t.exercises[this.currentExerciseIndex()],o=this.getUnfinishedExercises().filter(a=>a.id!==e.id),n=t.exercises.map((a,l)=>qt(Vt({},a),{originalIndex:l})).filter((a,l)=>(a.sessionStatus==="do_later"||a.sessionStatus==="skipped")&&!this.isExerciseFullyLogged(a)).sort((a,l)=>a.sessionStatus==="do_later"&&l.sessionStatus==="skipped"?-1:a.sessionStatus==="skipped"&&l.sessionStatus==="do_later"?1:a.originalIndex-l.originalIndex),i=o.map((a,l)=>qt(Vt({},a),{originalIndex:t.exercises.findIndex(u=>u.id===a.id)})),s=[...n,...i].filter((a,l,u)=>u.findIndex(c=>c.id===a.id)===l);return s.sort((a,l)=>{let u=t.exercises.findIndex(p=>p.id===a.id),c=t.exercises.findIndex(p=>p.id===l.id);return u-c}),s}tryProceedToDeferredExercisesOrFinish(t){return j(this,null,function*(){let e=this.getUnfinishedOrDeferredExercises(t);if(e.length>0){let n=!1,i,s=!1,a=!1;if(e.length===1){let l=e[0],u=yield this.alertService.showConfirmationDialog(`Unfinished: ${l.exerciseName}`,`You have "${l.exerciseName}" (${l.sessionStatus==="do_later"?"Do Later":"Skipped"}) remaining. Complete it now?`,[{text:"Complete It",role:"confirm",data:l.originalIndex,cssClass:"bg-blue-500 hover:bg-blue-600 text-white"},{text:"Finish Workout",role:"destructive",data:"finish_now",cssClass:"bg-green-500 hover:bg-green-600 text-white"}]);u&&typeof u.data=="number"?(n=!0,i=u.data):u&&u.data==="finish_now"?s=!0:a=!0}else{let u=[...e.map(p=>{let d=this.getExerciseStatusIndicator(p),m=this.getExerciseButtonCssClass(p,p.sessionStatus);return{text:`${p.exerciseName} ${d}`,role:"confirm",data:p.originalIndex,cssClass:m}}),{text:"Finish Workout Now",role:"destructive",data:"finish_now",cssClass:"bg-green-500 hover:bg-green-600 text-white mt-4"}],c=yield this.alertService.showConfirmationDialog("Unfinished Exercises","You have unfinished exercises. Would you like to complete any of them now, or finish the workout?",u);c&&typeof c.data=="number"?(n=!0,i=c.data):c&&c.data==="finish_now"?s=!0:a=!0}if(s){yield this.finishWorkoutAndReportStatus();return}if(a){e.forEach(l=>{l.sessionStatus==="do_later"&&(this.exercisesProposedThisCycle.doLater=!0),l.sessionStatus==="skipped"&&(this.exercisesProposedThisCycle.skipped=!0)}),this.cdr.detectChanges();return}if(n&&i!==void 0){let l=t.exercises[i];this.isPerformingDeferredExercise=!0,this.lastActivatedDeferredExerciseId=l.id;let u=JSON.parse(JSON.stringify(t));u.exercises[i].sessionStatus="pending",this.routine.set(u),this.currentExerciseIndex.set(i),this.currentSetIndex.set(this.findFirstUnloggedSetIndex(l.id,l.sets.map(p=>p.id))||0),this.currentBlockRound.set(1);let c=u.exercises[i];if(!c.supersetId||c.supersetOrder===0)this.totalBlockRounds.set(c.rounds??1);else{let p=u.exercises.find(d=>d.supersetId===c.supersetId&&d.supersetOrder===0);this.totalBlockRounds.set(p?.rounds??1)}this.lastPerformanceForCurrentExercise=null,this.playerSubState.set("performing_set"),yield this.prepareCurrentSet();return}}let o=yield this.alertService.showConfirmationDialog("Continue or End","The current session is finished! Would you like to add a new exercise or complete it?",[{text:"Add exercise",role:"add_exercise",data:"add_exercise",cssClass:"bg-primary hover:bg-primary-dark text-white",icon:"plus-circle",iconClass:"h-8 w-8 mr-1"},{text:"End session",role:"end_session",data:"end_session",cssClass:"bg-blue-500 hover:bg-blue-600 text-white",icon:"done",iconClass:"h-8 w-8 mr-1"}]);o&&o.role==="end_session"?yield this.finishWorkoutAndReportStatus():(this.isEndReached.set(!0),this.openExerciseSelectionModal())})}getNumberOfLoggedSets(t,e){let o=this.currentWorkoutLogExercises().find(n=>n.id===t);return o?e?o.sets?o.sets.filter(n=>n.type!==e).length:1:o.sets?.length||0:0}isExercisePartiallyLogged(t){let e=this.routine();if(!e)return!1;let o=e.exercises.find(a=>a.exerciseId===t.exerciseId&&a.id===t.id);if(!o)return!1;let n=this.currentWorkoutLogExercises().find(a=>a.exerciseId===t.exerciseId&&o.exerciseId===a.exerciseId&&a.id===t.id);if(!n||n.sets.length===0)return!1;let i=o.rounds??1;o.supersetId&&o.supersetOrder!==null&&(i=e.exercises.find(l=>l.supersetId===o.supersetId&&l.supersetOrder===0)?.rounds??1);let s=(o.sets?.length??0)*i;return n.sets.length<s}isExerciseFullyLogged(t){let e=this.routine();if(!e)return!1;let o=e.exercises.find(a=>a.id===t.id);if(!o)return!1;let n=this.currentWorkoutLogExercises().find(a=>a.id===t.id&&o.exerciseId===a.exerciseId);if(!n)return!1;let i=o.rounds??1;o.supersetId&&o.supersetOrder!==null&&(i=e.exercises.find(l=>l.supersetId===o.supersetId&&l.supersetOrder===0)?.rounds??1);let s=(o.sets?.length??0)*i;return n.sets.length>=s}findFirstUnloggedSetIndex(t,e){let o=this.currentWorkoutLogExercises().find(i=>i.id===t);if(!o)return 0;let n=new Set(o.sets.map(i=>i.plannedSetId));for(let i=0;i<e.length;i++)if(!n.has(e[i]))return i;return null}fetchLastPerformanceAndPatchForm(){return j(this,null,function*(){yield this.prepareCurrentSet()})}patchCurrentSetFormWithData(t){this.patchActualsFormBasedOnSessionTargets()}startEditTarget(t){let e=this.activeSetInfo();if(e)switch(this.editingTarget=t,t){case"reps":this.editingTargetValue=e.setData.reps??"";break;case"weight":this.editingTargetValue=e.setData.weight??"";break;case"duration":this.editingTargetValue=e.setData.duration??"";break}}cancelEditTarget(){this.editingTarget=null,this.editingTargetValue=""}formatPbValue(t){let e="";return t.weightUsed!==void 0&&t.weightUsed!==null?(e+=`${t.weightUsed}${this.unitService.getUnitSuffix()}`,t.repsAchieved>1&&!t.pbType.includes("RM (Actual)")&&(e+=` x ${t.repsAchieved}`)):t.repsAchieved>0&&t.pbType.includes("Max Reps")?e=`${t.repsAchieved} reps`:t.durationPerformed&&t.durationPerformed>0&&t.pbType.includes("Max Duration")&&(e=`${t.durationPerformed}s`),e||"N/A"}initializeCurrentSetForm(){this.currentSetForm=this.fb.group({actualReps:[null,[lt.min(0)]],actualWeight:[null,[lt.min(0)]],actualDuration:[null,[lt.min(0)]],setNotes:[""],rpe:[null,[lt.min(1),lt.max(10)]]})}isEntireWorkoutFullyLogged(t,e){return t.exercises.length!==e.length?!1:t.exercises.every(o=>{let n=e.find(s=>s.id===o.id);if(!n)return!1;let i=(o.sets?.length??0)*(o.rounds??1);return n.sets.length>=i})}prepareCurrentSet(){return j(this,null,function*(){if(this.showNotes.set(!1),console.log("prepareCurrentSet: START"),this.sessionState()==="paused"){console.log("prepareCurrentSet: Session is paused, deferring preparation");return}let t=this.routine();if(!t||t.exercises.length===0){console.warn("prepareCurrentSet: No sessionRoutine or no exercises in routine. Current routine:",t),this.sessionState.set("error"),this.toastService.error("Cannot prepare set: Routine data is missing or empty",0,"Error");return}let e=this.currentExerciseIndex(),o=this.currentSetIndex();if(console.log(`prepareCurrentSet: Initial target - exIndex: ${e}, sIndex: ${o}, sessionStatus: ${t.exercises[e]?.sessionStatus}`),t.exercises[e]?.sessionStatus!=="pending"){console.log(`prepareCurrentSet: Initial target Ex ${e} (name: ${t.exercises[e]?.exerciseName}) is ${t.exercises[e]?.sessionStatus}. Finding first 'pending'`);let y=this.findFirstPendingExerciseAndSet(t);if(y)e=y.exerciseIndex,o=y.setIndex,this.currentExerciseIndex.set(e),this.currentSetIndex.set(o),this.isPerformingDeferredExercise=!1,console.log(`prepareCurrentSet: Found first pending - exIndex: ${e} (name: ${t.exercises[e]?.exerciseName}), sIndex: ${o}`);else{console.log("prepareCurrentSet: No 'pending' exercises found in the entire routine. Proceeding to deferred/finish evaluation"),this.exercisesProposedThisCycle={doLater:!1,skipped:!1},yield this.tryProceedToDeferredExercisesOrFinish(t);return}}if(e>=t.exercises.length||!t.exercises[e]||o>=t.exercises[e].sets.length||!t.exercises[e].sets[o]){console.warn(`prepareCurrentSet: Indices [ex: ${e}, set: ${o}] are out of bounds. This is expected for a completed session. Transitioning to finish flow`),this.currentSetForm.reset({rpe:null,setNotes:""}),this.resetTimedSet(),this.currentBaseExercise.set(null),this.exercisePBs.set([]),this.lastPerformanceForCurrentExercise=null,this.rpeValue.set(null),this.showRpeSlider.set(!1),yield this.tryProceedToDeferredExercisesOrFinish(t);return}let n=!1;t.exercises.length===this.currentWorkoutLogExercises().length&&(n=!0),t.exercises.forEach(y=>{let b=this.currentWorkoutLogExercises().find(I=>I.id===y.id);!n&&b&&y.sets.length===b.sets.length&&(n=!0)});let i=t.exercises[e],s=i.sets[o];console.log(`prepareCurrentSet: Preparing for Ex: "${i.exerciseName}", Set: ${o+1}, Type: ${s.type}`);let l=(this.originalRoutineSnapshot.find(y=>y.exerciseId===i.exerciseId)||i)?.sets[o]||s;this.loadBaseExerciseAndPBs(i.exerciseId),(!this.lastPerformanceForCurrentExercise||this.lastPerformanceForCurrentExercise.sets[0]?.exerciseId!==i.exerciseId)&&(this.lastPerformanceForCurrentExercise=yield Eo(this.trackingService.getLastPerformanceForExercise(i.exerciseId).pipe(jt(1))));let u=this.trackingService.findPreviousSetPerformance(this.lastPerformanceForCurrentExercise,l,o),c;if(l.type==="warmup")c=Vt({},l);else{let y=this.progressiveOverloadService.getSettings();y&&y.enabled?c=this.workoutService.suggestNextSetParameters(u,l):(console.warn("prepareCurrentSet: Progressive overload settings are not available. Using default suggestion logic."),u?c=qt(Vt({},l),{reps:u.repsAchieved||l.reps||0,weight:u.weightUsed||l.weight||0,duration:u.durationPerformed||l.duration||0,restAfterSet:l.restAfterSet||0}):c=qt(Vt({},l),{reps:l.reps||0,weight:l.weight||0,duration:l.duration||0,restAfterSet:l.restAfterSet||0}))}c.id=s.id,c.type=s.type,c.notes=s.notes||c.notes;let p=JSON.parse(JSON.stringify(t));p.exercises[e].sets?.some(y=>y.duration)||(p.exercises[e].sets[o]=c),this.routine.set(p),this.patchActualsFormBasedOnSessionTargets();let d=this.appSettingsService.enablePresetTimer(),m=this.appSettingsService.presetTimerDurationSeconds(),f=this.currentWorkoutLogExercises().length===0&&this.currentBlockRound()===1&&e===this.findFirstPendingExerciseAndSet(t)?.exerciseIndex&&o===this.findFirstPendingExerciseAndSet(t)?.setIndex,g=1/0;if(o>0)g=i.sets[o-1].restAfterSet;else if(e>0){let y=e-1,b=!1;for(;y>=0;){if(this.isExerciseFullyLogged(t.exercises[y])||t.exercises[y].sessionStatus==="pending"&&this.currentWorkoutLogExercises().some(I=>I.exerciseId===t.exercises[y].exerciseId)){let I=t.exercises[y];I.sets.length>0&&(g=I.sets[I.sets.length-1].restAfterSet,b=!0);break}y--}b||(g=1/0)}if(d&&m>0&&this.playerSubState()!=="resting"){console.log("prepareCurrentSet: Starting pre-set timer for:",i.exerciseName,"Set:",o+1),this.playerSubState.set("preset_countdown");let y=this.activeSetInfo();y?this.startPresetTimer(m,y):(console.error("prepareCurrentSet: ActiveSetInfo is null before starting preset timer. Aborting preset"),this.playerSubState.set("performing_set"))}else console.log("prepareCurrentSet: No pre-set timer, setting to PerformingSet for:",i.exerciseName,"Set:",o+1),this.playerSubState.set("performing_set");this.sessionState()!=="playing"&&this.sessionState()!=="paused"&&(console.log("prepareCurrentSet: Setting sessionState to Playing"),this.sessionState.set("playing")),console.log("prepareCurrentSet: END")})}findFirstPendingExerciseAndSet(t){if(!t||!t.exercises)return null;for(let e=0;e<t.exercises.length;e++){let o=t.exercises[e];if(o.sessionStatus==="pending"&&o.sets&&o.sets.length>0){let n=this.findFirstUnloggedSetIndex(o.id,o.sets.map(i=>i.id))??0;if(n<o.sets.length)return{exerciseIndex:e,setIndex:n};console.warn(`Exercise ${o.exerciseName} is pending, but all sets appear logged or index is invalid`)}}return null}patchActualsFormBasedOnSessionTargets(){if(this.sessionState()==="paused"){console.log("patchActualsFormBasedOnSessionTargets: Session is paused, deferring preparation");return}this.currentSetForm.patchValue({rpe:null},{emitEvent:!1}),this.rpeValue.set(null),this.showRpeSlider.set(!1),this.resetTimedSet();let t=this.activeSetInfo();if(!t)return;let o=this.currentWorkoutLogExercises().find(s=>s.exerciseId===t.exerciseData.exerciseId)?.sets.find(s=>s.plannedSetId===t.setData.id),n=t.setData.duration??null;o&&o.durationPerformed!==void 0&&(n=o.durationPerformed);let i=t.setData.weight;if(i==null){let a=(this.currentWorkoutLogExercises().find(l=>l.exerciseId===t.exerciseData.exerciseId)?.sets||[]).filter(l=>{let u=t.exerciseData.sets.find(c=>c.id===l.plannedSetId);return u&&t.exerciseData.sets.indexOf(u)<t.setIndex}).sort((l,u)=>t.exerciseData.sets.findIndex(c=>c.id===l.plannedSetId)-t.exerciseData.sets.findIndex(c=>c.id===u.plannedSetId));if(a.length>0){let l=a[a.length-1];l.weightUsed!==null&&l.weightUsed!==void 0&&(i=l.weightUsed,t.type)}else t.type==="warmup"&&(t.setData.weight===null||t.setData.weight===void 0)&&(i=t.setData.weight??null)}o?(this.currentSetForm.patchValue({actualReps:o.repsAchieved,actualWeight:o.weightUsed,actualDuration:n,setNotes:o.notes??"",rpe:o.rpe},{emitEvent:!1}),o.rpe&&this.rpeValue.set(o.rpe)):this.currentSetForm.patchValue({actualReps:t.setData.reps??(t.type==="warmup"?8:null),actualWeight:i??null,actualDuration:n,setNotes:t.setData.notes||(t.type==="warmup"?"Warm-up":""),rpe:null},{emitEvent:!1})}editRepsWithPrompt(){return j(this,null,function*(){if(this.getDisabled()||this.playerSubState()!=="performing_set"){this.toastService.warning("Cannot edit reps now",2e3);return}if(!this.activeSetInfo())return;let e=this.csf.actualReps.value,o=yield this.alertService.showPromptDialog("Enter Reps","",[{name:"newReps",type:"number",placeholder:`Current: ${e??"0"}`,value:e??void 0,autofocus:!0,attributes:{step:.5,min:"0",inputmode:"decimal"}}],"Set Reps");if(o&&o.newReps!==void 0&&o.newReps!==null){let n=parseFloat(String(o.newReps));!isNaN(n)&&n>=0?this.currentSetForm.patchValue({actualReps:n}):this.toastService.error("Invalid reps entered",3e3,"Error")}})}editWeightWithPrompt(){return j(this,null,function*(){if(this.getDisabled()||this.playerSubState()!=="performing_set"){this.toastService.warning("Cannot edit weight now",2e3);return}if(!this.activeSetInfo())return;let e=this.csf.actualWeight.value,o=yield this.alertService.showPromptDialog("Enter Weight","",[{name:"newWeight",type:"number",autofocus:!0,placeholder:`Current: ${e??"0"} ${this.weightUnitDisplaySymbol}`,value:e??void 0,attributes:{step:.5,min:"0",inputmode:"decimal"}}],"Set Weight");if(o&&o.newWeight!==void 0&&o.newWeight!==null){let n=parseFloat(String(o.newWeight));!isNaN(n)&&n>=0?this.currentSetForm.patchValue({actualWeight:n}):this.toastService.error("Invalid weight entered",3e3,"Error")}})}loadBaseExerciseAndPBs(t){if(t.startsWith("custom-exercise-")){this.currentBaseExercise.set({id:t,name:this.activeSetInfo()?.exerciseData.exerciseName||"Custom Exercise",category:"custom",description:"",iconName:"custom-exercise",muscleGroups:[],primaryMuscleGroup:"",equipment:"",imageUrls:[]}),this.exercisePBs.set([]);return}this.currentBaseExercise.set(void 0),this.exercisePBs.set([]),this.exerciseService.getExerciseById(t).subscribe(e=>{this.currentBaseExercise.set(e?qt(Vt({},e),{iconName:this.exerciseService.determineExerciseIcon(e,e?.name)}):null)}),this.trackingService.getAllPersonalBestsForExercise(t).pipe(jt(1)).subscribe(e=>this.exercisePBs.set(e))}confirmEditTarget(){let t=this.activeSetInfo();if(!t||this.editingTarget===null)return;let e=parseFloat(this.editingTargetValue);if(isNaN(e)||e<0){this.toastService.error(`Invalid value for ${this.editingTarget}. Must be non-negative.`,3e3,"Input Error");return}let o=this.routine,n=o();if(!n)return;let i=JSON.parse(JSON.stringify(n)),a=i.exercises[t.exerciseIndex].sets[t.setIndex];switch(this.editingTarget){case"reps":a.reps=e;break;case"weight":a.weight=e;break;case"duration":a.duration=e;break}o.set(i),this.toastService.success(`Target ${this.editingTarget} updated to ${e}.`,3e3,"Target Updated"),this.cancelEditTarget(),this.patchActualsFormBasedOnSessionTargets()}completeAndLogCurrentSet(){let t=this.activeSetInfo(),e=this.routine();if(!t||!e){this.toastService.error("Cannot log set: data unavailable",0);return}if(t.setData.duration&&t.setData.duration>0&&(this.timedSetTimerState()==="running"||this.timedSetTimerState()==="paused")&&this.stopAndLogTimedSet(),this.soundPlayedForThisCountdownSegment=!1,this.currentSetForm.invalid){this.currentSetForm.markAllAsTouched();let s="";for(let a of Object.keys(this.currentSetForm.controls))if(this.currentSetForm.controls[a].invalid){s=a;break}this.toastService.error(`Please correct input: ${s?s+" is invalid":"form invalid"}`,0,"Validation Error");return}let o=this.currentSetForm.value,n=o.actualDuration;t.setData.duration&&t.setData.duration>0&&this.timedSetElapsedSeconds()>0?n=this.timedSetElapsedSeconds():o.actualDuration===null&&t.setData.duration&&(n=t.setData.duration);let i={id:Wt(),exerciseName:t.exerciseData.exerciseName,plannedSetId:this.isTabataMode()||t.exerciseData&&t.exerciseData.supersetId?`${t.setData.id}-round-${this.getIndexedCurrentBlock()}`:t.setData.id,exerciseId:t.exerciseData.exerciseId,type:t.setData.type,repsAchieved:o.actualReps??(t.setData.type==="warmup"?0:t.setData.reps??0),weightUsed:o.actualWeight??(t.setData.type==="warmup"?null:t.setData.weight),durationPerformed:n,rpe:o.rpe??void 0,targetReps:t.setData.reps,targetWeight:t.setData.weight,targetDuration:t.setData.duration,targetTempo:t.setData.tempo,targetRestAfterSet:t.setData.restAfterSet,notes:o.setNotes?.trim()||void 0,timestamp:new Date().toISOString(),supersetCurrentRound:this.checkIfSetIsPartOfRounds()||this.isTabataMode()?this.getIndexedCurrentBlock():0};this.addLoggedSetToCurrentLog(t.exerciseData,i),this.sessionState()==="playing"&&this.captureAndSaveStateForUnload(),this.rpeValue.set(null),this.showRpeSlider.set(!1),this.editingTarget=null,this.currentSetForm.patchValue({setNotes:""},{emitEvent:!1}),this.isTabataMode()||this.navigateToNextStepInWorkout(t,e)}getIndexedCurrentBlock(){return(this.currentBlockRound()??1)-1}setPlayerStateFromTabataIndex(t){this.currentTabataIntervalIndex.set(t);let e=this.tabataIntervalMap[t];if(e){let[o,n,i]=e;this.currentExerciseIndex.set(o),this.currentSetIndex.set(n),this.currentBlockRound.set(i),this.routine()&&this.totalBlockRounds.set(this.getRoundsForExerciseBlock(o,this.routine())),console.log(`Tabata Sync: Interval ${t} maps to Ex ${o}, Set ${n}, Round ${i}`)}else{let o=this.tabataIntervalMap[this.tabataIntervalMap.length-1];if(o){let[n,i,s]=o;this.currentExerciseIndex.set(n),this.currentSetIndex.set(i),this.currentBlockRound.set(s),this.routine()&&this.totalBlockRounds.set(this.getRoundsForExerciseBlock(n,this.routine()))}}}findNextExerciseBlockStartIndex(t,e){for(let o=t+1;o<e.exercises.length;o++){let n=e.exercises[o];if(n.sessionStatus==="pending"&&(!n.supersetId||n.supersetOrder===0))return o}return-1}getRoundInfo(t){let e=t.rounds??1;return t.supersetId&&t.supersetOrder!==null&&(e=this.routine()?.exercises.find(i=>i.supersetId===t.supersetId&&i.supersetOrder===0)?.rounds??1),{round:this.currentBlockRound?this.currentBlockRound():1,totalRounds:e}}getCurrentUpText(){let t=this.activeSetInfo();if(!t)return"Current Exercise";let{exerciseData:e,setIndex:o,type:n}=t,i=e.exerciseName||"Unnamed Exercise",s,a,l;n==="warmup"?(s="Warm-up",a=this.getWarmupSetNumberForDisplay(e,o),l=this.getTotalWarmupSetsForExercise(e)):(s="Set",a=this.getWorkingSetNumberForDisplay(e,o),l=this.getWorkingSetCountForExercise(e));let{round:u,totalRounds:c}=this.getRoundInfo(e),p=c>1?` (Round ${u}/${c})`:"",d=t.setData.weight?`, ${t.setData.weight} ${this.weightUnitDisplaySymbol}`:"",m=t.setData.duration?`, ${t.setData.duration} seconds`:"";return`${s} ${a}/${l} of ${i}${p}${d}${m}`}getNextUpText(t,e){if(!t||!e)return"Next Set/Exercise";let o=e.exercises,n=t.exerciseIndex,i=t.setIndex,s=(m,f)=>{let g=this.currentWorkoutLogExercises().find(b=>b.exerciseId===m.exerciseId&&e.exercises[f].id===m.id),x=(m.sets?.length??0)*(m.rounds??1),y=g?.sets?.length??0;return m.sessionStatus==="pending"&&y<x},a=o[n];if(a){if(i+1<a.sets.length){let m=a.sets[i+1],f=1;m.type==="warmup"?f=a.sets.slice(0,i+2).filter(I=>I.type==="warmup").length:f=a.sets.slice(0,i+2).filter(I=>I.type!=="warmup").length;let g=m.type==="warmup"?"Warm-up":"Set",{round:x,totalRounds:y}=this.getRoundInfo(a),b=y>1?` (Round ${x}/${y})`:"";return`${g} ${f}/${a.sets.length} of ${a.exerciseName}${b}`}for(let m=n+1;m<o.length;m++){let f=o[m];if(s(f,m)){let x=f.sets[0].type==="warmup"?"Warm-up":"Set",y=1,{round:b,totalRounds:I}=this.getRoundInfo(f),N=I>1?` (Round ${b}/${I})`:"";return`${x} ${y} of ${f.exerciseName}${N}`}}}if(o.some(m=>m.sessionStatus==="do_later"&&!this.exercisesProposedThisCycle.doLater))return"Do Later Exercises";if(o.some(m=>m.sessionStatus==="skipped"&&!this.exercisesProposedThisCycle.skipped))return"Skipped Exercises";let{round:c,totalRounds:p}=this.getRoundInfo(a);if(p>1&&c<p){let m="";if(a.supersetId&&a.supersetOrder!==null){let f=o.filter(x=>x.supersetId===a.supersetId),g=a.supersetOrder??0;g+1<f.length?m=f[g+1].exerciseName||"":m=f[0].exerciseName||""}else m=a.exerciseName||"";return`Complete Round ${c}/${p}${m?` [Next exercise: ${m}]`:""}${a.sets?.length?` (${a.sets.length} sets)`:""}`}let d=this.getUnfinishedOrDeferredExercises(e);if(d.length>0){let m=t.exerciseIndex,f=d.slice().sort((x,y)=>x.originalIndex-y.originalIndex),g=f.find(x=>x.originalIndex>m)??f[0];if(g){let x="";switch(g.sessionStatus){case"do_later":x="Do Later";break;case"skipped":x="Skipped";break;case"pending":x="Pending";break;default:x=g.sessionStatus||""}return`Next: ${g.exerciseName} (${x})`}}return p>=1?"":"Complete"}skipRest(){if(this.sessionState()==="paused"){this.toastService.warning("Session is paused. Resume to skip rest",3e3,"Paused");return}(this.isRestTimerVisible()||this.playerSubState()==="resting")&&this.handleRestTimerSkipped(null)}pauseSession(){return j(this,null,function*(){this.sessionState()==="playing"&&(this.isPerformanceInsightsVisible.set(!1),this.closeWorkoutMenu(),this.sessionTimerElapsedSecondsBeforePause+=Math.floor((Date.now()-this.workoutStartTime)/1e3),this.timerSub&&this.timerSub.unsubscribe(),this.wasTimedSetRunningOnPause=this.timedSetTimerState()==="running",this.timedSetTimerState()==="running"&&this.pauseTimedSet(),this.wasRestTimerVisibleOnPause=this.isRestTimerVisible(),this.wasRestTimerVisibleOnPause&&(this.restTimerRemainingSecondsOnPause=this.restDuration(),this.restTimerInitialDurationOnPause=this.restDuration(),this.restTimerMainTextOnPause=this.restTimerMainText(),this.restTimerNextUpTextOnPause=this.restTimerNextUpText(),this.isRestTimerVisible.set(!1)),this.stopAutoSave(),this.sessionState.set("paused"),this.savePausedSessionState(),this.toastService.info("Workout Paused",3e3))})}loadStateFromPausedSession(t){return j(this,null,function*(){if(this.routineId=t.routineId,this.routine.set(t.sessionRoutine),this.currentWorkoutLogExercises.set(t.currentWorkoutLogExercises),this.isEntireWorkoutFullyLogged(t.sessionRoutine,t.currentWorkoutLogExercises)){console.log("Paused session is already fully logged. Transitioning directly to finish flow"),this.sessionState.set("end"),yield this.tryProceedToDeferredExercisesOrFinish(t.sessionRoutine);return}if(t.isTabataMode){console.log("Resuming a paused Tabata session"),this.sessionState.set("playing"),this.workoutStartTime=Date.now(),this.sessionTimerElapsedSecondsBeforePause=t.sessionTimerElapsedSecondsBeforePause,this.setupTabataMode(t.sessionRoutine,t.tabataCurrentIntervalIndex,t.tabataTimeRemainingOnPause),this.startSessionTimer(),this.toastService.success("Tabata session resumed",3e3,"Resumed");return}this.originalRoutineSnapshot=t.originalRoutineSnapshot?JSON.parse(JSON.stringify(t.originalRoutineSnapshot)):[],this.currentExerciseIndex.set(t.currentExerciseIndex),this.currentSetIndex.set(t.currentSetIndex),this.workoutStartTime=Date.now(),this.sessionTimerElapsedSecondsBeforePause=t.sessionTimerElapsedSecondsBeforePause,this.currentBlockRound.set(t.currentBlockRound),this.totalBlockRounds.set(t.totalBlockRounds),this.timedSetTimerState.set(t.timedSetTimerState),this.timedSetElapsedSeconds.set(t.timedSetElapsedSeconds),this.wasTimedSetRunningOnPause=t.timedSetTimerState==="running"||t.timedSetTimerState==="paused",this.lastPerformanceForCurrentExercise=t.lastPerformanceForCurrentExercise,this.wasRestTimerVisibleOnPause=t.isRestTimerVisibleOnPause,this.restTimerRemainingSecondsOnPause=t.restTimerRemainingSecondsOnPause,this.restTimerInitialDurationOnPause=t.restTimerInitialDurationOnPause,this.restTimerMainTextOnPause=t.restTimerMainTextOnPause,this.restTimerNextUpTextOnPause=t.restTimerNextUpTextOnPause,this.exercisesProposedThisCycle={doLater:!1,skipped:!1},this.isPerformingDeferredExercise=!1,this.lastActivatedDeferredExerciseId=null,yield this.prepareCurrentSet(),this.sessionState()!=="error"&&this.routine()&&(this.sessionState.set("playing"),this.startSessionTimer(),this.startAutoSave()),(t.timedSetTimerState==="running"||t.timedSetTimerState==="paused")&&(this.startOrResumeTimedSet(),t.timedSetTimerState==="paused"&&this.pauseTimedSet()),this.wasRestTimerVisibleOnPause&&this.restTimerRemainingSecondsOnPause>0&&this.startRestPeriod(this.restTimerRemainingSecondsOnPause,!0),this.cdr.detectChanges(),this.toastService.success("Workout session resumed",3e3,"Resumed")})}savePausedSessionState(){if(this.sessionState()==="end"){this.stopAllActivity();return}let t=this.routine();if(!t){console.warn("Cannot save paused state: routine data is not available");return}let e=this.sessionTimerElapsedSecondsBeforePause;this.sessionState()==="playing"&&this.workoutStartTime>0&&(e+=Math.floor((Date.now()-this.workoutStartTime)/1e3));let o,n=this.currentWorkoutLogExercises()[0]?.sets[0]?.timestamp,i=n?new Date(n):this.workoutStartTime>0?new Date(this.workoutStartTime-this.sessionTimerElapsedSecondsBeforePause*1e3):new Date;o=Ot(i,"yyyy-MM-dd");let s={version:this.PAUSED_STATE_VERSION,routineId:this.routineId,sessionRoutine:JSON.parse(JSON.stringify(t)),originalRoutineSnapshot:JSON.parse(JSON.stringify(this.originalRoutineSnapshot)),currentExerciseIndex:this.currentExerciseIndex(),currentSetIndex:this.currentSetIndex(),currentWorkoutLogExercises:JSON.parse(JSON.stringify(this.currentWorkoutLogExercises())),workoutStartTimeOriginal:this.workoutStartTime,sessionTimerElapsedSecondsBeforePause:e,currentBlockRound:this.currentBlockRound(),totalBlockRounds:this.totalBlockRounds(),timedSetTimerState:this.timedSetTimerState(),timedSetElapsedSeconds:this.timedSetElapsedSeconds(),isResting:this.isRestTimerVisible(),isRestTimerVisibleOnPause:this.playerSubState()==="resting",restTimerRemainingSecondsOnPause:this.restDuration(),restTimerInitialDurationOnPause:this.restTimerInitialDurationOnPause,restTimerMainTextOnPause:this.restTimerMainText(),restTimerNextUpTextOnPause:this.restTimerNextUpText(),lastPerformanceForCurrentExercise:this.lastPerformanceForCurrentExercise?JSON.parse(JSON.stringify(this.lastPerformanceForCurrentExercise)):null,workoutDate:o,isTabataMode:this.isTabataMode()};this.isTabataMode()&&(s.tabataCurrentIntervalIndex=this.currentTabataIntervalIndex(),s.tabataTimeRemainingOnPause=this.tabataTimeRemaining()),this.storageService.setItem(this.PAUSED_WORKOUT_KEY,s),console.log("Paused session state saved",s)}captureAndSaveStateForUnload(){let t=this.sessionTimerElapsedSecondsBeforePause;this.sessionState()==="playing"&&this.workoutStartTime>0&&(t+=Math.floor((Date.now()-this.workoutStartTime)/1e3));let e=this.sessionTimerElapsedSecondsBeforePause;this.sessionTimerElapsedSecondsBeforePause=t,this.savePausedSessionState(),this.sessionTimerElapsedSecondsBeforePause=e,console.log("Session state attempt saved via beforeunload")}addWarmupSet(){return j(this,null,function*(){if(this.sessionState()==="paused"){this.toastService.warning("Session is paused. Resume to add warm-up",3e3,"Paused");return}let t=this.routine(),e=this.activeSetInfo();if(!t||!e){this.toastService.error("Cannot add warm-up: data unavailable",0,"Error");return}let o=t.exercises[e.exerciseIndex],n=o.sets.findIndex(c=>c.type!=="warmup"),i=o.supersetId&&o.supersetOrder!==null,s=e.setIndex===n&&n!==-1;if(i&&s){let c={id:`warmup-${Wt()}`,type:"warmup",reps:8,weight:0,duration:void 0,restAfterSet:30,notes:"Warm-up set"},p=JSON.parse(JSON.stringify(t)),d=e.exerciseIndex-(o.supersetOrder??0);d<0&&(d=0);let m={id:`warmup-ex-${Wt()}`,exerciseId:o.exerciseId,exerciseName:`${o.exerciseName} (Warm-up)`,sets:[c],rounds:1,supersetId:null,supersetOrder:null,supersetSize:null,sessionStatus:"pending",type:"standard"};this.addExerciseToCurrentRoutine(m,d),this.toastService.success("Warm-up set added as a separate exercise before superset",4e3,"Warm-up Added"),this.closeWorkoutMenu(),this.closePerformanceInsights();return}if(e.setIndex>0&&e.setIndex>n&&n!==-1){let c=yield this.alertService.showConfirm("Add Warm-up Set","You are past the first working set. Adding a warm-up set now will insert it before the current set. Continue?");if(!c||!c.data)return}let a={id:`warmup-${Wt()}`,type:"warmup",reps:8,weight:0,duration:void 0,restAfterSet:30,notes:"Warm-up set"},l=JSON.parse(JSON.stringify(t));l.exercises[e.exerciseIndex].sets.splice(e.setIndex,0,a),this.routine.set(l),this.toastService.success("Warm-up set added. Fill details & complete",4e3,"Warm-up Added"),yield this.prepareCurrentSet(),this.closeWorkoutMenu(),this.closePerformanceInsights()})}getSets(){let t=this.activeSetInfo(),e=t?.exerciseData.sets||[];return t?.setData.type==="warmup"?e.filter(o=>o.type!=="warmup"):e}getWarmUpSets(){let t=this.activeSetInfo(),e=t?.exerciseData.sets||[];return t?.setData.type==="warmup"?e.filter(o=>o.type==="warmup"):[]}getTotalWarmupSetsForCurrentExercise=gt(()=>{let t=this.routine(),e=this.currentExerciseIndex();return t&&t.exercises[e]?t.exercises[e].sets.filter(o=>o.type==="warmup").length:0});canAddWarmupSet=gt(()=>{let t=this.activeSetInfo(),e=this.routine();if(!t||!e||this.sessionState()==="paused")return!1;let o=e.exercises[t.exerciseIndex].sets;return!(this.currentWorkoutLogExercises().find(i=>i.exerciseId===t.exerciseData.exerciseId)?.sets.some(i=>i.plannedSetId===t.setData.id)&&t.type!=="warmup")});getIconPath(t){return this.exerciseService.getIconPath(t)}toggleWorkoutMenu(){this.sessionState()==="paused"&&!this.isWorkoutMenuVisible()||(this.isWorkoutMenuVisible.update(t=>!t),this.isWorkoutMenuVisible()&&this.isPerformanceInsightsVisible.set(!1))}closeWorkoutMenu(){this.isWorkoutMenuVisible.set(!1),window.scrollTo(0,0)}skipCurrentSet(){return j(this,null,function*(){if(this.sessionState()==="paused"){this.toastService.warning("Session is paused. Resume to skip set",3e3,"Paused");return}let t=this.activeSetInfo(),e=this.routine();if(!t||!e){this.toastService.error("Cannot skip set: No active set information",0,"Error");return}if(t.setIndex===t.exerciseData.sets.length-1&&t.exerciseData.sessionStatus==="pending"){let o=yield this.alertService.showConfirmationDialog("Last Set",`This is the last set of "${t.exerciseData.exerciseName}". Skip the entire exercise instead?`,[{text:"Skip Set Only",role:"cancel",data:"skip_set"},{text:"Skip Exercise",role:"confirm",data:"skip_exercise",cssClass:"bg-orange-500"}]);if(o&&o.data==="skip_exercise"){yield this.markCurrentExerciseStatus("skipped"),this.closeWorkoutMenu();return}else if(!o||o.role==="cancel"&&o.data!=="skip_set")return}else{let o=yield this.alertService.showConfirm("Skip Current Set",`Skip current ${t.type==="warmup"?"warm-up":"set "+this.getCurrentWorkingSetNumber()} of "${t.exerciseData.exerciseName}"? It won't be logged`);if(!o||!o.data)return}this.soundPlayedForThisCountdownSegment=!1,this.toastService.info(`Skipped set of ${t.exerciseData.exerciseName}.`,2e3),this.resetTimedSet(),this.navigateToNextStepInWorkout(t,e),this.closeWorkoutMenu(),this.closePerformanceInsights()})}skipCurrentExercise(){return j(this,null,function*(){yield this.markCurrentExerciseStatus("skipped")})}markCurrentExerciseDoLater(){return j(this,null,function*(){yield this.markCurrentExerciseStatus("do_later")})}markCurrentExerciseStatus(t){return j(this,null,function*(){if(this.sessionState()==="paused"){this.toastService.warning("Session is paused. Resume to mark exercise.",3e3,"Paused");return}let e=this.routine(),o=this.activeSetInfo();if(!e||!o){this.toastService.error("Cannot update exercise status: data unavailable",0,"Error");return}let n=o.exerciseData.exerciseName,i=t==="skipped"?"Skip":"Mark for Later",s=JSON.parse(JSON.stringify(e)),a=s.exercises.find(l=>l.id===o.exerciseData.id);if(a){let l=a.sessionStatus;a.sessionStatus=t;let u=t.replace(/(^\w)/g,c=>c[0].toUpperCase()).replace(/([-_]\w)/g,c=>" "+c[1].toUpperCase()).trim();this.routine.set(s),this.toastService.info(`"${n}" marked as ${u}.`,2e3),this.resetTimedSet(),this.isPerformingDeferredExercise&&o.exerciseData.id===this.lastActivatedDeferredExerciseId?(console.log(`markCurrentExerciseStatus: Re-marking a deferred exercise (${n}) as ${t}. Re-evaluating all deferred`),this.isPerformingDeferredExercise=!1,this.lastActivatedDeferredExerciseId=null,this.exercisesProposedThisCycle={doLater:!1,skipped:!1},yield this.tryProceedToDeferredExercisesOrFinish(s)):(console.log(`markCurrentExerciseStatus: Marking main sequence exercise (${n}) as ${t}. Advancing`),yield this.navigateToNextStepInWorkout(o,s,!0))}this.closeWorkoutMenu(),this.closePerformanceInsights()})}addExerciseDuringSession(){return j(this,null,function*(){if(this.sessionState()==="paused"){this.toastService.warning("Session is paused. Resume to add exercise",3e3,"Paused"),this.closeWorkoutMenu();return}this.openExerciseSelectionModal()})}selectExerciseToAddFromModal(t){return j(this,null,function*(){if(this.closeExerciseSelectionModal(),!this.routine()){this.toastService.error("Cannot add exercise: routine data unavailable",0,"Error");return}let n=this.currentWorkoutLogExercises().length>0&&t.category==="kettlebells",i=this.currentWorkoutLogExercises().length>0?this.currentWorkoutLogExercises()[this.currentWorkoutLogExercises().length-1]:null,s=i?i.sets[i.sets.length-1]:null,a=t.category==="cardio",l=n&&s?s.targetWeight||s.weightUsed:this.unitService.currentUnit()==="kg"?10:22.2,u=a?60:0,c=n?45:60,p=n&&s?s.targetReps||s.repsAchieved:10,d=3,m=a?[{label:"Exercise name",name:"name",type:"text",placeholder:"Exercise name",value:t.name,attributes:{required:!0}},{label:"Number of Sets",name:"numSets",type:"number",placeholder:"Number of Sets (e.g., 3)",value:d,attributes:{min:1,required:!0}},{label:"Target weight",name:"weight",type:"number",placeholder:"e.g., 10",value:l,attributes:{min:0,required:!0}},{label:"Target duration",name:"duration",type:"number",placeholder:"e.g., 30 secs",value:u,attributes:{min:0,required:!1}},{label:"Rest between sets",name:"rest",type:"number",placeholder:"e.g., 60",value:c,attributes:{min:1,required:!0}}]:[{label:"Exercise name",name:"name",type:"text",placeholder:"Exercise name",value:t.name,attributes:{required:!0}},{label:"Number of Reps",name:"numReps",type:"number",placeholder:"Number of Reps (e.g., 10)",value:p,attributes:{min:0,required:!0}},{label:"Number of Sets",name:"numSets",type:"number",placeholder:"Number of Sets (e.g., 3)",value:d,attributes:{min:1,required:!0}},{label:"Target weight",name:"weight",type:"number",placeholder:"e.g., 10",value:l,attributes:{min:0,required:!0}},{label:"Target duration",name:"duration",type:"number",placeholder:"e.g., 30 secs",value:u,attributes:{min:0,required:!1}},{label:"Rest between sets",name:"rest",type:"number",placeholder:"e.g., 60",value:c,attributes:{min:1,required:!0}}],f=yield this.alertService.showPromptDialog(`Add ${t.name}`,"",m);if(f){let g=f.name,x=isNaN(parseInt(String(f.numSets)))?d:parseInt(String(f.numSets)),y=isNaN(parseInt(String(f.numReps)))?p:parseInt(String(f.numReps)),b=isNaN(parseInt(String(f.weight)))?l:parseInt(String(f.weight)),I=isNaN(parseInt(String(f.duration)))?u:parseInt(String(f.duration)),N=isNaN(parseInt(String(f.rest)))?c:parseInt(String(f.rest));if(!g||x==null||isNaN(x)||y==null||isNaN(y)||I==null||isNaN(I)||b==null||isNaN(b)||N==null||isNaN(N)){this.toastService.info("Exercise addition cancelled or invalid parameter",2e3),this.selectExerciseToAddFromModal(t);return}let M=[];for(let H=0;H<x;H++)M.push({id:`custom-set-${Wt()}`,reps:y,weight:b,duration:I,restAfterSet:N,type:"standard",notes:""});let B={id:`custom-exercise-${Wt()}`,exerciseId:t.id,exerciseName:t.name,sets:M,rounds:1,supersetId:null,supersetOrder:null,supersetSize:null,sessionStatus:"pending",type:"standard"},W=this.exerciseService.mapWorkoutExerciseToExercise(B,t);this.exerciseService.addExercise(W),this.addExerciseToCurrentRoutine(B)}})}handleTrulyCustomExerciseEntry(){return j(this,null,function*(){if(this.closeExerciseSelectionModal(),!this.routine())return;let e={id:`custom-adhoc-ex-${Wt()}`,name:"Custom exercise",description:"",category:"bodyweight/calisthenics",muscleGroups:[],primaryMuscleGroup:"",imageUrls:[]};this.selectExerciseToAddFromModal(e)})}addExerciseToCurrentRoutine(t,e){return j(this,null,function*(){let o=this.routine();if(!o)return;let n=e!=null,i=JSON.parse(JSON.stringify(o)),s=e??this.currentExerciseIndex()+1,a=this.activeSetInfo();if(!n&&a&&a.exerciseData.supersetId&&a.exerciseData.supersetOrder!==null&&a.exerciseData.supersetSize&&(s=a.exerciseIndex-a.exerciseData.supersetOrder+a.exerciseData.supersetSize),i.exercises.splice(s,0,t),this.routine.set(i),n)this.currentExerciseIndex.set(s),this.currentSetIndex.set(0),this.currentBlockRound.set(1),this.totalBlockRounds.set(t.rounds??1),this.lastPerformanceForCurrentExercise=null,this.isPerformingDeferredExercise=!0,this.playerSubState.set("performing_set"),yield this.prepareCurrentSet();else{let l;this.routineId==="-1"&&this.routine()?.exercises?.length===1?(l={data:!0},this.sessionState.set("playing"),this.startSessionTimer(),this.startAutoSave()):this.isEndReached()&&(yield this.alertService.showAlert("Exercise Added",`"${t.exerciseName}" added`),l={data:!0},this.isEndReached.set(!1)),l&&l.data||this.routineId==="-1"?(this.currentExerciseIndex.set(s),this.currentSetIndex.set(0),this.currentBlockRound.set(1),this.totalBlockRounds.set(t.rounds??1),this.lastPerformanceForCurrentExercise=null,this.isPerformingDeferredExercise=!0,this.lastActivatedDeferredExerciseId=t.id,this.playerSubState.set("performing_set"),yield this.prepareCurrentSet()):this.toastService.success(`"${t.exerciseName}" added to the queue.`,3e3,"Exercise Added")}})}finishWorkoutEarly(){return j(this,null,function*(){if(this.sessionState()==="paused"){this.toastService.warning("Please resume before finishing early",3e3,"Paused");return}let t=yield this.alertService.showConfirm("Finish Workout Early","Finish workout now? Current progress will be saved");t&&t.data&&(this.closeWorkoutMenu(),this.closePerformanceInsights(),(yield this.finishWorkoutAndReportStatus())||(this.toastService.info("Workout finished early. Paused session cleared",4e3),this.storageService.removeItem(this.PAUSED_WORKOUT_KEY),this.router.url.includes("/play")&&this.router.navigate(["/workout"])))})}mapWorkoutExerciseToLoggedWorkoutExercise(t){return{id:t.id,exerciseId:t.exerciseId,exerciseName:t.exerciseName||"",sets:t.sets.map(e=>({id:Wt(),exerciseName:t.exerciseName,plannedSetId:e.id,exerciseId:t.exerciseId,type:t.type,repsAchieved:0,weightUsed:void 0,durationPerformed:void 0,rpe:void 0,targetReps:e.reps,targetWeight:e.weight,targetDuration:e.duration,targetTempo:e.tempo,notes:e.notes,timestamp:new Date().toISOString()})),rounds:t.rounds??1,type:(t.sets&&t.sets[0]&&t.sets[0].type||t.type)??"standard"}}checkWorkoutTimingValidity(t){return j(this,null,function*(){if(this.workoutStartTime<=0){let e=this.currentWorkoutLogExercises()[0]?.sets[0]?.timestamp;e?t.startTime=new Date(e).getTime():t.startTime=new Date().getTime();let o=this.currentWorkoutLogExercises().slice(-1)[0]?.sets.slice(-1)[0]?.timestamp;if(o)t.endTime=new Date(o).getTime();else{if(this.routine()!==void 0&&this.routine()!==null){let s=this.routine();if(s){let a=s,l=this.workoutService.getEstimatedRoutineDuration(a);t.endTime=l}}t.endTime=new Date().getTime()}let n=Math.round((t.endTime-t.startTime)/(1e3*60)),i=Math.round((t.endTime-t.startTime)/1e3);t.durationMinutes=n,t.durationSeconds=i,t.date=Ot(new Date(t.startTime),"yyyy-MM-dd"),yield this.alertService.showAlert("Workout Timing Adjusted",`Workout start time was not set. Estimated start time is ${Ot(new Date(t.startTime),"MMM d, HH:mm")}. Estimated end time is ${Ot(new Date(t.endTime),"MMM d, HH:mm")}. Duration: ${n} minutes (${i} seconds).`)}return t})}finishWorkoutAndReportStatus(){return j(this,null,function*(){if(this.stopAutoSave(),this.sessionState()==="paused")return this.toastService.warning("Please resume workout before finishing",3e3,"Session Paused"),!1;if(this.sessionState()==="loading")return this.toastService.info("Workout is still loading",3e3,"Loading"),!1;let t=this.currentWorkoutLogExercises().filter(I=>I.sets.length>0);if(t===void 0||t.length===0)return!1;if(t.length===0)return this.toastService.info("No sets logged. Workout not saved",3e3,"Empty Workout"),this.storageService.removeItem(this.PAUSED_WORKOUT_KEY),this.router.url.includes("/play")&&this.router.navigate(["/workout"]),!1;this.timerSub&&this.timerSub.unsubscribe();let e=this.routine(),o=this.program(),n=!0,i=!1,s=!1,a=e?.name?`${e.name} - ${Ot(new Date,"MMM d")}`:`Ad-hoc Workout - ${Ot(new Date,"MMM d, HH:mm")}`,l=this.routineId&&this.routineId!=="-1"&&this.routineId!==null;if(!this.originalRoutineSnapshot||this.originalRoutineSnapshot.length===0&&l){let I=this.routineId;if(this.routineId){let N=this.routineId,M=yield Eo(this.workoutService.getRoutineById(N).pipe(jt(1)));M&&M.exercises&&M.exercises.length>0&&(this.originalRoutineSnapshot=JSON.parse(JSON.stringify(M.exercises)))}(!this.originalRoutineSnapshot||this.originalRoutineSnapshot.length===0)&&(this.originalRoutineSnapshot=[])}let u=this.originalRoutineSnapshot.filter(I=>e?.exercises.find(N=>N.id===I.id&&N.sessionStatus==="pending")||t.some(N=>N.exerciseId===I.exerciseId));if(this.routineId&&this.originalRoutineSnapshot&&this.originalRoutineSnapshot.length>0&&e){let I=this.comparePerformedToOriginal(t,u);if(I.majorDifference){console.log("Major differences",I.details);let N=yield this.alertService.showConfirmationDialog("Routine Structure Changed","You made some changes to the routine structure. What would you like to do?",[{text:"Just log",role:"log",data:"log",cssClass:"bg-purple-600",icon:"schedule"},{text:"Update Original Routine and log",role:"destructive",data:"update",cssClass:"bg-blue-600",icon:"save"},{text:"Save as New Routine",role:"confirm",data:"new",cssClass:"bg-green-600",icon:"create-folder"}],{listItems:I.details});if(N&&N.data==="new"){let M=yield this.alertService.showPromptDialog("New Routine Name","Enter a name for your new routine:",[{name:"newRoutineName",type:"text",placeholder:a,value:a,attributes:{required:!0}}],"Save Routine");M&&String(M.newRoutineName).trim()?(a=String(M.newRoutineName).trim(),i=!0):n=!1}else N&&N.data==="update"?s=!0:N&&N.data==="log"?(s=!1,n=!0):n=!1}}else if((!this.routineId||this.routineId=="-1")&&t.length>0){i=!0;let I=yield this.alertService.showPromptDialog("Save as New Routine","Enter a name for your new routine:",[{name:"newRoutineName",type:"text",placeholder:a,value:a,attributes:{required:!0}}],"Create new Routine and log","CANCEL",[{text:"Just log",role:"no_save",data:"cancel",cssClass:"bg-red-600"}]);I&&I.newRoutineName&&String(I.newRoutineName).trim()?a=String(I.newRoutineName).trim():(n=!1,I&&I.role==="no_save"&&(n=!0,i=!1,this.toastService.info("New corresponding routine has not been created. Log saved",3e3,"Log saved",!1)))}if(!n)return this.toastService.info("Finish workout cancelled. Session remains active/paused",3e3,"Cancelled"),this.sessionState()==="playing"&&this.startAutoSave(),!1;let c=Date.now(),p=this.workoutStartTime-this.sessionTimerElapsedSecondsBeforePause*1e3,d=Math.round((c-p)/(1e3*60)),m=Math.round((c-p)/1e3),f=this.routineId||void 0,g=e?.name||"Ad-hoc Workout";if(i){let I={name:a,description:e?.description||"Workout performed on "+Ot(new Date,"MMM d, yyyy"),goal:e?.goal||"custom",exercises:this.convertLoggedToWorkoutExercises(t)},N=this.workoutService.addRoutine(I);f=N.id,g=N.name,this.toastService.success(`New routine "${N.name}" created.`,4e3)}let x={routineId:f,routineName:g,date:Ot(new Date(p),"yyyy-MM-dd"),startTime:p,endTime:c,durationMinutes:d,durationSeconds:m,exercises:t,notes:e?.notes,programId:o},y=yield this.checkWorkoutTimingValidity(x),b=this.trackingService.addWorkoutLog(y);if(b.programId)try{if(yield this.trainingProgramService.checkAndHandleProgramCompletion(b.programId,b))return this.toastService.success("Congrats! Program completed!",5e3,"Program Finished",!1),this.stopAllActivity(),this.storageService.removeItem(this.PAUSED_WORKOUT_KEY),this.router.navigate(["/training-programs/completed",b.programId],{queryParams:{logId:b.id}}),!0}catch(I){console.error("Error during program completion check:",I)}if(this.isTabataMode()?this.toastService.success("Tabata Workout Complete!",5e3,"Workout Finished",!1):this.toastService.success("Congrats! Workout completed!",5e3,"Workout Finished",!1),f){let I=yield Eo(this.workoutService.getRoutineById(f).pipe(jt(1)));if(I){let N=qt(Vt({},I),{lastPerformed:new Date(p).toISOString()});s&&!i&&this.routineId===f&&(N.exercises=this.convertLoggedToWorkoutExercises(t)),this.workoutService.updateRoutine(N)}}return this.stopAllActivity(),this.storageService.removeItem(this.PAUSED_WORKOUT_KEY),this.router.navigate(["/workout/summary",b.id]),!0})}quitWorkout(){return j(this,null,function*(){let t=yield this.alertService.showConfirm("Quit Workout","Quit workout? Unsaved progress (if not paused) will be lost");t&&t.data&&(this.stopAllActivity(),this.isSessionConcluded=!0,this.storageService.removeItem(this.PAUSED_WORKOUT_KEY),this.closeWorkoutMenu(),this.closePerformanceInsights(),this.router.navigate(["/workout"]),this.toastService.info("Workout quit. No progress saved for this session",4e3))})}toggleCompletedSetsInfo(){this.showCompletedSetsInfo.update(t=>!t)}openPerformanceInsights(){if(this.sessionState()==="paused"){this.toastService.warning("Session is paused. Resume to view insights",3e3,"Paused");return}this.isPerformanceInsightsVisible.set(!0),this.isWorkoutMenuVisible.set(!1)}closePerformanceInsights(){this.isPerformanceInsightsVisible.set(!1),this.editingTarget&&this.cancelEditTarget()}openPerformanceInsightsFromMenu(){this.closeWorkoutMenu(),this.openPerformanceInsights()}goBack(){this.currentWorkoutLogExercises().length>0&&this.sessionState()==="playing"?this.alertService.showConfirm("Exit Workout?","You have an active workout. Are you sure you want to exit? Your progress might be lost unless you pause first").then(t=>{t&&t.data&&this.router.navigate(["/workout"])}):this.router.navigate(["/workout"])}incrementWeight(t=.5){let e=this.appSettingsService.getSettings().weightStep||t,o=this.csf.actualWeight.value??0;this.currentSetForm.patchValue({actualWeight:parseFloat((o+e).toFixed(2))})}decrementWeight(t=.5){let e=this.appSettingsService.getSettings().weightStep||t,o=this.csf.actualWeight.value??0,n=parseFloat((o-e).toFixed(2))>=0?parseFloat((o-e).toFixed(2)):0;this.currentSetForm.patchValue({actualWeight:n})}pressStartTime=null;weightIncrementIntervalId=null;weightDecrementIntervalId=null;intervalId=null;onShortPressWeightIncrement(){this.incrementWeight()}onLongPressWeightIncrement(){this.intervalId=setInterval(()=>this.incrementWeight(),200)}onPressRelease(){this.intervalId&&(clearInterval(this.intervalId),this.intervalId=null)}onShortPressWeightDecrement(){this.decrementWeight()}onLongPressWeightDecrement(){this.intervalId=setInterval(()=>this.decrementWeight(),200)}onShortPressRepsIncrement(){this.incrementReps()}onLongPressRepsIncrement(){this.intervalId=setInterval(()=>this.incrementReps(),200)}onShortPressRepsDecrement(){this.decrementReps()}onLongPressRepsDecrement(){this.intervalId=setInterval(()=>this.decrementReps(),200)}incrementReps(t=1){let e=t,o=this.csf.actualReps.value??0;this.currentSetForm.patchValue({actualReps:o+e})}decrementReps(t=1){let e=t,o=this.csf.actualReps.value??0;this.currentSetForm.patchValue({actualReps:Math.max(0,o-e)})}toggleRpeInput(){this.showRpeSlider.update(t=>!t)}updateRpe(t){let e=typeof t=="string"?parseInt(t,10):t;e!==null&&!isNaN(e)&&e>=1&&e<=10?(this.rpeValue.set(e),this.currentSetForm.patchValue({rpe:e})):e===null&&(this.rpeValue.set(null),this.currentSetForm.patchValue({rpe:null}))}startAutoSave(){vr(this.platformId)&&(this.autoSaveSub&&this.autoSaveSub.unsubscribe(),this.autoSaveSub=CS(this.AUTO_SAVE_INTERVAL_MS).pipe(si(this.destroy$)).subscribe(()=>{this.sessionState()==="playing"&&this.routine()&&(console.log("Auto-saving workout state..."),this.savePausedSessionState())}))}stopAutoSave(){this.autoSaveSub&&(this.autoSaveSub.unsubscribe(),this.autoSaveSub=void 0)}ngOnInit(){return j(this,null,function*(){vr(this.platformId)&&window.scrollTo(0,0);let t=this.storageService.getItem(this.PAUSED_WORKOUT_KEY);(yield this.checkForPausedSession(!1))?this.isInitialLoadComplete=!0:this.loadNewWorkoutFromRoute(),vr(this.platformId)&&(this.routerEventsSub=this.router.events.pipe(Nd(o=>o instanceof DS),gs(o=>j(this,null,function*(){let n=this.route.snapshot,i=o.urlAfterRedirects.startsWith("/workout/play/"),s=n.paramMap.get("routineId"),a=n.queryParamMap.get("programId");i&&(this.routineId===s&&this.isInitialLoadComplete&&this.sessionState()!=="playing"?!(yield this.checkForPausedSession(!0))&&this.sessionState()!=="playing"&&this.loadNewWorkoutFromRoute():this.routineId)})),si(this.destroy$)).subscribe()),this.loadAvailableExercises()})}loadNewWorkoutFromRoute(){return j(this,null,function*(){console.log("loadNewWorkoutFromRoute - START"),this.isInitialLoadComplete=!1,this.sessionState.set("loading"),this.exercisesProposedThisCycle={doLater:!1,skipped:!1},this.isPerformingDeferredExercise=!1,this.lastActivatedDeferredExerciseId=null,this.stopAllActivity(),this.workoutStartTime=Date.now(),this.sessionTimerElapsedSecondsBeforePause=0,this.originalRoutineSnapshot=[],this.currentWorkoutLogExercises.set([]),this.currentSetIndex.set(0),this.currentBlockRound.set(1),this.routine.set(void 0),this.program.set(void 0),this.routeSub&&this.routeSub.unsubscribe(),this.routeSub=wS([this.route.paramMap,this.route.queryParamMap]).pipe(Dn(([t,e])=>({routineId:t.get("routineId"),programId:e.get("programId")})),ka(t=>{let{routineId:e,programId:o}=t;return console.log("loadNewWorkoutFromRoute - paramMap emitted, newRoutineId:",e),console.log("loadNewWorkoutFromRoute - queryParamMap emitted, programId:",o),o&&this.program.set(o),(!e||e==="-1")&&e!=="-1"?(this.toastService.error("No routine specified to play",0,"Error"),this.router.navigate(["/workout"]),this.sessionState.set("error"),sn(null)):(this.routineId=e,this.workoutService.getRoutineById(this.routineId).pipe(Dn(n=>{if(n){console.log("loadNewWorkoutFromRoute: Fetched original routine -",n.name),this.originalRoutineSnapshot=JSON.parse(JSON.stringify(n.exercises));let i=JSON.parse(JSON.stringify(n));return i.exercises.forEach(s=>{s.sessionStatus="pending",s.id||(s.id=Wt()),s.sets.forEach(a=>{a.id||(a.id=Wt()),a.type||(a.type="standard")})}),{sessionRoutineCopy:i,programId:o}}return console.warn("loadNewWorkoutFromRoute: No original routine found for ID:",this.routineId),null}),jt(1)))}),gs(t=>j(this,null,function*(){if(!t){if(this.routineId==="-1"){let i={name:"New session",createdAt:new Date().toISOString(),goal:"custom",exercises:[]};this.routine.set(i),this.openExerciseSelectionModal()}else this.routineId&&(console.error("loadNewWorkoutFromRoute - tap: Failed to load routine for ID or routine was null:",this.routineId),this.routine.set(null),this.sessionState.set("error"),this.toastService.error("Failed to load workout routine",0,"Load Error"),vr(this.platformId)&&this.router.navigate(["/workout"]),this.stopAutoSave());this.isInitialLoadComplete=!0;return}let{sessionRoutineCopy:e,programId:o}=t;if(console.log("loadNewWorkoutFromRoute - tap operator. Session routine copy:",e.name),console.log("loadNewWorkoutFromRoute - tap operator. Program ID:",o),e.goal==="tabata"){this.setupTabataMode(e),this.startSessionTimer(),this.isInitialLoadComplete=!0;return}if(this.sessionState()==="paused"){console.log("loadNewWorkoutFromRoute - tap: Session is paused, skipping setup"),this.isInitialLoadComplete=!0;return}this.exercisesProposedThisCycle={doLater:!1,skipped:!1},this.isPerformingDeferredExercise=!1,this.lastActivatedDeferredExerciseId=null,this.routine.set(e);let n=this.findFirstPendingExerciseAndSet(e);if(n){this.currentExerciseIndex.set(n.exerciseIndex),this.currentSetIndex.set(n.setIndex),console.log(`loadNewWorkoutFromRoute - Initial pending set to Ex: ${n.exerciseIndex}, Set: ${n.setIndex}`);let i=e.exercises[n.exerciseIndex];if(!i.supersetId||i.supersetOrder===0)this.totalBlockRounds.set(i.rounds??1);else{let s=e.exercises.find(a=>a.supersetId===i.supersetId&&a.supersetOrder===0);this.totalBlockRounds.set(s?.rounds??1)}}else{console.log("loadNewWorkoutFromRoute: Routine loaded but no initial pending exercises. Will try deferred/finish"),this.currentExerciseIndex.set(0),this.currentSetIndex.set(0),this.totalBlockRounds.set(1),this.exercisesProposedThisCycle={doLater:!1,skipped:!1},yield this.tryProceedToDeferredExercisesOrFinish(e),this.isInitialLoadComplete=!0;return}this.currentBlockRound.set(1),this.currentWorkoutLogExercises.set([]),yield this.prepareCurrentSet(),this.sessionState()!=="error"&&this.sessionState()!=="paused"&&(this.startSessionTimer(),this.startAutoSave()),this.isInitialLoadComplete=!0,console.log("loadNewWorkoutFromRoute - END tap operator. Final sessionState:",this.sessionState())})),si(this.destroy$)).subscribe({error:t=>{console.error("loadNewWorkoutFromRoute - Error in observable pipeline:",t),this.routine.set(null),this.sessionState.set("error"),this.toastService.error("Critical error loading workout",0,"Load Error"),vr(this.platformId)&&this.router.navigate(["/workout"]),this.isInitialLoadComplete=!0}})})}checkForPausedSession(t=!1){return j(this,null,function*(){let e=this.storageService.getItem(this.PAUSED_WORKOUT_KEY),o=this.route.snapshot.paramMap.get("routineId"),n=this.route.snapshot.queryParamMap.get("resume")==="true";if(console.log("WorkoutPlayer.checkForPausedSession ...",!!e),e&&e.version===this.PAUSED_STATE_VERSION){if(o&&e.routineId===null)return console.log("WorkoutPlayer.checkForPausedSession - Current route is for a specific routine, but paused session was ad-hoc. Discarding paused session"),this.storageService.removeItem(this.PAUSED_WORKOUT_KEY),!1;if(!o&&e.routineId!==null)return console.log("WorkoutPlayer.checkForPausedSession - Current route is ad-hoc, but paused session was for a specific routine. Discarding paused session"),this.storageService.removeItem(this.PAUSED_WORKOUT_KEY),!1;if(o&&e.routineId&&o!==e.routineId)return console.log("WorkoutPlayer.checkForPausedSession - Paused session routine ID does not match current route routine ID. Discarding paused session"),this.storageService.removeItem(this.PAUSED_WORKOUT_KEY),!1;let i=!1;if(n)i=!0,this.router.navigate([],{relativeTo:this.route,queryParams:{resume:null},queryParamsHandling:"merge",replaceUrl:!0});else if(t)i=!0;else{let s=yield this.alertService.showConfirmationDialog("Resume Paused Workout?","You have a paused workout session. Would you like to resume it?",[{text:"Resume",role:"confirm",data:!0,cssClass:"bg-green-600",icon:"play",iconClass:"h-8 w-8 mr-1"},{text:"Discard",role:"cancel",data:!1,cssClass:"bg-red-600",icon:"trash",iconClass:"h-8 w-8 mr-1"}]);i=!!(s&&s.data===!0)}return i?(this.stopAllActivity(),this.routeSub&&this.routeSub.unsubscribe(),yield this.loadStateFromPausedSession(e),this.isInitialLoadComplete=!0,!0):(this.storageService.removeItem(this.PAUSED_WORKOUT_KEY),this.toastService.info("Paused session discarded",3e3),!1)}return!1})}stopAllActivity(){this.isSessionConcluded=!0,console.log("stopAllActivity - Stopping timers and auto-save"),this.stopAutoSave(),this.timerSub&&this.timerSub.unsubscribe(),this.timedSetIntervalSub&&this.timedSetIntervalSub.unsubscribe(),this.tabataTimerSub&&this.tabataTimerSub.unsubscribe(),this.isRestTimerVisible.set(!1),this.sessionState.set("end")}resumeSession(){return j(this,null,function*(){this.sessionState()==="paused"?(console.log("resumeSession button clicked - transitioning from Paused to Playing"),this.workoutStartTime=Date.now(),this.sessionState.set("playing"),this.startSessionTimer(),this.startAutoSave(),this.wasTimedSetRunningOnPause&&this.timedSetTimerState()==="paused"&&this.startOrResumeTimedSet(),this.wasTimedSetRunningOnPause=!1,this.wasRestTimerVisibleOnPause&&this.restTimerRemainingSecondsOnPause>0&&this.startRestPeriod(this.restTimerRemainingSecondsOnPause,!0),this.wasRestTimerVisibleOnPause=!1,this.closeWorkoutMenu(),this.closePerformanceInsights(),this.toastService.info("Workout session resumed",3e3)):!(yield this.checkForPausedSession(!0))&&this.sessionState()!=="playing"&&this.routineId&&this.loadNewWorkoutFromRoute()})}ngOnDestroy(){this.destroy$.next(),this.destroy$.complete(),this.stopAllActivity(),this.isRestTimerVisible.set(!1),vr(this.platformId)&&!this.isSessionConcluded&&(this.sessionState()==="playing"||this.sessionState()==="paused")&&this.routine()&&this.currentWorkoutLogExercises().length>0&&(console.log("WorkoutPlayer ngOnDestroy - Saving state..."),this.savePausedSessionState())}playClientBeep(t=800,e=150){if(vr(this.platformId))try{let o=window.AudioContext||window.webkitAudioContext;if(!o){console.warn("Web Audio API not supported in this browser");return}let n=new o,i=n.createOscillator();i.type="sine",i.frequency.setValueAtTime(t,n.currentTime),i.connect(n.destination),i.start(),i.stop(n.currentTime+e/1e3),setTimeout(()=>{n.state!=="closed"&&n.close()},e+50)}catch(o){console.error("Error playing beep sound:",o)}}playClientGong(t=440,e=700){if(vr(this.platformId))try{let o=window.AudioContext||window.webkitAudioContext;if(!o){console.warn("Web Audio API not supported in this browser");return}let n=new o,i=n.createOscillator(),s=n.createGain();i.type="triangle",i.frequency.setValueAtTime(200,n.currentTime),s.gain.setValueAtTime(1,n.currentTime),s.gain.exponentialRampToValueAtTime(.001,n.currentTime+2),i.connect(s),s.connect(n.destination),i.start(),i.stop(n.currentTime+2)}catch(o){console.error("Error playing gong sound:",o)}}startPresetTimer(t,e){this.playerSubState.set("preset_countdown"),this.presetTimerDuration.set(t);let o=t;this.presetTimerCountdownDisplay.set(String(o)),this.restTimerMainText.set(`GET READY: ${e.exerciseData.exerciseName}`);let n=e.type==="warmup"?`Warm-up ${this.getWarmupSetNumberForDisplay(e.exerciseData,e.setIndex)}/${this.getTotalWarmupSetsForExercise(e.exerciseData)}`:`Set ${this.getWorkingSetNumberForDisplay(e.exerciseData,e.setIndex)}/${this.getWorkingSetCountForExercise(e.exerciseData)}`;this.restTimerNextUpText.set(n),this.presetTimerSub&&this.presetTimerSub.unsubscribe(),this.presetTimerSub=mp(0,1e3).pipe(si(this.destroy$),jt(t+1)).subscribe({next:()=>{this.presetTimerCountdownDisplay.set(String(o)),o<=this.appSettingsService.countdownSoundSeconds()&&o>0&&this.appSettingsService.enableTimerCountdownSound()&&t>5&&this.playClientBeep(600,150),o--},complete:()=>{this.playerSubState()==="preset_countdown"&&(this.playClientBeep(1e3,250),this.handlePresetTimerFinished())}})}handlePresetTimerFinished(){this.presetTimerSub&&(this.presetTimerSub.unsubscribe(),this.presetTimerSub=void 0),this.presetTimerCountdownDisplay.set(null),this.playerSubState.set("performing_set"),this.cdr.detectChanges(),console.log("Pre-set timer finished. Player state set to PerformingSet")}skipPresetTimer(){this.playerSubState()==="preset_countdown"&&(this.presetTimerSub&&(this.presetTimerSub.unsubscribe(),this.presetTimerSub=void 0),this.handlePresetTimerFinished())}getWarmupSetNumberForDisplay(t,e){let o=0;for(let n=0;n<=e;n++)t.sets[n].type==="warmup"&&o++;return o}getTotalWarmupSetsForExercise(t){return t.sets.filter(e=>e.type==="warmup").length}getWorkingSetNumberForDisplay(t,e){let o=0;for(let n=0;n<=e;n++)t.sets[n].type!=="warmup"&&o++;return o}getWorkingSetCountForExercise(t){return t.sets.filter(e=>e.type!=="warmup").length}findNextPlayableItemIndices(t,e,o,n=!1){let i=t,s=e,a=!1,l=!1,u=!1,c=o.exercises[t];if(n||s>=c.sets.length-1){if(s=0,!n&&c.supersetId&&c.supersetOrder!==null&&c.supersetOrder<(c.supersetSize||1)-1){let m=t+1;for(;m<o.exercises.length&&(o.exercises[m].supersetId!==c.supersetId||o.exercises[m].sessionStatus!=="pending");)m++;if(m<o.exercises.length&&o.exercises[m].supersetId===c.supersetId)return i=m,{nextExIdx:i,nextSetIdx:s,blockChanged:a,isEndOfAllPending:l,roundIncremented:u}}let p=this.totalBlockRounds();if(!n&&this.currentBlockRound()<p){this.currentBlockRound.update(x=>x+1),u=!0;let m=t;c.supersetId&&c.supersetOrder!==null&&(m=t-c.supersetOrder);let f=m,g=!1;for(;f<o.exercises.length&&(c.supersetId?o.exercises[f].supersetId===c.supersetId:f===m);){if(o.exercises[f].sessionStatus==="pending"){i=f,g=!0;break}f++}if(!g)this.currentBlockRound.set(p),u=!1;else return{nextExIdx:i,nextSetIdx:s,blockChanged:a,isEndOfAllPending:l,roundIncremented:u}}a=!0,this.currentBlockRound.set(1),u=!1;let d=t+1;c.supersetId&&c.supersetOrder!==null&&(d=t-c.supersetOrder+(c.supersetSize||1)),i=-1;for(let m=d;m<o.exercises.length;m++){let f=o.exercises[m];if(f.sessionStatus==="pending"){if(!f.supersetId||f.supersetOrder===0){i=m,this.getNumberOfLoggedSets(f.id)&&(s=this.getNumberOfLoggedSets(f.id));break}let g=m-(f.supersetOrder||0);if(g>=0&&o.exercises[g].sessionStatus==="pending"&&o.exercises[g].supersetId===f.supersetId){i=g;break}}}}else s++;return(i===-1||i>=o.exercises.length||i!==-1&&o.exercises[i].sessionStatus!=="pending")&&(l=!0,i=-1),{nextExIdx:i,nextSetIdx:s,blockChanged:a,isEndOfAllPending:l,roundIncremented:u}}getUnfinishedExercises(){let t=this.routine();return t?t.exercises.filter((e,o)=>!this.isExerciseFullyLogged(e)):[]}getFinishedExercises(){let t=this.routine(),e=this.currentWorkoutLogExercises();return t?t.exercises.filter((o,n)=>{let i=e.find(s=>s.exerciseId===o.exerciseId&&t.exercises[n].id===o.id);return i&&i.sets.length>=o.sets.length}):[]}navigateToNextStepInWorkout(t,e,o=!1){return j(this,null,function*(){let n=t.exerciseData,i=this.isExerciseFullyLogged(n);if(this.isPerformingDeferredExercise&&n.id===this.lastActivatedDeferredExerciseId&&i){console.log("navigateToNextStepInWorkout: Completed a deferred exercise. Re-evaluating all remaining"),this.isPerformingDeferredExercise=!1,this.lastActivatedDeferredExerciseId=null,this.exercisesProposedThisCycle={doLater:!1,skipped:!1},yield this.tryProceedToDeferredExercisesOrFinish(e);return}let{nextExIdx:s,nextSetIdx:a,blockChanged:l,isEndOfAllPending:u,roundIncremented:c}=this.findNextPlayableItemIndices(t.exerciseIndex,t.setIndex,e,o);if(u){console.log("navigateToNextStepInWorkout: No more 'pending' exercises. Proceeding to finish"),this.isPerformingDeferredExercise=!1,this.lastActivatedDeferredExerciseId=null,this.exercisesProposedThisCycle={doLater:!1,skipped:!1},t.exerciseData.sessionStatus="completed",this.savePausedSessionState(),yield this.tryProceedToDeferredExercisesOrFinish(e);return}if(s===-1||!e.exercises[s]||!e.exercises[s].sets[a]){console.error("navigateToNextStepInWorkout: findNextPlayableItemIndices returned an invalid index, but did not signal end of workout. Fallback to finish flow",{nextExIdx:s,nextSetIdx:a}),yield this.tryProceedToDeferredExercisesOrFinish(e);return}if(this.currentExerciseIndex.set(s),this.currentSetIndex.set(a),t.exerciseIndex!==s&&e.exercises[s].id!==this.lastActivatedDeferredExerciseId&&(this.isPerformingDeferredExercise=!1,this.lastActivatedDeferredExerciseId=null),(l||c||o||t.exerciseIndex!==s)&&(this.lastPerformanceForCurrentExercise=null),l){let d=e.exercises[s];if(!d.supersetId||d.supersetOrder===0)this.totalBlockRounds.set(d.rounds??1);else{let m=e.exercises.find(f=>f.supersetId===d.supersetId&&f.supersetOrder===0);this.totalBlockRounds.set(m?.rounds??1)}}let p=t.setData.restAfterSet;p>0&&!o?this.startRestPeriod(p):(this.playerSubState.set("performing_set"),yield this.prepareCurrentSet())})}startRestPeriod(t,e=!1){if(!this.isTabataMode())if(this.playerSubState.set("resting"),this.restDuration.set(t),vr(this.platformId)&&t>0){let o=this.routine();if(e)this.restTimerMainText.set(this.restTimerMainTextOnPause),this.restTimerNextUpText.set(this.restTimerNextUpTextOnPause);else{this.restTimerMainText.set("RESTING");let n=this.peekNextSetInfo(),i="Next Exercise";if(n&&n.exerciseData&&n.exerciseData.sets){let s=n.type==="warmup",a=s?this.getWarmupSetNumberForDisplay(n.exerciseData,n.setIndex):this.getWorkingSetNumberForDisplay(n.exerciseData,n.setIndex),l=s?this.getTotalWarmupSetsForExercise(n.exerciseData):this.getWorkingSetCountForExercise(n.exerciseData),u=n.exerciseData.exerciseName||"Exercise",c="";if(o){let p=n.exerciseData,d=p.rounds??0;if(p.supersetId&&p.supersetOrder!==null){let m=o.exercises.find(f=>f.supersetId===p.supersetId&&f.supersetOrder===0);m&&(d=m.rounds??1)}d>=1&&p.supersetSize!==void 0&&p.supersetSize!==null&&p.supersetSize>0&&(c=` (Round ${this.currentBlockRound()}/${d})`)}if(i=`${s?"Warm-up ":""}Set ${a}/${l} of ${u}${c}`,n.setData){i+=" [";let p=n.setData;p.weight&&p.reps&&(i+=`${p.weight}${this.unitService.getUnitLabel()} x ${p.reps} reps`),!p.weight&&p.reps&&(i+=`${p.reps} reps`),p.duration&&(i.length>2&&!i.endsWith("[")?i+=`, duration ${p.duration} seconds`:i+=`duration ${p.duration} seconds`),i+="]"}}this.restTimerNextUpText.set(i)}this.playerSubState.set("resting"),this.restDuration.set(t),this.isRestTimerVisible.set(!0),this.updateRestTimerDisplay(t)}else this.isRestTimerVisible.set(!1),this.playerSubState.set("performing_set"),this.prepareCurrentSet()}getLatestLoggedExercise(){if(this.currentWorkoutLogExercises())return this.currentWorkoutLogExercises().find((t,e)=>e===this.currentWorkoutLogExercises().length-1)}peekNextSetInfo(){let t=this.routine(),e=this.currentExerciseIndex(),o=this.currentSetIndex();if(t&&t.exercises[e]&&t.exercises[e].sets[o]){let n=t.exercises[e],i=t.exercises[e].sets[o];return{exerciseIndex:e,setIndex:o,exerciseData:n,setData:i,type:i.type??"standard",isCompleted:!1}}return null}handleRestTimerFinished(){this.addActualRestAfterSet(null),console.log("Rest timer finished"),this.isRestTimerVisible.set(!1),this.prepareCurrentSet()}addActualRestAfterSet(t){let e=this.getLatestLoggedExercise();if(e){let o=e?.sets.find((n,i)=>i===e.sets.length-1);if(o){let n=this.routine()?.exercises.find(i=>i.id===e.id)?.sets.find(i=>i.id===o.plannedSetId);if(t&&this.restDuration()){let i=Math.ceil(this.restDuration()-t);o.restAfterSetUsed=i}else{let i=n?.restAfterSet??60;o.restAfterSetUsed=i}}}}handleRestTimerSkipped(t){this.addActualRestAfterSet(t),console.log("Rest timer skipped"),this.isRestTimerVisible.set(!1),this.toastService.clearAll(),this.toastService.info("Rest skipped",2e3),this.playerSubState.set("performing_set"),this.prepareCurrentSet()}getDisabled(){return this.timedSetTimerState()==="running"||this.sessionState()==="paused"||this.playerSubState()==="preset_countdown"||this.playerSubState()==="resting"}handleMainAction(){if(this.sessionState()==="paused"){this.toastService.warning("Session is paused. Please resume to continue",3e3,"Paused");return}switch(this.playerSubState()){case"performing_set":{this.completeAndLogCurrentSet();break}case"preset_countdown":this.skipPresetTimer();break;case"resting":this.skipRest();break}}shouldRunPresetTimerForCurrentSet=gt(()=>{let t=this.appSettingsService.enablePresetTimer(),e=this.appSettingsService.presetTimerDurationSeconds();if(!t||e<=0)return!1;let o=this.routine(),n=this.currentExerciseIndex(),i=this.currentSetIndex();if(!o||!o.exercises[n]||!o.exercises[n].sets[i])return!1;let s=n===0&&i===0&&this.currentBlockRound()===1,a=1/0;if(i>0)a=o.exercises[n].sets[i-1].restAfterSet;else if(n>0){let l=o.exercises[n-1];a=l.sets[l.sets.length-1].restAfterSet}return s||a===0});getIncompleteExercises(){let t=this.routine(),e=this.currentWorkoutLogExercises();return t?t.exercises.filter(o=>{if(o.sessionStatus!=="pending")return!1;let n=e.find(i=>i.exerciseId===o.exerciseId);return n?n.sets.length<o.sets.length:!0}):[]}getExerciseStatus(t){let e=this.routine();if(!e)return"pending";let o=e.exercises?.find(n=>t.id===n.id);return!o||!o.sessionStatus?"pending":o.sessionStatus}isExerciseSkipped(t){let e=this.routine();if(!e)return!1;let o=e.exercises?.find(n=>t.id===n.id);return!o||!o.sessionStatus?!1:o.sessionStatus==="skipped"}isExerciseDoLater(t){let e=this.routine();if(!e)return!1;let o=e.exercises?.find(n=>t.id===n.id);return!o||!o.sessionStatus?!1:o.sessionStatus==="do_later"}getExerciseStatusIndicator(t){let e=t.id===this.activeSetInfo()?.exerciseData.id;if(this.isExerciseFullyLogged(t))return t.sessionStatus="completed"," - Completed";if(this.isExercisePartiallyLogged(t)){t.sessionStatus=this.getExerciseStatus(t)||"started";let o=this.getNumberOfLoggedSets(t.id,"warmup"),n=e?"Current":"Started";return this.isExerciseSkipped(t)&&(n="Started (Skipped)"),this.isExerciseDoLater(t)&&(n="Started (Do Later)"),` - ${n}: ${o} of ${this.getWorkingSets(t)} done`}if(e)return t.sessionStatus="started"," - Current";switch(t.sessionStatus){case"skipped":return" - Skipped";case"do_later":return" - Do Later";default:return" - Pending"}}getExerciseButtonCssClass(t,e){let o=e.includes("Current"),n=!!t.supersetId,i="";switch(t.sessionStatus){case"started":i="bg-yellow-500 text-white";break;case"pending":i="bg-violet-500 text-white";break;case"do_later":i="bg-orange-500 text-white";break;case"skipped":i="bg-red-500 text-white";break;case"completed":i="bg-green-600 text-white";break;default:i="bg-gray-500 dark:bg-gray-700";break}return o&&(i="bg-blue-600 text-white"),`${i} ${n?"border-2 border-primary":""}`}getSupersetIndicatorText(t,e){if(!t.supersetId)return"";let n=e.exercises.filter(i=>i.supersetId===t.supersetId).findIndex(i=>i.id===t.id);return n!==-1?` [Superset #${n+1}]`:""}jumpToExercise(t=""){return j(this,null,function*(){if(t?this.headerOverviewString=t:this.headerOverviewString=this.HEADER_OVERVIEW_STRING,this.sessionState()==="paused"){this.toastService.warning("Session is paused. Resume to jump to an exercise",3e3,"Paused"),this.closeWorkoutMenu();return}let e=this.routine();if(!e||!e.exercises||e.exercises.length===0){this.toastService.error("No exercises available to jump to",0,"Error"),this.closeWorkoutMenu();return}let n=e.exercises.map((s,a)=>qt(Vt({},s),{originalIndex:a,isFullyLogged:this.isExerciseFullyLogged(s),isPartiallyLogged:this.isExercisePartiallyLogged(s)})).map(s=>{let a=this.getExerciseStatusIndicator(s),l=this.getSupersetIndicatorText(s,e),u=this.getExerciseButtonCssClass(s,a);return{text:`${s.exerciseName}${a}${l}`,role:s.isFullyLogged?"restart":"confirm",data:s.originalIndex,cssClass:u}});n.push({text:"CANCEL",role:"cancel",data:"cancel_jump"}),this.closeWorkoutMenu();let i=yield this.alertService.showConfirmationDialog(this.headerOverviewString,"Select an exercise to start, continue, or restart:",n);if(i&&i.data!=="cancel_jump"&&typeof i.data=="number"){let s=i.data,a=e.exercises[s];if(!a){this.toastService.error("Selected exercise not found",0,"Error");return}if(i.role==="restart"){if((yield this.alertService.showConfirmationDialog(`Restart ${a.exerciseName}`,"Are you sure you want to restart the selected exercise? By doing so the previous logged sets will be removed",[{text:"CANCEL",role:"cancel",data:"cancel"},{text:"OK",role:"confirm",data:"confirm"}]))?.data!=="confirm")return;console.log(`Restarting exercise: ${a.exerciseName}. Removing its previous log entry`),this.currentWorkoutLogExercises.update(f=>f.filter(g=>g.id!==a.id)),this.toastService.info(`Restarting ${a.exerciseName}.`,2e3,"Restarting")}console.log(`Jumping to exercise: ${a.exerciseName} at index ${s}`),this.stopOngoingTimers();let l=JSON.parse(JSON.stringify(e)),u=l.exercises[s],c=u.sessionStatus==="do_later"||u.sessionStatus==="skipped";u.sessionStatus="pending",this.routine.set(l),this.currentExerciseIndex.set(s);let p=this.findFirstUnloggedSetIndex(a.id,a.sets.map(m=>m.id))||0,d=i.role==="restart"?0:p;if(this.currentSetIndex.set(d),this.currentBlockRound.set(1),!a.supersetId||a.supersetOrder===0)this.totalBlockRounds.set(a.rounds??1);else{let m=l.exercises.find(f=>f.supersetId===a.supersetId&&f.supersetOrder===0);this.totalBlockRounds.set(m?.rounds??1)}this.lastPerformanceForCurrentExercise=null,this.isPerformingDeferredExercise=c,this.lastActivatedDeferredExerciseId=c?a.id:null,this.playerSubState.set("performing_set"),yield this.prepareCurrentSet(),i.role!=="restart"&&this.toastService.info(`Jumped to ${a.exerciseName}, set ${d+1} of ${a.sets?.length}.`,2500)}})}stopOngoingTimers(){this.isRestTimerVisible()&&this.isRestTimerVisible.set(!1),this.playerSubState(),this.playerSubState()==="preset_countdown"&&this.presetTimerSub&&(this.presetTimerSub.unsubscribe(),this.presetTimerSub=void 0,this.presetTimerCountdownDisplay.set(null)),this.timedSetTimerState()!=="idle"&&this.timedSetIntervalSub&&this.resetTimedSet()}loadAvailableExercises(){this.exerciseService.getExercises().pipe(jt(1)).subscribe(t=>{this.availableExercises=t.filter(e=>!e.isHidden)})}isEndReached=ge(!1);openExerciseSelectionModal(){if(this.sessionState()==="paused"){this.toastService.warning("Session is paused. Resume to add exercise",3e3,"Paused");return}this.availableExercises.length===0&&this.loadAvailableExercises(),this.modalSearchTerm.set(""),this.isExerciseAddModalOpen.set(!0),this.closeWorkoutMenu(),setTimeout(()=>{this.myExerciseInput&&this.myExerciseInput.nativeElement&&this.myExerciseInput?.nativeElement?.focus()})}closeExerciseSelectionModal(){this.isExerciseAddModalOpen.set(!1)}onModalSearchTermChange(t){let e=t.target;this.modalSearchTerm.set(e.value)}onSearchEnter(t="add"){let e=this.filteredAvailableExercises();if(e.length===1){let o=e[0];t==="switch"?this.selectExerciseToSwitch(o):this.selectExerciseToAddFromModal(o)}}isExerciseDetailModalOpen=ge(!1);isSimpleModalOpen=ge(!1);exerciseDetailsId="";exerciseDetailsName="";performAction(){console.log("Action performed from modal footer!"),this.isExerciseDetailModalOpen.set(!1)}openModal(t){this.exerciseDetailsId=t.exerciseId,this.exerciseDetailsName=t.exerciseName||"Exercise details",this.isSimpleModalOpen.set(!0)}showCompletedSetsForExerciseInfo=ge(!0);toggleCompletedSetsForExerciseInfo(){this.showCompletedSetsForExerciseInfo.update(t=>!t)}showCompletedSetsForDayInfo=ge(!1);toggleCompletedSetsForDayInfo(){this.showCompletedSetsForDayInfo.update(t=>!t)}getRoundsForExerciseBlock(t,e){let o=e.exercises[t];return o?o.supersetId?e.exercises.find(i=>i.supersetId===o.supersetId&&i.supersetOrder===0)?.rounds??1:o.rounds??1:1}setupTabataMode(t,e=0,o){let n=[];this.tabataIntervalMap=[],n.push({type:"prepare",duration:10,exerciseName:"Get Ready"}),this.tabataIntervalMap.push([0,0,1]);let i=0;for(;i<t.exercises.length;){let l=t.exercises[i],u=this.getRoundsForExerciseBlock(i,t),p=!!l.supersetId?l.supersetSize??1:1;for(let d=1;d<=u;d++)for(let m=0;m<p;m++){let f=i+m,g=t.exercises[f];if(!g)continue;let x=d===u;g.sets.forEach((y,b)=>{n.push({type:"work",duration:y.duration||40,exerciseName:g.exerciseName}),this.tabataIntervalMap.push([f,b,d]);let I=f===t.exercises.length-1,N=b===g.sets.length-1;x&&I&&N||y.restAfterSet>0&&(n.push({type:"rest",duration:y.restAfterSet||20,exerciseName:"Rest"}),this.tabataIntervalMap.push([f,b,d]))})}i+=p}let s=n.length,a=n.map((l,u)=>qt(Vt({},l),{totalIntervals:s,currentIntervalNumber:u+1}));this.tabataIntervals.set(a),this.sessionState.set("playing"),this.routine.set(t),this.isTabataMode.set(!0),this.setPlayerStateFromTabataIndex(e),o!==void 0&&o>0?this.startCurrentTabataInterval(o):this.startCurrentTabataInterval()}startCurrentTabataInterval(t){if(this.tabataTimerSub&&this.tabataTimerSub.unsubscribe(),this.sessionState()==="paused")return;let e=this.currentTabataInterval();if(!e){this.sessionState.set("end"),this.finishWorkoutAndReportStatus();return}let o=t!==void 0?t:e.duration;this.tabataTimeRemaining.set(o),this.tabataTimerSub=mp(0,1e3).pipe(jt(e.duration+1),si(this.destroy$)).subscribe({next:()=>{this.tabataTimeRemaining.update(n=>n-1)},complete:()=>{this.sessionState()==="playing"&&this.nextTabataInterval()}})}nextTabataInterval(){this.currentTabataInterval()?.type==="work"&&this.completeAndLogCurrentSet();let t=this.currentTabataIntervalIndex()+1;t<this.tabataIntervals().length?(this.setPlayerStateFromTabataIndex(t),this.startCurrentTabataInterval()):(this.tabataTimeRemaining.set(0),this.tabataTimerSub&&this.tabataTimerSub.unsubscribe(),this.sessionState.set("end"),this.finishWorkoutAndReportStatus())}previousTabataInterval(){let t=this.currentTabataIntervalIndex()-1;t>=0&&(this.currentTabataIntervalIndex.set(t),this.startCurrentTabataInterval())}toggleTabataPause(){this.sessionState()==="playing"?(this.sessionState.set("paused"),this.tabataTimerSub&&this.tabataTimerSub.unsubscribe(),this.timerSub&&this.timerSub.unsubscribe(),this.sessionTimerElapsedSecondsBeforePause+=Math.floor((Date.now()-this.workoutStartTime)/1e3)):this.sessionState()==="paused"&&(this.sessionState.set("playing"),this.workoutStartTime=Date.now(),this.startSessionTimer(),this.startCurrentTabataInterval())}getCurrentSetInfo(){let t=this.routine(),e=this.currentExerciseIndex(),o=this.currentSetIndex();if(t&&t.exercises[e]&&t.exercises[e].sets[o]){let n=t.exercises[e],i=t.exercises[e].sets[o],a=this.currentWorkoutLogExercises().find(l=>l.exerciseId===n.exerciseId)?.sets.find(l=>l.plannedSetId===i.id);return{exerciseIndex:e,setIndex:o,exerciseData:n,setData:i,type:i.type??"standard",baseExerciseInfo:void 0,isCompleted:!!a,actualReps:a?.repsAchieved,actualWeight:a?.weightUsed,actualDuration:a?.durationPerformed,notes:a?.notes}}return null}isExerciseSwitchModalOpen=ge(!1);switchModalSearchTerm=ge("");isShowingSimilarInSwitchModal=ge(!1);exercisesForSwitchModal=ge([]);filteredExercisesForSwitchModal=gt(()=>{let t=this.switchModalSearchTerm().toLowerCase();return this.isShowingSimilarInSwitchModal()?this.exercisesForSwitchModal():t?(t=this.exerciseService.normalizeExerciseNameForSearch(t),this.availableExercises.filter(e=>e.name.toLowerCase().includes(t)||e.category&&e.category.toLowerCase().includes(t)||e.primaryMuscleGroup&&e.primaryMuscleGroup.toLowerCase().includes(t))):this.availableExercises});openSwitchExerciseModal(){return j(this,null,function*(){if(this.closeWorkoutMenu(),!this.canSwitchExercise()){this.toastService.warning("Cannot switch exercise after starting it.",3e3,"Action not allowed");return}this.isShowingSimilarInSwitchModal.set(!1),this.switchModalSearchTerm.set(""),this.exercisesForSwitchModal.set([]),this.isExerciseSwitchModalOpen.set(!0)})}closeSwitchExerciseModal(){this.isExerciseSwitchModalOpen.set(!1)}findAndShowSimilarExercises(){return j(this,null,function*(){let t=this.activeSetInfo();if(!t)return;let e=this.currentBaseExercise();if(!e&&(e=yield Eo(this.exerciseService.getExerciseById(t.exerciseData.exerciseId)),!e)){this.toastService.error("Could not load details for the current exercise.",0,"Error");return}try{let o=yield Eo(this.exerciseService.getSimilarExercises(e,12));o.length===0&&this.toastService.info("No similar exercises found based on muscle groups.",4e3,"Not Found"),this.exercisesForSwitchModal.set(o),this.isShowingSimilarInSwitchModal.set(!0)}catch(o){console.error("Error fetching similar exercises:",o),this.toastService.error("Could not load similar exercises.",0,"Error")}})}selectExerciseToSwitch(t){return j(this,null,function*(){this.closeSwitchExerciseModal(),yield this.replaceCurrentExerciseInRoutine(t)})}replaceCurrentExerciseInRoutine(t){return j(this,null,function*(){let e=this.routine(),o=this.activeSetInfo();if(!e||!o){this.toastService.error("Failed to switch exercise: Routine data missing.",0,"Error");return}let n=JSON.parse(JSON.stringify(e)),i=n.exercises[o.exerciseIndex];if(i){console.log(`Switching '${i.exerciseName}' with '${t.name}'`),i.exerciseId=t.id,i.exerciseName=t.name;let s=this.originalRoutineSnapshot.find(a=>a.id===i.id);s&&(s.exerciseId=t.id,s.exerciseName=t.name),this.routine.set(n),this.lastPerformanceForCurrentExercise=null,this.currentBaseExercise.set(null),this.exercisePBs.set([]),yield this.prepareCurrentSet(),this.toastService.info(`Switched to ${t.name}`,3e3,"Exercise Switched")}else this.toastService.error("Could not find the exercise to replace in the routine.",0,"Error")})}canSwitchExercise=gt(()=>{let t=this.activeSetInfo();return!t||this.sessionState()==="paused"?!1:this.getNumberOfLoggedSets(t.exerciseData.id)===0});backToRoutines(){this.router.navigate(["/workout"])}static \u0275fac=function(e){return new(e||r)};static \u0275cmp=zr({type:r,selectors:[["app-workout-player"]],viewQuery:function(e,o){if(e&1&&(Hr(dB,5),Hr(mB,5)),e&2){let n;Kr(n=qr())&&(o.myExerciseInput=n.first),Kr(n=qr())&&(o.intervalListItems=n)}},hostBindings:function(e,o){e&1&&ne("beforeunload",function(i){return o.unloadNotification(i)},$d)},features:[Dd([dn])],decls:9,vars:20,consts:[["loadingOrError",""],["standardPlayer",""],["intervalListItem",""],["workoutCompleteOrError",""],["loadingBaseExIcon",""],["style","height: 60px; position: fixed; top: 0; left: 0; right: 0; z-index: 50;",4,"ngIf","ngIfElse"],[3,"timerFinished","timerSkipped","isVisible","mainTimer","durationSeconds","mainText","nextUpText"],["class","fixed inset-0 z-50 bg-black/70 backdrop-blur-md flex flex-col justify-center items-center","style","padding-top: env(safe-area-inset-top); padding-bottom: env(safe-area-inset-bottom);",4,"ngIf"],["style","z-index: 100","class","fixed inset-0 bg-gray-900/70 dark:bg-black/80 backdrop-blur-md flex items-center justify-center p-4 transition-opacity duration-300 ease-in-out",4,"ngIf"],["title","ADD EXERCISE TO SESSION","itemIconName","plus-circle","itemIconClass","text-primary dark:text-primary-light",3,"searchTermChange","exerciseSelected","createCustomClicked","close","isOpen","searchTerm","exercises","showCreateCustomLink"],["searchPlaceholder","Search for a replacement...","itemIconName","change","itemIconClass","text-green-500",3,"searchTermChange","exerciseSelected","findSimilarClicked","backToSearchClicked","close","isOpen","searchTerm","title","exercises","showSimilarButton","isShowingSimilarView"],[3,"isOpen","modalTitle","isOpenChange",4,"ngIf"],[2,"height","60px","position","fixed","top","0","left","0","right","0","z-index","50"],["class","tabata-player",4,"ngIf","ngIfElse"],[1,"tabata-player"],[4,"ngIf"],[1,"fixed","inset-0","transition-all","duration-700","ease-in-out",3,"ngClass"],[1,"relative","z-10","flex","flex-col","h-screen","text-white","p-4","font-sans"],[1,"flex","justify-between","items-center","w-full","px-4","flex-shrink-0","mt-2"],[1,"text-sm","font-medium","bg-black/20","px-3","py-1","rounded-full"],[1,"flex","items-center","space-x-2"],["appPress","",1,"bg-black/20","rounded-full","hover:bg-black/40","transition",3,"shortPress"],["xmlns","http://www.w3.org/2000/svg","class","h-12 w-12","fill","none","viewBox","0 0 24 24","stroke","currentColor",4,"ngIf"],[1,"flex","flex-col","items-center","justify-center","text-center"],["class","text-2xl md:text-3xl font-semibold mb-2 text-shadow-md bg-black/20 px-4 py-1 rounded-full",4,"ngIf"],[1,"text-[250px]","md:text-[450px]","font-bold","tabular-nums","leading-none","tracking-tighter","text-shadow-lg"],[1,"text-2xl","md:text-3xl","font-semibold","capitalize","mt-2","text-shadow"],[1,"flex-shrink-0","max-h-48","overflow-y-auto","mb-2","scrollbar-hide","px-2"],[1,"space-y-0"],["class","text-lg px-2 py-0 transition-all duration-300 ease-in-out",4,"ngFor","ngForOf"],[1,"flex-shrink-0","flex","justify-between","items-center","w-full"],["appPress","",1,"p-2","disabled:opacity-30","hover:scale-110","active:scale-95","transition-transform",3,"shortPress","disabled"],["xmlns","http://www.w3.org/2000/svg","fill","none","viewBox","0 0 24 24","stroke","currentColor",1,"h-10","w-10"],["stroke-linecap","round","stroke-linejoin","round","stroke-width","2","d","M11 19l-7-7 7-7m8 14l-7-7 7-7"],[1,"text-2xl","font-semibold","bg-black/20","px-4","py-2","rounded-full","tabular-nums"],["stroke-linecap","round","stroke-linejoin","round","stroke-width","2","d","M13 5l7 7-7 7M5 5l7 7-7 7"],["xmlns","http://www.w3.org/2000/svg","fill","none","viewBox","0 0 24 24","stroke","currentColor",1,"h-12","w-12"],["stroke-linecap","round","stroke-linejoin","round","stroke-width","2","d","M10 9v6m4-6v6"],["stroke-linecap","round","stroke-linejoin","round","stroke-width","2","d","M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z"],[1,"text-2xl","md:text-3xl","font-semibold","mb-2","text-shadow-md","bg-black/20","px-4","py-1","rounded-full"],[1,"text-lg","px-2","py-0","transition-all","duration-300","ease-in-out"],[1,"rounded-md","flex","items-center","p-2","transition-all","duration-200","ease-in-out",3,"ngClass"],[1,"font-mono","w-8","text-right","mr-2"],[1,"capitalize","font-medium"],["class","ml-2 font-light truncate",4,"ngIf"],[1,"ml-2","font-light","truncate"],["class","workout-player-container bg-gray-50 dark:bg-gray-950 flex flex-col justify-center",4,"ngIf","ngIfElse"],[1,"workout-player-container","bg-gray-50","dark:bg-gray-950","flex","flex-col","justify-center"],["class","fixed inset-0 z-[60] bg-black/70 backdrop-blur-sm flex flex-col items-center justify-center space-y-6 p-4",4,"ngIf"],[1,"fixed","top-0","left-0","right-0","z-30","bg-gray-50","dark:bg-gray-950","border-b","border-gray-200","dark:border-gray-800","p-2","flex","items-center","justify-between","h-15"],["appPress","",1,"text-gray-600","dark:text-gray-300","hover:text-primary","dark:hover:text-primary-light","p-2","-ml-1",3,"shortPress"],["fill","none","stroke","currentColor","viewBox","0 0 24 24","xmlns","http://www.w3.org/2000/svg",1,"w-6","h-6"],["stroke-linecap","round","stroke-linejoin","round","stroke-width","2","d","M15 19l-7-7 7-7"],["appPress","",1,"flex","flex-col","items-center","cursor-pointer",3,"shortPress","title"],[1,"text-m","font-semibold","text-gray-700","dark:text-gray-300","uppercase","tracking-wider","truncate","max-w-[calc(100vw-120px)]"],[1,"text-lg","text-white","dark:text-gray-200","bg-primary-dark","rounded-md","w-32","text-center"],["appPress","",1,"text-gray-600","dark:text-gray-300","hover:text-primary","dark:hover:text-primary-light","p-2","-mr-1","disabled:opacity-50",3,"shortPress","disabled"],["xmlns","http://www.w3.org/2000/svg","fill","none","viewBox","0 0 24 24","stroke","currentColor","stroke-width","2",1,"h-6","w-6"],["stroke-linecap","round","stroke-linejoin","round","d","M12 5v.01M12 12v.01M12 19v.01M12 6a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2z"],[1,"flex-grow","overflow-y-auto","your-main-container",2,"transform","translateY(80px)"],["class","px-2 max-w-md mx-auto",4,"ngIf","ngIfElse"],["class","fixed bottom-[76px] left-0 right-0 z-10 bg-gray-100 dark:bg-gray-900 border-t border-gray-200 dark:border-gray-700 p-2 text-center h-auto min-h-[60px] flex flex-col justify-center shadow-[0_-1px_3px_rgba(0,0,0,0.07)]",4,"ngIf"],[1,"fixed","inset-0","z-[60]","bg-black/70","backdrop-blur-sm","flex","flex-col","items-center","justify-center","space-y-6","p-4"],[1,"text-4xl","font-bold","text-white"],[1,"text-lg","text-gray-200"],["appPress","",1,"flex","items-center","justify-center","bg-green-500","hover:bg-green-600","text-white","font-bold","py-3","px-8","rounded-md","text-xl","shadow-lg","w-full","max-w-xs",3,"shortPress"],["name","play",1,"w-7","h-7","mr-1"],["appPress","",1,"flex","items-center","justify-center","text-m","text-red-300","hover:text-red-100","font-medium","py-2","px-4","rounded-md","border","border-red-300","hover:bg-red-700/30","w-full","max-w-xs","mt-2",3,"shortPress"],["name","exit-door",1,"w-7","h-7","mr-1"],[1,"px-2","max-w-md","mx-auto"],["appPress","",1,"flex","text-center","justify-center","items-center","mb-1","hover:cursor-pointer",3,"shortPress","title"],["class","mr-2 h-8 w-8 flex-shrink-0",4,"ngIf","ngIfElse"],[1,"text-2xl","font-bold","text-gray-800","dark:text-gray-100","truncate",3,"title"],[1,"text-center","mb-2"],["class","flex flex-col",4,"ngIf"],[1,"text-m","text-gray-500","dark:text-gray-400"],["class","text-blue-500 dark:text-blue-400",4,"ngIf"],["class","ml-2",4,"ngIf"],["class","ml-2 text-purple-500 dark:text-purple-400 italic",4,"ngIf"],["class","text-center mb-3",4,"ngIf"],["class","text-center mb-6 animate-fadeIn",4,"ngIf"],["class","left-0 right-0 z-20 p-3 mt-5",4,"ngIf"],["class","text-wrap text-sm text-center text-gray-800 dark:text-gray-100 px-2 text-s",3,"title",4,"ngIf"],[1,"mr-2","h-8","w-8","flex-shrink-0"],["class","w-full h-full object-contain",3,"src","alt","ngClass",4,"ngIf"],[1,"w-full","h-full","object-contain",3,"src","alt","ngClass"],[1,"w-8","h-8","bg-gray-200","dark:bg-gray-700","rounded-md","animate-pulse","mr-2","flex-shrink-0"],[1,"flex","flex-col"],[1,"text-xs","text-gray-500","dark:text-gray-400"],[1,"text-blue-500","dark:text-blue-400"],[1,"ml-2"],[1,"ml-2","text-purple-500","dark:text-purple-400","italic"],[1,"text-center","mb-3"],["class","px-2 py-0.5 text-xs font-semibold text-red-700 bg-red-100 dark:bg-red-900 dark:text-red-200 rounded-full",4,"ngIf"],["class","px-2 py-0.5 text-xs font-semibold text-yellow-700 bg-yellow-100 dark:bg-yellow-800 dark:text-yellow-200 rounded-full",4,"ngIf"],[1,"px-2","py-0.5","text-xs","font-semibold","text-red-700","bg-red-100","dark:bg-red-900","dark:text-red-200","rounded-full"],[1,"px-2","py-0.5","text-xs","font-semibold","text-yellow-700","bg-yellow-100","dark:bg-yellow-800","dark:text-yellow-200","rounded-full"],[1,"text-center","mb-6","animate-fadeIn"],[1,"text-xl","font-semibold","text-blue-600","dark:text-blue-400"],[1,"text-4xl","sm:text-5xl","font-bold","text-blue-500","dark:text-blue-300","my-3"],[1,"text-m","text-gray-600","dark:text-gray-400"],["appPress","",1,"mt-4","text-xs","text-primary","dark:text-primary-light","hover:underline",3,"shortPress"],[1,"space-y-2","mb-2",3,"formGroup"],["class","mt-5",4,"ngIf"],["class","flex justify-center cursor-pointer pt-5","appPress","",3,"shortPress",4,"ngIf"],[1,"block","text-xs","font-medium","text-gray-500","dark:text-gray-400","uppercase","tracking-wider","text-center","mb-1"],[1,"flex","items-center","justify-center","space-x-2"],["type","button","appPress","",1,"p-4","bg-gray-400","dark:bg-gray-700","text-gray-800","dark:text-gray-200","hover:bg-gray-300","dark:hover:bg-gray-600","disabled:opacity-50","rounded-r-sm","rounded-l-2xl",3,"shortPress","longPress","pressRelease","disabled"],["fill","none","stroke","currentColor","viewBox","0 0 24 24",1,"w-5","h-5"],["stroke-linecap","round","stroke-linejoin","round","stroke-width","2","d","M20 12H4"],["appPress","",1,"w-20","text-center","text-3xl","font-bold","bg-transparent","p-0","text-gray-800","dark:text-gray-100","cursor-pointer","hover:bg-gray-100","dark:hover:bg-gray-800","py-1",3,"shortPress"],["type","number","formControlName","actualWeight",1,"hidden"],["type","button","appPress","",1,"p-4","bg-gray-400","dark:bg-gray-700","text-gray-800","dark:text-gray-200","hover:bg-gray-300","dark:hover:bg-gray-600","disabled:opacity-50","rounded-l-sm","rounded-r-2xl",3,"shortPress","longPress","pressRelease","disabled"],["stroke-linecap","round","stroke-linejoin","round","stroke-width","2","d","M12 4v16m8-8H4"],["appPress","","type","number","formControlName","actualReps","readonly","","placeholder","0",1,"w-20","text-center","text-3xl","font-bold","bg-transparent","p-0","text-gray-800","dark:text-gray-100","cursor-pointer","hover:bg-gray-100","dark:hover:bg-gray-800","py-1",3,"shortPress"],["for","timedSetDisplay",1,"block","text-xs","font-medium","text-gray-500","dark:text-gray-400","uppercase","tracking-wider","text-center"],["id","timedSetDisplay",1,"block","w-full","px-3","py-1","border-none","text-6xl","font-bold","text-center","bg-transparent","focus:ring-0","hover:cursor-default","unselectable",3,"ngClass"],["type","number","formControlName","actualDuration",1,"hidden"],[1,"flex","space-x-2","mt-2","justify-center"],["type","button",1,"flex","items-center","justify-center","flex-grow","min-w-[150px]","max-w-[150px]","font-medium","py-2","px-3","rounded-full","transition-colors","text-m","disabled:opacity-50",3,"click","ngClass"],["name","play","class","h-8 w-8 text-white",4,"ngIf"],["name","pause","class","h-8 w-8 text-white",4,"ngIf"],["class","text-white",4,"ngIf"],["type","button","appPress","","class","flex items-center justify-center min-w-[150px] max-w-[150px] gap-x-2 bg-gray-300 hover:bg-gray-400 dark:bg-gray-700 dark:hover:bg-gray-500 text-white font-medium py-2 px-3 rounded-full transition-colors text-m disabled:opacity-50",3,"shortPress",4,"ngIf"],["name","play",1,"h-8","w-8","text-white"],["name","pause",1,"h-8","w-8","text-white"],[1,"text-white"],["type","button","appPress","",1,"flex","items-center","justify-center","min-w-[150px]","max-w-[150px]","gap-x-2","bg-gray-300","hover:bg-gray-400","dark:bg-gray-700","dark:hover:bg-gray-500","text-white","font-medium","py-2","px-3","rounded-full","transition-colors","text-m","disabled:opacity-50",3,"shortPress"],["name","change",1,"w-5","h-5"],[1,"mt-5"],["for","setNotes","appPress","",1,"block","text-xs","font-medium","text-gray-500","dark:text-gray-400","uppercase","tracking-wider","text-center","mb-1",3,"shortPress"],["id","setNotes","formControlName","setNotes","rows","1","placeholder","e.g., felt good, struggled on last rep...",1,"w-full","p-2","border","border-gray-300","dark:border-gray-600","rounded-md","shadow-sm","focus:ring-primary","focus:border-primary","dark:bg-gray-800","dark:text-gray-200","text-m","disabled:opacity-60",3,"disabled"],["appPress","",1,"flex","justify-center","cursor-pointer","pt-5",3,"shortPress"],[1,"inline-flex","items-center","space-x-2","bg-blue-400","text-white","rounded-full","px-4","py-1"],["xmlns","http://www.w3.org/2000/svg","fill","none","viewBox","0 0 24 24","stroke-width","1.5","stroke","currentColor",1,"w-6","h-6","transition-all","mr-2"],["stroke-linecap","round","stroke-linejoin","round"],[1,"left-0","right-0","z-20","p-3","mt-5"],[1,"max-w-md","mx-auto"],["appPress","","appPress","",1,"w-full","font-bold","py-3.5","px-4","rounded-full","shadow-md","text-lg","transition-colors","focus:outline-none","focus:ring-2","disabled:opacity-70","text-white","transition-colors","duration-150",3,"shortPress","disabled","ngClass"],[1,"text-wrap","text-sm","text-center","text-gray-800","dark:text-gray-100","px-2","text-s",3,"title"],[1,"font-medium"],[1,"text-center","py-10","pt-16"],[1,"text-2xl","font-semibold","text-gray-700","dark:text-gray-200"],["class","text-gray-600 dark:text-gray-400 mt-2",4,"ngIf"],["appPress","","class","mt-6 bg-primary hover:bg-primary-dark text-white font-bold py-3 px-6 rounded-md shadow-md text-lg transition-colors",3,"shortPress",4,"ngIf"],[1,"flex","justify-center","items-center","gap-3","flex-col"],["appPress","","class","flex justify-center items-center mt-1 w-full max-w-xs bg-gray-500 hover:bg-gray-600 text-white font-semibold py-2 px-6 rounded-md text-md shadow-md disabled:opacity-60 disabled:cursor-not-allowed",3,"shortPress",4,"ngIf"],["appPress","",1,"w-full","max-w-xs","bg-purple-500","hover:bg-purple-600","text-white","font-semibold","py-2","px-6","rounded-md","text-md","shadow-md","disabled:opacity-60","disabled:cursor-not-allowed","mt-1",3,"shortPress","disabled"],[1,"text-gray-600","dark:text-gray-400","mt-2"],["appPress","",1,"mt-6","bg-primary","hover:bg-primary-dark","text-white","font-bold","py-3","px-6","rounded-md","shadow-md","text-lg","transition-colors",3,"shortPress"],["appPress","",1,"flex","justify-center","items-center","mt-1","w-full","max-w-xs","bg-gray-500","hover:bg-gray-600","text-white","font-semibold","py-2","px-6","rounded-md","text-md","shadow-md","disabled:opacity-60","disabled:cursor-not-allowed",3,"shortPress"],["xmlns","http://www.w3.org/2000/svg","fill","none","viewBox","0 0 24 24","stroke","currentColor","stroke-width","1.5",1,"h-6","w-6","mr-1"],["_ngcontent-ng-c2442506092","","stroke-linecap","round","stroke-linejoin","round","d","M3.75 12h16.5m-16.5 3.75h16.5M3.75 19.5h16.5M5.625 4.5h12.75a1.875 1.875 0 0 1 0 3.75H5.625a1.875 1.875 0 0 1 0-3.75Z"],[1,"fixed","bottom-[76px]","left-0","right-0","z-10","bg-gray-100","dark:bg-gray-900","border-t","border-gray-200","dark:border-gray-700","p-2","text-center","h-auto","min-h-[60px]","flex","flex-col","justify-center","shadow-[0_-1px_3px_rgba(0,0,0,0.07)]"],[1,"max-w-md","mx-auto","w-full"],[1,"text-xs","font-semibold","text-gray-500","dark:text-gray-400","uppercase","tracking-wider"],[1,"text-base","font-medium","text-gray-800","dark:text-gray-100","truncate","px-4",3,"title"],[1,"text-m","text-gray-600","dark:text-gray-300"],["appPress","",1,"ml-2","text-xs","text-primary","dark:text-primary-light","hover:underline",3,"shortPress"],[1,"text-xl","font-bold","text-blue-600","dark:text-blue-300"],["appPress","",1,"mt-0.5","text-xs","text-primary","dark:text-primary-light","hover:underline",3,"shortPress"],[1,"fixed","inset-0","z-50","bg-black/70","backdrop-blur-md","flex","flex-col","justify-center","items-center",2,"padding-top","env(safe-area-inset-top)","padding-bottom","env(safe-area-inset-bottom)"],[1,"flex","grid-cols-3","justify-center"],[1,"text-2xl","sm:text-3xl","font-bold","text-white","mb-2","justify-end"],["appPress","",1,"p-1.5","rounded-full","text-gray-500","hover:text-gray-700","dark:text-gray-400","dark:hover:text-gray-200","hover:bg-gray-100","dark:hover:bg-gray-700/70","focus:outline-none","transition-colors","ml-2",3,"shortPress"],["name","cancel",1,"h-6","w-6","text-white","mr-1"],[1,"grid","grid-cols-1","sm:grid-cols-2","gap-2","items-stretch","p-4","max-w-[800px]"],["appPress","",1,"flex","justify-center","items-center","w-full","max-w-xs","bg-yellow-500","hover:bg-yellow-600","text-white","font-bold","py-2.5","px-6","rounded-md","text-lg","shadow-lg","disabled:opacity-60","disabled:cursor-not-allowed",3,"shortPress","disabled"],["name","pause",1,"h-6","w-6","text-white","mr-1"],["appPress","","class","flex justify-center items-center w-full max-w-xs bg-fuchsia-500 hover:bg-fuchsia-600 text-white font-semibold py-2 px-6 rounded-md text-md shadow-md disabled:opacity-60 disabled:cursor-not-allowed",3,"disabled","shortPress",4,"ngIf"],["appPress","","class","w-full max-w-xs bg-cyan-500 hover:bg-cyan-600 text-white font-semibold py-2 px-6 rounded-md text-md shadow-md disabled:opacity-60 disabled:cursor-not-allowed flex items-center justify-center",3,"shortPress",4,"ngIf"],["appPress","",1,"flex","items-center","justify-center","align-center","w-full","max-w-xs","bg-cyan-500","hover:bg-cyan-600","text-white","font-semibold","py-2","px-6","rounded-md","text-md","shadow-md","disabled:opacity-60","disabled:cursor-not-allowed",3,"shortPress","disabled"],["name","schedule",1,"h-8","w-8","text-white","mr-1"],["appPress","","class","w-full flex items-center justify-center max-w-xs bg-sky-500 hover:bg-sky-600 text-white font-semibold py-2 px-6 rounded-md text-md shadow-md disabled:opacity-60 disabled:cursor-not-allowed",3,"disabled","shortPress",4,"ngIf"],["appPress","",1,"flex","items-center","justify-center","align-center","w-full","max-w-xs","bg-purple-500","hover:bg-purple-600","text-white","font-semibold","py-2","px-6","rounded-md","text-md","shadow-md","disabled:opacity-60","disabled:cursor-not-allowed",3,"shortPress","disabled"],["name","muscle",1,"h-8","w-8","text-white","mr-1"],["appPress","","class","w-full flex items-center justify-center max-w-xs bg-blue-500 hover:bg-blue-600 text-white font-semibold py-2 px-6 rounded-md text-md shadow-md disabled:opacity-60 disabled:cursor-not-allowed",3,"disabled","shortPress",4,"ngIf"],["appPress","","class","w-full flex items-center justify-center max-w-xs bg-indigo-500 hover:bg-indigo-600 text-white font-semibold py-2 px-6 rounded-md text-md shadow-md disabled:opacity-60 disabled:cursor-not-allowed",3,"disabled","shortPress",4,"ngIf"],["appPress","","class","w-full flex items-center justify-center max-w-xs bg-orange-500 hover:bg-orange-600 text-white font-semibold py-2 px-6 rounded-md text-md shadow-md disabled:opacity-60 disabled:cursor-not-allowed",3,"disabled","shortPress",4,"ngIf"],["appPress","","class","w-full flex items-center justify-center max-w-xs bg-teal-500 hover:bg-teal-600 text-white font-semibold py-2 px-6 rounded-md text-md shadow-md disabled:opacity-60 disabled:cursor-not-allowed",3,"disabled","shortPress",4,"ngIf"],["appPress","",1,"w-full","flex","items-center","justify-center","max-w-xs","text-red-300","hover:text-red-100","font-medium","py-2","px-6","rounded-md","border","border-red-400","hover:bg-red-700/50","text-md",3,"shortPress"],["name","exit-door",1,"h-6","w-6","text-white","mr-1"],["appPress","",1,"flex","justify-center","items-center","w-full","max-w-xs","bg-fuchsia-500","hover:bg-fuchsia-600","text-white","font-semibold","py-2","px-6","rounded-md","text-md","shadow-md","disabled:opacity-60","disabled:cursor-not-allowed",3,"shortPress","disabled"],["name","dumbbell",1,"h-6","w-6","text-white","mr-1"],["appPress","",1,"w-full","max-w-xs","bg-cyan-500","hover:bg-cyan-600","text-white","font-semibold","py-2","px-6","rounded-md","text-md","shadow-md","disabled:opacity-60","disabled:cursor-not-allowed","flex","items-center","justify-center",3,"shortPress"],["name","change",1,"h-6","w-6","text-white","mr-1"],["appPress","",1,"w-full","flex","items-center","justify-center","max-w-xs","bg-sky-500","hover:bg-sky-600","text-white","font-semibold","py-2","px-6","rounded-md","text-md","shadow-md","disabled:opacity-60","disabled:cursor-not-allowed",3,"shortPress","disabled"],["name","plus-circle",1,"h-6","w-6","text-white","mr-1"],["class","text-xs text-white ml-2",4,"ngIf"],[1,"text-xs","text-white","ml-2"],["appPress","",1,"w-full","flex","items-center","justify-center","max-w-xs","bg-blue-500","hover:bg-blue-600","text-white","font-semibold","py-2","px-6","rounded-md","text-md","shadow-md","disabled:opacity-60","disabled:cursor-not-allowed",3,"shortPress","disabled"],["name","skip",1,"h-6","w-6","text-white","mr-1"],["appPress","",1,"w-full","flex","items-center","justify-center","max-w-xs","bg-indigo-500","hover:bg-indigo-600","text-white","font-semibold","py-2","px-6","rounded-md","text-md","shadow-md","disabled:opacity-60","disabled:cursor-not-allowed",3,"shortPress","disabled"],["appPress","",1,"w-full","flex","items-center","justify-center","max-w-xs","bg-orange-500","hover:bg-orange-600","text-white","font-semibold","py-2","px-6","rounded-md","text-md","shadow-md","disabled:opacity-60","disabled:cursor-not-allowed",3,"shortPress","disabled"],["name","clock",1,"h-6","w-6","text-white","mr-1"],["appPress","",1,"w-full","flex","items-center","justify-center","max-w-xs","bg-teal-500","hover:bg-teal-600","text-white","font-semibold","py-2","px-6","rounded-md","text-md","shadow-md","disabled:opacity-60","disabled:cursor-not-allowed",3,"shortPress","disabled"],["name","done",1,"h-6","w-6","text-white","mr-1"],[1,"fixed","inset-0","bg-gray-900/70","dark:bg-black/80","backdrop-blur-md","flex","items-center","justify-center","p-4","transition-opacity","duration-300","ease-in-out",2,"z-index","100"],[1,"bg-white","dark:bg-gray-800","rounded-xl","shadow-2xl","w-full","max-w-xl","max-h-[90vh]","flex","flex-col","overflow-hidden","transform","transition-all","duration-300","ease-in-out","scale-95","opacity-0","animate-modal-appear"],[1,"p-5","border-b","border-gray-200","dark:border-gray-700","flex","justify-between","items-center"],[1,"flex","items-center","gap-3"],["xmlns","http://www.w3.org/2000/svg","fill","none","viewBox","0 0 24 24","stroke","currentColor","stroke-width","2",1,"h-7","w-7","text-primary","dark:text-primary-light"],["stroke-linecap","round","stroke-linejoin","round","d","M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"],[1,"text-xl","font-semibold","text-gray-800","dark:text-gray-100"],["appPress","",1,"p-1.5","rounded-full","text-gray-500","hover:text-gray-700","dark:text-gray-400","dark:hover:text-gray-200","hover:bg-gray-100","dark:hover:bg-gray-700/70","focus:outline-none","transition-colors",3,"shortPress"],["xmlns","http://www.w3.org/2000/svg","fill","none","viewBox","0 0 24 24","stroke","currentColor","stroke-width","2.5",1,"h-6","w-6"],["stroke-linecap","round","stroke-linejoin","round","d","M6 18L18 6M6 6l12 12"],["class","p-5 overflow-y-auto space-y-6 flex-grow custom-scrollbar",4,"ngIf"],[1,"p-4","bg-gray-50","dark:bg-gray-800","border-t","border-gray-200","dark:border-gray-700","text-right"],["appPress","",1,"flex","items-center","bg-primary","hover:bg-primary-dark","focus:ring-4","focus:ring-primary-focus","text-white","font-semibold","py-2.5","px-6","rounded-md","text-sm","transition-colors","shadow-md","hover:shadow-lg",3,"shortPress"],["name","done",1,"h-6","w-6"],[1,"p-5","overflow-y-auto","space-y-6","flex-grow","custom-scrollbar"],[1,"rounded-md","border","border-gray-200","dark:border-gray-700/80"],["appPress","",1,"w-full","flex","items-center","justify-between","p-3","text-left","text-sm","font-medium","text-gray-700","dark:text-gray-300","hover:bg-gray-50","dark:hover:bg-gray-700/50","transition-colors","rounded-t-lg",3,"shortPress"],[1,"flex","items-center","gap-2"],["name","clipboard-list",1,"h-6","w-6"],["xmlns","http://www.w3.org/2000/svg","fill","none","viewBox","0 0 24 24","stroke","currentColor","stroke-width","2",1,"h-5","w-5","transform","transition-transform","duration-200",3,"ngClass"],["stroke-linecap","round","stroke-linejoin","round","d","M19 9l-7 7-7-7"],["class","bg-gray-50 dark:bg-gray-700/30 p-3 border-t border-gray-200 dark:border-gray-700/80 space-y-3 max-h-40 overflow-y-auto custom-scrollbar rounded-b-lg",4,"ngIf"],["class","p-3 text-xs text-center text-gray-500 dark:text-gray-400 border-t border-gray-200 dark:border-gray-700/80 rounded-b-lg",4,"ngIf"],["name","calendar-page",1,"h-6","w-6"],["class","bg-gray-50 dark:bg-gray-700/30 p-3 border-t border-gray-200 dark:border-gray-700/80 space-y-3 max-h-48 overflow-y-auto custom-scrollbar rounded-b-lg",4,"ngIf"],["class","p-3 bg-blue-50 dark:bg-blue-900/30 border border-blue-200 dark:border-blue-700 rounded-md text-xs",4,"ngIf"],["class","p-3 bg-gray-50 dark:bg-gray-700/50 border border-gray-200 dark:border-gray-600 rounded-md text-xs text-center text-gray-500 dark:text-gray-400 italic",4,"ngIf"],["class","p-3 bg-yellow-50 dark:bg-yellow-900/30 border border-yellow-200 dark:border-yellow-700 rounded-md text-xs",4,"ngIf"],[1,"space-y-4","pt-4","border-t","border-gray-200","dark:border-gray-700"],[1,"text-sm","font-semibold","text-gray-700","dark:text-gray-200"],[1,"grid","grid-cols-1","sm:grid-cols-2","gap-4"],["class","p-3 bg-gray-50 dark:bg-gray-700/80 rounded-md shadow",4,"ngIf"],["class","mt-4 p-3 bg-gray-100 dark:bg-gray-700/60 rounded-md text-xs",4,"ngIf"],[1,"bg-gray-50","dark:bg-gray-700/30","p-3","border-t","border-gray-200","dark:border-gray-700/80","space-y-3","max-h-40","overflow-y-auto","custom-scrollbar","rounded-b-lg"],["class","text-xs p-2 bg-white dark:bg-gray-700 rounded-md shadow-sm border border-gray-200 dark:border-gray-600",4,"ngFor","ngForOf"],[1,"text-xs","p-2","bg-white","dark:bg-gray-700","rounded-md","shadow-sm","border","border-gray-200","dark:border-gray-600"],[1,"font-semibold","text-gray-700","dark:text-gray-200","mb-1"],["class","text-blue-600 dark:text-blue-400 font-normal",4,"ngIf"],[1,"grid","grid-cols-2","gap-x-2","gap-y-1","text-gray-600","dark:text-gray-300"],["class","col-span-2",4,"ngIf"],["class","mt-1.5 text-gray-500 dark:text-gray-400 italic text-2xs border-t border-gray-100 dark:border-gray-600 pt-1.5",4,"ngIf"],[1,"text-blue-600","dark:text-blue-400","font-normal"],[1,"dark:text-gray-100"],[1,"col-span-2"],[1,"mt-1.5","text-gray-500","dark:text-gray-400","italic","text-2xs","border-t","border-gray-100","dark:border-gray-600","pt-1.5"],[1,"p-3","text-xs","text-center","text-gray-500","dark:text-gray-400","border-t","border-gray-200","dark:border-gray-700/80","rounded-b-lg"],[1,"bg-gray-50","dark:bg-gray-700/30","p-3","border-t","border-gray-200","dark:border-gray-700/80","space-y-3","max-h-48","overflow-y-auto","custom-scrollbar","rounded-b-lg"],[1,"text-sm","text-primary","dark:text-primary-light"],[1,"p-3","bg-blue-50","dark:bg-blue-900/30","border","border-blue-200","dark:border-blue-700","rounded-md","text-xs"],[1,"font-medium","text-blue-700","dark:text-blue-300","mb-1"],[1,"flex","items-center","gap-1.5"],["xmlns","http://www.w3.org/2000/svg","fill","none","viewBox","0 0 24 24","stroke","currentColor","stroke-width","2",1,"h-4","w-4"],["stroke-linecap","round","stroke-linejoin","round","d","M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"],[1,"list-none","space-y-0.5","ml-1","text-blue-600","dark:text-blue-400"],["class","flex items-center",4,"ngIf"],["class","mt-1 italic border-t border-blue-200 dark:border-blue-600 pt-1",4,"ngIf"],[1,"flex","items-center"],[1,"w-16"],[1,"dark:text-blue-200"],[1,"mt-1","italic","border-t","border-blue-200","dark:border-blue-600","pt-1"],[1,"p-3","bg-gray-50","dark:bg-gray-700/50","border","border-gray-200","dark:border-gray-600","rounded-md","text-xs","text-center","text-gray-500","dark:text-gray-400","italic"],[1,"p-3","bg-yellow-50","dark:bg-yellow-900/30","border","border-yellow-200","dark:border-yellow-700","rounded-md","text-xs"],[1,"font-medium","text-yellow-700","dark:text-yellow-300","mb-2"],["name","pb",1,"h-6","w-6"],["class","grid grid-cols-1 sm:grid-cols-2 gap-x-4 gap-y-1 text-yellow-600 dark:text-yellow-400",4,"ngIf"],["class","italic text-yellow-600 dark:text-yellow-400",4,"ngIf"],[1,"grid","grid-cols-1","sm:grid-cols-2","gap-x-4","gap-y-1","text-yellow-600","dark:text-yellow-400"],[4,"ngFor","ngForOf"],[1,"dark:text-yellow-200"],[1,"text-yellow-500","dark:text-yellow-500","text-2xs","ml-1"],[1,"italic","text-yellow-600","dark:text-yellow-400"],[1,"p-3","bg-gray-50","dark:bg-gray-700/80","rounded-md","shadow"],[1,"block","text-xs","font-medium","text-gray-500","dark:text-gray-400","mb-1"],["appPress","","class","text-3xl font-bold text-primary dark:text-primary-light cursor-pointer hover:opacity-80 p-1.5 rounded-md min-h-[48px] flex items-center",3,"shortPress",4,"ngIf"],["class","flex items-center space-x-2",4,"ngIf"],["appPress","",1,"text-3xl","font-bold","text-primary","dark:text-primary-light","cursor-pointer","hover:opacity-80","p-1.5","rounded-md","min-h-[48px]","flex","items-center",3,"shortPress"],["type","number","autofocus","",1,"w-24","p-2","text-2xl","border-gray-300","dark:border-gray-600","rounded-md","focus:ring-primary-focus","focus:border-primary-focus","dark:bg-gray-600","dark:text-gray-100","shadow-sm",3,"ngModelChange","keyup.enter","keyup.escape","ngModel"],["appPress","",1,"p-2","text-green-600","hover:text-green-500","dark:text-green-400","dark:hover:text-green-300","rounded-full","hover:bg-green-100","dark:hover:bg-green-700/50",3,"shortPress"],["fill","currentColor","viewBox","0 0 20 20",1,"w-5","h-5"],["fill-rule","evenodd","d","M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z","clip-rule","evenodd"],["appPress","",1,"p-2","text-red-600","hover:text-red-500","dark:text-red-400","dark:hover:text-red-300","rounded-full","hover:bg-red-100","dark:hover:bg-red-700/50",3,"shortPress"],["fill-rule","evenodd","d","M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z","clip-rule","evenodd"],[1,"text-xl","ml-0.5"],[1,"text-xl","font-semibold","text-gray-700","dark:text-gray-100","p-1.5","block","min-h-[48px]","flex","items-center"],[1,"mt-4","p-3","bg-gray-100","dark:bg-gray-700/60","rounded-md","text-xs"],[1,"font-medium","text-gray-600","dark:text-gray-300","mb-1"],["name","message",1,"h-6","w-6"],[1,"text-gray-700","dark:text-gray-200","italic"],[1,"text-center","py-20"],[1,"text-xl","text-gray-600","dark:text-gray-400"],[3,"isOpenChange","isOpen","modalTitle"],[3,"id","isModal"]],template:function(e,o){if(e&1){let n=me();te(0,dV,4,2,"ng-container",5),k(1,"app-full-screen-rest-timer",6),ne("timerFinished",function(){return Y(n),Q(o.handleRestTimerFinished())})("timerSkipped",function(s){return Y(n),Q(o.handleRestTimerSkipped(s))}),T(),te(2,SV,27,10,"div",7)(3,sW,16,1,"div",8),k(4,"app-exercise-selection-modal",9),Po("searchTermChange",function(s){return Y(n),Ro(o.modalSearchTerm,s)||(o.modalSearchTerm=s),Q(s)}),ne("exerciseSelected",function(s){return Y(n),Q(o.selectExerciseToAddFromModal(s))})("createCustomClicked",function(){return Y(n),Q(o.handleTrulyCustomExerciseEntry())})("close",function(){return Y(n),Q(o.closeExerciseSelectionModal())}),T(),k(5,"app-exercise-selection-modal",10),Po("searchTermChange",function(s){return Y(n),Ro(o.switchModalSearchTerm,s)||(o.switchModalSearchTerm=s),Q(s)}),ne("exerciseSelected",function(s){return Y(n),Q(o.selectExerciseToSwitch(s))})("findSimilarClicked",function(){return Y(n),Q(o.findAndShowSimilarExercises())})("backToSearchClicked",function(){return Y(n),Q(o.isShowingSimilarInSwitchModal.set(!1))})("close",function(){return Y(n),Q(o.closeSwitchExerciseModal())}),T(),te(6,aW,3,0,"ng-template",null,0,ln)(8,lW,2,4,"app-modal",11)}if(e&2){let n=Uo(7);D("ngIf",o.routine())("ngIfElse",n),E(),D("isVisible",o.playerSubState()===o.PlayerSubState.Resting&&o.isRestTimerVisible())("mainTimer",o.sessionTimerDisplay)("durationSeconds",o.restDuration())("mainText",o.restTimerMainText())("nextUpText",o.restTimerNextUpText()),E(),D("ngIf",o.isWorkoutMenuVisible()),E(),D("ngIf",o.isPerformanceInsightsVisible()),E(),D("isOpen",o.isExerciseAddModalOpen()),No("searchTerm",o.modalSearchTerm),D("exercises",o.availableExercises)("showCreateCustomLink",!0),E(),D("isOpen",o.isExerciseSwitchModalOpen()),No("searchTerm",o.switchModalSearchTerm),D("title",o.isShowingSimilarInSwitchModal()?"SIMILAR EXERCISES":"SWITCH EXERCISE")("exercises",o.availableExercises)("showSimilarButton",!0)("isShowingSimilarView",o.isShowingSimilarInSwitchModal()),E(3),D("ngIf",o.exerciseDetailsId)}},dependencies:[Qr,un,cn,Yr,dn,pn,jd,Vd,Da,Wd,pi,Bd,Ud,zd,am,di,Fa,Ua,sm,$o,Jd,em,mn,za],styles:["@keyframes _ngcontent-%COMP%_modal-appear-animation{0%{opacity:0;transform:scale(.95) translateY(10px)}to{opacity:1;transform:scale(1) translateY(0)}}.animate-modal-appear[_ngcontent-%COMP%]{animation:_ngcontent-%COMP%_modal-appear-animation .3s ease-out forwards}.custom-scrollbar[_ngcontent-%COMP%]::-webkit-scrollbar{width:6px;height:6px}.custom-scrollbar[_ngcontent-%COMP%]::-webkit-scrollbar-track{background:transparent;border-radius:3px}.custom-scrollbar[_ngcontent-%COMP%]::-webkit-scrollbar-thumb{background-color:#0003;border-radius:3px}.dark[_ngcontent-%COMP%]   .custom-scrollbar[_ngcontent-%COMP%]::-webkit-scrollbar-thumb{background-color:#fff3}.custom-scrollbar[_ngcontent-%COMP%]::-webkit-scrollbar-thumb:hover{background-color:#0000004d}.dark[_ngcontent-%COMP%]   .custom-scrollbar[_ngcontent-%COMP%]::-webkit-scrollbar-thumb:hover{background-color:#ffffff4d}.tabata-work-bg[_ngcontent-%COMP%]{background-image:linear-gradient(to bottom right,var(--tw-gradient-stops));--tw-gradient-from: #ef4444 var(--tw-gradient-from-position);--tw-gradient-to: rgb(239 68 68 / 0) var(--tw-gradient-to-position);--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);--tw-gradient-to: #b91c1c var(--tw-gradient-to-position)}.tabata-rest-bg[_ngcontent-%COMP%]{background-image:linear-gradient(to bottom right,var(--tw-gradient-stops));--tw-gradient-from: #22c55e var(--tw-gradient-from-position);--tw-gradient-to: rgb(34 197 94 / 0) var(--tw-gradient-to-position);--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);--tw-gradient-to: #15803d var(--tw-gradient-to-position)}.tabata-prepare-bg[_ngcontent-%COMP%]{background-image:linear-gradient(to bottom right,var(--tw-gradient-stops));--tw-gradient-from: #3b82f6 var(--tw-gradient-from-position);--tw-gradient-to: rgb(59 130 246 / 0) var(--tw-gradient-to-position);--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);--tw-gradient-to: #1d4ed8 var(--tw-gradient-to-position)}.text-shadow[_ngcontent-%COMP%]{text-shadow:0 2px 4px rgba(0,0,0,.2)}.text-shadow-lg[_ngcontent-%COMP%]{text-shadow:0 4px 10px rgba(0,0,0,.25)}.scrollbar-hide[_ngcontent-%COMP%]::-webkit-scrollbar{display:none}.scrollbar-hide[_ngcontent-%COMP%]{-ms-overflow-style:none;scrollbar-width:none}.your-main-container[_ngcontent-%COMP%]{height:calc(100vh - 90px);top:70px}"]})};function uW(r,t){if(r&1&&(k(0,"div",17)(1,"span",18),L(2,"Total Volume:"),T(),k(3,"span",19),L(4),Ke(5,"number"),T()()),r&2){let e=O(2);E(4),Ft("",Xr(5,2,e.sessionTotalVolume(),"1.0-0")," ",e.unitsService.getUnitLabel())}}function cW(r,t){if(r&1&&(k(0,"li",30)(1,"p",31),L(2),T(),k(3,"p",32),L(4),T()()),r&2){let e=t.$implicit;E(2),Ft("",e.exerciseName," - ",e.pbType," "),E(2),Oe(e.value)}}function pW(r,t){if(r&1&&(k(0,"div",26)(1,"h2",27),L(2," \u{1F389} New Personal Bests! \u{1F389} "),T(),k(3,"ul",28),te(4,cW,5,3,"li",29),T()()),r&2){let e=O(2);E(4),D("ngForOf",e.sessionPBs())}}function dW(r,t){if(r&1&&(k(0,"div",33)(1,"h3",34),L(2,"Your Notes for this Session:"),T(),k(3,"p",35),L(4),T()()),r&2){let e=O().ngIf;E(4),Oe(e.notes)}}function mW(r,t){if(r&1){let e=me();pr(0),k(1,"div",3)(2,"button",4),Ue(),k(3,"svg",5),se(4,"path",6),T()(),bt(),k(5,"div",7)(6,"div",8),Ue(),k(7,"svg",9)(8,"defs")(9,"mask",10),se(10,"rect",11)(11,"path",12),T()(),se(12,"circle",13),T()(),bt(),k(13,"h1",14),L(14,"Workout Complete!"),T(),k(15,"p",15),L(16,"Great job on finishing your session"),T()(),k(17,"div",16)(18,"div",17)(19,"span",18),L(20,"Routine:"),T(),k(21,"span",19),L(22),T()(),k(23,"div",17)(24,"span",18),L(25,"Date:"),T(),k(26,"span",19),L(27),Ke(28,"date"),T()(),k(29,"div",17)(30,"span",18),L(31,"Duration:"),T(),k(32,"span",19),L(33),T()(),te(34,uW,6,5,"div",20),T(),te(35,pW,5,1,"div",21)(36,dW,5,1,"div",22),k(37,"div",23)(38,"button",24),ne("shortPress",function(){Y(e);let n=O();return Q(n.viewFullLog())}),se(39,"app-icon",25),L(40," VIEW FULL LOG DETAILS "),T()()(),dr()}if(r&2){let e=t.ngIf,o=O();E(2),D("routerLink","/history/log/"+o.logId),E(20),Oe(e.routineName||"Ad-hoc Workout"),E(5),Oe(Xr(28,7,e.startTime,"fullDate")),E(6),fe("",e.durationMinutes," minutes"),E(),D("ngIf",o.sessionTotalVolume()>0),E(),D("ngIf",o.sessionPBs().length>0),E(),D("ngIf",e.notes)}}function fW(r,t){r&1&&(k(0,"div",36)(1,"p",37),L(2,"Loading workout summary..."),T()())}var lm=class r{route=$e(Ra);router=$e(ui);trackingService=$e(mi);exerciseService=$e(fn);statsService=$e(ew);unitsService=$e(fi);workoutLog=ge(void 0);displayExercisesSummary=ge([]);sessionPBs=ge([]);sessionTotalVolume=ge(0);logId;ngOnInit(){(this.logId?sn(this.logId):this.route.paramMap.pipe(Dn(e=>e.get("logId")))).pipe(ka(e=>e?this.trackingService.getWorkoutLogById(e):sn(null)),gs(e=>{e?(this.workoutLog.set(e),this.sessionTotalVolume.set(this.statsService.calculateWorkoutVolume(e)),this.prepareDisplayExercisesSummary(e.exercises),this.identifySessionPBs(e)):(this.workoutLog.set(null),this.displayExercisesSummary.set([]),this.sessionPBs.set([]))})).subscribe()}prepareDisplayExercisesSummary(t){if(!t||t.length===0){this.displayExercisesSummary.set([]);return}let e=t.map(o=>this.exerciseService.getExerciseById(o.exerciseId).pipe(Dn(n=>{let i=0;return o.sets.forEach(s=>{i+=(s.repsAchieved||0)*(s.weightUsed||0)}),qt(Vt({},o),{baseExercise:n||null,sessionVolume:i})})));_S(e).subscribe({next:o=>this.displayExercisesSummary.set(o),error:o=>{console.error("Error fetching exercise details for summary:",o),this.displayExercisesSummary.set(t.map(n=>qt(Vt({},n),{baseExercise:null,sessionVolume:0})))}})}identifySessionPBs(t){let e=[];this.trackingService.personalBests$.pipe(jt(1)).subscribe(o=>{t.exercises.forEach(i=>{let s=o[i.exerciseId];s&&i.sets.forEach(a=>{s.forEach(l=>{l.id===a.id&&l.timestamp===a.timestamp&&a.weightUsed===l.weightUsed&&a.repsAchieved===l.repsAchieved&&e.push({exerciseName:i.exerciseName,pbType:l.pbType,value:this.formatPbValueForSummary(l),isNewOrImproved:!0})})})});let n=Array.from(new Map(e.map(i=>[`${i.exerciseName}-${i.pbType}`,i])).values());this.sessionPBs.set(n)})}formatPbValueForSummary(t){let e="";return t.weightUsed!==void 0&&t.weightUsed!==null&&t.weightUsed!==0?(e+=`${t.weightUsed}kg`,t.repsAchieved>0&&(t.pbType.includes("Heaviest")||t.repsAchieved>1&&!t.pbType.includes("RM"))&&(e+=` x ${t.repsAchieved}`)):t.repsAchieved>0&&t.pbType.includes("Max Reps")?e=`${t.repsAchieved} reps`:t.durationPerformed&&t.durationPerformed>0&&t.pbType.includes("Max Duration")&&(e=`${t.durationPerformed}s`),e||"N/A"}viewFullLog(){this.workoutLog()&&this.router.navigate(["/history/log",this.workoutLog().id])}navigateToRoutines(){this.router.navigate(["/workout"])}startNewWorkout(){this.router.navigate(["/workout"])}static \u0275fac=function(e){return new(e||r)};static \u0275cmp=zr({type:r,selectors:[["app-workout-summary"]],inputs:{logId:"logId"},decls:4,vars:2,consts:[["loadingOrNotFoundSummary",""],[1,"container","mx-auto","p-2"],[4,"ngIf","ngIfElse"],[1,"bg-white","dark:bg-gray-700","rounded-xl","shadow-2xl","p-4","md:p-8","max-w-2xl","mx-auto"],[1,"text-gray-600","dark:text-gray-300","hover:text-primary","dark:hover:text-primary-light","p-2","-ml-1",3,"routerLink"],["fill","none","stroke","currentColor","viewBox","0 0 24 24","xmlns","http://www.w3.org/2000/svg",1,"w-6","h-6"],["stroke-linecap","round","stroke-linejoin","round","stroke-width","2","d","M15 19l-7-7 7-7"],[1,"text-center","mb-8"],[1,"flex","justify-center","text-center"],["width","36","height","36","viewBox","0 0 24 24","fill","none","xmlns","http://www.w3.org/2000/svg",1,"w-16","h-16","text-green-500","mx-auto","mb-3"],["id","tickCutoutMask"],["x","0","y","0","width","24","height","24","fill","white"],["d","M7.5 12.5L10.5 15.5L16.5 9.5","stroke","black","stroke-width","2.5","stroke-linecap","round","stroke-linejoin","round","fill","none"],["cx","12","cy","12","r","10","fill","#2fd636","mask","url(#tickCutoutMask)"],[1,"text-4xl","font-bold","text-gray-800","dark:text-gray-100"],[1,"text-lg","text-gray-600","dark:text-gray-400","mt-1"],[1,"space-y-4","mb-8"],[1,"flex","justify-between","items-baseline","p-3","bg-gray-50","dark:bg-gray-700","rounded-md"],[1,"text-m","font-medium","text-gray-600","dark:text-gray-300"],[1,"text-md","font-semibold","text-gray-800","dark:text-gray-100"],["class","flex justify-between items-baseline p-3 bg-gray-50 dark:bg-gray-700 rounded-md",4,"ngIf"],["class","mb-8",4,"ngIf"],["class","mb-8 p-3 bg-yellow-50 dark:bg-yellow-900/30 rounded-md",4,"ngIf"],[1,"mt-8","pt-6","border-t","border-gray-200","dark:border-gray-700","space-y-3","md:space-y-0","md:flex","md:justify-center","md:space-x-4"],["appPress","",1,"w-full","md:w-auto","flex","items-center","justify-center","px-6","py-3","border","border-transparent","rounded-md","shadow-sm","text-base","font-medium","text-white","bg-primary","hover:bg-primary-dark","focus:outline-none","focus:ring-2","focus:ring-offset-2","focus:ring-primary-dark",3,"shortPress"],["name","eye",1,"h-7","w-7","mr-1"],[1,"mb-8"],[1,"text-xl","font-semibold","text-gray-700","dark:text-gray-300","mb-3","text-center","border-b","pb-2","dark:border-gray-700"],[1,"space-y-2","mt-3"],["class","p-2 bg-green-50 dark:bg-green-900/30 rounded-md text-center",4,"ngFor","ngForOf"],[1,"p-2","bg-green-50","dark:bg-green-900/30","rounded-md","text-center"],[1,"text-m","font-medium","text-green-700","dark:text-green-300"],[1,"text-lg","font-bold","text-green-600","dark:text-green-200"],[1,"mb-8","p-3","bg-yellow-50","dark:bg-yellow-900/30","rounded-md"],[1,"text-m","font-medium","text-yellow-800","dark:text-yellow-300","mb-1"],[1,"text-m","text-yellow-700","dark:text-yellow-200","italic","whitespace-pre-line"],[1,"text-center","py-20"],[1,"text-xl","text-gray-600","dark:text-gray-400"]],template:function(e,o){if(e&1&&(k(0,"div",1),te(1,mW,41,10,"ng-container",2)(2,fW,3,0,"ng-template",null,0,ln),T()),e&2){let n=Uo(3);E(),D("ngIf",o.workoutLog())("ngIfElse",n)}},dependencies:[Qr,cn,Yr,dn,pn,Pa,$o,mn],encapsulation:2})};var G3=ay(iw());var vs=class{constructor(t,e){this.backend=t,this.dataMover=e,this.data=new WeakMap,this.dataIdsCount=0}get(t){return this.data.has(t)||this.dataMover.moveData(this.backend,t),this.data.get(t)}set(t,e){this.dataIdsCount++,this.data.set(t,e)}has(t){return this.data.has(t)}delete(t){return this.dataIdsCount--,this.data.delete(t)}numDataIds(){return this.dataIdsCount}},Fn=class{refCount(t){return Zr("refCount")}incRef(t){return Zr("incRef")}timerAvailable(){return!0}time(t){return Zr("time")}read(t){return Zr("read")}readSync(t){return Zr("readSync")}readToGPU(t,e){return Zr("readToGPU")}numDataIds(){return Zr("numDataIds")}disposeData(t,e){return Zr("disposeData")}write(t,e,o){return Zr("write")}move(t,e,o,n,i){return Zr("move")}createTensorFromGPUData(t,e,o){return Zr("createTensorFromGPUData")}memory(){return Zr("memory")}floatPrecision(){return Zr("floatPrecision")}epsilon(){return this.floatPrecision()===32?1e-7:1e-4}dispose(){return Zr("dispose")}};function Zr(r){throw new Error(`'${r}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function sw(r){let t=r.length,e=0;for(;t>0;)e=Math.random()*t|0,t--,um(r,t,e)}function hW(r,t){if(r.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${r.length}Second array length was ${t.length}`);let e=r.length,o=0;for(;e>0;)o=Math.random()*e|0,e--,um(r,e,o),um(t,e,o)}function Ga(r,t,e){return Math.max(r,Math.min(t,e))}function gW(r){return r%2===0?r:r+1}function um(r,t,e){let o=r[t];r[t]=r[e],r[e]=o}function xW(r){let t=0;for(let e=0;e<r.length;e++)t+=r[e];return t}function yW(r,t){let e=Math.random();return t*e+(1-e)*r}function vW(r,t){let e=0;for(let o=0;o<r.length;o++){let n=Number(r[o])-Number(t[o]);e+=n*n}return e}function F(r,t){if(!r)throw new Error(typeof t=="string"?t:t())}function Rt(r,t,e=""){F(Jr(r,t),()=>e+` Shapes ${r} and ${t} must match`)}function vo(r){F(r!=null,()=>"The input to the tensor constructor must be a non-null value.")}function He(r){if(r.length===0)return 1;let t=r[0];for(let e=1;e<r.length;e++)t*=r[e];return t}function bW(r){return r.length===0}function my(r,t){if(r===t)return!0;if(r==null||t==null||r.length!==t.length)return!1;for(let e=0;e<r.length;e++)if(r[e]!==null&&t[e]!==null&&r[e]!==t[e])return!1;return!0}function Jr(r,t){if(r===t)return!0;if(r==null||t==null||r.length!==t.length)return!1;for(let e=0;e<r.length;e++)if(r[e]!==t[e])return!1;return!0}function On(r){return r%1===0}function SW(r){if(Math.tanh!=null)return Math.tanh(r);if(r===1/0)return 1;if(r===-1/0)return-1;{let t=Math.exp(2*r);return(t-1)/(t+1)}}function wW(r){let t=Math.ceil(Math.sqrt(r));return[t,Math.ceil(r/t)]}function _W(r){let t=new Uint32Array(r);for(let e=0;e<r;++e)t[e]=e;return sw(t),t}function Ss(r,t){return t<=r.length?r:r+" ".repeat(t-r.length)}function CW(r,t=n=>0,e,o){return new Promise((n,i)=>{let s=0,a=()=>{if(r()){n();return}s++;let l=t(s);if(e!=null&&s>=e){i();return}o!=null?o(a,l):setTimeout(a,l)};a()})}function kW(r,t){let e=1,o=-1;for(let i=0;i<r.length;++i)if(r[i]>=0)e*=r[i];else if(r[i]===-1){if(o!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${o} and dim ${i}`);o=i}else if(r[i]<0)throw Error(`Shapes can not be < 0. Found ${r[i]} at dim ${i}`);if(o===-1){if(t>0&&t!==e)throw Error(`Size(${t}) must match the product of shape ${r}`);return r}if(e===0)throw Error(`Cannot infer the missing size in [${r}] when there are 0 elements`);if(t%e!==0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${e}`);let n=r.slice();return n[o]=t/e,n}function hi(r,t){let e=t.length;return r=r==null?t.map((o,n)=>n):[].concat(r),F(r.every(o=>o>=-e&&o<e),()=>`All values in axis param must be in range [-${e}, ${e}) but got axis ${r}`),F(r.every(o=>On(o)),()=>`All values in axis param must be integers but got axis ${r}`),r.map(o=>o<0?e+o:o)}function fy(r,t){let e=[],o=[],n=t!=null&&Array.isArray(t)&&t.length===0,i=t==null||n?null:hi(t,r).sort(),s=0;for(let a=0;a<r.length;++a){if(i!=null){if(i[s]===a&&r[a]!==1)throw new Error(`Can't squeeze axis ${a} since its dim '${r[a]}' is not 1`);(i[s]==null||i[s]>a)&&r[a]===1&&(e.push(r[a]),o.push(a)),i[s]<=a&&s++}r[a]!==1&&(e.push(r[a]),o.push(a))}return{newShape:e,keptDims:o}}function hy(r,t){return cm(r,t)}function cm(r,t){let e=null;if(r==null||r==="float32")e=new Float32Array(t);else if(r==="int32")e=new Int32Array(t);else if(r==="bool")e=new Uint8Array(t);else if(r==="string")e=new Array(t);else throw new Error(`Unknown data type ${r}`);return e}function gy(r,t){for(let e=0;e<r.length;e++){let o=r[e];if(isNaN(o)||!isFinite(o))throw Error(`A tensor of type ${t} being uploaded contains ${o}.`)}}function xy(r){return r==="bool"||r==="complex64"||r==="float32"||r==="int32"||r==="string"}function IW(r,t){return!(t==="complex64"||t==="float32"&&r!=="complex64"||t==="int32"&&r!=="float32"&&r!=="complex64"||t==="bool"&&r==="bool")}function Ha(r){if(r==="float32"||r==="int32")return 4;if(r==="complex64")return 8;if(r==="bool")return 1;throw new Error(`Unknown dtype ${r}`)}function yy(r){if(r==null)return 0;let t=0;return r.forEach(e=>t+=e.length),t}function Ka(r){return typeof r=="string"||r instanceof String}function aw(r){return typeof r=="boolean"}function lw(r){return typeof r=="number"}function gi(r){return Array.isArray(r)?gi(r[0]):r instanceof Float32Array?"float32":r instanceof Int32Array||r instanceof Uint8Array||r instanceof Uint8ClampedArray?"int32":lw(r)?"float32":Ka(r)?"string":aw(r)?"bool":"float32"}function qa(r){return!!(r&&r.constructor&&r.call&&r.apply)}function ja(r,t){for(let e=t;e<r;++e)if(r%e===0)return e;return r}function gn(r){let t=r.length;if(t<2)return[];let e=new Array(t-1);e[t-2]=r[t-1];for(let o=t-3;o>=0;--o)e[o]=e[o+1]*r[o+1];return e}function uw(r,t,e,o=!1){let n=new Array;if(t.length===1){let i=t[0]*(o?2:1);for(let s=0;s<i;s++)n[s]=e[r+s]}else{let i=t[0],s=t.slice(1),a=s.reduce((l,u)=>l*u)*(o?2:1);for(let l=0;l<i;l++)n[l]=uw(r+l*a,s,e,o)}return n}function bs(r,t,e=!1){if(r.length===0)return t[0];let o=r.reduce((n,i)=>n*i)*(e?2:1);if(o===0)return[];if(o!==t.length)throw new Error(`[${r}] does not match the input size ${t.length}${e?" for a complex tensor":""}.`);return uw(0,r,t,e)}function TW(r,t){if(Array.isArray(r))return r;if(t==="float32")return r instanceof Float32Array?r:new Float32Array(r);if(t==="int32")return r instanceof Int32Array?r:new Int32Array(r);if(t==="bool"||t==="string")return Uint8Array.from(new Int32Array(r));throw new Error(`Unknown dtype ${t}`)}function yp(r,t){let e=Xa(r,t);for(let o=0;o<e.length;o++)e[o]=1;return e}function Xa(r,t){if(t==null||t==="float32"||t==="complex64")return new Float32Array(r);if(t==="int32")return new Int32Array(r);if(t==="bool")return new Uint8Array(r);throw new Error(`Unknown data type ${t}`)}function EW(r,t){let e=r.reduce((o,n)=>o*n,1);if(t==null||t==="float32")return bs(r,new Float32Array(e));if(t==="int32")return bs(r,new Int32Array(e));if(t==="bool")return bs(r,new Uint8Array(e));throw new Error(`Unknown data type ${t}`)}function St(r){r.forEach(t=>{F(Number.isInteger(t)&&t>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${r}].`)})}function NW(r,t,e){if(t===0)return 0;if(t===1)return r[0];let o=r[r.length-1];for(let n=0;n<r.length-1;++n)o+=e[n]*r[n];return o}function RW(r,t,e){if(t===0)return[];if(t===1)return[r];let o=new Array(t);for(let n=0;n<o.length-1;++n)o[n]=Math.floor(r/e[n]),r-=o[n]*e[n];return o[o.length-1]=r,o}function ws(r){return r&&r.then&&typeof r.then=="function"}var cw="tfjsflags",vp=class{constructor(t){this.global=t,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=$W,this.populateURLFlags()}setPlatform(t,e){this.platform!=null&&(G().getBool("IS_TEST")||G().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`)),this.platformName=t,this.platform=e}registerFlag(t,e,o){if(this.flagRegistry[t]={evaluationFn:e,setHook:o},this.urlFlags[t]!=null){let n=this.urlFlags[t];G().getBool("IS_TEST")||G().getBool("PROD")||console.warn(`Setting feature override from URL ${t}: ${n}.`),this.set(t,n)}}getAsync(t){return j(this,null,function*(){return t in this.flags?this.flags[t]:(this.flags[t]=yield this.evaluateFlag(t),this.flags[t])})}get(t){if(t in this.flags)return this.flags[t];let e=this.evaluateFlag(t);if(ws(e))throw new Error(`Flag ${t} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[t]=e,this.flags[t]}getNumber(t){return this.get(t)}getBool(t){return this.get(t)}getString(t){return this.get(t)}getFlags(){return this.flags}get features(){return this.flags}set(t,e){if(this.flagRegistry[t]==null)throw new Error(`Cannot set flag ${t} as it has not been registered.`);this.flags[t]=e,this.flagRegistry[t].setHook!=null&&this.flagRegistry[t].setHook(e)}evaluateFlag(t){if(this.flagRegistry[t]==null)throw new Error(`Cannot evaluate flag '${t}': no evaluation function found.`);return this.flagRegistry[t].evaluationFn()}setFlags(t){this.flags=Object.assign({},t)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global>"u"||typeof this.global.location>"u"||typeof this.global.location.search>"u")return;let t=this.getQueryParams(this.global.location.search);cw in t&&t[cw].split(",").forEach(o=>{let[n,i]=o.split(":");this.urlFlags[n]=DW(n,i)})}};function $W(r){let t={};return r.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(e,...o)=>(AW(t,o[0],o[1]),o.join("="))),t}function AW(r,t,e){r[decodeURIComponent(t)]=decodeURIComponent(e||"")}function DW(r,t){let e=t.toLowerCase();return e==="true"||e==="false"?e==="true":`${+e}`===e?+e:t}function G(){return vy}var vy=null;function pw(r){vy=r}var by;function Sy(){if(by==null){let r;if(typeof window<"u")r=window;else if(typeof global<"u")r=global;else if(typeof process<"u")r=process;else if(typeof self<"u")r=self;else throw new Error("Could not find a global object");by=r}return by}function FW(){let r=Sy();return r._tfGlobals==null&&(r._tfGlobals=new Map),r._tfGlobals}function bp(r,t){let e=FW();if(e.has(r))return e.get(r);{let o=t();return e.set(r,o),e.get(r)}}var _s="Abs",Ya="Acos",Qa="Acosh",xn="Add",Za="AddN",Ja="All",el="Any",tl="ArgMax",rl="ArgMin",ol="Asin",nl="Asinh",il="Atan",sl="Atanh",al="Atan2",ll="AvgPool",pm="AvgPoolGrad",ul="AvgPool3D",dm="AvgPool3DGrad",cl="BatchMatMul",pl="BatchToSpaceND",dl="Bincount",ml="BitwiseAnd";var fl="BroadcastArgs",Ln="Cast",xi="Ceil",hl="ClipByValue",Cs="Complex",gl="ComplexAbs",xl="Concat",yl="Conv2D",vl="Conv2DBackpropFilter",bl="Conv2DBackpropInput",Sl="Conv3D",mm="Conv3DBackpropFilterV2",wl="Conv3DBackpropInputV2",_l="Cos",Cl="Cosh",kl="Cumprod",Il="Cumsum",Tl="CropAndResize",El="DenseBincount",Nl="DepthToSpace",Rl="DepthwiseConv2dNative",Pl="DepthwiseConv2dNativeBackpropFilter",$l="DepthwiseConv2dNativeBackpropInput",Al="Diag",Dl="Dilation2D",dw="Dilation2DBackpropInput",mw="Dilation2DBackpropFilter",Sp="Draw",Fl="RealDiv",Ol="Einsum",Ll="Elu",fm="EluGrad",Ml="Erf",yi="Equal",vi="Exp",Bl="ExpandDims",bi="Expm1",Vl="FFT",Wl="Fill",Ul="FlipLeftRight",Si="Floor",wi="FloorDiv",zl="FusedBatchNorm",Gl="GatherV2",Hl="GatherNd",_i="Greater",Ci="GreaterEqual",Mn="Identity",Kl="IFFT",ql="Imag",jl="IsFinite",Xl="IsInf",Yl="IsNan",Ql="LeakyRelu",ki="Less",Ii="LessEqual",Zl="LinSpace",Ti="Log",Jl="Log1p",eu="LogicalAnd",tu="LogicalNot",ru="LogicalOr";var ou="LRN",hm="LRNGrad";var nu="Max",Ei="Maximum",iu="MaxPool",gm="MaxPoolGrad",su="MaxPool3D",xm="MaxPool3DGrad",au="MaxPoolWithArgmax",lu="Mean",uu="Min",Ni="Minimum",cu="MirrorPad",pu="Mod",du="Multinomial",Ri="Multiply",ks="Neg",Pi="NotEqual",mu="NonMaxSuppressionV3",ym="NonMaxSuppressionV4",fu="NonMaxSuppressionV5",hu="OnesLike",gu="OneHot",xu="Pack",yu="PadV2";var vu="Pow",bu="Prelu",Is="Prod",vm="RaggedGather",bm="RaggedRange",Sm="RaggedTensorToTensor",Su="Range",Ts="Real",wu="Reciprocal",_u="Relu",Cu="Reshape",ku="ResizeNearestNeighbor",wm="ResizeNearestNeighborGrad",Iu="ResizeBilinear",_m="ResizeBilinearGrad",Tu="Relu6",Eu="Reverse",Nu="Round",$i="Rsqrt",Ru="ScatterNd",Pu="TensorScatterUpdate",$u="SearchSorted",Au="Select",Du="Selu",Es="Slice",Fu="Sin",Ou="Sinh",Lu="Sign",Ai="Sigmoid",Mu="Softplus",Di="Sqrt",Bu="Sum",Vu="SpaceToBatchND",Wu="SplitV",Uu="Softmax",Cm="SparseFillEmptyRows",km="SparseReshape",zu="SparseSegmentMean",Gu="SparseSegmentSum",Hu="SparseToDense",Fi="SquaredDifference",Im="Square",Ku="StaticRegexReplace",qu="StridedSlice",ju="StringNGrams",Tm="StringSplit",Em="StringToHashBucketFast",Oi="Sub",Xu="Tan",Yu="Tanh",Li="Tile",Qu="TopK",Zu="Transform",Mi="Transpose",Nm="Unique",Ju="Unpack",ec="UnsortedSegmentSum";var tc="ZerosLike",rc="Step",Ns="FromPixels",oc="RotateWithOffset",Rs="_FusedMatMul",Ps="FusedConv2D",$s="FusedDepthwiseConv2D";function Bn(...r){G().getBool("IS_TEST")||G().getBool("PROD")||console.warn(...r)}function OW(...r){G().getBool("IS_TEST")||G().getBool("PROD")||console.log(...r)}var Rm=bp("kernelRegistry",()=>new Map),LW=bp("gradRegistry",()=>new Map);function nc(r,t){let e=hw(r,t);return Rm.get(e)}function wy(r){return LW.get(r)}function _y(r){let t=Rm.entries(),e=[];for(;;){let{done:o,value:n}=t.next();if(o)break;let[i,s]=n,[a]=i.split("_");a===r&&e.push(s)}return e}function Pm(r){let{kernelName:t,backendName:e}=r,o=hw(t,e);Rm.has(o)&&Bn(`The kernel '${t}' for backend '${e}' is already registered`),Rm.set(o,r)}function hw(r,t){return`${t}_${r}`}var S={};pt(S,{arraysEqual:()=>Jr,arraysEqualWithNull:()=>my,assert:()=>F,assertNonNegativeIntegerDimensions:()=>St,assertNonNull:()=>vo,assertShapesMatch:()=>Rt,bytesFromStringArray:()=>yy,bytesPerElement:()=>Ha,checkConversionForErrors:()=>gy,clamp:()=>Ga,computeStrides:()=>gn,convertBackendValuesAndArrayBuffer:()=>TW,createScalarValue:()=>GW,createShuffledIndices:()=>_W,decodeString:()=>uc,distSquared:()=>vW,encodeString:()=>lc,fetch:()=>KW,fingerPrint64:()=>zW,flatten:()=>Vi,getArrayFromDType:()=>cm,getTypedArrayFromDType:()=>hy,hasEncodingLoss:()=>IW,hexToLong:()=>wp,indexToLoc:()=>RW,inferDtype:()=>gi,inferFromImplicitShape:()=>kW,isBoolean:()=>aw,isFunction:()=>qa,isInt:()=>On,isNumber:()=>lw,isPromise:()=>ws,isScalarShape:()=>bW,isString:()=>Ka,isTypedArray:()=>mr,isValidDtype:()=>xy,locToIndex:()=>NW,makeOnesTypedArray:()=>yp,makeZerosNestedTypedArray:()=>EW,makeZerosTypedArray:()=>Xa,nearestDivisor:()=>ja,nearestLargerEven:()=>gW,now:()=>Ls,parseAxisParam:()=>hi,randUniform:()=>yW,repeatedTry:()=>CW,rightPad:()=>Ss,shuffle:()=>sw,shuffleCombo:()=>hW,sizeFromShape:()=>He,sizeToSquarishShape:()=>wW,squeezeShape:()=>fy,sum:()=>xW,swap:()=>um,tanh:()=>SW,toNestedArray:()=>bs,toTypedArray:()=>ac});function $m(r){return r instanceof Float32Array||r instanceof Int32Array||r instanceof Uint8Array||r instanceof Uint8ClampedArray}var Ty=ay(Iw());var Os=Ty.default||Ty;function wp(r){return Os.fromString(r,!0,16)}var Ew=wp("c3a5c85c97cb3127"),Fs=wp("b492b66fbe98f273"),br=wp("9ae16a3b2f90404f");function Iy(r){return r.xor(r.shru(47))}function Nw(r,t,e){let o=r.slice(t,t+e);return Os.fromBytes(Array.from(o),!0,!0)}function wt(r,t){return Nw(r,t,8)}function Tw(r,t){return Nw(r,t,4)}function Jt(r,t){return t===0?r:r.shru(t).or(r.shl(64-t))}function Bi(r,t,e=wp("9ddfea08eb382d69")){let o=r.xor(t).mul(e);o=o.xor(o.shru(47));let n=t.xor(o).mul(e);return n=n.xor(n.shru(47)),n=n.mul(e),n}function BW(r,t,e,o,n,i){n=n.add(r),i=Jt(i.add(n).add(o),21);let s=n;return n=n.add(t),n=n.add(e),i=i.add(Jt(n,44)),[n.add(o),i.add(s)]}function Dm(r,t,e,o){return BW(wt(r,t),wt(r,t+8),wt(r,t+16),wt(r,t+24),e,o)}function VW(r,t=r.length){if(t>=8){let e=br.add(t*2),o=wt(r,0).add(br),n=wt(r,t-8),i=Jt(n,37).mul(e).add(o),s=Jt(o,25).add(n).mul(e);return Bi(i,s,e)}if(t>=4){let e=br.add(t*2),o=Tw(r,0);return Bi(o.shl(3).add(t),Tw(r,t-4),e)}if(t>0){let e=r[0],o=r[t>>1],n=r[t-1],i=e+(o<<8),s=t+(n<<2);return Iy(br.mul(i).xor(Ew.mul(s))).mul(br)}return br}function WW(r,t=r.length){let e=br.add(t*2),o=wt(r,0).mul(Fs),n=wt(r,8),i=wt(r,t-8).mul(e),s=wt(r,t-16).mul(br);return Bi(Jt(o.add(n),43).add(Jt(i,30)).add(s),o.add(Jt(n.add(br),18)).add(i),e)}function UW(r,t=r.length){let e=br.add(t*2),o=wt(r,0).mul(br),n=wt(r,8),i=wt(r,t-8).mul(e),s=wt(r,t-16).mul(br),a=Jt(o.add(n),43).add(Jt(i,30)).add(s),l=Bi(a,o.add(Jt(n.add(br),18)).add(i),e),u=wt(r,16).mul(e),c=wt(r,24),p=a.add(wt(r,t-32)).mul(e),d=l.add(wt(r,t-24)).mul(e);return Bi(Jt(u.add(c),43).add(Jt(p,30)).add(d),u.add(Jt(c.add(o),18)).add(p),e)}function zW(r,t=r.length){let e=Os.fromNumber(81,!0);if(t<=32)return t<=16?VW(r,t):WW(r,t);if(t<=64)return UW(r,t);let o=e,n=e.mul(Fs).add(113),i=Iy(n.mul(br).add(113)).mul(br),s=[Os.UZERO,Os.UZERO],a=[Os.UZERO,Os.UZERO];o=o.mul(br).add(wt(r,0));let l=0,u=(t-1>>6)*64,c=u+(t-1&63)-63;do o=Jt(o.add(n).add(s[0]).add(wt(r,l+8)),37).mul(Fs),n=Jt(n.add(s[1]).add(wt(r,l+48)),42).mul(Fs),o=o.xor(a[1]),n=n.add(s[0]).add(wt(r,l+40)),i=Jt(i.add(a[0]),33).mul(Fs),s=Dm(r,l,s[1].mul(Fs),o.add(a[0])),a=Dm(r,l+32,i.add(a[1]),n.add(wt(r,l+16))),[i,o]=[o,i],l+=64;while(l!==u);let p=Fs.add(i.and(255).shl(1));return l=c,a[0]=a[0].add(t-1&63),s[0]=s[0].add(a[0]),a[0]=a[0].add(s[0]),o=Jt(o.add(n).add(s[0]).add(wt(r,l+8)),37).mul(p),n=Jt(n.add(s[1]).add(wt(r,l+48)),42).mul(p),o=o.xor(a[1].mul(9)),n=n.add(s[0].mul(9).add(wt(r,l+40))),i=Jt(i.add(a[0]),33).mul(p),s=Dm(r,l,s[1].mul(p),o.add(a[0])),a=Dm(r,l+32,i.add(a[1]),n.add(wt(r,l+16))),[i,o]=[o,i],Bi(Bi(s[0],a[0],p).add(Iy(n).mul(Ew)).add(i),Bi(s[1],a[1],p).add(o),p)}function GW(r,t){return t==="string"?lc(r):ac([r],t)}function HW(r,t){return r instanceof Float32Array&&t==="float32"||r instanceof Int32Array&&t==="int32"||r instanceof Uint8Array&&t==="bool"}function ac(r,t){if(t==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(r)&&(r=Vi(r)),G().getBool("DEBUG")&&gy(r,t),HW(r,t))return r;if(t==null||t==="float32"||t==="complex64")return new Float32Array(r);if(t==="int32")return new Int32Array(r);if(t==="bool"){let e=new Uint8Array(r.length);for(let o=0;o<e.length;++o)Math.round(r[o])!==0&&(e[o]=1);return e}else throw new Error(`Unknown data type ${t}`)}function Ls(){return G().platform.now()}function KW(r,t){return G().platform.fetch(r,t)}function lc(r,t="utf-8"){return t=t||"utf-8",G().platform.encode(r,t)}function uc(r,t="utf-8"){return t=t||"utf-8",G().platform.decode(r,t)}function mr(r){return G().platform.isTypedArray!=null?G().platform.isTypedArray(r):$m(r)}function Vi(r,t=[],e=!1){if(t==null&&(t=[]),typeof r=="boolean"||typeof r=="number"||typeof r=="string"||ws(r)||r==null||mr(r)&&e)t.push(r);else if(Array.isArray(r)||mr(r))for(let o=0;o<r.length;++o)Vi(r[o],t,e);else{let o=-1;for(let n of Object.keys(r))/^([1-9]+[0-9]*|0)$/.test(n)&&(o=Math.max(o,Number(n)));for(let n=0;n<=o;n++)Vi(r[n],t,e)}return t}var Fm=class{constructor(t,e){this.backendTimer=t,this.logger=e,e==null&&(this.logger=new Ey)}profileKernel(t,e,o){let n,i=()=>{n=o()},s,a=Ls();if(this.backendTimer.timerAvailable())s=this.backendTimer.time(i);else{i();for(let u of n)u.dataSync();s=Promise.resolve({kernelMs:Ls()-a})}if(G().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let u=0;u<n.length;u++){let c=n[u];c.data().then(p=>{qW(p,c.dtype,t)})}return{kernelName:t,outputs:n,inputs:e,timeMs:s.then(u=>u.kernelMs),extraInfo:s.then(u=>u.getExtraProfileInfo!=null?u.getExtraProfileInfo():"")}}logKernelProfile(t){let{kernelName:e,outputs:o,timeMs:n,inputs:i,extraInfo:s}=t;o.forEach(a=>{Promise.all([a.data(),n,s]).then(l=>{this.logger.logKernelProfile(e,a,l[0],l[1],i,l[2])})})}};function qW(r,t,e){if(t!=="float32")return!1;for(let o=0;o<r.length;o++){let n=r[o];if(isNaN(n)||!isFinite(n))return console.warn(`Found ${n} in the result of '${e}'`),!0}return!1}var Ey=class{logKernelProfile(t,e,o,n,i,s){let a=typeof n=="number"?Ss(`${n}ms`,9):n.error,l=Ss(t,25),u=e.rank,c=e.size,p=Ss(e.shape.toString(),14),d="";for(let m in i){let f=i[m];if(f!=null){let g=f.shape||e.shape,x=g.length;d+=`${m}: ${x}D ${x>0?g:""} `}}console.log(`%c${l}	%c${a}	%c${u}D ${p}	%c${c}	%c${d}	%c${s}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}};function Rw(r,t,e){let o={},n={};for(let l=0;l<t.length;l++)o[t[l].id]=!0;for(let l=0;l<r.length;l++){let u=r[l],c=u.inputs;for(let p in c){let d=c[p],m=!1;for(let f=0;f<t.length;f++)if(o[d.id]){u.outputs.forEach(g=>o[g.id]=!0),m=!0,n[u.id]=!0;break}if(m)break}}let i={};i[e.id]=!0;let s={};for(let l=r.length-1;l>=0;l--){let u=r[l],c=u.inputs;for(let p=0;p<u.outputs.length;p++)if(i[u.outputs[p].id]){for(let d in c)i[c[d].id]=!0,s[u.id]=!0;break}}let a=[];for(let l=0;l<r.length;l++){let u=r[l];if(n[u.id]&&s[u.id]){let c={};for(let d in u.inputs){let m=u.inputs[d];o[m.id]&&(c[d]=m)}let p=Object.assign({},u);p.inputs=c,p.outputs=u.outputs,a.push(p)}}return a}function Pw(r,t,e,o){for(let n=t.length-1;n>=0;n--){let i=t[n],s=[];if(i.outputs.forEach(l=>{let u=r[l.id];u!=null?s.push(u):s.push(null)}),i.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${i.kernelName}.`);let a=i.gradient(s);for(let l in i.inputs){if(!(l in a))throw new Error(`Cannot backprop through input ${l}. Available gradients found: ${Object.keys(a)}.`);let u=e(()=>a[l]());if(u.dtype!=="float32")throw new Error(`Error in gradient for op ${i.kernelName}. The gradient of input ${l} must have 'float32' dtype, but has '${u.dtype}'`);let c=i.inputs[l];if(!Jr(u.shape,c.shape))throw new Error(`Error in gradient for op ${i.kernelName}. The gradient of input '${l}' has shape '${u.shape}', which does not match the shape of the input '${c.shape}'`);if(r[c.id]==null)r[c.id]=u;else{let p=r[c.id];r[c.id]=o(p,u),p.dispose()}}}}var $w=20,_p=3,Ny=7;function Aw(r,t,e,o){let n=gn(t),i=jW(r,t,e,n),s=t.length,a=Om(r,t,e,n,i),l=["Tensor"];return o&&(l.push(`  dtype: ${e}`),l.push(`  rank: ${s}`),l.push(`  shape: [${t}]`),l.push("  values:")),l.push(a.map(u=>"    "+u).join(`
`)),l.join(`
`)}function jW(r,t,e,o){let n=He(t),i=o[o.length-1],s=new Array(i).fill(0),a=t.length,l=e==="complex64"?kp(r):r;if(a>1)for(let u=0;u<n/i;u++){let c=u*i;for(let p=0;p<i;p++)s[p]=Math.max(s[p],Cp(l[c+p],0,e).length)}return s}function Cp(r,t,e){let o;return Array.isArray(r)?o=`${parseFloat(r[0].toFixed(Ny))} + ${parseFloat(r[1].toFixed(Ny))}j`:Ka(r)?o=`'${r}'`:e==="bool"?o=Dw(r):o=parseFloat(r.toFixed(Ny)).toString(),Ss(o,t)}function Dw(r){return r===0?"false":"true"}function Om(r,t,e,o,n,i=!0){let s=e==="complex64"?2:1,a=t[0],l=t.length;if(l===0){if(e==="complex64"){let g=kp(r);return[Cp(g[0],0,e)]}return e==="bool"?[Dw(r[0])]:[r[0].toString()]}if(l===1){if(a>$w){let x=_p*s,y=Array.from(r.slice(0,x)),b=Array.from(r.slice((a-_p)*s,a*s));return e==="complex64"&&(y=kp(y),b=kp(b)),["["+y.map((I,N)=>Cp(I,n[N],e)).join(", ")+", ..., "+b.map((I,N)=>Cp(I,n[a-_p+N],e)).join(", ")+"]"]}return["["+(e==="complex64"?kp(r):Array.from(r)).map((x,y)=>Cp(x,n[y],e)).join(", ")+"]"]}let u=t.slice(1),c=o.slice(1),p=o[0]*s,d=[];if(a>$w){for(let g=0;g<_p;g++){let x=g*p,y=x+p;d.push(...Om(r.slice(x,y),u,e,c,n,!1))}d.push("...");for(let g=a-_p;g<a;g++){let x=g*p,y=x+p;d.push(...Om(r.slice(x,y),u,e,c,n,g===a-1))}}else for(let g=0;g<a;g++){let x=g*p,y=x+p;d.push(...Om(r.slice(x,y),u,e,c,n,g===a-1))}let m=l===2?",":"";d[0]="["+(a>0?d[0]+m:"");for(let g=1;g<d.length-1;g++)d[g]=" "+d[g]+m;let f=`,
`;for(let g=2;g<l;g++)f+=`
`;return d[d.length-1]=" "+d[d.length-1]+"]"+(i?"":f),d}function kp(r){let t=[];for(let e=0;e<r.length;e+=2)t.push([r[e],r[e+1]]);return t}var bo=class{constructor(t,e,o){if(this.dtype=e,this.shape=t.slice(),this.size=He(t),o!=null){let n=o.length;F(n===this.size,()=>`Length of values '${n}' does not match the size inferred by the shape '${this.size}'.`)}if(e==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=o||cm(e,this.size),this.strides=gn(t)}set(t,...e){e.length===0&&(e=[0]),F(e.length===this.rank,()=>`The number of provided coordinates (${e.length}) must match the rank (${this.rank})`);let o=this.locToIndex(e);this.values[o]=t}get(...t){t.length===0&&(t=[0]);let e=0;for(let n of t){if(n<0||n>=this.shape[e]){let i=`Requested out of range element at ${t}.   Buffer shape=${this.shape}`;throw new Error(i)}e++}let o=t[t.length-1];for(let n=0;n<t.length-1;++n)o+=this.strides[n]*t[n];return this.values[o]}locToIndex(t){if(this.rank===0)return 0;if(this.rank===1)return t[0];let e=t[t.length-1];for(let o=0;o<t.length-1;++o)e+=this.strides[o]*t[o];return e}indexToLoc(t){if(this.rank===0)return[];if(this.rank===1)return[t];let e=new Array(this.shape.length);for(let o=0;o<e.length-1;++o)e[o]=Math.floor(t/this.strides[o]),t-=e[o]*this.strides[o];return e[e.length-1]=t,e}get rank(){return this.shape.length}toTensor(){return Ho().makeTensor(this.values,this.shape,this.dtype)}},Ho=null,cc=null,XW=null;function Fw(r){Ho=r}function Ow(r){cc=r}function Lw(r){XW=r}var st=class{constructor(t,e,o,n){this.kept=!1,this.isDisposedInternal=!1,this.shape=t.slice(),this.dtype=e||"float32",this.size=He(t),this.strides=gn(t),this.dataId=o,this.id=n,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}buffer(){return j(this,null,function*(){let t=yield this.data();return cc.buffer(this.shape,this.dtype,t)})}bufferSync(){return cc.buffer(this.shape,this.dtype,this.dataSync())}array(){return j(this,null,function*(){let t=yield this.data();return bs(this.shape,t,this.dtype==="complex64")})}arraySync(){return bs(this.shape,this.dataSync(),this.dtype==="complex64")}data(){return j(this,null,function*(){this.throwIfDisposed();let t=Ho().read(this.dataId);if(this.dtype==="string"){let e=yield t;try{return e.map(o=>uc(o))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return t})}dataToGPU(t){return this.throwIfDisposed(),Ho().readToGPU(this.dataId,t)}dataSync(){this.throwIfDisposed();let t=Ho().readSync(this.dataId);if(this.dtype==="string")try{return t.map(e=>uc(e))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return t}bytes(){return j(this,null,function*(){this.throwIfDisposed();let t=yield Ho().read(this.dataId);return this.dtype==="string"?t:new Uint8Array(t.buffer)})}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),Ho().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(t=!1){return cc.print(this,t)}clone(){return this.throwIfDisposed(),cc.clone(this)}toString(t=!1){let e=this.dataSync();return Aw(e,this.shape,this.dtype,t)}cast(t){return this.throwIfDisposed(),cc.cast(this,t)}variable(t=!0,e,o){return this.throwIfDisposed(),Ho().makeVariable(this,t,e,o)}};Object.defineProperty(st,Symbol.hasInstance,{value:r=>!!r&&r.data!=null&&r.dataSync!=null&&r.throwIfDisposed!=null});function Ry(){return bp("Tensor",()=>st)}Ry();var Vn=class extends st{constructor(t,e,o,n){super(t.shape,t.dtype,t.dataId,n),this.trainable=e,this.name=o}assign(t){if(t.dtype!==this.dtype)throw new Error(`dtype of the new value (${t.dtype}) and previous value (${this.dtype}) must match`);if(!Jr(t.shape,this.shape))throw new Error(`shape of the new value (${t.shape}) and previous value (${this.shape}) must match`);Ho().disposeTensor(this),this.dataId=t.dataId,Ho().incRef(this,null)}dispose(){Ho().disposeVariable(this),this.isDisposedInternal=!0}};Object.defineProperty(Vn,Symbol.hasInstance,{value:r=>r instanceof st&&r.assign!=null&&r.assign instanceof Function});var Mw=function(r){return r.float32="float32",r.int32="int32",r.bool="int32",r.complex64="complex64",r}(Mw||{}),Bw=function(r){return r.float32="float32",r.int32="int32",r.bool="bool",r.complex64="complex64",r}(Bw||{}),Vw=function(r){return r.float32="float32",r.int32="float32",r.bool="float32",r.complex64="complex64",r}(Vw||{}),Ww=function(r){return r.float32="complex64",r.int32="complex64",r.bool="complex64",r.complex64="complex64",r}(Ww||{}),YW={float32:Vw,int32:Mw,bool:Bw,complex64:Ww};function Et(r,t){if(r==="string"||t==="string"){if(r==="string"&&t==="string")return"string";throw new Error(`Can not upcast ${r} with ${t}`)}return YW[r][t]}function Wn(r){return Et(r,"int32")}function Lm(r){return r!=null&&typeof r=="object"&&"texture"in r&&r.texture instanceof WebGLTexture}function Mm(r){return typeof GPUBuffer<"u"&&r!=null&&typeof r=="object"&&"buffer"in r&&r.buffer instanceof GPUBuffer}function Ge(r,t){if(r.dtype===t.dtype)return[r,t];let e=Et(r.dtype,t.dtype);return[r.cast(e),t.cast(e)]}function Uw(r,t){F(r.dtype===t.dtype,()=>`The dtypes of the first(${r.dtype}) and second(${t.dtype}) input must match`)}function Bm(r){let t=[];return zw(r,t,new Set),t}function zw(r,t,e){if(r==null)return;if(r instanceof st){t.push(r);return}if(!QW(r))return;let o=r;for(let n in o){let i=o[n];e.has(i)||(e.add(i),zw(i,t,e))}}function QW(r){return Array.isArray(r)||typeof r=="object"}function Py(r){return r.kernelName!=null}var Vm=class{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(t=>t.name)))}}}dispose(){for(let t in this.registeredVariables)this.registeredVariables[t].dispose()}},ZW=(()=>{class r{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new Vm}ready(){return j(this,null,function*(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;let e=this.getSortedBackends();for(let o=0;o<e.length;o++){let n=e[o];if(yield this.initializeBackend(n).success){yield this.setBackend(n);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")})}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){let{name:e,asyncInit:o}=this.initializeBackendsAndReturnBest();if(o)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry))if(e in this.registryFactory){let{asyncInit:o}=this.initializeBackend(e);if(o)return null}else return null;return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,o,n=1){return e in this.registryFactory?(Bn(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:o,priority:n},!0)}setBackend(e){return j(this,null,function*(){if(this.registryFactory[e]==null)throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,this.registry[e]==null){this.backendInstance=null;let{success:o,asyncInit:n}=this.initializeBackend(e);if(!(n?yield o:o))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new Fm(this.backendInstance),!0})}setupRegisteredKernels(){_y(this.backendName).forEach(o=>{o.setupFunc!=null&&o.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){_y(e).forEach(n=>{n.disposeFunc!=null&&n.disposeFunc(this.registry[e])})}initializeBackend(e){let o=this.registryFactory[e];if(o==null)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{let n=o.factory();if(n&&!(n instanceof Fn)&&typeof n.then=="function"){let i=++this.pendingBackendInitId,s=n.then(a=>i<this.pendingBackendInitId?!1:(this.registry[e]=a,this.pendingBackendInit=null,!0)).catch(a=>(i<this.pendingBackendInitId||(this.pendingBackendInit=null,Bn(`Initialization of backend ${e} failed`),Bn(a.stack||a.message)),!1));return this.pendingBackendInit=s,{success:s,asyncInit:!0}}else return this.registry[e]=n,{success:!0,asyncInit:!1}}catch(n){return Bn(`Initialization of backend ${e} failed`),Bn(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,o)=>this.registryFactory[o].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){let e=this.getSortedBackends();for(let o=0;o<e.length;o++){let n=e[o],{success:i,asyncInit:s}=this.initializeBackend(n);if(s||i)return{name:n,asyncInit:s}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,o){let n=this.state.tensorInfo.get(o),i=n.backend,s=this.readSync(o),a=i.refCount(o);i.disposeData(o,!0),n.backend=e,e.move(o,s,n.shape,n.dtype,a),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,o){let n=null;if(o==null){if(typeof e!="function")throw new Error("Please provide a function to tidy()");o=e}else{if(typeof e!="string"&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof o!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");n=e}let i;return this.scopedRun(()=>this.startScope(n),()=>this.endScope(i),()=>(i=o(),i instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),i))}scopedRun(e,o,n){e();try{let i=n();return o(),i}catch(i){throw o(),i}}nextTensorId(){return r.nextTensorId++}nextVariableId(){return r.nextVariableId++}clone(e){let o=A.runKernel(Mn,{x:e}),n={x:e},i=a=>({x:()=>{let l="float32",u={x:a},c={dtype:l};return A.runKernel(Ln,u,c)}}),s=[];return this.addTapeNode(this.state.activeScope.name,n,[o],i,s,{}),o}runKernel(e,o,n){if(this.backendName==null&&this.backend,!(nc(e,this.backendName)!=null))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:o,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,o,n){let i=this.backend.numDataIds(),s=0;n.forEach(u=>{s+=u.dtype==="complex64"?3:1});let a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],l=i-o-s-a;if(l>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${l} data ids) after running '${e}'`)}runKernelFunc(e){let o,n=[],i=this.isTapeOn(),s=this.state.numBytes,a=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let l;this.backendName==null&&this.backend;let u,c=Py(e)?e.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(Py(e)){let{kernelName:g,inputs:x,attrs:y}=e;this.backendName==null&&this.backend;let b=nc(g,this.backendName);F(b!=null,()=>`Cannot find registered kernel '${g}' for backend '${this.backendName}'`),l=()=>{let I=this.backend.numDataIds();u=b.kernelFunc({inputs:x,attrs:y,backend:this.backend});let N=Array.isArray(u)?u:[u];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(g,I,N);let M=N.map(B=>B.rank!=null?B:this.makeTensorFromTensorInfo(B));if(i){let B=this.getTensorsForGradient(g,x,M);n=this.saveTensorsForBackwardMode(B)}return M}}else{let{forwardFunc:g}=e,x=y=>{i&&(n=y.map(b=>this.keep(this.clone(b))))};l=()=>{let y=this.backend.numDataIds();u=this.tidy(()=>g(this.backend,x));let b=Array.isArray(u)?u:[u];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(c,y,b),b}}let{inputs:p,attrs:d}=e,m=Py(e)?null:e.backwardsFunc,f;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?o=l():(f=this.profiler.profileKernel(c,p,()=>l()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(f),o=f.outputs)}),i&&this.addTapeNode(c,p,o,m,n,d),this.state.profiling&&this.state.activeProfile.kernels.push({name:c,bytesAdded:this.state.numBytes-s,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-a,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(p).map(g=>p[g]!=null?p[g].shape:null),outputShapes:o.map(g=>g.shape),kernelTimeMs:f.timeMs,extraInfo:f.extraInfo}),Array.isArray(u)?o:o[0]}saveTensorsForBackwardMode(e){return e.map(n=>this.keep(this.clone(n)))}getTensorsForGradient(e,o,n){let i=wy(e);if(i!=null){let s=i.inputsToSave||[],a=i.outputsToSave||[],l;i.saveAllInputs?(F(Array.isArray(o),()=>"saveAllInputs is true, expected inputs to be an array."),l=Object.keys(o).map(c=>o[c])):l=s.map(c=>o[c]);let u=n.filter((c,p)=>a[p]);return l.concat(u)}return[]}makeTensor(e,o,n,i){if(e==null)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",i=i||this.backend;let s=e;n==="string"&&Ka(e[0])&&(s=e.map(u=>lc(u)));let a=i.write(s,o,n),l=new st(o,n,a,this.nextTensorId());if(this.trackTensor(l,i),n==="string"){let u=this.state.tensorInfo.get(a),c=yy(s);this.state.numBytes+=c-u.bytes,u.bytes=c}return l}makeTensorFromDataId(e,o,n,i){n=n||"float32";let s={dataId:e,shape:o,dtype:n};return this.makeTensorFromTensorInfo(s,i)}makeTensorFromTensorInfo(e,o){let{dataId:n,shape:i,dtype:s}=e,a=new st(i,s,n,this.nextTensorId());return this.trackTensor(a,o),a}makeVariable(e,o=!0,n,i){n=n||this.nextVariableId().toString(),i!=null&&i!==e.dtype&&(e=e.cast(i));let s=new Vn(e,o,n,this.nextTensorId());if(this.state.registeredVariables[s.name]!=null)throw new Error(`Variable with name ${s.name} was already registered`);return this.state.registeredVariables[s.name]=s,this.incRef(s,this.backend),s}trackTensor(e,o){this.state.numTensors++,e.dtype==="string"&&this.state.numStringTensors++;let n=0;e.dtype!=="complex64"&&e.dtype!=="string"&&(n=e.size*Ha(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:o||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof Vn||this.track(e)}incRef(e,o){this.trackTensor(e,o),this.backend.incRef(e.dataId)}removeDataId(e,o){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===o&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;let o=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,e.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=o.bytes),e.dtype!=="complex64"&&e.dtype!=="string"){let n=e.size*Ha(e.dtype);this.state.numBytes-=n}o.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,o.backend)}disposeVariables(){for(let e in this.state.registeredVariables){let o=this.state.registeredVariables[e];this.disposeVariable(o)}}disposeVariable(e){this.disposeTensor(e),this.state.registeredVariables[e.name]!=null&&delete this.state.registeredVariables[e.name]}memory(){let e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,e.reasons==null&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}profile(e){return j(this,null,function*(){this.state.profiling=!0;let o=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=yield e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(i=>i.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-o,this.state.activeProfile.newTensors=this.state.numTensors-n;for(let i of this.state.activeProfile.kernels)i.kernelTimeMs=yield i.kernelTimeMs,i.extraInfo=yield i.extraInfo;return this.state.activeProfile})}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(e,o,n,i,s,a){let l={id:this.state.nextTapeNodeId++,kernelName:e,inputs:o,outputs:n,saved:s},u=wy(e);u!=null&&(i=u.gradFunc),i!=null&&(l.gradient=c=>(c=c.map((p,d)=>{if(p==null){let m=n[d],f=Xa(m.size,m.dtype);return this.makeTensor(f,m.shape,m.dtype)}return p}),i(c.length>1?c:c[0],s,a))),this.state.activeTape.push(l)}keep(e){return e.kept=!0,e}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){let o={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(o.name=e),this.state.scopeStack.push(o),this.state.activeScope=o}endScope(e){let o=Bm(e),n=new Set(o.map(s=>s.id));for(let s=0;s<this.state.activeScope.track.length;s++){let a=this.state.activeScope.track[s];!a.kept&&!n.has(a.id)&&a.dispose()}let i=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],o.forEach(s=>{!s.kept&&s.scopeId===i.id&&this.track(s)})}gradients(e,o,n,i=!1){if(F(o.length>0,()=>"gradients() received an empty list of xs."),n!=null&&n.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);let s=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));F(s instanceof st,()=>"The result y returned by f() must be a tensor.");let a=Rw(this.state.activeTape,o,s);if(!i&&a.length===0&&o.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{let l={};l[s.id]=n??JW(s.shape),Pw(l,a,c=>this.tidy(c),eU);let u=o.map(c=>l[c.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(c=>{for(let p of c.saved)p.dispose()}),this.state.activeTape=null),{value:s,grads:u}})}customGrad(e){return F(qa(e),()=>"The f passed in customGrad(f) must be a function."),(...o)=>{F(o.every(l=>l instanceof st),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let n,i={};o.forEach((l,u)=>{i[u]=l});let s=(l,u)=>(n=e(...o,u),F(n.value instanceof st,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),F(qa(n.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),n.value),a=(l,u)=>{let c=n.gradFunc(l,u),p=Array.isArray(c)?c:[c];F(p.length===o.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),F(p.every(m=>m instanceof st),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");let d={};return p.forEach((m,f)=>{d[f]=()=>m}),d};return this.runKernelFunc({forwardFunc:s,backwardsFunc:a,inputs:i})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,o){return this.state.tensorInfo.get(e).backend.readToGPU(e,o)}time(e){return j(this,null,function*(){let o=Ls(),n=yield this.backend.time(e);return n.wallMs=Ls()-o,n})}track(e){return this.state.activeScope!=null&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new Vm;for(let e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}return r.nextTensorId=0,r.nextVariableId=0,r})();function JW(r){let t=yp(He(r),"float32");return A.makeTensor(t,r,"float32")}function $y(){let r=Sy();if(r._tfengine==null){let t=new vp(r);r._tfengine=new ZW(t)}return pw(r._tfengine.ENV),Fw(()=>r._tfengine),r._tfengine}var A=$y();function eU(r,t){let e={a:r,b:t};return A.runKernel(xn,e)}var Wi={};pt(Wi,{isBrowser:()=>Dy,isMobile:()=>oU,mockIsMobile:()=>rU});function tU(){return typeof navigator<"u"&&navigator!=null}var Ay;function rU(r){Ay=r}function oU(r){if(Ay!==void 0)return Ay;if(r||tU()){if(r||(r=navigator),r.product==="ReactNative")return!0;let t=r.userAgent||r.vendor||(typeof window<"u"?window.opera:"");if(!t){let e=r;return e.userAgentData&&e.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function Dy(){return typeof window<"u"&&window.document!=null||typeof WorkerGlobalScope<"u"}var Nr=G();Nr.registerFlag("DEBUG",()=>!1,r=>{r&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});Nr.registerFlag("IS_BROWSER",()=>Dy());Nr.registerFlag("IS_NODE",()=>typeof process<"u"&&typeof process.versions<"u"&&typeof process.versions.node<"u");Nr.registerFlag("IS_CHROME",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));Nr.registerFlag("IS_SAFARI",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor));Nr.registerFlag("PROD",()=>!1);Nr.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>Nr.getBool("DEBUG"));Nr.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);Nr.registerFlag("IS_TEST",()=>!1);Nr.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>Nr.getBool("DEBUG"));Nr.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);Nr.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1);Nr.registerFlag("USE_SETTIMEOUTCUSTOM",()=>!1);function Rr(r,t){let e=r;if(mr(r))return t==="string"?[]:[r.length];if(Lm(r)){let n=r.channels||"RGBA";return[r.height,r.width*n.length]}else if(Mm(r))return[r.buffer.size/(t==null?4:Ha(t))];if(!Array.isArray(r))return[];let o=[];for(;Array.isArray(e)||mr(e)&&t!=="string";)o.push(e.length),e=e[0];return Array.isArray(r)&&G().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&Hw(r,o,[]),o}function Hw(r,t,e){if(e=e||[],!Array.isArray(r)&&!mr(r)){F(t.length===0,()=>`Element arr[${e.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`);return}F(t.length>0,()=>`Element arr[${e.join("][")}] should be a primitive, but is an array of ${r.length} elements`),F(r.length===t[0],()=>`Element arr[${e.join("][")}] should have ${t[0]} elements, but has ${r.length} elements`);let o=t.slice(1);for(let n=0;n<r.length;++n)Hw(r[n],o,e.concat(n))}function Gw(r,t,e,o){if(r!=="string_or_numeric"){if(r==null)throw new Error("Expected dtype cannot be null.");if(r!=="numeric"&&r!==t||r==="numeric"&&t==="string")throw new Error(`Argument '${e}' passed to '${o}' must be ${r} tensor, but got ${t} tensor`)}}function _(r,t,e,o="numeric"){if(r instanceof Ry())return Gw(o,r.dtype,t,e),r;let n=gi(r);if(n!=="string"&&["bool","int32","float32"].indexOf(o)>=0&&(n=o),Gw(o,n,t,e),r==null||!mr(r)&&!Array.isArray(r)&&typeof r!="number"&&typeof r!="boolean"&&typeof r!="string"){let l=r==null?"null":r.constructor.name;throw new Error(`Argument '${t}' passed to '${e}' must be a Tensor or TensorLike, but got '${l}'`)}let i=Rr(r,n);!mr(r)&&!Array.isArray(r)&&(r=[r]);let a=n!=="string"?ac(r,n):Vi(r,[],!0);return A.makeTensor(a,i,n)}function Ms(r,t,e,o="numeric"){if(!Array.isArray(r))throw new Error(`Argument ${t} passed to ${e} must be a \`Tensor[]\` or \`TensorLike[]\``);return r.map((i,s)=>_(i,`${t}[${s}]`,e,o))}var Fy="__op";function R(r){let t=Object.keys(r);if(t.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let e=t[0],o=r[e];e.endsWith("_")&&(e=e.substring(0,e.length-1)),e=e+Fy;let n=(...i)=>{A.startScope(e);try{let s=o(...i);return ws(s)&&console.error("Cannot return a Promise inside of tidy."),A.endScope(s),s}catch(s){throw A.endScope(null),s}};return Object.defineProperty(n,"name",{value:e,configurable:!0}),n}function nU(r,t){let e=_(r,"real","complex"),o=_(t,"imag","complex");Rt(e.shape,o.shape,`real and imag shapes, ${e.shape} and ${o.shape}, must match in call to tf.complex().`);let n={real:e,imag:o};return A.runKernel(Cs,n)}var Pr=R({complex_:nU});function Sr(r,t,e,o){if(o==null)o=gi(r);else if(o==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(Mm(r)||Lm(r)){if(o!=="float32"&&o!=="int32")throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${o}.`);return A.backend.createTensorFromGPUData(r,t||e,o)}if(!mr(r)&&!Array.isArray(r)&&typeof r!="number"&&typeof r!="boolean"&&typeof r!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(t!=null){St(t);let n=He(t),i=He(e);F(n===i,()=>`Based on the provided shape, [${t}], the tensor should have ${n} values but has ${i}`);for(let s=0;s<e.length;++s){let a=e[s],l=s===e.length-1?a!==He(t.slice(s)):!0;F(e[s]===t[s]||!l,()=>`Error creating a new Tensor. Inferred shape (${e}) does not match the provided shape (${t}). `)}}return!mr(r)&&!Array.isArray(r)&&(r=[r]),t=t||e,r=o!=="string"?ac(r,o):Vi(r,[],!0),A.makeTensor(r,t,o)}function wr(r,t,e){let o=Rr(r,e);return Sr(r,t,o,e)}var Un={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};var or=class r{static join(t){return new r(t).slice()}constructor(t){if(this.shards=[],this.previousShardIndex=0,t==null||(t instanceof Array||(t=[t]),t=t.map(o=>mr(o)?o.buffer:o),t.length===0))return;this.bufferUniformSize=t[0].byteLength;let e=0;for(let o=0;o<t.length;o++){let n=t[o];o!==t.length-1&&n.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);let i=e+n.byteLength;this.shards.push({buffer:n,start:e,end:i}),e=i}this.shards.length===0&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(t=0,e=this.byteLength){if(this.shards.length===0)return new ArrayBuffer(0);if(t=isNaN(Number(t))?0:t,e=isNaN(Number(e))?0:e,t=Math.max(0,t),e=Math.min(this.byteLength,e),e<=t)return new ArrayBuffer(0);let o=this.findShardForByte(t);if(o===-1)throw new Error(`Could not find start shard for byte ${t}`);let n=e-t,i=new ArrayBuffer(n),s=new Uint8Array(i),a=0;for(let l=o;l<this.shards.length;l++){let u=this.shards[l],p=t+a-u.start,d=a,f=Math.min(e,u.end)-u.start,g=new Uint8Array(u.buffer,p,f-p);if(s.set(g,d),a+=g.length,e<u.end)break}return i}findShardForByte(t){if(this.shards.length===0||t<0||t>=this.byteLength)return-1;if(this.bufferUniformSize!=null)return this.previousShardIndex=Math.floor(t/this.bufferUniformSize),this.previousShardIndex;function e(n){return t<n.start?-1:t>=n.end?1:0}if(e(this.shards[this.previousShardIndex])===0)return this.previousShardIndex;let o=iU(this.shards,e);return o===-1?-1:(this.previousShardIndex=o,this.previousShardIndex)}};function iU(r,t){let e=0,o=r.length;for(;e<=o;){let n=Math.floor((o-e)/2)+e,i=t(r[n]);if(i===0)return n;i<0?o=n:e=n+1}return-1}function sU(r){G().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(r+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}Lw(sU);function fr(){return A}function Ee(r,t){return A.tidy(r,t)}function Xe(r){Bm(r).forEach(e=>e.dispose())}function $r(r){return A.keep(r)}function Oy(r){return A.setBackend(r)}function Ly(){return A.ready()}function yn(){return A.backendName}function Wm(r,t,e=1){return A.registerBackend(r,t,e)}function Ui(){return A.backend}var zi=4;function jw(r,t){return j(this,null,function*(){let e=[],o=[],n=Array.isArray(r)?r.map(s=>s.name):Object.keys(r);for(let s=0;s<n.length;++s){let a=n[s],l=Array.isArray(r)?r[s].tensor:r[a];if(l.dtype!=="float32"&&l.dtype!=="int32"&&l.dtype!=="bool"&&l.dtype!=="string"&&l.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${a}': ${l.dtype}`);let u={name:a,shape:l.shape,dtype:l.dtype};if(l.dtype==="string"){let c=new Promise(p=>j(null,null,function*(){let d=yield l.bytes(),m=d.reduce((x,y)=>x+y.length,0)+zi*d.length,f=new Uint8Array(m),g=0;for(let x=0;x<d.length;x++){let y=d[x],b=new Uint8Array(new Uint32Array([y.length]).buffer);f.set(b,g),g+=zi,f.set(y,g),g+=y.length}p(f)}));o.push(c)}else o.push(l.data());t!=null&&(u.group=t),e.push(u)}let i=yield Promise.all(o);return{data:uU(i),specs:e}})}function Um(r,t){let e=new or(r),o={},n=0;for(let i of t){let s=aU(i,(a,l)=>e.slice(n+a,n+l));o[i.name]=Xw(i,e.slice(n,n+s)),n+=s}return o}function aU(r,t){let e=He(r.shape),o;if("quantization"in r){let n=r.quantization;o=Un[n.dtype]}else if(r.dtype==="string"){let n=0;for(let i=0;i<e;i++)n+=zi+new Uint32Array(t(n,n+zi))[0];return n}else o=Un[r.dtype];return e*o}function lU(r,t){return j(this,null,function*(){let e=He(r.shape),o;if("quantization"in r){let n=r.quantization;o=Un[n.dtype]}else if(r.dtype==="string"){let n=0;for(let i=0;i<e;i++)n+=zi+new Uint32Array(yield t(n,n+zi))[0];return n}else o=Un[r.dtype];return e*o})}function Xw(r,t){let e=r.name,o=r.dtype,n=r.shape,i=He(n),s,a=0;if("quantization"in r){let l=r.quantization;if(l.dtype==="uint8"||l.dtype==="uint16"){if(!("min"in l&&"scale"in l))throw new Error(`Weight ${r.name} with quantization ${l.dtype} doesn't have corresponding metadata min and scale.`)}else if(l.dtype==="float16"){if(o!=="float32")throw new Error(`Weight ${r.name} is quantized with ${l.dtype} which only supports weights of type float32 not ${o}.`)}else throw new Error(`Weight ${r.name} has unknown quantization dtype ${l.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);let u=Un[l.dtype],c=l.dtype==="uint8"?new Uint8Array(t):new Uint16Array(t);if(o==="float32")if(l.dtype==="uint8"||l.dtype==="uint16"){s=new Float32Array(c.length);for(let p=0;p<c.length;p++){let d=c[p];s[p]=d*l.scale+l.min}}else if(l.dtype==="float16")s=mU()(c);else throw new Error(`Unsupported quantization type ${l.dtype} for weight type float32.`);else if(o==="int32"){if(l.dtype!=="uint8"&&l.dtype!=="uint16")throw new Error(`Unsupported quantization type ${l.dtype} for weight type int32.`);s=new Int32Array(c.length);for(let p=0;p<c.length;p++){let d=c[p];s[p]=Math.round(d*l.scale+l.min)}}else throw new Error(`Unsupported dtype in weight '${e}': ${o}`);a+=i*u}else if(o==="string"){let l=He(r.shape);s=[];for(let u=0;u<l;u++){let c=new Uint32Array(t.slice(a,a+zi))[0];a+=zi;let p=new Uint8Array(t.slice(a,a+c));s.push(p),a+=c}}else{let l=Un[o];if(o==="float32")s=new Float32Array(t);else if(o==="int32")s=new Int32Array(t);else if(o==="bool")s=new Uint8Array(t);else if(o==="complex64"){s=new Float32Array(t);let u=new Float32Array(s.length/2),c=new Float32Array(s.length/2);for(let f=0;f<u.length;f++)u[f]=s[f*2],c[f]=s[f*2+1];let p=wr(u,n,"float32"),d=wr(c,n,"float32"),m=Pr(p,d);return p.dispose(),d.dispose(),m}else throw new Error(`Unsupported dtype in weight '${e}': ${o}`);a+=i*l}return wr(s,n,o)}function Kw(r,t,e){return j(this,null,function*(){let o=new Uint8Array(t);for(;o.byteLength<e;){let{done:n,value:i}=yield r.read();if(n&&i==null){let a=e-o.byteLength;throw new Error(`Reader is done but ${a} bytes are still expected`)}let s=new Uint8Array(o.length+i.byteLength);s.set(o,0),s.set(new Uint8Array(i),o.length),o=s}return o.buffer})}function zm(r,t){return j(this,null,function*(){let e={},o=r.getReader(),n=new ArrayBuffer(0);for(let i of t){let s=yield lU(i,(u,c)=>j(null,null,function*(){return n=yield Kw(o,n,c),n.slice(u,c)}));n=yield Kw(o,n,s);let a=n.slice(0,s);n=n.slice(s);let l=Xw(i,a);if(e[i.name]=l,yn()==="webgpu"){let u=Ui();"uploadToGPU"in u&&He(l.shape)>=G().get("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD")&&u.uploadToGPU(l.dataId)}}return e})}function uU(r){if(r===null)throw new Error(`Invalid input value: ${JSON.stringify(r)}`);let t=0,e=[];r.forEach(i=>{if(t+=i.byteLength,e.push(i.byteLength===i.buffer.byteLength?i:new i.constructor(i)),!(i instanceof Float32Array||i instanceof Int32Array||i instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${i.constructor.name}`)});let o=new Uint8Array(t),n=0;return e.forEach(i=>{o.set(new Uint8Array(i.buffer),n),n+=i.byteLength}),o.buffer}var My=typeof Buffer<"u"&&(typeof Blob>"u"||typeof atob>"u"||typeof btoa>"u");function qw(r){return My?Buffer.byteLength(r,"utf8"):new Blob([r]).size}function Yw(r){if(My)return Buffer.from(r).toString("base64");let t=new Uint8Array(r),e="";for(let o=0,n=t.length;o<n;o++)e+=String.fromCharCode(t[o]);return btoa(e)}function Qw(r){if(My){let o=Buffer.from(r,"base64");return o.buffer.slice(o.byteOffset,o.byteOffset+o.byteLength)}let t=atob(r),e=new Uint8Array(t.length);for(let o=0;o<t.length;++o)e.set([t.charCodeAt(o)],o);return e.buffer}function Zw(r){return or.join(r)}function By(r){let t="/";for(r=r.trim();r.endsWith(t);)r=r.slice(0,r.length-1);let e=r.split(t);return e[e.length-1]}function Gm(r,t){let e={modelTopology:r.modelTopology,format:r.format,generatedBy:r.generatedBy,convertedBy:r.convertedBy,weightsManifest:t};return r.signature!=null&&(e.signature=r.signature),r.userDefinedMetadata!=null&&(e.userDefinedMetadata=r.userDefinedMetadata),r.modelInitializer!=null&&(e.modelInitializer=r.modelInitializer),r.initializerSignature!=null&&(e.initializerSignature=r.initializerSignature),r.trainingConfig!=null&&(e.trainingConfig=r.trainingConfig),e}function Vy(r,t,e){let o={modelTopology:r.modelTopology,format:r.format,generatedBy:r.generatedBy,convertedBy:r.convertedBy};if(r.trainingConfig!=null&&(o.trainingConfig=r.trainingConfig),r.weightsManifest!=null){if(!t)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!e)throw new Error("modelJSON has weightsManifest but weightData is null");o.weightSpecs=t,o.weightData=e}return r.signature!=null&&(o.signature=r.signature),r.userDefinedMetadata!=null&&(o.userDefinedMetadata=r.userDefinedMetadata),r.modelInitializer!=null&&(o.modelInitializer=r.modelInitializer),r.initializerSignature!=null&&(o.initializerSignature=r.initializerSignature),o}function pc(r,t){return j(this,null,function*(){let e,o;return r.weightsManifest!=null&&([e,o]=yield t(r.weightsManifest)),Vy(r,e,o)})}function vn(r){if(r.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:r.modelTopology==null?0:qw(JSON.stringify(r.modelTopology)),weightSpecsBytes:r.weightSpecs==null?0:qw(JSON.stringify(r.weightSpecs)),weightDataBytes:r.weightData==null?0:new or(r.weightData).byteLength}}function Ip(r){let t=[];for(let e of r)t.push(...e.weights);return t}function cU(){let r=e=>{let o=e<<13,n=0;for(;(o&8388608)===0;)n-=8388608,o<<=1;return o&=-8388609,n+=947912704,o|n},t=new Uint32Array(2048);t[0]=0;for(let e=1;e<1024;e++)t[e]=r(e);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}function pU(){let r=new Uint32Array(64);r[0]=0,r[31]=1199570944,r[32]=2147483648,r[63]=3347054592;for(let t=1;t<31;t++)r[t]=t<<23;for(let t=33;t<63;t++)r[t]=2147483648+(t-32<<23);return r}function dU(){let r=new Uint32Array(64);for(let t=0;t<64;t++)r[t]=1024;return r[0]=r[32]=0,r}function mU(){let r=cU(),t=pU(),e=dU();return o=>{let n=new ArrayBuffer(4*o.length),i=new Uint32Array(n);for(let s=0;s<o.length;s++){let a=o[s],l=r[e[a>>10]+(a&1023)]+t[a>>10];i[s]=l}return new Float32Array(n)}}var Xt=class r{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return r.instance==null&&(r.instance=new r),r.instance}static registerSaveRouter(t){r.getInstance().saveRouters.push(t)}static registerLoadRouter(t){r.getInstance().loadRouters.push(t)}static getSaveHandlers(t){return r.getHandlers(t,"save")}static getLoadHandlers(t,e){return r.getHandlers(t,"load",e)}static getHandlers(t,e,o){let n=[];return(e==="load"?r.getInstance().loadRouters:r.getInstance().saveRouters).forEach(s=>{let a=s(t,o);a!==null&&n.push(a)}),n}},Jw=r=>Xt.registerSaveRouter(r),e_=r=>Xt.registerLoadRouter(r),t_=r=>Xt.getSaveHandlers(r),r_=(r,t)=>Xt.getLoadHandlers(r,t);var Wy="tensorflowjs",Uy=1,Bs="models_store",Gi="model_info_store";function o_(){if(!G().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");let r=typeof window>"u"?self:window,t=r.indexedDB||r.mozIndexedDB||r.webkitIndexedDB||r.msIndexedDB||r.shimIndexedDB;if(t==null)throw new Error("The current browser does not appear to support IndexedDB.");return t}function zy(r){let t=r.result;t.createObjectStore(Bs,{keyPath:"modelPath"}),t.createObjectStore(Gi,{keyPath:"modelPath"})}var Vs=(()=>{class r{constructor(e){if(this.indexedDB=o_(),e==null||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}save(e){return j(this,null,function*(){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)})}load(){return j(this,null,function*(){return this.databaseAction(this.modelPath)})}databaseAction(e,o){return new Promise((n,i)=>{let s=this.indexedDB.open(Wy,Uy);s.onupgradeneeded=()=>zy(s),s.onsuccess=()=>{let a=s.result;if(o==null){let l=a.transaction(Bs,"readonly"),c=l.objectStore(Bs).get(this.modelPath);c.onsuccess=()=>{if(c.result==null)return a.close(),i(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));n(c.result.modelArtifacts)},c.onerror=p=>(a.close(),i(c.error)),l.oncomplete=()=>a.close()}else{o.weightData=or.join(o.weightData);let l=vn(o),u=a.transaction(Gi,"readwrite"),c=u.objectStore(Gi),p;try{p=c.put({modelPath:this.modelPath,modelArtifactsInfo:l})}catch(m){return i(m)}let d;p.onsuccess=()=>{d=a.transaction(Bs,"readwrite");let m=d.objectStore(Bs),f;try{f=m.put({modelPath:this.modelPath,modelArtifacts:o,modelArtifactsInfo:l})}catch(g){return i(g)}f.onsuccess=()=>n({modelArtifactsInfo:l}),f.onerror=g=>{c=u.objectStore(Gi);let x=c.delete(this.modelPath);x.onsuccess=()=>(a.close(),i(f.error)),x.onerror=y=>(a.close(),i(f.error))}},p.onerror=m=>(a.close(),i(p.error)),u.oncomplete=()=>{d==null?a.close():d.oncomplete=()=>a.close()}}},s.onerror=a=>i(s.error)})}}return r.URL_SCHEME="indexeddb://",r})();var n_=r=>G().getBool("IS_BROWSER")&&!Array.isArray(r)&&r.startsWith(Vs.URL_SCHEME)?fU(r.slice(Vs.URL_SCHEME.length)):null;Xt.registerSaveRouter(n_);Xt.registerLoadRouter(n_);function fU(r){return new Vs(r)}function hU(r){return r.startsWith(Vs.URL_SCHEME)?r.slice(Vs.URL_SCHEME.length):r}var Hm=class{constructor(){this.indexedDB=o_()}listModels(){return j(this,null,function*(){return new Promise((t,e)=>{let o=this.indexedDB.open(Wy,Uy);o.onupgradeneeded=()=>zy(o),o.onsuccess=()=>{let n=o.result,i=n.transaction(Gi,"readonly"),a=i.objectStore(Gi).getAll();a.onsuccess=()=>{let l={};for(let u of a.result)l[u.modelPath]=u.modelArtifactsInfo;t(l)},a.onerror=l=>(n.close(),e(a.error)),i.oncomplete=()=>n.close()},o.onerror=n=>e(o.error)})})}removeModel(t){return j(this,null,function*(){return t=hU(t),new Promise((e,o)=>{let n=this.indexedDB.open(Wy,Uy);n.onupgradeneeded=()=>zy(n),n.onsuccess=()=>{let i=n.result,s=i.transaction(Gi,"readwrite"),a=s.objectStore(Gi),l=a.get(t),u;l.onsuccess=()=>{if(l.result==null)return i.close(),o(new Error(`Cannot find model with path '${t}' in IndexedDB.`));{let c=a.delete(t),p=()=>{u=i.transaction(Bs,"readwrite");let m=u.objectStore(Bs).delete(t);m.onsuccess=()=>e(l.result.modelArtifactsInfo),m.onerror=f=>o(l.error)};c.onsuccess=p,c.onerror=d=>(p(),i.close(),o(l.error))}},l.onerror=c=>(i.close(),o(l.error)),s.oncomplete=()=>{u==null?i.close():u.oncomplete=()=>i.close()}},n.onerror=i=>o(n.error)})})}};var zn="/",dc="tensorflowjs_models",i_="info",gU="model_topology",xU="weight_specs",yU="weight_data",vU="model_metadata";function s_(r){return{info:[dc,r,i_].join(zn),topology:[dc,r,gU].join(zn),weightSpecs:[dc,r,xU].join(zn),weightData:[dc,r,yU].join(zn),modelMetadata:[dc,r,vU].join(zn)}}function a_(r){for(let t of Object.values(r))window.localStorage.removeItem(t)}function bU(r){let t=r.split(zn);if(t.length<3)throw new Error(`Invalid key format: ${r}`);return t.slice(1,t.length-1).join(zn)}function SU(r){return r.startsWith(Ws.URL_SCHEME)?r.slice(Ws.URL_SCHEME.length):r}var Ws=(()=>{class r{constructor(e){if(!G().getBool("IS_BROWSER")||typeof window>"u"||typeof window.localStorage>"u")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,e==null||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=s_(this.modelPath)}save(e){return j(this,null,function*(){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{let o=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),i=vn(e),s=or.join(e.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(i)),this.LS.setItem(this.keys.topology,o),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,Yw(s));let a={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:e.signature!=null?e.signature:void 0,userDefinedMetadata:e.userDefinedMetadata!=null?e.userDefinedMetadata:void 0,modelInitializer:e.modelInitializer!=null?e.modelInitializer:void 0,initializerSignature:e.initializerSignature!=null?e.initializerSignature:void 0,trainingConfig:e.trainingConfig!=null?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(a)),{modelArtifactsInfo:i}}catch{throw a_(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${i.modelTopologyBytes}, weightSpecsBytes=${i.weightSpecsBytes}, weightDataBytes=${i.weightDataBytes}.`)}}})}load(){return j(this,null,function*(){let e=JSON.parse(this.LS.getItem(this.keys.info));if(e==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(e.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");let o={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(n==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);o.modelTopology=n;let i=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(i==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);o.weightSpecs=i;let s=this.LS.getItem(this.keys.modelMetadata);if(s!=null){let l=JSON.parse(s);o.format=l.format,o.generatedBy=l.generatedBy,o.convertedBy=l.convertedBy,l.signature!=null&&(o.signature=l.signature),l.userDefinedMetadata!=null&&(o.userDefinedMetadata=l.userDefinedMetadata),l.modelInitializer!=null&&(o.modelInitializer=l.modelInitializer),l.initializerSignature!=null&&(o.initializerSignature=l.initializerSignature),l.trainingConfig!=null&&(o.trainingConfig=l.trainingConfig)}let a=this.LS.getItem(this.keys.weightData);if(a==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return o.weightData=Qw(a),o})}}return r.URL_SCHEME="localstorage://",r})();var l_=r=>G().getBool("IS_BROWSER")&&!Array.isArray(r)&&r.startsWith(Ws.URL_SCHEME)?wU(r.slice(Ws.URL_SCHEME.length)):null;Xt.registerSaveRouter(l_);Xt.registerLoadRouter(l_);function wU(r){return new Ws(r)}var Km=class{constructor(){F(G().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),F(typeof window>"u"||typeof window.localStorage<"u",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}listModels(){return j(this,null,function*(){let t={},e=dc+zn,o=zn+i_;for(let n=0;n<this.LS.length;++n){let i=this.LS.key(n);if(i.startsWith(e)&&i.endsWith(o)){let s=bU(i);t[s]=JSON.parse(this.LS.getItem(i))}}return t})}removeModel(t){return j(this,null,function*(){t=SU(t);let e=s_(t);if(this.LS.getItem(e.info)==null)throw new Error(`Cannot find model at path '${t}'`);let o=JSON.parse(this.LS.getItem(e.info));return a_(e),o})}};var mc="://",Ko=class r{constructor(){this.managers={}}static getInstance(){return r.instance==null&&(r.instance=new r),r.instance}static registerManager(t,e){F(t!=null,()=>"scheme must not be undefined or null."),t.endsWith(mc)&&(t=t.slice(0,t.indexOf(mc))),F(t.length>0,()=>"scheme must not be an empty string.");let o=r.getInstance();F(o.managers[t]==null,()=>`A model store manager is already registered for scheme '${t}'.`),o.managers[t]=e}static getManager(t){let e=r.getInstance().managers[t];if(e==null)throw new Error(`Cannot find model manager for scheme '${t}'`);return e}static getSchemes(){return Object.keys(r.getInstance().managers)}};function qm(r){if(r.indexOf(mc)===-1)throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${Ko.getSchemes().join(",")}`);return{scheme:r.split(mc)[0],path:r.split(mc)[1]}}function u_(r,t,e=!1){return j(this,null,function*(){F(r!==t,()=>`Old path and new path are the same: '${r}'`);let o=Xt.getLoadHandlers(r);F(o.length>0,()=>`Copying failed because no load handler is found for source URL ${r}.`),F(o.length<2,()=>`Copying failed because more than one (${o.length}) load handlers for source URL ${r}.`);let n=o[0],i=Xt.getSaveHandlers(t);F(i.length>0,()=>`Copying failed because no save handler is found for destination URL ${t}.`),F(i.length<2,()=>`Copying failed because more than one (${o.length}) save handlers for destination URL ${t}.`);let s=i[0],a=qm(r).scheme,l=qm(r).path,u=a===qm(r).scheme,c=yield n.load();e&&u&&(yield Ko.getManager(a).removeModel(l));let p=yield s.save(c);return e&&!u&&(yield Ko.getManager(a).removeModel(l)),p.modelArtifactsInfo})}function c_(){return j(this,null,function*(){let r=Ko.getSchemes(),t={};for(let e of r){let o=yield Ko.getManager(e).listModels();for(let n in o){let i=e+mc+n;t[i]=o[n]}}return t})}function p_(r){return j(this,null,function*(){let t=qm(r);return Ko.getManager(t.scheme).removeModel(t.path)})}function d_(r,t){return j(this,null,function*(){return u_(r,t,!1)})}function m_(r,t){return j(this,null,function*(){return u_(r,t,!0)})}var Gy=class{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(t,e){return fetch(t,e)}now(){return performance.now()}encode(t,e){if(e!=="utf-8"&&e!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${e}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(t)}decode(t,e){return new TextDecoder(e).decode(t)}setTimeoutCustom(t,e){if(typeof window>"u"||!G().getBool("USE_SETTIMEOUTCUSTOM")){setTimeout(t,e);return}this.functionRefs.push(t),setTimeout(()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")},e),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",o=>{if(o.source===window&&o.data.name===this.messageName){o.stopPropagation();let n=this.functionRefs[o.data.index];n(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}},!0))}isTypedArray(t){return $m(t)}};if(G().get("IS_BROWSER")){G().setPlatform("browser",new Gy);try{Ko.registerManager(Ws.URL_SCHEME,new Km)}catch{}try{Ko.registerManager(Vs.URL_SCHEME,new Hm)}catch{}}var CU={importFetch:()=>h_()},Hy;var Ky=class{constructor(){this.util=g_(),this.textEncoder=new this.util.TextEncoder}fetch(t,e){return G().global.fetch!=null?G().global.fetch(t,e):(Hy==null&&(Hy=CU.importFetch()),Hy(t,e))}now(){let t=process.hrtime();return t[0]*1e3+t[1]/1e6}encode(t,e){if(e!=="utf-8"&&e!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${e}`);return this.textEncoder.encode(t)}decode(t,e){return t.length===0?"":new this.util.TextDecoder(e).decode(t)}isTypedArray(t){return this.util.types.isFloat32Array(t)||this.util.types.isInt32Array(t)||this.util.types.isUint8Array(t)||this.util.types.isUint8ClampedArray(t)}};G().get("IS_NODE")&&!G().get("IS_BROWSER")&&G().setPlatform("node",new Ky);function Le(r,t="float32",e){return t=t||"float32",St(r),new bo(r,t,e)}function kU(r,t){let e=_(r,"x","cast");if(!xy(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if(t==="string"&&e.dtype!=="string"||t!=="string"&&e.dtype==="string")throw new Error("Only strings can be casted to strings");let o={x:e},n={dtype:t};return A.runKernel(Ln,o,n)}var ze=R({cast_:kU});function IU(r){let e={x:_(r,"x","clone","string_or_numeric")};return A.runKernel(Mn,e)}var ro=R({clone_:IU});function jm(r,t=!1){console.log(r.toString(t))}$y();var TU={buffer:Le,cast:ze,clone:ro,print:jm};Ow(TU);function EU(r,t){let e=_(r,"a","add"),o=_(t,"b","add");[e,o]=Ge(e,o);let n={a:e,b:o};return A.runKernel(xn,n)}var xe=R({add_:EU});function NU(r,t){let e=_(r,"a","floorDiv"),o=_(t,"b","floorDiv");[e,o]=Ge(e,o);let n={a:e,b:o};return A.runKernel(wi,n)}var Xm=R({floorDiv_:NU});function RU(r,t){let e=_(r,"a","div"),o=_(t,"b","div");if([e,o]=Ge(e,o),e.dtype==="int32"&&o.dtype==="int32")return Xm(e,o);let n={a:e,b:o},i={};return A.runKernel(Fl,n,i)}var De=R({div_:RU});function PU(r,t){let e=_(r,"a","mul"),o=_(t,"b","mul");[e,o]=Ge(e,o);let n={a:e,b:o};return A.runKernel(Ri,n)}var le=R({mul_:PU});function $U(r){let t=_(r,"x","abs");if(t.dtype==="complex64"){let e={x:t};return A.runKernel(gl,e)}else{let e={x:t};return A.runKernel(_s,e)}}var er=R({abs_:$U});function AU(r){let e={x:_(r,"x","acos")};return A.runKernel(Ya,e)}var x_=R({acos_:AU});function DU(r){let e={x:_(r,"x","acosh")};return A.runKernel(Qa,e)}var y_=R({acosh_:DU});function FU(r){F(Array.isArray(r),()=>"The argument passed to tf.addN() must be a list of tensors"),F(r.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${r.length}`);let t=r.map((n,i)=>_(n,`tensors${i}`,"addN")),e=t[0];t.forEach(n=>{if(n.dtype!==e.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),t.forEach(n=>{if(!Jr(n.shape,e.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});let o=t;return A.runKernel(Za,o)}var v_=R({addN_:FU});function OU(r,t=null,e=!1){let n={x:_(r,"x","all","bool")},i={axis:t,keepDims:e};return A.runKernel(Ja,n,i)}var b_=R({all_:OU});function LU(r,t=null,e=!1){let n={x:_(r,"x","any","bool")},i={axis:t,keepDims:e};return A.runKernel(el,n,i)}var S_=R({any_:LU});function MU(r,t=0){let o={x:_(r,"x","argMax")},n={axis:t};return A.runKernel(tl,o,n)}var Ym=R({argMax_:MU});function BU(r,t=0){let o={x:_(r,"x","argMin")},n={axis:t};return A.runKernel(rl,o,n)}var w_=R({argMin_:BU});function VU(r){let e={x:_(r,"x","asin")};return A.runKernel(ol,e)}var __=R({asin_:VU});function WU(r){let e={x:_(r,"x","asinh")};return A.runKernel(nl,e)}var C_=R({asinh_:WU});function UU(r){let e={x:_(r,"x","atan")};return A.runKernel(il,e)}var k_=R({atan_:UU});function zU(r,t){let e=_(r,"a","atan2"),o=_(t,"b","atan2");[e,o]=Ge(e,o);let n={a:e,b:o};return A.runKernel(al,n)}var I_=R({atan2_:zU});function GU(r){let e={x:_(r,"x","atanh")};return A.runKernel(sl,e)}var T_=R({atanh_:GU});function HU(r,t,e,o,n="NHWC",i){let s=r[3],a=[...t,s],l=N_(n);return Gs(r,a,e,i,o,null,null,l)}function jy(r,t,e,o,n,i,s="channelsLast"){let[a,l]=Tp(t),u;if(s==="channelsLast")u=[a,l,r[3],r[3]];else if(s==="channelsFirst")u=[a,l,r[1],r[1]];else throw new Error(`Unknown dataFormat ${s}`);return Gs(r,u,e,o,n,i,!1,s)}function KU(r,t,e,o,n,i,s="NDHWC"){let[a,l,u]=qy(t),c,p;if(s==="NDHWC")p="channelsLast",c=[a,l,u,r[4],r[4]];else if(s==="NCDHW")p="channelsFirst",c=[a,l,u,r[1],r[1]];else throw new Error(`Unknown dataFormat ${s}`);return E_(r,c,e,o,n,!1,p,i)}function Gs(r,t,e,o,n,i,s=!1,a="channelsLast"){let[l,u,c,p]=[-1,-1,-1,-1];if(a==="channelsLast")[l,u,c,p]=r;else if(a==="channelsFirst")[l,p,u,c]=r;else throw new Error(`Unknown dataFormat ${a}`);let[d,m,,f]=t,[g,x]=Tp(e),[y,b]=Tp(o),I=hc(d,y),N=hc(m,b),{padInfo:M,outHeight:B,outWidth:W}=XU(n,u,c,g,x,I,N,i,a),H=s?f*p:f,K;return a==="channelsFirst"?K=[l,H,B,W]:a==="channelsLast"&&(K=[l,B,W,H]),{batchSize:l,dataFormat:a,inHeight:u,inWidth:c,inChannels:p,outHeight:B,outWidth:W,outChannels:H,padInfo:M,strideHeight:g,strideWidth:x,filterHeight:d,filterWidth:m,effectiveFilterHeight:I,effectiveFilterWidth:N,dilationHeight:y,dilationWidth:b,inShape:r,outShape:K,filterShape:t}}function E_(r,t,e,o,n,i=!1,s="channelsLast",a){let[l,u,c,p,d]=[-1,-1,-1,-1,-1];if(s==="channelsLast")[l,u,c,p,d]=r;else if(s==="channelsFirst")[l,d,u,c,p]=r;else throw new Error(`Unknown dataFormat ${s}`);let[m,f,g,,x]=t,[y,b,I]=qy(e),[N,M,B]=qy(o),W=hc(m,N),H=hc(f,M),K=hc(g,B),{padInfo:X,outDepth:re,outHeight:ce,outWidth:pe}=YU(n,u,c,p,y,b,I,W,H,K,a),be=i?x*d:x,we;return s==="channelsFirst"?we=[l,be,re,ce,pe]:s==="channelsLast"&&(we=[l,re,ce,pe,be]),{batchSize:l,dataFormat:s,inDepth:u,inHeight:c,inWidth:p,inChannels:d,outDepth:re,outHeight:ce,outWidth:pe,outChannels:be,padInfo:X,strideDepth:y,strideHeight:b,strideWidth:I,filterDepth:m,filterHeight:f,filterWidth:g,effectiveFilterDepth:W,effectiveFilterHeight:H,effectiveFilterWidth:K,dilationDepth:N,dilationHeight:M,dilationWidth:B,inShape:r,outShape:we,filterShape:t}}function qU(r,t,e,o,n){o==null&&(o=Xy(r,t,e));let i=r[0],s=r[1],a=Ep((i-t+2*o)/e+1,n),l=Ep((s-t+2*o)/e+1,n);return[a,l]}function jU(r,t,e,o,n,i){n==null&&(n=Xy(r,t[0],o[0]));let s=[0,0,0,e];for(let a=0;a<3;a++)r[a]+2*n>=t[a]&&(s[a]=Ep((r[a]-t[a]+2*n)/o[a]+1,i));return s}function Xy(r,t,e,o=1){let n=hc(t,o);return Math.floor((r[0]*(e-1)-e+n)/2)}function Tp(r){return typeof r=="number"?[r,r,r]:r.length===2?[r[0],r[1],1]:r}function qy(r){return typeof r=="number"?[r,r,r]:r}function hc(r,t){return t<=1?r:r+(r-1)*(t-1)}function XU(r,t,e,o,n,i,s,a,l){let u,c,p;if(typeof r=="number"){u={top:r,bottom:r,left:r,right:r,type:r===0?"VALID":"NUMBER"};let m=qU([t,e],i,o,r,a);c=m[0],p=m[1]}else if(r==="same"){c=Math.ceil(t/o),p=Math.ceil(e/n);let d=Math.max(0,(c-1)*o+i-t),m=Math.max(0,(p-1)*n+s-e),f=Math.floor(d/2),g=d-f,x=Math.floor(m/2),y=m-x;u={top:f,bottom:g,left:x,right:y,type:"SAME"}}else if(r==="valid")u={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((t-i+1)/o),p=Math.ceil((e-s+1)/n);else if(typeof r=="object"){let d=l==="channelsLast"?r[1][0]:r[2][0],m=l==="channelsLast"?r[1][1]:r[2][1],f=l==="channelsLast"?r[2][0]:r[3][0],g=l==="channelsLast"?r[2][1]:r[3][1];u={top:d,bottom:m,left:f,right:g,type:d===0&&m===0&&f===0&&g===0?"VALID":"EXPLICIT"},c=Ep((t-i+d+m)/o+1,a),p=Ep((e-s+f+g)/n+1,a)}else throw Error(`Unknown padding parameter: ${r}`);return{padInfo:u,outHeight:c,outWidth:p}}function YU(r,t,e,o,n,i,s,a,l,u,c){let p,d,m,f;if(r==="valid"&&(r=0),typeof r=="number"){p={top:r,bottom:r,left:r,right:r,front:r,back:r,type:r===0?"VALID":"NUMBER"};let x=jU([t,e,o,1],[a,l,u],1,[n,i,s],r,c);d=x[0],m=x[1],f=x[2]}else if(r==="same"){d=Math.ceil(t/n),m=Math.ceil(e/i),f=Math.ceil(o/s);let g=(d-1)*n+a-t,x=(m-1)*i+l-e,y=(f-1)*s+u-o,b=Math.floor(g/2),I=g-b,N=Math.floor(x/2),M=x-N,B=Math.floor(y/2),W=y-B;p={top:N,bottom:M,left:B,right:W,front:b,back:I,type:"SAME"}}else throw Error(`Unknown padding parameter: ${r}`);return{padInfo:p,outDepth:d,outHeight:m,outWidth:f}}function Ep(r,t){if(!t)return Math.trunc(r);switch(t){case"round":return Math.round(r);case"ceil":return Math.ceil(r);case"floor":return Math.floor(r);default:throw new Error(`Unknown roundingMode ${t}`)}}function zs(r){let[t,e,o]=Tp(r);return t===1&&e===1&&o===1}function hr(r,t){return zs(r)||zs(t)}function bn(r){return Tp(r).every(t=>t>0)}function N_(r){if(r==="NHWC")return"channelsLast";if(r==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${r}`)}function Lt(r,t,e){if(e!=null){if(typeof t=="string")throw Error(`Error in ${r}: pad must be an integer when using dimRoundingMode ${e} but got pad ${t}.`);if(typeof t=="number")F(On(t),()=>`Error in ${r}: pad must be an integer when using dimRoundingMode ${e} but got pad ${t}.`);else if(typeof t=="object")t.forEach(o=>{o.forEach(n=>{F(On(n),()=>`Error in ${r}: pad must be an integer when using dimRoundingMode ${e} but got pad ${n}.`)})});else throw Error(`Error in ${r}: Unknown padding parameter: ${t}`)}}function QU(r,t){let o={x:_(r,"x","reshape","string_or_numeric")},n={shape:t};return A.runKernel(Cu,o,n)}var Z=R({reshape_:QU});function ZU(r,t,e,o,n){let i=_(r,"x","avgPool","float32"),s=1;F(hr(e,s),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${e} and dilations '${s}'`);let a=i,l=!1;i.rank===3&&(l=!0,a=Z(i,[1,i.shape[0],i.shape[1],i.shape[2]])),F(a.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${a.rank}.`),Lt("avgPool",o,n);let u={x:a},c={filterSize:t,strides:e,pad:o,dimRoundingMode:n},p=A.runKernel(ll,u,c);return p=ze(p,i.dtype),l?Z(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var Qm=R({avgPool_:ZU});function JU(r,t,e,o,n,i="NDHWC"){let s=_(r,"x","avgPool3d","float32"),a=s,l=!1;s.rank===4&&(l=!0,a=Z(s,[1,s.shape[0],s.shape[1],s.shape[2],s.shape[3]])),F(a.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${a.rank}.`),F(i==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${i}`),F(typeof e=="number"&&e>0||Array.isArray(e)&&e[0]>0&&e[1]>0&&e[2]>0,()=>`Error in avgPool3d: Stride must be > 0, but got '${e}'`),Lt("avgPool3d",o,n);let u={x:a},c={filterSize:t,strides:e,pad:o,dimRoundingMode:n,dataFormat:i},p=A.runKernel(ul,u,c);return p=ze(p,a.dtype),l?Z(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}var R_=R({avgPool3d_:JU});function ez(r,t=0){F(r.length>=1,()=>"Pass at least one tensor to concat");let e=Ms(r,"tensors","concat","string_or_numeric");if(e[0].dtype==="complex64"&&e.forEach(i=>{if(i.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${i.dtype}. `)}),e.length===1)return ro(e[0]);let o=e,n={axis:t};return A.runKernel(xl,o,n)}var dt=R({concat_:ez});function tz(r,t,e=!1,o=!1){let n=_(r,"a","matMul"),i=_(t,"b","matMul");[n,i]=Ge(n,i);let s={a:n,b:i},a={transposeA:e,transposeB:o};return A.runKernel(cl,s,a)}var et=R({matMul_:tz});function rz(r){let e={x:_(r,"x","sigmoid","float32")};return A.runKernel(Ai,e)}var oo=R({sigmoid_:rz});function oz(r,t,e){let o=_(r,"x","slice","string_or_numeric");if(o.rank===0)throw new Error("Slicing scalar is not possible");let n={x:o},i={begin:t,size:e};return A.runKernel(Es,n,i)}var Fe=R({slice_:oz});function nz(r){let e={x:_(r,"x","tanh","float32")};return A.runKernel(Yu,e)}var Np=R({tanh_:nz});function iz(r,t,e,o,n,i){let s=_(r,"forgetBias","basicLSTMCell"),a=_(t,"lstmKernel","basicLSTMCell"),l=_(e,"lstmBias","basicLSTMCell"),u=_(o,"data","basicLSTMCell"),c=_(n,"c","basicLSTMCell"),p=_(i,"h","basicLSTMCell"),d=dt([u,p],1),m=et(d,a),f=xe(m,l),g=f.shape[0],x=f.shape[1]/4,y=[g,x],b=Fe(f,[0,0],y),I=Fe(f,[0,x],y),N=Fe(f,[0,x*2],y),M=Fe(f,[0,x*3],y),B=xe(le(oo(b),Np(I)),le(c,oo(xe(s,N)))),W=le(Np(B),oo(M));return[B,W]}var P_=R({basicLSTMCell_:iz});function sz(r,t,e){let o=_(r,"x","batchToSpaceND"),n=t.reduce((a,l)=>a*l);F(o.rank>=1+t.length,()=>`input rank is ${o.rank} but should be > than blockShape.length ${t.length}`),F(e.length===t.length,()=>`crops.length is ${e.length} but should be equal to blockShape.length  ${t.length}`),F(o.shape[0]%n===0,()=>`input tensor batch is ${o.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${n}`);let i={x:o},s={blockShape:t,crops:e};return A.runKernel(pl,i,s)}var Zm=R({batchToSpaceND_:sz});function $_(r){let t;return r.rank===0||r.rank===1?t=Z(r,[1,1,1,r.size]):r.rank===2?t=Z(r,[1,1,r.shape[0],r.shape[1]]):r.rank===3?t=Z(r,[1,r.shape[0],r.shape[1],r.shape[2]]):t=r,t}function az(r,t,e,o,n,i){i==null&&(i=.001);let s=_(r,"x","batchNorm"),a=_(t,"mean","batchNorm"),l=_(e,"variance","batchNorm"),u;n!=null&&(u=_(n,"scale","batchNorm"));let c;o!=null&&(c=_(o,"offset","batchNorm")),F(a.rank===l.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),F(c==null||a.rank===c.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),F(u==null||a.rank===u.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let d={x:$_(s),scale:u,offset:c,mean:a,variance:l},m={varianceEpsilon:i},f=A.runKernel(zl,d,m);return Z(f,s.shape)}var Hi=R({batchNorm_:az});function lz(r,t,e,o,n,i){let s=_(r,"x","batchNorm"),a=_(t,"mean","batchNorm"),l=_(e,"variance","batchNorm"),u;n!=null&&(u=_(n,"scale","batchNorm"));let c;return o!=null&&(c=_(o,"offset","batchNorm")),F(s.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${s.rank}.`),F(a.rank===2||a.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${a.rank}.`),F(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`),u!=null&&F(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`),c!=null&&F(c.rank===2||c.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`),Hi(s,a,l,c,u,i)}var A_=R({batchNorm2d_:lz});function uz(r,t,e,o,n,i){let s=_(r,"x","batchNorm"),a=_(t,"mean","batchNorm"),l=_(e,"variance","batchNorm"),u;n!=null&&(u=_(n,"scale","batchNorm"));let c;return o!=null&&(c=_(o,"offset","batchNorm")),F(s.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${s.rank}.`),F(a.rank===3||a.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${a.rank}.`),F(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`),u!=null&&F(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`),c!=null&&F(c.rank===3||c.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`),Hi(s,a,l,c,u,i)}var D_=R({batchNorm3d_:uz});function cz(r,t,e,o,n,i){let s=_(r,"x","batchNorm"),a=_(t,"mean","batchNorm"),l=_(e,"variance","batchNorm"),u;n!=null&&(u=_(n,"scale","batchNorm"));let c;return o!=null&&(c=_(o,"offset","batchNorm")),F(s.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${s.rank}.`),F(a.rank===4||a.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${a.rank}.`),F(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`),u!=null&&F(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`),c!=null&&F(c.rank===4||c.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`),Hi(s,a,l,c,u,i)}var F_=R({batchNorm4d_:cz});function pz(r,t,e){let o=_(r,"x","bincount"),n=_(t,"weights","bincount");F(o.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${o.dtype}`),F(e>=0,()=>`size must be non-negative, but got ${e}.`),F(n.size===o.size||n.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${o.shape}, weights shape: ${n.shape}.`);let i={x:o,weights:n},s={size:e};return A.runKernel(dl,i,s)}var Jm=R({bincount_:pz});function dz(r,t){let e=_(r,"x","bitwiseAnd"),o=_(t,"y","bitwiseAnd");if(!Jr(e.shape,o.shape))throw new Error(`BitwiseAnd: Tensors must have the same shape. x: ${e.shape}, y: ${o.shape}`);if(e.dtype!=="int32"||o.dtype!=="int32")throw new Error(`BitwiseAnd: Only supports 'int32' values in tensor, found type of x: ${e.dtype} and type of y: ${o.dtype}`);let n={a:e,b:o};return A.runKernel(ml,n)}var O_=R({bitwiseAnd_:dz});function mz(r,t){let e=_(r,"s0","broadcastArgs","int32"),o=_(t,"s1","broadcastArgs","int32");if(e.rank!==1)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${e.rank}`);if(o.rank!==1)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${o.rank}`);let n={s0:e,s1:o};return A.runKernel(fl,n)}var L_=R({broadcastArgs_:mz});function fz(r,t){let e=_(r,"broadcastTo","x"),o=e.shape;if(St(t),t.length<e.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${e.rank}.`);if(t.length>e.rank){let u=e.shape.slice();for(;u.length<t.length;)u.unshift(1);e=Z(e,u)}let n=e.shape,i=Array.from(t);for(let u=t.length-1;u>=0;u--)if(n[u]===t[u])i[u]=1;else if(e.shape[u]!==1)throw new Error(`broadcastTo(): [${o}] cannot be broadcast to [${t}].`);if(i.map((u,c)=>u>1?c:-1).filter(u=>u>=0).length===0)return ro(e);let a={x:e},l={reps:i};return A.runKernel(Li,a,l)}var Ki=R({broadcastTo_:fz});function hz(r){let e={x:_(r,"x","ceil","float32")};return A.runKernel(xi,e)}var M_=R({ceil_:hz});function wn(r,t,e){St(r),e=e||gi(t);let o={shape:r,value:t,dtype:e};return A.runKernel(Wl,{},o)}function gz(r,t,e){let o=_(r,"x","clipByValue");if(F(t<=e,()=>`Error in clip: min (${t}) must be less than or equal to max (${e}).`),t===e)return wn(o.shape,t,o.dtype);let n={x:o},i={clipValueMin:t,clipValueMax:e};return A.runKernel(hl,n,i)}var ef=R({clipByValue_:gz});function xz(r){return dt(r,0)}var B_=R({concat1d_:xz});function yz(r,t){return dt(r,t)}var V_=R({concat2d_:yz});function vz(r,t){return dt(r,t)}var W_=R({concat3d_:vz});function bz(r,t){return dt(r,t)}var U_=R({concat4d_:bz});function Sz(r,t,e,o,n="NHWC",i=[1,1],s){let a=_(r,"x","conv2d","float32"),l=_(t,"filter","conv2d","float32"),u=a,c=!1;a.rank===3&&(c=!0,u=Z(a,[1,a.shape[0],a.shape[1],a.shape[2]])),F(u.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`),F(l.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`),Lt("conv2d",o,s);let p=n==="NHWC"?u.shape[3]:u.shape[1];F(p===l.shape[2],()=>`Error in conv2d: depth of input (${p}) must match input depth for filter ${l.shape[2]}.`),F(hr(e,i),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${e} and dilations '${i}'`),F(bn(i),()=>"Error in conv2D: Dilated rates should be larger than 0."),F(bn(e),()=>"Error in conv2D: Strides should be larger than 0.");let d={x:u,filter:l},m={strides:e,pad:o,dataFormat:n,dilations:i,dimRoundingMode:s},f=A.runKernel(yl,d,m);return c?Z(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var qi=R({conv2d_:Sz});function wz(r,t,e,o,n="NWC",i=1,s){let a=_(r,"x","conv1d"),l=_(t,"filter","conv1d"),u=a,c=!1;a.rank===2&&(c=!0,u=Z(a,[1,a.shape[0],a.shape[1]])),F(u.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`),F(l.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`),Lt("conv1d",o,s),F(u.shape[2]===l.shape[1],()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`),F(hr(e,i),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${e} and dilation '${i}'`),F(bn(i),()=>"Error in conv1D: Dilated rates should be larger than 0."),F(bn(e),()=>"Error in conv1D: Stride should be larger than 0."),F(n==="NWC",()=>`Error in conv1d: got dataFormat of ${n} but only NWC is currently supported.`);let p=Z(l,[1,l.shape[0],l.shape[1],l.shape[2]]),d=Z(u,[u.shape[0],1,u.shape[1],u.shape[2]]),x=qi(d,p,[1,e],o,"NHWC",[1,i],s);return c?Z(x,[x.shape[2],x.shape[3]]):Z(x,[x.shape[0],x.shape[2],x.shape[3]])}var z_=R({conv1d_:wz});function _z(r,t,e,o,n,i="NHWC",s){F(r.length===t.rank,()=>`Length of inShape (${r.length}) and rank of dy (${t.rank}) must match`);let a=r,l=t,u=!1;t.rank===3&&(u=!0,l=Z(t,[1,t.shape[0],t.shape[1],t.shape[2]]),a=[1,r[0],r[1],r[2]]),F(a.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${a.length}.`),F(l.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`),F(e.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${e.rank}`);let c=i==="NHWC"?a[3]:a[1],p=i==="NHWC"?l.shape[3]:l.shape[1];F(c===e.shape[2],()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${e.shape[2]}.`),F(p===e.shape[3],()=>`Error in conv2dDerInput: depth of output (${p}) must match output depth for filter ${e.shape[3]}.`),Lt("conv2dDerInput",n,s);let d={dy:l,filter:e},m={strides:o,pad:n,dataFormat:i,dimRoundingMode:s,inputShape:a},f=A.runKernel(bl,d,m);return u?Z(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var tf=R({conv2DBackpropInput_:_z});function Cz(r,t,e,o,n,i){let s=_(r,"x","conv2dTranspose"),a=_(t,"filter","conv2dTranspose");return tf(e,s,a,o,n,"NHWC",i)}var G_=R({conv2dTranspose_:Cz});function kz(r,t,e,o,n="NDHWC",i=[1,1,1]){let s=_(r,"x","conv3d"),a=_(t,"filter","conv3d"),l=s,u=!1;s.rank===4&&(u=!0,l=Z(s,[1,s.shape[0],s.shape[1],s.shape[2],s.shape[3]])),F(l.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`),F(a.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${a.rank}.`),F(l.shape[4]===a.shape[3],()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${a.shape[3]}.`),F(hr(e,i),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${e} and dilations '${i}'`),F(n==="NDHWC",()=>`Error in conv3d: got dataFormat of ${n} but only NDHWC is currently supported.`),F(bn(i),()=>"Error in conv3D: Dilated rates should be larger than 0."),F(bn(e),()=>"Error in conv3D: Strides should be larger than 0.");let c={x:l,filter:a},p={strides:e,pad:o,dataFormat:n,dilations:i},d=A.runKernel(Sl,c,p);return u?Z(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}var H_=R({conv3d_:kz});function Iz(r,t,e,o,n){F(r.length===t.rank,()=>`Length of inShape (${r.length}) and rank of dy (${t.rank}) must match`);let i=r,s=t,a=!1;t.rank===4&&(a=!0,s=Z(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),i=[1,r[0],r[1],r[2],r[3]]);let l=i[4],u=s.shape[4];F(i.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${i.length}.`),F(s.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${s.rank}`),F(e.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${e.rank}`),F(l===e.shape[3],()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${e.shape[3]}.`),F(u===e.shape[4],()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${e.shape[4]}.`);let c={dy:s,filter:e},p={pad:n,strides:o,inputShape:i},d=A.runKernel(wl,c,p);return a?Z(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}var K_=R({conv3DBackpropInput_:Iz});function Tz(r,t,e,o,n){let i=_(r,"x","conv3dTranspose"),s=_(t,"filter","conv3dTranspose");return K_(e,i,s,o,n)}var q_=R({conv3dTranspose_:Tz});function Ez(r){let e={x:_(r,"x","cos","float32")};return A.runKernel(_l,e)}var j_=R({cos_:Ez});function Nz(r){let e={x:_(r,"x","cosh","float32")};return A.runKernel(Cl,e)}var X_=R({cosh_:Nz});function Rz(r,t=0,e=!1,o=!1){let i={x:_(r,"x","cumprod")},s={axis:t,exclusive:e,reverse:o};return A.runKernel(kl,i,s)}var Y_=R({cumprod_:Rz});function Pz(r,t=0,e=!1,o=!1){let i={x:_(r,"x","cumsum")},s={axis:t,exclusive:e,reverse:o};return A.runKernel(Il,i,s)}var Q_=R({cumsum_:Pz});function $z(r,t,e,o=!1){let n=_(r,"x","denseBincount"),i=_(t,"weights","denseBincount");F(n.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${n.dtype}`),F(n.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${n.rank}.`),F(e>=0,()=>`size must be non-negative, but got ${e}.`),F(i.size===n.size||i.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${n.shape}, weights shape: ${i.shape}.`);let s={x:n,weights:i},a={size:e,binaryOutput:o};return A.runKernel(El,s,a)}var Z_=R({denseBincount_:$z});function Az(r,t,e="NHWC"){let o=_(r,"x","depthToSpace","float32"),n=e==="NHWC"?o.shape[1]:o.shape[2],i=e==="NHWC"?o.shape[2]:o.shape[3],s=e==="NHWC"?o.shape[3]:o.shape[1];F(t>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`),F(n*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${n} and ${t}  for depthToSpace with input shape
    ${o.shape}`),F(i*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${i} and ${t} for depthToSpace with input shape
        ${o.shape}`),F(s%(t*t)===0,()=>`Dimension size must be evenly divisible by ${t*t} but is ${s} for depthToSpace with input shape ${o.shape}`);let a={x:o},l={blockSize:t,dataFormat:e};return A.runKernel(Nl,a,l)}var J_=R({depthToSpace_:Az});function Dz(r,t,e,o,n="NHWC",i=[1,1],s){let a=_(r,"x","depthwiseConv2d","float32"),l=_(t,"filter","depthwiseConv2d","float32"),u=a,c=!1;a.rank===3&&(c=!0,u=Z(a,[1,a.shape[0],a.shape[1],a.shape[2]])),F(u.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`),F(l.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`);let p=n==="NHWC"?u.shape[3]:u.shape[1];F(p===l.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${p}) must match the inChannels dimension in filter ${l.shape[2]}.`),Lt("depthwiseConv2d",o,s);let d={x:u,filter:l},m={strides:e,pad:o,dataFormat:n,dilations:i,dimRoundingMode:s},f=A.runKernel(Rl,d,m);return c?Z(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var gc=R({depthwiseConv2d_:Dz});function Fz(r){let e={x:_(r,"x","diag")};return A.runKernel(Al,e)}var e2=R({diag_:Fz});function Oz(r,t,e,o,n=[1,1],i="NHWC"){let s=_(r,"x","dilation2d"),a=_(t,"filter","dilation2d");F(s.rank===3||s.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${s.rank}.`),F(a.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${a.rank}.`),F(i==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${i}`);let l=s,u=!1;s.rank===3&&(l=Z(s,[1,s.shape[0],s.shape[1],s.shape[2]]),u=!0),F(l.shape[3]===a.shape[2],()=>`Error in dilation2d:  input and filter must have the same depth: ${l.shape[3]} vs ${a.shape[2]}`);let c={x:l,filter:a},p={strides:e,pad:o,dilations:n},d=A.runKernel(Dl,c,p);return u?Z(d,[d.shape[1],d.shape[2],d.shape[3]]):d}var t2=R({dilation2d_:Oz});var _n={};pt(_n,{assertAndGetBroadcastShape:()=>Je,getBroadcastDims:()=>r2,getReductionAxes:()=>rf});function r2(r,t){let e=r.length,o=[];for(let n=0;n<e;n++){let i=e-1-n,s=r[i]||1;(t[t.length-1-n]||1)>1&&s===1&&o.unshift(i)}return o}function rf(r,t){let e=[];for(let o=0;o<t.length;o++){let n=r[r.length-o-1],i=t.length-o-1,s=t[i];(n==null||n===1&&s>1)&&e.unshift(i)}return e}function Je(r,t){let e=Math.max(r.length,t.length),o=new Array(e);for(let n=0;n<e;n++){let i=r[r.length-n-1];i==null&&(i=1);let s=t[t.length-n-1];if(s==null&&(s=1),i===1)o[e-n-1]=s;else if(s===1)o[e-n-1]=i;else if(i!==s){let a=`Operands could not be broadcast together with shapes ${r} and ${t}.`;throw Error(a)}else o[e-n-1]=i}return o}function Lz(r,t){let e=_(r,"a","equal","string_or_numeric"),o=_(t,"b","equal","string_or_numeric");[e,o]=Ge(e,o),Je(e.shape,o.shape);let n={a:e,b:o};return A.runKernel(yi,n)}var of=R({equal_:Lz});function Mz(r,t,e){let o=_(t,"a","where"),n=_(e,"b","where"),i=_(r,"condition","where","bool"),s=Je(Je(i.shape,o.shape),n.shape),a=Ki(i,s),l=Ki(o,s),u=Ki(n,s),c={condition:a,t:l,e:u};return A.runKernel(Au,c)}var So=R({where_:Mz});function Bz(r){let e={x:_(r,"x","zerosLike")};return A.runKernel(tc,e)}var Gt=R({zerosLike_:Bz});function Vz(r,t){let e=_(r,"a","div"),o=_(t,"b","div");[e,o]=Ge(e,o);let n=De(e,o),i=Gt(n),s=of(o,i);return So(s,i,n)}var o2=R({divNoNan_:Vz});function Wz(r,t){let e=_(r,"t1","dot"),o=_(t,"t2","dot");F((e.rank===1||e.rank===2)&&(o.rank===1||o.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${e.rank} and ${o.rank}.`);let n=e.rank===1?e.size:e.shape[1],i=o.rank===1?o.size:o.shape[0];if(F(n===i,()=>`Error in dot: inner dimensions of inputs must match, but got ${n} and ${i}.`),e.rank===1&&o.rank===1){let s=Z(e,[1,-1]),a=Z(o,[-1,1]),l=et(s,a);return Z(l,[])}else if(e.rank===1&&o.rank===2){let s=Z(e,[1,-1]),a=Z(o,[o.shape[0],o.shape[1]]),l=et(s,a);return Z(l,[l.size])}else if(e.rank===2&&o.rank===1){let s=Z(o,[-1,1]),a=et(e,s);return Z(a,[a.size])}else{let s=Z(o,[o.shape[0],o.shape[1]]);return et(e,s)}}var n2=R({dot_:Wz});function Uz(r,...t){let e=t.map((n,i)=>_(n,`tensors${i}`,"einsum")),o={equation:r};return A.runKernel(Ol,e,o)}var ji=R({einsum_:Uz});function zz(r){let e={x:_(r,"x","elu","float32")};return A.runKernel(Ll,e)}var nf=R({elu_:zz});function Gz(r,t){let e=_(r,"x","ensureShape","string_or_numeric");if(!my(e.shape,t))throw new Error(`EnsureShape: Shape of tensor ${e.shape} is not compatible with expected shape ${t}`);return r}var i2=R({ensureShape_:Gz});function Hz(r){let t=_(r,"x","erf");F(t.dtype==="int32"||t.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),t.dtype==="int32"&&(t=ze(t,"float32"));let e={x:t};return A.runKernel(Ml,e)}var s2=R({erf_:Hz});function Yy(r,t){for(let e=0;e<r.length;++e)if(r[r.length-e-1]!==t-1-e)return!1;return!0}function a2(r,t,e){let o=r.length+t.length,n=[],i=0,s=0;for(let a=0;a<o;a++)e.indexOf(a)===-1?n.push(r[i++]):n.push(t[s++]);return n}function Kz(r,t){let e=[],o=r.length;for(let i=0;i<o;i++)t.indexOf(i)===-1&&e.push(r[i]);let n=t.map(i=>r[i]);return[e,n]}function Gn(r,t){let e=t.map(o=>1);return a2(r,e,t)}function qz(r,t,e){F(Yy(t,e),()=>`${r} supports only inner-most axes for now. Got axes ${t} and rank-${e} input.`)}function jz(r,t){if(Yy(r,t))return null;let e=[];for(let o=0;o<t;++o)r.indexOf(o)===-1&&e.push(o);return r.forEach(o=>e.push(o)),e}function Xz(r){return r.map((t,e)=>[e,t]).sort((t,e)=>t[1]-e[1]).map(t=>t[0])}function Yz(r,t){let e=[];for(let o=t-r;o<t;++o)e.push(o);return e}function Zz(r,t=null,e=!1){let n={x:_(r,"x","max")},i={reductionIndices:t,keepDims:e};return A.runKernel(nu,n,i)}var Cn=R({max_:Zz});function Jz(r,t=null,e=!1){let n={x:_(r,"x","min")},i={axis:t,keepDims:e};return A.runKernel(uu,n,i)}var Rp=R({min_:Jz});function e5(r,t){let e=_(r,"base","pow"),o=_(t,"exp","pow");[e,o]=Ge(e,o);let n={a:e,b:o};return A.runKernel(vu,n)}var Hn=R({pow_:e5});function Ne(r,t){if((mr(r)&&t!=="string"||Array.isArray(r))&&t!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(t==="string"&&mr(r)&&!(r instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Sr(r,[],[],t)}function t5(r){let e={x:_(r,"x","sqrt","float32")};return A.runKernel(Di,e)}var Ar=R({sqrt_:t5});function r5(r){let t=_(r,"x","square"),e={};return A.runKernel("Square",{x:t},e)}var Ht=R({square_:r5});function o5(r,t=null,e=!1){let o=_(r,"x","sum");o.dtype==="bool"&&(o=ze(o,"int32"));let n={x:o},i={axis:t,keepDims:e};return A.runKernel(Bu,n,i)}var tt=R({sum_:o5});function n5(r,t="euclidean",e=null,o=!1){r=_(r,"x","norm");let n=l2(r,t,e),i=n.shape;if(o){let s=hi(e,r.shape);i=Gn(n.shape,s)}return Z(n,i)}function l2(r,t,e=null){if(r.rank===0)return er(r);if(r.rank!==1&&e===null)return l2(Z(r,[-1]),t,e);if(r.rank===1||typeof e=="number"||Array.isArray(e)&&e.length===1){if(t===1)return tt(er(r),e);if(t===1/0)return Cn(er(r),e);if(t===-1/0)return Rp(er(r),e);if(t==="euclidean"||t===2)return Ar(tt(Hn(er(r),Ne(2,"int32")),e));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(e)&&e.length===2){if(t===1)return Cn(tt(er(r),e[0]),e[1]-1);if(t===1/0)return Cn(tt(er(r),e[1]),e[0]);if(t===-1/0)return Rp(tt(er(r),e[1]),e[0]);if(t==="fro"||t==="euclidean")return Ar(tt(Ht(r),e));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${e}`)}var Hs=R({norm_:n5});function i5(r,t=null,e=!1){return Hs(r,"euclidean",t,e)}var u2=R({euclideanNorm_:i5});function s5(r){let e={x:_(r,"x","exp")};return A.runKernel(vi,e)}var Dr=R({exp_:s5});function a5(r,t=0){let e=_(r,"x","expandDims","string_or_numeric");F(t<=e.rank,()=>"Axis must be <= rank of the tensor");let o={input:e},n={dim:t};return A.runKernel(Bl,o,n)}var gr=R({expandDims_:a5});function l5(r){let e={x:_(r,"x","expm1")};return A.runKernel(bi,e)}var c2=R({expm1_:l5});function u5(r,t){let e=_(r,"x","tile","string_or_numeric");F(e.rank===t.length,()=>`Error in transpose: rank of input ${e.rank} must match length of reps ${t}.`);let o={x:e},n={reps:t};return A.runKernel(Li,o,n)}var Xi=R({tile_:u5});function c5(r,t,e,o="float32"){t==null&&(t=r);let n=Le([r,t],o),i=r<=t?r:t;for(let a=0;a<i;++a)n.set(1,a,a);let s=Z(n.toTensor(),[r,t]);if(e==null)return s;if(e.length===1)return Xi(gr(s,0),[e[0],1,1]);if(e.length===2)return Xi(gr(gr(s,0),0),[e[0],e[1],1,1]);if(e.length===3)return Xi(gr(gr(gr(s,0),0),0),[e[0],e[1],e[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${e.length}D.`)}var sf=R({eye_:c5});function p5(r){let e={x:_(r,"x","floor","float32")};return A.runKernel(Si,e)}var af=R({floor_:p5});function d5(r,t,e=0,o=0){let n=_(r,"x","gather"),i=_(t,"indices","gather","int32"),s={x:n,indices:i},a={axis:e,batchDims:o};return A.runKernel(Gl,s,a)}var lf=R({gather_:d5});function m5(r,t){let e=_(r,"a","greater","string_or_numeric"),o=_(t,"b","greater","string_or_numeric");[e,o]=Ge(e,o),Je(e.shape,o.shape);let n={a:e,b:o};return A.runKernel(_i,n)}var Ks=R({greater_:m5});function f5(r,t){let e=_(r,"a","greaterEqual","string_or_numeric"),o=_(t,"b","greaterEqual","string_or_numeric");[e,o]=Ge(e,o),Je(e.shape,o.shape);let n={a:e,b:o};return A.runKernel(Ci,n)}var uf=R({greaterEqual_:f5});function h5(r){let e={input:_(r,"input","imag")};return A.runKernel(ql,e)}var Yi=R({imag_:h5});function g5(r){let e={x:_(r,"x","isFinite")};return A.runKernel(jl,e)}var p2=R({isFinite_:g5});function x5(r){let e={x:_(r,"x","isInf")};return A.runKernel(Xl,e)}var d2=R({isInf_:x5});function y5(r){let e={x:_(r,"x","isNaN")};return A.runKernel(Yl,e)}var m2=R({isNaN_:y5});function v5(r,t=.2){let o={x:_(r,"x","leakyRelu")},n={alpha:t};return A.runKernel(Ql,o,n)}var cf=R({leakyRelu_:v5});function b5(r,t){let e=_(r,"a","less","string_or_numeric"),o=_(t,"b","less","string_or_numeric");[e,o]=Ge(e,o),Je(e.shape,o.shape);let n={a:e,b:o};return A.runKernel(ki,n)}var Pp=R({less_:b5});function S5(r,t){let e=_(r,"a","lessEqual","string_or_numeric"),o=_(t,"b","lessEqual","string_or_numeric");[e,o]=Ge(e,o),Je(e.shape,o.shape);let n={a:e,b:o};return A.runKernel(Ii,n)}var xc=R({lessEqual_:S5});function f2(r,t,e){if(e<=0)throw new Error("The number of values should be positive.");let o={start:r,stop:t,num:e};return A.runKernel(Zl,{},o)}function w5(r,t=5,e=1,o=1,n=.5){let i=_(r,"x","localResponseNormalization");F(i.rank===4||i.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${i.rank}.`),F(On(t),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`);let s=i,a=!1;i.rank===3&&(a=!0,s=Z(i,[1,i.shape[0],i.shape[1],i.shape[2]]));let l={x:s},u={depthRadius:t,bias:e,alpha:o,beta:n},c=A.runKernel(ou,l,u);return a?Z(c,[c.shape[1],c.shape[2],c.shape[3]]):c}var h2=R({localResponseNormalization_:w5});function _5(r){let e={x:_(r,"x","log","float32")};return A.runKernel(Ti,e)}var Kn=R({log_:_5});function C5(r){let e={x:_(r,"x","log1p")};return A.runKernel(Jl,e)}var pf=R({log1p_:C5});function g2(r,t){F(qa(r),()=>"The f passed in variableGrads(f) must be a function"),F(t==null||Array.isArray(t)&&t.every(u=>u instanceof Vn),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");let e=t!=null;if(!e){t=[];for(let u in A.registeredVariables)t.push(A.registeredVariables[u])}let o=e?t.filter(u=>!u.trainable):null,n=t.length;t=t.filter(u=>u.trainable),F(t.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${n} variables is trainable.`);let i=!0,{value:s,grads:a}=A.gradients(r,t,null,i);F(a.some(u=>u!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),F(s.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${s.rank} tensor`);let l={};return t.forEach((u,c)=>{a[c]!=null&&(l[u.name]=a[c])}),o?.forEach(u=>l[u.name]=null),{value:s,grads:l}}function Fr(r){return A.customGrad(r)}function k5(r){let e={x:_(r,"x","neg")};return A.runKernel(ks,e)}var nr=R({neg_:k5});function I5(r){let e={x:_(r,"x","softplus")};return A.runKernel(Mu,e)}var df=R({softplus_:I5});function T5(r){let t=_(r,"x","logSigmoid");return Fr(o=>({value:nr(df(nr(o))),gradFunc:s=>le(s,oo(nr(o)))}))(t)}var x2=R({logSigmoid_:T5});function E5(r,t){let e=_(r,"a","sub"),o=_(t,"b","sub");[e,o]=Ge(e,o);let n={a:e,b:o};return A.runKernel(Oi,n)}var Re=R({sub_:E5});function N5(r,t=-1){let e=_(r,"logits","logSoftmax");if(t===-1&&(t=e.rank-1),t!==e.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${e.rank} and axis was ${t}`);return Fr((n,i)=>{let a=Cn(n,t,!0),l=Re(n,a),u=Re(ze(l,"float32"),Kn(tt(Dr(l),t,!0)));return i([u]),{value:u,gradFunc:(p,d)=>{let[m]=d,f=!0,g=Dr(m);return Re(p,le(tt(p,t,f),g))}}})(e)}var y2=R({logSoftmax_:N5});function R5(r,t=null,e=!1){let o=_(r,"x","logSumExp"),n=hi(t,o.shape),i=Cn(o,n,!0),s=Re(o,i),a=Dr(s),l=tt(a,n),u=Kn(l),c=xe(Z(i,u.shape),u);if(e){let p=Gn(c.shape,n);return Z(c,p)}return c}var mf=R({logSumExp_:R5});function P5(r,t){let e=_(r,"a","logicalAnd","bool"),o=_(t,"b","logicalAnd","bool");Je(e.shape,o.shape);let n={a:e,b:o};return A.runKernel(eu,n)}var qs=R({logicalAnd_:P5});function $5(r){let e={x:_(r,"x","logicalNot","bool")};return A.runKernel(tu,e)}var ff=R({logicalNot_:$5});function A5(r,t){let e=_(r,"a","logicalOr","bool"),o=_(t,"b","logicalOr","bool");Je(e.shape,o.shape);let n={a:e,b:o};return A.runKernel(ru,n)}var hf=R({logicalOr_:A5});function D5(r,t){let e=_(r,"a","logicalXor","bool"),o=_(t,"b","logicalXor","bool");return Je(e.shape,o.shape),qs(hf(r,t),ff(qs(r,t)))}var v2=R({logicalXor_:D5});var gf=2147483648;function F5(r,t,e="left"){let o=_(r,"sortedSequence","searchSorted"),n=_(t,"values","searchSorted"),i=o.shape[o.shape.length-1],s=n.shape[n.shape.length-1],a=Z(o,[-1,i]),l=Z(n,[-1,s]);if(a.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(a.shape[0]!==l.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(He(l.shape)>=gf)throw new Error(`values tensor size must less than ${gf}`);if(a.shape[1]>=gf)throw new Error(`trailing dim_size must less than ${gf} for int32 output type, was ${a.shape[1]}`);let u={sortedSequence:a,values:l},c={side:e};return A.runKernel($u,u,c)}var $p=R({searchSorted_:F5});function b2(r,t){return $p(r,t,"left")}function O5(r,t,e,o,n){let i=_(r,"x","maxPool"),s=1,a=i,l=!1;i.rank===3&&(l=!0,a=Z(i,[1,i.shape[0],i.shape[1],i.shape[2]])),F(a.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${a.rank}.`),F(hr(e,s),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${e} and dilations '${s}'`),Lt("maxPool",o,n);let u={x:a},c={filterSize:t,strides:e,pad:o,dimRoundingMode:n},p=A.runKernel(iu,u,c);return l?Z(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var xf=R({maxPool_:O5});function L5(r,t=[1,1,1],e,o,n,i="NDHWC"){let s=_(r,"x","maxPool3d"),a=s,l=!1;s.rank===4&&(l=!0,a=Z(s,[1,s.shape[0],s.shape[1],s.shape[2],s.shape[3]])),F(a.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${a.rank}.`),F(i==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${i}`),Lt("maxPool3d",o,n);let u={x:a},c={filterSize:t,strides:e,pad:o,dimRoundingMode:n,dataFormat:i},p=A.runKernel(su,u,c);return l?Z(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}var S2=R({maxPool3d_:L5});function M5(r,t,e,o,n=!1){let s={x:_(r,"x","maxPoolWithArgmax")},a={filterSize:t,strides:e,pad:o,includeBatchInIndex:n},l=A.runKernel(au,s,a);return{result:l[0],indexes:l[1]}}var w2=R({maxPoolWithArgmax_:M5});function B5(r,t){let e=_(r,"a","maximum"),o=_(t,"b","maximum");[e,o]=Ge(e,o),e.dtype==="bool"&&(e=ze(e,"int32"),o=ze(o,"int32")),Je(e.shape,o.shape);let n={a:e,b:o};return A.runKernel(Ei,n)}var yf=R({maximum_:B5});function V5(r,t=null,e=!1){let n={x:_(r,"x","mean")},i={axis:t,keepDims:e};return A.runKernel(lu,n,i)}var js=R({mean_:V5});function _r(r,t="float32"){if(St(r),t==="complex64"){let o=_r(r,"float32"),n=_r(r,"float32");return Pr(o,n)}let e=Xa(He(r),t);return A.makeTensor(e,r,t)}function kn(r,t="float32"){if(St(r),t==="complex64"){let o=kn(r,"float32"),n=_r(r,"float32");return Pr(o,n)}let e=yp(He(r),t);return A.makeTensor(e,r,t)}function _2(r,t,{indexing:e="xy"}={}){if(e!=="xy"&&e!=="ij")throw new TypeError(`${e} is not a valid third argument to meshgrid`);if(r===void 0)return[];let o=_(r,"x","meshgrid",r instanceof st?r.dtype:"float32");if(t===void 0)return[o];let n=_(t,"y","meshgrid",t instanceof st?t.dtype:"float32"),i=He(o.shape),s=He(n.shape);return e==="xy"?(o=Z(o,[1,-1]),n=Z(n,[-1,1]),[et(kn([s,1],o.dtype),o),et(n,kn([1,i],n.dtype))]):(o=Z(o,[-1,1]),n=Z(n,[1,-1]),[et(o,kn([1,s],o.dtype)),et(kn([i,1],n.dtype),n)])}function W5(r,t){let e=_(r,"a","minimum"),o=_(t,"b","minimum");[e,o]=Ge(e,o),e.dtype==="bool"&&(e=ze(e,"int32"),o=ze(o,"int32")),Je(e.shape,o.shape);let n={a:e,b:o};return A.runKernel(Ni,n)}var qn=R({minimum_:W5});function U5(r,t,e){F(e==="reflect"||e==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${e}.`);let o=_(r,"x","mirrorPad");if(o.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");F(t.length===o.rank,()=>`Padding doesn't match input. Must be ${o.rank}. Got ${t.length}.`);let n=e==="reflect"?1:0;for(let a=0;a<o.rank;a++)F(t[a].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),F(t[a][0]>=0&&t[a][0]<=o.shape[a]-n&&t[a][1]>=0&&t[a][1]<=o.shape[a]-n,()=>`Padding in dimension ${a} cannot be greater than or equal to ${o.shape[a]-n} or less than 0 for input of shape ${o.shape}`);let i={paddings:t,mode:e},s={x:o};return A.runKernel(cu,s,i)}var vf=R({mirrorPad_:U5});function z5(r,t){let e=_(r,"a","mod"),o=_(t,"b","mod");[e,o]=Ge(e,o);let n={a:e,b:o};return A.runKernel(pu,n)}var C2=R({mod_:z5});function G5(r,t=null,e=!1){r=_(r,"x","moments");let o=hi(t,r.shape),n=js(r,o,e),i=n.shape;e||(i=Gn(n.shape,o));let s=Ht(Re(ze(r,"float32"),Z(n,i))),a=js(s,o,e);return{mean:n,variance:a}}var k2=R({moments_:G5});function H5(r,t,e,o){let n=_(t,"data","multiRNNCell"),i=Ms(e,"c","multiRNNCell"),s=Ms(o,"h","multiRNNCell"),a=n,l=[];for(let p=0;p<r.length;p++){let d=r[p](a,i[p],s[p]);l.push(d[0]),l.push(d[1]),a=d[1]}let u=[],c=[];for(let p=0;p<l.length;p+=2)u.push(l[p]),c.push(l[p+1]);return[u,c]}var I2=R({multiRNNCell_:H5});function K5(r,t,e,o=!1){let n=_(r,"logits","multinomial"),i=n.size,s=n.rank;if(i<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${i}.`);if(s>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${s}`);e=e||Math.random();let l={logits:s===1?Z(n,[1,-1]):n},u={numSamples:t,seed:e,normalized:o},c=A.runKernel(du,l,u);return s===1?Z(c,[c.size]):c}var T2=R({multinomial_:K5});function q5(r,t){let e=_(r,"a","notEqual","string_or_numeric"),o=_(t,"b","notEqual","string_or_numeric");[e,o]=Ge(e,o),Je(e.shape,o.shape);let n={a:e,b:o};return A.runKernel(Pi,n)}var bf=R({notEqual_:q5});function j5(r,t,e=1,o=0,n="int32"){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);let s={indices:_(r,"indices","oneHot","int32")},a={dtype:n,depth:t,onValue:e,offValue:o};return A.runKernel(gu,s,a)}var E2=R({oneHot_:j5});function X5(r){let e={x:_(r,"x","onesLike")};return A.runKernel(hu,e)}var N2=R({onesLike_:X5});function Y5(r,t){let e=_(r,"v1","outerProduct"),o=_(t,"v2","outerProduct");F(e.rank===1&&o.rank===1,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${e.rank} and ${o.rank}.`);let n=Z(e,[-1,1]),i=Z(o,[1,-1]);return et(n,i)}var R2=R({outerProduct_:Y5});function Q5(r,t,e=0){let o=_(r,"x","pad");if(o.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");let n={paddings:t,constantValue:e},i={x:o};return A.runKernel(yu,i,n)}var no=R({pad_:Q5});function Z5(r,t,e=0){return F(t.length===2,()=>"Invalid number of paddings. Must be length of 2."),no(r,[t],e)}var P2=R({pad1d_:Z5});function J5(r,t,e=0){return F(t.length===2&&t[0].length===2&&t[1].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),no(r,t,e)}var $2=R({pad2d_:J5});function e6(r,t,e=0){return F(t.length===3&&t[0].length===2&&t[1].length===2&&t[2].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),no(r,t,e)}var A2=R({pad3d_:e6});function t6(r,t,e=0){return F(t.length===4&&t[0].length===2&&t[1].length===2&&t[2].length===2&&t[3].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),no(r,t,e)}var D2=R({pad4d_:t6});function r6(r,t,e){let o=_(r,"x","spaceToBatchND");F(o.rank>=1+t.length,()=>`input rank ${o.rank} should be > than [blockShape] ${t.length}`),F(e.length===t.length,()=>`paddings.shape[0] ${e.length} must be equal to [blockShape] ${t.length}`),F(o.shape.reduce((s,a,l)=>l>0&&l<=t.length?s&&(a+e[l-1][0]+e[l-1][1])%t[l-1]===0:s,!0),()=>`input spatial dimensions ${o.shape.slice(1)} with paddings ${e.toString()} must be divisible by blockShapes ${t.toString()}`);let n={x:o},i={blockShape:t,paddings:e};return A.runKernel(Vu,n,i)}var Sf=R({spaceToBatchND_:r6});function o6(r,t,e,o,n,i,s){n==null&&(n=[1,1]),i==null&&(i=1),o===0&&(o="valid");let a=_(r,"x","maxPool"),l=a,u=!1;a.rank===3&&(u=!0,l=Z(a,[1,a.shape[0],a.shape[1],a.shape[2]])),F(hr(i,n),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${i} and dilations '${n}'`);let c=jy(l.shape,t,i,n,o),p=[c.dilationHeight,c.dilationWidth],d;o==="same"?d=i6([c.filterHeight,c.filterWidth],p):d=[[0,0],[0,0]];let m=p[0]===1&&p[1]===1,[f,g]=n6([c.inHeight,c.inWidth],p,d),x=m?o:"valid",y=m?l:Sf(l,p,f),I=(e==="avg"?()=>Qm(y,t,i,x,s):()=>xf(y,t,i,x,s))(),N=m?I:Zm(I,p,g);return u?Z(N,[N.shape[1],N.shape[2],N.shape[3]]):N}function n6(r,t,e){let o=e.map(c=>c[0]),n=e.map(c=>c[1]),i=r.concat(o,n),s=t.map((c,p)=>(c-i[p]%c)%c),a=n.map((c,p)=>c+s[p]),l=t.map((c,p)=>[o[p],a[p]]),u=t.map((c,p)=>[0,s[p]]);return[l,u]}function i6(r,t){let o=r.map((s,a)=>s+(s-1)*(t[a]-1)).map(s=>s-1),n=o.map(s=>Math.floor(s/2)),i=o.map((s,a)=>s-n[a]);return o.map((s,a)=>[n[a],i[a]])}var F2=R({pool_:o6});function s6(r,t){let e=_(r,"x","prelu"),o=_(t,"alpha","prelu"),n={x:e,alpha:o};return A.runKernel(bu,n)}var wf=R({prelu_:s6});function a6(r,t=null,e=!1){let o=_(r,"x","prod");o.dtype==="bool"&&(o=ze(o,"int32"));let n={x:o},i={axis:t,keepDims:e};return A.runKernel(Is,n,i)}var O2=R({prod_:a6});function l6(r,t,e,o){let n=r.map((c,p)=>_(c,`tensors${p}`,"raggedGather","int32")),i=_(t,"paramsDenseValues","raggedGather"),s=_(e,"indices","raggedGather","int32"),a={paramsNestedSplits:n,paramsDenseValues:i,indices:s},l={outputRaggedRank:o},u=A.runKernel(vm,a,l);return{outputNestedSplits:u.slice(0,u.length-1),outputDenseValues:u[u.length-1]}}var L2=R({raggedGather_:l6});function u6(r,t,e){let o=_(r,"starts","raggedRange"),n=_(t,"limits","raggedRange",o.dtype),i=_(e,"deltas","raggedRange",o.dtype),s={starts:o,limits:n,deltas:i},a=A.runKernel(bm,s);return{rtNestedSplits:a[0],rtDenseValues:a[1]}}var M2=R({raggedRange_:u6});function c6(r,t,e,o,n){let i=_(r,"shape","raggedTensorToTensor","int32"),s=_(t,"values","raggedTensorToTensor"),a=_(e,"defaultValue","raggedTensorToTensor",s.dtype),l=o.map((p,d)=>_(p,`tensors${d}`,"raggedTensorToTensor","int32")),u={shape:i,values:s,defaultValue:a,rowPartitionTensors:l},c={rowPartitionTypes:n};return A.runKernel(Sm,u,c)}var B2=R({raggedTensorToTensor_:c6});function p6(r,t,e){St(r);let o=He(r),n=null;if(e==null||e==="float32")n=new Float32Array(o);else if(e==="int32")n=new Int32Array(o);else if(e==="bool")n=new Uint8Array(o);else throw new Error(`Unknown data type ${e}`);for(let i=0;i<o;i++)n[i]=t();return A.makeTensor(n,r,e)}var V2=R({rand_:p6});var If=ay(oC());var Ys=class{constructor(t,e,o,n,i){this.mean=t,this.stdDev=e,this.dtype=o,this.nextVal=NaN,this.truncated=n,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);let s=i||Math.random();this.random=If.alea(s.toString())}nextValue(){if(!isNaN(this.nextVal)){let n=this.nextVal;return this.nextVal=NaN,n}let t,e,o=!1;for(;!o;){let n,i,s;do n=2*this.random()-1,i=2*this.random()-1,s=n*n+i*i;while(s>=1||s===0);let a=Math.sqrt(-2*Math.log(s)/s);t=this.mean+this.stdDev*n*a,e=this.mean+this.stdDev*i*a,(!this.truncated||this.isValidTruncated(t))&&(o=!0)}return(!this.truncated||this.isValidTruncated(e))&&(this.nextVal=this.convertValue(e)),this.convertValue(t)}convertValue(t){return this.dtype==null||this.dtype==="float32"?t:Math.round(t)}isValidTruncated(t){return t<=this.upper&&t>=this.lower}},Cf=class{constructor(t,e,o,n){this.alpha=t,this.beta=1/e,this.dtype=o;let i=n||Math.random();this.randu=If.alea(i.toString()),this.randn=new Ys(0,1,o,!1,this.randu()),t<1?this.d=t+2/3:this.d=t-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let t,e,o,n,i,s;for(;;){do n=this.randn.nextValue(),s=1+this.c*n;while(s<=0);if(s*=s*s,t=n*n,e=1-.331*t*t,o=.5*t+this.d*(1-s+Math.log(s)),i=this.randu(),i<e||Math.log(i)<o)break}return s=1/this.beta*this.d*s,this.alpha<1&&(s*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(s)}convertValue(t){return this.dtype==="float32"?t:Math.round(t)}},kf=class{constructor(t=0,e=1,o,n){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=t,this.range=e-t,this.dtype=o,n==null&&(n=Math.random()),typeof n=="number"&&(n=n.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${t} - ${e} <= 1 and dtype is not float`);this.random=If.alea(n)}convertValue(t){return this.canReturnFloat()?t:Math.round(t)}nextValue(){return this.convertValue(this.min+this.range*this.random())}};function y6(r,t,e=1,o="float32",n){if(St(r),e==null&&(e=1),o==null&&(o="float32"),o!=="float32"&&o!=="int32")throw new Error(`Unsupported data type ${o}`);let i=new Cf(t,e,o,n),s=Le(r,o);for(let a=0;a<s.values.length;a++)s.values[a]=i.nextValue();return s.toTensor()}var nC=R({randomGamma_:y6});function v6(r,t=0,e=1,o,n){if(St(r),o!=null&&o==="bool")throw new Error(`Unsupported data type ${o}`);let i=new Ys(t,e,o,!1,n),s=Le(r,o);for(let a=0;a<s.values.length;a++)s.values[a]=i.nextValue();return s.toTensor()}var Tf=R({randomNormal_:v6});function b6(r,t,e){if(t!=null&&t==="bool")throw new Error(`Unsupported data type ${t}`);return Tf(r,0,1,t,e)}var iC=R({randomStandardNormal_:b6});function S6(r,t=0,e=1,o="float32",n){St(r);let i=Le(r,o),s=new kf(t,e,null,n);for(let a=0;a<i.values.length;a++)i.values[a]=s.nextValue();return i.toTensor()}var yc=R({randomUniform_:S6});function w6(r,t,e,o){return yc(r,t,e,"int32",o)}var sC=R({randomUniformInt_:w6});function Qi(r,t,e=1,o="float32"){if(e===0)throw new Error("Cannot have a step of zero");let n={start:r,stop:t,step:e,dtype:o};return A.runKernel(Su,{},n)}function _6(r){let e={input:_(r,"input","real")};return A.runKernel(Ts,e)}var jn=R({real_:_6});function C6(r){let e={x:_(r,"x","reciprocal")};return A.runKernel(wu,e)}var aC=R({reciprocal_:C6});function k6(r){let e={x:_(r,"x","relu")};return A.runKernel(_u,e)}var Zi=R({relu_:k6});function I6(r){let e={x:_(r,"x","relu6")};return A.runKernel(Tu,e)}var Ef=R({relu6_:I6});function T6(r,t){let o={x:_(r,"x","reverse")},n={dims:t};return A.runKernel(Eu,o,n)}var wo=R({reverse_:T6});function E6(r){let t=_(r,"x","reverse");return F(t.rank===1,()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`),wo(t,0)}var lC=R({reverse1d_:E6});function N6(r,t){let e=_(r,"x","reverse");return F(e.rank===2,()=>`Error in reverse2D: x must be rank 2 but got rank ${e.rank}.`),wo(e,t)}var uC=R({reverse2d_:N6});function R6(r,t){let e=_(r,"x","reverse");return F(e.rank===3,()=>`Error in reverse3D: x must be rank 3 but got rank ${e.rank}.`),wo(e,t)}var cC=R({reverse3d_:R6});function P6(r,t){let e=_(r,"x","reverse");return F(e.rank===4,()=>`Error in reverse4D: x must be rank 4 but got rank ${e.rank}.`),wo(e,t)}var pC=R({reverse4d_:P6});function $6(r){let e={x:_(r,"x","round")};return A.runKernel(Nu,e)}var Nf=R({round_:$6});function A6(r){let e={x:_(r,"x","rsqrt","float32")};return A.runKernel($i,e)}var dC=R({rsqrt_:A6});function D6(r){let e={x:_(r,"x","selu")};return A.runKernel(Du,e)}var mC=R({selu_:D6});function F6(r,t,e,o,n,i=[1,1],s="NHWC"){let a=_(r,"x","separableConv2d"),l=_(t,"depthwiseFilter","separableConv2d"),u=_(e,"pointwiseFilter","separableConv2d"),c=a,p=!1;if(a.rank===3&&(p=!0,c=Z(a,[1,a.shape[0],a.shape[1],a.shape[2]])),s==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");F(c.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`),F(l.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`),F(u.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`),F(u.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`),F(u.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`);let d=l.shape[2],m=l.shape[3];F(u.shape[2]===d*m,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*m}, but got ${u.shape[2]}.`);let f=gc(c,l,o,n,s,i),x=qi(f,u,1,"valid",s);return p?Z(x,[x.shape[1],x.shape[2],x.shape[3]]):x}var fC=R({separableConv2d_:F6});function O6(r,t){return j(this,null,function*(){let e=_(r,"x","setdiff1d"),o=_(t,"y","setdiff1d");F(e.dtype===o.dtype,()=>`x and y should have the same dtype, but got x (${e.dtype}) and y (${o.dtype}).`),F(e.rank===1,()=>`x should be 1D tensor, but got x (${e.shape}).`),F(o.rank===1,()=>`y should be 1D tensor, but got y (${o.shape}).`);let n=yield e.data(),i=yield o.data(),s=new Set(i),a=0;for(let c=0;c<n.length;c++)s.has(n[c])||a++;let l=new bo([a],e.dtype),u=new bo([a],"int32");for(let c=0,p=0;c<n.length;c++)s.has(n[c])||(l.values[p]=n[c],u.values[p]=c,p++);return[l.toTensor(),u.toTensor()]})}var hC=O6;function L6(r){let e={x:_(r,"x","sign")};return A.runKernel(Lu,e)}var gC=R({sign_:L6});function M6(r){let e={x:_(r,"x","sin","float32")};return A.runKernel(Fu,e)}var xC=R({sin_:M6});function B6(r){let e={x:_(r,"x","sinh")};return A.runKernel(Ou,e)}var yC=R({sinh_:B6});function V6(r,t,e){let o=_(r,"x","slice1d");return F(o.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${o.rank} tensor`),Fe(o,[t],[e])}var vC=R({slice1d_:V6});function W6(r,t,e){let o=_(r,"x","slice2d");return F(o.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${o.rank} tensor`),Fe(o,t,e)}var bC=R({slice2d_:W6});function U6(r,t,e){let o=_(r,"x","slice3d");return F(o.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${o.rank} tensor`),Fe(o,t,e)}var SC=R({slice3d_:U6});function z6(r,t,e){let o=_(r,"x","slice4d");return F(o.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${o.rank} tensor`),Fe(o,t,e)}var wC=R({slice4d_:z6});function G6(r,t=-1){let e=_(r,"logits","softmax","float32");if(t===-1&&(t=e.rank-1),t!==e.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${e.rank} and dim was ${t}`);let o={logits:e},n={dim:t};return A.runKernel(Uu,o,n)}var _C=R({softmax_:G6});function H6(r){F(r.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${r.dtype}.`);let t={input:r};return A.runKernel(Vl,t)}var vc=R({fft_:H6});function K6(r){F(r.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${r.dtype}.`);let t={input:r};return A.runKernel(Kl,t)}var Qs=R({ifft_:K6});function q6(r){let t=r.shape[r.shape.length-1],e=r.size/t,o;if(t<=2){let n=Z(r,[e,t]);o=Qs(n)}else{let n=[e,2*(t-1)],i=Z(jn(r),[e,t]),s=Z(Yi(r),[e,t]),a=wo(Fe(i,[0,1],[e,t-2]),1),l=le(wo(Fe(s,[0,1],[e,t-2]),1),Ne(-1)),u=dt([i,a],1),c=dt([s,l],1),p=Z(Pr(u,c),[n[0],n[1]]);o=Qs(p)}if(o=jn(o),r.rank===3&&r.shape[0]!==0){let n=o,i=r.shape[0];o=Z(o,[i,o.shape[0]/i,o.shape[1]]),n.dispose()}return o}var Rf=R({irfft_:q6});function j6(r,t,e=0){let n={x:_(r,"x","split")},i={numOrSizeSplits:t,axis:e};return A.runKernel(Wu,n,i)}var Xn=R({split_:j6});function X6(r,t){F(r.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${r.dtype}`);let e=r.shape[r.shape.length-1],o=r.size/e,n;if(t!=null&&t<e){let f=r.shape.map(x=>0),g=r.shape.map(x=>x);g[r.shape.length-1]=t,n=Fe(r,f,g),e=t}else if(t!=null&&t>e){let f=r.shape.map(g=>g);f[r.shape.length-1]=t-e,n=dt([r,_r(f)],r.shape.length-1),e=t}else n=r;let i=Gt(n),s=Z(Pr(n,i),[o,e]),a=vc(s),l=Math.floor(e/2)+1,u=jn(a),c=Yi(a),p=Xn(u,[l,e-l],u.shape.length-1),d=Xn(c,[l,e-l],c.shape.length-1),m=n.shape.slice();return m[n.shape.length-1]=l,Z(Pr(p[0],d[0]),m)}var bc=R({rfft_:X6});function Y6(r,t){let e=_(r,"a","squaredDifference"),o=_(t,"b","squaredDifference");[e,o]=Ge(e,o),Je(e.shape,o.shape);let n={a:e,b:o},i={};return A.runKernel(Fi,n,i)}var Pf=R({squaredDifference_:Y6});function Q6(r,t){let e=_(r,"x","squeeze","string_or_numeric");return Z(e,fy(e.shape,t).newShape)}var ut=R({squeeze_:Q6});function Z6(r,t=0){let e=Ms(r,"tensors","stack","string_or_numeric");F(e.length>=1,()=>"Pass at least one tensor to tf.stack"),e.length>0&&F(t<=e[0].rank,()=>"Axis must be <= rank of the tensor");let o=e,n={axis:t};return A.runKernel(xu,o,n)}var Cr=R({stack_:Z6});function J6(r,t=0){let o={x:_(r,"x","step")},n={alpha:t};return A.runKernel(rc,o,n)}var $f=R({step_:J6});function eG(r,t,e,o,n=0,i=0,s=0,a=0,l=0){let c={x:_(r,"x","stridedSlice","string_or_numeric")},p={begin:t,end:e,strides:o,beginMask:n,endMask:i,ellipsisMask:s,newAxisMask:a,shrinkAxisMask:l};return A.runKernel(qu,c,p)}var CC=R({stridedSlice_:eG});function tG(r){let e={x:_(r,"x","tan","float32")};return A.runKernel(Xu,e)}var kC=R({tan_:tG});function Pt(r,t){vo(r);let e=Rr(r,t);if(e.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Sr(r,null,e,t)}function kr(r,t,e){if(vo(r),t!=null&&t.length!==2)throw new Error("tensor2d() requires shape to have two numbers");let o=Rr(r,e);if(o.length!==2&&o.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(o.length===1&&t==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Sr(r,t,o,e)}function Af(r,t,e){if(vo(r),t!=null&&t.length!==3)throw new Error("tensor3d() requires shape to have three numbers");let o=Rr(r,e);if(o.length!==3&&o.length!==1)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(o.length===1&&t==null)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Sr(r,t,o,e)}function IC(r,t,e){if(vo(r),t!=null&&t.length!==4)throw new Error("tensor4d() requires shape to have four numbers");let o=Rr(r,e);if(o.length!==4&&o.length!==1)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(o.length===1&&t==null)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return Sr(r,t,o,e)}function TC(r,t,e){if(vo(r),t!=null&&t.length!==5)throw new Error("tensor5d() requires shape to have five numbers");let o=Rr(r,e);if(o.length!==5&&o.length!==1)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(o.length===1&&t==null)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return Sr(r,t,o,e)}function EC(r,t,e){if(vo(r),t!=null&&t.length!==6)throw new Error("tensor6d() requires shape to have six numbers");let o=Rr(r,e);if(o.length!==6&&o.length!==1)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(o.length===1&&t==null)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return t=t||o,Sr(r,t,o,e)}function NC(r,t,e){let o=t.rank>1?t.shape[t.rank-1]:1,n=t.rank>1?t.rank-1:1,i=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${e.shape}, indices.shape: ${t.shape}, shape: ${r}, sliceDim: ${o}, and batchDim: ${n}.`;if(e.rank<n)throw new Error(i+` update.rank < ${n}. `);if(r.length<o+(e.rank-n))throw new Error(i+` Output shape length < ${o+(e.rank-n)}`);if(e.rank!==n+r.length-o)throw new Error(i+` update.rank != ${n+r.length-o}`);for(let s=0;s<n;++s)if(e.shape[s]!==t.shape[s])throw new Error(i+` updates.shape[${s}] (${e.shape[s]}) != indices.shape[${s}] (${t.shape[s]}).`);for(let s=0;s<e.rank-n;++s)if(e.shape[s+n]!==r[s+o])throw new Error(i+` updates.shape[${s+n}] (${e.shape[s+n]}) != shape[${s+n}] (${r[s+n]})`)}function Ap(r,t,e){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(r.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${r.rank}.`);if(t.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(e.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${e}`);if(e.length===0){if(t.size===0)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(r.size===0)throw new Error(`Updates specified for empty output. updates shape: ${r.shape}`)}NC(e,t,r)}function rG(r,t,e){let o=t.shape.length,n=o>1?t.shape[o-1]:1,i=e.length,s=1;for(let p=n;p<i;++p)s*=e[p];let a=n<1?1:n,l=He(t.shape)/a,u=[...gn(e.slice(0,n)),1],c=He(e);return{sliceRank:n,numUpdates:l,sliceSize:s,strides:u,outputSize:c}}function oG(r,t,e){let o=_(r,"tensor","tensorScatterupdate"),n=_(t,"indices","tensorScatterupdate","int32"),i=_(e,"updates","tensorScatterupdate");if(Ap(i,n,o.shape),o.dtype!==i.dtype)throw new Error(`tensor and updates must have the same dtype, instead they are ${o.dtype} and ${i.dtype}.`);let s={tensor:o,indices:n,updates:i},a={};return A.runKernel(Pu,s,a)}var PC=R({tensorScatterUpdate_:oG});function nG(r,t=1,e=!0){let o=_(r,"x","topk");if(o.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");let n=o.shape[o.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>n)throw new Error(`'k' passed to topk() must be <= the last dimension (${n}) but got ${t}`);let i={x:o},s={k:t,sorted:e},[a,l]=A.runKernel(Qu,i,s);return{values:a,indices:l}}var $C=R({topk_:nG});function iG(r,t=0,e=1,o,n){if(St(r),o!=null&&o==="bool")throw new Error("Unsupported data type $ { dtype }");let i=new Ys(t,e,o,!0,n),s=Le(r,o);for(let a=0;a<s.values.length;a++)s.values[a]=i.nextValue();return s.toTensor()}var AC=R({truncatedNormal_:iG});function sG(r,t=0){let e=_(r,"x","unique","string_or_numeric");F(e.rank>0,()=>"The input tensor must be at least 1D");let o={x:e},n={axis:t},[i,s]=A.runKernel(Nm,o,n);return{values:i,indices:s}}var DC=R({unique_:sG});function aG(r,t,e){let o=_(r,"x","unsortedSegmentSum"),n=_(t,"segmentIds","unsortedSegmentSum","int32");F(On(e),()=>"numSegments must be of dtype int");let i={x:o,segmentIds:n},s={numSegments:e};return A.runKernel(ec,i,s)}var FC=R({unsortedSegmentSum_:aG});function lG(r,t=0){let e=_(r,"x","unstack","string_or_numeric");F(t>=-e.shape.length&&t<e.shape.length,()=>`Axis = ${t} is not in [-${e.shape.length}, ${e.shape.length})`);let o={value:e},n={axis:t};return A.runKernel(Ju,o,n)}var _o=R({unstack_:lG});function OC(r,t){return $p(r,t,"right")}function LC(r,t=!0,e,o){return A.makeVariable(r,t,e,o)}function Df(r,t){let e=[];for(let i=0;i<t.length;i++)t[i]&&e.push(i);let o=Le(r,"int32"),n=Le([e.length,r.length],"int32");for(let i=0;i<e.length;i++){let s=o.indexToLoc(e[i]),a=i*r.length;n.values.set(s,a)}return n.toTensor()}function uG(r){return j(this,null,function*(){let t=_(r,"condition","whereAsync","bool"),e=yield t.data(),o=Df(t.shape,e);return r!==t&&t.dispose(),o})}var Ff=uG;function cG(r,t,e){return j(this,null,function*(){let o=_(r,"tensor","boolMask"),n=_(t,"mask","boolMask","bool"),i=e??0,s=n.rank,a=o.shape;F(s>0,()=>"mask cannot be scalar"),Rt(a.slice(i,i+s),n.shape,"mask's shape must match the first K dimensions of tensor's shape,");let l=1;for(let g=i;g<i+s;g++)l*=a[g];let u=a.slice(0,i).concat([l],a.slice(i+s)),c=Z(o,u),p=Z(n,[-1]),d=yield Ff(p),m=ut(d,[1]),f=lf(c,m,i);return r!==o&&o.dispose(),t!==n&&n.dispose(),m.dispose(),c.dispose(),p.dispose(),d.dispose(),f})}var pG=cG;function dG(r,t,e){let o=_(r,"x","transpose");if(t==null&&(t=o.shape.map((s,a)=>a).reverse()),F(o.rank===t.length,()=>`Error in transpose: rank of input ${o.rank} must match length of perm ${t}.`),t.forEach(s=>{F(s>=0&&s<o.rank,()=>`All entries in 'perm' must be between 0 and ${o.rank-1} but got ${t}`)}),o.rank<=1)return o.clone();let n={x:o},i={perm:t};return o.dtype==="complex64"?Ee(()=>{let s=jn(o),a=Yi(o);return s=A.runKernel(Mi,{x:s},i),a=A.runKernel(Mi,{x:a},i),e&&(a=nr(a)),Pr(s,a)}):A.runKernel(Mi,n,i)}var Of=R({transpose_:dG});function mG(r,t,e,o,n=!0){let i=_(r,"v","movingAverage"),s=_(t,"x","movingAverage"),a=_(e,"decay","movingAverage");Uw(i,s),F(Jr(i.shape,s.shape),()=>"Shape mismatch in v and x");let l=Ne(1),u=Re(l,a),c=le(Re(s,i),u);if(n){F(o!=null,()=>"When using zeroDebias: true, step is required.");let p=_(o,"step","movingAverage");c=De(c,Re(l,Hn(a,p)))}return xe(i,c)}var fG=R({movingAverage_:mG});function hG(r,t,e){St(e);let o=_(r,"indices","scatterND","int32"),n=_(t,"updates","scatterND");Ap(n,o,e);let i={indices:o,updates:n},s={shape:e};return A.runKernel(Ru,i,s)}var gG=R({scatterND_:hG});function MC(r,t,e,o){if(r.dtype!=="int32")throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${r.dtype}.`);if(r.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${r.shape}.`);let n=r.rank>0?r.shape[0]:1,i=r.rank>1?r.shape[1]:1;if(e.length!==i)throw new Error(`outputShape has incorrect number of elements:, ${e.length}, should be: ${i}.`);let s=t.size;if(!(t.rank===0||t.rank===1&&s===n))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${n}]`);if(t.dtype!==o.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}function yG(r,t,e,o=0){St(e);let n=_(r,"sparseIndices","sparseToDense","int32"),i=_(t,"sparseValues","sparseToDense","string_or_numeric"),s=_(o,"defaultValue","sparseToDense",i.dtype);MC(n,i,e,s);let a={sparseIndices:n,sparseValues:i,defaultValue:s},l={outputShape:e};return A.runKernel(Hu,a,l)}var vG=R({sparseToDense_:yG});function bG(r,t){let e=_(t,"indices","gatherND","int32"),n={params:_(r,"x","gatherND","string_or_numeric"),indices:e};return A.runKernel(Hl,n)}var SG=R({gatherND_:bG});function BC(r,t){if(t==null)return r.shape.slice();if(Jr(r.shape,t))return t;if(r.shape.length===t.length){let e=[];for(let o=0;o<r.shape.length;o++)t[o]==null&&r.shape[o]!=null?e.push(r.shape[o]):e.push(t[o]);return e}return t}function wG(r,t,e,o){let n=_(r,"x","dropout");if(F(n.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${n.dtype} tensor instead.`),F(t>=0&&t<1,()=>`rate must be a float in the range [0, 1), but got ${t}.`),t===0)return r instanceof st?n.clone():n;let i=BC(n,e),s=1-t,a=De(af(xe(yc(i,0,1,"float32",o),s)),s);return le(n,a)}var _G=R({dropout_:wG});function ov(r){return Math.floor(Math.pow(2,Math.ceil(Math.log(r)/Math.log(2))))}function Dp(r,t,e){let o=1-r%2,n=new Float32Array(r);for(let i=0;i<r;++i){let s=2*Math.PI*i/(r+o-1);n[i]=t-e*Math.cos(s)}return Pt(n,"float32")}function CG(r,t,e=1){return j(this,null,function*(){let o=_(r,"predictions","inTopK"),n=_(t,"targets","inTopK");F(o.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${o.rank}`),F(o.rank-1===n.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${o.rank} and targets rank ${n.rank}`),Rt(o.shape.slice(0,o.shape.length-1),n.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");let i=o.shape[o.shape.length-1];F(e>0&&e<=i,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${i}), but got ${e}`);let s=yield o.data(),a=yield n.data(),[l,u]=[s.length/i,i],c=hy("bool",l);for(let p=0;p<l;p++){let d=p*u,m=s.subarray(d,d+u),f=[];for(let g=0;g<m.length;g++)f.push({value:m[g],index:g});f.sort((g,x)=>x.value-g.value),c[p]=0;for(let g=0;g<e;g++)if(f[g].index===a[p]){c[p]=1;break}}return r!==o&&o.dispose(),t!==n&&n.dispose(),wr(c,n.shape,"bool")})}var kG=CG;var nv={};pt(nv,{conv2d:()=>WC,depthwiseConv2d:()=>GC,matMul:()=>HC});function IG(r,t,e,o,n,i="NHWC",s){let a=r;r.rank===3&&(a=Z(r,[1,r.shape[0],r.shape[1],r.shape[2]]));let l=t;l.rank===3&&(l=Z(t,[1,t.shape[0],t.shape[1],t.shape[2]])),F(a.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${a.shape}.`),F(l.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`),F(e.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${e}.`);let u=i==="NHWC"?a.shape[3]:a.shape[1],c=i==="NHWC"?l.shape[3]:l.shape[1];F(u===e[2],()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${e[2]}.`),F(c===e[3],()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${e[3]}).`),Lt("conv2dDerFilter",n,s);let p={x:a,dy:l},d={strides:o,pad:n,dataFormat:i,dimRoundingMode:s,filterShape:e};return A.runKernel(vl,p,d)}var VC=R({conv2DBackpropFilter_:IG});function Zs(r,t,e){if(e==null||e==="linear")return r;if(e==="relu")return le(r,$f(t));throw new Error(`Cannot compute gradient for fused activation ${e}.`)}function Js(r,t){let e=t,o=rf(r.shape,t.shape);return o.length>0&&(e=tt(e,o)),Z(e,r.shape)}function ea(r,t,e,o){if(t==="linear")return r;if(t==="relu")return Zi(r);if(t==="elu")return nf(r);if(t==="relu6")return Ef(r);if(t==="prelu")return wf(r,e);if(t==="leakyrelu")return cf(r,o);if(t==="sigmoid")return oo(r);throw new Error(`Unknown fused activation ${t}.`)}var ta=(r,t)=>!(r>0)||t==="linear";function TG({x:r,filter:t,strides:e,pad:o,dataFormat:n="NHWC",dilations:i=[1,1],dimRoundingMode:s,bias:a,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(l=l||"linear",ta(A.state.gradientDepth,l)===!1){F(n==="NHWC",()=>`Error in fused conv2d: got dataFormat of ${n} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let B=qi(r,t,e,o,n,i,s);return a!=null&&(B=xe(B,a)),ea(B,l,u,c)}let p=_(r,"x","conv2d","float32"),d=_(t,"filter","conv2d","float32"),m=p,f=!1;p.rank===3&&(f=!0,m=Z(p,[1,p.shape[0],p.shape[1],p.shape[2]])),F(m.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${m.rank}.`),F(d.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${d.rank}.`),Lt("fused conv2d",o,s);let g=n==="NHWC"?m.shape[3]:m.shape[1];F(d.shape[2]===g,()=>`Error in conv2d: depth of input (${g}) must match input depth for filter ${d.shape[2]}.`),F(hr(e,i),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${e} and dilations '${i}'`);let x=Gs(m.shape,d.shape,e,i,o,s),y;a!=null&&(y=_(a,"bias","fused conv2d"),[y]=Ge(y,p),n==="NHWC"?Je(x.outShape,y.shape):(F(y.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${y.shape.length}.`),F(y.shape.length===0||y.shape[0]===x.outChannels||y.shape[0]===1,()=>`Error in fused conv2d: bias shape (${y.shape}) is not compatible with the number of output channels (${x.outChannels})`)));let b;if(u!=null){let B=u.shape;if(F(B.length<=1||B.length===3,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${B.length}.`),B.length===1)F(B[0]===1||B[0]===x.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${B}) is not compatible with the number of output channels (${x.outChannels}).`);else if(B.length===3)try{Je(B,x.outShape)}catch{let H=`Error in fused conv2d: PReLU activation weights (${B}) is not compatible with the output shape of the conv2d (${x.outShape}).`;throw Error(H)}b=_(u,"prelu weights","fused conv2d")}let I=(B,W)=>{F(n==="NHWC",()=>`Error in gradient of fused conv2D: got dataFormat of ${n} but only NHWC is currently supported.`);let[H,K,X,re]=W,ce=Zs(B,X,l);F(zs(i),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${i}'`);let pe=tf(K.shape,ce,H,e,o),be=VC(K,ce,H.shape,e,o),we=[pe,be];if(re!=null){let Te=Js(re,ce);we.push(Te)}return we},N={x:m,filter:d,bias:y,preluActivationWeights:b},M={strides:e,pad:o,dataFormat:n,dilations:i,dimRoundingMode:s,activation:l,leakyreluAlpha:c};return a==null?Fr((W,H,K)=>{let X=A.runKernel(Ps,N,M);return K([H,W,X]),f&&(X=Z(X,[X.shape[1],X.shape[2],X.shape[3]])),{value:X,gradFunc:I}})(m,d):Fr((W,H,K,X)=>{let re=A.runKernel(Ps,N,M);return X([H,W,re,K]),f&&(re=Z(re,[re.shape[1],re.shape[2],re.shape[3]])),{value:re,gradFunc:I}})(m,d,y)}var WC=R({fusedConv2d_:TG});function EG(r,t,e,o,n,i=[1,1],s){let a=r;r.rank===3&&(a=Z(r,[1,r.shape[0],r.shape[1],r.shape[2]]));let l=t;l.rank===3&&(l=Z(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let u={x:a,dy:l},c={strides:o,pad:n,dimRoundingMode:s,dilations:i,filterShape:e};return A.runKernel(Pl,u,c)}var UC=R({depthwiseConv2dNativeBackpropFilter_:EG});function NG(r,t,e,o,n,i=[1,1],s){let a=t,l=!1;t.rank===3&&(l=!0,a=Z(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let u={dy:a,filter:e},c={strides:o,pad:n,dimRoundingMode:s,dilations:i,inputShape:r},p=A.runKernel($l,u,c);return l?Z(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var zC=R({depthwiseConv2dNativeBackpropInput_:NG});function RG({x:r,filter:t,strides:e,pad:o,dataFormat:n="NHWC",dilations:i=[1,1],dimRoundingMode:s,bias:a,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(ta(A.state.gradientDepth,l)===!1){let M=gc(r,t,e,o,n,i,s);return a!=null&&(M=xe(M,a)),ea(M,l,u,c)}let p=_(r,"x","depthwiseConv2d","float32"),d=_(t,"filter","depthwiseConv2d","float32"),m=p,f=!1;p.rank===3&&(f=!0,m=Z(p,[1,p.shape[0],p.shape[1],p.shape[2]])),F(m.rank===4,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${m.rank}.`),F(d.rank===4,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${d.rank}.`),F(m.shape[3]===d.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${m.shape[3]}) must match the inChannels dimension in filter ${d.shape[2]}.`),i==null&&(i=[1,1]),F(hr(e,i),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${e} and dilations '${i}'`),Lt("fused depthwiseConv2d",o,s);let g=Gs(m.shape,d.shape,e,i,o,s,!0),x;a!=null&&(x=_(a,"bias","fused conv2d"),[x]=Ge(x,p),Je(g.outShape,x.shape));let y;u!=null&&(y=_(u,"prelu weights","fused depthwiseConv2d"));let b=(M,B)=>{F(zs(i),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${i}'`);let[W,H,K,X]=B,re=Zs(M,K,l),ce=zC(H.shape,re,W,e,o,i,s),pe=UC(H,re,W.shape,e,o,i,s);if(X!=null){let be=Js(x,re);return[ce,pe,be]}return[ce,pe]},I={x:m,filter:d,bias:x,preluActivationWeights:y},N={strides:e,pad:o,dataFormat:n,dilations:i,dimRoundingMode:s,activation:l,leakyreluAlpha:c};return a==null?Fr((B,W,H)=>{let K=A.runKernel($s,I,N);return H([W,B,K]),f&&(K=Z(K,[K.shape[1],K.shape[2],K.shape[3]])),{value:K,gradFunc:b}})(m,d):Fr((B,W,H,K)=>{let X=A.runKernel($s,I,N);return K([W,B,X,H]),f&&(X=Z(X,[X.shape[1],X.shape[2],X.shape[3]])),{value:X,gradFunc:b}})(m,d,x)}var GC=R({fusedDepthwiseConv2d_:RG});function PG({a:r,b:t,transposeA:e=!1,transposeB:o=!1,bias:n,activation:i="linear",preluActivationWeights:s,leakyreluAlpha:a=.2}){if(ta(A.state.gradientDepth,i)===!1){let re=et(r,t,e,o);return n!=null&&(re=xe(re,n)),ea(re,i,s,a)}let l=_(r,"a","fused matMul"),u=_(t,"b","fused matMul");[l,u]=Ge(l,u);let c=e?l.shape[l.rank-2]:l.shape[l.rank-1],p=o?u.shape[u.rank-1]:u.shape[u.rank-2],d=e?l.shape[l.rank-1]:l.shape[l.rank-2],m=o?u.shape[u.rank-2]:u.shape[u.rank-1],f=l.shape.slice(0,-2),g=u.shape.slice(0,-2),x=He(f),y=He(g);F(c===p,()=>`Error in fused matMul: inner shapes (${c}) and (${p}) of Tensors with shapes ${l.shape} and ${u.shape} and transposeA=${e} and transposeB=${o} must match.`);let I=Je(l.shape.slice(0,-2),u.shape.slice(0,-2)).concat([d,m]),N=e?Z(l,[x,c,d]):Z(l,[x,d,c]),M=o?Z(u,[y,m,p]):Z(u,[y,p,m]),B;n!=null&&(B=_(n,"bias","fused matMul"),[B]=Ge(B,l),Je(I,B.shape));let W;s!=null&&(W=_(s,"prelu weights","fused matMul"));let H=(re,ce)=>{let[pe,be,we,Te]=ce,qe=Zs(Z(re,we.shape),we,i),je,it;if(!e&&!o?(je=et(qe,be,!1,!0),it=et(pe,qe,!0,!1)):!e&&o?(je=et(qe,be,!1,!1),it=et(qe,pe,!0,!1)):e&&!o?(je=et(be,qe,!1,!0),it=et(pe,qe,!1,!1)):(je=et(be,qe,!0,!0),it=et(qe,pe,!0,!0)),n!=null){let Qt=Js(Te,qe);return[je,it,Qt]}else return[je,it]},K={a:N,b:M,bias:B,preluActivationWeights:W},X={transposeA:e,transposeB:o,activation:i,leakyreluAlpha:a};return n==null?Fr((ce,pe,be)=>{let we=A.runKernel(Rs,K,X);return be([ce,pe,we]),{value:Z(we,I),gradFunc:H}})(N,M):Fr((ce,pe,be,we)=>{let Te=A.runKernel(Rs,K,X);return we([ce,pe,Te,be]),{value:Z(Te,I),gradFunc:H}})(N,M,B)}var HC=R({fusedMatMul_:PG});function $G(r){return Dp(r,.54,.46)}var KC=R({hammingWindow_:$G});function AG(r){return Dp(r,.5,.5)}var Lf=R({hannWindow_:AG});function DG(r,t,e,o=!1,n=0){let i=0,s=[];for(;i+t<=r.size;)s.push(Fe(r,i,t)),i+=e;if(o)for(;i<r.size;){let a=i+t-r.size,l=dt([Fe(r,i,t-a),wn([a],n)]);s.push(l),i+=e}return s.length===0?kr([],[0,t]):Z(dt(s),[s.length,t])}var Mf=R({frame_:DG});function FG(r,t,e,o,n=Lf){o==null&&(o=ov(t));let i=Mf(r,t,e),s=le(i,n(t));return bc(s,o)}var qC=R({stft_:FG});function OG(r,t,e,o,n="bilinear",i=0){let s=_(r,"image","cropAndResize"),a=_(t,"boxes","cropAndResize","float32"),l=_(e,"boxInd","cropAndResize","int32"),u=a.shape[0];F(s.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${s.rank}.`),F(a.rank===2&&a.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${a.shape}.`),F(l.rank===1&&l.shape[0]===u,()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${a.shape}.`),F(o.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${o.length}.`),F(o[0]>=1&&o[1]>=1,()=>`cropSize must be atleast [1,1], but was ${o}`),F(n==="bilinear"||n==="nearest",()=>`method must be bilinear or nearest, but was ${n}`);let c={image:s,boxes:a,boxInd:l},p={method:n,extrapolationValue:i,cropSize:o};return A.runKernel(Tl,c,p)}var jC=R({cropAndResize_:OG});function LG(r){let t=_(r,"image","flipLeftRight","float32");F(t.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`);let e={image:t};return A.runKernel(Ul,e,{})}var XC=R({flipLeftRight_:LG});function MG(r){let t=_(r,"image","grayscaleToRGB"),e=t.rank-1,o=t.shape[e];F(t.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`),F(o===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${o}.`);let n=new Array(t.rank);return n.fill(1,0,e),n[e]=3,Xi(t,n)}var YC=R({grayscaleToRGB_:MG});function BG(r){let t=_(r,"image","RGBToGrayscale"),e=t.rank-1,o=t.shape[e];F(t.rank>=2,()=>`Error in RGBToGrayscale: images must be at least rank 2, but got rank ${t.rank}.`),F(o===3,()=>`Error in RGBToGrayscale: last dimension of an RGB image should be size 3, but got size ${o}.`);let n=t.dtype,i=ze(t,"float32"),s=Pt([.2989,.587,.114]),a;switch(t.rank){case 2:a=ji("ij,j->i",i,s);break;case 3:a=ji("ijk,k->ij",i,s);break;case 4:a=ji("ijkl,l->ijk",i,s);break;case 5:a=ji("ijklm,m->ijkl",i,s);break;case 6:a=ji("ijklmn,n->ijklm",i,s);break;default:throw new Error("Not a valid tensor rank.")}return a=gr(a,-1),ze(a,n)}var QC=R({rgbToGrayscale_:BG});function VG(r,t,e=0,o=.5){let n=_(r,"image","rotateWithOffset","float32");F(n.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${n.rank}.`);let i={image:n},s={radians:t,fillValue:e,center:o};return A.runKernel(oc,i,s)}var ZC=R({rotateWithOffset_:VG});function Oo(r,t,e,o,n,i){o==null&&(o=.5),n==null&&(n=Number.NEGATIVE_INFINITY),i==null&&(i=0);let s=r.shape[0];return e=Math.min(e,s),F(0<=o&&o<=1,()=>`iouThreshold must be in [0, 1], but was '${o}'`),F(r.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${r.rank}'`),F(r.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${r.shape[1]}`),F(t.rank===1,()=>"scores must be a 1D tensor"),F(t.shape[0]===s,()=>`scores has incompatible shape with boxes. Expected ${s}, but was ${t.shape[0]}`),F(0<=i&&i<=1,()=>`softNmsSigma must be in [0, 1], but was '${i}'`),{maxOutputSize:e,iouThreshold:o,scoreThreshold:n,softNmsSigma:i}}function WG(r,t,e,o=.5,n=Number.NEGATIVE_INFINITY){let i=_(r,"boxes","nonMaxSuppression","float32"),s=_(t,"scores","nonMaxSuppression","float32"),a=Oo(i,s,e,o,n);e=a.maxOutputSize,o=a.iouThreshold,n=a.scoreThreshold;let l={maxOutputSize:e,iouThreshold:o,scoreThreshold:n};return A.runKernel(mu,{boxes:i,scores:s},l)}var JC=R({nonMaxSuppression_:WG});function ek(r,t,e){let o=UG(r,t,e),n=o<0?-(o+1):o;r.splice(n,0,t)}function UG(r,t,e){return GG(r,t,e||zG)}function zG(r,t){return r>t?1:r<t?-1:0}function GG(r,t,e){let o=0,n=r.length,i=0,s=!1;for(;o<n;){i=o+(n-o>>>1);let a=e(t,r[i]);a>0?o=i+1:(n=i,s=!a)}return s?o:-o-1}function Bf(r,t,e,o,n){return iv(r,t,e,o,n,0)}function Vf(r,t,e,o,n,i){return iv(r,t,e,o,n,0,!1,i,!0)}function Wf(r,t,e,o,n,i){return iv(r,t,e,o,n,i,!0)}function iv(r,t,e,o,n,i,s=!1,a=!1,l=!1){let u=[];for(let x=0;x<t.length;x++)t[x]>n&&u.push({score:t[x],boxIndex:x,suppressBeginIndex:0});u.sort(tk);let c=i>0?-.5/i:0,p=[],d=[];for(;p.length<e&&u.length>0;){let x=u.pop(),{score:y,boxIndex:b,suppressBeginIndex:I}=x;if(y<n)break;let N=!1;for(let M=p.length-1;M>=I;--M){let B=HG(r,b,p[M]);if(B>=o){N=!0;break}if(x.score=x.score*KG(o,c,B),x.score<=n)break}x.suppressBeginIndex=p.length,N||(x.score===y?(p.push(b),d.push(x.score)):x.score>n&&ek(u,x,tk))}let m=p.length,f=e-m;a&&f>0&&(p.push(...new Array(f).fill(0)),d.push(...new Array(f).fill(0)));let g={selectedIndices:p};return s&&(g.selectedScores=d),l&&(g.validOutputs=m),g}function HG(r,t,e){let o=r.subarray(t*4,t*4+4),n=r.subarray(e*4,e*4+4),i=Math.min(o[0],o[2]),s=Math.min(o[1],o[3]),a=Math.max(o[0],o[2]),l=Math.max(o[1],o[3]),u=Math.min(n[0],n[2]),c=Math.min(n[1],n[3]),p=Math.max(n[0],n[2]),d=Math.max(n[1],n[3]),m=(a-i)*(l-s),f=(p-u)*(d-c);if(m<=0||f<=0)return 0;let g=Math.max(i,u),x=Math.max(s,c),y=Math.min(a,p),b=Math.min(l,d),I=Math.max(y-g,0)*Math.max(b-x,0);return I/(m+f-I)}function KG(r,t,e){let o=Math.exp(t*e*e);return e<=r?o:0}function tk(r,t){return r.score-t.score||r.score===t.score&&t.boxIndex-r.boxIndex}function qG(i,s,a){return j(this,arguments,function*(r,t,e,o=.5,n=Number.NEGATIVE_INFINITY){let l=_(r,"boxes","nonMaxSuppressionAsync"),u=_(t,"scores","nonMaxSuppressionAsync"),c=Oo(l,u,e,o,n);e=c.maxOutputSize,o=c.iouThreshold,n=c.scoreThreshold;let p=yield Promise.all([l.data(),u.data()]),d=p[0],m=p[1],{selectedIndices:f}=Bf(d,m,e,o,n);return l!==r&&l.dispose(),u!==t&&u.dispose(),Pt(f,"int32")})}var rk=qG;function jG(r,t,e,o=.5,n=Number.NEGATIVE_INFINITY,i=0){let s=_(r,"boxes","nonMaxSuppression"),a=_(t,"scores","nonMaxSuppression"),l=Oo(s,a,e,o,n,i);e=l.maxOutputSize,o=l.iouThreshold,n=l.scoreThreshold,i=l.softNmsSigma;let u={boxes:s,scores:a},c={maxOutputSize:e,iouThreshold:o,scoreThreshold:n,softNmsSigma:i},p=A.runKernel(fu,u,c);return{selectedIndices:p[0],selectedScores:p[1]}}var ok=R({nonMaxSuppressionWithScore_:jG});function XG(s,a,l){return j(this,arguments,function*(r,t,e,o=.5,n=Number.NEGATIVE_INFINITY,i=0){let u=_(r,"boxes","nonMaxSuppressionAsync"),c=_(t,"scores","nonMaxSuppressionAsync"),p=Oo(u,c,e,o,n,i);e=p.maxOutputSize,o=p.iouThreshold,n=p.scoreThreshold,i=p.softNmsSigma;let d=yield Promise.all([u.data(),c.data()]),m=d[0],f=d[1],{selectedIndices:g,selectedScores:x}=Wf(m,f,e,o,n,i);return u!==r&&u.dispose(),c!==t&&c.dispose(),{selectedIndices:Pt(g,"int32"),selectedScores:Pt(x)}})}var nk=XG;function YG(r,t,e,o=.5,n=Number.NEGATIVE_INFINITY,i=!1){let s=_(r,"boxes","nonMaxSuppression"),a=_(t,"scores","nonMaxSuppression"),l=Oo(s,a,e,o,n,null),u=l.maxOutputSize,c=l.iouThreshold,p=l.scoreThreshold,d={boxes:s,scores:a},m={maxOutputSize:u,iouThreshold:c,scoreThreshold:p,padToMaxOutputSize:i},f=A.runKernel(ym,d,m);return{selectedIndices:f[0],validOutputs:f[1]}}var ik=R({nonMaxSuppressionPadded_:YG});function QG(s,a,l){return j(this,arguments,function*(r,t,e,o=.5,n=Number.NEGATIVE_INFINITY,i=!1){let u=_(r,"boxes","nonMaxSuppressionAsync"),c=_(t,"scores","nonMaxSuppressionAsync"),p=Oo(u,c,e,o,n,null),d=p.maxOutputSize,m=p.iouThreshold,f=p.scoreThreshold,[g,x]=yield Promise.all([u.data(),c.data()]),{selectedIndices:y,validOutputs:b}=Vf(g,x,d,m,f,i);return u!==r&&u.dispose(),c!==t&&c.dispose(),{selectedIndices:Pt(y,"int32"),validOutputs:Ne(b,"int32")}})}var sk=QG;function ZG(r,t,e=!1,o=!1){let n=_(r,"images","resizeBilinear");F(n.rank===3||n.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${n.rank}.`),F(t.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`),F(o===!1||e===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let i=n,s=!1;n.rank===3&&(s=!0,i=Z(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let[]=t,a={images:i},l={alignCorners:e,halfPixelCenters:o,size:t},u=A.runKernel(Iu,a,l);return s?Z(u,[u.shape[1],u.shape[2],u.shape[3]]):u}var ak=R({resizeBilinear_:ZG});function JG(r,t,e=!1,o=!1){let n=_(r,"images","resizeNearestNeighbor");F(n.rank===3||n.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${n.rank}.`),F(t.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`),F(n.dtype==="float32"||n.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),F(o===!1||e===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let i=n,s=!1;n.rank===3&&(s=!0,i=Z(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let[]=t,a={images:i},l={alignCorners:e,halfPixelCenters:o,size:t},u=A.runKernel(ku,a,l);return s?Z(u,[u.shape[1],u.shape[2],u.shape[3]]):u}var lk=R({resizeNearestNeighbor_:JG});function eH(r,t="binary",e=!1,o=.5){let n=_(r,"image","threshold"),i=.2989,s=.587,a=.114,l=n.shape[0]*n.shape[1],u=le(Pt([o]),255),c,p,d,m;if(F(n.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${n.rank}.`),F(n.shape[2]===3||n.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${n.shape[2]}.`),F(n.dtype==="int32"||n.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${n.dtype}.`),F(t==="otsu"||t==="binary",()=>`Method must be binary or otsu, but was ${t}`),n.shape[2]===3){[c,p,d]=Xn(n,[1,1,1],-1);let x=le(c,i),y=le(p,s),b=le(d,a);m=xe(xe(x,y),b)}else m=r;if(t==="otsu"){let x=Jm(ze(Nf(m),"int32"),wr([]),256);u=tH(x,l)}let f=e?xc(m,u):Ks(m,u);return ze(le(f,255),"int32")}function tH(r,t){let e=Pt([-1]),o=Pt([0]),n=Pt([0]),i,s,a,l,u,c;for(let p=0;p<r.size-1;p++){i=Fe(r,0,p+1),s=Fe(r,p+1),u=De(tt(i),t),c=De(tt(s),t);let d=tt(le(i,Qi(0,i.size)));a=De(d,tt(i));let m=wn(s.shape,i.size),f=xe(Qi(0,s.size),m),g=le(s,f);l=De(tt(g),tt(s));let x=Re(a,l),y=Re(a,l),b=le(u,c);n=le(le(b,x),y);let I=Ks(n,o);o=So(I,n,o),e=So(I,Pt([p]),e)}return e}var uk=R({threshold_:eH});function rH(r,t,e="nearest",o="constant",n=0,i){let s=_(r,"image","transform","float32"),a=_(t,"transforms","transform","float32");F(s.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${s.rank}.`),F(a.rank===2&&(a.shape[0]===s.shape[0]||a.shape[0]===1)&&a.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),F(i==null||i.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${i}.`);let l={image:s,transforms:a},u={interpolation:e,fillMode:o,fillValue:n,outputShape:i};return A.runKernel(Zu,l,u)}var ck=R({transform_:rH});function oH(r,t,e){let o=_(r,"a","bandPart");F(o.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${o.rank}.`);let n=o.shape,[i,s]=o.shape.slice(-2),a,l;typeof t=="number"?(F(t%1===0,()=>`bandPart(): numLower must be an integer, got ${t}.`),F(t<=i,()=>`bandPart(): numLower (${t}) must not be greater than the number of rows (${i}).`),a=_(t<0?i:t,"numLower","bandPart")):(F(t.dtype==="int32",()=>"bandPart(): numLower's dtype must be an int32."),a=So(Pp(t,0),i,qn(t,i))),typeof e=="number"?(F(e%1===0,()=>`bandPart(): numUpper must be an integer, got ${e}.`),F(e<=s,()=>`bandPart(): numUpper (${e}) must not be greater than the number of columns (${s}).`),l=_(e<0?s:e,"numUpper","bandPart")):(F(e.dtype==="int32",()=>"bandPart(): numUpper's dtype must be an int32."),l=So(Pp(e,0),s,qn(e,s)));let u=Z(Qi(0,i,1,"int32"),[-1,1]),c=Qi(0,s,1,"int32"),p=Re(u,c),d=qs(xc(p,a),uf(p,nr(l))),m=_r([i,s],o.dtype);return Z(Cr(_o(Z(o,[-1,i,s])).map(f=>So(d,f,m))),n)}var pk=R({bandPart_:oH});function nH(r){let t;if(Array.isArray(r)){t=!1,F(r!=null&&r.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");let n=r[0].shape[0];for(let i=1;i<r.length;++i)F(r[i].shape[0]===n,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${r[i].shape[0]} vs. ${n})`)}else t=!0,r=Xn(r,r.shape[0],0).map(n=>ut(n,[0]));F(r.length<=r[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${r.length}) exceeds number of dimensions (${r[0].shape[0]}).`);let e=[],o=r;for(let n=0;n<r.length;++n)e.push(A.tidy(()=>{let i=o[n];if(n>0)for(let s=0;s<n;++s){let a=le(tt(le(e[s],i)),e[s]);i=Re(i,a)}return De(i,Hs(i,"euclidean"))}));return t?Cr(e,0):e}var dk=R({gramSchmidt_:nH});function iH(r,t=!1){if(F(r.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${r.rank}`),r.rank===2)return mk(r,t);{let e=r.shape.slice(0,r.shape.length-2).reduce((l,u)=>l*u),o=_o(Z(r,[e,r.shape[r.shape.length-2],r.shape[r.shape.length-1]]),0),n=[],i=[];o.forEach(l=>{let[u,c]=mk(l,t);n.push(u),i.push(c)});let s=Z(Cr(n,0),r.shape),a=Z(Cr(i,0),r.shape);return[s,a]}}function mk(r,t=!1){return A.tidy(()=>{F(r.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${r.shape.length}D Tensor.`);let e=r.shape[0],o=r.shape[1],n=sf(e),i=ro(r),s=kr([[1]],[1,1]),a=ro(s),l=e>=o?o:e;for(let u=0;u<l;++u){let c=i,p=a,d=n;[a,i,n]=A.tidy(()=>{let m=Fe(i,[u,u],[e-u,1]),f=Hs(m),g=Fe(i,[u,u],[1,1]),x=So(Ks(g,0),kr([[-1]]),kr([[1]])),y=Re(g,le(x,f)),b=De(m,y);b.shape[0]===1?a=ro(s):a=dt([s,Fe(b,[1,0],[b.shape[0]-1,b.shape[1]])],0);let I=nr(De(et(x,y),f)),N=Fe(i,[u,0],[e-u,o]),M=le(I,a),B=Of(a);if(u===0)i=Re(N,et(M,et(B,N)));else{let K=Re(N,et(M,et(B,N)));i=dt([Fe(i,[0,0],[u,o]),K],0)}let W=Of(M),H=Fe(n,[0,u],[e,n.shape[1]-u]);if(u===0)n=Re(H,et(et(H,a),W));else{let K=Re(H,et(et(H,a),W));n=dt([Fe(n,[0,0],[e,u]),K],1)}return[a,i,n]}),Xe([c,p,d])}return!t&&e>o&&(n=Fe(n,[0,0],[e,o]),i=Fe(i,[0,0],[o,o])),[n,i]})}var fk=R({qr_:iH});var Mt=function(r){return r[r.NONE=0]="NONE",r[r.MEAN=1]="MEAN",r[r.SUM=2]="SUM",r[r.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS",r}(Mt||{});function sH(r,t,e=Mt.SUM_BY_NONZERO_WEIGHTS){let o=_(r,"losses","computeWeightedLoss"),n=null;t!=null&&(n=_(t,"weights","computeWeightedLoss"));let i=n==null?o:le(o,n);if(e===Mt.NONE)return i;if(e===Mt.SUM)return tt(i);if(e===Mt.MEAN){if(n==null)return js(i);{let s=o.size/n.size,a=De(tt(i),tt(n));return s>1?De(a,Ne(s)):a}}if(e===Mt.SUM_BY_NONZERO_WEIGHTS){if(n==null)return De(tt(i),Ne(o.size));{let s=le(n,kn(o.shape)),a=ze(tt(bf(s,Ne(0))),"float32");return De(tt(i),a)}}throw Error(`Unknown reduction: ${e}`)}var ir=R({computeWeightedLoss_:sH});function aH(r,t,e,o=Mt.SUM_BY_NONZERO_WEIGHTS){let n=_(r,"labels","absoluteDifference"),i=_(t,"predictions","absoluteDifference"),s=null;e!=null&&(s=_(e,"weights","absoluteDifference")),Rt(n.shape,i.shape,"Error in absoluteDifference: ");let a=er(Re(n,i));return ir(a,s,o)}var hk=R({absoluteDifference_:aH});function lH(r,t,e,o,n=Mt.SUM_BY_NONZERO_WEIGHTS){let i=_(r,"labels","cosineDistance"),s=_(t,"predictions","cosineDistance"),a=null;o!=null&&(a=_(o,"weights","cosineDistance")),Rt(i.shape,s.shape,"Error in cosineDistance: ");let l=Ne(1),u=Re(l,tt(le(i,s),e,!0));return ir(u,a,n)}var gk=R({cosineDistance_:lH});function uH(r,t,e,o=Mt.SUM_BY_NONZERO_WEIGHTS){let n=_(r,"labels","hingeLoss"),i=_(t,"predictions","hingeLoss"),s=null;e!=null&&(s=_(e,"weights","hingeLoss")),Rt(n.shape,i.shape,"Error in hingeLoss: ");let a=Ne(1);n=Re(le(Ne(2),n),a);let l=Zi(Re(a,le(n,i)));return ir(l,s,o)}var xk=R({hingeLoss_:uH});function cH(r,t,e,o=1,n=Mt.SUM_BY_NONZERO_WEIGHTS){let i=_(r,"labels","huberLoss"),s=_(t,"predictions","huberLoss"),a=null;e!=null&&(a=_(e,"weights","huberLoss")),Rt(i.shape,s.shape,"Error in huberLoss: ");let l=Ne(o),u=er(Re(s,i)),c=qn(u,l),p=Re(u,c),d=xe(le(Ne(.5),Ht(c)),le(l,p));return ir(d,a,n)}var yk=R({huberLoss_:cH});function pH(r,t,e,o=1e-7,n=Mt.SUM_BY_NONZERO_WEIGHTS){let i=_(r,"labels","logLoss"),s=_(t,"predictions","logLoss"),a=null;e!=null&&(a=_(e,"weights","logLoss")),Rt(i.shape,s.shape,"Error in logLoss: ");let l=Ne(1),u=Ne(o),c=nr(le(i,Kn(xe(s,u)))),p=le(Re(l,i),Kn(xe(Re(l,s),u))),d=Re(c,p);return ir(d,a,n)}var vk=R({logLoss_:pH});function dH(r,t,e,o=Mt.SUM_BY_NONZERO_WEIGHTS){let n=_(r,"labels","meanSquaredError"),i=_(t,"predictions","meanSquaredError"),s=null;e!=null&&(s=_(e,"weights","meanSquaredError")),Rt(n.shape,i.shape,"Error in meanSquaredError: ");let a=Pf(n,i);return ir(a,s,o)}var bk=R({meanSquaredError_:dH});function mH(r,t){let e=_(r,"labels","sigmoidCrossEntropyWithLogits"),o=_(t,"logits","sigmoidCrossEntropyWithLogits");Rt(e.shape,o.shape,"Error in sigmoidCrossEntropyWithLogits: ");let n=Zi(o),i=le(o,e),s=pf(Dr(nr(er(o))));return xe(Re(n,i),s)}function fH(r,t,e,o=0,n=Mt.SUM_BY_NONZERO_WEIGHTS){let i=_(r,"multiClassLabels","sigmoidCrossEntropy"),s=_(t,"logits","sigmoidCrossEntropy"),a=null;if(e!=null&&(a=_(e,"weights","sigmoidCrossEntropy")),Rt(i.shape,s.shape,"Error in sigmoidCrossEntropy: "),o>0){let u=Ne(o),c=Ne(1),p=Ne(.5);i=xe(le(i,Re(c,u)),le(p,u))}let l=mH(i,s);return ir(l,a,n)}var Sk=R({sigmoidCrossEntropy_:fH});function hH(r,t,e=-1){if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${e}`);return Fr((n,i,s)=>{let l=mf(i,[e],!0),u=Re(ze(i,"float32"),l);s([n,u]);let c=nr(le(u,n));return{value:tt(c,[e]),gradFunc:(m,f)=>{let[g,x]=f,y=Gn(m.shape,[e]);return[le(Z(m,y),Re(ze(g,"float32"),Dr(x))),le(Z(m,y),Re(Dr(x),ze(g,"float32")))]}}})(r,t)}function gH(r,t,e,o=0,n=Mt.SUM_BY_NONZERO_WEIGHTS){let i=_(r,"onehotLabels","softmaxCrossEntropy"),s=_(t,"logits","softmaxCrossEntropy"),a=null;if(e!=null&&(a=_(e,"weights","softmaxCrossEntropy")),Rt(i.shape,s.shape,"Error in softmaxCrossEntropy: "),o>0){let u=Ne(o),c=Ne(1),p=Ne(i.shape[1]);i=xe(le(i,Re(c,u)),De(u,p))}let l=hH(i,s);return ir(l,a,n)}var wk=R({softmaxCrossEntropy_:gH});function xH(r,t,e,o){let n=_(r,"indices","sparseFillEmptyRows","int32"),i=_(t,"values","sparseFillEmptyRows"),s=_(e,"denseShape","sparseFillEmptyRows","int32"),a=_(o,"defaultValue","sparseFillEmptyRows",i.dtype);if(n.rank!==2)throw new Error(`Indices should be Tensor2D but received shape
        ${n.shape}`);if(i.rank!==1)throw new Error(`Values should be Tensor1D but received shape ${i.shape}`);if(s.rank!==1)throw new Error(`Dense shape should be Tensor1D but received shape ${s.shape}`);if(a.rank!==0)throw new Error(`Default value should be a scalar but received shape ${a.shape}`);let l={indices:n,values:i,denseShape:s,defaultValue:a},u=A.runKernel(Cm,l);return{outputIndices:u[0],outputValues:u[1],emptyRowIndicator:u[2],reverseIndexMap:u[3]}}var _k=R({sparseFillEmptyRows_:xH});function yH(r,t,e){let o=_(r,"inputIndices","sparseReshape","int32"),n=_(t,"inputShape","sparseReshape","int32"),i=_(e,"newShape","sparseReshape","int32");if(o.rank!==2)throw new Error(`Input indices should be Tensor2D but received shape
        ${o.shape}`);if(n.rank!==1)throw new Error(`Input shape should be Tensor1D but received shape ${n.shape}`);if(i.rank!==1)throw new Error(`New shape should be Tensor1D but received shape ${i.shape}`);let s={inputIndices:o,inputShape:n,newShape:i},a=A.runKernel(km,s);return{outputIndices:a[0],outputShape:a[1]}}var Ck=R({sparseReshape_:yH});function vH(r,t,e){let o=_(r,"data","sparseSegmentMean"),n=_(t,"indices","sparseSegmentMean","int32"),i=_(e,"segmentIds","sparseSegmentMean","int32");if(o.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(n.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
          ${n.shape}`);if(i.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
          ${i.shape}`);let s={data:o,indices:n,segmentIds:i};return A.runKernel(zu,s)}var kk=R({sparseSegmentMean_:vH});function bH(r,t,e){let o=_(r,"data","sparseSegmentSum"),n=_(t,"indices","sparseSegmentSum","int32"),i=_(e,"segmentIds","sparseSegmentSum","int32");if(o.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(n.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
         ${n.shape}`);if(i.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
         ${i.shape}`);let s={data:o,indices:n,segmentIds:i};return A.runKernel(Gu,s)}var Ik=R({sparseSegmentSum_:bH});function SH(r,t,e,o,n,i,s,a){let l=_(r,"data","stringNGrams","string");if(l.dtype!=="string")throw new Error("Data must be of datatype string");if(l.shape.length!==1)throw new Error(`Data must be a vector, saw: ${l.shape}`);let u=_(t,"dataSplits","stringNGrams");if(u.dtype!=="int32")throw new Error("Data splits must be of datatype int32");let c={separator:e,nGramWidths:o,leftPad:n,rightPad:i,padWidth:s,preserveShortSequences:a},p={data:l,dataSplits:u},d=A.runKernel(ju,p,c);return{nGrams:d[0],nGramsSplits:d[1]}}var Tk=R({stringNGrams_:SH});function wH(r,t,e=!0){let o=_(r,"input","stringSplit","string"),n=_(t,"delimiter","stringSplit","string");if(o.rank!==1)throw new Error(`Input should be Tensor1D but received shape ${o.shape}`);if(n.rank!==0)throw new Error(`Delimiter should be a scalar but received shape ${n.shape}`);let i={skipEmpty:e},s={input:o,delimiter:n},a=A.runKernel(Tm,s,i);return{indices:a[0],values:a[1],shape:a[2]}}var Ek=R({stringSplit_:wH});function _H(r,t){let e=_(r,"input","stringToHashBucketFast","string"),o={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");let n={input:e};return A.runKernel(Em,n,o)}var Nk=R({stringToHashBucketFast_:_H});function CH(r,t,e,o=!0){let n=_(r,"input","staticRegexReplace","string"),i={pattern:t,rewrite:e,replaceGlobal:o};return A.runKernel(Ku,{x:n},i)}var Rk=R({staticRegexReplace_:CH});var kH={fft:vc,ifft:Qs,rfft:bc,irfft:Rf},IH={hammingWindow:KC,hannWindow:Lf,frame:Mf,stft:qC},Yn={flipLeftRight:XC,grayscaleToRGB:YC,resizeNearestNeighbor:lk,resizeBilinear:ak,rgbToGrayscale:QC,rotateWithOffset:ZC,cropAndResize:jC,nonMaxSuppression:JC,nonMaxSuppressionAsync:rk,nonMaxSuppressionWithScore:ok,nonMaxSuppressionWithScoreAsync:nk,nonMaxSuppressionPadded:ik,nonMaxSuppressionPaddedAsync:sk,threshold:uk,transform:ck},TH={bandPart:pk,gramSchmidt:dk,qr:fk},EH={absoluteDifference:hk,computeWeightedLoss:ir,cosineDistance:gk,hingeLoss:xk,huberLoss:yk,logLoss:vk,meanSquaredError:bk,sigmoidCrossEntropy:Sk,softmaxCrossEntropy:wk},NH={sparseFillEmptyRows:_k,sparseReshape:Ck,sparseSegmentMean:kk,sparseSegmentSum:Ik},RH={stringNGrams:Tk,stringSplit:Ek,stringToHashBucketFast:Nk,staticRegexReplace:Rk};var PH=new Map,$H=new Map,Uf=class{getClassName(){return this.constructor.className}static fromConfig(t,e){return new t(e)}},sv=class r{constructor(){this.classNameMap={}}static getMap(){return r.instance==null&&(r.instance=new r),r.instance}static register(t){r.getMap().classNameMap[t.className]=[t,t.fromConfig]}};function Pk(r,t,e){F(r.className!=null,()=>"Class being registered does not have the static className property defined."),F(typeof r.className=="string",()=>"className is required to be a string, but got type "+typeof r.className),F(r.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),typeof t>"u"&&(t="Custom"),typeof e>"u"&&(e=r.className);let o=e,n=t+">"+o;return sv.register(r),PH.set(n,r),$H.set(r,n),r}var Or=class extends Uf{minimize(t,e=!1,o){let{value:n,grads:i}=this.computeGradients(t,o);if(o!=null){let s=o.map(a=>({name:a.name,tensor:i[a.name]}));this.applyGradients(s)}else this.applyGradients(i);return Xe(i),e?n:(n.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(t,e){return g2(t,e)}dispose(){this.iterations_!=null&&Xe(this.iterations_)}saveIterations(){return j(this,null,function*(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:Ne(this.iterations_,"int32")}})}getWeights(){return j(this,null,function*(){throw new Error("getWeights() is not implemented for this optimizer yet.")})}setWeights(t){return j(this,null,function*(){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)})}extractIterations(t){return j(this,null,function*(){return this.iterations_=(yield t[0].tensor.data())[0],t.slice(1)})}};Object.defineProperty(Or,Symbol.hasInstance,{value:r=>r.minimize!=null&&r.computeGradients!=null&&r.applyGradients!=null});var zf=class extends Or{static get className(){return"Adadelta"}constructor(t,e,o=null){super(),this.learningRate=t,this.rho=e,this.epsilon=o,this.accumulatedGrads=[],this.accumulatedUpdates=[],o==null&&(this.epsilon=A.backend.epsilon())}applyGradients(t){(Array.isArray(t)?t.map(o=>o.name):Object.keys(t)).forEach((o,n)=>{let i=A.registeredVariables[o],s=!1;this.accumulatedGrads[n]==null&&(this.accumulatedGrads[n]={originalName:`${o}/accum_grad`,variable:Ee(()=>Gt(i).variable(s))}),this.accumulatedUpdates[n]==null&&(this.accumulatedUpdates[n]={originalName:`${o}/accum_var`,variable:Ee(()=>Gt(i).variable(s))});let a=Array.isArray(t)?t[n].tensor:t[o];if(a==null)return;let l=this.accumulatedGrads[n].variable,u=this.accumulatedUpdates[n].variable;Ee(()=>{let c=xe(le(l,this.rho),le(Ht(a),1-this.rho)),p=le(De(Ar(xe(u,this.epsilon)),Ar(xe(l,this.epsilon))),a),d=xe(le(u,this.rho),le(Ht(p),1-this.rho));l.assign(c),u.assign(d);let m=xe(le(p,-this.learningRate),i);i.assign(m)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(Xe(this.accumulatedGrads.map(t=>t.variable)),Xe(this.accumulatedUpdates.map(t=>t.variable)))}getWeights(){return j(this,null,function*(){let t=[...this.accumulatedGrads,...this.accumulatedUpdates];return[yield this.saveIterations()].concat(t.map(e=>({name:e.originalName,tensor:e.variable})))})}setWeights(t){return j(this,null,function*(){t=yield this.extractIterations(t);let e=t.length/2,o=!1;this.accumulatedGrads=t.slice(0,e).map(n=>({originalName:n.name,variable:n.tensor.variable(o)})),this.accumulatedUpdates=t.slice(e,e*2).map(n=>({originalName:n.name,variable:n.tensor.variable(o)}))})}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.rho,e.epsilon)}};var Gf=class extends Or{static get className(){return"Adagrad"}constructor(t,e=.1){super(),this.learningRate=t,this.initialAccumulatorValue=e,this.accumulatedGrads=[]}applyGradients(t){(Array.isArray(t)?t.map(o=>o.name):Object.keys(t)).forEach((o,n)=>{let i=A.registeredVariables[o];this.accumulatedGrads[n]==null&&(this.accumulatedGrads[n]={originalName:`${o}/accumulator`,variable:Ee(()=>wn(i.shape,this.initialAccumulatorValue).variable(!1))});let s=Array.isArray(t)?t[n].tensor:t[o];if(s==null)return;let a=this.accumulatedGrads[n].variable;Ee(()=>{let l=xe(a,Ht(s));a.assign(l);let u=xe(le(De(s,Ar(xe(l,A.backend.epsilon()))),-this.learningRate),i);i.assign(u)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&Xe(this.accumulatedGrads.map(t=>t.variable))}getWeights(){return j(this,null,function*(){return[yield this.saveIterations()].concat(this.accumulatedGrads.map(t=>({name:t.originalName,tensor:t.variable})))})}setWeights(t){return j(this,null,function*(){t=yield this.extractIterations(t);let e=!1;this.accumulatedGrads=t.map(o=>({originalName:o.name,variable:o.tensor.variable(e)}))})}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(t,e){return new t(e.learningRate,e.initialAccumulatorValue)}};var Hf=class extends Or{static get className(){return"Adam"}constructor(t,e,o,n=null){super(),this.learningRate=t,this.beta1=e,this.beta2=o,this.epsilon=n,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],Ee(()=>{this.accBeta1=Ne(e).variable(),this.accBeta2=Ne(o).variable()}),n==null&&(this.epsilon=A.backend.epsilon())}applyGradients(t){let e=Array.isArray(t)?t.map(o=>o.name):Object.keys(t);Ee(()=>{let o=Re(1,this.accBeta1),n=Re(1,this.accBeta2);e.forEach((i,s)=>{let a=A.registeredVariables[i],l=!1;this.accumulatedFirstMoment[s]==null&&(this.accumulatedFirstMoment[s]={originalName:`${i}/m`,variable:Ee(()=>Gt(a).variable(l))}),this.accumulatedSecondMoment[s]==null&&(this.accumulatedSecondMoment[s]={originalName:`${i}/v`,variable:Ee(()=>Gt(a).variable(l))});let u=Array.isArray(t)?t[s].tensor:t[i];if(u==null)return;let c=this.accumulatedFirstMoment[s].variable,p=this.accumulatedSecondMoment[s].variable,d=xe(le(c,this.beta1),le(u,1-this.beta1)),m=xe(le(p,this.beta2),le(Ht(u),1-this.beta2)),f=De(d,o),g=De(m,n);c.assign(d),p.assign(m);let x=xe(le(De(f,xe(Ar(g),this.epsilon)),-this.learningRate),a);a.assign(x)}),this.accBeta1.assign(le(this.accBeta1,this.beta1)),this.accBeta2.assign(le(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&Xe(this.accumulatedFirstMoment.map(t=>t.variable)),this.accumulatedSecondMoment!=null&&Xe(this.accumulatedSecondMoment.map(t=>t.variable))}getWeights(){return j(this,null,function*(){let t=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[yield this.saveIterations()].concat(t.map(e=>({name:e.originalName,tensor:e.variable})))})}setWeights(t){return j(this,null,function*(){t=yield this.extractIterations(t),Ee(()=>{this.accBeta1.assign(Hn(this.beta1,this.iterations_+1)),this.accBeta2.assign(Hn(this.beta2,this.iterations_+1))});let e=t.length/2,o=!1;this.accumulatedFirstMoment=t.slice(0,e).map(n=>({originalName:n.name,variable:n.tensor.variable(o)})),this.accumulatedSecondMoment=t.slice(e,e*2).map(n=>({originalName:n.name,variable:n.tensor.variable(o)}))})}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon)}};var Kf=class extends Or{static get className(){return"Adamax"}constructor(t,e,o,n=null,i=0){super(),this.learningRate=t,this.beta1=e,this.beta2=o,this.epsilon=n,this.decay=i,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],Ee(()=>{this.iteration=Ne(0).variable(),this.accBeta1=Ne(e).variable()}),n==null&&(this.epsilon=A.backend.epsilon())}applyGradients(t){let e=Array.isArray(t)?t.map(o=>o.name):Object.keys(t);Ee(()=>{let o=Re(1,this.accBeta1),n=De(-this.learningRate,xe(le(this.iteration,this.decay),1));e.forEach((i,s)=>{let a=A.registeredVariables[i],l=!1;this.accumulatedFirstMoment[s]==null&&(this.accumulatedFirstMoment[s]={originalName:`${i}/m`,variable:Gt(a).variable(l)}),this.accumulatedWeightedInfNorm[s]==null&&(this.accumulatedWeightedInfNorm[s]={originalName:`${i}/v`,variable:Gt(a).variable(l)});let u=Array.isArray(t)?t[s].tensor:t[i];if(u==null)return;let c=this.accumulatedFirstMoment[s].variable,p=this.accumulatedWeightedInfNorm[s].variable,d=xe(le(c,this.beta1),le(u,1-this.beta1)),m=le(p,this.beta2),f=er(u),g=yf(m,f);c.assign(d),p.assign(g);let x=xe(le(De(n,o),De(d,xe(g,this.epsilon))),a);a.assign(x)}),this.iteration.assign(xe(this.iteration,1)),this.accBeta1.assign(le(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&Xe(this.accumulatedFirstMoment.map(t=>t.variable)),this.accumulatedWeightedInfNorm!=null&&Xe(this.accumulatedWeightedInfNorm.map(t=>t.variable))}getWeights(){return j(this,null,function*(){throw new Error("getWeights() is not implemented for Adamax yet.")})}setWeights(t){return j(this,null,function*(){throw new Error("setWeights() is not implemented for Adamax yet.")})}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon,e.decay)}};var Sc=class extends Or{static get className(){return"SGD"}constructor(t){super(),this.learningRate=t,this.setLearningRate(t)}applyGradients(t){(Array.isArray(t)?t.map(o=>o.name):Object.keys(t)).forEach((o,n)=>{let i=Array.isArray(t)?t[n].tensor:t[o];if(i==null)return;let s=A.registeredVariables[o];Ee(()=>{let a=xe(le(this.c,i),s);s.assign(a)})}),this.incrementIterations()}setLearningRate(t){this.learningRate=t,this.c!=null&&this.c.dispose(),this.c=$r(Ne(-t))}dispose(){this.c.dispose()}getWeights(){return j(this,null,function*(){return[yield this.saveIterations()]})}setWeights(t){return j(this,null,function*(){if(t=yield this.extractIterations(t),t.length!==0)throw new Error("SGD optimizer does not have settable weights.")})}getConfig(){return{learningRate:this.learningRate}}static fromConfig(t,e){return new t(e.learningRate)}};var qf=class extends Sc{static get className(){return"Momentum"}constructor(t,e,o=!1){super(t),this.learningRate=t,this.momentum=e,this.useNesterov=o,this.accumulations=[],this.m=Ne(this.momentum)}applyGradients(t){(Array.isArray(t)?t.map(o=>o.name):Object.keys(t)).forEach((o,n)=>{let i=A.registeredVariables[o];this.accumulations[n]==null&&(this.accumulations[n]={originalName:`${o}/momentum`,variable:Ee(()=>Gt(i).variable(!1))});let s=this.accumulations[n].variable,a=Array.isArray(t)?t[n].tensor:t[o];a!=null&&Ee(()=>{let l,u=xe(le(this.m,s),a);this.useNesterov?l=xe(le(this.c,xe(a,le(u,this.m))),i):l=xe(le(this.c,u),i),s.assign(u),i.assign(l)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&Xe(this.accumulations.map(t=>t.variable))}setMomentum(t){this.momentum=t}getWeights(){return j(this,null,function*(){return[yield this.saveIterations()].concat(this.accumulations.map(t=>({name:t.originalName,tensor:t.variable})))})}setWeights(t){return j(this,null,function*(){t=yield this.extractIterations(t);let e=!1;this.accumulations=t.map(o=>({originalName:o.name,variable:o.tensor.variable(e)}))})}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(t,e){return new t(e.learningRate,e.momentum,e.useNesterov)}};var jf=class extends Or{static get className(){return"RMSProp"}constructor(t,e=.9,o=0,n=null,i=!1){if(super(),this.learningRate=t,this.decay=e,this.momentum=o,this.epsilon=n,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=i,n==null&&(this.epsilon=A.backend.epsilon()),t==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(t){(Array.isArray(t)?t.map(o=>o.name):Object.keys(t)).forEach((o,n)=>{let i=A.registeredVariables[o],s=!1;this.accumulatedMeanSquares[n]==null&&(this.accumulatedMeanSquares[n]={originalName:`${o}/rms`,variable:Ee(()=>Gt(i).variable(s))}),this.accumulatedMoments[n]==null&&(this.accumulatedMoments[n]={originalName:`${o}/momentum`,variable:Ee(()=>Gt(i).variable(s))}),this.accumulatedMeanGrads[n]==null&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${o}/mg`,variable:Ee(()=>Gt(i).variable(s))});let a=Array.isArray(t)?t[n].tensor:t[o];if(a==null)return;let l=this.accumulatedMeanSquares[n].variable,u=this.accumulatedMoments[n].variable;Ee(()=>{let c=xe(le(l,this.decay),le(Ht(a),1-this.decay));if(this.centered){let p=this.accumulatedMeanGrads[n].variable,d=xe(le(p,this.decay),le(a,1-this.decay)),m=De(le(a,this.learningRate),Ar(Re(c,xe(Ht(d),this.epsilon)))),f=xe(le(u,this.momentum),m);l.assign(c),p.assign(d),u.assign(f);let g=Re(i,f);i.assign(g)}else{let p=xe(le(l,this.decay),le(Ht(a),1-this.decay)),d=xe(le(u,this.momentum),De(le(a,this.learningRate),Ar(xe(p,this.epsilon))));l.assign(p),u.assign(d);let m=Re(i,d);i.assign(m)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&Xe(this.accumulatedMeanSquares.map(t=>t.variable)),this.accumulatedMeanGrads!=null&&this.centered&&Xe(this.accumulatedMeanGrads.map(t=>t.variable)),this.accumulatedMoments!=null&&Xe(this.accumulatedMoments.map(t=>t.variable))}getWeights(){return j(this,null,function*(){let t=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&t.push(...this.accumulatedMeanGrads),[yield this.saveIterations()].concat(t.map(e=>({name:e.originalName,tensor:e.variable})))})}setWeights(t){return j(this,null,function*(){t=yield this.extractIterations(t);let e=this.centered?t.length/3:t.length/2,o=!1;this.accumulatedMeanSquares=t.slice(0,e).map(n=>({originalName:n.name,variable:n.tensor.variable(o)})),this.accumulatedMoments=t.slice(e,e*2).map(n=>({originalName:n.name,variable:n.tensor.variable(o)})),this.centered&&(this.accumulatedMeanGrads=t.slice(e*2,e*3).map(n=>({originalName:n.name,variable:n.tensor.variable(o)})))})}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(t,e){return new t(e.learningRate,e.decay,e.momentum,e.epsilon,e.centered)}};var AH=[zf,Gf,Hf,Kf,qf,jf,Sc];function $k(){for(let r of AH)Pk(r)}var Op={};pt(Op,{CompositeArrayBuffer:()=>or,browserFiles:()=>Dk,browserHTTPRequest:()=>Bk,concatenateArrayBuffers:()=>Zw,copyModel:()=>d_,decodeWeights:()=>Um,decodeWeightsStream:()=>zm,encodeWeights:()=>jw,fromMemory:()=>Vk,fromMemorySync:()=>mv,getLoadHandlers:()=>r_,getModelArtifactsForJSON:()=>pc,getModelArtifactsForJSONSync:()=>Vy,getModelArtifactsInfoForJSON:()=>vn,getSaveHandlers:()=>t_,getWeightSpecs:()=>Ip,http:()=>Yf,isHTTPScheme:()=>Xf,listModels:()=>c_,loadWeights:()=>Ok,moveModel:()=>m_,registerLoadRouter:()=>e_,registerSaveRouter:()=>Jw,removeModel:()=>p_,weightsLoaderFactory:()=>pv,withSaveHandler:()=>Wk,withSaveHandlerSync:()=>Uk});var DH="model",FH=".json",OH=".weights.bin";function Ak(r){return new Promise(t=>setTimeout(t)).then(r)}var av=(()=>{class r{constructor(e){if(!G().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(r.URL_SCHEME)&&(e=e.slice(r.URL_SCHEME.length)),(e==null||e.length===0)&&(e=DH),this.modelJsonFileName=e+FH,this.weightDataFileName=e+OH}save(e){return j(this,null,function*(){if(typeof document>"u")throw new Error("Browser downloads are not supported in this environment since `document` is not present");let o=or.join(e.weightData),n=window.URL.createObjectURL(new Blob([o],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{let i=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],s=Gm(e,i),a=window.URL.createObjectURL(new Blob([JSON.stringify(s)],{type:"application/json"})),l=this.modelJsonAnchor==null?document.createElement("a"):this.modelJsonAnchor;if(l.download=this.modelJsonFileName,l.href=a,yield Ak(()=>l.dispatchEvent(new MouseEvent("click"))),e.weightData!=null){let u=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;u.download=this.weightDataFileName,u.href=n,yield Ak(()=>u.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:vn(e)}}})}}return r.URL_SCHEME="downloads://",r})();var lv=class{constructor(t){if(t==null||t.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${t}`);this.jsonFile=t[0],this.weightsFiles=t.slice(1)}load(){return j(this,null,function*(){return new Promise((t,e)=>{let o=new FileReader;o.onload=n=>{let i=JSON.parse(n.target.result),s=i.modelTopology;if(s==null){e(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));return}if(i.weightsManifest==null){e(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));return}if(this.weightsFiles.length===0){t({modelTopology:s});return}let l=pc(i,u=>this.loadWeights(u));t(l)},o.onerror=n=>e(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),o.readAsText(this.jsonFile)})})}loadWeights(t){let e=[],o=[];for(let s of t)e.push(...s.weights),o.push(...s.paths);let n=this.checkManifestAndWeightFiles(t),i=o.map(s=>this.loadWeightsFile(s,n[s]));return Promise.all(i).then(s=>[e,s])}loadWeightsFile(t,e){return new Promise((o,n)=>{let i=new FileReader;i.onload=s=>{let a=s.target.result;o(a)},i.onerror=s=>n(`Failed to weights data from file of path '${t}'.`),i.readAsArrayBuffer(e)})}checkManifestAndWeightFiles(t){let e=[],o=this.weightsFiles.map(i=>By(i.name)),n={};for(let i of t)i.paths.forEach(s=>{let a=By(s);if(e.indexOf(a)!==-1)throw new Error(`Duplicate file basename found in weights manifest: '${a}'`);if(e.push(a),o.indexOf(a)===-1)throw new Error(`Weight file with basename '${a}' is not provided.`);n[s]=this.weightsFiles[o.indexOf(a)]});if(e.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${e.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return n}},LH=r=>G().getBool("IS_BROWSER")&&!Array.isArray(r)&&r.startsWith(av.URL_SCHEME)?MH(r.slice(av.URL_SCHEME.length)):null;Xt.registerSaveRouter(LH);function MH(r="model"){return new av(r)}function Dk(r){return new lv(r)}function uv(r,t,e,o){s(r),e=e??0,o=o??1,a(e,o);let n=0,i=l=>(l.then(u=>{let c=e+ ++n/r.length*(o-e);return t(c),u}),l);function s(l){F(l!=null&&Array.isArray(l)&&l.length>0,()=>"promises must be a none empty array")}function a(l,u){F(l>=0&&l<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${l}`),F(u>=0&&u<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${u}`),F(u>=l,()=>`startFraction must be no more than endFraction, but got startFraction ${l} and endFraction ${u}`)}return Promise.all(r.map(i))}function cv(r,t){return j(this,null,function*(){t==null&&(t={});let e=t.fetchFunc==null?G().platform.fetch:t.fetchFunc,o=r.map(p=>e(p,t.requestInit,{isBinary:!0})),a=(t.onProgress==null?yield Promise.all(o):yield uv(o,t.onProgress,0,.5)).map(p=>p.arrayBuffer());return t.onProgress==null?yield Promise.all(a):yield uv(a,t.onProgress,.5,1)})}function Fk(r,t){var e;let o=t.fetchFunc==null?G().platform.fetch:t.fetchFunc,n=0,i;return(e=t.onProgress)===null||e===void 0||e.call(t,0),new ReadableStream({pull:s=>j(null,null,function*(){for(var a;n<r.length;){i||(i=(yield o(r[n],t.requestInit,{isBinary:!0})).body.getReader());let{done:l,value:u}=yield i.read();if(l){n++,i=void 0,(a=t.onProgress)===null||a===void 0||a.call(t,n/r.length);continue}s.enqueue(u);return}s.close()})})}function Ok(r,t="",e,o){return j(this,null,function*(){return pv(s=>cv(s,{requestInit:o}))(r,t,e)})}function pv(r){return(t,e="",o)=>j(null,null,function*(){let n=t.map(()=>!1),i={},s=o!=null?o.map(()=>!1):[],a=[];if(t.forEach((m,f)=>{let g=0;m.weights.forEach(x=>{let y="quantization"in x?x.quantization.dtype:x.dtype,b=Un[y]*He(x.shape),I=()=>{n[f]=!0,i[f]==null&&(i[f]=[]),i[f].push({manifestEntry:x,groupOffset:g,sizeBytes:b})};o!=null?o.forEach((N,M)=>{N===x.name&&(I(),s[M]=!0)}):I(),a.push(x.name),g+=b})}),!s.every(m=>m)){let m=o.filter((f,g)=>!s[g]);throw new Error(`Could not find weights in manifest with names: ${m.join(", ")}. 
Manifest JSON has weights with names: ${a.join(", ")}.`)}let l=n.reduce((m,f,g)=>(f&&m.push(g),m),[]),u=[];l.forEach(m=>{t[m].paths.forEach(f=>{let g=e+(e.endsWith("/")?"":"/")+f;u.push(g)})});let c=yield r(u),p={},d=0;return l.forEach(m=>{let f=t[m].paths.length,g=new or(c.slice(d,d+f));i[m].forEach(y=>{let b=g.slice(y.groupOffset,y.groupOffset+y.sizeBytes),I=Um(b,[y.manifestEntry]);for(let N in I)p[N]=I[N]}),d+=f}),p})}var BH="application/octet-stream",VH="application/json",Lk=(()=>{class r{constructor(e,o){if(this.DEFAULT_METHOD="POST",o==null&&(o={}),this.weightPathPrefix=o.weightPathPrefix,this.weightUrlConverter=o.weightUrlConverter,o.fetchFunc!=null?(F(typeof o.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=o.fetchFunc):this.fetch=G().platform.fetch,F(e!=null&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&F(e.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,o.requestInit!=null&&o.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=o.requestInit||{},this.loadOptions=o}save(e){return j(this,null,function*(){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");let o=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);o.body=new FormData;let n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],i=Gm(e,n);if(o.body.append("model.json",new Blob([JSON.stringify(i)],{type:VH}),"model.json"),e.weightData!=null){let a=or.join(e.weightData);o.body.append("model.weights.bin",new Blob([a],{type:BH}),"model.weights.bin")}let s=yield this.fetch(this.path,o);if(s.ok)return{modelArtifactsInfo:vn(e),responses:[s]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${s.status}.`)})}loadModelJSON(){return j(this,null,function*(){let e=yield this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let o;try{o=yield e.json()}catch{let a=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?a+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":a+=" Please make sure the server is serving valid JSON for this request.",new Error(a)}let n=o.modelTopology,i=o.weightsManifest;if(n==null&&i==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return o})}load(){return j(this,null,function*(){if(this.loadOptions.streamWeights)return this.loadStream();let e=yield this.loadModelJSON();return pc(e,o=>this.loadWeights(o))})}loadStream(){return j(this,null,function*(){let e=yield this.loadModelJSON(),o=yield this.getWeightUrls(e.weightsManifest),n=Ip(e.weightsManifest),i=()=>Fk(o,this.loadOptions);return Object.assign(Object.assign({},e),{weightSpecs:n,getWeightStream:i})})}getWeightUrls(e){return j(this,null,function*(){let o=Array.isArray(this.path)?this.path[1]:this.path,[n,i]=WH(o),s=this.weightPathPrefix||n,a=[],l=[];for(let u of e)for(let c of u.paths)this.weightUrlConverter!=null?l.push(this.weightUrlConverter(c)):a.push(s+c+i);return this.weightUrlConverter&&a.push(...yield Promise.all(l)),a})}loadWeights(e){return j(this,null,function*(){let o=yield this.getWeightUrls(e),n=Ip(e),i=yield cv(o,this.loadOptions);return[n,i]})}}return r.URL_SCHEME_REGEX=/^https?:\/\//,r})();function WH(r){let t=r.lastIndexOf("/"),e=r.lastIndexOf("?"),o=r.substring(0,t),n=e>t?r.substring(e):"";return[o+"/",n]}function Xf(r){return r.match(Lk.URL_SCHEME_REGEX)!=null}var Mk=(r,t)=>{if(typeof fetch>"u"&&(t==null||t.fetchFunc==null))return null;{let e=!0;if(Array.isArray(r)?e=r.every(o=>Xf(o)):e=Xf(r),e)return Yf(r,t)}return null};Xt.registerSaveRouter(Mk);Xt.registerLoadRouter(Mk);function Yf(r,t){return new Lk(r,t)}function Bk(r,t){return Yf(r,t)}var Fp=class{constructor(t){this.modelArtifacts=t}load(){return this.modelArtifacts}},Qf=class{constructor(t){this.saveHandler=t}save(t){return this.saveHandler(t)}},dv=class{constructor(t){t.load&&(this.load=()=>Promise.resolve(t.load())),t.save&&(this.save=e=>Promise.resolve(t.save(e)))}};function Vk(r,t,e,o){let n=arguments;return new dv(mv(...n))}function mv(r,t,e,o){return arguments.length===1?r.modelTopology!=null||r.weightSpecs!=null?new Fp(r):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Fp({modelTopology:r})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Fp({modelTopology:r,weightSpecs:t,weightData:e,trainingConfig:o}))}function Wk(r){return new Qf(r)}function Uk(r){return new Qf(r)}var Ji={};pt(Ji,{draw:()=>XH,fromPixels:()=>YH,fromPixelsAsync:()=>KH,toPixels:()=>jH});var ra,zk=!1;function Gk(r,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(r==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let e=!1,o=!1,n=!1,i=!1,s=!1,a=!1;if(r.data instanceof Uint8Array)e=!0;else if(typeof ImageData<"u"&&r instanceof ImageData)o=!0;else if(typeof HTMLVideoElement<"u"&&r instanceof HTMLVideoElement)n=!0;else if(typeof HTMLImageElement<"u"&&r instanceof HTMLImageElement)i=!0;else if(r.getContext!=null)s=!0;else if(typeof ImageBitmap<"u"&&r instanceof ImageBitmap)a=!0;else throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${r.constructor.name}`);if(nc(Ns,A.backendName)!=null){let f={pixels:r},g={numChannels:t};return A.runKernel(Ns,f,g)}let[u,c]=n?[r.videoWidth,r.videoHeight]:[r.width,r.height],p;if(s)p=r.getContext("2d").getImageData(0,0,u,c).data;else if(o||e)p=r.data;else if(i||n||a){if(ra==null)if(typeof document>"u")if(typeof OffscreenCanvas<"u"&&typeof OffscreenCanvasRenderingContext2D<"u")ra=new OffscreenCanvas(1,1).getContext("2d");else throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");else ra=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});ra.canvas.width=u,ra.canvas.height=c,ra.drawImage(r,0,0,u,c),p=ra.getImageData(0,0,u,c).data}let d;if(t===4)d=new Int32Array(p);else{let f=u*c;d=new Int32Array(f*t);for(let g=0;g<f;g++)for(let x=0;x<t;++x)d[g*t+x]=p[g*4+x]}return Af(d,[c,u,t],"int32")}function UH(r){return r!=null&&r.data instanceof Uint8Array}function zH(){return typeof window<"u"&&typeof ImageBitmap<"u"&&window.hasOwnProperty("createImageBitmap")}function GH(r){return r!=null&&r.width!==0&&r.height!==0}function HH(r){return zH()&&!(r instanceof ImageBitmap)&&GH(r)&&!UH(r)}function KH(r,t=3){return j(this,null,function*(){let e=null;if(G().getBool("WRAP_TO_IMAGEBITMAP")&&HH(r)){let o;try{o=yield createImageBitmap(r,{premultiplyAlpha:"none"})}catch{o=null}o!=null&&o.width===r.width&&o.height===r.height?e=o:e=r}else e=r;return Gk(e,t)})}function Hk(r){if(r.rank!==2&&r.rank!==3)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${r.rank}.`);let t=r.rank===2?1:r.shape[2];if(t>4||t===2)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${t}`);if(r.dtype!=="float32"&&r.dtype!=="int32")throw new Error(`Unsupported type for toPixels: ${r.dtype}. Please use float32 or int32 tensors.`)}function qH(r){let t=r?.alpha||1;if(t>1||t<0)throw new Error(`Alpha value ${t} is suppoed to be in range [0 - 1].`)}function jH(r,t){return j(this,null,function*(){let e=_(r,"img","toPixels");if(!(r instanceof st)){let u=e;e=ze(u,"int32"),u.dispose()}Hk(e);let[o,n]=e.shape.slice(0,2),i=e.rank===2?1:e.shape[2],s=yield e.data(),a=e.dtype==="float32"?255:1,l=new Uint8ClampedArray(n*o*4);for(let u=0;u<o*n;++u){let c=[0,0,0,255];for(let d=0;d<i;d++){let m=s[u*i+d];if(e.dtype==="float32"){if(m<0||m>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${m}.`)}else if(e.dtype==="int32"&&(m<0||m>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${m}.`);i===1?(c[0]=m*a,c[1]=m*a,c[2]=m*a):c[d]=m*a}let p=u*4;l[p+0]=Math.round(c[0]),l[p+1]=Math.round(c[1]),l[p+2]=Math.round(c[2]),l[p+3]=Math.round(c[3])}if(t!=null){zk||nc(Sp,A.backendName)!=null&&(console.warn("tf.browser.toPixels is not efficient to draw tensor on canvas. Please try tf.browser.draw instead."),zk=!0),t.width=n,t.height=o;let u=t.getContext("2d"),c=new ImageData(l,n,o);u.putImageData(c,0,0)}return e!==r&&e.dispose(),l})}function XH(r,t,e){let o=_(r,"img","draw");if(!(r instanceof st)){let s=o;o=ze(s,"int32"),s.dispose()}Hk(o),qH(e?.imageOptions);let n={image:o},i={canvas:t,options:e};A.runKernel(Sp,n,i)}var YH=R({fromPixels_:Gk});function QH(r,t){let e=r.shape.length,o=t.shape.length;if(e<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${e}.`);if(o<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${o}.`);if(t.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[o-1]>e)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[o-1]} vs. ${e}`);if(He(r.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${r.shape}.`);let n=t.shape,i=n[n.length-1],s=1;for(let p=0;p<n.length-1;++p)s*=n[p];let a=r.shape,l=n.slice();l.pop();let u=1;for(let p=i;p<e;++p)u*=a[p],l.push(a[p]);let c=[...gn(r.shape).map(p=>p/u),1].slice(0,i);return[l,s,u,c]}var Kt={};pt(Kt,{assertParamsValid:()=>JH,computeFlatOffset:()=>n8,computeOutShape:()=>t8,getNormalizedAxes:()=>r8,isSliceContinous:()=>o8,maskToAxes:()=>e8,parseSliceParams:()=>i8,sliceInfo:()=>s8,startForAxis:()=>Jk,startIndicesWithElidedDims:()=>Yk,stopForAxis:()=>eI,stopIndicesWithElidedDims:()=>Qk,stridesForAxis:()=>Zk,stridesWithElidedDims:()=>qk});var fv=-2,ZH=-1;function JH(r,t,e){let o=r.shape.length;F(o===t.length,()=>`Error in slice${o}D: Length of begin ${t} must match the rank of the array (${o}).`),F(o===e.length,()=>`Error in slice${o}D: Length of size ${e} must match the rank of the array (${o}).`);for(let n=0;n<o;++n)F(t[n]+e[n]<=r.shape[n],()=>`Error in slice${o}D: begin[${n}] + size[${n}] (${t[n]+e[n]}) would overflow input.shape[${n}] (${r.shape[n]})`)}function e8(r){let t=[],e=0;for(;r>0;)r&1&&t.push(e),r/=2,e++;return t}function t8(r,t,e){let o=[];for(let n=0;n<r.length;n++)o[n]=Math.ceil((t[n]-r[n])/e[n]);return o}function qk(r,t,e,o){let n=[...r];for(let i=n.length;i<o.length;i++)n.push(1);for(let i=0;i<e;i++)i===0?n[t]=1:(n.splice(t,0,1),n.pop());return n}function jk(r,t,e){return e<=r?e:e-(t-1)}function Xk(r,t){let e=[];for(let o=0;o<r;o++)e.push(t+o);return e}function r8(r,t,e,o,n,i,s,a,l){let u=r.length,c=new Array(u),p=new Array(u),d=new Array(u);if(t.length&&e>0){let m=t[0],f=e+1;c=Yk(s,m,f,o,r),p=Qk(a,m,f,n,r),d=qk(i,m,f,r)}else for(let m=0;m<u;m++)c[m]=Jk(s,o,i,r,m,l),p[m]=eI(a,n,i,r,m,l),d[m]=Zk(i,m,l);return{begin:c,end:p,strides:d}}function Yk(r,t,e,o,n){let i=[...n],s=Xk(e,t);for(let a=0;a<i.length;a++)if(s.indexOf(a)>-1)i[a]=0;else{let l=jk(t,e,a),u=o[l];r&1<<l&&(u=0),i[a]=u}return i}function Qk(r,t,e,o,n){let i=[...n],s=Xk(e,t);for(let a=0;a<i.length;a++)if(s.indexOf(a)>-1)i[a]=Number.MAX_SAFE_INTEGER;else{let l=jk(t,e,a),u=o[l];r&1<<l&&(u=Number.MAX_SAFE_INTEGER),i[a]=u}for(let a=0;a<i.length;a++){let l=n[a];i[a]<0&&(i[a]+=l),i[a]=Ga(0,i[a],n[a])}return i}function Zk(r,t,e){let o=r[t];return(e&1<<t||o==null)&&(o=1),o}function Jk(r,t,e,o,n,i){let s=t[n],a=e[n]||1;(r&1<<n||i&1<<n||s==null)&&(a>0?s=Number.MIN_SAFE_INTEGER:s=Number.MAX_SAFE_INTEGER);let l=o[n];return s<0&&(s+=l),s=Ga(0,s,l-1),s}function eI(r,t,e,o,n,i){let s=t[n],a=e[n]||1;(r&1<<n||i&1<<n||s==null)&&(a>0?s=Number.MAX_SAFE_INTEGER:s=Number.MIN_SAFE_INTEGER);let l=o[n];return s<0&&(s+=l),a>0?s=Ga(0,s,l):s=Ga(-1,s,l-1),s}function o8(r,t,e){let o=e.length;for(let n=0;n<e.length;n++)if(e[n]>1){o=n;break}for(let n=o+1;n<e.length;n++)if(t[n]>0||e[n]!==r[n])return!1;return!0}function n8(r,t){let e=r.length>0?r[r.length-1]:1;for(let o=0;o<r.length-1;o++)e+=r[o]*t[o];return e}function i8(r,t,e){let o,n=r.shape.length;typeof t=="number"?o=[t,...new Array(n-1).fill(0)]:t.length<n?o=t.concat(new Array(n-t.length).fill(0)):o=t.slice(),o.forEach(s=>{F(s!==-1,()=>"slice() does not support negative begin indexing.")});let i;return e==null?i=new Array(n).fill(-1):typeof e=="number"?i=[e,...new Array(n-1).fill(-1)]:e.length<n?i=e.concat(new Array(n-e.length).fill(-1)):i=e,i=i.map((s,a)=>s>=0?s:(F(s===-1,()=>`Negative size values should be exactly -1 but got ${s} for the slice() size at index ${a}.`),r.shape[a]-o[a])),[o,i]}function s8(r,t,e,o,n,i,s,a,l){let u;if(o==null?(u=new Array(t.length),u.fill(1)):u=o,s!=null&&(s&s-1)!==0)throw new Error("Multiple ellipses in slice is not allowed.");let c=!1,p={dims:u.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:e.slice(),strides:u.slice(),beginMask:n,endMask:i,ellipsisMask:s,newAxisMask:a,shrinkAxisMask:l};for(let I=0;I<p.dims;I++)c&&(1<<I&a)!==0&&p.numAddAxisAfterEllipsis++,1<<I&s&&(c=!0);c||(p.ellipsisMask|=1<<p.dims,p.dims++);let d={dims:r.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};a8(p,d);let m=!0,f=!0,g=!0,x=[],y=[];for(let I=0;I<r.length;++I){if(d.strides[I]===0)throw Error(`strides[${I}] must be non-zero`);let N=!!(d.shrinkAxisMask&1<<I),M=r[I];if(M===-1){x.push(N?1:-1);continue}let B=[d.beginMask&1<<I,d.endMask&1<<I],W=[d.strides[I]>0?0:-1,d.strides[I]>0?M:M-1];if(N&&d.strides[I]<=0)throw Error("only stride 1 allowed on non-range indexing.");g=g&&d.strides[I]===1;let H=!!(d.beginMask&1<<I&&d.endMask&1<<I);if(d.beginValid&&d.endValid){if(N){let ce=d.begin[I]<0?M+d.begin[I]:d.begin[I];if(d.begin[I]=ce,d.end[I]=d.begin[I]+1,ce<0||ce>=M)throw Error(`slice index ${d.begin[I]} of dimension ${I} out of bounds.`)}else d.begin[I]=Kk(d.begin[I],0,d.strides[I],M,B,W),d.end[I]=Kk(d.end[I],1,d.strides[I],M,B,W);let re=d.strides[I]===1&&d.begin[I]===0&&d.end[I]===M;m=m&&re,f=f&&(I===0&&d.strides[I]===1||re)}else m=m&&d.strides[I]===1&&H,f=f&&(I===0&&d.strides[I]===1||H);let K,X=!1;if(d.beginValid&&d.endValid?(K=d.end[I]-d.begin[I],X=!0):N?(K=1,X=!0):H&&M>=0&&(d.strides[I]<0?K=-M:K=M,X=!0),X){let re;K===0||K<0!=d.strides[I]<0?re=0:re=Math.trunc(K/d.strides[I])+(K%d.strides[I]!==0?1:0),x.push(re)}else x.push(-1)}for(let I=0;I<d.finalShapeGatherIndices.length;++I){let N=d.finalShapeGatherIndices[I];N>=0?y.push(x[N]):N===fv&&y.push(1)}return{finalShapeSparse:y.filter((I,N)=>d.finalShapeGatherIndices[N]!==fv),finalShape:y,isIdentity:m,sliceDim0:f,isSimpleSlice:g,begin:d.begin,end:d.end,strides:d.strides}}function a8(r,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let e=0;t.beginValid=r.begin!=null,t.endValid=r.end!=null,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let o=0;o<r.dims;o++)if(1<<o&r.ellipsisMask){let n=Math.min(t.dims-(r.dims-o)+1+r.numAddAxisAfterEllipsis,t.dims);for(;e<n;e++)t.begin[e]=0,t.end[e]=0,t.strides[e]=1,t.beginMask|=1<<e,t.endMask|=1<<e,t.finalShapeGatherIndices.push(e),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[e]=o}else if(1<<o&r.newAxisMask)t.finalShapeGatherIndices.push(fv),t.finalShapeGatherIndicesSparse.push(-1);else{if(e===t.begin.length)throw Error(`Index out of range using input dim ${e}; input has only ${t.dims} dims, ${t.begin.length}.`);r.begin!=null&&(t.begin[e]=r.begin[o]),r.end!=null&&(t.end[e]=r.end[o]),t.strides[e]=r.strides[o],r.beginMask&1<<o&&(t.beginMask|=1<<e),r.endMask&1<<o&&(t.endMask|=1<<e),r.shrinkAxisMask&1<<o?(t.finalShapeGatherIndices.push(ZH),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<e):(t.finalShapeGatherIndices.push(e),t.finalShapeGatherIndicesSparse.push(o)),t.inputShapeGatherIndicesSparse[e]=o,e++}}function Kk(r,t,e,o,n,i){if(n[t])return e>0?i[t]:i[t+1&1];{let s=r<0?o+r:r;return s<i[0]?i[0]:s>i[1]?i[1]:s}}var l8=typeof requestAnimationFrame<"u"?requestAnimationFrame:typeof setImmediate<"u"?setImmediate:r=>r();function hv(){return new Promise(r=>l8(()=>r()))}var P={};pt(P,{ERF_A1:()=>k8,ERF_A2:()=>I8,ERF_A3:()=>T8,ERF_A4:()=>E8,ERF_A5:()=>N8,ERF_P:()=>C8,PARALLELIZE_THRESHOLD:()=>Zf,RowPartitionType:()=>Qn,SELU_SCALE:()=>_8,SELU_SCALEALPHA:()=>w8,applyActivation:()=>ea,assertAndGetBroadcastShape:()=>Je,assertAxesAreInnerMostDims:()=>qz,assertParamsConsistent:()=>u8,assignToTypedArray:()=>F8,axesAreInnerMostDims:()=>Yy,calculateShapes:()=>rG,checkEinsumDimSizes:()=>W8,checkPadOnDimRoundingMode:()=>Lt,combineLocations:()=>a2,combineRaggedTensorToTensorShapes:()=>p8,complexWithEvenIndex:()=>$8,complexWithOddIndex:()=>A8,computeConv2DInfo:()=>Gs,computeConv3DInfo:()=>E_,computeDefaultPad:()=>Xy,computeDilation2DInfo:()=>HU,computeOptimalWindowSize:()=>h8,computeOutAndReduceShapes:()=>Kz,computeOutShape:()=>c8,computePool2DInfo:()=>jy,computePool3DInfo:()=>KU,convertConv2DDataFormat:()=>N_,decodeEinsumEquation:()=>B8,eitherStridesOrDilationsAreOne:()=>hr,expandShapeToKeepDim:()=>Gn,exponent:()=>L8,exponents:()=>O8,fromStringArrayToUint8:()=>l7,fromUint8ToStringArray:()=>a7,getAxesPermutation:()=>jz,getBroadcastDims:()=>r2,getComplexWithIndex:()=>D8,getEinsumComputePath:()=>U8,getEinsumPermutation:()=>V8,getFusedBiasGradient:()=>Js,getFusedDyActivation:()=>Zs,getImageCenter:()=>g8,getInnerMostAxes:()=>Yz,getPermuted:()=>y8,getRaggedRank:()=>m8,getReductionAxes:()=>rf,getReshaped:()=>x8,getReshapedPermuted:()=>v8,getRowPartitionTypesHelper:()=>d8,getSliceBeginCoords:()=>b8,getSliceSize:()=>S8,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>K8,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>q8,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>j8,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>Q8,getSparseReshapeInputOutputMismatchErrorMessage:()=>J8,getSparseReshapeInputOutputMultipleErrorMessage:()=>Z8,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>X8,getSparseReshapeNegativeOutputDimErrorMessage:()=>Y8,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>o7,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>e7,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>t7,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>r7,getUndoAxesPermutation:()=>Xz,isIdentityPermutation:()=>z8,log:()=>OW,mergeRealAndImagArrays:()=>R8,prepareAndValidate:()=>QH,prepareSplitSize:()=>H8,segment_util:()=>xv,shouldFuse:()=>ta,slice_util:()=>Kt,splitRealAndImagArrays:()=>P8,stridesOrDilationsArePositive:()=>bn,tupleValuesAreOne:()=>zs,upcastType:()=>Et,validateDefaultValueShape:()=>f8,validateInput:()=>Ap,validateUpdateShape:()=>NC,warn:()=>Bn});function u8(r,t){let e=r[0].length;r.forEach((n,i)=>{F(n.length===e,()=>`Error in concat${e}D: rank of tensors[${i}] must be the same as the rank of the rest (${e})`)}),F(t>=0&&t<e,()=>`Error in concat${e}D: axis must be between 0 and ${e-1}.`);let o=r[0];r.forEach((n,i)=>{for(let s=0;s<e;s++)F(s===t||n[s]===o[s],()=>`Error in concat${e}D: Shape of tensors[${i}] (${n}) does not match the shape of the rest (${o}) along the non-concatenated axis ${i}.`)})}function c8(r,t){let e=r[0].slice();for(let o=1;o<r.length;o++)e[t]+=r[o][t];return e}var Qn=function(r){return r[r.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",r[r.VALUE_ROWIDS=1]="VALUE_ROWIDS",r[r.ROW_LENGTHS=2]="ROW_LENGTHS",r[r.ROW_SPLITS=3]="ROW_SPLITS",r[r.ROW_LIMITS=4]="ROW_LIMITS",r[r.ROW_STARTS=5]="ROW_STARTS",r}(Qn||{});function p8(r,t,e){let o=new Array;if(e==null&&t==null)return o;if(t==null)for(;o.length<r+e.length;)o.push(-1);else o=t.slice();if(e==null)return o;if(r+e.length!==o.length)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.rank = ${r+e.length}, but shape.rank = ${o.length}`);for(let n=1;n<e.length;++n){let i=e[n],s=o[o.length-e.length+n],a=o[s];if(i>=0)if(a>=0){if(a!==i)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.shape[${n+r}] = ${i} but shape[${n+r}] = ${a}`)}else o[s]=i}return o}function d8(r){let t={FIRST_DIM_SIZE:Qn.FIRST_DIM_SIZE,VALUE_ROWIDS:Qn.VALUE_ROWIDS,ROW_LENGTHS:Qn.ROW_LENGTHS,ROW_SPLITS:Qn.ROW_SPLITS,ROW_LIMITS:Qn.ROW_LIMITS,ROW_STARTS:Qn.ROW_STARTS},e=[];for(let o of r)if(o in t)e.push(t[o]);else break;return e}function m8(r){return r.length===0?0:r[0]===Qn.FIRST_DIM_SIZE?r.length-1:r.length}function f8(r,t){if(r==null||t==null)return;let e=r.length,o=t.length;if(e>=o)throw new Error(`defaultValue.shape=${r} and ragged tensor flatValues.shape=${t}, are incompatible: defaultValue.rank = ${e} must be less than ragged tensor input flatValues.rank = ${o})`);for(let n=0;n<Math.min(e,o-1);++n){let i=r[n],s=t[n+1];if(i>=0&&s>=0&&i!==1&&i!==s)throw new Error(`defaultValue.shape=${r}, and ragged tensor input flatValues.shape=${t} are incompatible: defaultValue.shape[${n-r.length}] = ${i} but ragged tensor input.flatValues.shape[${n-r.length}] = ${s}`)}}var Zf=30;function h8(r){return r<=Zf?r:ja(r,Math.floor(Math.sqrt(r)))}function g8(r,t,e){let o=e*(typeof r=="number"?r:r[0]),n=t*(typeof r=="number"?r:r[1]);return[o,n]}function x8(r,t,e,o=!0){let n=[];if(o)n=n.concat(t.slice(0)),n.push(r[0]/e),n=n.concat(r.slice(1));else{n=n.concat(r[0]);let i=t.length;for(let s=0;s<i;++s)n=n.concat([r[s+1]/t[s],t[s]]);n=n.concat(r.slice(i+1))}return n}function y8(r,t,e=!0){let o=[];if(e){o.push(t);for(let n=t+1;n<r;++n)n<=2*t?(o.push(n),o.push(n-(t+1))):o.push(n)}else{let n=[],i=[];for(let s=1;s<r;++s)s>=t*2+1||s%2===1?i.push(s):n.push(s);o.push(...n),o.push(0),o.push(...i)}return o}function v8(r,t,e,o=!0){let n=[];o?n.push(r[0]/e):n.push(r[0]*e);for(let i=1;i<r.length;++i)i<=t.length?o?n.push(t[i-1]*r[i]):n.push(r[i]/t[i-1]):n.push(r[i]);return n}function b8(r,t){let e=[0];for(let o=0;o<t;++o)e.push(r[o][0]);return e}function S8(r,t,e){let o=r.slice(0,1);for(let n=0;n<e;++n)o.push(r[n+1]-t[n][0]-t[n][1]);return o}var w8=1.7580993408473768,_8=1.0507009873554805;var C8=.3275911,k8=.254829592,I8=-.284496736,T8=1.421413741,E8=-1.453152027,N8=1.061405429;function R8(r,t){if(r.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${r.length}, imag: ${t.length}.`);let e=new Float32Array(r.length*2);for(let o=0;o<e.length;o+=2)e[o]=r[o/2],e[o+1]=t[o/2];return e}function P8(r){let t=new Float32Array(r.length/2),e=new Float32Array(r.length/2);for(let o=0;o<r.length;o+=2)t[o/2]=r[o],e[o/2]=r[o+1];return{real:t,imag:e}}function $8(r){let t=Math.ceil(r.length/4),e=new Float32Array(t),o=new Float32Array(t);for(let n=0;n<r.length;n+=4)e[Math.floor(n/4)]=r[n],o[Math.floor(n/4)]=r[n+1];return{real:e,imag:o}}function A8(r){let t=Math.floor(r.length/4),e=new Float32Array(t),o=new Float32Array(t);for(let n=2;n<r.length;n+=4)e[Math.floor(n/4)]=r[n],o[Math.floor(n/4)]=r[n+1];return{real:e,imag:o}}function D8(r,t){let e=r[t*2],o=r[t*2+1];return{real:e,imag:o}}function F8(r,t,e,o){r[o*2]=t,r[o*2+1]=e}function O8(r,t){let e=new Float32Array(r/2),o=new Float32Array(r/2);for(let n=0;n<Math.ceil(r/2);n++){let i=(t?2:-2)*Math.PI*(n/r);e[n]=Math.cos(i),o[n]=Math.sin(i)}return{real:e,imag:o}}function L8(r,t,e){let o=(e?2:-2)*Math.PI*(r/t),n=Math.cos(o),i=Math.sin(o);return{real:n,imag:i}}var gv="->",M8=/->/g,tI=",",rI="...";function B8(r,t){r=r.replace(/\s/g,"");let e=(r.length-r.replace(M8,"").length)/gv.length;if(e<1)throw new Error("Equations without an arrow are not supported.");if(e>1)throw new Error(`Equation must contain exactly one arrow ("${gv}").`);let[o,n]=r.split(gv);F(o.indexOf(rI)===-1,()=>`The ellipsis notation ("${rI}") is not supported yet.`);let i=o.split(tI),s=i.length;if(t!==s)throw new Error(`Expected ${s} input tensors, received ${t}`);if(s>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");let a=[];for(let d=0;d<n.length;++d){let m=n[d];if(!i.some(f=>f.indexOf(m)!==-1))throw new Error(`Output subscripts contain the label ${m} not present in the input subscripts.`);a.indexOf(m)===-1&&a.push(m)}for(let d=0;d<o.length;++d){let m=o[d];a.indexOf(m)===-1&&m!==tI&&a.push(m)}let l=new Array(i.length);for(let d=0;d<s;++d){if(new Set(i[d].split("")).size!==i[d].length)throw new Error(`Found duplicate axes in input component ${i[d]}. Support for duplicate axes in input is not implemented yet.`);l[d]=[];for(let m=0;m<i[d].length;++m)l[d].push(a.indexOf(i[d][m]))}let u=a.length,c=n.length,p=[];for(let d=c;d<u;++d)p.push(d);return{allDims:a,summedDims:p,idDims:l}}function V8(r,t){let e=new Array(r);e.fill(-1);for(let n=0;n<t.length;++n)e[t[n]]=n;let o=[];for(let n=0;n<r;++n)e[n]===-1&&o.push(n);return e=e.filter(n=>n!==-1),{permutationIndices:e,expandDims:o}}function W8(r,t,e){let o=new Array(r);for(let n=0;n<e.length;++n){let i=e[n].shape;for(let s=0;s<t[n].length;++s)o[t[n][s]]===void 0?o[t[n][s]]=i[s]:F(o[t[n][s]]===i[s],()=>`Expected dimension ${o[t[n][s]]} at axis ${s} of input shaped ${JSON.stringify(i)}, but got dimension ${i[s]}`)}}function U8(r,t){let e=r,o=[],n=0;r.length===0&&e.push(-1),n=r.length+1;for(let s=0;s<n;++s)o.push([]);let i=[];for(let s=0;s<e.length;++s){let a=e[s],l=G8(t,a);for(let u of l)i.indexOf(u)===-1&&(o[s].push(u),i.push(u))}return{path:e,steps:o}}function z8(r){return r.every((t,e)=>t===e)}function G8(r,t){let e=[];for(let o=0;o<r.length;++o)(r[o].length===0||r[o].indexOf(t)!==-1||t===-1)&&e.push(o);return e}function H8(r,t,e=0){let o=[];if(typeof t=="number")F(r.shape[e]%t===0,()=>"Number of splits must evenly divide the axis."),o=new Array(t).fill(r.shape[e]/t);else{let n=t.reduce((s,a)=>(a===-1&&(s+=1),s),0);F(n<=1,()=>"There should be only one negative value in split array.");let i=t.indexOf(-1);if(i!==-1){let s=t.reduce((a,l)=>l>0?a+l:a);t[i]=r.shape[e]-s}F(r.shape[e]===t.reduce((s,a)=>s+a),()=>"The sum of sizes must match the size of the axis dimension."),o=t}return o}function K8(r){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${r}`}function q8(r,t){return`indices(${r}, 0) is invalid: ${t} < 0`}function j8(r,t,e){return`indices(${r}, 0) is invalid: ${t} >= ${e}`}function X8(r,t){return`only one output dimension may be -1, not both ${r} and ${t}`}function Y8(r,t){return`size ${r} must be non-negative, not ${t}`}function Q8(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function Z8(r,t){let e=He(r),o=He(t);return`Input to reshape is a SparseTensor with ${e}
  dense values, but the requested shape requires a multiple of ${o}. inputShape=${r} outputShape= ${t}`}function J8(r,t){let e=He(r),o=He(t);return`Input to reshape is a tensor with ${e} dense values, but the requested shape has ${o}. inputShape=${r} outputShape=${t}`}function e7(){return"segment ids must be >= 0"}function t7(){return"segment ids are not increasing"}function r7(r,t){return`Segment id ${r} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function o7(r,t,e){return`Bad: indices[${r}] == ${t} out of range [0, ${e})`}var xv={};pt(xv,{collectGatherOpShapeInfo:()=>s7,computeOutShape:()=>i7,segOpComputeOptimalWindowSize:()=>n7});function n7(r,t){let e=!1,o;for(r<=Zf?(o=r,e=!0):o=ja(r,Math.floor(Math.sqrt(r)));!e;)o>t||o===r?e=!0:o=ja(r,o+1);return o}function i7(r,t,e){let o=[],n=r.length;for(let i=0;i<n;i++)i!==t?o.push(r[i]):o.push(e);return o}function s7(r,t,e,o){let n=t.shape.length,i=r.shape.length;if(o!==0&&(o<-n||o>n))throw new Error(`Expect batchDims in the range of [-${n}, ${n}], but got ${o}`);if(o<0&&(o+=n),o>i)throw new Error(`batchDims (${o}) must be less than rank(x) (
    ${i}).`);if(e<o)throw new Error(`batchDims (${o}) must be less than or equal to axis (${e}).`);for(let p=0;p<o;++p)if(r.shape[p]!==t.shape[p])throw new Error(`x.shape[${p}]: ${r.shape[p]} should be equal to indices.shape[${p}]: ${t.shape[p]}.`);let s=r.shape[e],a=[],l=1,u=1,c=1;for(let p=0;p<o;++p)a.push(r.shape[p]),l*=r.shape[p];for(let p=o;p<e;p++)a.push(r.shape[p]),u*=r.shape[p];for(let p=o;p<n;p++)a.push(t.shape[p]);for(let p=e+1;p<i;p++)a.push(r.shape[p]),c*=r.shape[p];return{batchSize:l,sliceSize:c,outerSize:u,dimSize:s,outputShape:a}}function a7(r){try{return r.map(t=>uc(t))}catch(t){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${t}`)}}function l7(r){return r.map(t=>lc(t))}var io={};pt(io,{nonMaxSuppressionV3Impl:()=>Bf,nonMaxSuppressionV4Impl:()=>Vf,nonMaxSuppressionV5Impl:()=>Wf,whereImpl:()=>Df});$k();var u7=G();u7.registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,r=>{r&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")});var so=function(r){return r[r.DT_INVALID=0]="DT_INVALID",r[r.DT_FLOAT=1]="DT_FLOAT",r[r.DT_DOUBLE=2]="DT_DOUBLE",r[r.DT_INT32=3]="DT_INT32",r[r.DT_UINT8=4]="DT_UINT8",r[r.DT_INT16=5]="DT_INT16",r[r.DT_INT8=6]="DT_INT8",r[r.DT_STRING=7]="DT_STRING",r[r.DT_COMPLEX64=8]="DT_COMPLEX64",r[r.DT_INT64=9]="DT_INT64",r[r.DT_BOOL=10]="DT_BOOL",r[r.DT_QINT8=11]="DT_QINT8",r[r.DT_QUINT8=12]="DT_QUINT8",r[r.DT_QINT32=13]="DT_QINT32",r[r.DT_BFLOAT16=14]="DT_BFLOAT16",r[r.DT_QINT16=15]="DT_QINT16",r[r.DT_QUINT16=16]="DT_QUINT16",r[r.DT_UINT16=17]="DT_UINT16",r[r.DT_COMPLEX128=18]="DT_COMPLEX128",r[r.DT_HALF=19]="DT_HALF",r[r.DT_RESOURCE=20]="DT_RESOURCE",r[r.DT_VARIANT=21]="DT_VARIANT",r[r.DT_UINT32=22]="DT_UINT32",r[r.DT_UINT64=23]="DT_UINT64",r[r.DT_FLOAT_REF=101]="DT_FLOAT_REF",r[r.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",r[r.DT_INT32_REF=103]="DT_INT32_REF",r[r.DT_UINT8_REF=104]="DT_UINT8_REF",r[r.DT_INT16_REF=105]="DT_INT16_REF",r[r.DT_INT8_REF=106]="DT_INT8_REF",r[r.DT_STRING_REF=107]="DT_STRING_REF",r[r.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",r[r.DT_INT64_REF=109]="DT_INT64_REF",r[r.DT_BOOL_REF=110]="DT_BOOL_REF",r[r.DT_QINT8_REF=111]="DT_QINT8_REF",r[r.DT_QUINT8_REF=112]="DT_QUINT8_REF",r[r.DT_QINT32_REF=113]="DT_QINT32_REF",r[r.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",r[r.DT_QINT16_REF=115]="DT_QINT16_REF",r[r.DT_QUINT16_REF=116]="DT_QUINT16_REF",r[r.DT_UINT16_REF=117]="DT_UINT16_REF",r[r.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",r[r.DT_HALF_REF=119]="DT_HALF_REF",r[r.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",r[r.DT_VARIANT_REF=121]="DT_VARIANT_REF",r[r.DT_UINT32_REF=122]="DT_UINT32_REF",r[r.DT_UINT64_REF=123]="DT_UINT64_REF",r}(so||{}),oI;(function(r){let t;(function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"})(t=r.CheckpointFormatVersion||(r.CheckpointFormatVersion={}))})(oI||(oI={}));var p7={};function eh(r){return p7[r]}function w(r,t,e,o,n){let i=t.inputParams[r];if(i&&i.inputIndexStart!==void 0){let a=i.inputIndexStart,l=i.inputIndexEnd===0?void 0:i.inputIndexEnd===void 0?a+1:i.inputIndexEnd,u=a<0?t.inputNames.length+a:a;if(i.type==="tensor")return Bt(t.inputNames[u],e,o,n);if(i.type==="tensors"){let d=t.inputs.slice(a,l);return t.inputNames.slice(a,l).filter((f,g)=>{var x;return((x=d[g])===null||x===void 0?void 0:x.op)!=="NoOp"}).map(f=>Bt(f,e,o,n))}let c=Bt(t.inputNames[u],e,o,n),p=c.dataSync();return i.type==="number"?p[0]:S.toNestedArray(c.shape,p)}let s=t.attrParams[r];return s&&s.value}function Bt(r,t,e,o){let[n,i]=Ir(r,e);if(o!=null){let a=o.getHashTableHandleByName(n);if(a!=null)return a}let s=e.currentContextIds.find(a=>!!t[th(n,a)]);return s!==void 0?t[th(n,s)][i]:void 0}function yv(r,t,e){return t[th(r,e.currentContextId)]}function qo(r,t){let[e,o,n]=Ir(r,t);return[th(e,t&&t.currentContextId),o,n]}function th(r,t){return t?`${r}-${t}`:r}function Ir(r,t){if(r==="")return["",0,void 0];let e=t!=null&&t.parseNodeNameCache!=null;if(e){let i=t.parseNodeNameCache.get(r);if(i!=null)return i}let o=r.split(":"),n;if(o.length===1)n=[r,0,void 0];else{let i=o[0],s=o.length===3?o[1]:void 0,a=Number(o[o.length-1]);n=[i,a,s]}return e&&t.parseNodeNameCache.set(r,n),n}function Lp(r,t,e){let o=w("pad",r,t,e);if(o==="explicit"){o=w("explicitPaddings",r,t,e);let n=[[0,0],[0,0],[0,0],[0,0]];for(let i=0;i<4;i++)n[i][0]=o[i*2],n[i][1]=o[i*2+1];return n}return o}function jo(r){return r.kept?r:ro(r)}var vv={};pt(vv,{json:()=>d7});var d7=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var bv={};pt(bv,{json:()=>m7});var m7=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsFinite",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsInf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var Sv={};pt(Sv,{json:()=>f7});var f7=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}];var wv={};pt(wv,{json:()=>h7});var h7=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}];var _v={};pt(_v,{json:()=>g7});var g7=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniformInt",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number"},{tfName:"maxval",name:"maxval",type:"number"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}];var Cv={};pt(Cv,{json:()=>x7});var x7=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var kv={};pt(kv,{json:()=>y7});var y7=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}];var Iv={};pt(Iv,{json:()=>v7});var v7=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}];var Tv={};pt(Tv,{json:()=>b7});var b7=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"InitializeTable",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]},{tfOpName:"InitializeTableV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]}];var Ev={};pt(Ev,{json:()=>S7});var S7=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}];var Nv={};pt(Nv,{json:()=>w7});var w7=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BitwiseAnd",category:"logical",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}]}];var Rv={};pt(Rv,{json:()=>_7});var _7=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"MatrixBandPart",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"numLower",type:"tensor"},{start:1,name:"numUpper",type:"tensor"}]}];var Pv={};pt(Pv,{json:()=>C7});var C7=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]}];var $v={};pt($v,{json:()=>k7});var k7=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}];var Av={};pt(Av,{json:()=>I7});var I7=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]},{tfOpName:"TensorScatterUpdate",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"values",type:"tensor"}]}];var Dv={};pt(Dv,{json:()=>T7});var T7=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}];var Fv={};pt(Fv,{json:()=>E7});var E7=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}];var Ov={};pt(Ov,{json:()=>N7});var N7=[{tfOpName:"StaticRegexReplace",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"pattern",name:"pattern",type:"string"},{tfName:"rewrite",name:"rewrite",type:"string"},{tfName:"replace_global",name:"replaceGlobal",type:"bool"}]},{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}];var Lv={};pt(Lv,{json:()=>R7});var R7=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"EnsureShape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}];var Mp=class{static get Instance(){return this._instance||(this._instance=new this)}constructor(){let t=[vv,bv,Sv,wv,_v,Cv,kv,Iv,Tv,Ev,Nv,Rv,Pv,$v,Av,Dv,Fv,Ov,Lv],e=[].concat(...t.map(o=>o.json));this.opMappers=e.reduce((o,n)=>(o[n.tfOpName]=n,o),{})}transformGraph(t,e={}){let o=t.node,n=[],i=[],s=[],a=o.reduce((g,x)=>(g[x.name]=this.mapNode(x),x.op.startsWith("Placeholder")?n.push(g[x.name]):x.op==="Const"?i.push(g[x.name]):(x.input==null||x.input.length===0)&&s.push(g[x.name]),g),{}),l=[],u=[],c={},p={};e!=null&&(c=this.mapSignatureEntries(e.inputs),p=this.mapSignatureEntries(e.outputs));let d=Object.keys(a);d.forEach(g=>{let x=a[g];x.inputNames.forEach((y,b)=>{let[I,,N]=qo(y),M=a[I];if(M.outputs!=null){let B=M.outputs.indexOf(N);if(B!==-1){let W=`${I}:${B}`;x.inputNames[b]=W}}x.inputs.push(M),M.children.push(x)})}),Object.keys(p).length===0?d.forEach(g=>{let x=a[g];x.children.length===0&&u.push(x)}):Object.keys(p).forEach(g=>{let[x]=qo(g),y=a[x];y!=null&&(y.signatureKey=p[g],u.push(y))}),Object.keys(c).length>0?Object.keys(c).forEach(g=>{let[x]=qo(g),y=a[x];y&&(y.signatureKey=c[g],l.push(y))}):l=n;let m={};t.library!=null&&t.library.function!=null&&(m=t.library.function.reduce((g,x)=>(g[x.signature.name]=this.mapFunction(x),g),{}));let f={nodes:a,inputs:l,outputs:u,weights:i,placeholders:n,signature:e,functions:m};return s.length>0&&(f.initNodes=s),f}mapSignatureEntries(t){return Object.keys(t||{}).reduce((e,o)=>(e[t[o].name]=o,e),{})}mapNode(t){let e=eh(t.op)||this.opMappers[t.op]||{};t.attr==null&&(t.attr={});let o={name:t.name,op:t.op,category:e.category,inputNames:(t.input||[]).map(n=>n.startsWith("^")?n.slice(1):n),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:t.attr,outputs:e.outputs};return e.inputs!=null&&(o.inputParams=e.inputs.reduce((n,i)=>(n[i.name]={type:i.type,inputIndexStart:i.start,inputIndexEnd:i.end},n),{})),e.attrs!=null&&(o.attrParams=e.attrs.reduce((n,i)=>{let s=i.type,a;switch(i.type){case"string":a=rh(t.attr,i.tfName,i.defaultValue),a===void 0&&i.tfDeprecatedName&&(a=rh(t.attr,i.tfDeprecatedName,i.defaultValue));break;case"string[]":a=uh(t.attr,i.tfName,i.defaultValue),a===void 0&&i.tfDeprecatedName&&(a=uh(t.attr,i.tfDeprecatedName,i.defaultValue));break;case"number":a=nh(t.attr,i.tfName,i.defaultValue||0),a===void 0&&i.tfDeprecatedName&&(a=nh(t.attr,i.tfDeprecatedName,i.defaultValue));break;case"number[]":a=lh(t.attr,i.tfName,i.defaultValue),a===void 0&&i.tfDeprecatedName&&(a=lh(t.attr,i.tfDeprecatedName,i.defaultValue));break;case"bool":a=oh(t.attr,i.tfName,i.defaultValue),a===void 0&&i.tfDeprecatedName&&(a=oh(t.attr,i.tfDeprecatedName,i.defaultValue));break;case"bool[]":a=ph(t.attr,i.tfName,i.defaultValue),a===void 0&&i.tfDeprecatedName&&(a=ph(t.attr,i.tfDeprecatedName,i.defaultValue));break;case"shape":a=ah(t.attr,i.tfName,i.defaultValue),a===void 0&&i.tfDeprecatedName&&(a=ah(t.attr,i.tfDeprecatedName,i.defaultValue));break;case"shape[]":a=ch(t.attr,i.tfName,i.defaultValue),a===void 0&&i.tfDeprecatedName&&(a=ch(t.attr,i.tfDeprecatedName,i.defaultValue));break;case"dtype":a=ih(t.attr,i.tfName,i.defaultValue),a===void 0&&i.tfDeprecatedName&&(a=ih(t.attr,i.tfDeprecatedName,i.defaultValue));break;case"dtype[]":a=sh(t.attr,i.tfName,i.defaultValue),a===void 0&&i.tfDeprecatedName&&(a=sh(t.attr,i.tfDeprecatedName,i.defaultValue));break;case"func":a=nI(t.attr,i.tfName,i.defaultValue),a===void 0&&i.tfDeprecatedName&&(a=nI(t.attr,i.tfDeprecatedName,i.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${i.type} for op: ${t.op}`)}return n[i.name]={value:a,type:s},n},{})),o}mapFunction(t){let e=t.nodeDef,o=[],n=[],i={};e!=null&&(i=e.reduce((p,d)=>(p[d.name]=this.mapNode(d),d.op==="Const"&&n.push(p[d.name]),p),{}));let s=[],a=[];t.signature.inputArg.forEach(p=>{let[d]=qo(p.name),m={name:d,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:Mv(p.type),type:"dtype"}},children:[]};m.signatureKey=p.name,s.push(m),i[d]=m}),Object.keys(i).forEach(p=>{let d=i[p];d.inputNames.forEach((m,f)=>{let[g,,x]=qo(m),y=i[g];if(y.outputs!=null){let b=y.outputs.indexOf(x);if(b!==-1){let I=`${g}:${b}`;d.inputNames[f]=I}}d.inputs.push(y),y.children.push(d)})});let u=t.ret;t.signature.outputArg.forEach(p=>{let[d,m]=qo(u[p.name]),f=i[d];f!=null&&(f.defaultOutput=m,a.push(f))});let c=this.mapArgsToSignature(t);return{nodes:i,inputs:s,outputs:a,weights:n,placeholders:o,signature:c}}mapArgsToSignature(t){return{methodName:t.signature.name,inputs:t.signature.inputArg.reduce((e,o)=>(e[o.name]=this.mapArgToTensorInfo(o),e),{}),outputs:t.signature.outputArg.reduce((e,o)=>(e[o.name]=this.mapArgToTensorInfo(o,t.ret),e),{})}}mapArgToTensorInfo(t,e){let o=t.name;return e!=null&&(o=e[o]),{name:o,dtype:t.type}}};function P7(r){let t=G().global;if(typeof t.atob<"u")return t.atob(r);if(typeof Buffer<"u")return new Buffer(r,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}function iI(r,t){let e=Array.isArray(r)?String.fromCharCode.apply(null,r):P7(r);return t?e:e.toLowerCase()}function rh(r,t,e,o=!1){let n=r[t];return n!=null?iI(n.s,o):e}function oh(r,t,e){let o=r[t];return o?o.b:e}function nh(r,t,e){let o=r[t]||{},n=o.i!=null?o.i:o.f!=null?o.f:e;return typeof n=="number"?n:parseInt(n,10)}function Mv(r){switch(typeof r=="string"&&(r=so[r]),r){case so.DT_FLOAT:case so.DT_HALF:return"float32";case so.DT_INT32:case so.DT_INT64:case so.DT_INT8:case so.DT_UINT8:return"int32";case so.DT_BOOL:return"bool";case so.DT_DOUBLE:return"float32";case so.DT_STRING:return"string";case so.DT_COMPLEX64:case so.DT_COMPLEX128:return"complex64";default:return null}}function nI(r,t,e){let o=r[t];return o&&o.func?o.func.name:e}function ih(r,t,e){let o=r[t];return o&&o.type?Mv(o.type):e}function sh(r,t,e){let o=r[t];return o&&o.list&&o.list.type?o.list.type.map(n=>Mv(n)):e}function sI(r){if(!r.unknownRank)return r.dim!=null?r.dim.map(t=>typeof t.size=="number"?t.size:parseInt(t.size,10)):[]}function ah(r,t,e){let o=r[t];return o&&o.shape?sI(o.shape):e}function lh(r,t,e){let o=r[t];return o?((o.list.f&&o.list.f.length?o.list.f:o.list.i)||[]).map(n=>typeof n=="number"?n:parseInt(n,10)):e}function uh(r,t,e,o=!1){let n=r[t];return n&&n.list&&n.list.s?n.list.s.map(i=>iI(i,o)):e}function ch(r,t,e){let o=r[t];return o&&o.list&&o.list.shape?o.list.shape.map(n=>sI(n)):e}function ph(r,t,e){let o=r[t];return o&&o.list&&o.list.b?o.list.b:e}var dh=class{constructor(t,e,o){this.node=t,this.tensorMap=e,this.context=o,this.inputs=[],this.attrs={},this.inputs=t.inputNames.map(n=>this.getInput(n)),t.rawAttrs!=null&&(this.attrs=Object.keys(t.rawAttrs).reduce((n,i)=>(n[i]=this.getAttr(i),n),{}))}getInput(t){return Bt(t,this.tensorMap,this.context)}getAttr(t,e){let o=this.node.rawAttrs[t];if(o.tensor!=null)return Bt(t,this.tensorMap,this.context);if(o.i!=null||o.f!=null)return nh(this.node.rawAttrs,t,e);if(o.s!=null)return rh(this.node.rawAttrs,t,e);if(o.b!=null)return oh(this.node.rawAttrs,t,e);if(o.shape!=null)return ah(this.node.rawAttrs,t,e);if(o.type!=null)return ih(this.node.rawAttrs,t,e);if(o.list!=null){if(o.list.i!=null||o.list.f!=null)return lh(this.node.rawAttrs,t,e);if(o.list.s!=null)return uh(this.node.rawAttrs,t,e);if(o.list.shape!=null)return ch(this.node.rawAttrs,t,e);if(o.list.b!=null)return ph(this.node.rawAttrs,t,e);if(o.list.type!=null)return sh(this.node.rawAttrs,t,e)}return e}};var Qe={};pt(Qe,{OP_SCOPE_SUFFIX:()=>Fy,abs:()=>er,acos:()=>x_,acosh:()=>y_,add:()=>xe,addN:()=>v_,all:()=>b_,any:()=>S_,argMax:()=>Ym,argMin:()=>w_,asin:()=>__,asinh:()=>C_,atan:()=>k_,atan2:()=>I_,atanh:()=>T_,avgPool:()=>Qm,avgPool3d:()=>R_,basicLSTMCell:()=>P_,batchNorm:()=>Hi,batchNorm2d:()=>A_,batchNorm3d:()=>D_,batchNorm4d:()=>F_,batchToSpaceND:()=>Zm,bincount:()=>Jm,bitwiseAnd:()=>O_,booleanMaskAsync:()=>pG,broadcastArgs:()=>L_,broadcastTo:()=>Ki,buffer:()=>Le,cast:()=>ze,ceil:()=>M_,clipByValue:()=>ef,clone:()=>ro,complex:()=>Pr,concat:()=>dt,concat1d:()=>B_,concat2d:()=>V_,concat3d:()=>W_,concat4d:()=>U_,conv1d:()=>z_,conv2d:()=>qi,conv2dTranspose:()=>G_,conv3d:()=>H_,conv3dTranspose:()=>q_,cos:()=>j_,cosh:()=>X_,cosineWindow:()=>Dp,cumprod:()=>Y_,cumsum:()=>Q_,denseBincount:()=>Z_,depthToSpace:()=>J_,depthwiseConv2d:()=>gc,diag:()=>e2,dilation2d:()=>t2,div:()=>De,divNoNan:()=>o2,dot:()=>n2,dropout:()=>_G,einsum:()=>ji,elu:()=>nf,enclosingPowerOfTwo:()=>ov,ensureShape:()=>i2,equal:()=>of,erf:()=>s2,euclideanNorm:()=>u2,exp:()=>Dr,expandDims:()=>gr,expm1:()=>c2,eye:()=>sf,fft:()=>vc,fill:()=>wn,floor:()=>af,floorDiv:()=>Xm,fused:()=>nv,gather:()=>lf,gatherND:()=>SG,greater:()=>Ks,greaterEqual:()=>uf,ifft:()=>Qs,imag:()=>Yi,image:()=>Yn,inTopKAsync:()=>kG,irfft:()=>Rf,isFinite:()=>p2,isInf:()=>d2,isNaN:()=>m2,leakyRelu:()=>cf,less:()=>Pp,lessEqual:()=>xc,linalg:()=>TH,linspace:()=>f2,localResponseNormalization:()=>h2,log:()=>Kn,log1p:()=>pf,logSigmoid:()=>x2,logSoftmax:()=>y2,logSumExp:()=>mf,logicalAnd:()=>qs,logicalNot:()=>ff,logicalOr:()=>hf,logicalXor:()=>v2,losses:()=>EH,lowerBound:()=>b2,matMul:()=>et,max:()=>Cn,maxPool:()=>xf,maxPool3d:()=>S2,maxPoolWithArgmax:()=>w2,maximum:()=>yf,mean:()=>js,meshgrid:()=>_2,min:()=>Rp,minimum:()=>qn,mirrorPad:()=>vf,mod:()=>C2,moments:()=>k2,movingAverage:()=>fG,mul:()=>le,multiRNNCell:()=>I2,multinomial:()=>T2,neg:()=>nr,norm:()=>Hs,notEqual:()=>bf,oneHot:()=>E2,ones:()=>kn,onesLike:()=>N2,op:()=>R,outerProduct:()=>R2,pad:()=>no,pad1d:()=>P2,pad2d:()=>$2,pad3d:()=>A2,pad4d:()=>D2,pool:()=>F2,pow:()=>Hn,prelu:()=>wf,print:()=>jm,prod:()=>O2,raggedGather:()=>L2,raggedRange:()=>M2,raggedTensorToTensor:()=>B2,rand:()=>V2,randomGamma:()=>nC,randomNormal:()=>Tf,randomStandardNormal:()=>iC,randomUniform:()=>yc,randomUniformInt:()=>sC,range:()=>Qi,real:()=>jn,reciprocal:()=>aC,relu:()=>Zi,relu6:()=>Ef,reshape:()=>Z,reverse:()=>wo,reverse1d:()=>lC,reverse2d:()=>uC,reverse3d:()=>cC,reverse4d:()=>pC,rfft:()=>bc,round:()=>Nf,rsqrt:()=>dC,scalar:()=>Ne,scatterND:()=>gG,searchSorted:()=>$p,selu:()=>mC,separableConv2d:()=>fC,setdiff1dAsync:()=>hC,sigmoid:()=>oo,sign:()=>gC,signal:()=>IH,sin:()=>xC,sinh:()=>yC,slice:()=>Fe,slice1d:()=>vC,slice2d:()=>bC,slice3d:()=>SC,slice4d:()=>wC,softmax:()=>_C,softplus:()=>df,spaceToBatchND:()=>Sf,sparse:()=>NH,sparseToDense:()=>vG,spectral:()=>kH,split:()=>Xn,sqrt:()=>Ar,square:()=>Ht,squaredDifference:()=>Pf,squeeze:()=>ut,stack:()=>Cr,step:()=>$f,stridedSlice:()=>CC,string:()=>RH,sub:()=>Re,sum:()=>tt,tan:()=>kC,tanh:()=>Np,tensor:()=>wr,tensor1d:()=>Pt,tensor2d:()=>kr,tensor3d:()=>Af,tensor4d:()=>IC,tensor5d:()=>TC,tensor6d:()=>EC,tensorScatterUpdate:()=>PC,tile:()=>Xi,topk:()=>$C,transpose:()=>Of,truncatedNormal:()=>AC,unique:()=>DC,unsortedSegmentSum:()=>FC,unstack:()=>_o,upperBound:()=>OC,variable:()=>LC,where:()=>So,whereAsync:()=>Ff,zeros:()=>_r,zerosLike:()=>Gt});var aI=(r,t,e,o=Qe)=>{switch(r.op){case"BiasAdd":case"AddV2":case"Add":return[o.add(w("a",r,t,e),w("b",r,t,e))];case"AddN":return[o.addN(w("tensors",r,t,e))];case"FloorMod":case"Mod":return[o.mod(w("a",r,t,e),w("b",r,t,e))];case"Mul":return[o.mul(w("a",r,t,e),w("b",r,t,e))];case"RealDiv":case"Div":return[o.div(w("a",r,t,e),w("b",r,t,e))];case"DivNoNan":return[o.divNoNan(w("a",r,t,e),w("b",r,t,e))];case"FloorDiv":return[o.floorDiv(w("a",r,t,e),w("b",r,t,e))];case"Sub":return[o.sub(w("a",r,t,e),w("b",r,t,e))];case"Minimum":return[o.minimum(w("a",r,t,e),w("b",r,t,e))];case"Maximum":return[o.maximum(w("a",r,t,e),w("b",r,t,e))];case"Pow":return[o.pow(w("a",r,t,e),w("b",r,t,e))];case"SquaredDifference":return[o.squaredDifference(w("a",r,t,e),w("b",r,t,e))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var lI=(r,t,e,o=Qe)=>{switch(r.op){case"Abs":case"ComplexAbs":return[o.abs(w("x",r,t,e))];case"Acos":return[o.acos(w("x",r,t,e))];case"Acosh":return[o.acosh(w("x",r,t,e))];case"Asin":return[o.asin(w("x",r,t,e))];case"Asinh":return[o.asinh(w("x",r,t,e))];case"Atan":return[o.atan(w("x",r,t,e))];case"Atan2":return[o.atan2(w("x",r,t,e),w("y",r,t,e))];case"Atanh":return[o.atanh(w("x",r,t,e))];case"Ceil":return[o.ceil(w("x",r,t,e))];case"Complex":return[o.complex(w("real",r,t,e),w("imag",r,t,e))];case"Cos":return[o.cos(w("x",r,t,e))];case"Cosh":return[o.cosh(w("x",r,t,e))];case"Elu":return[o.elu(w("x",r,t,e))];case"Erf":return[o.erf(w("x",r,t,e))];case"Exp":return[o.exp(w("x",r,t,e))];case"Expm1":return[o.expm1(w("x",r,t,e))];case"Floor":return[o.floor(w("x",r,t,e))];case"Log":return[o.log(w("x",r,t,e))];case"Log1p":return[o.log1p(w("x",r,t,e))];case"Imag":return[o.imag(w("x",r,t,e))];case"Neg":return[o.neg(w("x",r,t,e))];case"Reciprocal":return[o.reciprocal(w("x",r,t,e))];case"Real":return[o.real(w("x",r,t,e))];case"Relu":return[o.relu(w("x",r,t,e))];case"Round":return[o.round(w("x",r,t,e))];case"Selu":return[o.selu(w("x",r,t,e))];case"Sigmoid":return[o.sigmoid(w("x",r,t,e))];case"Sin":return[o.sin(w("x",r,t,e))];case"Sign":return[o.sign(w("x",r,t,e))];case"Sinh":return[o.sinh(w("x",r,t,e))];case"Softplus":return[o.softplus(w("x",r,t,e))];case"Sqrt":return[o.sqrt(w("x",r,t,e))];case"Square":return[o.square(w("x",r,t,e))];case"Tanh":return[o.tanh(w("x",r,t,e))];case"Tan":return[o.tan(w("x",r,t,e))];case"ClipByValue":return[o.clipByValue(w("x",r,t,e),w("clipValueMin",r,t,e),w("clipValueMax",r,t,e))];case"Relu6":return[o.relu6(w("x",r,t,e))];case"Rsqrt":return[o.rsqrt(Bt(r.inputNames[0],t,e))];case"LeakyRelu":return[o.leakyRelu(w("x",r,t,e),w("alpha",r,t,e))];case"Prelu":return[o.prelu(w("x",r,t,e),w("alpha",r,t,e))];case"IsNan":return[o.isNaN(Bt(r.inputNames[0],t,e))];case"IsInf":return[o.isInf(Bt(r.inputNames[0],t,e))];case"IsFinite":return[o.isFinite(Bt(r.inputNames[0],t,e))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};function ao(r,t,e=""){if(!(typeof r=="number"||typeof t=="number")){S.assert(r.length===t.length,()=>e+` Shapes ${r} and ${t} must match`);for(let o=0;o<r.length;o++){let n=r[o],i=t[o];S.assert(n<0||i<0||n===i,()=>e+` Shapes ${r} and ${t} must match`)}}}function uI(r){return!(typeof r=="number"||r.some(t=>t<0))}function wc(r,t,e){let o=mh(r,e),n=!uI(o);if(n&&t.length===0)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${o}`);if(n&&t.forEach(i=>{o=mh(i.shape,o)}),!uI(o))throw new Error(`Non-fully-defined elementShape: ${o}`);return o}function mh(r,t){if(typeof r=="number")return t;if(typeof t=="number")return r;if(r.length!==t.length)throw new Error(`Incompatible ranks during merge: ${r} vs. ${t}`);let e=[];for(let o=0;o<r.length;++o){let n=r[o],i=t[o];if(n>=0&&i>=0&&n!==i)throw new Error(`Incompatible shape during merge: ${r} vs. ${t}`);e[o]=n>=0?n:i}return e}var fh=class{constructor(t,e,o,n,i,s,a){this.name=t,this.dtype=e,this.maxSize=o,this.elementShape=n,this.identicalElementShapes=i,this.dynamicSize=s,this.clearAfterRead=a,this.tensors=[],this.closed_=!1,this.idTensor=Ne(0),$r(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(t){this.tensors.forEach(e=>{(t==null||!t.has(e.tensor.id))&&e.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(t<0||t>=this.size())throw new Error(`Tried to read from index ${t}, but array size is: ${this.size()}`);let e=this.tensors[t];if(e.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${t} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(e.cleared=!0),e.read=!0,e.tensor}readMany(t){return t.map(e=>this.read(e))}write(t,e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(t<0||!this.dynamicSize&&t>=this.maxSize)throw new Error(`Tried to write to index ${t}, but array is not resizeable and size is: ${this.maxSize}`);let o=this.tensors[t]||{};if(e.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t},
          because the value dtype is ${e.dtype}, but TensorArray dtype is ${this.dtype}.`);if(this.size()===0&&(this.elementShape==null||this.elementShape.length===0)&&(this.elementShape=e.shape),ao(this.elementShape,e.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${t}.`),o.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t}, because it has already been read.`);if(o.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t}, because it has already been written.`);o.tensor=e,$r(e),o.written=!0,this.tensors[t]=o}writeMany(t,e){if(t.length!==e.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${t.length} is not the same as tensors size: ${e.length}.`);t.forEach((o,n)=>this.write(o,e[n]))}gather(t,e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${e}`);if(t)t=t.slice(0,this.size());else{t=[];for(let n=0;n<this.size();n++)t.push(n)}if(t.length===0)return wr([],[0].concat(this.elementShape));let o=this.readMany(t);return ao(this.elementShape,o[0].shape,"TensorArray shape mismatch: "),Cr(o,0)}concat(t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${t}`);if(this.size()===0)return wr([],[0].concat(this.elementShape));let e=[];for(let n=0;n<this.size();n++)e.push(n);let o=this.readMany(e);return ao(this.elementShape,o[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${o[0].shape})`),dt(o,0)}scatter(t,e){if(e.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${e.dtype}`);if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);let o=Math.max(...t);if(!this.dynamicSize&&o>=this.maxSize)throw new Error(`Max index must be < array size (${o}  vs. ${this.maxSize})`);this.writeMany(t,_o(e,0))}split(t,e){if(e.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${e.dtype}`);let o=0,n=t.map(l=>(o+=l,o));if(o!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${o}, and tensor's shape is: ${e.shape}`);if(!this.dynamicSize&&t.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${t.length}), and the TensorArray is not marked as dynamically resizeable`);let i=o===0?0:e.size/o,s=[];Ee(()=>{e=Z(e,[1,o,i]);for(let l=0;l<t.length;++l){let c=[0,l===0?0:n[l-1],0],p=[1,t[l],i];s[l]=Z(Fe(e,c,p),this.elementShape)}return s});let a=[];for(let l=0;l<t.length;l++)a[l]=l;this.writeMany(a,s)}};var _c=class r{get id(){return this.idTensor.id}constructor(t,e,o,n=-1){this.tensors=t,this.elementShape=e,this.elementDtype=o,t?.forEach(i=>{if(o!==i.dtype)throw new Error(`Invalid data types; op elements ${o}, but list elements ${i.dtype}`);ao(e,i.shape,"TensorList shape mismatch: "),$r(i)}),this.idTensor=Ne(0),this.maxNumElements=n,$r(this.idTensor)}copy(){return new r([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(t){this.tensors.forEach(e=>{(t==null||!t.has(e.id))&&e.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(t,e,o=-1){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);if(o!==-1&&this.tensors.length!==o)throw new Error(`Operation expected a list with ${o} elements but got a list with ${this.tensors.length} elements.`);ao(t,this.elementShape,"TensorList shape mismatch: ");let n=wc(this.elementShape,this.tensors,t);return Ee(()=>{let i=this.tensors.map(s=>Z(s,n));return Cr(i,0)})}popBack(t,e){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);if(this.size()===0)throw new Error("Trying to pop from an empty list.");let o=wc(this.elementShape,this.tensors,t),n=this.tensors.pop();return n.kept=!1,ao(n.shape,t,"TensorList shape mismatch: "),Z(n,o)}pushBack(t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(ao(t.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");$r(t),this.tensors.push(t)}resize(t){if(t<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${t}`);if(this.maxNumElements!==-1&&t>this.maxNumElements)throw new Error(`TensorListResize input size ${t} is greater maxNumElement ${this.maxNumElements}.`);let e=new r([],this.elementShape,this.elementDtype,this.maxNumElements);e.tensors.length=t;for(let o=0;o<Math.min(this.tensors.length,t);++o)e.tensors[o]=this.tensors[o];return e}getItem(t,e,o){if(o!==this.elementDtype)throw new Error(`Invalid data types; op elements ${o}, but list elements ${this.elementDtype}`);if(t<0||t>this.tensors.length)throw new Error(`Trying to access element ${t} in a list with ${this.tensors.length} elements.`);if(this.tensors[t]==null)throw new Error(`element at index ${t} is null.`);ao(this.tensors[t].shape,e,"TensorList shape mismatch: ");let n=wc(this.elementShape,this.tensors,e);return Z(this.tensors[t],n)}setItem(t,e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(t<0||this.maxNumElements!==-1&&t>=this.maxNumElements)throw new Error(`Trying to set element ${t} in a list with max ${this.maxNumElements} elements.`);ao(this.elementShape,e.shape,"TensorList shape mismatch: "),$r(e),this.tensors[t]!=null&&(this.tensors[t].kept=!1),this.tensors[t]=e}gather(t,e,o){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);ao(this.elementShape,o,"TensorList shape mismatch: "),t=t.slice(0,this.size());let n=wc(this.elementShape,this.tensors,o);return t.length===0?wr([],[0].concat(n)):Ee(()=>{let i=t.map(s=>Z(this.tensors[s],n));return Cr(i,0)})}concat(t,e){if(t&&t!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${t}`);ao(this.elementShape,e,"TensorList shape mismatch: ");let o=wc(this.elementShape,this.tensors,e);return this.size()===0?wr([],[0].concat(o)):Ee(()=>{let n=this.tensors.map(i=>Z(i,o));return dt(n,0)})}};function cI(r,t,e){let o=r.dtype;if(r.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${r.shape}`);if(r.dtype!==e)throw new Error(`Invalid data types; op elements ${r.dtype}, but list elements ${e}`);let n=r.shape.slice(1);ao(n,t,"TensorList shape mismatch: ");let i=_o(r);return new _c(i,t,o)}function pI(r,t,e,o){return new _c([],r,t,o)}function dI(r,t,e,o){if(t.length!==r.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${r.shape[0]}`);let n=Math.max(...t);if(o!=null&&o!==-1&&n>=o)throw new Error(`Max index must be < array size (${n}  vs. ${o})`);let i=new _c([],e,r.dtype,o),s=_o(r,0);return t.forEach((a,l)=>{i.setItem(a,s[l])}),i}function mI(r,t,e){let o=0,n=t.map(c=>(o+=c,o));if(o!==r.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${o}, and tensor's shape is: ${r.shape}`);let i=r.shape.slice(1),s=mh(i,e),a=o===0?0:r.size/o,l=Ee(()=>{let c=[];r=Z(r,[1,o,a]);for(let p=0;p<t.length;++p){let m=[0,p===0?0:n[p-1],0],f=[1,t[p],a];c[p]=Z(Fe(r,m,f),s)}return r.dispose(),c}),u=new _c([],e,r.dtype,t.length);for(let c=0;c<l.length;c++)u.setItem(c,l[c]);return u}var fI=(r,t,e)=>j(null,null,function*(){switch(r.op){case"If":case"StatelessIf":{let o=w("thenBranch",r,t,e),n=w("elseBranch",r,t,e),i=w("cond",r,t,e),s=w("args",r,t,e);return(yield i.data())[0]?e.functionMap[o].executeFunctionAsync(s,e.tensorArrayMap,e.tensorListMap):e.functionMap[n].executeFunctionAsync(s,e.tensorArrayMap,e.tensorListMap)}case"While":case"StatelessWhile":{let o=w("body",r,t,e),n=w("cond",r,t,e),i=w("args",r,t,e),s=yield e.functionMap[n].executeFunctionAsync(i,e.tensorArrayMap,e.tensorListMap),a=i.map(c=>c.id),l=yield s[0].data();s.forEach(c=>{!c.kept&&a.indexOf(c.id)===-1&&c.dispose()});let u=i;for(;l[0];){let c=u;u=yield e.functionMap[o].executeFunctionAsync(u,e.tensorArrayMap,e.tensorListMap);let p=u.map(m=>m.id);c.forEach(m=>{!m.kept&&a.indexOf(m.id)===-1&&p.indexOf(m.id)===-1&&m.dispose()});let d=yield e.functionMap[n].executeFunctionAsync(u,e.tensorArrayMap,e.tensorListMap);l=yield d[0].data(),d.forEach(m=>{!m.kept&&a.indexOf(m.id)===-1&&p.indexOf(m.id)===-1&&m.dispose()})}return u}case"LoopCond":{let o=w("pred",r,t,e);return[jo(o)]}case"Switch":{let o=w("pred",r,t,e),n=w("data",r,t,e);return n.kept||(n=jo(n)),(yield o.data())[0]?[void 0,n]:[n,void 0]}case"Merge":{let o=r.inputNames.find(n=>Bt(n,t,e)!==void 0);if(o){let n=Bt(o,t,e);return[jo(n)]}return}case"Enter":{let o=w("frameName",r,t,e),n=w("tensor",r,t,e);return e.enterFrame(o),[jo(n)]}case"Exit":{let o=w("tensor",r,t,e);return e.exitFrame(),[jo(o)]}case"NextIteration":{let o=w("tensor",r,t,e);return e.nextIteration(),[jo(o)]}case"TensorArrayV3":{let o=w("size",r,t,e),n=w("dtype",r,t,e),i=w("elementShape",r,t,e),s=w("dynamicSize",r,t,e),a=w("clearAfterRead",r,t,e),l=w("identicalElementShapes",r,t,e),u=w("name",r,t,e),c=new fh(u,n,o,i,l,s,a);return e.addTensorArray(c),[c.idTensor,Ne(1)]}case"TensorArrayWriteV3":{let o=w("tensorArrayId",r,t,e),n=w("index",r,t,e),i=w("tensor",r,t,e),s=e.getTensorArray(o.id);return s.write(n,i),[s.idTensor]}case"TensorArrayReadV3":{let o=w("tensorArrayId",r,t,e),n=w("index",r,t,e);return[e.getTensorArray(o.id).read(n)]}case"TensorArrayGatherV3":{let o=w("tensorArrayId",r,t,e),n=w("indices",r,t,e),i=w("dtype",r,t,e);return[e.getTensorArray(o.id).gather(n,i)]}case"TensorArrayScatterV3":{let o=w("tensorArrayId",r,t,e),n=w("indices",r,t,e),i=w("tensor",r,t,e),s=e.getTensorArray(o.id);return s.scatter(n,i),[s.idTensor]}case"TensorArrayConcatV3":{let o=w("tensorArrayId",r,t,e),n=e.getTensorArray(o.id),i=w("dtype",r,t,e);return[n.concat(i)]}case"TensorArraySplitV3":{let o=w("tensorArrayId",r,t,e),n=w("tensor",r,t,e),i=w("lengths",r,t,e),s=e.getTensorArray(o.id);return s.split(i,n),[s.idTensor]}case"TensorArraySizeV3":{let o=w("tensorArrayId",r,t,e),n=e.getTensorArray(o.id);return[Ne(n.size(),"int32")]}case"TensorArrayCloseV3":{let o=w("tensorArrayId",r,t,e),n=e.getTensorArray(o.id);return n.clearAndClose(),[n.idTensor]}case"TensorListSetItem":{let o=w("tensorListId",r,t,e),n=w("index",r,t,e),i=w("tensor",r,t,e),s=e.getTensorList(o.id);return s.setItem(n,i),[s.idTensor]}case"TensorListGetItem":{let o=w("tensorListId",r,t,e),n=w("index",r,t,e),i=w("elementShape",r,t,e),s=w("elementDType",r,t,e);return[e.getTensorList(o.id).getItem(n,i,s)]}case"TensorListScatterV2":case"TensorListScatter":{let o=w("indices",r,t,e),n=w("tensor",r,t,e),i=w("elementShape",r,t,e),s=w("numElements",r,t,e),a=dI(n,o,i,s);return e.addTensorList(a),[a.idTensor]}case"TensorListReserve":case"EmptyTensorList":{let o=w("elementShape",r,t,e),n=w("elementDType",r,t,e),i;r.op==="TensorListReserve"?i="numElements":i="maxNumElements";let s=w(i,r,t,e),a=r.op==="TensorListReserve"?-1:s,l=pI(o,n,s,a);return e.addTensorList(l),[l.idTensor]}case"TensorListGather":{let o=w("tensorListId",r,t,e),n=w("indices",r,t,e),i=w("elementShape",r,t,e),s=w("elementDType",r,t,e);return[e.getTensorList(o.id).gather(n,s,i)]}case"TensorListStack":{let o=w("tensorListId",r,t,e),n=w("elementShape",r,t,e),i=w("elementDType",r,t,e),s=w("numElements",r,t,e);return[e.getTensorList(o.id).stack(n,i,s)]}case"TensorListFromTensor":{let o=w("tensor",r,t,e),n=w("elementShape",r,t,e),i=w("elementDType",r,t,e),s=cI(o,n,i);return e.addTensorList(s),[s.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{let o=w("tensorListId",r,t,e),n=e.getTensorList(o.id),i=w("dtype",r,t,e),s=w("elementShape",r,t,e);return[n.concat(i,s)]}case"TensorListPushBack":{let o=w("tensorListId",r,t,e),n=w("tensor",r,t,e),i=e.getTensorList(o.id);return i.pushBack(n),[i.idTensor]}case"TensorListPopBack":{let o=w("tensorListId",r,t,e),n=w("elementShape",r,t,e),i=w("elementDType",r,t,e);return[e.getTensorList(o.id).popBack(n,i)]}case"TensorListSplit":{let o=w("tensor",r,t,e),n=w("elementShape",r,t,e),i=w("lengths",r,t,e),s=mI(o,i,n);return e.addTensorList(s),[s.idTensor]}case"TensorListLength":{let o=w("tensorListId",r,t,e),n=e.getTensorList(o.id);return[Ne(n.size(),"int32")]}case"TensorListResize":{let o=w("tensorListId",r,t,e),n=w("size",r,t,e),s=e.getTensorList(o.id).resize(n);return e.addTensorList(s),[s.idTensor]}default:throw TypeError(`Node type ${r.op} is not implemented`)}});function hI(r,t,e){let[o,n]=w("fusedOps",r,t,e),i=o==="biasadd",s=!i,a=n==="prelu",l=o==="fusedbatchnorm",u=w("numArgs",r,t,e);if(i){if(a&&u!==2)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!a&&i&&u!==1)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(l)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");let c=w("strides",r,t,e),p=Lp(r,t,e),d=w("dataFormat",r,t,e).toUpperCase(),m=w("dilations",r,t,e),[f,g]=w("args",r,t,e);s&&(g=f,f=void 0);let x=w("leakyreluAlpha",r,t,e);return{stride:c,pad:p,dataFormat:d,dilations:m,biasArg:f,preluArg:g,activationFunc:n,leakyreluAlpha:x}}var gI=(r,t,e,o=Qe)=>{switch(r.op){case"Conv1D":{let n=w("stride",r,t,e),i=w("pad",r,t,e),s=w("dataFormat",r,t,e).toUpperCase(),a=w("dilation",r,t,e);return[o.conv1d(w("x",r,t,e),w("filter",r,t,e),n,i,s,a)]}case"Conv2D":{let n=w("strides",r,t,e),i=Lp(r,t,e),s=w("dataFormat",r,t,e).toUpperCase(),a=w("dilations",r,t,e);return[o.conv2d(w("x",r,t,e),w("filter",r,t,e),[n[1],n[2]],i,s,[a[1],a[2]])]}case"_FusedConv2D":{let{stride:n,pad:i,dataFormat:s,dilations:a,biasArg:l,preluArg:u,activationFunc:c,leakyreluAlpha:p}=hI(r,t,e);return[o.fused.conv2d({x:w("x",r,t,e),filter:w("filter",r,t,e),strides:[n[1],n[2]],pad:i,dataFormat:s,dilations:[a[1],a[2]],bias:l,activation:c,preluActivationWeights:u,leakyreluAlpha:p})]}case"FusedDepthwiseConv2dNative":{let{stride:n,pad:i,dataFormat:s,dilations:a,biasArg:l,preluArg:u,activationFunc:c,leakyreluAlpha:p}=hI(r,t,e);return[o.fused.depthwiseConv2d({x:w("x",r,t,e),filter:w("filter",r,t,e),strides:[n[1],n[2]],pad:i,dataFormat:s,dilations:[a[1],a[2]],bias:l,activation:c,preluActivationWeights:u,leakyreluAlpha:p})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{let n=w("outputShape",r,t,e),i=w("strides",r,t,e),s=Lp(r,t,e);return[o.conv2dTranspose(w("x",r,t,e),w("filter",r,t,e),n,[i[1],i[2]],s)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{let n=w("strides",r,t,e),i=Lp(r,t,e),s=w("dilations",r,t,e),a=w("dataFormat",r,t,e).toUpperCase();return[o.depthwiseConv2d(w("input",r,t,e),w("filter",r,t,e),[n[1],n[2]],i,a,[s[1],s[2]])]}case"Conv3D":{let n=w("strides",r,t,e),i=w("pad",r,t,e),s=w("dataFormat",r,t,e).toUpperCase(),a=w("dilations",r,t,e);return[o.conv3d(w("x",r,t,e),w("filter",r,t,e),[n[1],n[2],n[3]],i,s,[a[1],a[2],a[3]])]}case"AvgPool":{let n=w("strides",r,t,e),i=w("pad",r,t,e),s=w("kernelSize",r,t,e);return[o.avgPool(w("x",r,t,e),[s[1],s[2]],[n[1],n[2]],i)]}case"MaxPool":{let n=w("strides",r,t,e),i=w("pad",r,t,e),s=w("kernelSize",r,t,e);return[o.maxPool(w("x",r,t,e),[s[1],s[2]],[n[1],n[2]],i)]}case"MaxPoolWithArgmax":{let n=w("strides",r,t,e),i=w("pad",r,t,e),s=w("kernelSize",r,t,e),a=w("includeBatchInIndex",r,t,e),{result:l,indexes:u}=o.maxPoolWithArgmax(w("x",r,t,e),[s[1],s[2]],[n[1],n[2]],i,a);return[l,u]}case"AvgPool3D":{let n=w("strides",r,t,e),i=w("pad",r,t,e),s=w("kernelSize",r,t,e);return[o.avgPool3d(w("x",r,t,e),[s[1],s[2],s[3]],[n[1],n[2],n[3]],i)]}case"MaxPool3D":{let n=w("strides",r,t,e),i=w("pad",r,t,e),s=w("kernelSize",r,t,e);return[o.maxPool3d(w("x",r,t,e),[s[1],s[2],s[3]],[n[1],n[2],n[3]],i)]}case"Dilation2D":{let n=w("strides",r,t,e),i=w("pad",r,t,e),s=w("dilations",r,t,e),a=n[1],l=n[2],u=s[1],c=s[2];return[o.dilation2d(w("x",r,t,e),w("filter",r,t,e),[a,l],i,[u,c],"NHWC")]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var xI=(r,t,e,o=Qe)=>{switch(r.op){case"Fill":{let n=w("shape",r,t,e),i=w("dtype",r,t,e),s=w("value",r,t,e);return[o.fill(n,s,i)]}case"LinSpace":{let n=w("start",r,t,e),i=w("stop",r,t,e),s=w("num",r,t,e);return[o.linspace(n,i,s)]}case"Multinomial":{let n=w("logits",r,t,e),i=w("numSamples",r,t,e),s=w("seed",r,t,e);return[o.multinomial(n,i,s)]}case"OneHot":{let n=w("indices",r,t,e),i=w("depth",r,t,e),s=w("onValue",r,t,e),a=w("offValue",r,t,e),l=w("dtype",r,t,e);return[o.oneHot(n,i,s,a,l)]}case"Ones":return[o.ones(w("shape",r,t,e),w("dtype",r,t,e))];case"OnesLike":return[o.onesLike(w("x",r,t,e))];case"RandomStandardNormal":return[o.randomStandardNormal(w("shape",r,t,e),w("dtype",r,t,e),w("seed",r,t,e))];case"RandomUniform":return[o.randomUniform(w("shape",r,t,e),w("minval",r,t,e),w("maxval",r,t,e),w("dtype",r,t,e))];case"RandomUniformInt":return[o.randomUniformInt(w("shape",r,t,e),w("minval",r,t,e),w("maxval",r,t,e),w("seed",r,t,e))];case"Range":{let n=w("start",r,t,e),i=w("stop",r,t,e),s=w("step",r,t,e);return[o.range(n,i,s,w("dtype",r,t,e))]}case"TruncatedNormal":{let n=w("shape",r,t,e),i=w("mean",r,t,e),s=w("stdDev",r,t,e),a=w("seed",r,t,e);return[o.truncatedNormal(n,i,s,w("dtype",r,t,e),a)]}case"Zeros":return[o.zeros(w("shape",r,t,e),w("dtype",r,t,e))];case"ZerosLike":return[o.zerosLike(w("x",r,t,e))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};function Bv(r,t,e){let o=w("boxes",r,t,e),n=w("scores",r,t,e),i=w("maxOutputSize",r,t,e),s=w("iouThreshold",r,t,e),a=w("scoreThreshold",r,t,e),l=w("softNmsSigma",r,t,e);return{boxes:o,scores:n,maxOutputSize:i,iouThreshold:s,scoreThreshold:a,softNmsSigma:l}}var yI=(i,s,a,l,...u)=>j(null,[i,s,a,l,...u],function*(r,t,e,o,n=Qe){switch(r.op){case"NonMaxSuppressionV5":{let{boxes:c,scores:p,maxOutputSize:d,iouThreshold:m,scoreThreshold:f,softNmsSigma:g}=Bv(r,t,e),x=yield n.image.nonMaxSuppressionWithScoreAsync(c,p,d,m,f,g);return[x.selectedIndices,x.selectedScores]}case"NonMaxSuppressionV4":{let{boxes:c,scores:p,maxOutputSize:d,iouThreshold:m,scoreThreshold:f}=Bv(r,t,e),g=w("padToMaxOutputSize",r,t,e),x=yield n.image.nonMaxSuppressionPaddedAsync(c,p,d,m,f,g);return[x.selectedIndices,x.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{let{boxes:c,scores:p,maxOutputSize:d,iouThreshold:m,scoreThreshold:f}=Bv(r,t,e);return[yield n.image.nonMaxSuppressionAsync(c,p,d,m,f)]}case"Where":{let c=n.cast(w("condition",r,t,e),"bool"),p=[yield n.whereAsync(c)];return c.dispose(),p}case"ListDiff":return n.setdiff1dAsync(w("x",r,t,e),w("y",r,t,e));default:throw TypeError(`Node type ${r.op} is not implemented`)}});var vI=(r,t,e,o=Qe)=>{switch(r.op){case"LowerBound":{let n=w("sortedSequence",r,t,e),i=w("values",r,t,e);return[o.lowerBound(n,i)]}case"TopKV2":{let n=w("x",r,t,e),i=w("k",r,t,e),s=w("sorted",r,t,e),a=o.topk(n,i,s);return[a.values,a.indices]}case"UpperBound":{let n=w("sortedSequence",r,t,e),i=w("values",r,t,e);return[o.upperBound(n,i)]}case"Unique":{let n=w("x",r,t,e),i=o.unique(n);return[i.values,i.indices]}case"UniqueV2":{let n=w("x",r,t,e),i=w("axis",r,t,e),s=o.unique(n,i);return[s.values,s.indices]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var bI=(r,t,e,o=Qe)=>{switch(r.op){case"Const":return t[r.name];case"PlaceholderWithDefault":let n=w("default",r,t,e);return[Bt(r.name,t,e)||n];case"Placeholder":return[Bt(r.name,t,e)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{let c=w("x",r,t,e);return[jo(c)]}case"IdentityN":return w("x",r,t,e).map(c=>jo(c));case"Snapshot":let i=w("x",r,t,e);return[jo(i)];case"Shape":return[o.tensor1d(w("x",r,t,e).shape,"int32")];case"ShapeN":return w("x",r,t,e).map(c=>o.tensor1d(c.shape));case"Size":return[o.scalar(w("x",r,t,e).size,"int32")];case"Rank":return[o.scalar(w("x",r,t,e).rank,"int32")];case"NoOp":return[o.scalar(1)];case"Print":let s=w("x",r,t,e),a=w("data",r,t,e),l=w("message",r,t,e),u=w("summarize",r,t,e);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(l);for(let c=0;c<a.length;c++)console.log(Array.prototype.slice.call(a[c].dataSync()).slice(0,u));return[s];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var hh=class{get id(){return this.handle.id}constructor(t,e){this.keyDType=t,this.valueDType=e,this.handle=Ne(0),this.tensorMap=new Map,$r(this.handle)}clearAndClose(){this.tensorMap.forEach(t=>t.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return Ne(this.size(),"int32")}import(t,e){return j(this,null,function*(){this.checkKeyAndValueTensor(t,e);let o=yield t.data();return this.tensorMap.forEach(n=>n.dispose()),this.tensorMap.clear(),Ee(()=>{let n=_o(e),i=o.length,s=n.length;S.assert(i===s,()=>`The number of elements doesn't match, keys has ${i} elements, the values has ${s} elements.`);for(let a=0;a<i;a++){let l=o[a],u=n[a];$r(u),this.tensorMap.set(l,u)}return this.handle})})}find(t,e){return j(this,null,function*(){this.checkKeyAndValueTensor(t,e);let o=yield t.data();return Ee(()=>{let n=[];for(let i=0;i<o.length;i++){let s=o[i],a=this.findWithDefault(s,e);n.push(a)}return Cr(n)})})}findWithDefault(t,e){let o=this.tensorMap.get(t);return o??e}checkKeyAndValueTensor(t,e){if(t.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${t.dtype}`);if(e.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${e.dtype}`)}};var SI=(r,t,e,o)=>j(null,null,function*(){switch(r.op){case"HashTable":case"HashTableV2":{let n=o.getHashTableHandleByName(r.name);if(n!=null)return[n];{let i=w("keyDType",r,t,e),s=w("valueDType",r,t,e),a=new hh(i,s);return o.addHashTable(r.name,a),[a.handle]}}case"InitializeTable":case"InitializeTableV2":case"LookupTableImport":case"LookupTableImportV2":{let n=w("tableHandle",r,t,e,o),i=w("keys",r,t,e),s=w("values",r,t,e);return[yield o.getHashTableById(n.id).import(i,s)]}case"LookupTableFind":case"LookupTableFindV2":{let n=w("tableHandle",r,t,e,o),i=w("keys",r,t,e),s=w("defaultValue",r,t,e);return[yield o.getHashTableById(n.id).find(i,s)]}case"LookupTableSize":case"LookupTableSizeV2":{let n=w("tableHandle",r,t,e,o);return[o.getHashTableById(n.id).tensorSize()]}default:throw TypeError(`Node type ${r.op} is not implemented`)}});var wI=(r,t,e,o=Qe)=>{switch(r.op){case"ResizeBilinear":{let n=w("images",r,t,e),i=w("size",r,t,e),s=w("alignCorners",r,t,e),a=w("halfPixelCenters",r,t,e);return[o.image.resizeBilinear(n,[i[0],i[1]],s,a)]}case"ResizeNearestNeighbor":{let n=w("images",r,t,e),i=w("size",r,t,e),s=w("alignCorners",r,t,e),a=w("halfPixelCenters",r,t,e);return[o.image.resizeNearestNeighbor(n,[i[0],i[1]],s,a)]}case"CropAndResize":{let n=w("image",r,t,e),i=w("boxes",r,t,e),s=w("boxInd",r,t,e),a=w("cropSize",r,t,e),l=w("method",r,t,e),u=w("extrapolationValue",r,t,e);return[o.image.cropAndResize(n,i,s,a,l,u)]}case"ImageProjectiveTransformV3":{let n=w("images",r,t,e),i=w("transforms",r,t,e),s=w("outputShape",r,t,e),a=w("fillValue",r,t,e),l=w("interpolation",r,t,e),u=w("fillMode",r,t,e);return[o.image.transform(n,i,l.toLowerCase(),u.toLowerCase(),a,s)]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var _I=(r,t,e,o=Qe)=>{switch(r.op){case"Equal":return[o.equal(w("a",r,t,e),w("b",r,t,e))];case"NotEqual":return[o.notEqual(w("a",r,t,e),w("b",r,t,e))];case"Greater":return[o.greater(w("a",r,t,e),w("b",r,t,e))];case"GreaterEqual":return[o.greaterEqual(w("a",r,t,e),w("b",r,t,e))];case"Less":return[o.less(w("a",r,t,e),w("b",r,t,e))];case"LessEqual":return[o.lessEqual(w("a",r,t,e),w("b",r,t,e))];case"LogicalAnd":return[o.logicalAnd(w("a",r,t,e),w("b",r,t,e))];case"LogicalNot":return[o.logicalNot(w("a",r,t,e))];case"LogicalOr":return[o.logicalOr(w("a",r,t,e),w("b",r,t,e))];case"Select":case"SelectV2":return[o.where(w("condition",r,t,e),w("a",r,t,e),w("b",r,t,e))];case"BitwiseAnd":return[o.bitwiseAnd(w("a",r,t,e),w("b",r,t,e))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var CI=(r,t,e,o=Qe)=>{switch(r.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[o.matMul(w("a",r,t,e),w("b",r,t,e),w("transposeA",r,t,e),w("transposeB",r,t,e))];case"Einsum":return[o.einsum(w("equation",r,t,e),...w("tensors",r,t,e))];case"Transpose":return[o.transpose(w("x",r,t,e),w("perm",r,t,e))];case"_FusedMatMul":let[n,i]=w("fusedOps",r,t,e),s=n==="biasadd",a=i==="prelu",l=w("numArgs",r,t,e),u=w("leakyreluAlpha",r,t,e);if(s){if(a&&l!==2)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!a&&l!==1)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}let[c,p]=w("args",r,t,e);return[o.fused.matMul({a:w("a",r,t,e),b:w("b",r,t,e),transposeA:w("transposeA",r,t,e),transposeB:w("transposeB",r,t,e),bias:c,activation:i,preluActivationWeights:p,leakyreluAlpha:u})];case"MatrixBandPart":return[o.linalg.bandPart(w("a",r,t,e),w("numLower",r,t,e),w("numUpper",r,t,e))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var kI=(r,t,e,o=Qe)=>{switch(r.op){case"EuclideanNorm":return[o.euclideanNorm(w("x",r,t,e),w("axis",r,t,e),w("keepDims",r,t,e))];case"FusedBatchNorm":case"FusedBatchNormV2":return[o.batchNorm(w("x",r,t,e),w("mean",r,t,e),w("variance",r,t,e),w("offset",r,t,e),w("scale",r,t,e),w("epsilon",r,t,e))];case"FusedBatchNormV3":return[o.batchNorm(w("x",r,t,e),w("mean",r,t,e),w("variance",r,t,e),w("offset",r,t,e),w("scale",r,t,e),w("epsilon",r,t,e))];case"LRN":return[o.localResponseNormalization(w("x",r,t,e),w("radius",r,t,e),w("bias",r,t,e),w("alpha",r,t,e),w("beta",r,t,e))];case"Softmax":return[o.softmax(w("x",r,t,e))];case"LogSoftmax":return[o.logSoftmax(w("x",r,t,e))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var II=(r,t,e,o=Qe)=>{switch(r.op){case"RaggedGather":{let{outputNestedSplits:n,outputDenseValues:i}=o.raggedGather(w("paramsNestedSplits",r,t,e),w("paramsDenseValues",r,t,e),w("indices",r,t,e),w("outputRaggedRank",r,t,e));return n.concat(i)}case"RaggedRange":{let{rtNestedSplits:n,rtDenseValues:i}=o.raggedRange(w("starts",r,t,e),w("limits",r,t,e),w("splits",r,t,e));return[n,i]}case"RaggedTensorToTensor":return[o.raggedTensorToTensor(w("shape",r,t,e),w("values",r,t,e),w("defaultValue",r,t,e),w("rowPartitionTensors",r,t,e),w("rowPartitionTypes",r,t,e))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var TI=(r,t,e,o=Qe)=>{switch(r.op){case"Max":{let a=w("axis",r,t,e),l=w("keepDims",r,t,e);return[o.max(w("x",r,t,e),a,l)]}case"Mean":{let a=w("axis",r,t,e),l=w("keepDims",r,t,e);return[o.mean(w("x",r,t,e),a,l)]}case"Min":{let a=w("axis",r,t,e),l=w("keepDims",r,t,e);return[o.min(w("x",r,t,e),a,l)]}case"Sum":{let a=w("axis",r,t,e),l=w("keepDims",r,t,e);return[o.sum(w("x",r,t,e),a,l)]}case"All":{let a=w("axis",r,t,e),l=w("keepDims",r,t,e);return[o.all(w("x",r,t,e),a,l)]}case"Any":{let a=w("axis",r,t,e),l=w("keepDims",r,t,e);return[o.any(w("x",r,t,e),a,l)]}case"ArgMax":{let a=w("axis",r,t,e);return[o.argMax(w("x",r,t,e),a)]}case"ArgMin":{let a=w("axis",r,t,e);return[o.argMin(w("x",r,t,e),a)]}case"Prod":{let a=w("axis",r,t,e),l=w("keepDims",r,t,e);return[o.prod(w("x",r,t,e),a,l)]}case"Cumprod":{let a=w("axis",r,t,e),l=w("exclusive",r,t,e),u=w("reverse",r,t,e);return[o.cumprod(w("x",r,t,e),a,l,u)]}case"Cumsum":{let a=w("axis",r,t,e),l=w("exclusive",r,t,e),u=w("reverse",r,t,e);return[o.cumsum(w("x",r,t,e),a,l,u)]}case"Bincount":let n=w("x",r,t,e),i=w("weights",r,t,e),s=w("size",r,t,e);return[o.bincount(n,i,s)];case"DenseBincount":{let a=w("x",r,t,e),l=w("weights",r,t,e),u=w("size",r,t,e),c=w("binaryOutput",r,t,e);return[o.denseBincount(a,l,u,c)]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var EI=(r,t,e,o=Qe)=>{switch(r.op){case"ConcatV2":case"Concat":{let n=w("n",r,t,e),i=w("axis",r,t,e),s=w("tensors",r,t,e);return s=s.slice(0,n),[o.concat(s,i)]}case"Gather":{let n=w("x",r,t,e),i=w("indices",r,t,e);return[o.gather(n,o.cast(i,"int32"),0)]}case"GatherV2":{let n=w("axis",r,t,e),i=w("batchDims",r,t,e),s=w("x",r,t,e),a=w("indices",r,t,e);return[o.gather(s,o.cast(a,"int32"),n,i)]}case"Reverse":{let n=w("dims",r,t,e),i=[];for(let a=0;a<n.length;a++)n[a]&&i.push(a);let s=w("x",r,t,e);return[o.reverse(s,i)]}case"ReverseV2":{let n=w("axis",r,t,e),i=w("x",r,t,e);return[o.reverse(i,n)]}case"Slice":{let n=w("begin",r,t,e),i=w("size",r,t,e);return[o.slice(w("x",r,t,e),n,i)]}case"StridedSlice":{let n=w("begin",r,t,e),i=w("end",r,t,e),s=w("strides",r,t,e),a=w("beginMask",r,t,e),l=w("endMask",r,t,e),u=w("ellipsisMask",r,t,e),c=w("newAxisMask",r,t,e),p=w("shrinkAxisMask",r,t,e),d=w("x",r,t,e);return[o.stridedSlice(d,n,i,s,a,l,u,c,p)]}case"Pack":return Ee(()=>{let n=w("axis",r,t,e),i=w("tensors",r,t,e),s=i[0].shape,a=o.squeeze(i[0]).shape,l=i.map(u=>{let c=S.arraysEqual(u.shape,s);if(!c&&!S.arraysEqual(o.squeeze(u).shape,a))throw new Error("the input tensors shape does not match");return c?u:o.reshape(u,s)});return[o.stack(l,n)]});case"Unpack":{let n=w("axis",r,t,e),i=w("tensor",r,t,e);return o.unstack(i,n)}case"Tile":{let n=w("reps",r,t,e);return[o.tile(w("x",r,t,e),n)]}case"Split":case"SplitV":{let n=w("axis",r,t,e),i=w("numOrSizeSplits",r,t,e),s=w("x",r,t,e);return o.split(s,i,n)}case"ScatterNd":{let n=w("indices",r,t,e),i=w("values",r,t,e),s=w("shape",r,t,e);return[o.scatterND(n,i,s)]}case"GatherNd":{let n=w("x",r,t,e),i=w("indices",r,t,e);return[o.gatherND(n,i)]}case"SparseToDense":{let n=w("sparseIndices",r,t,e),i=w("outputShape",r,t,e),s=w("sparseValues",r,t,e),a=w("defaultValue",r,t,e);return[o.sparseToDense(n,s,i,s.dtype===a.dtype?a:o.cast(a,s.dtype))]}case"TensorScatterUpdate":{let n=w("indices",r,t,e),i=w("values",r,t,e),s=w("tensor",r,t,e);return[o.tensorScatterUpdate(s,n,i)]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var NI=(r,t,e,o=Qe)=>{switch(r.op){case"SparseFillEmptyRows":{let{outputIndices:n,outputValues:i,emptyRowIndicator:s,reverseIndexMap:a}=o.sparse.sparseFillEmptyRows(w("indices",r,t,e),w("values",r,t,e),w("denseShape",r,t,e),w("defaultValue",r,t,e));return[n,i,s,a]}case"SparseReshape":{let{outputIndices:n,outputShape:i}=o.sparse.sparseReshape(w("inputIndices",r,t,e),w("inputShape",r,t,e),w("newShape",r,t,e));return[n,i]}case"SparseSegmentMean":return[o.sparse.sparseSegmentMean(w("data",r,t,e),w("indices",r,t,e),w("segmentIds",r,t,e))];case"SparseSegmentSum":return[o.sparse.sparseSegmentSum(w("data",r,t,e),w("indices",r,t,e),w("segmentIds",r,t,e))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var RI=(r,t,e,o=Qe)=>{switch(r.op){case"FFT":return[o.fft(w("x",r,t,e))];case"IFFT":return[o.ifft(w("x",r,t,e))];case"RFFT":return[o.rfft(w("x",r,t,e))];case"IRFFT":return[o.irfft(w("x",r,t,e))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var PI=(r,t,e,o=Qe)=>{switch(r.op){case"StaticRegexReplace":return[o.string.staticRegexReplace(w("input",r,t,e),w("pattern",r,t,e),w("rewrite",r,t,e),w("replaceGlobal",r,t,e))];case"StringNGrams":{let{nGrams:n,nGramsSplits:i}=o.string.stringNGrams(w("data",r,t,e),w("dataSplits",r,t,e),w("separator",r,t,e),w("nGramWidths",r,t,e),w("leftPad",r,t,e),w("rightPad",r,t,e),w("padWidth",r,t,e),w("preserveShortSequences",r,t,e));return[n,i]}case"StringSplit":{let{indices:n,values:i,shape:s}=o.string.stringSplit(w("input",r,t,e),w("delimiter",r,t,e),w("skipEmpty",r,t,e));return[n,i,s]}case"StringToHashBucketFast":return[o.string.stringToHashBucketFast(w("input",r,t,e),w("numBuckets",r,t,e))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var $I=(r,t,e,o=Qe)=>{switch(r.op){case"Cast":return[o.cast(w("x",r,t,e),w("dtype",r,t,e))];case"ExpandDims":{let n=w("axis",r,t,e);return[o.expandDims(w("x",r,t,e),n)]}case"Squeeze":{let n=w("axis",r,t,e);return[o.squeeze(w("x",r,t,e),n)]}case"Reshape":return[o.reshape(w("x",r,t,e),w("shape",r,t,e))];case"EnsureShape":return[o.ensureShape(w("x",r,t,e),w("shape",r,t,e))];case"MirrorPad":return[o.mirrorPad(w("x",r,t,e),w("padding",r,t,e),w("mode",r,t,e))];case"PadV2":case"Pad":return[o.pad(w("x",r,t,e),w("padding",r,t,e),w("constantValue",r,t,e))];case"SpaceToBatchND":{let n=w("blockShape",r,t,e),i=w("paddings",r,t,e);return[o.spaceToBatchND(w("x",r,t,e),n,i)]}case"BatchToSpaceND":{let n=w("blockShape",r,t,e),i=w("crops",r,t,e);return[o.batchToSpaceND(w("x",r,t,e),n,i)]}case"DepthToSpace":{let n=w("blockSize",r,t,e),i=w("dataFormat",r,t,e).toUpperCase();return[o.depthToSpace(w("x",r,t,e),n,i)]}case"BroadcastTo":return[o.broadcastTo(w("x",r,t,e),w("shape",r,t,e))];case"BroadcastArgs":return[o.broadcastArgs(w("s0",r,t,e),w("s1",r,t,e))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};function Vv(r,t,e,o,n=Ee){let i=((s,a,l)=>{switch(s.category){case"arithmetic":return n(()=>aI(s,a,l));case"basic_math":return n(()=>lI(s,a,l));case"control":return fI(s,a,l);case"convolution":return n(()=>gI(s,a,l));case"creation":return n(()=>xI(s,a,l));case"dynamic":return yI(s,a,l);case"evaluation":return n(()=>vI(s,a,l));case"image":return n(()=>wI(s,a,l));case"graph":return n(()=>bI(s,a,l));case"logical":return n(()=>_I(s,a,l));case"matrices":return n(()=>CI(s,a,l));case"normalization":return n(()=>kI(s,a,l));case"ragged":return n(()=>II(s,a,l));case"reduction":return n(()=>TI(s,a,l));case"slice_join":return n(()=>EI(s,a,l));case"sparse":return n(()=>NI(s,a,l));case"spectral":return n(()=>RI(s,a,l));case"string":return n(()=>PI(s,a,l));case"transformation":return n(()=>$I(s,a,l));case"hash_table":return SI(s,a,l,o);case"custom":let u=eh(s.op);if(u&&u.customExecutor)return u.customExecutor(new dh(s,a,l));throw TypeError(`Custom op ${s.op} is not registered.`);default:throw TypeError(`Unknown op '${s.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(r,t,e);return S.isPromise(i)?i.then(s=>[].concat(s)):[].concat(i)}var Bp=class{constructor(t={},e={},o={},n={},i){this.weightMap=t,this.tensorArrayMap=e,this.tensorListMap=o,this.functionMap=n,this.parseNodeNameCache=i,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(t,e){return{id:t,frameName:e,iterationId:0}}set currentContext(t){this.contexts!==t&&(this.contexts=t,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){let t=[];for(let e=0;e<this.contexts.length-1;e++){let o=this.contexts.slice(0,this.contexts.length-e);t.push(this.contextIdforContexts(o))}t.push(""),this._currentContextIds=t}contextIdforContexts(t){return t?t.map(e=>e.id===0&&e.iterationId===0?"":`${e.frameName}-${e.iterationId}`).join("/"):""}enterFrame(t){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,t)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(this.contexts&&this.contexts.length>1)this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift();else throw new Error("Cannot exit frame, the context is empty")}nextIteration(){if(this.contexts&&this.contexts.length>0){this.contexts=this.contexts.slice(),this.lastId++;let t=Object.assign({},this.contexts[this.contexts.length-1]);t.iterationId+=1,t.id=this.lastId,this.contexts.splice(-1,1,t),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}else throw new Error("Cannot increase frame iteration, the context is empty")}getWeight(t){return this.weightMap[t]}addTensorArray(t){this.tensorArrayMap[t.id]=t}getTensorArray(t){return this.tensorArrayMap[t]}addTensorList(t){this.tensorListMap[t.id]=t}getTensorList(t){return this.tensorListMap[t]}dispose(t){for(let e in this.tensorArrayMap)this.tensorArrayMap[e].clearAndClose(t);for(let e in this.tensorListMap)this.tensorListMap[e].clearAndClose(t)}};function Wv(r,t,e,o){let n=new Set,i=[],s=null,a=null,l=new Set,u=new Set(Object.keys(r).map(d=>Ir(d)[0]));o=o||[];let c=new Set(o.map(d=>Ir(d.name)[0])),p=[...t];for(;p.length>0;){let d=p.pop();if((es(d)||oK(d)||nK(d))&&s==null&&(s=d,a=s.children.map(m=>m.name).filter(m=>n.has(m))),n.add(d.name),e[d.name]==null&&!u.has(d.name)&&!c.has(d.name)){if(d.inputs.length===0){i.push(d.name);continue}d.inputs.forEach(m=>{l.has(m.name)||(l.add(m.name),p.push(m))})}}return{inputs:r,outputs:t,usedNodes:n,missingInputs:i,dynamicNode:s,syncInputs:a}}function AI(r,t){let{usedNodes:e,inputs:o}=t,n=Object.keys(o).map(x=>Ir(x)[0]).map(x=>r.nodes[x]),i=r.initNodes||[],s=x=>e.has(typeof x=="string"?x:x.name);function a(x){return[...new Map(x.map(y=>[y.name,y])).values()]}let l=a([...n,...r.weights,...i]).filter(s),u=a([...l,...Object.values(r.nodes)]).filter(s),c=new Map(u.map(x=>[x.name,x])),p={};for(let x of u){p[x.name]=p[x.name]||0;for(let y of x.children)s(y)||(p[y.name]=Number.POSITIVE_INFINITY),p[y.name]=(p[y.name]||0)+1}let d=Object.entries(p).filter(([,x])=>x===0).map(([x])=>x),m=[...d];for(;d.length>0;){let x=d.pop(),y=c.get(x);for(let b of y.children.filter(s))--p[b.name]===0&&(m.push(b.name),d.push(b.name))}let f=m.map(x=>c.get(x)),g=Z7(f,l);return J7(g,l),g}function Z7(r,t){let e=new Map(r.map(s=>[s.name,s])),o=t.map(s=>s.name),n=new Set(o);for(;o.length>0;){let s=o.pop(),a=e.get(s);for(let l of a.children)!e.has(l.name)||n.has(l.name)||(n.add(l.name),o.push(l.name))}return r.filter(s=>n.has(s.name))}var Cc=class extends Error{constructor(t){super(`NodesExecutionOrderError: ${t}`)}};function J7(r,t){let e=new Map(r.map((a,l)=>[a.name,l])),o=new Set(t.map(a=>a.name)),n=a=>o.has(typeof a=="string"?a:a.name),i=new Set(r.map(a=>a.name)),s=a=>i.has(typeof a=="string"?a:a.name);for(let a of r){for(let l of a.children.filter(s)){if(!e.has(l.name))throw new Cc(`Child ${l.name} of node ${a.name} is unreachable.`);if(e.get(a.name)>e.get(l.name))throw new Cc(`Node ${a.name} is scheduled to run after its child ${l.name}.`)}if(!n(a))for(let l of a.inputs){if(!e.has(l.name))throw new Cc(`Input ${l.name} of node ${a.name} is unreachable.`);if(e.get(l.name)>e.get(a.name))throw new Cc(`Node ${a.name} is scheduled to run before its input ${l.name}.`)}}}function DI(r){let t=new Map(r.map((a,l)=>[a.name,l])),e=Number.MAX_SAFE_INTEGER,o=r.map((a,l)=>es(a)?e:l),n=a=>{let l=o[t.get(a.name)];return l??-1},i=r.map((a,l)=>a.children.map(n).reduce((u,c)=>Math.max(u,c),o[l])),s=new Map;for(let a=0;a<r.length;++a){let l=i[a];if(l===e)continue;let u=r[a],c=r[l];s.has(c.name)||s.set(c.name,[]),s.get(c.name).push(u)}return s}var eK=new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),tK=new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),rK=new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]);function es(r){return eK.has(r.op)}function oK(r){return tK.has(r.op)}function nK(r){return rK.has(r.op)}var Vp=class r{get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(t){let e=Object.keys(t).map(o=>t[o].map(n=>n.id));this._weightIds=[].concat(...e),this._weightMap=t}set resourceManager(t){this._resourceManager=t}get inputs(){return this._inputs.map(t=>({name:t.name,shape:t.attrParams.shape?t.attrParams.shape.value:void 0,dtype:t.attrParams.dtype?t.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(t=>({name:t.name,shape:t.attrParams.shape?t.attrParams.shape.value:void 0,dtype:t.attrParams.dtype?t.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(t=>t.signatureKey||t.name)}get outputNodes(){return this._outputs.map(t=>{let e=t.signatureKey||t.name;return t.defaultOutput?`${e}:${t.defaultOutput}`:e})}get functions(){return Object.keys(this._functions).reduce((t,e)=>(t[e]=this._functions[e].signature,t),{})}constructor(t,e){this.graph=t,this.parent=e,this.compiledMap=new Map,this.parseNodeNameCache=new Map,this._weightMap={},this.SEPARATOR=",",this._functions={},this._functionExecutorMap={},this.keepIntermediateTensors=!1,this._outputs=t.outputs,this._inputs=t.inputs,this._initNodes=t.initNodes,this._signature=t.signature,this._functions=t.functions,t.functions!=null&&Object.keys(t.functions).forEach(o=>{this._functionExecutorMap[o]=new r(t.functions[o],this)})}getCompilationKey(t,e){let o=t.map(i=>i.name).sort(),n=e.map(i=>i.name).sort();return o.join(this.SEPARATOR)+"--"+n.join(this.SEPARATOR)}compile(t,e){let o=Wv(t,e,this.weightMap,this._initNodes),{missingInputs:n,dynamicNode:i,syncInputs:s}=o;if(i!=null)throw new Error(`This execution contains the node '${i.name}', which has the dynamic op '${i.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${s}]`);if(n.length>0){let u=e.map(p=>p.name),c=Object.keys(t);throw new Error(`Cannot compute the outputs [${u}] from the provided inputs [${c}]. Missing the following inputs: [${n}]`)}let a=AI(this.graph,o),l=DI(a);return{orderedNodes:a,nodeLiveUntilMap:l}}cloneAndKeepTensor(t){if(t==null)return null;let e=t.clone();return $r(e),e}cloneTensorList(t){return t?t.map(o=>this.cloneAndKeepTensor(o)):null}cloneTensorMap(t){return Object.fromEntries(Object.entries(t).map(([e,o])=>[e,this.cloneTensorList(o)]))}execute(t,e){this.disposeIntermediateTensors(),t=this.mapInputs(t);let o=Object.keys(t).sort();this.checkInputs(t),this.checkInputShapeAndType(t),e=this.mapOutputs(e),this.checkOutputs(e);let n=o.map(d=>this.graph.nodes[Ir(d)[0]]),i=e.map(d=>Ir(d)[0]),s=new Set(i),a=i.map(d=>this.graph.nodes[d]);a.length===0&&(a=this._outputs);let l=this.getCompilationKey(n,a),u=this.compiledMap.get(l);u==null&&(u=this.compile(t,a),this.compiledMap.set(l,u));try{this.keepIntermediateTensors=G().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(d){this.keepIntermediateTensors=!1,console.warn(d.message)}let c={},p={};return Ee(()=>{let d=new Bp(this.weightMap,c,p,this.functionExecutorMap,this.parseNodeNameCache),m=Object.assign({},this.weightMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap)),Object.keys(t).forEach(y=>{let[b,I]=Ir(y,d),N=[];N[I]=t[y],m[b]=N,this.keepIntermediateTensors&&(this.clonedTensorsMap[b]=this.cloneTensorList(N))});let f=this.getFrozenTensorIds(m),{orderedNodes:g,nodeLiveUntilMap:x}=u;for(let y of g){if(m[y.name])continue;let b=Vv(y,m,d,this._resourceManager);if(S.isPromise(b))throw new Error(`The execution of the op '${y.op}' returned a promise. Please use model.executeAsync() instead.`);m[y.name]=b,this.keepIntermediateTensors&&(this.clonedTensorsMap[y.name]=this.cloneTensorList(b)),this.checkTensorForDisposalWithNodeLiveUntilInfo(y,m,d,f,s,x.get(y.name))}return this.parent==null&&d.dispose(f),e.map(y=>Bt(y,m,d))})}getFrozenTensorIds(t){let e=[].concat.apply([],Object.keys(t).map(o=>t[o]).map(o=>o.map(n=>n.id)));return new Set(e)}checkTensorForDisposal(t,e,o,n,i,s,a){if(!(es(e)||s.has(t))){for(let l of o[t])l!=null&&(a[l.id]=(a[l.id]||0)+e.children.length);for(let l of e.inputs){if(es(l))continue;let u=yv(l.name,o,n);if(u!=null)for(let c of u){if(!c||c.kept||i.has(c.id))continue;let p=a[c.id];p===1?(c.dispose(),delete a[c.id]):p!=null&&a[c.id]--}}}}checkTensorForDisposalWithNodeLiveUntilInfo(t,e,o,n,i,s){function a(l){return es(l)||i.has(l.name)}if(!(es(t)||s==null))for(let l of s){if(a(l))continue;let u=yv(l.name,e,o);for(let c of u)!c||c.kept||n.has(c.id)||c.dispose()}}executeAsync(t,e){return j(this,null,function*(){return this._executeAsync(t,e)})}disposeIntermediateTensors(){this.clonedTensorsMap&&(Object.values(this.clonedTensorsMap).forEach(t=>{for(let e of t)e&&!e.isDisposed&&e.dispose()}),this.clonedTensorsMap=null)}getIntermediateTensors(){return this.clonedTensorsMap}_executeAsync(s,a){return j(this,arguments,function*(t,e,o=!1,n={},i={}){this.disposeIntermediateTensors(),o||(t=this.mapInputs(t),this.checkInputs(t),this.checkInputShapeAndType(t),e=this.mapOutputs(e),this.checkOutputs(e));try{this.keepIntermediateTensors=G().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(f){this.keepIntermediateTensors=!1,console.warn(f.message)}let l=new Bp(this.weightMap,n,i,this.functionExecutorMap,this.parseNodeNameCache);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap));let u=yield this.executeWithControlFlow(t,l,e,o),c=e.map(f=>Bt(f,u,l)),p=c.map(f=>f.id),d=Object.keys(t).map(f=>t[f].id),m=new Set([...p,...d,...this.weightIds]);return Object.values(u).forEach(f=>{f.forEach(g=>{g&&!g.isDisposed&&!m.has(g.id)&&g.dispose()})}),this.parent==null&&l.dispose(m),c})}executeFunctionAsync(t,e,o){return j(this,null,function*(){let n=t.reduce((i,s,a)=>(i[this.inputs[a].name]=s,i),{});return this._executeAsync(n,this.outputNodes,!0,e,o)})}executeWithControlFlow(t,e,o,n){return j(this,null,function*(){let i=Object.keys(t),s=i.map(N=>this.graph.nodes[Ir(N)[0]]),a=o.map(N=>Ir(N)[0]),l=new Set(a),u=a.map(N=>this.graph.nodes[N]);u.length===0&&(u=this._outputs);let{usedNodes:c,missingInputs:p,dynamicNode:d,syncInputs:m}=Wv(t,u,this.weightMap,this._initNodes),f=[...s,...this.graph.weights,...this._initNodes||[]].map(N=>({node:N,contexts:e.currentContext})),g=Object.assign({},this.weightMap);Object.keys(t).forEach(N=>{let[M,B]=Ir(N),W=[];W[B]=t[N],g[M]=W});let x={},y=this.getFrozenTensorIds(g),b={};for(;f.length>0;){let N=this.processStack(s,f,e,g,b,y,l,x,c);yield Promise.all(N)}d==null&&!n&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");let I=u.filter(N=>!es(N)&&!Bt(N.name,g,e)).map(N=>N.name);if(I.length>0){let N="";throw d!=null&&(N=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${m}]`),new Error(`Cannot compute the outputs [${I}] from the provided inputs [${i}]. Consider providing the following inputs: [${p}]. ${N}`)}return g})}processStack(t,e,o,n,i,s,a,l,u){let c=[];for(;e.length>0;){let p=e.pop();o.currentContext=p.contexts;let d="";if(p.node.op==="Enter"&&w("isConstant",p.node,n,o)&&([d]=qo(p.node.name,o)),n[p.node.name]==null){let m=Vv(p.node,n,o,this._resourceManager);d||([d]=qo(p.node.name,o));let f=o.currentContext;S.isPromise(m)?c.push(m.then(g=>(n[d]=g,this.keepIntermediateTensors&&(this.clonedTensorsMap[d]=this.cloneTensorList(g)),o.currentContext=f,this.checkTensorForDisposal(d,p.node,n,o,s,a,l),this.processChildNodes(p.node,e,o,n,i,u),g))):(n[d]=m,this.keepIntermediateTensors&&(this.clonedTensorsMap[d]=this.cloneTensorList(m)),this.checkTensorForDisposal(d,p.node,n,o,s,a,l),this.processChildNodes(p.node,e,o,n,i,u))}else this.processChildNodes(p.node,e,o,n,i,u)}return c}processChildNodes(t,e,o,n,i,s){t.children.forEach(a=>{let[l]=qo(a.name,o);i[l]||!s.has(a.name)||(a.op==="Merge"?a.inputNames.some(u=>!!Bt(u,n,o))&&(i[l]=!0,e.push({contexts:o.currentContext,node:a})):a.inputNames.every(u=>!!Bt(u,n,o))&&(i[l]=!0,e.push({contexts:o.currentContext,node:a})))})}dispose(){Object.keys(this.weightMap).forEach(t=>this.weightMap[t].forEach(e=>e.dispose()))}checkInputShapeAndType(t){Object.keys(t).forEach(e=>{let o=t[e],[n]=Ir(e),i=this.graph.nodes[n];if(i.attrParams.shape&&i.attrParams.shape.value){let s=i.attrParams.shape.value,a=s.length===o.shape.length&&o.shape.every((l,u)=>s[u]===-1||s[u]===l);S.assert(a,()=>`The shape of dict['${i.name}'] provided in model.execute(dict) must be [${s}], but was [${o.shape}]`)}i.attrParams.dtype&&i.attrParams.dtype.value&&S.assert(o.dtype===i.attrParams.dtype.value,()=>`The dtype of dict['${i.name}'] provided in model.execute(dict) must be ${i.attrParams.dtype.value}, but was ${o.dtype}`)})}mapInputs(t){var e,o;let n={};for(let i in t){let s=(o=(e=this._signature)===null||e===void 0?void 0:e.inputs)===null||o===void 0?void 0:o[i];s!=null?n[s.name]=t[i]:n[i]=t[i]}return n}checkInputs(t){let e=Object.keys(t).filter(o=>{let[n]=Ir(o);return this.graph.nodes[n]==null});if(e.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${e}] that are not part of graph`)}mapOutputs(t){return t.map(e=>{var o,n;let i=(n=(o=this._signature)===null||o===void 0?void 0:o.outputs)===null||n===void 0?void 0:n[e];return i!=null?i.name:e},{})}checkOutputs(t){t.forEach(e=>{let[o]=Ir(e);if(!this.graph.nodes[o])throw new Error(`The output '${e}' is not found in the graph`)})}};var gh=class{constructor(t={},e={}){this.hashTableNameToHandle=t,this.hashTableMap=e}addHashTable(t,e){this.hashTableNameToHandle[t]=e.handle,this.hashTableMap[e.id]=e}getHashTableHandleByName(t){return this.hashTableNameToHandle[t]}getHashTableById(t){return this.hashTableMap[t]}dispose(){for(let t in this.hashTableMap)this.hashTableMap[t].clearAndClose(),delete this.hashTableMap[t];for(let t in this.hashTableNameToHandle)this.hashTableNameToHandle[t].dispose(),delete this.hashTableNameToHandle[t]}};var iK="?tfjs-format=file",sK="model.json",xh=class{get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}constructor(t,e={},o=Op){this.modelUrl=t,this.loadOptions=e,this.version="n/a",this.io=o,e==null&&(this.loadOptions={}),this.resourceManager=new gh}findIOHandler(){let t=this.modelUrl;if(t.load!=null)this.handler=t;else if(this.loadOptions.requestInit!=null)this.handler=this.io.browserHTTPRequest(t,this.loadOptions);else{let e=this.io.getLoadHandlers(t,this.loadOptions);if(e.length===0)e.push(this.io.browserHTTPRequest(t,this.loadOptions));else if(e.length>1)throw new Error(`Found more than one (${e.length}) load handlers for URL '${[t]}'`);this.handler=e[0]}}load(){if(this.findIOHandler(),this.handler.load==null)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let t=this.handler.load();return S.isPromise(t)?t.then(e=>e.getWeightStream==null?this.loadSync(e):this.loadStreaming(e)):this.loadSync(t)}loadSync(t){let e=this.io.decodeWeights(t.weightData,t.weightSpecs);return this.loadWithWeightMap(t,e)}loadStreaming(t){return j(this,null,function*(){if(t.getWeightStream==null)throw new Error("Model artifacts missing streamWeights function");let e=yield zm(t.getWeightStream(),t.weightSpecs);return this.loadWithWeightMap(t,e)})}loadWithWeightMap(t,e){this.artifacts=t;let o=this.artifacts.modelTopology,n=this.artifacts.signature;if(this.artifacts.userDefinedMetadata!=null){let i=this.artifacts.userDefinedMetadata;i.signature!=null&&(n=i.signature),i.structuredOutputKeys!=null&&(this.structuredOutputKeys=i.structuredOutputKeys)}if(this.signature=n,this.version=`${o.versions.producer}.${o.versions.minConsumer}`,this.executor=new Vp(Mp.Instance.transformGraph(o,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(e),this.executor.resourceManager=this.resourceManager,t.modelInitializer!=null&&t.modelInitializer.node!=null){let i=Mp.Instance.transformGraph(t.modelInitializer);this.initializer=new Vp(i),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializerSignature=t.initializerSignature}return!0}save(t,e){return j(this,null,function*(){if(typeof t=="string"){let o=this.io.getSaveHandlers(t);if(o.length===0)throw new Error(`Cannot find any save handlers for URL '${t}'`);if(o.length>1)throw new Error(`Found more than one (${o.length}) save handlers for URL '${t}'`);t=o[0]}if(t.save==null)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return t.save(this.artifacts)})}addStructuredOutputNames(t){if(this.structuredOutputKeys){let e=t instanceof st?[t]:t,o={};return e.forEach((n,i)=>o[this.structuredOutputKeys[i]]=n),o}return t}predict(t,e){let o=this.execute(t,this.outputNodes);return this.addStructuredOutputNames(o)}predictAsync(t,e){return j(this,null,function*(){let o=yield this.executeAsync(t,this.outputNodes);return this.addStructuredOutputNames(o)})}normalizeInputs(t){var e;if(!(t instanceof st)&&!Array.isArray(t)){let i=(e=this.signature)===null||e===void 0?void 0:e.inputs;if(i!=null)for(let s in i){let a=i[s];a.resourceId!=null&&(t[s]=this.resourceIdToCapturedInput[a.resourceId])}return t}t=Array.isArray(t)?t:[t];let o=Object.keys(this.resourceIdToCapturedInput).length;if(t.length+o!==this.inputNodes.length)throw new Error(`Input tensor count mismatch, the graph model has ${this.inputNodes.length-o} non-resource placeholders, while there are ${t.length} input tensors provided.`);let n=0;return this.inputNodes.reduce((i,s)=>{var a,l,u;let c=(u=(l=(a=this.signature)===null||a===void 0?void 0:a.inputs)===null||l===void 0?void 0:l[s])===null||u===void 0?void 0:u.resourceId;return c!=null?i[s]=this.resourceIdToCapturedInput[c]:i[s]=t[n++],i},{})}normalizeOutputs(t){return t=t||this.outputNodes,Array.isArray(t)?t:[t]}executeInitializerGraph(){return this.initializer==null?[]:this.initializerSignature==null?this.initializer.execute({},[]):this.initializer.execute({},Object.keys(this.initializerSignature.outputs))}executeInitializerGraphAsync(){return j(this,null,function*(){return this.initializer==null?[]:this.initializerSignature==null?this.initializer.executeAsync({},[]):this.initializer.executeAsync({},Object.keys(this.initializerSignature.outputs))})}setResourceIdToCapturedInput(t){if(this.resourceIdToCapturedInput={},this.initializerSignature){let e=this.initializerSignature.outputs,o=Object.keys(e);for(let n=0;n<o.length;n++){let i=o[n],s=e[i];this.resourceIdToCapturedInput[s.resourceId]=t[n]}}}execute(t,e){this.resourceIdToCapturedInput==null&&this.setResourceIdToCapturedInput(this.executeInitializerGraph()),t=this.normalizeInputs(t),e=this.normalizeOutputs(e);let o=this.executor.execute(t,e);return o.length>1?o:o[0]}executeAsync(t,e){return j(this,null,function*(){this.resourceIdToCapturedInput==null&&this.setResourceIdToCapturedInput(yield this.executeInitializerGraphAsync()),t=this.normalizeInputs(t),e=this.normalizeOutputs(e);let o=yield this.executor.executeAsync(t,e);return o.length>1?o:o[0]})}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(t){return Object.keys(t).reduce((e,o)=>(e[o]=[t[o]],e),{})}dispose(){this.executor.dispose(),this.initializer&&(this.initializer.dispose(),this.resourceIdToCapturedInput&&Xe(this.resourceIdToCapturedInput)),this.resourceManager.dispose()}};function ts(o){return j(this,arguments,function*(r,t={},e=Op){if(r==null)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");t==null&&(t={}),t.fromTFHub&&typeof r=="string"&&(r=aK(r));let n=new xh(r,t,e);return yield n.load(),n})}function aK(r){return r.endsWith("/")||(r=r+"/"),`${r}${sK}${iK}`}var Co=G();Co.registerFlag("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE",()=>15);Co.registerFlag("WEBGPU_CPU_FORWARD",()=>!0);Co.registerFlag("WEBGPU_MATMUL_PROGRAM_TYPE",()=>-1);Co.registerFlag("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE",()=>!0);Co.registerFlag("WEBGPU_USE_LOW_POWER_GPU",()=>!1);Co.registerFlag("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e3);Co.registerFlag("WEBGPU_USE_PROFILE_TOOL",()=>!1);Co.registerFlag("WEBGPU_IMPORT_EXTERNAL_TEXTURE",()=>!0);Co.registerFlag("WEBGPU_USE_NAIVE_CONV2D_DEBUG",()=>!1);Co.registerFlag("WEBGPU_THRESHOLD_TO_INCREASE_WORKGROUPS_FOR_MATMUL",()=>-1);Co.registerFlag("WEBGPU_CONV_SEPARATE_IM2COL_SHADER",()=>!1);Co.registerFlag("WEBGPU_PRINT_SHADER",()=>"");Co.registerFlag("WEBGPU_ENGINE_COMPILE_ONLY",()=>!1);var yh=class{constructor(t){t&&(this.vendor=t.vendor,this.architecture=t.architecture,this.intelGPUGeneration=this.getIntelGPUGeneration())}getIntelGPUGeneration(){if(this.isIntel()){if(this.architecture.startsWith("gen"))return Number(this.architecture.match(/\d+/));if(this.architecture.startsWith("xe"))return 12}return 0}isIntel(){return this.vendor==="intel"}};var vh=class{constructor(t){this.device=t,this.numUsedBuffers=0,this.numFreeBuffers=0,this.freeBuffers=new Map,this.usedBuffers=new Map,this.numBytesUsed=0,this.numBytesAllocated=0}acquireBuffer(t,e,o=!1,n=!0){let i,s=FI(t,e);return n?(this.freeBuffers.has(s)||this.freeBuffers.set(s,[]),this.freeBuffers.get(s).length>0?(i=this.freeBuffers.get(s).pop(),this.numFreeBuffers--):(i=this.device.createBuffer({size:t,usage:e,mappedAtCreation:o}),this.numBytesAllocated+=t)):(i=this.device.createBuffer({size:t,usage:e,mappedAtCreation:o}),this.numBytesAllocated+=t),this.usedBuffers.has(s)||this.usedBuffers.set(s,[]),this.usedBuffers.get(s).push(i),this.numUsedBuffers++,this.numBytesUsed+=t,i}releaseBuffer(t,e=!0){if(this.freeBuffers.size===0)return;let o=t.size,n=t.usage,i=FI(o,n),s=this.usedBuffers.get(i),a=s.indexOf(t);if(a<0)throw new Error("Cannot find the buffer in buffer manager");s[a]=s[s.length-1],s.pop(),this.numUsedBuffers--,this.numBytesUsed-=o,e?(this.freeBuffers.get(i).push(t),this.numFreeBuffers++):(t.destroy(),this.numBytesAllocated-=o)}getNumUsedBuffers(){return this.numUsedBuffers}getNumFreeBuffers(){return this.numFreeBuffers}dispose(){this.freeBuffers.forEach((t,e)=>{t.forEach(o=>{o.destroy()})}),this.usedBuffers.forEach((t,e)=>{t.forEach(o=>{o.destroy()})}),this.freeBuffers=new Map,this.usedBuffers=new Map,this.numUsedBuffers=0,this.numFreeBuffers=0,this.numBytesUsed=0,this.numBytesAllocated=0}};function FI(r,t){return`${r}_${t}`}var bh=class{constructor(t){this.device=t,this.numUsedTextures=0,this.numFreeTextures=0,this.freeTextures=new Map,this.usedTextures=new Map,this.numBytesUsed=0,this.numBytesAllocated=0}acquireTexture(t,e,o,n){let i=LI(o),s=t*e*i,a=OI(t,e,o,n);if(this.freeTextures.has(a)||this.freeTextures.set(a,[]),this.usedTextures.has(a)||this.usedTextures.set(a,[]),this.numBytesUsed+=s,this.numUsedTextures++,this.freeTextures.get(a).length>0){this.numFreeTextures--;let u=this.freeTextures.get(a).shift();return this.usedTextures.get(a).push(u),u}this.numBytesAllocated+=s;let l=this.device.createTexture({size:[t,e],format:o,usage:n});return this.usedTextures.get(a).push(l),l}releaseTexture(t){if(this.freeTextures.size===0)return;let e=t.width,o=t.height,n=t.format,i=t.usage,s=OI(e,o,n,i);this.freeTextures.has(s)||this.freeTextures.set(s,[]),this.freeTextures.get(s).push(t),this.numFreeTextures++,this.numUsedTextures--;let a=this.usedTextures.get(s),l=a.indexOf(t);if(l<0)throw new Error("Cannot release a texture that was never provided by this texture manager");a.splice(l,1);let u=LI(n),c=e*o*u;this.numBytesUsed-=c}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){this.freeTextures.forEach((t,e)=>{t.forEach(o=>{o.destroy()})}),this.usedTextures.forEach((t,e)=>{t.forEach(o=>{o.destroy()})}),this.freeTextures=new Map,this.usedTextures=new Map,this.numUsedTextures=0,this.numFreeTextures=0,this.numBytesUsed=0,this.numBytesAllocated=0}};function OI(r,t,e,o){return`${r}_${t}_${e}_${o}`}function LI(r){if(r==="rgba8unorm")return 16;throw new Error(`${r} is not supported!`)}function MI(r,t){if(Math.max(...r)>5)throw new Error("Cannot symbolically compute strides for rank > 6 tensor.");let e=r.length,o="xyzwuv",n=r.map(s=>`${t}.${o[s]}`),i=new Array(e-1);i[e-2]=n[e-1];for(let s=e-3;s>=0;--s)i[s]=`(${i[s+1]} * ${n[s+1]})`;return i}var lo=(r,t,e)=>e==="int32"?`atomicAdd(${r}, bitcast<i32>(${t}));`:`
          {
            var oldValue = 0;
            loop {
              let newValueF32 = bitcast<f32>(oldValue) + (${t});
              let newValue = bitcast<i32>(newValueF32);
              let res = atomicCompareExchangeWeak(${r}, oldValue, newValue);
              if res.exchanged {
                break;
              }
              oldValue = res.old_value;
            }
          }`;var os=function(r){return r[r.FROM_PIXELS=0]="FROM_PIXELS",r[r.DRAW=1]="DRAW",r}(os||{}),UI=(r,t,e,o,n)=>{let i={dtype:o.dtype,shape:o.shape},s=uK(e,i,t),a=r.createShaderModule({code:s,label:t.constructor.name}),l=G().get("WEBGPU_PRINT_SHADER");if(l!==""){l=l.toLowerCase();let u=l.split(",");(l==="all"||u.some(c=>t.shaderKey.toLowerCase().includes(c)))&&(console.group(t.shaderKey),console.debug(s),console.groupEnd())}return n?r.createComputePipelineAsync({compute:{module:a,entryPoint:"_start"},label:t.constructor.name,layout:"auto"}):r.createComputePipeline({compute:{module:a,entryPoint:"_start"},label:t.constructor.name,layout:"auto"})},We=(r,t="f32")=>{switch(r){case 1:return`${t}`;case 2:return`vec2<${t}>`;case 3:return`vec3<${t}>`;case 4:return`vec4<${t}>`;default:throw new Error(`${r}-component ${t} is not supported.`)}};function mt(r){if(r<=1)return"i32";if(r===2)return"vec2<i32>";if(r===3)return"vec3<i32>";if(r===4)return"vec4<i32>";if(r===5)return"vec5";if(r===6)return"vec6";throw Error(`GPU for rank ${r} is not yet supported`)}function Lo(r){if(r===0)return"x";if(r===1)return"y";if(r===2)return"z";if(r===3)return"w";if(r===4)return"u";if(r===5)return"v";throw Error(`Index ${r} is not yet supported`)}function J(...r){let t;switch(r.length){case 0:t=`
        fn main()
      `;break;case 1:t=`
        fn main(${r[0]} : i32)
      `;break;default:throw Error("Unreachable")}return t}function BI(r,t){let e;return e=`
     ${lK(t)}
      fn _start(@builtin(local_invocation_id) LocalId : vec3<u32>,
                @builtin(global_invocation_id) GlobalId : vec3<u32>,
                @builtin(local_invocation_index) LocalIndex: u32,
                @builtin(workgroup_id) WorkgroupId : vec3<u32>,
                @builtin(num_workgroups) NumWorkgroups : vec3<u32>) {
        localId = LocalId;
        localIndex = LocalIndex;
        globalId = GlobalId;
        numWorkgroups = NumWorkgroups;
        workgroupId = WorkgroupId;
        ${r?"main(getGlobalIndex());":"main();"};
      }
    `,e}function lK(r){return`
  @compute @workgroup_size(${r.workgroupSize[0]}, ${r.workgroupSize[1]}, ${r.workgroupSize[2]})
`}function uK(r,t,e){let o=[],n=e.workgroupSize[0]*e.workgroupSize[1]*e.workgroupSize[2];if(e.outputComponent=e.outputComponent?e.outputComponent:1,o.push(`

      var<private> localId: vec3<u32>;
      var<private> localIndex: u32;
      var<private> globalId: vec3<u32>;
      var<private> numWorkgroups: vec3<u32>;
      var<private> workgroupId: vec3<u32>;

      // Only used when the y/z dimension of workgroup size is 1.
      fn getGlobalIndex() -> i32 {
        ${GI(e)?"  return i32(globalId.x);":`  return i32((workgroupId.z * numWorkgroups.x * numWorkgroups.y +
                workgroupId.y * numWorkgroups.x + workgroupId.x) * ${n}u +
                localIndex);
        `}
      }
    `),e.pixelsOpType!=null){let f=e.pixelsOpType===os.FROM_PIXELS?`@group(0) @binding(0) var<storage, read_write> result: array<${rs(t.dtype,e.outputComponent)}>;`:`@group(0) @binding(1) var<storage, read> inBuf : array<${rs(r[0].dtype,e.outputComponent)}>;`,g=t.shape.length===3?"vec2<i32>":"i32";o.push(`
        struct Uniform {
          outShapeStrides : ${g},
          size            : i32,
          numChannels     : i32,
          alpha           : f32,
        };

        ${f}
        @group(0) @binding(2) var<uniform> uniforms: Uniform;
      `);let x=WI(e);return[VI,o.join(`
`),Wp(t.shape),e.getUserCode(),BI(x,e)].join(`
`)}let i,s,a="struct Uniforms { NAN : f32, INFINITY : f32, ";e.variableNames.forEach((f,g)=>{let x=mt(r[g].shape.length);a+=`${f.charAt(0).toLowerCase()+f.slice(1)}Shape : ${x}, `,i=r[g].shape.length-1,s=mt(i),a+=`${f.charAt(0).toLowerCase()+f.slice(1)}ShapeStrides: ${s}, `});let l=mt(t.shape.length);a+=`outShape : ${l}, `,i=t.shape.length-1,s=mt(i),a+=`
         outShapeStrides: ${s}, `,e.size&&(a+="size : i32, "),e.uniforms&&(a+=e.uniforms),a+="};",a=xK(a),o.push(a),e.atomic?o.push(`
      @group(0) @binding(0) var<storage, read_write> result: array<atomic<i32>>;
    `):o.push(`
      @group(0) @binding(0) var<storage, read_write> result: array<${rs(t.dtype,e.outputComponent)}>;
    `),e.variableNames.forEach((f,g)=>{o.push(`
      @group(0) @binding(${1+g}) var<storage, read> ${f}: array<${e.variableComponents?rs(r[g].dtype,e.variableComponents[g]):rs(r[g].dtype,e.outputComponent)}>;
        `)}),a!==""&&o.push(`
      @group(0) @binding(${1+e.variableNames.length}) var<uniform> uniforms: Uniforms;
      `);let u=fK(t.shape,e.dispatchLayout),c=[VI,o.join(`
`)+cK,Wp(t.shape),u,hK(t.shape.length)];e.atomic||c.push(gK(t.shape,t.dtype,e.outputComponent)),e.variableNames.forEach((f,g)=>{c.push(`${Wp(r[g].shape,f)}`)});let p=r.map((f,g)=>mK(f,t.shape,e.variableComponents?e.variableComponents[g]:e.outputComponent,e.dispatchLayout.x.length===t.shape.length)).join(`
`);c.push(p),c.push(e.getUserCode());let d=WI(e);return c.push(BI(d,e)),c.join(`
`)}function zI(r,t,e){let o=r.shaderKey;if(r.pixelsOpType!=null)return o;let n=[],i=[];t.forEach(c=>{n.push(c.shape),i.push(c.dtype)}),n.push(e.shape),i.push(e.dtype);let s=t.map(c=>P.getBroadcastDims(c.shape,e.shape)),a=t.map(c=>S.arraysEqual(c.shape,e.shape)).join("_"),l=s.map(c=>c.join("_")).join(";"),u=GI(r)?"flatDispatch":"";return o+="_"+(r.workgroupSize?r.workgroupSize.join(","):"")+n.map(c=>c.length).join(",")+i.join(",")+r.variableNames.join(",")+l+a+u,o}var VI=`
  struct vec5 {x: i32, y: i32, z: i32, w: i32, u: i32};
  struct vec6 {x: i32, y: i32, z: i32, w: i32, u: i32, v: i32};

  // Checks whether coordinates lie within the bounds of the shape.
  fn coordsInBounds2D(coord : vec2<i32>, shape : vec2<i32>) -> bool {
    return all(coord >= vec2<i32>(0)) && all(coord < shape);
  }
  fn coordsInBounds3D(coord : vec3<i32>, shape : vec3<i32>) -> bool {
    return all(coord >= vec3<i32>(0)) && all(coord < shape);
  }
  fn coordsInBounds4D(coord : vec4<i32>, shape : vec4<i32>) -> bool {
    return all(coord >= vec4<i32>(0)) && all(coord < shape);
  }

  fn getIndexFromCoords1D(coord : i32, shape : i32) -> i32 {
    return coord;
  }
  fn getIndexFromCoords2D(coords : vec2<i32>, shape : vec2<i32>) -> i32 {
    return dot(coords, vec2<i32>(shape.y, 1));
  }
  fn getIndexFromCoords3D(coords : vec3<i32>, shape : vec3<i32>) -> i32 {
    return dot(coords, vec3<i32>(shape.y * shape.z, shape.z, 1));
  }
  fn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {
    return dot(coords, vec4<i32>(
        shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));
  }
  fn getIndexFromCoords5D(coords : vec5, shape : vec5) -> i32 {
    let shapeStrides: vec5 = vec5(shape.y * shape.z * shape.w * shape.u, shape.z * shape.w * shape.u, shape.w * shape.u, shape.u, 1);
    return coords.x*shapeStrides.x + coords.y*shapeStrides.y + coords.z*shapeStrides.z + coords.w*shapeStrides.w + coords.u*shapeStrides.u;
  }
  fn getIndexFromCoords6D(coords : vec6, shape : vec6) -> i32 {
    let shapeStrides: vec6 = vec6(shape.y * shape.z * shape.w * shape.u * shape.v, shape.z * shape.w * shape.u * shape.v, shape.w * shape.u * shape.v, shape.u * shape.v, shape.v, 1);
    return coords.x*shapeStrides.x + coords.y*shapeStrides.y + coords.z*shapeStrides.z + coords.w*shapeStrides.w + coords.u*shapeStrides.u + coords.v*shapeStrides.v;
  }

  // NaN defination in IEEE 754-1985 is :
  //   - sign = either 0 or 1.
  //   - biased exponent = all 1 bits.
  //   - fraction = anything except all 0 bits (since all 0 bits represents infinity).
  // https://en.wikipedia.org/wiki/IEEE_754-1985#Representation_of_non-numbers
  fn isnan(val: f32) -> bool {
    let floatToUint: u32 = bitcast<u32>(val);
    return (floatToUint & 0x7fffffffu) > 0x7f800000u;
  }
  fn isnanVec4(val : vec4<f32>) -> vec4<bool> {
    let floatToUint: vec4<u32> = bitcast<vec4<u32>>(val);
    return (floatToUint & vec4<u32>(0x7fffffffu)) > vec4<u32>(0x7f800000u);
  }
`,cK=`
  fn isinf(val: f32) -> bool {
    return abs(val) == uniforms.INFINITY;
  }
`;function Wp(r,t=""){let e=r.length,o=t!==""?`get${t.charAt(0).toUpperCase()+t.slice(1)}CoordsFromIndex`:"getCoordsFromIndex",n=t!==""?`${t.charAt(0).toLowerCase()+t.slice(1)}ShapeStrides`:"outShapeStrides";if(e<=1)return`fn ${o}(index : i32) -> i32 { return index; }`;let i=S.computeStrides(r),s=mt(e),a=[];for(let u=0;u<e;u++)a.push(`d${u}`);if(i.length===1)return`    fn ${o}(index : i32) -> vec2<i32> {
      let d0 = index / uniforms.${n}; let d1 = index - d0 * uniforms.${n};
      return vec2<i32>(d0, d1);
    }`;let l;return l="var index2 = index;"+i.map((u,c)=>{let p=`let ${a[c]} = index2 / uniforms.${n}.${Lo(c)}`,d=c===i.length-1?`let ${a[c+1]} = index2 - ${a[c]} * uniforms.${n}.${Lo(c)}`:`index2 = index2 - ${a[c]} * uniforms.${n}.${Lo(c)}`;return`${p}; ${d};`}).join(""),`
    fn ${o}(index : i32) -> ${s} {
      ${l}
      return ${s}(${a.join(",")});
    }
  `}function pK(r,t){let e=r.name,o=r.shape.length,n=mt(o),i="get"+e.charAt(0).toUpperCase()+e.slice(1),s=["d0","d1","d2","d3","d4","d5"].slice(0,o),a=s.map(c=>`${c} : i32`).join(", ");if(o<1)return`
      fn ${i}() -> ${We(t)} {
        return ${We(t)}(${e}[0]);
      }
    `;let l=`uniforms.${e.charAt(0).toLowerCase()+e.slice(1)}Shape`,u=`${o}D`;return o===0&&(u="1D"),`
    fn ${i}(${a}) -> ${We(t)} {
      return ${We(t)}(${e}[getIndexFromCoords${u}(${n}(${s.join(",")}),
        ${l})${t===1?"":` / ${t}`}]);
    }
   `}function dK(r,t,e,o){let n=r.name,i=n.charAt(0).toUpperCase()+n.slice(1),s="get"+i+"ByOutput",a=r.shape.length,l=t.length,u=mt(l);if(S.arraysEqual(r.shape,t)&&o)return`
    fn ${s}Index(globalIndex : i32) -> ${We(e)} {
      return ${We(e)}(${n}[globalIndex]);
    }

    fn ${s}Coords(coords : ${u}) -> ${We(e)} {
      return ${We(e)}(${n}[${l>1?"getOutputIndexFromCoords(coords)":"coords"}${e===1?"":` / ${e}`}]);
    }
    `;let c=P.getBroadcastDims(r.shape,t),p=l-a,d="";if(a===0)return`
    fn ${s}Index(globalIndex : i32) -> ${We(e)}{
      return get${i}();
    }

    fn ${s}Coords(coords : ${u}) -> ${We(e)}{
      return get${i}();
    }
  `;l<2&&c.length>=1?d="coords = 0;":d=c.map(x=>`coords.${Lo(x+p)} = 0;`).join(`
`);let m="";if(l<2&&a>0)m="coords";else if(l>1){let x=mt(a),y=r.shape.map((b,I)=>`coords.${Lo(I+p)}`).join(", ");m=`${x}(${y})`}else m="coords";let f=`uniforms.${n.charAt(0).toLowerCase()+n.slice(1)}Shape`,g=`${a}D`;return`
  fn ${s}Index(globalIndex : i32) -> ${We(e)} {
    var coords = getCoordsFromIndex(globalIndex);
    ${d}
    return ${We(e)}(${n}[getIndexFromCoords${g}(${m}, ${f})${e===1?"":` / ${e}`}]);
  }

  fn ${s}Coords(coordsIn : ${u}) -> ${We(e)} {
    var coords = coordsIn;
    ${d}
    return ${We(e)}(${n}[getIndexFromCoords${g}(${m}, ${f})${e===1?"":` / ${e}`}]);
  }
`}function mK(r,t,e,o){let n=pK(r,e);return r.shape.length<=t.length&&(n+=dK(r,t,e,o)),n}function fK(r,t){let{x:e,y:o=[],z:n=[]}=t,i=r.length,s=e.length+o.length+n.length;if(s!==i)return"";if(e.length===i)return`fn getOutputCoords() -> ${mt(i)}{
    let globalIndex = getGlobalIndex();
    return getCoordsFromIndex(globalIndex);
  }
  `;let a="",l=[e,o,n];for(let d=0;d<l.length;d++){let m=l[d];if(m.length!==0)if(m.length===1)a+=`let d${m[0]} = i32(globalId[${d}]);`;else{let f=MI(m,"uniforms.outShape");a+=`var index${d} = i32(globalId[${d}]);`;for(let g=0;g<f.length;g++)a+=`let d${m[g]} = index${d} / ${f[g]};`,g===f.length-1?a+=`let d${m[g+1]} = index${d} - d${m[g]} * ${f[g]};`:a+=`index${d} = index${d} - d${m[g]} * ${f[g]};`}}let u=[];for(let d=0;d<s;d++)u.push(`d${d}`);let c=mt(s),p=`fn getOutputCoords() -> ${c} {
  ${a}
`;return u.length===0?p+=`return ${c}(0); }`:p+=`return ${c}(${u.join(",")}); }`,p}function hK(r){let t="";switch(r){case 0:case 1:t+=`
        fn getOutputIndexFromCoords(coords : i32) -> i32 {
          return coords;
        }
        `;break;case 2:t+=`
        fn getOutputIndexFromCoords(coords : vec2<i32>) -> i32 {
          return dot(coords, vec2<i32>(uniforms.outShapeStrides, 1));
        }
        `;break;case 3:t+=`
        fn getOutputIndexFromCoords(coords : vec3<i32>) -> i32 {
          return dot(coords, vec3<i32>(uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, 1));
        }
        `;break;case 4:t+=`
        fn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {
          return dot(coords, vec4<i32>(
            uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, uniforms.outShapeStrides.z, 1));
        }
        `;break;case 5:t+=`
        fn getOutputIndexFromCoords(coords : vec5) -> i32 {
          return coords.x * uniforms.outShapeStrides.x +
              coords.y * uniforms.outShapeStrides.y +
              coords.z * uniforms.outShapeStrides.z +
              coords.w * uniforms.outShapeStrides.w +
              coords.u;
        }
        `;break;case 6:t+=`
        fn getOutputIndexFromCoords(coords : vec6) -> i32 {
          return coords.x * uniforms.outShapeStrides.x +
              coords.y * uniforms.outShapeStrides.y +
              coords.z * uniforms.outShapeStrides.z +
              coords.w * uniforms.outShapeStrides.w +
              coords.u * uniforms.outShapeStrides.u +
              coords.v;
        }
        `;break;default:S.assert(!1,()=>`Unsupported ${r}D shape`);break}return t}function GI(r){return r.dispatch[1]===1&&r.dispatch[2]===1}function rs(r,t=1){if(r==="float32")return We(t,"f32");if(r==="int32"||r==="bool")return We(t,"i32");throw new Error(`type ${r} is not supported.`)}function gK(r,t,e){let o=r.length,n=rs(t,e),i=`fn setOutputAtIndex(flatIndex : i32, value : ${We(e)}) {
      result[flatIndex] = ${n}(value);
    }

    fn setOutputAtIndexI32(flatIndex : i32, value : ${We(e,"i32")}) {
      result[flatIndex] = ${n}(value);
    }
    `;if(o>=2){let s=["d0","d1","d2","d3","d4","d5"].slice(0,o),a=mt(o);i+=`
      fn setOutputAtCoords(${s.map(l=>`${l} : i32`).join(", ")}, value : ${We(e)}) {
        let flatIndex = getOutputIndexFromCoords(${a}(${s.join(", ")}));
        setOutputAtIndex(flatIndex${e===1?"":` / ${e}`}, value);
      }
      fn setOutputAtCoordsI32(${s.map(l=>`${l} : i32`).join(", ")}, value : ${We(e,"i32")}) {
        let flatIndex = getOutputIndexFromCoords(${a}(${s.join(", ")}));
        setOutputAtIndexI32(flatIndex${e===1?"":` / ${e}`}, value);
      }
    `}return i}function xK(r){let t=/(\w+)\s*:\s*vec(5|6)/g;r=r.replace(t,o=>"@align(16) "+o);let e=/vec(5|6)\s*,\s*(\w+)/g;return r=r.replace(e,(o,n,i)=>`vec${n}, @align(16) ${i}`),r}function WI(r){return!(r.dispatchLayout.hasOwnProperty("y")&&r.dispatchLayout.y.length!==0||r.dispatchLayout.hasOwnProperty("z")&&r.dispatchLayout.z.length!==0)}var ns={};pt(ns,{GPUBytesPerElement:()=>Sh,MatMulProgramType:()=>Xo,assertNotComplex:()=>Hp,computeDispatch:()=>ee,computeWorkPerThreadForConv2d:()=>zp,computeWorkgroupInfoForMatMul:()=>Uv,computeWorkgroupSizeForConv2d:()=>Up,flatDispatchLayout:()=>ie,isWebGPUSupported:()=>Gp,tilesFitEvenlyIntoShape:()=>vK});var oa=r=>{let t=1;for(let e=0;e<r.length;e++)t*=r[e];return t};function vK(r,t){if(r.length!==t.length)throw new Error(`Cannot compute whether rank ${r.length} tiles fit evenly into rank ${t.length} shape - ranks must match.`);return t.every((e,o)=>e%r[o]===0)}function ee(r,t,e=[1,1,1],o=[1,1,1]){let[n,i,s]=[Math.ceil(oa(r.x.map(a=>t[a]))/(e[0]*o[0])),r.y?Math.ceil(oa(r.y.map(a=>t[a]))/(e[1]*o[1])):1,r.z?Math.ceil(oa(r.z.map(a=>t[a]))/(e[2]*o[2])):1];return[n,i,s]}function Uv(r,t,e,o=!1){let n=[8,8,1],i=[4,4,1];return o||(r<=8&&(i[1]=1),t<=16&&e<=16&&(n[0]=4)),{workgroupSize:n,elementsPerThread:i}}function Up(r,t,e=!1){if(e)return[8,8,1];let o=oa(r.x.map(i=>t[i])),n=oa(r.y.map(i=>t[i]));return o<=4?[4,16,1]:n<=4?[16,4,1]:[16,16,1]}function zp(r,t,e=!1){if(e)return[4,4,1];let o=oa(r.x.map(i=>t[i])),n=oa(r.y.map(i=>t[i]));return o<=4?[1,2,1]:n<=4?[2,1,1]:[2,2,1]}function ie(r){return{x:r.map((t,e)=>e)}}function Sh(r){if(r==="float32"||r==="int32"||r==="bool"||r==="string")return 4;if(r==="complex64")return 8;throw new Error(`Unknown dtype ${r}`)}function Gp(){return!!(typeof globalThis<"u"&&globalThis.navigator&&globalThis.navigator.gpu)}function Hp(r,t){Array.isArray(r)||(r=[r]),r.forEach(e=>{e!=null&&S.assert(e.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the WebGPU backend.`)})}var Xo=function(r){return r[r.MatMulReduceProgram=0]="MatMulReduceProgram",r[r.MatMulSplitKProgram=1]="MatMulSplitKProgram",r[r.MatMulSmallOutputSizeProgram=2]="MatMulSmallOutputSizeProgram",r[r.MatMulPackedProgram=3]="MatMulPackedProgram",r[r.MatMulMax=4]="MatMulMax",r}(Xo||{});var bK=G().getNumber("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD"),SK=(r,t)=>{let e=r.limits.maxComputeWorkgroupsPerDimension,o=t.dispatchLayout,n=t.dispatch;if(n.every(s=>s<=e))return n;S.assert(n[0]>e&&o.y===void 0&&o.z===void 0,()=>"Dispatch size exceeds WebGPU limits in Y or Z dimension.");let i=Math.ceil(Math.sqrt(n[0]));return i>e?(i=Math.ceil(Math.cbrt(n[0])),S.assert(i<=e,()=>"Total dispatch size exceeds WebGPU maximum."),[i,i,i]):[i,i,1]},kc=(()=>{class r extends Fn{nextDataId(){return r.nextDataId++}constructor(e,o){if(super(),this.commandQueueOwnedIds=new WeakSet,this.dispatchCountInPass=0,this.disposed=!1,this.downloadWaitMs=0,this.tensorDataPendingDisposal=[],this.queryResolveBuffer=null,this.querySet=null,this.querySetCount=2,this.stagingPendingDisposal=[],this.uniformPendingDisposal=[],this.uploadWaitMs=0,this.hasReadSyncWarned=!1,this.hasTimestampQueryWarned=!1,!Gp())throw new Error("WebGPU is not supported on this device");this.pipelineCache={},this.device=e,this.queue=e.queue,this.commandEncoder=null,this.computePassEncoder=null,this.adapterInfo=new yh(o),this.supportTimestampQuery=this.device.features.has("timestamp-query"),this.thresholdToIncreaseWorkgroups=this.adapterInfo.intelGPUGeneration>=12?16:8,this.bufferManager=new vh(this.device),this.textureManager=new bh(this.device),this.tensorMap=new vs(this,fr()),G().getBool("WEBGPU_USE_PROFILE_TOOL")&&(this.dummyCanvas=document.createElement("canvas"),this.dummyCanvas.width=1,this.dummyCanvas.height=1,this.dummyContext=this.dummyCanvas.getContext("webgpu"),this.dummyContext.configure({device:e,format:"bgra8unorm"}),document.body.appendChild(this.dummyCanvas))}floatPrecision(){return 32}disposeData(e,o=!1){if(!this.tensorMap.has(e))return!0;let n=this.tensorMap.get(e);return o?n.refCount=0:n.refCount--,n.refCount>0?!1:(n.complexTensorInfos!=null&&(this.disposeData(n.complexTensorInfos.real.dataId),this.disposeData(n.complexTensorInfos.imag.dataId)),this.commandQueueOwnedIds.has(e)?(this.tensorDataPendingDisposal.push(e),!0):(this.releaseResource(e),this.tensorMap.delete(e),!0))}memory(){return{numBytesInGPU:this.bufferManager.numBytesUsed,numBytesAllocatedInGPU:this.bufferManager.numBytesAllocated,unreliable:!1}}releaseResource(e){let o=this.tensorMap.get(e);if(!(!o||!o.resource)){if(o.external){o.resource=null;return}o.resource instanceof GPUBuffer?this.bufferManager.releaseBuffer(o.resource):o.resource instanceof GPUTexture&&this.textureManager.releaseTexture(o.resource),o.resource=null}}refCount(e){return this.tensorMap.has(e)?this.tensorMap.get(e).refCount:0}incRef(e){let o=this.tensorMap.get(e);o.refCount++}decRef(e){if(this.tensorMap.has(e)){let o=this.tensorMap.get(e);o.refCount--}}write(e,o,n){if(n==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let i={id:this.nextDataId()};return this.tensorMap.set(i,{dtype:n,shape:o,values:e,refCount:1}),i}move(e,o,n,i,s){if(i==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.tensorMap.set(e,{dtype:i,shape:n,values:o,refCount:s})}submitQueue(){this.queue.submit([this.commandEncoder.finish()]),this.commandEncoder=null,this.dispatchCountInPass=0,this.commandQueueOwnedIds=new WeakSet,this.tensorDataPendingDisposal.forEach(e=>{this.releaseResource(e),this.tensorMap.delete(e)}),this.uniformPendingDisposal.forEach(e=>this.bufferManager.releaseBuffer(e)),this.stagingPendingDisposal.forEach(e=>this.bufferManager.releaseBuffer(e,!1)),this.tensorDataPendingDisposal=[],this.uniformPendingDisposal=[],this.stagingPendingDisposal=[]}ensureCommandEncoderReady(){this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder())}endComputePassEncoder(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}checkCompileCompletionAsync(){return j(this,null,function*(){let e;try{e=yield Promise.all(Object.values(this.pipelineCache))}catch(o){throw new Error(o.message)}Object.keys(this.pipelineCache).map((o,n)=>{this.pipelineCache[o]=e[n]})})}getBufferData(e){return j(this,null,function*(){if(G().getBool("WEBGPU_ENGINE_COMPILE_ONLY"))return console.warn("The data may be invalid since WEBGPU_ENGINE_COMPILE_ONLY is true, this can only be called when WEBGPU_ENGINE_COMPILE_ONLY is false"),null;let o=e.size,n=this.bufferManager.acquireBuffer(o,GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ);this.ensureCommandEncoderReady(),this.endComputePassEncoder(),this.commandEncoder.copyBufferToBuffer(e,0,n,0,o),this.submitQueue(),yield n.mapAsync(GPUMapMode.READ);let i=n.getMappedRange().slice(0);return n.unmap(),n!=null&&this.bufferManager.releaseBuffer(n),G().getBool("WEBGPU_USE_PROFILE_TOOL")&&(S.assert(this.dummyContext!==void 0,()=>"Fail to get context for profiling tool"),this.dummyContext.getCurrentTexture()),i})}convertAndCacheOnCPU(e,o){let n=this.tensorMap.get(e);return n.values=o,n.values}readSync(e){let o=this.tensorMap.get(e),{values:n,complexTensorInfos:i}=o;if(n!=null||o.dtype==="string")return n;if(o.dtype==="complex64"){let x=this.readSync(i.real.dataId),y=this.readSync(i.imag.dataId),b=S.convertBackendValuesAndArrayBuffer(P.mergeRealAndImagArrays(x,y).buffer,"float32");return this.convertAndCacheOnCPU(e,b),b}this.hasReadSyncWarned||(this.hasReadSyncWarned=!0,console.warn("The performance of synchronously reading data from GPU to CPU is poor on the webgpu backend, please use asynchronous APIs instead."));let s=["opaque","premultiplied"],a=o.resource,l=a.size;S.assert(l%4===0,()=>"Because there is 4 bytes for one pixel, buffer size must be multiple of 4.");let u=l/4,c=new ArrayBuffer(l),p=256,d=256,m=s.map(x=>new OffscreenCanvas(p,d)),f=new OffscreenCanvas(p,d);this.endComputePassEncoder(),m.map((x,y)=>{let b=x.getContext("webgpu");return b.configure({device:this.device,format:"bgra8unorm",usage:GPUTextureUsage.COPY_DST,alphaMode:s[y]}),b.getCurrentTexture()}).map((x,y)=>{let b=p*4,I=(K,X,re)=>{this.ensureCommandEncoderReady(),this.commandEncoder.copyBufferToTexture({buffer:a,bytesPerRow:b,offset:re},{texture:x},{width:K,height:X}),this.submitQueue();let ce=f.getContext("2d",{willReadFrequently:!0});ce.clearRect(0,0,K,X),ce.drawImage(m[y],0,0);let pe=ce.getImageData(0,0,K,X).data,be=s[y],we=new Uint8ClampedArray(c,re,K*X*4);for(let Te=0;Te<we.length;Te+=4)if(be==="premultiplied")we[Te+3]=pe[Te+3];else{let qe=pe[Te];we[Te]=pe[Te+2],we[Te+1]=pe[Te+1],we[Te+2]=qe}},N=Math.floor(u/(p*d)),M=p,B=d,W=0;for(let K=0;K<N;K++)I(M,B,W),W+=p*d*4;let H=u%(p*d);B=Math.floor(H/p),B>0&&(I(M,B,W),W+=B*(p*4)),M=H%p,M>0&&I(M,1,W)});let g=S.convertBackendValuesAndArrayBuffer(c,o.dtype);return this.convertAndCacheOnCPU(e,g),g}read(e){return j(this,null,function*(){if(!this.tensorMap.has(e))throw new Error(`Tensor ${e} was not registered!`);let o=this.tensorMap.get(e),{values:n}=o;if(n!=null)return n;let i;if(o.dtype==="complex64"){let s=yield Promise.all([this.read(o.complexTensorInfos.real.dataId),this.read(o.complexTensorInfos.imag.dataId)]),a=s[0],l=s[1];i=P.mergeRealAndImagArrays(a,l)}else{let s=yield this.getBufferData(o.resource);i=S.convertBackendValuesAndArrayBuffer(s,o.dtype)}return this.convertAndCacheOnCPU(e,i),i})}copyBuffer(e){let o=e.size,n=e.usage,i=this.bufferManager.acquireBuffer(o,n);return this.ensureCommandEncoderReady(),this.endComputePassEncoder(),this.commandEncoder.copyBufferToBuffer(e,0,i,0,o),this.submitQueue(),i}createTensorFromGPUData(e,o,n){let i=e.buffer;if(n==="complex64")throw new Error("Cannot write to a complex64 dtype. ");let s={id:this.nextDataId()};this.tensorMap.set(s,{dtype:n,shape:o,values:null,refCount:1,external:e.zeroCopy});let a=this.tensorMap.get(s),l=Sh(a.dtype)*S.sizeFromShape(a.shape);if(e.buffer.size<l)throw new Error(`GPUBuffer size(${e.buffer.size}) is smaller than tensor size(${l})!`);if((e.buffer.usage&(GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC))!==(GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC))throw new Error("GPUBuffer.usage should include GPUBufferUsage.STORAGE | GPUBufferUsage.COPY_SRC!");return e.zeroCopy!==!0&&(i=this.copyBuffer(i)),a.resource=i,fr().makeTensorFromDataId(s,o,n,this)}readToGPU(e){let o=this.tensorMap.get(e),{values:n,dtype:i,shape:s,resource:a}=o;if(i==="complex64")throw new Error("Does not support reading buffer for complex64 dtype.");if(a==null)throw n!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");let l=a,u=l.size,c=l.usage,p=this.bufferManager.acquireBuffer(u,c);this.ensureCommandEncoderReady(),this.endComputePassEncoder(),this.commandEncoder.copyBufferToBuffer(a,0,p,0,u),this.submitQueue();let d=this.makeTensorInfo(s,i),m=fr().makeTensorFromTensorInfo(d),f=this.tensorMap.get(d.dataId);return f.resource=p,{tensorRef:m,buffer:p}}bufferSync(e){let o=this.readSync(e.dataId);if(e.dtype==="string")try{let n=o.map(i=>S.decodeString(i));return Le(e.shape,e.dtype,n)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Le(e.shape,e.dtype,o)}time(e){return j(this,null,function*(){!this.supportTimestampQuery&&!this.hasTimestampQueryWarned&&(console.warn("This device doesn't support timestamp-query extension. Start Chrome browser with flag --enable-dawn-features=allow_unsafe_apis to try it again. Otherwise, zero will be shown for the kernel time when profiling mode is enabled."),this.hasTimestampQueryWarned=!0);let o=this.activeTimers,n=[],i=!1;this.programTimersStack==null?(this.programTimersStack=n,i=!0):this.activeTimers.push(n),this.activeTimers=n,e();let s=S.flatten(this.activeTimers.map(c=>c.query)).filter(c=>c!=null),a=S.flatten(this.activeTimers.map(c=>c.name)).filter(c=>c!=null);this.activeTimers=o,i&&(this.programTimersStack=null);let l={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null},u=yield Promise.all(s);return l.kernelMs=S.sum(u),l.getExtraProfileInfo=()=>u.map((c,p)=>({name:a[p],ms:c})).map(c=>`${c.name}: ${c.ms}`).join(", "),this.uploadWaitMs=0,this.downloadWaitMs=0,l})}makeTensorInfo(e,o,n){return o==="string"&&n!=null&&n.length>0&&S.isString(n[0])&&(n=n.map(s=>S.encodeString(s))),{dataId:this.write(n,e,o),shape:e,dtype:o}}tensorToBinding(e){if(!e)return null;let n=this.tensorMap.get(e.dataId).resource;return n instanceof GPUBuffer?{buffer:n}:n instanceof GPUTexture?n.createView():n}uploadToGPU(e){let o=this.tensorMap.get(e);if(o.resource!=null)return;let n=Sh(o.dtype)*S.sizeFromShape(o.shape),i,s=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST;if(o.values){if(i=this.bufferManager.acquireBuffer(n,s,!0),i.mapState==="unmapped"){let a=this.bufferManager.acquireBuffer(n,GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC,!0,!1),l=a.getMappedRange();o.dtype==="int32"||o.dtype==="bool"?new Int32Array(l).set(o.values):new Float32Array(l).set(o.values),a.unmap(),this.ensureCommandEncoderReady(),this.endComputePassEncoder(),this.commandEncoder.copyBufferToBuffer(a,0,i,0,n),this.stagingPendingDisposal.push(a)}else{let a=i.getMappedRange();o.dtype==="int32"||o.dtype==="bool"?new Int32Array(a).set(o.values):new Float32Array(a).set(o.values),i.unmap()}o.values=null}else i=this.bufferManager.acquireBuffer(n,s);o.resource=i}makeUniforms(e){let o=0,n=0,i=[],s=1;e.forEach(u=>{u.data.length===0&&(u.data=[1]);let c;switch(u.data.length){case 1:c=4;break;case 2:c=8;break;case 3:c=16;break;case 4:c=16;break;case 5:c=16;break;case 6:c=16;break;default:S.assert(!1,()=>`Unsupported ${u.data.length}D shape`)}(n===5||n===6)&&(c=16),c>s&&(s=c),o=Math.ceil(o/c)*c,n=u.data.length,i.push(o),o+=u.data.length*4}),o=Math.ceil(o/s)*s;let a=new ArrayBuffer(o);e.forEach((u,c)=>{let p=i[c];u.type==="int32"?new Int32Array(a,p,u.data.length).set(u.data):u.type==="uint32"?new Uint32Array(a,p,u.data.length).set(u.data):new Float32Array(a,p,u.data.length).set(u.data)});let l=this.bufferManager.acquireBuffer(o,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);return this.queue.writeBuffer(l,0,a,0,o),this.uniformPendingDisposal.push(l),{offset:0,size:o,buffer:l}}runWebGPUProgram(e,o,n,i,s){if(s||(s=this.makeTensorInfo(e.outputShape,n)),S.sizeFromShape(s.shape)===0)return this.tensorMap.get(s.dataId).values=S.getTypedArrayFromDType(s.dtype,0),s;this.uploadToGPU(s.dataId),e.dispatch=SK(this.device,e);let a=o.map((u,c)=>{if(u.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");return this.uploadToGPU(u.dataId),{dtype:this.tensorMap.get(u.dataId).dtype,shape:u.shape,name:e.variableNames[c]}});e.shaderKey=zI(e,a,s);let l=G().getBool("WEBGPU_ENGINE_COMPILE_ONLY");return e.shaderKey in this.pipelineCache||(this.pipelineCache[e.shaderKey]=UI(this.device,e,a,s,l)),e.pipeline=this.pipelineCache[e.shaderKey],l||this.recordAndSubmit(e,s,o,i),s}recordAndSubmit(e,o,n,i){if(e.pipeline instanceof Promise)throw new Error("Please call checkCompileCompletionAsync to ensure parallel compilation is done!");let s=[],a=[],l="int32";if(e.pixelsOpType==null){s.push({type:"float32",data:[NaN]},{type:"float32",data:[1/0]}),a=n.concat(o).map(f=>f.shape);let m="int32";a.map(f=>{s.push({type:m,data:f});let g=S.computeStrides(f);s.push({type:m,data:g})})}else{let m=S.computeStrides(o.shape);s.push({type:l,data:m})}if(e.size){let m=S.sizeFromShape(e.outputShape);s.push({type:l,data:[e.outputComponent?m/e.outputComponent:m]})}i&&(s=[...s,...i]);let u=[this.tensorToBinding(o),...n.map(m=>this.tensorToBinding(m)),this.makeUniforms(s)];n.forEach(m=>{this.commandQueueOwnedIds.add(m.dataId)}),this.commandQueueOwnedIds.add(o.dataId);let c=this.device.createBindGroup({layout:e.pipeline.getBindGroupLayout(0),entries:u.map((m,f)=>({binding:f,resource:m}))}),p=this.activeTimers!=null;this.ensureCommandEncoderReady();let d={};p&&this.supportTimestampQuery?(this.endComputePassEncoder(),this.querySet==null&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:this.querySetCount})),d.timestampWrites={querySet:this.querySet,beginningOfPassWriteIndex:0,endOfPassWriteIndex:1},this.computePassEncoder=this.commandEncoder.beginComputePass(d)):this.computePassEncoder||(this.computePassEncoder=this.commandEncoder.beginComputePass(d)),this.computePassEncoder.setPipeline(e.pipeline),this.computePassEncoder.setBindGroup(0,c),this.computePassEncoder.dispatchWorkgroups(e.dispatch[0],e.dispatch[1],e.dispatch[2]),this.dispatchCountInPass++,(p||G().get("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE")<=this.dispatchCountInPass||e.pixelsOpType===os.DRAW)&&(this.endComputePassEncoder(),p?this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime()}):this.submitQueue())}getQueryTime(){return j(this,null,function*(){if(!this.supportTimestampQuery)return 0;this.queryResolveBuffer==null&&(this.queryResolveBuffer=this.bufferManager.acquireBuffer(this.querySetCount*8,GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST|GPUBufferUsage.QUERY_RESOLVE)),this.commandEncoder.resolveQuerySet(this.querySet,0,this.querySetCount,this.queryResolveBuffer,0);let e=this.bufferManager.acquireBuffer(this.querySetCount*8,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST);this.commandEncoder.copyBufferToBuffer(this.queryResolveBuffer,0,e,0,this.querySetCount*8),this.submitQueue(),yield e.mapAsync(GPUMapMode.READ);let o=new BigUint64Array(e.getMappedRange()),n=Number(o[1]-o[0])/1e6;return e.unmap(),this.bufferManager.releaseBuffer(e),n})}shouldExecuteOnCPU(e,o=bK){return G().getBool("WEBGPU_CPU_FORWARD")&&e.every(n=>this.tensorMap.get(n.dataId).resource==null&&S.sizeFromShape(n.shape)<o)}numDataIds(){return this.tensorMap.numDataIds()-this.tensorDataPendingDisposal.length}dispose(){this.disposed||(this.querySet!=null&&this.querySet.destroy(),this.bufferManager.dispose(),this.textureManager.dispose(),this.disposed=!0)}}return r.nextDataId=0,r})();Gp()&&Wm("webgpu",()=>j(null,null,function*(){let r={powerPreference:G().get("WEBGPU_USE_LOW_POWER_GPU")?"low-power":"high-performance"},t=yield navigator.gpu.requestAdapter(r),e={},o=[];t.features.has("timestamp-query")&&o.push("timestamp-query"),t.features.has("bgra8unorm-storage")&&o.push(["bgra8unorm-storage"]),e.requiredFeatures=o;let n=t.limits;e.requiredLimits={maxComputeWorkgroupStorageSize:n.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:n.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:n.maxStorageBufferBindingSize,maxBufferSize:n.maxBufferSize,maxComputeWorkgroupSizeX:n.maxComputeWorkgroupSizeX,maxComputeInvocationsPerWorkgroup:n.maxComputeInvocationsPerWorkgroup};let i=yield t.requestDevice(e),s="info"in t?t.info:"requestAdapterInfo"in t?yield t.requestAdapterInfo():void 0;return new kc(i,s)}),3);var Ce=function(r){return r[r.ADD=0]="ADD",r[r.ATAN2=1]="ATAN2",r[r.COMPLEX_MULTIPLY_IMAG=2]="COMPLEX_MULTIPLY_IMAG",r[r.COMPLEX_MULTIPLY_REAL=3]="COMPLEX_MULTIPLY_REAL",r[r.DIV=4]="DIV",r[r.ELU_DER=5]="ELU_DER",r[r.EQUAL=6]="EQUAL",r[r.FLOOR_DIV=7]="FLOOR_DIV",r[r.GREATER=8]="GREATER",r[r.GREATER_EQUAL=9]="GREATER_EQUAL",r[r.LESS=10]="LESS",r[r.LESS_EQUAL=11]="LESS_EQUAL",r[r.LOGICAL_AND=12]="LOGICAL_AND",r[r.LOGICAL_OR=13]="LOGICAL_OR",r[r.MAX=14]="MAX",r[r.MIN=15]="MIN",r[r.MOD=16]="MOD",r[r.MUL=17]="MUL",r[r.NOT_EQUAL=18]="NOT_EQUAL",r[r.POW=19]="POW",r[r.PRELU=20]="PRELU",r[r.SQUARED_DIFFERENCE=21]="SQUARED_DIFFERENCE",r[r.SUB=22]="SUB",r}(Ce||{}),wK="let resultTemp = a + b;",_K="let resultTemp = atan2(a, b);",CK="let resultTemp = areal * breal - aimag * bimag;",kK="let resultTemp = areal * bimag + aimag * breal;",IK="let resultTemp = a / b;",TK="let resultTemp = select(a * (b + 1.0), a, b >= b - b);",EK=`
  let zero = sign(a) * 0 + 0;
  let one = sign(b) * 0 + 1;
  let resultTemp = select(zero, one, a == b);
`,NK=`
  let remainder =
      select(a % b, round(a % b), (round(a) == a) & (round(b) == b));
  let quotient = (a - remainder) / b;
  let resultTemp =
      round(select(quotient, quotient - 1, sign(remainder) == -sign(b)));
`,RK=`
  let zero = sign(a) * 0 + 0;
  let one = sign(b) * 0 + 1;
  let resultTemp = select(zero, one, a > b);
`,PK=`
  let zero = sign(a) * 0 + 0;
  let one = sign(b) * 0 + 1;
  let resultTemp = select(zero, one, a >= b);
`,$K=`
  let zero = sign(a) * 0 + 0;
  let one = sign(b) * 0 + 1;
  let resultTemp = select(zero, one, a < b);
`,AK=`
  let zero = sign(a) * 0 + 0;
  let one = sign(b) * 0 + 1;
  let resultTemp = select(zero, one, a <= b);
`,DK="return f32(a >= 1.0 && b >= 1.0);",FK=`return (vec4<f32>(a >= vec4<f32>(1.0)) *
  vec4<f32>(b >= vec4<f32>(1.0)));`,OK="return f32(a >= 1.0 || b >= 1.0);",LK=`return min(vec4<f32>(a >= vec4<f32>(1.0)) +
  vec4<f32>(b >= vec4<f32>(1.0)), vec4<f32>(1.0));`,MK="let resultTemp = max(a, b);",BK="let resultTemp = min(a, b);",VK=`
  let isNaN = b == 0.;
  var resultTemp = a % b;
  resultTemp = select((resultTemp + b) % b, resultTemp,
      (a < 0. && b < 0.) || (a >= 0. && b > 0.));
`,WK=`
  let isNaN = !vec4<bool>(b);
  var resultTemp = vec4<f32>(a % b);
  if (!((a[0] < 0. && b[0] < 0.) || (a[0] >= 0. && b[0] > 0.))) {
    resultTemp[0] = (resultTemp[0] + b[0]) % b[0];
  }
  if (!((a[1] < 0. && b[1] < 0.) || (a[1] >= 0. && b[1] > 0.))) {
    resultTemp[1] = (resultTemp[1] + b[1]) % b[1];
  }
  if (!((a[2] < 0. && b[2] < 0.) || (a[2] >= 0. && b[2] > 0.))) {
    resultTemp[2] = (resultTemp[2] + b[2]) % b[2];
  }
  if (!((a[3] < 0. && b[3] < 0.) || (a[3] >= 0. && b[3] > 0.))) {
    resultTemp[3] = (resultTemp[3] + b[3]) % b[3];
  }
`,UK="let resultTemp = a * b;",zK=`
  var resultTemp = f32(a != b);
  let valueForNaN = 1.0;
`,GK=`
  var resultTemp = vec4<f32>(a != b);
  let valueForNaN = 1.0;
`,HK=`
  let isNaN = a < 0.0 && floor(b) < b;
  if (b == 0.0) {
    return 1.0;
  }
  var resultTemp = select(sign(a) * pow(abs(a), b), pow(abs(a), b),
      round(abs(b) % 2.0) != 1.0);
`,KK=`
  let isModRound1Bool = vec4<i32>(round(abs(b) % vec4<f32>(2.0))) == vec4<i32>(1);
  let isModRound1 = vec4<f32>(isModRound1Bool);
  let multiplier = sign(a) * isModRound1 + (vec4<f32>(1.0) - isModRound1);
  var resultTemp = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  let isExpZero = b == vec4<f32>(0.0);
  if (isExpZero.r) {
    resultTemp.r = 1.0;
  }
  if (isExpZero.g) {
    resultTemp.g = 1.0;
  }
  if (isExpZero.b) {
    resultTemp.b = 1.0;
  }
  if (isExpZero.a) {
    resultTemp.a = 1.0;
  }
  let isNaN = (a < vec4<f32>(0.0)) & (floor(b) < b);
`,qK="if (a < 0.0) { return b * a; }  return a;",jK=`
  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));
  return (aLessThanZero * (b * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);
`,XK="let resultTemp = (a - b) * (a - b);",YK="let resultTemp = a - b;";function Ic(r,t){let e;do{switch(r){case Ce.ATAN2:e=_K;break;case Ce.MAX:e=MK;break;case Ce.MIN:e=BK;break;case Ce.MOD:e=t?WK:VK;break;case Ce.NOT_EQUAL:e=t?GK:zK;break;case Ce.POW:e=t?KK:HK;break;default:continue}let o,n,i;return t?(o="isnanVec4",n="vec4<f32>",i="vec4<bool>"):(o="isnan",n="f32",i="bool"),`
      let aIsNaN = ${o}(a);
      let aPostLegalization = select(a, ${n}(42), aIsNaN);
      let bIsNaN = ${o}(b);
      let bPostLegalization = select(b, ${n}(42), bIsNaN);
      let isNaN = false;
      let valueForNaN = uniforms.NAN;
      {
        let a = aPostLegalization;
        let b = bPostLegalization;
        ${e}
        return select(
            resultTemp, ${n}(valueForNaN),
            ${i}(isNaN) | aIsNaN | bIsNaN);
      }
    `}while(!1);switch(r){case Ce.ADD:e=wK;break;case Ce.COMPLEX_MULTIPLY_IMAG:e=kK;break;case Ce.COMPLEX_MULTIPLY_REAL:e=CK;break;case Ce.DIV:e=IK;break;case Ce.ELU_DER:e=TK;break;case Ce.EQUAL:e=EK;break;case Ce.FLOOR_DIV:e=NK;break;case Ce.GREATER:e=RK;break;case Ce.GREATER_EQUAL:e=PK;break;case Ce.LESS:e=$K;break;case Ce.LESS_EQUAL:e=AK;break;case Ce.LOGICAL_AND:return t?FK:DK;case Ce.LOGICAL_OR:return t?LK:OK;case Ce.MUL:e=UK;break;case Ce.PRELU:return t?jK:qK;case Ce.SQUARED_DIFFERENCE:e=XK;break;case Ce.SUB:e=YK;break;default:}return`
    ${e}
    return resultTemp;
  `}var ae=function(r){return r[r.ABS=0]="ABS",r[r.ACOS=1]="ACOS",r[r.ACOSH=2]="ACOSH",r[r.ASIN=3]="ASIN",r[r.ASINH=4]="ASINH",r[r.ATAN=5]="ATAN",r[r.ATANH=6]="ATANH",r[r.CEIL=7]="CEIL",r[r.COS=8]="COS",r[r.COSH=9]="COSH",r[r.ELU=10]="ELU",r[r.ERF=11]="ERF",r[r.EXP=12]="EXP",r[r.EXPM1=13]="EXPM1",r[r.FLOOR=14]="FLOOR",r[r.IS_FINITE=15]="IS_FINITE",r[r.IS_INF=16]="IS_INF",r[r.IS_NAN=17]="IS_NAN",r[r.LINEAR=18]="LINEAR",r[r.LOG=19]="LOG",r[r.LOG1P=20]="LOG1P",r[r.LOGICAL_NOT=21]="LOGICAL_NOT",r[r.NEG=22]="NEG",r[r.RELU=23]="RELU",r[r.RELU6=24]="RELU6",r[r.LEAKYRELU=25]="LEAKYRELU",r[r.RECIPROCAL=26]="RECIPROCAL",r[r.ROUND=27]="ROUND",r[r.RSQRT=28]="RSQRT",r[r.SELU=29]="SELU",r[r.SIGMOID=30]="SIGMOID",r[r.SIGN=31]="SIGN",r[r.SIN=32]="SIN",r[r.SINH=33]="SINH",r[r.SOFTPLUS=34]="SOFTPLUS",r[r.SQRT=35]="SQRT",r[r.SQUARE=36]="SQUARE",r[r.STEP=37]="STEP",r[r.TAN=38]="TAN",r[r.TANH=39]="TANH",r[r.TO_INT=40]="TO_INT",r}(ae||{}),QK="return abs(a);",ZK=`
  if (abs(a) > 1.) {
    return uniforms.NAN;
  }
  return acos(a);
`,JK=`
  if (a < 1.) {
    return uniforms.NAN;
  }
  return acosh(a);
`,eq=`
  if (abs(a) > 1.) {
    return uniforms.NAN;
  }
  return asin(a);
`,tq="return asinh(a);",rq=`
  if (isnan(a)) {
    return uniforms.NAN;
  }
  return atan(a);
`,oq=`
  if (abs(a) > 1.) {
    return uniforms.NAN;
  }
  if (a == 1.) {
    return uniforms.INFINITY;
  }
  if (a == -1.) {
    return -uniforms.INFINITY;
  }
  return atanh(a);
`,nq="return ceil(a);",iq="return cos(a);",sq=`
  let e2x = exp(-a);
  return (e2x + 1.0 / e2x) / 2.0;
`,aq="return exp(a) - 1.0;",lq="if (a >= 0.0) { return a; }  return (exp(a) - 1.0);",uq=`
  var resFloat = exp(a) - vec4<f32>(1.0);
  if (a.r >= 0.0) {
    resFloat.r = a.r;
  }
  if (a.g >= 0.0) {
    resFloat.g = a.g;
  }
  if (a.b >= 0.0) {
    resFloat.b = a.b;
  }
  if (a.a >= 0.0) {
    resFloat.a = a.a;
  }
  return resFloat;
`,cq=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  let p = ${P.ERF_P};
  let a1 = ${P.ERF_A1};
  let a2 = ${P.ERF_A2};
  let a3 = ${P.ERF_A3};
  let a4 = ${P.ERF_A4};
  let a5 = ${P.ERF_A5};

  let sign = sign(a);
  let absA = abs(a);
  let t = 1.0 / (1.0 + p * absA);
  return sign * (1.0 - (((((a5 * t + a4) * t) + a3) * t + a2) * t + a1) * t * exp(-absA * absA));
`,pq="return exp(a);",dq="return floor(a);",mq="return f32(!isnan(a) && !isinf(a));",fq="return f32(isinf(a));",hq="return f32(isnan(a));",gq="return a;",xq=`if (a < 0.0) { return uniforms.NAN; }
  return log(a);`,yq=`
  if (isnan(a)) { return a; }
  return log(1.0 + a);
`,vq="return f32(!(a >= 1.0));",bq="return -a;",Sq="if (a < 0.0) { return uniforms.alpha * a; } return a;",wq=`
  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));
  return (aLessThanZero * (uniforms.alpha * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);
`,_q="return 1.0 / a;",Cq="return select(a, 0.0, a < 0.0);",kq="return clamp(a, 0.0, 6.0);",Iq="return clamp(a, vec4<f32>(0.0, 0.0, 0.0, 0.0), vec4<f32>(6.0, 6.0, 6.0, 6.0));",Tq=`
  return select(a, vec4<f32>(0.0), a < vec4<f32>(0.0));
`,Eq="return round(a);",Nq="return inverseSqrt(a);",Rq=`
  if (a >= 0.0) {
    return ${P.SELU_SCALE} * a;
  } else {
    return ${P.SELU_SCALEALPHA} * (exp(a) - 1.0);
  }
`,Pq="return 1.0 / (1.0 + exp(-1.0 * a));",$q="return sign(a);",Aq="return sin(a);",Dq=`
  let e2x = exp(a);
  return (e2x - 1.0 / e2x) / 2.0;
`,Fq=`
  let epsilon = 1.1920928955078125e-7;
  let threshold = log(epsilon) + 2.0;

  let too_large = a > -threshold;
  let too_small = a < threshold;
  let exp_a = exp(a);

  if (too_large) {
    return a;
  } else if (too_small) {
    return exp_a;
  } else {
    return log(exp_a + 1.0);
  }
`,Oq="return sqrt(a);",Lq="return a * a;",Mq=`
  if (isnan(a)) {
    return a;
  }

  return select(uniforms.stepAlpha, 1.0, a > 0.0);
`,Bq="return tan(a);",Vq=`
  let e2x = exp(-2.0 * abs(a));
  return sign(a) * (1.0 - e2x) / (1.0 + e2x);
`,Wq="return f32(i32((a)));";function Zn(r,t){switch(r){case ae.ABS:return QK;case ae.ACOS:return ZK;case ae.ACOSH:return JK;case ae.ASIN:return eq;case ae.ASINH:return tq;case ae.ATAN:return rq;case ae.ATANH:return oq;case ae.COS:return iq;case ae.COSH:return sq;case ae.CEIL:return nq;case ae.ELU:return t?uq:lq;case ae.ERF:return cq;case ae.EXP:return pq;case ae.EXPM1:return aq;case ae.FLOOR:return dq;case ae.IS_FINITE:return mq;case ae.IS_INF:return fq;case ae.IS_NAN:return hq;case ae.LINEAR:return gq;case ae.LOG:return xq;case ae.LOG1P:return yq;case ae.LOGICAL_NOT:return vq;case ae.NEG:return bq;case ae.LEAKYRELU:return t?wq:Sq;case ae.RECIPROCAL:return _q;case ae.RELU:return t?Tq:Cq;case ae.RELU6:return t?Iq:kq;case ae.ROUND:return Eq;case ae.RSQRT:return Nq;case ae.SELU:return Rq;case ae.SIGMOID:return Pq;case ae.SIGN:return $q;case ae.SIN:return Aq;case ae.SINH:return Dq;case ae.SOFTPLUS:return Fq;case ae.SQRT:return Oq;case ae.SQUARE:return Lq;case ae.STEP:return Mq;case ae.TAN:return Bq;case ae.TANH:return Vq;case ae.TO_INT:return Wq;default:throw new Error(`BinaryType ${r} is not implemented!`)}}function sr(r,t=!1,e=!1,o=3){if(r===null)return"";let n="";if(r==="linear")n=Zn(ae.LINEAR);else if(r==="relu")n=Zn(ae.RELU,e);else if(r==="elu")n=Zn(ae.ELU,e);else if(r==="relu6")n=Zn(ae.RELU6,e);else if(r==="prelu")n=Ic(Ce.PRELU,e);else if(r==="sigmoid")n=Zn(ae.SIGMOID,e);else if(r==="leakyrelu")n=Zn(ae.LEAKYRELU,e);else throw new Error(`Activation ${r} has not been implemented for the WebGPU backend.`);let s=We(e?4:1),a="";return t?a=`
      fn activation(a : ${s}, coords : vec${o}<i32>) -> ${s} {
        let b = getPreluActivationWeightsByOutputCoords(coords);
        ${n}
      }`:a=`
      fn activation(a : ${s}, coords : vec${o}<i32>) -> ${s} {
        ${n}
      }`,a}function uo(r,t){return`
      ${r?"value = value + getBiasByOutputCoords(coords);":""}
      ${t?"value = activation(value, coords);":""}
      `}function zv(r,t,e=!1,o=!1,n=!1,i=1){S.assert(r&&i===1||!r,()=>`transposeA ${r} is not compatible with component size ${i}`);let s=`
      ${r?"value = getA(batch, col, row);":"value = getA(batch, row, col);"}

    `,a=t?"value = getB(batch, col, row);":"value = getB(batch, row, col);";return`
  fn mm_readA(batch: i32, row: i32, col: i32) -> ${We(i)} {
    var value = ${We(i)}(0.0);
    ${e&&n?s:`
    ${r?"if(row < uniforms.dimAOuter && col < uniforms.dimInner)":"if(row < uniforms.aShape[1] && col < uniforms.aShape[2])"}
    {
      ${s}
    }
    `}
    return value;
  }

  fn mm_readB(batch: i32, row: i32, col: i32) -> ${We(i)} {
    var value = ${We(i)}(0.0);
    ${a}
    return value;
  }
  `}function Kp(r,t,e,o,n=!1,i=!1,s=!1,a=1){return`
  ${zv(e,o,n,i,s,a)}
  fn mm_write(batch: i32, row: i32, col: i32, valueIn: ${We(a)}) {
    ${n&&i?"":"if (row < uniforms.dimAOuter && col < uniforms.dimBOuter)"}
    {
      var value = valueIn;
      let coords = vec3<i32>(batch, row, col);
      ${uo(r,t)}
      setOutputAtCoords(coords[0], coords[1], coords[2], value);
    }
  }
  `}var Uq=(r,t)=>r?`
        mm_Asub[inputRow][inputCol] = mm_readA(batchA,
          kStart + inputRow,
          globalRowStart + inputCol * ${t});
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(batchA,
          globalRow + innerRow,
          kStart + inputCol * ${t});
        `,zq=(r,t,e,o)=>{if(r)return`
      for (var k = 0; k < ${o}; k++) {
        let BCached0 = mm_Bsub[k][tileCol];
        let ACached0 = mm_Asub[k][localRow];
        for (var i = 0; i < ${e}; i++) {
          acc[i] = fma(BCached0, vec4<f32>(ACached0[i]), acc[i]);
        }
      }`;{let n="",i="";for(let s=0;s<t;s++)n+=`let BCached${s} = mm_Bsub[k * ${t} + ${s}][tileCol];`,i+=`acc[i] = fma(BCached${s}, vec4<f32>(ACached[${s}]), acc[i]);`;return`
      for (var k = 0; k < ${o/t}; k++) {
        ${n}
        for (var i = 0; i < ${e}; i++) {
          let ACached = mm_Asub[tileRow + i][k];
          ${i}
        }
      }`}};function na(r,t,e=!1,o=32,n=!1,i=32,s=!1){let a=t[1]*r[1],l=t[0]*r[0],u=e?a:o,c=e?o:a,p=u/t[0],d=o/t[1],m=r[1],f=r[0];return S.assert((e&&p===4&&r[1]===4||!e&&(p===3||p===4))&&u%t[0]===0&&o%t[1]===0&&r[0]===4,()=>`If transposeA ${e} is true, innerElementSize ${p} and workPerThread[1] ${r[1]} must be 4.
          Otherwise, innerElementSize ${p} must be 3 or 4.
      tileAWidth ${u} must be divisible by workgroupSize[0]${t[0]}. tileInner ${o} must be divisible by workgroupSize[1] ${t[1]}. colPerThread ${r[0]} must be 4.`),`
  var<workgroup> mm_Asub : array<array<vec${p}<f32>, ${u/p}>, ${c}>;
  var<workgroup> mm_Bsub : array<array<vec4<f32>, ${l/r[0]}>, ${o}>;

  ${J()} {
    let localRow = i32(localId.y);
    let tileRow = localRow * ${m};
    let tileCol = i32(localId.x);

    let globalRow = i32(globalId.y) * ${m};
    let globalCol = i32(globalId.x) * ${f};
    let batch = ${n?"0":"i32(globalId.z)"};
    let batchA = ${n||!s?"batch":"batch % uniforms.aShape[0]"};
    let batchB = ${n||!s?"batch":"batch % uniforms.bShape[0]"};
    let globalRowStart = i32(workgroupId.y) * ${a};

    let numTiles = ${n?`${Math.ceil(i/o)}`:`(uniforms.dimInner - 1) / ${o} + 1`};
    var kStart = ${n?`i32(globalId.z) * ${i}`:"0"};

    var acc: array<vec4<f32>, ${m}>;

    // Loop over shared dimension.
    let tileRowB = localRow * ${d};
    for (var t = 0; t < numTiles; t++) {
        // Load one tile of A into local memory.
        for (var innerRow = 0; innerRow < ${m}; innerRow++) {
            let inputRow = tileRow + innerRow;
            let inputCol = tileCol;
            ${Uq(e,p)}
        }

        // Load one tile of B into local memory.
        for (var innerRow = 0; innerRow < ${d}; innerRow++) {
            let inputRow = tileRowB + innerRow;
            let inputCol = tileCol;
            mm_Bsub[inputRow][inputCol] = mm_readB(batchB, kStart + inputRow, globalCol);
        }
        kStart = kStart + ${o};
        workgroupBarrier();

        // Compute acc values for a single thread.
        ${zq(e,p,m,o)}
        workgroupBarrier();
    }

    for (var innerRow = 0; innerRow < ${m}; innerRow++) {
        mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);
    }
  }`}var HI=r=>r?`
        mm_Asub[inputRow][inputCol] = mm_readA(batchA,
          kStart + inputRow,
          globalRowStart + inputCol);
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(batchA,
          globalRowStart + inputRow,
          kStart + inputCol);
        `,Gq=r=>r?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];";function ia(r,t,e=!1,o=32,n=!1,i=32,s=!1,a=!1){let l=r[1]*t[1],u=r[0]*t[0],c=e?l:o,p=e?o:l;S.assert(p%t[1]===0&&c%t[0]===0&&o%t[1]===0,()=>`tileAHight ${p} must be divisible by workgroupSize[1]${t[1]}, tileAWidth ${c} must be divisible by workgroupSize[0]${t[0]}, tileInner ${o} must be divisible by workgroupSize[1]${t[1]}`);let d=p/t[1],m=c/t[0],f=o/t[1],g=r[1],x=r[0],y=s?`
      let localRow = i32(localId.y);
      let localCol = i32(localId.x);
      let globalRowStart = i32(workgroupId.y) * ${l};
      let globalColStart = i32(workgroupId.x) * ${u};

      // Loop over shared dimension.
      for (var t = 0; t < numTiles; t++) {
        // Load one tile of A into local memory.
        for (var inputRow = localRow; inputRow < ${p}; inputRow = inputRow + ${t[1]}) {
          for (var inputCol = localCol; inputCol < ${c}; inputCol = inputCol + ${t[0]}) {
            ${HI(e)}
          }
        }
        // Load one tile of B into local memory.
        for (var inputRow = localRow; inputRow < ${o}; inputRow = inputRow + ${t[1]}) {
              for (var inputCol = localCol; inputCol < ${u}; inputCol = inputCol + ${t[0]}) {
            mm_Bsub[inputRow][inputCol] = mm_readB(batchB,
              kStart + inputRow,
              globalColStart + inputCol);
          }
        }
        kStart = kStart + ${o};
        workgroupBarrier();

        // Compute acc values for a single thread.
        var BCached : array<f32, ${x}>;
        for (var k = 0; k < ${o}; k++) {
          for (var inner = 0; inner < ${x}; inner++) {
            BCached[inner] = mm_Bsub[k][localCol + inner * ${t[0]}];
          }
          for (var innerRow = 0; innerRow < ${g}; innerRow++) {
            let ACached = ${e?`mm_Asub[k][localRow + innerRow * ${t[1]}];`:`mm_Asub[localRow + innerRow * ${t[1]}][k];`}
            for (var innerCol = 0; innerCol < ${x}; innerCol++) {
              acc[innerRow][innerCol] =
                  fma(ACached, BCached[innerCol], acc[innerRow][innerCol]);
            }
          }
        }
        workgroupBarrier();
      }
      for (var innerRow = 0; innerRow < ${g}; innerRow++) {
        let gRow = globalRowStart + localRow + innerRow * ${t[1]};
        for (var innerCol = 0; innerCol < ${x}; innerCol++) {
          let gCol = globalColStart + localCol + innerCol * ${t[0]};
          mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);
        }
      }
      `:`
  let tileRow = i32(localId.y) * ${g};
  let tileCol = i32(localId.x) * ${x};

  let globalRow = i32(globalId.y) * ${g};
  let globalCol = i32(globalId.x) * ${x};
  let globalRowStart = i32(workgroupId.y) * ${l};

  let tileRowA = i32(localId.y) * ${d};
  let tileColA = i32(localId.x) * ${m};
  let tileRowB = i32(localId.y) * ${f};
  // Loop over shared dimension.
  for (var t = 0; t < numTiles; t++) {
    // Load one tile of A into local memory.
    for (var innerRow = 0; innerRow < ${d}; innerRow++) {
      for (var innerCol = 0; innerCol < ${m}; innerCol++) {
        let inputRow = tileRowA + innerRow;
        let inputCol = tileColA + innerCol;
        ${HI(e)}
      }
    }

    // Load one tile of B into local memory.
    for (var innerRow = 0; innerRow < ${f}; innerRow++) {
      for (var innerCol = 0; innerCol < ${x}; innerCol++) {
        let inputRow = tileRowB + innerRow;
        let inputCol = tileCol + innerCol;
        mm_Bsub[inputRow][inputCol] = mm_readB(batchB,
          kStart + inputRow,
          globalCol + innerCol);
      }
    }
    kStart = kStart + ${o};
    workgroupBarrier();

    // Compute acc values for a single thread.
    var BCached : array<f32, ${x}>;
    for (var k = 0; k < ${o}; k++) {
      for (var inner = 0; inner < ${x}; inner++) {
        BCached[inner] = mm_Bsub[k][tileCol + inner];
      }

      for (var innerRow = 0; innerRow < ${g}; innerRow++) {
        ${Gq(e)}
        for (var innerCol = 0; innerCol < ${x}; innerCol++) {
          acc[innerRow][innerCol] =
              fma(ACached, BCached[innerCol], acc[innerRow][innerCol]);
        }
      }
    }

    workgroupBarrier();
  }

  for (var innerRow = 0; innerRow < ${g}; innerRow++) {
    for (var innerCol = 0; innerCol < ${x}; innerCol++) {
      mm_write(batch, globalRow + innerRow, globalCol + innerCol,
          acc[innerRow][innerCol]);
    }
  }
  `;return`
    var<workgroup> mm_Asub : array<array<f32, ${c}>, ${p}>;
    var<workgroup> mm_Bsub : array<array<f32, ${u}>, ${o}>;

    ${J()} {
      let batch = ${n?"0":"i32(globalId.z)"};
      let batchA = ${n||!a?"batch":"batch % uniforms.aShape[0]"};
      let batchB = ${n||!a?"batch":"batch % uniforms.bShape[0]"};
      let numTiles = ${n?`${Math.ceil(i/o)}`:`(uniforms.dimInner - 1) / ${o} + 1`};
      var kStart = ${n?`i32(globalId.z) * ${i}`:"0"};

      var acc : array<array<f32, ${x}>, ${g}>;

      // Without this initialization strange values show up in acc.
      for (var innerRow = 0; innerRow < ${g}; innerRow++) {
        for (var innerCol = 0; innerCol < ${x}; innerCol++) {
          acc[innerRow][innerCol] = 0.0;
        }
      }
      ${y}
    }
  `}var Hq=r=>r?`
      mm_readA(batchA, colA, globalRow),
      mm_readA(batchA, colA + 1, globalRow),
      mm_readA(batchA, colA + 2, globalRow),
      mm_readA(batchA, colA + 3, globalRow)
  `:`
      mm_readA(batchA, globalRow, colA),
      mm_readA(batchA, globalRow, colA + 1),
      mm_readA(batchA, globalRow, colA + 2),
      mm_readA(batchA, globalRow, colA + 3)
  `;function Kq(r,t=!1){S.assert(r[1]===1&&r[2]===1,()=>`A linear work group size is required. But got ${r}.`);let e=r[0]*4;return`
    var<workgroup> mm_Asub : array<vec4<f32>, ${r[0]}>;

    ${J()} {
      let tileCol = i32(localId.x);
      let globalCol = i32(globalId.x);
      let globalRow = i32(globalId.y);

      let numTiles = (uniforms.dimInner - 1) / ${e} + 1;
      let batch = i32(globalId.z);
      let batchA = batch % uniforms.aShape[0];
      let batchB = batch % uniforms.bShape[0];
      // Without this initialization strange values show up in acc.
      var acc = 0.0;

      // Loop over shared dimension.
      for (var t = 0; t < numTiles; t++) {
        // Load one tile of A into local memory.
        let colA = t * ${e} + tileCol * 4;
        mm_Asub[tileCol] = vec4<f32>(${Hq(t)});
        workgroupBarrier();

        // Compute acc values for a single thread.
        for (var k = 0; k < ${e/4}; k++) {
          let rowB = t * ${e} + k * 4;
          let BCached = vec4<f32>(mm_readB(batchB, rowB, globalCol),
                              mm_readB(batchB, rowB + 1, globalCol),
                              mm_readB(batchB, rowB + 2, globalCol),
                              mm_readB(batchB, rowB + 3, globalCol));

          let ACached = mm_Asub[k];
          acc = acc + dot(ACached, BCached);
        }

        workgroupBarrier();
      }

      mm_write(batch, globalRow, globalCol, acc);
    }
  `}var wh=class{constructor(t,e,o=!1,n=!1,i=null,s=null,a=null,l=!1){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.outputShape=e,this.dispatchLayout={x:[2],y:[1],z:[0]};let u=o?t[1]:t[2];if(this.isVec4=(u%4===0&&!o||e[1]%4===0&&o)&&e[2]%4===0&&!n,this.outputComponent=this.isVec4?4:1,this.isVectorA=e[1]===1&&!o,!this.isVec4&&this.isVectorA)this.elementsPerThread=[1,1,1],this.workgroupSize=[32,1,1];else{let d=Uv(e[1],u,e[2],o);this.workgroupSize=d.workgroupSize,this.elementsPerThread=d.elementsPerThread}this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize,this.elementsPerThread);let c=i!=null,p=a!=null;c&&this.variableNames.push("bias"),p&&this.variableNames.push("preluActivationWeights"),this.sequentialAccessByThreads=l,this.transposeA=o,this.transposeB=n,this.addBias=c,this.activation=s,this.hasPreluActivationWeights=p,[this.fitAOuter,this.fitBOuter,this.fitInner]=this.getShapeFit(e[1],e[2],u),this.shaderKey=`matMulPacked_${this.elementsPerThread}_${o}_${n}_${this.activation}_${this.fitAOuter}_${this.fitBOuter}_${this.fitInner}_${this.isVec4}_${this.isVectorA}_${this.sequentialAccessByThreads}`}getShapeFit(t,e,o){let n=this.workgroupSize[1]*this.elementsPerThread[1],i=this.workgroupSize[0]*this.elementsPerThread[0];!this.isVec4&&this.isVectorA?this.tileInner=this.workgroupSize[0]*4:this.tileInner=i;let s=t%n===0,a=e%i===0,l=o%this.tileInner===0;return[s,a,l]}getUserCode(){return`
      ${sr(this.activation,this.hasPreluActivationWeights,this.isVec4)}
      ${Kp(this.addBias,this.activation,!1,this.transposeB,this.fitAOuter,this.fitBOuter,this.fitInner,this.isVec4?4:1)}
      ${this.isVec4?na(this.elementsPerThread,this.workgroupSize,this.transposeA,this.tileInner,!1,null,!0):this.isVectorA?Kq(this.workgroupSize,this.transposeA):ia(this.elementsPerThread,this.workgroupSize,this.transposeA,this.tileInner,!1,null,this.sequentialAccessByThreads,!0)}
    `}};function qq(r){return`
    var<workgroup> sumValues : array<f32, ${r}>;
    ${J()} {
      let coords = getOutputCoords();
      let batch = coords[0];
      let batchA = batch % uniforms.aShape[0];
      let batchB = batch % uniforms.bShape[0];
      let row = coords[1];
      let col = coords[2];
      var sum = 0.0;
      let Length = uniforms.dimInner;
      for (var k = i32(localId.x); k < Length; k = k + ${r}) {
        let dataA = mm_readA(batchA, row, k);
        let dataB = mm_readB(batchB, k, col);
        sum = sum + dataA * dataB;
      }
      sumValues[localId.x] = sum;
      workgroupBarrier();

      for(var currentSize = ${r/2}u; currentSize > 1u;
          currentSize = currentSize / 2u) {
        if (localId.x < currentSize)
        {
          sumValues[localId.x] = sumValues[localId.x] + sumValues[localId.x + currentSize];
        }
        workgroupBarrier();
      }

      if (localId.x == 0u) {
        sum = sumValues[0] + sumValues[1];
        mm_write(batch, row, col, sum);
      }
    }
  `}var _h=class{constructor(t,e=!1,o=!1,n=null,i=null,s=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workgroupSize=[256,1,1],this.outputShape=t,this.dispatchLayout={x:[],y:[1,2],z:[0]},this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize);let a=n!=null,l=s!=null;a&&this.variableNames.push("bias"),l&&this.variableNames.push("preluActivationWeights"),this.transposeA=e,this.transposeB=o,this.addBias=a,this.activation=i,this.hasPreluActivationWeights=l,this.shaderKey=`matMulReduce_${this.activation}_${e}_${o}`}getUserCode(){return`
      ${sr(this.activation,this.hasPreluActivationWeights)}
      ${Kp(this.addBias,this.activation,this.transposeA,this.transposeB)}
      ${qq(this.workgroupSize[0])}
    `}};function jq(r){let t=r[1],e=r[0],o=t>e?t:e;return`
  var<workgroup> mm_Asub : array<array<f32, ${o}>, ${t}>;
  var<workgroup> mm_Bsub : array<array<f32, ${e}>, ${o}>;

  // If the output size is small for matrix multiplication, avoid to use vec4
  // and handle some elements per thread to optimally utilize the ALU.
  // Read data from global memory to registers firstly, then store them into
  // shared memory, so it is instruction-Level parallelism for arithmetic
  // operations and others handle IO operations between barrier api, makes ALU
  // and load/store units work simultaneously, could improves the performance.
  ${J()} {
    let tileRow = i32(localId.y);
    let tileCol = i32(localId.x);
    let globalRow = i32(globalId.y);
    let globalCol = i32(globalId.x);
    let batch = i32(globalId.z);
    let batchA = batch % uniforms.aShape[0];
    let batchB = batch % uniforms.bShape[0];

    // uniforms.dimInner should be greater than 0.
    let numTiles = (uniforms.dimInner - 1) / ${o} + 1;
    var acc = 0.0;

    var globalColA = tileCol;
    var globalRowB = 0;
    var regA = mm_readA(batchA, globalRow, globalColA);
    var regB0 = mm_readB(batchB, globalRowB + 2 * tileRow, globalCol);
    var regB1 = mm_readB(batchB, globalRowB + 2 * tileRow + 1, globalCol);
    globalColA = globalColA + ${o};
    globalRowB = globalRowB + ${o};

    for (var t = 0; t < numTiles; t = t + 1) {
      mm_Asub[tileRow][tileCol] = regA;
      mm_Bsub[2 * tileRow][tileCol] = regB0;
      mm_Bsub[2 * tileRow + 1][tileCol] = regB1;

      workgroupBarrier();

      regA = mm_readA(batchA, globalRow, globalColA);
      regB0 = mm_readB(batchB, globalRowB + 2 * tileRow, globalCol);
      regB1 = mm_readB(batchB, globalRowB + 2 * tileRow + 1, globalCol);
      globalColA = globalColA + ${o};
      globalRowB = globalRowB + ${o};

      for (var k = 0; k < ${o}; k = k + 1) {
        acc = acc + mm_Asub[tileRow][k] * mm_Bsub[k][tileCol];
      }
      workgroupBarrier();
    }

    mm_write(batch, globalRow, globalCol, acc);
  }
  `}var Ch=class{constructor(t,e,o,n=!1,i=!1,s=null,a=null,l=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workgroupSize=[16,8,1],this.outputShape=o,this.dispatchLayout={x:[2],y:[1],z:[0]},this.dispatch=[Math.ceil(o[2]/this.workgroupSize[0]),Math.ceil(o[1]/this.workgroupSize[1]),o[0]];let u=s!=null;u&&this.variableNames.push("bias");let c=l!=null;c&&this.variableNames.push("preluActivationWeights"),this.transposeA=n,this.transposeB=i,this.addBias=u,this.activation=a,this.hasPreluActivationWeights=c,this.shaderKey=`matMulSmallOutputSize_${this.activation}_${n}_${i}`}getUserCode(){return`
      ${sr(this.activation,this.hasPreluActivationWeights)}
      ${Kp(this.addBias,this.activation,this.transposeA,this.transposeB)}
      ${jq(this.workgroupSize)}
    `}};var kh=class{constructor(t,e,o=!1,n=!1){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workgroupSize=[8,8,1],this.atomic=!0,this.splitedDimInner=128,S.assert(t[0]===1,()=>"MatMulSplitKProgram only supports batch = 1."),this.outputShape=t,this.dispatchLayout={x:[2],y:[1],z:[0,3]};let i=(o&&this.outputShape[1]%4===0||!o&&e%4===0)&&this.outputShape[2]%4===0;this.elementsPerThread=[4,4,this.splitedDimInner],this.outputComponent=i?4:1,i||(this.outputShape[1]<16&&(this.elementsPerThread[1]=1),this.outputShape[2]<16&&(this.elementsPerThread[0]=1)),this.dispatch=ee(this.dispatchLayout,[this.outputShape[0],this.outputShape[1],this.outputShape[2],e],this.workgroupSize,this.elementsPerThread),this.transposeA=o,this.transposeB=n,this.shaderKey=`matMulSplitK_${o}_${n}_${this.elementsPerThread}_${this.outputComponent}`}getUserCode(){let t=this.outputComponent;return`
      ${zv(!1,this.transposeB,!1,!1,!1,t)}
      fn mm_write(batch: i32, row : i32, col : i32, value : ${We(t)}) {
        if (row < uniforms.dimAOuter && col < uniforms.dimBOuter) {
          let coords = vec3<i32>(batch, row, col);
          let flatIndex = getOutputIndexFromCoords(coords);
          // The problem is that we should initialize output to zero before using.
          // Otherwise, the original value will be added to the result.
          for (var i = 0; i < ${t}; i = i + 1) {
            ${lo("&result[flatIndex + i]",`${t>1?"value[i]":"value"}`,"float32")}
          }
        }
      }
      ${t===4?na(this.elementsPerThread,this.workgroupSize,this.transposeA,32,!0,this.splitedDimInner):ia(this.elementsPerThread,this.workgroupSize,this.transposeA,32,!0,this.splitedDimInner)}
    `}},Ih=class{constructor(t,e=null,o=null,n=null){this.uniforms="",this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize),this.addBias=e!=null,this.hasPreluActivationWeights=n!=null,this.activation=o,this.addBias&&this.variableNames.push("bias"),this.hasPreluActivationWeights&&this.variableNames.push("preluActivationWeights"),this.shaderKey=`biasActivation_${o}`}getUserCode(){return`
    ${sr(this.activation,this.hasPreluActivationWeights)}
    ${J("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        var value = getXByOutputIndex(index);
        ${uo(this.addBias,this.activation)}
        setOutputAtIndex(index, value);
      }
    }
    `}};var Th=class{constructor(t){this.variableNames=[],this.outputShape=[],this.uniforms="value : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="fill"}getUserCode(){return`
    ${J("index")} {
      if (index < uniforms.size) {
        setOutputAtIndex(index, uniforms.value);
      }
    }
  `}};function _t(r){let{backend:t,attrs:e}=r,{shape:o,value:n}=e,{dtype:i}=e;if(i=i||S.inferDtype(n),i==="string"){let s=S.getArrayFromDType(i,S.sizeFromShape(o));return s.fill(n),t.makeTensorInfo(o,i,s)}else{let s=new Th(o),a=[{type:"float32",data:[n]}];return t.runWebGPUProgram(s,[],i,a)}}var KI={kernelName:Wl,backendName:"webgpu",kernelFunc:_t};function he(r){let{inputs:t,attrs:e}=r,{x:o}=t,{shape:n}=e,i=S.sizeFromShape(o.shape),s=S.inferFromImplicitShape(n,i),a=S.sizeFromShape(s);return S.assert(i===a,()=>`The new shape (${s}) has ${a} elements and the old shape (${o.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`),r.backend.incRef(o.dataId),{dataId:o.dataId,shape:s,dtype:o.dtype}}var qI={kernelName:Cu,backendName:"webgpu",kernelFunc:he};function sa({a:r,b:t,transposeA:e,transposeB:o,backend:n,bias:i=null,preluActivationWeights:s=null,leakyreluAlpha:a=0,activation:l=null}){let u=r.shape.length,c=t.shape.length,p=e?r.shape[u-2]:r.shape[u-1],d=o?t.shape[c-1]:t.shape[c-2],m=e?r.shape[u-1]:r.shape[u-2],f=o?t.shape[c-2]:t.shape[c-1],g=r.shape.slice(0,-2),x=t.shape.slice(0,-2),y=S.sizeFromShape(g),b=S.sizeFromShape(x),N=_n.assertAndGetBroadcastShape(r.shape.slice(0,-2),t.shape.slice(0,-2)).concat([m,f]);S.assert(p===d,()=>`Error in matMul: inner shapes (${p}) and (${d}) of Tensors with shapes ${r.shape} and ${t.shape} and transposeA=${e} and transposeB=${o} must match.`);let M=e?[y,p,m]:[y,m,p],B=o?[b,f,d]:[b,d,f],W=he({inputs:{x:r},backend:n,attrs:{shape:M}}),H=he({inputs:{x:t},backend:n,attrs:{shape:B}}),K=[W,H],X=Math.max(y,b),re=[W,H],ce=[{type:"int32",data:[m]},{type:"int32",data:[f]},{type:"int32",data:[p]}],pe,be,we=[X,m,f],Te=G().get("WEBGPU_MATMUL_PROGRAM_TYPE");if(Te<0){let je=G().getNumber("WEBGPU_THRESHOLD_TO_INCREASE_WORKGROUPS_FOR_MATMUL"),it=je>0?je:n.thresholdToIncreaseWorkgroups,Qt=X*Math.ceil(m/32)*Math.ceil(f/32);Qt<=it||m<=8&&Qt<=it*2?X*m*f<=128?Te=Xo.MatMulReduceProgram:X===1&&d>=2e3?Te=Xo.MatMulSplitKProgram:Te=Xo.MatMulSmallOutputSizeProgram:Te=Xo.MatMulPackedProgram}switch(Te){case Xo.MatMulReduceProgram:pe=new _h(we,e,o,i,l,s);break;case Xo.MatMulSplitKProgram:{if(be=_t({backend:n,attrs:{shape:we,value:0,dtype:r.dtype}}),pe=new kh(we,d,e,o),i||l){be=n.runWebGPUProgram(pe,re,r.dtype,ce,be);let it=new Ih(be.shape,i,l,s),Qt=null,rr=[be];i&&rr.push(i),s&&rr.push(s),l==="leakyrelu"&&(Qt=[{type:"float32",data:[a]}],it.uniforms+=" alpha : f32,");let en=n.runWebGPUProgram(it,rr,be.dtype,Qt);K.push(be);let $n=he({inputs:{x:en},backend:n,attrs:{shape:N}});K.push(en);for(let Sa of K)n.disposeData(Sa.dataId);return $n}break}case Xo.MatMulSmallOutputSizeProgram:pe=new Ch(M,B,we,e,o,i,l,s);break;case Xo.MatMulPackedProgram:let je=n.adapterInfo.isIntel();pe=new wh(M,we,e,o,i,l,s,je);break;default:throw new Error(`Unsupported MatMulProgramType ${Te}.`)}i&&re.push(i),s&&re.push(s),l==="leakyrelu"&&(ce.push({type:"float32",data:[a]}),pe.uniforms+=" alpha : f32,"),be=n.runWebGPUProgram(pe,re,r.dtype,ce,be);let qe=he({inputs:{x:be},backend:n,attrs:{shape:N}});K.push(be);for(let je of K)n.disposeData(je.dataId);return qe}function Xq(r){let{inputs:t,backend:e,attrs:o}=r,{a:n,b:i,bias:s,preluActivationWeights:a}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:p}=o;return sa({a:n,b:i,transposeA:l,transposeB:u,backend:e,bias:s,preluActivationWeights:a,leakyreluAlpha:p,activation:c})}var jI={kernelName:Rs,backendName:"webgpu",kernelFunc:Xq};var qp=class{constructor(t,e,o){this.variableNames=["AReal","AImag","BReal","BImag"],this.workgroupSize=[128,1,1],this.size=!0,this.outputShape=P.assertAndGetBroadcastShape(e,o),this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey=`binaryOpComplex_${t}`,this.op=t}getUserCode(){return`
      fn binaryOpComplex(
          areal : f32, aimag : f32, breal : f32, bimag : f32) -> f32 {
        ${Ic(this.op,!1)}
      }

      ${J("index")} {
        if(index < uniforms.size) {
          let areal = getARealByOutputIndex(index);
          let aimag = getAImagByOutputIndex(index);
          let breal = getBRealByOutputIndex(index);
          let bimag = getBImagByOutputIndex(index);
          setOutputAtIndex(index, binaryOpComplex(areal, aimag, breal, bimag));
        }
      }
    `}};var Jn=class{constructor(t,e,o){if(this.size=!0,this.variableNames=["A","B"],this.outputShape=P.assertAndGetBroadcastShape(e,o),this.dispatchLayout=ie(this.outputShape),this.op=t,this.useSharedMemoryWithA=e.length<=1&&o.length>1&&e[0]<128,this.useSharedMemoryWithB=o.length<=1&&e.length>1&&o[0]<128,this.useSharedMemoryWithA||this.useSharedMemoryWithB)this.outputComponent=1,this.variableComponents=[1,1],this.lastDimensionSize=this.useSharedMemoryWithB?o[0]:e[0],this.shaderKey=`binary_${t}_${this.lastDimensionSize}`,this.type="shared",this.workgroupSize=[256,1,1];else{let n=e.length>0&&e[e.length-1]%4===0,i=o.length>0&&o[o.length-1]%4===0;n&&i?(this.outputComponent=4,this.variableComponents=[4,4]):n&&(S.isScalarShape(o)||o[o.length-1]===1)||i&&(S.isScalarShape(e)||e[e.length-1]===1)?(this.outputComponent=4,this.variableComponents=n?[4,1]:[1,4]):(this.outputComponent=1,this.variableComponents=[1,1]),this.type="nonshared",this.shaderKey=`binary_${t}_${this.variableComponents}`,this.workgroupSize=[128,1,1]}this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.outputComponent,1,1])}getUserCode(){let t,e=this.outputComponent===4?"vec4<f32>":"f32",o=`
    fn binaryOperation(a : ${e}, b : ${e}) -> ${e} {
      ${Ic(this.op,this.outputComponent===4)}
    };
    `;if(this.type==="shared"){let n=this.lastDimensionSize>1?`coords[${this.outputShape.length-1}]`:"0",i=this.useSharedMemoryWithB?`let a = getAByOutputIndex(index);
          let b = sharedBuf[${n}];`:`let a = sharedBuf[${n}];
          let b = getBByOutputIndex(index);`;t=`
        ${o}
        var<workgroup> sharedBuf : array<f32, ${this.lastDimensionSize}>;
        ${J("index")} {
          // Fill in the shared memory buffer.
          let localIndex = i32(localId.x);
          if(localIndex < ${this.lastDimensionSize}) {
            sharedBuf[localIndex] = f32(${this.useSharedMemoryWithB?"B":"A"}[localIndex]);
          }
          workgroupBarrier();

          if(index < uniforms.size) {
            let coords = getCoordsFromIndex(index);
            ${i}
            setOutputAtIndex(index, binaryOperation(a, b));
          }
        }
        `}else t=`
       ${o}
       ${J("index")} {
         if (index < uniforms.size) {
           let coords = getCoordsFromIndex(index * ${this.outputComponent});
           let a = ${e}(getAByOutputCoords(coords));
           let b = ${e}(getBByOutputCoords(coords));
           setOutputAtIndex(index, binaryOperation(a, b));
         }
       }
       `;return t}};function $t(r){let{inputs:t}=r,{x:e}=t;return r.backend.incRef(e.dataId),{dataId:e.dataId,shape:e.shape,dtype:e.dtype}}var XI={kernelName:Mn,backendName:"webgpu",kernelFunc:$t};function ko(r){let{inputs:t,backend:e}=r,{real:o,imag:n}=t,i=e.makeTensorInfo(o.shape,"complex64"),s=e.tensorMap.get(i.dataId),a=$t({inputs:{x:o},backend:e}),l=$t({inputs:{x:n},backend:e});return s.complexTensorInfos={real:a,imag:l},i}var YI={kernelName:Cs,backendName:"webgpu",kernelFunc:ko};var co=class{constructor(t,e,o=""){this.variableNames=["A"],this.size=!0;let n=128;this.workgroupSize=[n,1,1],this.outputShape=t,this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize),this.op=e,o!==""&&(this.uniforms=o),this.shaderKey=`unary_${e}`}getUserCode(){return`
      fn unaryOperation(a : f32) -> f32 {
        ${Zn(this.op,!1)}
      }
      ${J("index")} {
        if (index < uniforms.size) {
          let a = getAByOutputIndex(index);
          setOutputAtIndex(index, unaryOperation(a));
        }
      }
      `}};function ke({opType:r,cpuKernelImpl:t,dtype:e}){return({inputs:o,backend:n})=>{let{x:i}=o,s=n,a=e||i.dtype;if(s.shouldExecuteOnCPU([i])&&t!=null){let u=s.tensorMap.get(i.dataId),c=t(u.values,a);return s.makeTensorInfo(i.shape,a,c)}let l=new co(i.shape,r);return s.runWebGPUProgram(l,[i],a)}}function Ze({opType:r,cpuKernelImpl:t,supportsComplex:e=!1,dtype:o}){return({inputs:n,backend:i})=>{let{a:s,b:a}=n,l=i;if(e&&s.dtype==="complex64"){let p=l.tensorMap.get(s.dataId),d=l.tensorMap.get(a.dataId),m,f;if(r!==Ce.MUL)[m,f]=[[p.complexTensorInfos.real,d.complexTensorInfos.real],[p.complexTensorInfos.imag,d.complexTensorInfos.imag]].map(x=>{let[y,b]=x,I={dataId:y.dataId,dtype:y.dtype,shape:s.shape},N={dataId:b.dataId,dtype:b.dtype,shape:a.shape},M=new Jn(r,s.shape,a.shape);return l.runWebGPUProgram(M,[I,N],Et(y.dtype,b.dtype))});else{let x=new qp(Ce.COMPLEX_MULTIPLY_REAL,s.shape,a.shape),y=new qp(Ce.COMPLEX_MULTIPLY_IMAG,s.shape,a.shape),b=[{dataId:p.complexTensorInfos.real.dataId,dtype:p.complexTensorInfos.real.dtype,shape:s.shape},{dataId:p.complexTensorInfos.imag.dataId,dtype:p.complexTensorInfos.imag.dtype,shape:s.shape},{dataId:d.complexTensorInfos.real.dataId,dtype:d.complexTensorInfos.real.dtype,shape:a.shape},{dataId:d.complexTensorInfos.imag.dataId,dtype:d.complexTensorInfos.imag.dtype,shape:a.shape}];m=l.runWebGPUProgram(x,b,"float32"),f=l.runWebGPUProgram(y,b,"float32")}let g=ko({inputs:{real:m,imag:f},backend:l});return l.disposeData(m.dataId),l.disposeData(f.dataId),g}let u=o||Et(s.dtype,a.dtype);if((s.dtype==="string"||a.dtype==="string"||l.shouldExecuteOnCPU([s,a]))&&t!=null){let p=l.tensorMap.get(s.dataId).values,d=l.tensorMap.get(a.dataId).values,m=s.dtype==="string"?P.fromUint8ToStringArray(p):p,f=s.dtype==="string"?P.fromUint8ToStringArray(d):d,[g,x]=t(s.shape,a.shape,m,f,u);return l.makeTensorInfo(x,u,g)}let c=new Jn(r,s.shape,a.shape);return l.runWebGPUProgram(c,[s,a],u)}}var Qp={};pt(Qp,{addImpl:()=>Kv,bincountImpl:()=>JI,bincountReduceImpl:()=>eT,bitwiseAndImpl:()=>qv,castImpl:()=>Hv,ceilImpl:()=>jv,concatImpl:()=>tT,equalImpl:()=>Xv,expImpl:()=>Yv,expm1Impl:()=>Qv,floorDivImpl:()=>Jv,floorImpl:()=>Zv,gatherNdImpl:()=>rT,gatherV2Impl:()=>oT,greaterEqualImpl:()=>tb,greaterImpl:()=>eb,lessEqualImpl:()=>ob,lessImpl:()=>rb,linSpaceImpl:()=>nT,logImpl:()=>nb,maxImpl:()=>iT,maximumImpl:()=>ib,minimumImpl:()=>sb,multiplyImpl:()=>Xp,negImpl:()=>sT,notEqualImpl:()=>ab,prodImpl:()=>lT,raggedGatherImpl:()=>cT,raggedRangeImpl:()=>dT,raggedTensorToTensorImpl:()=>hT,rangeImpl:()=>gT,rsqrtImpl:()=>ub,scatterImpl:()=>xT,sigmoidImpl:()=>yT,simpleAbsImpl:()=>QI,sliceImpl:()=>vT,sparseFillEmptyRowsImpl:()=>bT,sparseReshapeImpl:()=>ST,sparseSegmentReductionImpl:()=>wT,sqrtImpl:()=>_T,squaredDifferenceImpl:()=>cb,staticRegexReplaceImpl:()=>pb,stridedSliceImpl:()=>CT,stringNGramsImpl:()=>kT,stringSplitImpl:()=>IT,stringToHashBucketFastImpl:()=>TT,subImpl:()=>mb,tileImpl:()=>ET,topKImpl:()=>RT,transposeImpl:()=>aT,uniqueImpl:()=>PT});function Eh(r,t){Array.isArray(r)||(r=[r]),r.forEach(e=>{e!=null&&S.assert(e.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the CPU backend.`)})}function QI(r){let t=new Float32Array(r.length);for(let e=0;e<r.length;++e)t[e]=Math.abs(r[e]);return t}function ft(r){return(t,e,o,n,i)=>{let s=P.assertAndGetBroadcastShape(t,e),a=s.length,l=S.computeStrides(s),u=S.sizeFromShape(s),c=S.getTypedArrayFromDType(i,u),p=t.length,d=e.length,m=S.computeStrides(t),f=S.computeStrides(e),g=P.getBroadcastDims(t,s),x=P.getBroadcastDims(e,s);if(g.length+x.length===0)for(let y=0;y<c.length;++y)c[y]=r(o[y%o.length],n[y%n.length]);else for(let y=0;y<c.length;++y){let b=S.indexToLoc(y,a,l),I=b.slice(-p);g.forEach(W=>I[W]=0);let N=S.locToIndex(I,p,m),M=b.slice(-d);x.forEach(W=>M[W]=0);let B=S.locToIndex(M,d,f);c[y]=r(o[N],n[B])}return[c,s]}}function Tc(r){let{inputs:t,backend:e}=r,{real:o,imag:n}=t,i=e.data.get(o.dataId).values,s=e.data.get(n.dataId).values,a=e.makeTensorInfo(o.shape,"complex64"),l=e.data.get(a.dataId);return l.complexTensorInfos={real:e.makeTensorInfo(o.shape,"float32",i),imag:e.makeTensorInfo(n.shape,"float32",s)},a}function Nh(r,t,e="float32"){if(e==="complex64"){let n=Nh(r,t,"float32"),i=Nh(r,t,"float32");return Tc({inputs:{real:n,imag:i},backend:r})}let o=S.makeZerosTypedArray(S.sizeFromShape(t),e);return r.makeTensorInfo(t,e,o)}function Gv(r){let{inputs:t,backend:e}=r,{x:o}=t;return e.incRef(o.dataId),{dataId:o.dataId,shape:o.shape,dtype:o.dtype}}function ZI(r){let{inputs:t,backend:e}=r,{input:o}=t,n=e.data.get(o.dataId).complexTensorInfos.real,i=e.data.get(n.dataId).values;return e.makeTensorInfo(n.shape,n.dtype,i)}function Hv(r,t,e,o){if(o==="int32"){let n=Int32Array.from(r);return[t,"int32",n]}if(o==="bool"){let n=S.toTypedArray([0],e),[i,s]=ft((a,l)=>a!==l?1:0)(t,[],r,n,"bool");return[s,"bool",i]}throw new Error(`Error in Cast: failed to cast ${e} to ${o}`)}function jp(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{dtype:i}=o;if(i==="complex64"){if(n.dtype==="complex64")return Gv({inputs:{x:n},backend:e});let c=Nh(e,n.shape,n.dtype),p=jp({inputs:{x:n},backend:e,attrs:{dtype:"float32"}}),d=Tc({inputs:{real:p,imag:c},backend:e});return e.disposeIntermediateTensorInfo(c),e.disposeIntermediateTensorInfo(p),d}if(n.dtype==="complex64"){let c=ZI({inputs:{input:n},backend:e}),p=jp({inputs:{x:c},backend:e,attrs:{dtype:i}});return e.disposeIntermediateTensorInfo(c),p}if(!S.hasEncodingLoss(n.dtype,i)){let c=Gv({inputs:{x:n},backend:e});return{dataId:c.dataId,shape:c.shape,dtype:i}}let s=e.data.get(n.dataId).values,[a,l,u]=Hv(s,n.shape,n.dtype,i);return e.makeTensorInfo(a,l,u)}function xt(r,t,e,o){return e==null?({inputs:n,backend:i})=>{let{a:s,b:a}=n,l=i;Eh([s,a],r);let u=l.data.get(s.dataId).values,c=l.data.get(a.dataId).values,p=s.dtype==="string"?P.fromUint8ToStringArray(u):u,d=s.dtype==="string"?P.fromUint8ToStringArray(c):c,m=o||s.dtype,[f,g]=t(s.shape,a.shape,p,d,m);return l.makeTensorInfo(g,m,f)}:({inputs:n,backend:i})=>{let{a:s,b:a}=n,l=i;if(s.dtype==="complex64"||a.dtype==="complex64"){let u=jp({inputs:{x:s},backend:l,attrs:{dtype:"complex64"}}),c=l.data.get(u.dataId),p=c.complexTensorInfos.real,d=c.complexTensorInfos.imag,m=l.data.get(p.dataId).values,f=l.data.get(d.dataId).values,g=jp({inputs:{x:a},backend:l,attrs:{dtype:"complex64"}}),x=l.data.get(g.dataId),y=x.complexTensorInfos.real,b=x.complexTensorInfos.imag,I=l.data.get(y.dataId).values,N=l.data.get(b.dataId).values,[M,B,W]=e(s.shape,a.shape,m,f,I,N),H=l.makeTensorInfo(W,"float32",M),K=l.makeTensorInfo(W,"float32",B),X=Tc({inputs:{real:H,imag:K},backend:l});return l.disposeIntermediateTensorInfo(u),l.disposeIntermediateTensorInfo(g),l.disposeIntermediateTensorInfo(H),l.disposeIntermediateTensorInfo(K),X}else{let u=l.data.get(s.dataId).values,c=l.data.get(a.dataId).values,p=o||s.dtype,[d,m]=t(s.shape,a.shape,u,c,p);return l.makeTensorInfo(m,p,d)}}}function Ec(r){return(t,e,o,n,i,s)=>{let a=P.assertAndGetBroadcastShape(t,e),l=S.sizeFromShape(a),u=a.length,c=S.computeStrides(a),p=S.getTypedArrayFromDType("float32",l),d=S.getTypedArrayFromDType("float32",l),m=P.getBroadcastDims(t,a),f=P.getBroadcastDims(e,a),g=P.mergeRealAndImagArrays(o,n),x=P.mergeRealAndImagArrays(i,s),y=t.length,b=S.computeStrides(t),I=e.length,N=S.computeStrides(e);if(m.length+f.length===0)for(let M=0;M<p.length;M++){let B=M%g.length,W=M%x.length,H=r(g[B*2],g[B*2+1],x[W*2],x[W*2+1]);p[M]=H.real,d[M]=H.imag}else for(let M=0;M<p.length;M++){let B=S.indexToLoc(M,u,c),W=B.slice(-y);m.forEach(ce=>W[ce]=0);let H=S.locToIndex(W,y,b),K=B.slice(-I);f.forEach(ce=>K[ce]=0);let X=S.locToIndex(K,I,N),re=r(g[H*2],g[H*2+1],x[X*2],x[X*2+1]);p[M]=re.real,d[M]=re.imag}return[p,d,a]}}var Kv=ft((r,t)=>r+t),Yq=Ec((r,t,e,o)=>({real:r+e,imag:t+o})),i5e=xt(xn,Kv,Yq);function JI(r,t,e,o,n){let i=S.sizeFromShape(o),s=S.makeZerosTypedArray(n,e);for(let a=0;a<r.length;a++){let l=r[a];if(l<0)throw new Error("Input x must be non-negative!");l>=n||(i>0?s[l]+=t[a]:s[l]+=1)}return s}function eT(r,t,e,o=!1){let n=r.shape[0],i=r.shape[1],s=Le([n,e],t.dtype);for(let a=0;a<n;a++)for(let l=0;l<i;l++){let u=r.get(a,l);if(u<0)throw new Error("Input x must be non-negative!");u>=e||(o?s.set(1,a,u):t.size>0?s.set(s.get(a,u)+t.get(a,l),a,u):s.set(s.get(a,u)+1,a,u))}return s}var qv=ft((r,t)=>r&t),d5e=xt(ml,qv);function Yt(r){return(t,e,o)=>{let n=S.getArrayFromDType(e,t.length);for(let i=0;i<t.length;++i)n[i]=r(t[i],o);return n}}function Rh(r,t,e){let o=Yt(t);return Lr(r,o,e)}function Lr(r,t,e){return({inputs:o,attrs:n,backend:i})=>{let{x:s}=o;Eh(s,r);let a=i,l=a.data.get(s.dataId).values,u;if(s.dtype==="string"){if(!Array.isArray(l))throw new Error("String tensor's value was not an instance of Array");u=P.fromUint8ToStringArray(l)}else u=l;let c=e||s.dtype,p=t(u,c,n);return a.makeTensorInfo(s.shape,c,p)}}var jv=Yt(r=>Math.ceil(r)),_5e=Lr(xi,jv);function tT(r,t,e,o){let n=S.getArrayFromDType(e,S.sizeFromShape(t));if(o&&e!=="string"){let i=0;r.forEach(s=>{let a=S.sizeFromShape(s.shape);n.set(s.vals,i),i+=a})}else{let i=0;r.forEach(s=>{let a=e==="string"?P.fromUint8ToStringArray(s.vals):s.vals,l=0;for(let u=0;u<s.shape[0];++u){let c=u*t[1]+i;for(let p=0;p<s.shape[1];++p)n[c+p]=a[l++]}i+=s.shape[1]})}return n}var Xv=ft((r,t)=>r===t?1:0),R5e=xt(yi,Xv,null,"bool");var Yv=Yt(r=>Math.exp(r)),F5e=Lr(vi,Yv,"float32");var Qv=Yt(r=>Math.expm1(r)),V5e=Lr(bi,Qv);var Zv=Yt(r=>Math.floor(r)),H5e=Lr(Si,Zv);var Jv=ft((r,t)=>Math.floor(r/t)),Y5e=xt(wi,Jv,null,"int32");function rT(r,t,e,o,n,i,s,a,l){let u=Le([o,i],e);for(let c=0;c<o;c++){let p=[],d=0;for(let m=0;m<n;m++){let f=r[c*n+m];d+=f*s[m],p.push(f)}if(d<0||d>=l/i)throw new Error(`Invalid indices: ${p} does not index into ${a}`);for(let m=0;m<i;m++)u.values[c*i+m]=t.get(...t.indexToLoc(d*i+m))}return u}function oT(r,t,e){let o=Le(e,r.dtype);for(let n=0;n<o.size;++n){let s=o.indexToLoc(n).slice(),a=s[0],l=s[2],u=t.locToIndex([a,l]);s[2]=t.values[u];let c=r.locToIndex(s);0<=c&&c<r.values.length&&(o.values[n]=r.values[c])}return o}var eb=ft((r,t)=>r>t?1:0),i6e=xt(_i,eb,null,"bool");var tb=ft((r,t)=>r>=t?1:0),c6e=xt(Ci,tb,null,"bool");var rb=ft((r,t)=>r<t?1:0),h6e=xt(ki,rb,null,"bool");var ob=ft((r,t)=>r<=t?1:0),b6e=xt(Ii,ob,null,"bool");function nT(r,t,e){let o=(t-r)/(e-1),n=S.makeZerosTypedArray(e,"float32");n[0]=r;for(let i=1;i<n.length;i++)n[i]=n[i-1]+o;return n}var nb=Yt(r=>Math.log(r)),T6e=Lr(Ti,nb);function iT(r,t,e,o){let n=S.getTypedArrayFromDType(o,S.sizeFromShape(e));for(let i=0;i<n.length;++i){let s=i*t,a=r[s];for(let l=0;l<t;++l){let u=r[s+l];(Number.isNaN(u)||u>a)&&(a=u)}n[i]=a}return n}var ib=ft((r,t)=>Math.max(r,t)),D6e=xt(Ei,ib);var sb=ft((r,t)=>Math.min(r,t)),B6e=xt(Ni,sb);var Xp=ft((r,t)=>r*t),Qq=Ec((r,t,e,o)=>({real:r*e-t*o,imag:r*o+t*e})),G6e=xt(Ri,Xp,Qq);function sT(r,t,e){let o=S.createScalarValue(-1,e);return Xp([],t,o,r,e)}var ab=ft((r,t)=>r!==t?1:0),Z6e=xt(Pi,ab,null,"bool");function aT(r,t,e,o,n){let i=t.length,s=S.sizeFromShape(t),a=S.computeStrides(t),l=S.computeStrides(n),u=S.getTypedArrayFromDType(e,S.sizeFromShape(n));for(let c=0;c<s;++c){let p=S.indexToLoc(c,i,a),d=new Array(p.length);for(let f=0;f<d.length;f++)d[f]=p[o[f]];let m=S.locToIndex(d,i,l);u[m]=r[c]}return u}function lT(r,t,e,o){let[n,i]=P.computeOutAndReduceShapes(r,o),s=Et(t,"int32"),a=S.makeZerosTypedArray(S.sizeFromShape(n),s),l=S.sizeFromShape(i);for(let u=0;u<a.length;++u){let c=u*l,p=1;for(let d=0;d<l;++d)p*=e[c+d];a[u]=p}return{outVals:a,outShape:n,outDtype:s}}function Zq(r,t,e){r.forEach((o,n)=>{if(o<0||o>=e){let i=S.indexToLoc(n,t.length,S.computeStrides(t)).join(",");throw new Error(`indices[${i}] = ${o} is not in [0, ${e})`)}})}function Jq(r,t){for(let e=0;e<r.length;++e){let o=r[e],n=e===r.length-1?t:r[e+1].length;if(o.length===0)throw new Error("Ragged splits may not be empty");if(o[0]<0)throw new Error("Ragged splits must be non-negative");if(o[o.length-1]>n)throw new Error("Ragged splits must not point past values");for(let i=1;i<o.length;++i)if(o[i-1]>o[i])throw new Error("Ragged splits must be sorted in ascending order")}}function ej(r,t,e,o){let n=[],i=0,s=t.length-1+e.length,a=new Array(s).fill(null).map(()=>[0]);Jq(e,o);let l=1;for(let u=0;u<t.length-1;++u){l*=t[u];let c=t[u+1];for(let p=1;p<l+1;++p)a[u].push(p*c)}for(let u=0;u<r.length;++u){let c=r[u],p=r[u]+1;for(let d=0;d<e.length;++d){let m=e[d],f=d+t.length-1;if(f>=0){let g=a[f],x=g[g.length-1]-m[c];for(let y=c;y<p;++y)a[f].push(m[y+1]+x)}c=m[c],p=m[p]}p!==c&&(n.push([c,p]),i+=p-c)}return{outSplits:a,valueSlices:n,numValues:i}}function tj(r){let t=[];for(let e=0;e<r.length;++e){let o=r[e].length,n=S.getArrayFromDType("int32",o);t.push(n),r[e].forEach((i,s)=>n[s]=i)}return t}function uT(r,t){let e=r.slice(0,t);for(;e.length<t;)e.push(1);for(let o=t;o<r.length;o++)e[t-1]*=r[o];return e}function rj(r,t,e,o,n,i){let s=uT(t,2)[1],a=uT(i,2)[1],l=0;for(let u of e)for(let c=u[0];c<u[1];++c){for(let p=0;p<o;++p)n[l*a+p]=r[c*s+p];++l}}function oj(r,t,e,o,n){let i=t.slice();i[0]=n;let s=S.getArrayFromDType(e,S.sizeFromShape(i)),a=r.length,l=a===0?0:a/t[0];return rj(r,t,o,l,s,i),[s,i]}function cT(r,t,e,o,n,i,s,a){if(r.length===0)throw new Error("paramsNestedSplits must be non empty");if(t[0].length===0)throw new Error("Split tensors must not be scalars");let l=t[0][0]-1;if(Zq(i,s,l),o.length===0)throw new Error("params.rank must be nonzero");let u=o[0],{outSplits:c,valueSlices:p,numValues:d}=ej(i,s,r,u),m=tj(c),f=oj(e,o,n,p,d);return[m,f[0],f[1]]}var pT=2147483647;function dT(r,t,e,o,n,i,s){if(t.length>1)throw new Error("starts must be a scalar or vector");if(n.length>1)throw new Error("limits must be a scalar or vector");if(s.length>1)throw new Error("deltas must be a scalar or vector");let a=t.length===0,l=n.length===0,u=s.length===0,c=[];a||c.push(t[0]),l||c.push(n[0]),u||c.push(s[0]);for(let x=1;x<c.length;++x)if(c[x]!==c[x-1])throw new Error("starts, limits, and deltas must have the same shape");let p=c.length===0?1:c[0],d=S.getArrayFromDType("int32",p+1);d[0]=0;for(let x=0;x<p;++x){let y=a?r[0]:r[x],b=l?o[0]:o[x],I=u?i[0]:i[x];if(I===0)throw new Error("Requires delta != 0");let N;if(I>0&&b<y||I<0&&b>y)N=0;else if(N=Math.ceil(Math.abs((b-y)/I)),N>pT)throw new Error(`Requires ((limit - start) / delta) <= ${pT}`);d[x+1]=d[x]+N}let m=d[p],f=S.getArrayFromDType(e,m),g=0;for(let x=0;x<p;++x){let y=d[x+1]-d[x],b=a?r[0]:r[x],I=u?i[0]:i[x];for(let N=0;N<y;++N)f[g++]=b,b+=I}return[d,f]}var Mo=P.RowPartitionType,lb=class r{constructor(t,e,o,n,i,s,a,l,u,c){this.shape=t,this.shapeShape=e,this.values=o,this.valuesShape=n,this.valuesDType=i,this.defaultValue=s,this.defaultValueShape=a,this.rowPartitionValues=l,this.rowPartitionValuesShapes=u,this.rowPartitionTypes=P.getRowPartitionTypesHelper(c),this.raggedRank=P.getRaggedRank(this.rowPartitionTypes)}getRowPartitionTypeByDimension(t){return this.rowPartitionTypes[0]===Mo.FIRST_DIM_SIZE?this.rowPartitionTypes[t+1]:this.rowPartitionTypes[t]}getRowPartitionTensor(t){return this.rowPartitionTypes[0]===Mo.FIRST_DIM_SIZE?this.rowPartitionValues[t+1]:this.rowPartitionValues[t]}getMaxWidth(t){let e=this.getRowPartitionTensor(t-1);switch(this.getRowPartitionTypeByDimension(t-1)){case Mo.VALUE_ROWIDS:return r.getMaxWidthValueRowID(e);case Mo.ROW_SPLITS:return r.getMaxWidthRowSplit(e);default:throw new Error(`Cannot handle partition type ${Mo[this.getRowPartitionTypeByDimension(t-1)]}`)}}static getMaxWidthRowSplit(t){let e=t.length;if(e===0||e===1)return 0;let o=0;for(let n=0;n<e-1;++n){let i=t[n+1]-t[n];i>o&&(o=i)}return o}static getMaxWidthValueRowID(t){let e=t.length;if(e===0)return 0;let o=0,n=t[0],i=0;for(let s=1;s<e;++s){let a=t[s];a!==n&&(n=a,i=Math.max(s-o,i),o=s)}return Math.max(e-o,i)}tensorShapeFromTensor(t,e,o=!0){if(e.length===0){if(t[0]===-1)return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return fT(t,o)}calculateOutputSize(t){let e=this.valuesShape,o=this.defaultValueShape;P.validateDefaultValueShape(o,e);let n=this.tensorShapeFromTensor(this.shape,this.shapeShape),s=P.combineRaggedTensorToTensorShapes(this.raggedRank,n,e);s[0]<0&&(s[0]=t);for(let a=1;a<=this.raggedRank;++a)s[a]<0&&(s[a]=this.getMaxWidth(a));return s}calculateFirstParentOutputIndex(t,e,o){let n=Math.min(t,o),i=[],s=0;for(let a=0;a<n;++a,s+=e)i.push(s);for(let a=n;a<t;++a)i.push(-1);return S.assert(i.length===t,()=>"Final length of result must be equal to firstDimension."),i}calculateOutputIndexRowSplit(t,e,o,n){let i=t.length,s=[];for(let a=0;a<i-1;++a){let l=t[a+1]-t[a],u=Math.min(n,l),c=e[a];c===-1&&(u=0);for(let p=0;p<u;++p)s.push(c),c+=o;for(let p=0;p<l-u;++p)s.push(-1)}if(i>0&&s.length!==t[i-1])throw new Error("Invalid row split size.");return s}calculateOutputIndexValueRowID(t,e,o,n){let i=t.length,s=[];if(i===0)return[];let a=0,l=t[0];if(l>=e.length)throw new Error(`Got currentValueRowId=${l}, which is not less than ${e.length}`);let u=e[l];s.push(u);for(let c=1;c<i;++c){let p=t[c];if(p===l)u>=0&&(++a,a<n?u+=o:u=-1);else{if(a=0,l=p,p>=e.length)throw new Error(`Got nextValueRowId=${p} which is not less than ${e.length}`);u=e[p]}s.push(u)}if(s.length!==t.length)throw new Error("Invalid row ids.");return s}calculateOutputIndex(t,e,o,n){let i=this.getRowPartitionTensor(t),s=this.getRowPartitionTypeByDimension(t);switch(s){case Mo.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(i,e,o,n);case Mo.ROW_SPLITS:if(i.length-1>e.length)throw new Error(`Row partition size is greater than output size: ${i.length-1} > ${e.length}`);return this.calculateOutputIndexRowSplit(i,e,o,n);default:throw new Error(`Unsupported partition type: ${Mo[s]}`)}}getFirstDimensionSize(){let t=this.rowPartitionValues[0];if(this.rowPartitionTypes.length===0)throw new Error("No row_partition_types given.");let e=this.rowPartitionTypes[0];switch(e){case Mo.FIRST_DIM_SIZE:return t[0];case Mo.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case Mo.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${Mo[e]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");let e=this.getFirstDimensionSize(),o=this.calculateOutputSize(e),n=new Array(this.raggedRank+1);n[n.length-1]=1;for(let l=n.length-2;l>=0;--l)n[l]=n[l+1]*o[l+1];let i=fT(o,!1),s=S.getArrayFromDType(this.valuesDType,S.sizeFromShape(i));if(n[0]*o[0]>0){let l=this.calculateFirstParentOutputIndex(e,n[0],o[0]);for(let u=1;u<=this.raggedRank;++u)l=this.calculateOutputIndex(u-1,l,n[u],o[u]);this.setOutput(this.raggedRank,l,s,i)}return[i,s]}setOutput(t,e,o,n){if(o.length===0)return;let i=this.values,s=o,a=n.slice();a=a.slice(t+1);let l=S.sizeFromShape(a),u=e.length,c=this.defaultValue;if(c.length!==l&&c.length!==1){let f=this.defaultValueShape;Ee(()=>{let g=Z(c,f);c=Ki(g,a).dataSync()})}let p=0,d=0,m=0;for(let f=0;f<=u;++f){let g=f<u?e[f]:-1;if(g===m){++m;continue}if(d<m){let x=i.subarray(p*l),y=s.subarray(d*l),b=(m-d)*l;mT(y,x,b)}if(f>=u){let x=o.length;g=Math.floor(x/l)}if(g>m)if(this.defaultValue.length===1)s.subarray(m*l,g*l).fill(this.defaultValue[0]),m=g;else for(;g>m;){let x=s.slice(m*l);mT(x,c,l),++m}g<0?(p=f+1,d=m):(p=f,d=m,m=d+1)}}};function mT(r,t,e){for(let o=0;o<e;o++)r[o]=t[o]}function fT(r,t){let e=[];for(let o of r){if(o<0){if(!t)throw new Error(`Dimension ${o} must be >= 0`);if(o<-1)throw new Error(`Dimension ${o} must be >= -1`);o=-1}e.push(o)}return e}function hT(r,t,e,o,n,i,s,a,l,u){return new lb(r,t,e,o,n,i,s,a,l,u).compute()}function gT(r,t,e,o){let n=r===t,i=r<t&&e<0,s=t<r&&e>1;if(n||i||s)return S.makeZerosTypedArray(0,o);let a=Math.abs(Math.ceil((t-r)/e)),l=S.makeZerosTypedArray(a,o);t<r&&e===1&&(e=-1),l[0]=r;for(let u=1;u<l.length;u++)l[u]=l[u-1]+e;return l}var ub=Yt(r=>1/Math.sqrt(r)),hGe=Lr($i,ub);function xT(r,t,e,o,n,i,s,a,l,u){let c=[o/n,n],p=r.values,d=t.values;if(o===0)return Le(e,t.dtype);let m=l instanceof bo?l:Le(c,t.dtype);typeof l=="string"||typeof l=="number"?m.values.fill(l):typeof l=="boolean"&&m.values.fill(+l);for(let f=0;f<i;f++){let g=[],x=0;for(let y=0;y<s;y++){let b=p[f*s+y];g.push(b),x+=b*a[y]}if(x<0||x>=o/n)throw new Error(`Invalid indices: ${g} does not index into ${e}`);for(let y=0;y<n;y++)u?m.values[x*n+y]+=d[f*n+y]:m.values[x*n+y]=t.rank===0?d[0]:d[f*n+y]}return m}var yT=Yt(r=>1/(1+Math.exp(-r))),wGe=Rh(Ai,r=>1/(1+Math.exp(-r)));function vT(r,t,e,o,n){let i=Kt.isSliceContinous(o,t,e),s=S.sizeFromShape(e),a=S.computeStrides(o);if(i){let p=Kt.computeFlatOffset(t,a);return n==="string"?r.slice(p,p+s):r.subarray(p,p+s)}let l=n==="string"?P.fromUint8ToStringArray(r):r,u=Le(o,n,l),c=Le(e,n);for(let p=0;p<c.size;++p){let d=c.indexToLoc(p),m=d.map((f,g)=>f+t[g]);c.set(u.get(...m),...d)}return n==="string"?P.fromStringArrayToUint8(c.values):c.values}function bT(r,t,e,o,n,i,s){let a=t[0],l=i[0],u=new Array(l),c=new Array(a),p=t[1];if(l===0){if(a!==0)throw new Error(P.getSparseFillEmptyRowsIndicesDenseShapeMismatch(a));let x=S.getArrayFromDType(e,0),y=S.getArrayFromDType(n,0);return[x,[0,p],y,u,c]}let d=!0,m=0,f=new Array(l).fill(0);for(let x=0;x<a;++x){let y=r[x*p];if(y<0)throw new Error(P.getSparseFillEmptyRowsNegativeIndexErrorMessage(x,y));if(y>=l)throw new Error(P.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(x,y,l));++f[y],d=d&&y>=m,m=y}let g=!0;for(let x=0;x<l;++x){let y=f[x]===0;u[x]=y,g=g&&!y,f[x]=Math.max(f[x],1),x>0&&(f[x]+=f[x-1])}if(g&&d){let x=r,y=o;for(let b=0;b<a;++b)c[b]=b;return[x,[a,p],y,u,c]}else{let x=f[l-1],y=S.getArrayFromDType(e,x*p),b=S.getArrayFromDType(n,x),I=new Array(l).fill(0);for(let N=0;N<a;++N){let M=r[N*p],B=I[M],W=(M===0?0:f[M-1])+B;I[M]++;for(let H=0;H<p;++H)y[W*p+H]=r[N*p+H];b[W]=o[N],c[N]=W}for(let N=0;N<l;++N)if(I[N]===0){let B=N===0?0:f[N-1];y[B*p+0]=N;for(let W=1;W<p;++W)y[B*p+W]=0;b[B]=s}return[y,[x,p],b,u,c]}}function ST(r,t,e,o,n){let i=S.sizeFromShape(o),s=t[0],a=n.length,l=[],u=1,c=-1;for(let x=0;x<a;++x){let y=n[x];if(y===-1){if(c!==-1)throw new Error(P.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(c,x));c=x,l.push(1)}else{if(y<0)throw new Error(P.getSparseReshapeNegativeOutputDimErrorMessage(x,y));u*=y,l.push(y)}}if(c!==-1){if(u<=0)throw new Error(P.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());let x=Math.trunc(i/u);if(u*x!==i)throw new Error(P.getSparseReshapeInputOutputMultipleErrorMessage(o,l));l[c]=x}if(S.sizeFromShape(l)!==i)throw new Error(P.getSparseReshapeInputOutputMismatchErrorMessage(o,l));let d=o.length,m=[];if(d>0){m[d-1]=1;for(let x=d-2;x>=0;--x)m[x]=m[x+1]*o[x+1]}let f=[];if(a>0){f[a-1]=1;for(let x=a-2;x>=0;--x)f[x]=f[x+1]*l[x+1]}let g=S.getArrayFromDType(e,s*a);for(let x=0;x<s;++x){let y=0;for(let b=0;b<d;++b)y+=r[x*d+b]*m[b];for(let b=0;b<a;++b)g[x*a+b]=Math.trunc(y/f[b]),y%=f[b]}return[g,[s,a],l]}function wT(r,t,e,o,n,i=!1,s=0){let a=o.length,l=[t[0],r.length/t[0]],u=l[1],p=a>0?n[a-1]+1:0;if(p<0)throw new Error(P.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let d=t.slice();d[0]=p;let m=d.reduce((I,N)=>I*N,1),f=S.getArrayFromDType(e,m);if(a===0)return p>0&&f.fill(s),[f,d];if(p<=0)throw new Error(P.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let g=0,x=1,y=0,b=n[g];for(;;){let I=0;if(x<a){if(I=n[x],b===I){++x;continue}if(b>=I)throw new Error(P.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(b<0||b>=p)throw new Error(P.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(b,p));b>y&&f.fill(s,y*u,b*u);for(let N=g;N<x;++N){let M=o[N];if(M<0||M>=l[0])throw new Error(P.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(N,o[N],l[0]));for(let B=0;B<u;B++)f[b*u+B]+=r[M*u+B]}if(i)for(let N=0;N<u;N++)f[b*u+N]/=x-g;if(g=x,++x,y=b+1,b=I,x>a)break}return y<p&&f.fill(s,y*u,p*u),[f,d]}var _T=Yt(r=>Math.sqrt(r)),FGe=Rh(Di,r=>Math.sqrt(r));var cb=ft((r,t)=>{let e=r-t;return e*e}),VGe=xt(Fi,cb);var pb=Yt((r,t)=>{let{pattern:e,replaceGlobal:o,rewrite:n}=t;return r.replace(new RegExp(e,o?"g":""),n)}),HGe=Lr(Ku,pb);function CT(r,t,e,o){let n=Le(r,t.dtype);for(let i=0;i<n.size;i++){let s=n.indexToLoc(i),a=new Array(s.length);for(let l=0;l<a.length;l++)a[l]=s[l]*e[l]+o[l];n.set(t.get(...a),...s)}return n}var db=class{constructor(t,e,o,n,i,s){this.separator=S.encodeString(t),this.nGramWidths=e,this.leftPad=S.encodeString(o),this.rightPad=S.encodeString(n),this.padWidth=i,this.preserveShort=s}getPadWidth(t){return Math.min(this.padWidth<0?t-1:this.padWidth,t-1)}getNumNGrams(t,e){let o=this.getPadWidth(e);return Math.max(0,t+2*o-e+1)}createNGrams(t,e,o,n,i,s){for(let a=0;a<i;++a){let l=this.getPadWidth(s),u=Math.max(0,l-a),c=Math.max(0,l-(i-(a+1))),p=s-(u+c),d=e+(u>0?0:a-l),m=0;m+=u*this.leftPad.length;for(let b=0;b<p;++b)m+=t[d+b].length;m+=c*this.rightPad.length;let f=u+c+p-1;m+=f*this.separator.length,o[n+a]=new Uint8Array(m);let g=o[n+a],x=0,y=b=>b.forEach(I=>g[x++]=I);for(let b=0;b<u;++b)y(this.leftPad),y(this.separator);for(let b=0;b<p-1;++b)y(t[d+b]),y(this.separator);if(p>0){y(t[d+p-1]);for(let b=0;b<c;++b)y(this.separator),y(this.rightPad)}else{for(let b=0;b<c-1;++b)y(this.rightPad),y(this.separator);y(this.rightPad)}}}compute(t,e){let o=t.length,n=e.length;if(n>0){let l=e[0];if(l!==0)throw new Error(`First split value must be 0, got ${l}`);for(let u=1;u<n;++u){let c=e[u]>=l;if(c=c&&e[u]<=o,!c)throw new Error(`Invalid split value ${e[u]}, must be in [${l}, ${o}]`);l=e[u]}if(l!==o)throw new Error(`Last split value must be data size. Expected ${o}, got ${l}`)}let i=n-1,s=S.getArrayFromDType("int32",n);if(o===0||n===0){let l=new Array(o);for(let u=0;u<=i;++u)s[u]=0;return[l,s]}s[0]=0;for(let l=1;l<=i;++l){let u=e[l]-e[l-1],c=0;this.nGramWidths.forEach(p=>{c+=this.getNumNGrams(u,p)}),this.preserveShort&&u>0&&c===0&&(c=1),s[l]=s[l-1]+c}let a=new Array(s[i]);for(let l=0;l<i;++l){let u=e[l],c=s[l];if(this.nGramWidths.forEach(p=>{let d=e[l+1]-e[l],m=this.getNumNGrams(d,p);this.createNGrams(t,u,a,c,m,p),c+=m}),this.preserveShort&&c===s[l]){let p=e[l+1]-e[l];if(p===0)continue;let d=p+2*this.padWidth;this.createNGrams(t,u,a,c,1,d)}}return[a,s]}};function kT(r,t,e,o,n,i,s,a){return new db(e,o,n,i,s,a).compute(r,t)}function nj(r,t,e,o){if(!r.length)return;if(t.length===0){for(let i=0;i<r.length;++i)o.push(r.subarray(i,i+1));return}if(t.length===1){let i=t[0],s=r.indexOf(i);for(;s!==-1;){let a=r.subarray(0,s);(!e||a.length!==0)&&o.push(a),r=r.subarray(s+1),s=r.indexOf(i)}(!e||r.length!==0)&&o.push(r);return}let n=0;for(let i=0;i<r.length+1;i++)if(i===r.length||t.indexOf(r[i])!==-1){let s=r.subarray(n,i);(!e||s.length!==0)&&o.push(s),n=i+1}}function IT(r,t,e){let o=r.length,n=[],i=0,s=0,a=new Array(o);for(let d=0;d<o;++d){let m=n.length;nj(r[d],t,e,n);let f=n.length-m;a[d]=f,i+=f,s=Math.max(s,f)}let l=S.getArrayFromDType("int32",i*2),u=new Array(i),c=[o,s],p=0;for(let d=0;d<o;++d)for(let m=0;m<a[d];++m)l[p*2]=d,l[p*2+1]=m,u[p]=n[p],++p;return[l,u,c]}function TT(r,t){let e=S.getArrayFromDType("int32",r.length);for(let o=0;o<r.length;++o)e[o]=S.fingerPrint64(r[o]).modulo(t).getLowBitsUnsigned();return e}var mb=ft((r,t)=>r-t),ij=Ec((r,t,e,o)=>({real:r-e,imag:t-o})),nHe=xt(Oi,mb,ij);function ET(r,t){let e=new Array(r.rank);for(let n=0;n<e.length;n++)e[n]=r.shape[n]*t[n];let o=Le(e,r.dtype);for(let n=0;n<o.values.length;++n){let i=o.indexToLoc(n),s=new Array(r.rank);for(let l=0;l<s.length;l++)s[l]=i[l]%r.shape[l];let a=r.locToIndex(s);o.values[n]=r.values[a]}return o}var Yp=(r,t)=>{let e=t.value-r.value;return e===0?r.index-t.index:e};function NT(r,t,e=0,o=r.length-1){for(;o>e;){if(o-e>600){let a=o-e+1,l=t-e+1,u=Math.log(a),c=.5*Math.exp(2*u/3),p=.5*Math.sqrt(u*c*(a-c)/a)*Math.sign(l-a/2),d=Math.max(e,Math.floor(t-l*c/a+p)),m=Math.min(o,Math.floor(t+(a-l)*c/a+p));NT(r,t,d,m)}let n=r[t],i=e,s=o;for(S.swap(r,e,t),Yp(r[o],n)>0&&S.swap(r,e,o);i<s;){for(S.swap(r,i,s),i++,s--;Yp(r[i],n)<0;)i=i+1;for(;Yp(r[s],n)>0;)s=s-1}Yp(r[e],n)===0?S.swap(r,e,s):(s=s+1,S.swap(r,s,o)),s<=t&&(e=s+1),t<=s&&(o=s-1)}}function RT(r,t,e,o,n){let i=t[t.length-1],[s,a]=[r.length/i,i],l=S.getTypedArrayFromDType(e,s*o),u=S.getTypedArrayFromDType("int32",s*o);for(let p=0;p<s;p++){let d=p*a,m=r.subarray(d,d+a),f=new Array(m.length);m.forEach((b,I)=>f[I]={value:b,index:I}),o<f.length&&(NT(f,o),f=f.slice(0,o)),n&&f.sort(Yp);let g=p*o,x=l.subarray(g,g+o),y=u.subarray(g,g+o);for(let b=0;b<o;b++)x[b]=f[b].value,y[b]=f[b].index}let c=t.slice();return c[c.length-1]=o,[Le(c,e,l),Le(c,"int32",u)]}function PT(r,t,e,o){let n=S.parseAxisParam(t,e)[0],i=[1,e[0],1];for(let f=0;f<n;f++)i[0]*=e[f];i[1]=e[n];for(let f=n+1;f<e.length;f++)i[2]*=e[f];let s=new Map,a=new Int32Array(e[n]),l=new bo(i,o,r),u=[],c=i[0]===1&&i[2]===1;for(let f=0;f<e[n];f++){let g;if(c)g=r[f].toString();else{let y=[];for(let b=0;b<i[0];b++)for(let I=0;I<i[2];I++)y.push(l.get(b,f,I));g=y.join(",")}let x=s.get(g);if(x!=null)a[f]=x;else{let y=s.size;s.set(g,y),a[f]=y,u.push(f)}}let p=i.slice();p[1]=s.size;let d=new bo(p,o);u.forEach((f,g)=>{for(let x=0;x<i[0];x++)for(let y=0;y<i[2];y++)d.set(l.get(x,f,y),x,g,y)});let m=e.slice();return m[n]=p[1],{outputValues:d.values,outputShape:m,indices:a}}var{addImpl:$T,castImpl:AT,ceilImpl:DT,concatImpl:FT,equalImpl:OT,expImpl:LT,expm1Impl:MT,floorImpl:BT,floorDivImpl:VT,gatherNdImpl:WT,gatherV2Impl:UT,greaterEqualImpl:zT,greaterImpl:GT,lessEqualImpl:HT,lessImpl:KT,logImpl:qT,maxImpl:jT,maximumImpl:XT,minimumImpl:YT,multiplyImpl:QT,negImpl:ZT,notEqualImpl:JT,prodImpl:eE,rangeImpl:tE,rsqrtImpl:rE,scatterImpl:oE,simpleAbsImpl:nE,sliceImpl:iE,stridedSliceImpl:sE,stringNGramsImpl:aE,subImpl:lE,tileImpl:uE,topKImpl:cE,transposeImpl:pE,uniqueImpl:l8e}=Qp;var sj=ke({opType:ae.ABS,cpuKernelImpl:nE}),dE={kernelName:_s,backendName:"webgpu",kernelFunc:sj};var aj=ke({opType:ae.ACOS}),mE={kernelName:Ya,backendName:"webgpu",kernelFunc:aj};var lj=ke({opType:ae.ACOSH}),fE={kernelName:Qa,backendName:"webgpu",kernelFunc:lj};var uj=Ze({opType:Ce.ADD,cpuKernelImpl:$T,supportsComplex:!0}),hE={kernelName:xn,backendName:"webgpu",kernelFunc:uj};var Ph=class{constructor(t){this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t[0],this.variableNames=t.map((e,o)=>`T${o}`),this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.shaderKey="addN"}getUserCode(){let t=[];this.variableNames.forEach(n=>{t.push(`let v${n} = get${n}ByOutputCoords(coords);`)});let e=this.variableNames.map(n=>`v${n}`).join(" + ");return`
      ${J("index")} {
        for (var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if (flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndex);
            ${t.join(`
        `)}
            setOutputAtIndex(flatIndex, ${e});
          }
        }
      }
    `}};function cj(r){let{inputs:t,backend:e}=r,o=t;if(o.length===1)return $t({inputs:{x:o[0]},backend:e});let n=o.map(a=>a.dtype).reduce((a,l)=>Et(a,l)),i=o.map(a=>a.shape),s=new Ph(i);return e.runWebGPUProgram(s,o,n)}var gE={kernelName:Za,backendName:"webgpu",kernelFunc:cj};var $h=class{constructor(t,e){this.variableNames=["A"],this.workgroupSize=[16,16,1];let o=new Array(t.length);for(let n=0;n<o.length;n++)o[n]=t[e[n]];this.outputShape=o,this.dispatchLayout={x:[0],y:[1]},this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize,[1,1,1]),this.shaderKey="transposeShared"}getUserCode(){S.assert(this.workgroupSize[0]===this.workgroupSize[1],()=>`Must be a square tile, current tile shape is ${this.workgroupSize[0]} x ${this.workgroupSize[1]}`);let t=this.workgroupSize[0];return`
      var<workgroup> tile : array<array<f32, ${this.workgroupSize[0]+1}>, ${this.workgroupSize[0]}>;
      ${J()} {
        var x = i32(workgroupId.x) * ${t} + i32(localId.x);
        var y = i32(workgroupId.y) * ${t} + i32(localId.y);
        let width = uniforms.outShape[0];
        let height = uniforms.outShape[1];
        if (x < width && y < height) {
          tile[localId.y][localId.x] = f32(A[y * width + x]);
        }
        workgroupBarrier();

        x = i32(workgroupId.y) * ${t} + i32(localId.x);
        y = i32(workgroupId.x) * ${t} + i32(localId.y);
        if (x < height && y < width) {
          setOutputAtIndex((y * height + x), tile[localId.x]
            [localId.y]);
        }
      }
    `}};var Ah=class{constructor(t,e){this.variableNames=["A"],this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0;let o=new Array(t.length);for(let n=0;n<o.length;n++)o[n]=t[e[n]];this.outputShape=o,this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.newDim=e,this.shaderKey=`transpose_${e}`}getUserCode(){let t=mt(this.outputShape.length),e=fb(this.newDim);return`
      ${J("index")} {
        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if(flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndex);
            setOutputAtIndex(flatIndex, A[getIndexFromCoords${this.outputShape.length}D(
              ${t}(${e}), uniforms.aShape)]);
          }
        }
      }
    `}};function fb(r){let t=r.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);let e=new Array(t);for(let o=0;o<r.length;o++)e[r[o]]=`coords.${Lo(o)}`;return e.join()}function xr(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{perm:i}=o,s=e,a=n.shape.length,l=new Array(a);for(let c=0;c<l.length;c++)l[c]=n.shape[i[c]];if(e.shouldExecuteOnCPU([n])){let p=s.tensorMap.get(n.dataId).values,d=pE(p,n.shape,n.dtype,i,l);return e.makeTensorInfo(l,n.dtype,d)}if(n.shape.length===2&&S.arraysEqual(i,[1,0])){let c=new $h(n.shape,i);return s.runWebGPUProgram(c,[n],n.dtype)}let u=new Ah(n.shape,i);return s.runWebGPUProgram(u,[n],n.dtype)}var xE={kernelName:Mi,backendName:"webgpu",kernelFunc:xr};var Dh=class{constructor(t,e,o){this.variableNames=["x"],this.uniforms="reduceSize : i32,",this.size=!0,this.inputShape=[t.batchSize,t.inSize];let[n]=P.computeOutAndReduceShapes(this.inputShape,[1]);this.outputShape=n.length===0?[1]:n,t.inSize>=32768&&o>=512?this.workgroupSize=[512,1,1]:t.inSize>=4096?this.workgroupSize=[256,1,1]:this.workgroupSize=[64,1,1],this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,[1,1,1]),this.reduceType=e,this.shaderKey=`reduce_${e}`}getUserCode(){let t="",e="0.0",o=this.workgroupSize[0];this.reduceType==="min"||this.reduceType==="max"?(t=`
         if (isnan(candidate)) {
          bestValue = uniforms.NAN;
         } else if (!isnan(bestValue) && candidate ${this.reduceType==="min"?"<":">"} bestValue)
           {  bestValue = candidate; }`,e="f32(x[offset])"):this.reduceType==="sum"||this.reduceType==="mean"?t=" bestValue = bestValue + candidate; ":this.reduceType==="prod"?(t=" bestValue = bestValue * candidate; ",e="1.0"):this.reduceType==="all"?(t=" bestValue = f32(bestValue >= 1.0 && candidate >= 1.0); ",e="1.0"):this.reduceType==="any"&&(t=" bestValue = f32(bestValue >= 1.0 || candidate >= 1.0); ",e="0.0");let n=this.reduceType==="mean"?"setOutputAtIndex(outputIndex, bestValue / f32(uniforms.reduceSize));":"setOutputAtIndex(outputIndex, bestValue);";return`
       fn DIV_CEIL(a : u32, b : u32) -> u32 {
        return ((a - 1u) / b + 1u);
       }

       ${`
         var<workgroup> xBestValues : array<f32, ${o}>;
       `}
       fn getOffset(outputIndex : i32) -> i32 {
         let outputCoords = getCoordsFromIndex(outputIndex);
         let offset = ${this.outputShape.length===1?"outputCoords":"outputCoords[0]"} * uniforms.reduceSize;
          return offset;
       }
       ${J("index")} {
         let outputIndex = index / ${o};
         let offset = getOffset(outputIndex);
         var bestValue = ${e};
         let Length = uniforms.reduceSize;
         let WorkPerThread = DIV_CEIL(u32(Length), ${o}u);
         for (var k = i32(localId.x); k < Length && outputIndex < uniforms.size;
             k = k + ${o}) {
           let candidate = f32(x[offset + k]);
           ${t}
         }
         xBestValues[localId.x] = bestValue;
         workgroupBarrier();

         var reduceSize = min(u32(Length), ${o}u);
         for (var currentSize = reduceSize / 2u; reduceSize > 1u;
             currentSize = reduceSize / 2u) {
           let interval = DIV_CEIL(reduceSize, 2u);
           if (localId.x < currentSize) {
            let candidate = xBestValues[localId.x + interval];
            ${t}
            xBestValues[localId.x] = bestValue;
           }
           reduceSize = interval;
           workgroupBarrier();
         }

         if (localId.x == 0u && outputIndex < uniforms.size) {
          ${n}
        }
       }
     `}};var pj={mean:"float32",all:"bool",any:"bool"};function po(r,t,e,o,n){let i=r.shape.length,s=[],a=S.parseAxisParam(t,r.shape),l=a,u=P.getAxesPermutation(l,i),c=r;u!=null&&(c=xr({inputs:{x:r},attrs:{perm:u},backend:n}),l=P.getInnerMostAxes(l.length,i),s.push(c)),P.assertAxesAreInnerMostDims(o,l,i);let[p,d]=P.computeOutAndReduceShapes(c.shape,l),m=p;e&&(m=P.expandShapeToKeepDim(p,a));let f;if((o==="max"||o==="prod")&&n.shouldExecuteOnCPU([c])){let g=n.tensorMap.get(c.dataId).values;switch(o){case"max":let x=jT(g,S.sizeFromShape(d),m,r.dtype);f=n.makeTensorInfo(m,r.dtype,x);break;case"prod":let{outVals:y,outShape:b,outDtype:I}=eE(c.shape,c.dtype,g,l);f=n.makeTensorInfo(b,I,y);break;default:throw new Error(`${o} CPU implementation is not yet supported.`)}}else{let g=S.sizeFromShape(d),y=S.sizeFromShape(c.shape)/g,b={windowSize:g,inSize:g,batchSize:y,outSize:1},I=pj[o]||Wn(r.dtype),N=[{type:"int32",data:[g]}],M=new Dh(b,o,n.device.limits.maxComputeWorkgroupSizeX),B=n.runWebGPUProgram(M,[c],I,N);s.push(B),f=he({inputs:{x:B},attrs:{shape:m},backend:n})}return s.forEach(g=>n.disposeData(g.dataId)),f}function dj(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{keepDims:i,axis:s}=o;return po(n,s,i,"all",e)}var yE={kernelName:Ja,backendName:"webgpu",kernelFunc:dj};function mj(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{keepDims:i,axis:s}=o;return po(n,s,i,"any",e)}var vE={kernelName:el,backendName:"webgpu",kernelFunc:mj};var Nc=class{constructor(t,e,o){this.workgroupSize=[64,1,1],this.variableNames=["x"],this.uniforms="infinityValue : f32,",this.size=!0;let n=[e];this.op=o==="min"?"<":">";let[i,s]=P.computeOutAndReduceShapes(t,n);this.outputShape=i.length===0?[1]:i,this.dispatchLayout=ie(this.outputShape),S.sizeFromShape(s)<32?(this.type="plain",this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize)):(this.type="shared",this.dispatch=ee(this.dispatchLayout,this.outputShape,[1,1,1])),this.inputShape=t,this.shaderKey=`argMinMax_${this.op}_${this.type}`}getUserCode(){let t=this.workgroupSize[0],e=()=>this.inputShape.length===1?"uniforms.xShape":`uniforms.xShape.${Lo(this.inputShape.length-1)}`,o=()=>{let n="";if(this.outputShape.length===1)this.inputShape.length!==1&&(n+="outputCoords,");else for(let i=0;i<this.outputShape.length;i++)n+=`outputCoords.${Lo(i)},`;return n};return this.type==="shared"?`
      fn DIV_CEIL(a : u32, b : u32) -> u32 {
        return ((a - 1u) / b + 1u);
      }

      ${`
      var<workgroup> xBestIndices : array<i32, ${t}>;
      var<workgroup> xBestValues : array<f32, ${t}>;
    `}

      ${J("index")} {
        let outputIndex = index / ${t};
        let reduceLength = ${e()};

        var bestIndex = i32(localId.x);
        var bestValue = uniforms.infinityValue;
        let outputCoords = getCoordsFromIndex(outputIndex);
        for (var k = i32(localId.x); k < reduceLength && outputIndex < uniforms.size;
            k = k + ${t}) {
          let candidate = getX(${o()} k);
          if (!isnan(candidate) && candidate ${this.op} bestValue) {
            bestValue = candidate;
            bestIndex = k;
          }
        }
        xBestValues[localId.x] = bestValue;
        xBestIndices[localId.x] = bestIndex;
        workgroupBarrier();

        var reduceSize = min(u32(reduceLength), ${t}u);
        for (var currentSize = reduceSize / 2u; reduceSize > 1u;
            currentSize = reduceSize / 2u) {
          let interval = DIV_CEIL(reduceSize, 2u);
          if (localId.x < currentSize) {
            let candidate = xBestValues[localId.x + interval];
            if (candidate ${this.op} bestValue) {
              bestValue = candidate;
              xBestValues[localId.x] = bestValue;
              xBestIndices[localId.x] = xBestIndices[localId.x + interval];
            }
          }
          reduceSize = interval;
          workgroupBarrier();
        }

        if (localId.x == 0u && outputIndex < uniforms.size) {
          setOutputAtIndexI32(outputIndex, xBestIndices[localId.x]);
        }
      }
    `:`
      ${J("index")} {
        if (index < uniforms.size) {
          let outputCoords = getCoordsFromIndex(index);
          var bestIndex = 0;
          var bestValue = getX(${o()} 0);
          let reduceLength = ${e()};
          for (var i = 1; i < reduceLength; i++) {
            let candidate = getX(${o()} i);
            if (candidate ${this.op} bestValue) {
              bestValue = candidate;
              bestIndex = i;
            }
          }
          setOutputAtIndexI32(index, bestIndex);
        }
      }
      `}};function fj(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{axis:i}=o,s=S.parseAxisParam(i,n.shape),a=P.getAxesPermutation(s,n.shape.length),l=n,u=[];a!=null&&(l=xr({inputs:{x:n},backend:e,attrs:{perm:a}}),u.push(l),s=P.getInnerMostAxes(s.length,l.shape.length)),P.assertAxesAreInnerMostDims("argMax",[s[0]],l.shape.length);let c=new Nc(l.shape,s[0],"max"),p=[{type:"float32",data:[Number.NEGATIVE_INFINITY]}],d=e.runWebGPUProgram(c,[l],"int32",p);return u.forEach(m=>e.disposeData(m.dataId)),d}var bE={kernelName:tl,backendName:"webgpu",kernelFunc:fj};function hj(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{axis:i}=o,s=S.parseAxisParam(i,n.shape),a=P.getAxesPermutation(s,n.shape.length),l=n,u=[];a!=null&&(l=xr({inputs:{x:n},backend:e,attrs:{perm:a}}),u.push(l),s=P.getInnerMostAxes(s.length,l.shape.length)),P.assertAxesAreInnerMostDims("argMin",[s[0]],l.shape.length);let c=new Nc(l.shape,s[0],"min"),p=[{type:"float32",data:[Number.POSITIVE_INFINITY]}],d=e.runWebGPUProgram(c,[l],"int32",p);return u.forEach(m=>e.disposeData(m.dataId)),d}var SE={kernelName:rl,backendName:"webgpu",kernelFunc:hj};var gj=ke({opType:ae.ASIN}),wE={kernelName:ol,backendName:"webgpu",kernelFunc:gj};var xj=ke({opType:ae.ASINH}),_E={kernelName:nl,backendName:"webgpu",kernelFunc:xj};var yj=ke({opType:ae.ATAN}),CE={kernelName:il,backendName:"webgpu",kernelFunc:yj};var vj=Ze({opType:Ce.ATAN2}),kE={kernelName:al,backendName:"webgpu",kernelFunc:vj};var bj=ke({opType:ae.ATANH}),IE={kernelName:sl,backendName:"webgpu",kernelFunc:bj};var Fh=class{constructor(t){this.variableNames=["x"],this.uniforms="strides : vec2<i32>,",this.workgroupSize=[256,1,1],this.size=!0,this.outputShape=t.outShape,this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="poolWithFilterSizeEqualsOne"}getUserCode(){return`
      ${J("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let batch = coords[0];
          let d = coords[3];

          let xRCCorner = coords.yz * uniforms.strides;
          let xRCorner = xRCCorner.x;
          let xCCorner = xRCCorner.y;

          let value = getX(batch, xRCorner, xCCorner, d);
          setOutputAtIndex(index, value);
        }
      }
    `}};var In=class{constructor(t,e,o=!1,n=!1,i=!1){if(this.variableNames=["x"],this.uniforms="strides : vec2<i32>, pads : vec2<i32>, dilations : vec2<i32>, convDims : vec2<i32>, filterDims : vec2<i32>,",this.workgroupSize=[128,1,1],this.size=!0,e==="avg"&&o)throw new Error("Cannot compute positions for average pool.");this.outputShape=t.outShape,this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize),this.poolType=e,this.computePositions=o,this.flattenPositions=n,this.includeBatchIndex=i,this.shaderKey=`pool2D_${e}_${o}_${n}_${i}`}getUserCode(){let t;this.poolType==="avg"?t="resultValue = resultValue + value; count = count + 1.0;":this.computePositions?t=`let currMaxValue = mix(value, maxValue, maxValueFound);
      if (value >= currMaxValue) {
        maxValue = value;
        maxValueFound = 1.0;
        maxPosition = ${this.flattenPositions?this.includeBatchIndex?"((batch * uniforms.xShape[1] + xR) * uniforms.xShape[2] + xC) * uniforms.xShape[3] + d":"(xR * uniforms.xShape[2] + xC) * uniforms.xShape[3] + d":"wR * uniforms.filterDims.y + wC"};
      }`:t="resultValue = max(value, resultValue);";let e="resultValue";return this.poolType==="avg"&&(e="resultValue / max(count, 1.0)"),`
      ${J("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
          let batch = coords[0];
          let d = coords[3];
          let xRCCorner = vec2<i32>(coords.yz) * uniforms.strides - uniforms.pads;
          let xRCorner = xRCCorner.x;
          let xCCorner = xRCCorner.y;

          ${this.computePositions?`var maxValue = 0.0;
            var maxValueFound = 0.0;
            var maxPosition = 0;`:`var resultValue = ${this.poolType==="avg"?"0.0":"-1.0 / pow(10.0, -20.0)"};`}

          var count = 0.0;
          for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + uniforms.dilations.x) {
            let xR = xRCorner + wR;

            if (xR < 0 || xR >= uniforms.convDims.x) {
              continue;
            }

            for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + uniforms.dilations.y) {
              let xC = xCCorner + wC;
              if (xC < 0 || xC >= uniforms.convDims.y) {
                continue;
              }

              let value = getX(batch, xR, xC, d);
              ${t}
            }
          }

          ${this.computePositions?"setOutputAtIndexI32(index, maxPosition);":`setOutputAtIndex(index, ${e});`}
        }
      }
    `}},is=class{constructor(t,e,o=!1,n=!1,i=!1){if(this.variableNames=["x"],this.uniforms="strides : vec3<i32>, pads : vec3<i32>, convDims : vec3<i32>, filterDims : vec3<i32>,",this.workgroupSize=[128,1,1],this.size=!0,e==="avg"&&o)throw new Error("Cannot compute positions for average pool.");this.outputShape=t.outShape,this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize),this.poolType=e,this.computePositions=o,this.flattenPositions=n,this.includeBatchIndex=i,this.shaderKey=`pool3D_${e}_${o}_${n}_${i}`}getUserCode(){let t;this.poolType==="avg"?t="resultValue += value; count += 1.0;":this.computePositions?t=`let currMaxValue = mix(value, maxValue, maxValueFound);
      if (value >= currMaxValue) {
        maxValue = value;
        maxValueFound = 1.0;
        maxPosition = ${this.flattenPositions?this.includeBatchIndex?"(((batch * uniforms.xShape.y + xD) * uniforms.xShape.z + xR) * uniforms.xShape.w + xC) * uniforms.xShape.u + ch":"((xD * uniforms.xShape.z + xR) * uniforms.xShape.w + xC) * uniforms.xShape.u + ch":"wD * uniforms.filterDims.y * uniforms.filterDims.y + wR * uniforms.filterDims.z + wC"};
      }`:t="resultValue = max(value, resultValue);";let e="resultValue";return this.poolType==="avg"&&(e="resultValue / max(count, 1.0)"),`
      ${J("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let batch = coords.x;
          let ch = coords.u;

          let xCorner = vec3<i32>(coords.y, coords.z, coords.w) * uniforms.strides - uniforms.pads;
          let xDCorner = xCorner.x;
          let xRCorner = xCorner.y;
          let xCCorner = xCorner.z;

          ${this.computePositions?`var maxValue = 0.0;
            var maxValueFound = 0.0;
            var maxPosition = 0;`:`var resultValue = ${this.poolType==="avg"?"0.0":"-1.0 / pow(10.0, -20.0)"};`}

          var count = 0.0;
          for (var wD = 0; wD < uniforms.filterDims.x; wD++) {
            let xD = xDCorner + wD;
            if (xD < 0 || xD >= uniforms.convDims.x) {
              continue;
            }

            for (var wR = 0; wR < uniforms.filterDims.y; wR++) {
              let xR = xRCorner + wR;
              if (xR < 0 || xR >= uniforms.convDims.y) {
                continue;
              }

              for (var wC = 0; wC < uniforms.filterDims.z; wC++) {
                let xC = xCCorner + wC;
                if (xC < 0 || xC >= uniforms.convDims.z) {
                  continue;
                }

                let value = getX(batch, xD, xR, xC, ch);
                ${t}
              }
            }
          }

          ${this.computePositions?"setOutputAtIndexI32(index, maxPosition);":`setOutputAtIndex(index, ${e});`}
        }
      }
    `}};function hb(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{reductionIndices:i,keepDims:s}=o;return po(n,i,s,"max",e)}var TE={kernelName:nu,backendName:"webgpu",kernelFunc:hb};function gb(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{keepDims:i,axis:s}=o;return po(n,s,i,"mean",e)}var EE={kernelName:lu,backendName:"webgpu",kernelFunc:gb};function Oh(r,t,e,o){if(t.filterWidth===1&&t.filterHeight===1&&S.arraysEqual(t.inShape,t.outShape))return $t({inputs:{x:r},backend:o});if(t.filterWidth===t.inWidth&&t.filterHeight===t.inHeight&&t.batchSize===1&&t.padInfo.type==="VALID"){let s=r.shape.length,a=he({inputs:{x:r},backend:o,attrs:{shape:[r.shape[s-3]*r.shape[s-2],r.shape[s-1]]}}),l;e==="avg"?l=gb({inputs:{x:a},backend:o,attrs:{axis:0,keepDims:!1}}):(S.assert(e==="max",()=>`Invalid pool type ${e}`),l=hb({inputs:{x:a},backend:o,attrs:{reductionIndices:0,keepDims:!1}}));let u=he({inputs:{x:l},backend:o,attrs:{shape:t.outShape}});return o.disposeData(a.dataId),o.disposeData(l.dataId),u}let n,i=[{type:"int32",data:[t.strideHeight,t.strideWidth]}];return t.filterHeight===1&&t.filterWidth===1?n=new Fh(t):(e==="avg"?n=new In(t,"avg"):(S.assert(e==="max",()=>`Invalid pool type ${e}`),n=new In(t,"max")),i.push({type:"int32",data:[t.padInfo.top,t.padInfo.left]},{type:"int32",data:[t.dilationHeight,t.dilationWidth]},{type:"int32",data:[t.inHeight,t.inWidth]},{type:"int32",data:[t.effectiveFilterHeight,t.effectiveFilterWidth]})),o.runWebGPUProgram(n,[r],r.dtype,i)}function Sj(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{filterSize:i,strides:s,pad:a,dimRoundingMode:l}=o,c=P.computePool2DInfo(n.shape,i,s,1,a,l);return Oh(n,c,"avg",e)}var NE={kernelName:ll,backendName:"webgpu",kernelFunc:Sj};function wj(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{filterSize:i,strides:s,pad:a,dataFormat:l,dimRoundingMode:u}=o,c=[1,1,1],p=P.computePool3DInfo(n.shape,i,s,c,a,u,l),d=new is(p,"avg"),m=[{type:"int32",data:[p.strideDepth,p.strideHeight,p.strideWidth]},{type:"int32",data:[p.padInfo.front,p.padInfo.top,p.padInfo.left]},{type:"int32",data:[p.inDepth,p.inHeight,p.inWidth]},{type:"int32",data:[p.effectiveFilterDepth,p.effectiveFilterHeight,p.effectiveFilterWidth]}];return e.runWebGPUProgram(d,[n],n.dtype,m)}var RE={kernelName:ul,backendName:"webgpu",kernelFunc:wj};var Lh=class{constructor(t){this.variableNames=["dy"],this.uniforms=`strides : vec2<i32>, pads : vec2<i32>, dilations : vec2<i32>, filterDims : vec2<i32>,
       outHeight : i32, outWidth : i32, avgMultiplier : f32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t.inShape,this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="avgPool2DBackprop"}getUserCode(){return`
      ${J("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords[0];
        let d = coords[3];

        let dyRCCorner = vec2<i32>(coords.yz) - uniforms.pads;
        let dyRCorner = dyRCCorner.x;
        let dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var wR = 0; wR < uniforms.filterDims[0]; wR = wR + uniforms.dilations[0]) {
          let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[0]);

          if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
            continue;
          }
          let idyR = i32(dyR);

          for (var wC = 0; wC < uniforms.filterDims[1]; wC = wC + uniforms.dilations[1]) {
            let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[1]);

            if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
              continue;
            }
            let idyC = i32(dyC);

            let dyValue = getDy(batch, idyR, idyC, d);

            dotProd = dotProd + dyValue * uniforms.avgMultiplier;
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
    `}},Mh=class{constructor(t){this.variableNames=["dy"],this.uniforms=`strides : vec3<i32>, pads : vec3<i32>, filterDims : vec3<i32>,
       outDepth : i32, outHeight : i32, outWidth : i32, avgMultiplier : f32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t.inShape,this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="avgPool3DBackprop"}getUserCode(){return`
      ${J("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords.x;
        let ch = coords.u;

        let dyCorner = vec3<i32>(coords.y, coords.z, coords.w) - uniforms.pads;
        let dyDCorner = dyCorner.x;
        let dyRCorner = dyCorner.y;
        let dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var wD = 0; wD < uniforms.filterDims[0]; wD++) {
          let dyD = f32(dyDCorner + wD) / f32(uniforms.strides[0]);

          if (dyD < 0.0 || dyD >= f32(uniforms.outDepth) || fract(dyD) > 0.0) {
            continue;
          }
          let idyD = i32(dyD);

          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {
            let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[1]);

            if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
              continue;
            }
            let idyR = i32(dyR);

            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {
              let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[2]);

              if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
                continue;
              }
              let idyC = i32(dyC);

              let dyValue = getDy(batch, idyD, idyR, idyC, ch);
              dotProd += dyValue * uniforms.avgMultiplier;
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
    `}};function _j(r){let{inputs:t,backend:e,attrs:o}=r,{dy:n,input:i}=t,s=i,{filterSize:a,strides:l,pad:u,dimRoundingMode:c}=o,p=P.computePool3DInfo(s.shape,a,l,1,u,c),d=new Mh(p),m=1/(p.filterDepth*p.filterHeight*p.filterWidth),f=[{type:"int32",data:[p.strideDepth,p.strideHeight,p.strideWidth]},{type:"int32",data:[p.effectiveFilterDepth-1-p.padInfo.front,p.effectiveFilterHeight-1-p.padInfo.top,p.effectiveFilterWidth-1-p.padInfo.left]},{type:"int32",data:[p.effectiveFilterDepth,p.effectiveFilterHeight,p.effectiveFilterWidth]},{type:"int32",data:[p.outDepth]},{type:"int32",data:[p.outHeight]},{type:"int32",data:[p.outWidth]},{type:"float32",data:[m]}];return e.runWebGPUProgram(d,[n],s.dtype,f)}var PE={kernelName:dm,backendName:"webgpu",kernelFunc:_j};function Cj(r){let{inputs:t,backend:e,attrs:o}=r,{dy:n,input:i}=t,s=i;Hp([n,i],"avgPoolGrad");let{filterSize:a,strides:l,pad:u}=o,c=P.computePool2DInfo(s.shape,a,l,1,u),p=new Lh(c),d=1/(c.filterHeight*c.filterWidth),m=[{type:"int32",data:[c.strideHeight,c.strideWidth]},{type:"int32",data:[c.effectiveFilterHeight-1-c.padInfo.top,c.effectiveFilterWidth-1-c.padInfo.left]},{type:"int32",data:[c.dilationHeight,c.dilationWidth]},{type:"int32",data:[c.effectiveFilterHeight,c.effectiveFilterWidth]},{type:"int32",data:[c.outHeight]},{type:"int32",data:[c.outWidth]},{type:"float32",data:[d]}];return e.runWebGPUProgram(p,[n],s.dtype,m)}var $E={kernelName:pm,backendName:"webgpu",kernelFunc:Cj};function kj(r){let{inputs:t,backend:e,attrs:o}=r,{a:n,b:i}=t,{transposeA:s,transposeB:a}=o;return sa({a:n,b:i,transposeA:s,transposeB:a,backend:e})}var AE={kernelName:cl,backendName:"webgpu",kernelFunc:kj};var Bh=class{constructor(t,e){this.variableNames=["source"],this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.rank=e.length,this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.start=t,this.uniforms=`start : ${mt(t.length)}, `,this.shaderKey="slice"}getUserCode(){let t=mt(this.rank),e=Ij(this.rank),o;return this.start.length===1?o=this.outputShape.map((i,s)=>"sourceLoc = uniforms.start + coords;"):o=this.outputShape.map((i,s)=>`sourceLoc.${xb[s]} = uniforms.start.${Lo(s)} + coords.${xb[s]};`),`
      ${J("index")} {
        if (index < uniforms.size) {
          var sourceLoc : ${t};
          let coords = getCoordsFromIndex(index);
          ${o.join(`
`)}
          setOutputAtIndex(index, getSource(${e}));
        }
      }
    `}},xb=["x","y","z","w","u","v"];function Ij(r){if(r===1)return"sourceLoc";if(r<=6)return xb.slice(0,r).map(t=>`sourceLoc.${t}`).join(",");throw Error(`Slicing for rank ${r} is not yet supported`)}function Yo(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{begin:i,size:s}=o,[a,l]=Kt.parseSliceParams(n,i,s);if(Kt.assertParamsValid(n,a,l),e.shouldExecuteOnCPU([n])||n.dtype==="string"){let p=e.tensorMap.get(n.dataId),d=iE(p.values,a,l,n.shape,n.dtype);return e.makeTensorInfo(l,n.dtype,d)}if(S.sizeFromShape(l)===0)return e.makeTensorInfo(l,n.dtype,[]);let u=new Bh(a,l),c=[{type:"int32",data:a}];return e.runWebGPUProgram(u,[n],n.dtype,c)}var DE={kernelName:Es,backendName:"webgpu",kernelFunc:Yo};var Tj=r=>{let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{blockShape:i,crops:s}=o;S.assert(n.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGPU backend not implemented yet");let a=i.reduce((b,I)=>b*I),l=P.getReshaped(n.shape,i,a),u=P.getPermuted(l.length,i.length),c=P.getReshapedPermuted(n.shape,i,a),p=P.getSliceBeginCoords(s,i.length),d=P.getSliceSize(c,s,i.length),m=[],f=he({inputs:{x:n},backend:e,attrs:{shape:l}}),g=xr({inputs:{x:f},backend:e,attrs:{perm:u}}),x=he({inputs:{x:g},backend:e,attrs:{shape:c}}),y=Yo({inputs:{x},backend:e,attrs:{begin:p,size:d}});return m.push(f),m.push(g),m.push(x),m.forEach(b=>e.disposeData(b.dataId)),y},FE={kernelName:pl,backendName:"webgpu",kernelFunc:Tj};var Ej=`
  fn bincount_write(index: i32, value: f32) {
    ${lo("&result[index]","value","float32")}
  }
`,Nj=`
  fn bincount_write(index: i32, value: f32) {
    atomicStore(&result[index], bitcast<i32>(value));
  }
`,Rc=class{constructor(t,e,o=!1){this.outputShape=[],this.variableNames=["x"],this.uniforms="binCountSize : i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.hasWeights=!0,this.binaryOutput=!1,this.outputShape=t,this.rank=t.length,this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize),this.binaryOutput=o,o&&(this.atomic=!1),this.hasWeights=e,this.hasWeights&&this.variableNames.push("w"),this.shaderKey=`bincount_${this.hasWeights}_${this.binaryOutput}_${this.rank}`}getUserCode(){return`
    ${this.binaryOutput?Nj:Ej}
  ${J("index")} {
    ${this.rank===1?`if (index < uniforms.xShape) {
      let indexVal = i32(getX(index));
      if (indexVal < uniforms.binCountSize) {
        let value = ${this.binaryOutput?1:this.hasWeights?"getW(index)":"1."};
        bincount_write(indexVal, value);
      }
    }`:`let coord = getCoordsFromIndex(index);
    if (coordsInBounds2D(coord, uniforms.xShape)) {
      let indexVal = i32(getX(coord[0], coord[1]));
      if (indexVal < uniforms.binCountSize) {
        let value = ${this.binaryOutput?1:this.hasWeights?"getW(coord[0], coord[1])":"1."};
        bincount_write(coord.x * uniforms.binCountSize + indexVal, value);
      }
    }`}
  }
  `}};function Rj(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,weights:i}=t,{size:s}=o,a=S.sizeFromShape(n.shape),u=S.sizeFromShape(i.shape)>0,c=[s],p=i.dtype,d=_t({backend:e,attrs:{shape:c,value:0,dtype:p}}),m=new Rc([a],u),f=[{type:"int32",data:[s]}],g=u?[n,i]:[n];return e.runWebGPUProgram(m,g,p,f,d)}var OE={kernelName:dl,backendName:"webgpu",kernelFunc:Rj};var Vh=class{constructor(t){this.outputShape=[],this.variableNames=["s0","s1"],this.uniforms="s0Size : i32, s1Size : i32, ",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[t],this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="broadcastArgs"}getUserCode(){return`
  ${J("index")} {
    if (index < uniforms.size) {
      var s0 = 1.0;
      var s1 = 1.0;
      let indexS0 = index - uniforms.size + uniforms.s0Size;
      let indexS1 = index - uniforms.size + uniforms.s1Size;
      if (indexS0 >= 0) {
        s0 = getS0(indexS0);
      }
      if (indexS1 >= 0) {
        s1 = getS1(indexS1);
      }

      if (s0 == 1.0) {
        setOutputAtIndex(index, s1);
      } else if (s1 == 1.0) {
        setOutputAtIndex(index, s0);
      } else if (s0 != s1) {
        setOutputAtIndex(index, uniforms.NAN);
      } else {
        setOutputAtIndex(index, s0);
      }
    }
  }
  `}};function Pj(r){let{inputs:t,backend:e}=r,{s0:o,s1:n}=t;if(e.shouldExecuteOnCPU([o,n])){let c=e.tensorMap.get(o.dataId),p=e.tensorMap.get(n.dataId),d=c.values,m=p.values,f=P.assertAndGetBroadcastShape(Array.from(d),Array.from(m));return e.makeTensorInfo([f.length],"int32",Int32Array.from(f))}let i=S.sizeFromShape(o.shape),s=S.sizeFromShape(n.shape),a=Math.max(i,s),l=new Vh(a),u=[{type:"int32",data:[i]},{type:"int32",data:[s]}];return e.runWebGPUProgram(l,[o,n],"int32",u)}var LE={kernelName:fl,backendName:"webgpu",kernelFunc:Pj};var yb=Ze({opType:Ce.NOT_EQUAL,dtype:"bool",cpuKernelImpl:JT}),ME={kernelName:Pi,backendName:"webgpu",kernelFunc:yb};function ei(r){let{inputs:t,backend:e}=r,{input:o}=t,n=e.tensorMap.get(o.dataId);return $t({inputs:{x:n.complexTensorInfos.real},backend:e})}var BE={kernelName:Ts,backendName:"webgpu",kernelFunc:ei};function VE(r,t){let e=new co(r.shape,ae.TO_INT),o=t.runWebGPUProgram(e,[r],"int32");return{dataId:o.dataId,shape:o.shape,dtype:o.dtype}}function vb(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{dtype:i}=o;if(i==="complex64"){if(n.dtype==="complex64")return $t({inputs:{x:n},backend:e});let s=_r(n.shape),a=vb({inputs:{x:n},backend:e,attrs:{dtype:"float32"}}),l=ko({inputs:{real:a,imag:s},backend:e});return s.dispose(),e.disposeData(a.dataId),l}if(n.dtype==="complex64"){let s=ei({inputs:{input:n},backend:e}),a=vb({inputs:{x:s},backend:e,attrs:{dtype:i}});return e.disposeData(s.dataId),a}if(!S.hasEncodingLoss(n.dtype,i)){let s=$t({inputs:{x:n},backend:e});return{dataId:s.dataId,shape:s.shape,dtype:i}}if(e.shouldExecuteOnCPU([n])){let s=e.tensorMap.get(n.dataId).values,[a,l,u]=AT(s,n.shape,n.dtype,i);return e.makeTensorInfo(a,l,u)}if(i==="int32")return VE(n,e);if(i==="bool"){let s=e.makeTensorInfo([],"bool",S.getTypedArrayFromDType("bool",1)),l=yb({inputs:{a:n,b:s},backend:e});return e.disposeData(s.dataId),l}throw new Error(`Error in Cast: failed to cast ${n.dtype} to ${i}`)}var WE={kernelName:Ln,backendName:"webgpu",kernelFunc:vb};var $j=ke({opType:ae.CEIL,cpuKernelImpl:DT}),UE={kernelName:xi,backendName:"webgpu",kernelFunc:$j};var Wh=class{constructor(t){this.variableNames=["A"],this.uniforms="minVal : f32, maxVal : f32,",this.workPerThread=4,this.workgroupSize=[64,1,1],this.outputComponent=4,this.size=!0,this.outputShape=t,this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.shaderKey="clipVec4"}getUserCode(){return`
      ${J("index")} {
        if(index < uniforms.size) {
          let value = getAByOutputIndex(index);
          var clampedValue = clamp(
              value, vec4<f32>(uniforms.minVal), vec4<f32>(uniforms.maxVal));
          clampedValue = select(clampedValue, value, isnanVec4(value));
          setOutputAtIndex(index, clampedValue);
        }
      }
    `}};var Uh=class{constructor(t){this.variableNames=["A"],this.uniforms="minVal : f32, maxVal : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="clip"}getUserCode(){return`
      ${J("index")} {
        if(index < uniforms.size) {
          let value = getAByOutputIndex(index);
          if (isnan(value)) {
            setOutputAtIndex(index, value);
            return;
          }
          setOutputAtIndex(index, clamp(value, uniforms.minVal, uniforms.maxVal));
        }
      }
    `}};function Aj(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{clipValueMin:i,clipValueMax:s}=o,a,l=[{type:"float32",data:[i]},{type:"float32",data:[s]}];return S.sizeFromShape(n.shape)%4===0?a=new Wh(n.shape):a=new Uh(n.shape),e.runWebGPUProgram(a,[n],n.dtype,l)}var zE={kernelName:hl,backendName:"webgpu",kernelFunc:Aj};var zh=class{constructor(t){this.outputShape=[],this.variableNames=["real","imag"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="complexAbs"}getUserCode(){return`
    ${J("index")} {
      if (index < uniforms.size) {
        let re = abs(getRealByOutputIndex(index));
        let im = abs(getImagByOutputIndex(index));
        let mx = max(re, im);

        // The length function in wgsl may be not underflow-safe on some GPUs.
        // So the safe solution is to ensure underflow-safety in all cases.
        setOutputAtIndex(index, select(mx * length(vec2<f32>(1, min(re, im)/mx)), 0.0, mx == 0.0));
      }
    }
  `}};function GE(r,t){return{dataId:t.dataId,dtype:t.dtype,shape:r.shape}}function Dj(r){let{inputs:t,backend:e}=r,{x:o}=t,n=e.tensorMap.get(o.dataId),i=new zh(o.shape),s=[GE(o,n.complexTensorInfos.real),GE(o,n.complexTensorInfos.imag)];return e.runWebGPUProgram(i,s,s[0].dtype)}var HE={kernelName:gl,backendName:"webgpu",kernelFunc:Dj};var Gh=class{constructor(t){this.uniforms="",this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=P.computeOutShape(t,1),this.variableNames=t.map((e,o)=>`T${o}`),this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.offsetLength=t.length-1;for(let e=0;e<this.offsetLength;e++)this.uniforms+=`offset${e} : i32,`;this.shaderKey="concat"}getUserCode(){let t=[];if(this.offsetLength>0){t.push("if (yC < uniforms.offset0){ setOutputAtCoords(coords.x, coords.y, getT0(yR, yC)); }");for(let i=1;i<this.offsetLength;i++)t.push(`else if (yC < uniforms.offset${[i]}){ setOutputAtCoords(coords.x, coords.y, getT${i}(yR, yC - uniforms.offset${i-1})); }`);let o=this.offsetLength,n=this.offsetLength-1;t.push(`else { setOutputAtCoords(coords.x, coords.y, getT${o}(yR, yC - uniforms.offset${n})); }`)}else t.push("setOutputAtCoords(coords.x, coords.y, getT0(yR, yC));");return`
      ${J("index")} {
        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if(flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndex);
            let yR = coords.x;
            let yC = coords.y;

            ${t.join(`
        `)}
          }
        }
      }
    `}};function aa(r){let{inputs:t,backend:e}=r,{input:o}=t,n=e.tensorMap.get(o.dataId);return $t({inputs:{x:n.complexTensorInfos.imag},backend:e})}var KE={kernelName:ql,backendName:"webgpu",kernelFunc:aa};function Pc(r,t,e){let o=r[0].dtype;if(o==="complex64"){let f=r.map(I=>ei({inputs:{input:I},backend:e})),g=r.map(I=>aa({inputs:{input:I},backend:e})),x=Pc(f,t,e),y=Pc(g,t,e),b=ko({inputs:{real:x,imag:y},backend:e});return f.forEach(I=>e.disposeData(I.dataId)),g.forEach(I=>e.disposeData(I.dataId)),e.disposeData(x.dataId),e.disposeData(y.dataId),b}let n=e.shouldExecuteOnCPU(r);if(o==="string"&&(n=!0),n){let f=r.map(M=>{let W=[-1,S.sizeFromShape(M.shape.slice(t))];return he({inputs:{x:M},backend:e,attrs:{shape:W}})}),g=f.map(M=>({vals:e.readSync(M.dataId),shape:M.shape})),x=P.computeOutShape(f.map(M=>M.shape),1),y=f[0].shape[0]===1,b=FT(g,x,o,y),I=P.computeOutShape(r.map(M=>M.shape),t),N=e.makeTensorInfo(I,o,b);return f.forEach(M=>e.disposeData(M.dataId)),N}let i=e.device.limits.maxStorageBuffersPerShaderStage-1;if(r.length>i){let f=[];for(let x=0;x<r.length;x+=i){let y=r.slice(x,x+i);f.push(Pc(y,t,e))}let g=Pc(f,t,e);for(let x of f)e.disposeData(x.dataId);return g}let{tensors2D:s,outShape:a}=Fj(r,t,e),l=s.map(f=>f.shape),u=new Gh(l),c=[],p=new Array(l.length-1);if(p.length>0){p[0]=l[0][1],c.push({type:"int32",data:[p[0]]});for(let f=1;f<p.length;f++)p[f]=p[f-1]+l[f][1],c.push({type:"int32",data:[p[f]]})}let d=e.runWebGPUProgram(u,s,s[0].dtype,c);s.forEach(f=>e.disposeData(f.dataId));let m=he({inputs:{x:d},backend:e,attrs:{shape:a}});return e.disposeData(d.dataId),m}function Fj(r,t,e){let o=P.computeOutShape(r.map(i=>i.shape),t);return{tensors2D:r.map(i=>he({inputs:{x:i},backend:e,attrs:{shape:[S.sizeFromShape(i.shape.slice(0,t)),S.sizeFromShape(i.shape.slice(t))]}})),outShape:o}}function bb(r){let{inputs:t,backend:e,attrs:o}=r,{axis:n}=o,i=S.parseAxisParam(n,t[0].shape)[0],s=t.map(u=>u.shape);P.assertParamsConsistent(s,i);let a=P.computeOutShape(t.map(u=>u.shape),i);if(S.sizeFromShape(a)===0)return e.makeTensorInfo(a,t[0].dtype,[]);let l=t.filter(u=>S.sizeFromShape(u.shape)>0);return l.length===1?$t({inputs:{x:l[0]},backend:e}):Pc(l,i,e)}var qE={kernelName:xl,backendName:"webgpu",kernelFunc:bb};function Oj(r,t,e,o,n=!1,i=null,s=!1,a=4,l=4,u=4){let c=K=>{switch(K){case 1:return"resData = f32(x[xIndex]);";case 3:return"resData = vec3<f32>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);";case 4:return"resData = vec4<f32>(x[xIndex / 4]);";default:throw new Error(`innerElementSize ${K} is not supported.`)}},p=K=>{switch(K){case 1:return"return f32(W[row * uniforms.wShape[3] + col]);";case 4:return"return vec4<f32>(W[(row * uniforms.wShape[3] + col) / 4]);";default:throw new Error(`innerElementSize ${K} is not supported.`)}},d=r?`
      let coord = vec4<i32>(batch, xRow, xCol, xCh);
      `:`
      let coord = vec4<i32>(batch, xCh, xRow, xCol);
      `,m=r?`
      let coords = vec4<i32>(
        batch,
        row / outWidth,
        row % outWidth,
        col);
      `:`
      let coords = vec4<i32>(
        batch,
        row,
        col / outWidth,
        col % outWidth);
      `,f=r?"uniforms.xShape[1]":"uniforms.xShape[2]",g=r?"uniforms.xShape[2]":"uniforms.xShape[3]",x=r?"row":"col",y=r?"col":"row",b=`
      let inChannels = uniforms.wShape[2];
      let outWidth = ${r?"uniforms.outShape[2]":"uniforms.outShape[3]"};
      let outRow = ${x} / outWidth;
      let outCol = ${x} % outWidth;

      let WRow = ${y} / (uniforms.filterDims[1] * inChannels);
      let WCol = ${y} / inChannels % uniforms.filterDims[1];
      let xRow = outRow * uniforms.strides[0] + uniforms.dilations[0] * WRow - uniforms.pads[0];
      let xCol = outCol * uniforms.strides[1] + uniforms.dilations[1] * WCol - uniforms.pads[1];
      let xCh = ${y} % inChannels;
      var resData = ${We(a)}(0.0);
      // The bounds checking is always needed since we use it to pad zero for
      // the 'same' padding type.
      if (xRow >= 0 && xRow < ${f} && xCol >= 0 && xCol < ${g}) {
        ${d}
        let xIndex = getIndexFromCoords4D(coord, uniforms.xShape);
        ${c(a)}
      }
      return resData;`,I=r?t&&o?`
      ${b}`:`
      if (row < uniforms.dimAOuter && col < uniforms.dimInner) {
        ${b}
      }
      return ${We(a)}(0.0);`:o&&e?`
      ${b}`:`
      if (row < uniforms.dimInner && col < uniforms.dimBOuter) {
        ${b}
      }
      return ${We(a)}(0.0);`,N=`${p(l)}`,M=We(u),B=r?We(a):We(l),W=r?We(l):We(a);return`
      ${sr(i,s,u===4,4)}
      fn mm_readA(batch: i32, row : i32, col : i32) -> ${B} {
        ${r?I:N}
      }

      fn mm_readB(batch: i32, row : i32, col : i32) -> ${W} {
        ${r?N:I}
      }

      fn mm_write(batch: i32, row : i32, col : i32, valueIn : ${M}) {
        if (row < uniforms.dimAOuter && col < uniforms.dimBOuter)
        {
        var value = valueIn;
        let outWidth = ${r?"uniforms.outShape[2]":"uniforms.outShape[3]"};
        ${m}
        ${uo(n,i)}
        setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
        }
      }`}var Hh=class{constructor(t,e,o,n,i=!1,s=null,a=!1,l=!1){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, strides : vec2<i32>, dilations : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.outputShape=t.outShape,this.isChannelsLast=t.dataFormat==="channelsLast",this.isVec4=((t.inChannels%4===0||t.inChannels%3===0)&&this.isChannelsLast||t.outWidth%4===0&&!this.isChannelsLast)&&t.outChannels%4===0,this.dispatchLayout=this.isChannelsLast?{x:[3],y:[1,2],z:[0]}:{x:[2,3],y:[1],z:[0]},this.workgroupSize=Up(this.dispatchLayout,this.outputShape,this.isVec4),this.elementsPerThread=zp(this.dispatchLayout,this.outputShape,this.isVec4),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize,this.elementsPerThread),this.isVec4?(this.outputComponent=4,this.isChannelsLast&&t.inChannels%4!==0?(this.innerElementSize=3,this.variableComponents=[1,4]):(this.innerElementSize=4,this.variableComponents=[4,4]),i&&(this.variableNames.push("bias"),this.variableComponents.push(4)),a&&(this.variableNames.push("preluActivationWeights"),this.variableComponents.push(4))):(this.innerElementSize=this.elementsPerThread[0],i&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights")),this.sequentialAccessByThreads=l,this.addBias=i,this.activation=s,this.hasPreluActivationWeights=a,this.tileAOuter=this.workgroupSize[1]*this.elementsPerThread[1],this.tileBOuter=this.workgroupSize[0]*this.elementsPerThread[0],this.tileInner=Math.max(this.workgroupSize[0]*this.innerElementSize,this.workgroupSize[1]),this.fitAOuter=e%this.tileAOuter===0,this.fitBOuter=o%this.tileBOuter===0,this.fitInner=n%this.tileInner===0,this.shaderKey=`conv2DMM_${this.elementsPerThread}_${this.activation}}_${this.fitAOuter}_${this.fitBOuter}_${this.fitInner}_${this.isVec4}_${this.innerElementSize}_${this.isChannelsLast}_${this.sequentialAccessByThreads}`}getUserCode(){let t=this.isVec4?na(this.elementsPerThread,this.workgroupSize,!this.isChannelsLast,this.tileInner):ia(this.elementsPerThread,this.workgroupSize,!this.isChannelsLast,this.tileInner,!1,null,this.sequentialAccessByThreads),e=this.isVec4?[this.innerElementSize,4,4]:[1,1,1];return`
    ${Oj(this.isChannelsLast,this.fitAOuter,this.fitBOuter,this.fitInner,this.addBias,this.activation,this.hasPreluActivationWeights,e[0],e[1],e[2])}
    ${t}
  `}};var Kh=class{constructor(t,e=!1,o=null,n=!1){this.variableNames=["x","W"],this.uniforms="filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>,",this.workgroupSize=[4,4,8],this.outputShape=t.outShape,this.isChannelsLast=t.dataFormat==="channelsLast",this.dispatchLayout=this.isChannelsLast?{x:[2],y:[1],z:[0,3]}:{x:[3],y:[2],z:[0,1]},this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize),this.addBias=e,this.activation=o,this.hasPreluActivationWeights=n,e&&this.variableNames.push("bias"),n&&this.variableNames.push("preluActivationWeights"),this.shaderKey=`conv2dnaive_${this.activation}_${this.isChannelsLast}`}getUserCode(){return`
       ${sr(this.activation,this.hasPreluActivationWeights,!1,4)}
       fn readInp(batch : i32, row : i32, col : i32, chan : i32) -> f32{
         let coords = vec4<i32>(batch, row, col, chan);
         if (coordsInBounds4D(coords, uniforms.xShape)) {
           return  getX(batch, row, col, chan);
         } else {
          return 0.0;
         }
       }
       fn readFilt(row : i32, col : i32, xChannel : i32, outChannel : i32) -> f32{
         let coords = vec4<i32>(row, col, xChannel, outChannel);
         if(coordsInBounds4D(coords, uniforms.wShape)) {
           return getW(row, col, xChannel, outChannel);
          } else {
            return 0.0;
          }
       }
       fn writeResult(batch : i32, row : i32, col : i32, chan : i32, valueIn : f32) {
         let coords = ${this.isChannelsLast?"vec4<i32>(batch, row, col, chan);":"vec4<i32>(batch, chan, row, col);"}
         if (coordsInBounds4D(coords, uniforms.outShape)) {
           var value = valueIn;
           ${uo(this.addBias,this.activation)}
           setOutputAtCoords(coords.x, coords.y, coords.z, coords.w, value);
         }
       }
       ${J("index")} {
         let coords = getOutputCoords();
         let batch = coords[0];
         let outChannel = ${this.isChannelsLast?"coords[3];":"coords[1];"}
         let outRow = ${this.isChannelsLast?"coords[1];":"coords[2];"}
         let outCol = ${this.isChannelsLast?"coords[2];":"coords[3];"}
         var acc : f32 = 0.0;
         for (var row = 0; row < uniforms.filterDims[0]; row = row + 1) {
           for (var col = 0; col < uniforms.filterDims[1]; col = col + 1) {
             let xRow = outRow * uniforms.strides[0] + uniforms.dilations[0] * row - uniforms.pads[0];
             let xCol = outCol * uniforms.strides[1] + uniforms.dilations[1] * col - uniforms.pads[1];
             for (var xChannel = 0; xChannel < ${this.isChannelsLast?"uniforms.xShape[3];":"uniforms.xShape[1];"} xChannel = xChannel + 1) {
               ${this.isChannelsLast?"let v = readInp(batch, xRow, xCol, xChannel);":"let v = readInp(batch, xChannel, xRow, xCol);"}
               let f = readFilt(row, col, xChannel, outChannel);
               acc = acc + v * f;
             }
           }
         }
         writeResult(batch, outRow, outCol, outChannel, acc);
       }
     `}};var qh=class{constructor(t,e){this.variableNames=["x"],this.uniforms=`pads : vec2<i32>, strides : vec2<i32>, dilations : vec2<i32>, outWidth : i32, itemsPerBlockRow : i32,
       inChannels : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize),this.isChannelsLast=e,this.shaderKey=`im2col_${this.isChannelsLast}`}getUserCode(){let t=this.isChannelsLast?1:2,e=this.isChannelsLast?2:3,o=this.isChannelsLast?"coords[1]":"coords[2]",n=this.isChannelsLast?"coords[2]":"coords[1]",i=this.isChannelsLast?"getX(batch, xRow, xCol, ch)":"getX(batch, ch, xRow, xCol)";return`
    ${J("index")} {
      let coords = getCoordsFromIndex(index);
      if(index < uniforms.size) {
        let batch = coords[0];
        let row = ${o};
        let col = ${n};
        let offsetY = (row / uniforms.outWidth) * uniforms.strides[0] - uniforms.pads[0];
        let xRow = offsetY + uniforms.dilations[0] * (col / uniforms.itemsPerBlockRow);
        var value = 0.0;
        if(xRow < uniforms.xShape[${t}] && xRow >= 0) {
          let offsetX = (row % uniforms.outWidth) * uniforms.strides[1] -
              uniforms.pads[1];
          let xCol = offsetX + uniforms.dilations[1] * ((col %
              uniforms.itemsPerBlockRow) / uniforms.inChannels);
          let ch = col % uniforms.inChannels;
          if(xCol < uniforms.xShape[${e}] && xCol >= 0) {
            value = ${i};
          }
        }
        setOutputAtIndex(index, value);
      }
    }
   `}};function jh(r,t){let e=r.length;return e>=3?t?[...r.slice(0,-3),r[e-3]*r[e-2],r[e-1]]:[...r.slice(0,-3),r[e-3],r[e-2]*r[e-1]]:!t&&e===1&&r[0]>1?[r[0],1]:null}function Lj({x:r,filter:t,convInfo:e,backend:o,bias:n=null,preluActivationWeights:i=null,leakyreluAlpha:s=0,activation:a=null}){let l=e.dataFormat==="channelsLast",u=!l,c=!1,p=l&&e.filterHeight===e.inHeight&&e.filterWidth===e.inWidth&&e.padInfo.type==="VALID",d=[],m,f;if(p){let y=e.inHeight*e.inWidth*e.inChannels;m=he({inputs:{x:r},backend:o,attrs:{shape:[1,e.batchSize,y]}}),f=he({inputs:{x:t},backend:o,attrs:{shape:[1,y,e.outChannels]}})}else m=he({inputs:{x:r},backend:o,attrs:{shape:l?[e.batchSize,e.inHeight*e.inWidth,e.inChannels]:[e.batchSize,e.inChannels,e.inHeight*e.inWidth]}}),f=he({inputs:{x:t},backend:o,attrs:{shape:[1,e.inChannels,e.outChannels]}});if(d.push(m),d.push(f),i!=null){let y=jh(i.shape,l);y!=null&&(i=he({inputs:{x:i},backend:o,attrs:{shape:y}}),d.push(i))}if(n!=null){let y=jh(n.shape,l);y!=null&&(n=he({inputs:{x:n},backend:o,attrs:{shape:y}}),d.push(n))}let g=sa({a:l?m:f,b:l?f:m,transposeA:u,transposeB:c,backend:o,bias:n,activation:a,preluActivationWeights:i,leakyreluAlpha:s}),x=he({inputs:{x:g},backend:o,attrs:{shape:e.outShape}});d.push(g);for(let y of d)o.disposeData(y.dataId);return x}function Mj({x:r,filter:t,convInfo:e,backend:o,bias:n=null,preluActivationWeights:i=null,leakyreluAlpha:s=0,activation:a=null}){let{filterWidth:l,filterHeight:u,inChannels:c,strideWidth:p,strideHeight:d,padInfo:m,outWidth:f,outHeight:g,dilationWidth:x,dilationHeight:y,dataFormat:b}=e,I=b==="channelsLast",N=l*u*c,M=g*f,B=I?[e.batchSize,M,N]:[e.batchSize,N,M],W=new qh(B,I),H=[{type:"int32",data:[m.top,m.left]},{type:"int32",data:[d,p]},{type:"int32",data:[y,x]},{type:"int32",data:[f]},{type:"int32",data:[c*l]},{type:"int32",data:[c]}],K=o.runWebGPUProgram(W,[r],r.dtype,H),X=[];X.push(K);let re=he({inputs:{x:t},backend:o,attrs:{shape:[1,N,-1]}});if(X.push(re),i!=null){let Te=jh(i.shape,I);Te!=null&&(i=he({inputs:{x:i},backend:o,attrs:{shape:Te}}),X.push(i))}if(n!=null){let Te=jh(n.shape,I);Te!=null&&(n=he({inputs:{x:n},backend:o,attrs:{shape:Te}}),X.push(n))}let be=sa({a:I?K:re,b:I?re:K,transposeA:!I,transposeB:!1,backend:o,bias:n,activation:a,preluActivationWeights:i,leakyreluAlpha:s}),we=he({inputs:{x:be},backend:o,attrs:{shape:e.outShape}});X.push(be);for(let Te of X)o.disposeData(Te.dataId);return we}function Xh({x:r,filter:t,convInfo:e,backend:o,bias:n=null,preluActivationWeights:i=null,leakyreluAlpha:s=0,activation:a=null}){let l=n!=null,u=i!=null,c=e.dataFormat==="channelsLast",p=c&&e.filterHeight===e.inHeight&&e.filterWidth===e.inWidth&&e.padInfo.type==="VALID",d=G().getBool("WEBGPU_USE_NAIVE_CONV2D_DEBUG");if(!d&&(p||e.filterHeight===1&&e.filterWidth===1&&e.dilationHeight===1&&e.dilationWidth===1&&e.strideHeight===1&&e.strideWidth===1&&(e.padInfo.type==="SAME"||e.padInfo.type==="VALID")))return Lj({x:r,filter:t,convInfo:e,backend:o,bias:n,activation:a,preluActivationWeights:i,leakyreluAlpha:s});let m=G().getNumber("WEBGPU_THRESHOLD_TO_INCREASE_WORKGROUPS_FOR_MATMUL"),f=m>-1?m:o.thresholdToIncreaseWorkgroups,g=e.batchSize*Math.ceil(e.outHeight*e.outWidth/32)*Math.ceil(e.outChannels/32);if(G().getBool("WEBGPU_CONV_SEPARATE_IM2COL_SHADER")||g<=f)return Mj({x:r,filter:t,convInfo:e,backend:o,bias:n,preluActivationWeights:i,leakyreluAlpha:s,activation:a});let x,y=[e.padInfo.top,e.padInfo.left],b=[{type:"int32",data:[e.filterHeight,e.filterWidth]},{type:"int32",data:[...y]},{type:"int32",data:[e.strideHeight,e.strideWidth]},{type:"int32",data:[e.dilationHeight,e.dilationWidth]}];if(d)x=new Kh(e,l,a,u);else{let B=c?e.outHeight*e.outWidth:e.outChannels,W=c?e.outChannels:e.outHeight*e.outWidth,H=e.filterHeight*e.filterWidth*e.inChannels;b.push({type:"int32",data:[B]},{type:"int32",data:[W]},{type:"int32",data:[H]});let K=o.adapterInfo.isIntel();x=new Hh(e,B,W,H,l,a,u,K)}let I=[],N=[r,t];l&&(!c&&n.shape.length===1&&(n=he({inputs:{x:n},backend:o,attrs:{shape:[n.shape[0],1,1]}}),I.push(n)),N.push(n)),u&&(!c&&i.shape.length===1&&(i=he({inputs:{x:i},backend:o,attrs:{shape:[i.shape[0],1,1]}}),I.push(i)),N.push(i)),a==="leakyrelu"&&(b.push({type:"float32",data:[s]}),x.uniforms+=" alpha : f32,");let M=o.runWebGPUProgram(x,N,r.dtype,b);for(let B of I)o.disposeData(B.dataId);return M}function Bj(r){let{inputs:t,attrs:e,backend:o}=r,{x:n,filter:i}=t,{strides:s,pad:a,dataFormat:l,dilations:u,dimRoundingMode:c}=e,p=P.convertConv2DDataFormat(l),d=P.computeConv2DInfo(n.shape,i.shape,s,u,a,c,!1,p);return Xh({x:n,filter:i,convInfo:d,backend:o})}var jE={kernelName:yl,backendName:"webgpu",kernelFunc:Bj};var Yh=class{constructor(t){this.variableNames=["dy","W"],this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, strides : vec2<i32>, outBackprop : vec4<i32>,",this.workgroupSize=[64,1,1],this.size=!1,this.isVec4=!1,this.workPerThread=1,this.outputShape=t.inShape,this.isChannelsLast=t.dataFormat==="channelsLast",this.isVec4=this.isChannelsLast&&t.outChannels%4===0&&t.inChannels%4===0,this.isVec4?(this.workPerThread=2,this.outputComponent=4,this.workgroupSize=[4,4,4],this.dispatchLayout={x:[3],y:[2],z:[0,1]},this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize,[4,this.workPerThread,1])):(this.size=!0,this.workPerThread=1,this.workgroupSize=[64,1,1],this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize)),this.shaderKey=`conv2DDerInput_${this.isChannelsLast}_${this.isVec4}_${this.workPerThread}`}getUserCode(){let t=this.isChannelsLast?1:2,e=this.isChannelsLast?2:3,o=this.isChannelsLast?3:1,n=`
    ${J()} {
      let batch = i32(globalId.z) / uniforms.outShape[1];
      let r = i32(globalId.z) % uniforms.outShape[1];
      let c = i32(globalId.y) * ${this.workPerThread};
      let d1 = i32(globalId.x) * 4;

      let dyCorner = vec2<i32>(r, c) - uniforms.pads;

      // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
      // ? = to be determined. : = across all values in that axis.
      var dotProd: array<vec4<f32>, ${this.workPerThread}>;
      for (var i = 0; i < ${this.workPerThread}; i++) {
        dotProd[i] = vec4<f32>(0.0);
      }
      for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + 1) {
        let dyR = f32(dyCorner.x + wR) / f32(uniforms.strides.x);
        let wRPerm = uniforms.filterDims.x - 1 - wR;
        if (dyR < 0.0 || dyR >= f32(uniforms.outBackprop[1]) ||
            fract(dyR) > 0.0) {
          continue;
        }
        let idyR = i32(dyR);

        for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + 1) {
          let dyC = f32(dyCorner.y + wC) / f32(uniforms.strides.y);
          let dyC2 = f32(dyCorner.y + 1 + wC) / f32(uniforms.strides.y);
          let wCPerm = uniforms.filterDims.y - 1 - wC;
          var bDyCVal = true;
          var bDyCVal2 = true;
          if (dyC < 0.0 || dyC >= f32(uniforms.outBackprop[2]) ||
              fract(dyC) > 0.0) {
            bDyCVal = false;
          }
          if (dyC2 < 0.0 || dyC2 >= f32(uniforms.outBackprop[2]) ||
              fract(dyC2) > 0.0) {
            bDyCVal2 = false;
          }

          let idyC = i32(dyC);
          let idyC2 = i32(dyC2);
          if (bDyCVal && bDyCVal2) {
            let d2Length = uniforms.outBackprop[3];
            for (var d2 = 0; d2 < d2Length; d2 = d2 + 4) {
              let wValue0 = getW(wRPerm, wCPerm, d1, d2);
              let wValue1 = getW(wRPerm, wCPerm, d1 + 1, d2);
              let wValue2 = getW(wRPerm, wCPerm, d1 + 2, d2);
              let wValue3 = getW(wRPerm, wCPerm, d1 + 3, d2);
              var xValue =  getDy(batch, idyR, idyC, d2);
              let tmpval = vec4<f32>(dot(xValue, wValue0),
                                     dot(xValue, wValue1),
                                     dot(xValue, wValue2),
                                     dot(xValue, wValue3));
              dotProd[0] = dotProd[0] + tmpval;
              xValue = getDy(batch, idyR, idyC2, d2);
              dotProd[1] = dotProd[1] + vec4<f32>(dot(xValue, wValue0),
                                                  dot(xValue, wValue1),
                                                  dot(xValue, wValue2),
                                                  dot(xValue, wValue3));
            }
          } else if (bDyCVal) {
            let d2Length = uniforms.outBackprop[3];
            for (var d2 = 0; d2 < d2Length; d2 = d2 + 4) {
              let wValue0 = getW(wRPerm, wCPerm, d1, d2);
              let wValue1 = getW(wRPerm, wCPerm, d1 + 1, d2);
              let wValue2 = getW(wRPerm, wCPerm, d1 + 2, d2);
              let wValue3 = getW(wRPerm, wCPerm, d1 + 3, d2);
              var xValue =  getDy(batch, idyR, idyC, d2);
              let tmpval = vec4<f32>(dot(xValue, wValue0),
                                     dot(xValue, wValue1),
                                     dot(xValue, wValue2),
                                     dot(xValue, wValue3));
              dotProd[0] = dotProd[0] + tmpval;
            }
          } else if (bDyCVal2) {
            let d2Length = uniforms.outBackprop[3];
            for (var d2 = 0; d2 < d2Length; d2 = d2 + 4) {
              let wValue0 = getW(wRPerm, wCPerm, d1, d2);
              let wValue1 = getW(wRPerm, wCPerm, d1 + 1, d2);
              let wValue2 = getW(wRPerm, wCPerm, d1 + 2, d2);
              let wValue3 = getW(wRPerm, wCPerm, d1 + 3, d2);
              var xValue =  getDy(batch, idyR, idyC2, d2);
              let tmpval = vec4<f32>(dot(xValue, wValue0),
                                     dot(xValue, wValue1),
                                     dot(xValue, wValue2),
                                     dot(xValue, wValue3));
              dotProd[1] = dotProd[1] + tmpval;
            }
          }
        }
      }

      for (var i = 0; i < ${this.workPerThread}; i = i + 1) {
        let coords = vec4<i32>(batch, r, c + i, d1);
        if (coordsInBounds4D(coords, uniforms.outShape)) {
          setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], dotProd[i]);
        }
      }
    }
    `;return this.isVec4?`
    ${n}
    `:`
    ${J("index")} {
      if(index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords[0];
        let d1 = coords[${o}];

        let dyCorner = vec2<i32>(coords[${t}], coords[${e}]) - uniforms.pads;
        let dyRCorner = dyCorner.x;
        let dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + 1) {
          let dyR = (f32(dyRCorner) + f32(wR)) / f32(uniforms.strides.x);
          let wRPerm = uniforms.filterDims.x - 1 - wR;
          if (dyR < 0.0 || dyR >= f32(uniforms.outBackprop[1]) || fract(dyR) > 0.0 ||
              wRPerm < 0) {
            continue;
          }
          let idyR = i32(dyR);

          for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + 1) {
            let dyC = (f32(dyCCorner) + f32(wC)) / f32(uniforms.strides.y);
            let wCPerm = uniforms.filterDims.y - 1 - wC;
            if (dyC < 0.0 || dyC >= f32(uniforms.outBackprop[2]) ||
                fract(dyC) > 0.0 || wCPerm < 0) {
              continue;
            }
            let idyC = i32(dyC);

            for (var d2 = 0; d2 < uniforms.outBackprop[3]; d2 = d2 + 1) {
              let xValue = ${this.isChannelsLast?"getDy(batch, idyR, idyC, d2)":"getDy(batch, d2, idyR, idyC)"};
              let wValue = getW(wRPerm, wCPerm, d1, d2);
              dotProd = dotProd + xValue * wValue;
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
  `}},Qh=class{constructor(t){this.variableNames=["x","dy"],this.uniforms="pads : vec2<i32>, strides : vec2<i32>, batchSize : i32, outHeight : i32, outWidth : i32, inHeight : i32, inWidth : i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t.filterShape,this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize),this.isChannelsLast=t.dataFormat==="channelsLast",this.shaderKey=`conv2DDerFilter_${this.isChannelsLast}`}getUserCode(){return`
    ${J("index")} {
      if(index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let wR = coords[0];
        let wC = coords[1];
        let d1 = coords[2];
        let d2 = coords[3];

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var b = 0; b < uniforms.batchSize; b = b + 1) {
          for (var yR = 0; yR < uniforms.outHeight; yR = yR + 1) {
            let xR = wR + yR * uniforms.strides[0] - uniforms.pads[0];
            if (xR < 0 || xR >= uniforms.inHeight) {
              continue;
            }

            for (var yC = 0; yC < uniforms.outWidth; yC = yC + 1) {
              let xC = wC + yC * uniforms.strides[1] - uniforms.pads[1];

              if (xC < 0 || xC >= uniforms.inWidth) {
                continue;
              }

              if (${this.isChannelsLast}) {
                let dyValue = getDy(b, yR, yC, d2);
                let xValue = getX(b, xR, xC, d1);
                dotProd = dotProd + xValue * dyValue;
              } else {
                let dyValue = getDy(b, d2, yR, yC);
                let xValue = getX(b, d1, xR, xC);
                dotProd = dotProd + xValue * dyValue;
              }
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
  `}},Zh=class{constructor(t){this.variableNames=["x","dy"],this.uniforms=`pads : vec3<i32>, strides : vec3<i32>, batchSize : i32, outDepth : i32,
       outHeight : i32, outWidth : i32, inDepth : i32, inHeight : i32, inWidth : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t.filterShape,this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="conv3DDerFilter"}getUserCode(){return`
    ${J("index")} {
      if(index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let wF = coords.x;
        let wR = coords.y;
        let wC = coords.z;
        let d1 = coords.w;
        let d2 = coords.u;

        var dotProd = 0.0;
        for (var b = 0; b < uniforms.batchSize; b++) {
          for (var yF = 0; yF < uniforms.outDepth; yF++) {
            let xF = wF + yF * uniforms.strides[0] - uniforms.pads[0];
            if (xF < 0 || xF >= uniforms.inDepth) {
              continue;
            }

            for (var yR = 0; yR < uniforms.outHeight; yR++) {
              let xR = wR + yR * uniforms.strides[1] - uniforms.pads[1];
              if (xR < 0 || xR >= uniforms.inHeight) {
                continue;
              }

              for (var yC = 0; yC < uniforms.outWidth; yC++) {
                let xC = wC + yC * uniforms.strides[2] - uniforms.pads[2];
                if (xC < 0 || xC >= uniforms.inWidth) {
                  continue;
                }

                let dyValue = getDy(b, yF, yR, yC, d2);
                let xValue = getX(b, xF, xR, xC, d1);
                dotProd += xValue * dyValue;
              }
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
  `}},Jh=class{constructor(t){this.variableNames=["dy","W"],this.uniforms=`filterDims : vec3<i32>, pads : vec3<i32>, strides : vec3<i32>,
      outDepth : i32, outHeight : i32, outWidth : i32, outChannels : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t.inShape,this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="conv3DDerInput"}getUserCode(){return`
    ${J("index")} {
      if(index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords.x;
        let d1 = coords.u;

        let dyCorner = vec3<i32>(coords.y, coords.z, coords.w) - uniforms.pads;
        let dyFCorner = dyCorner.x;
        let dyRCorner = dyCorner.y;
        let dyCCorner = dyCorner.z;

        var dotProd = 0.0;
        for (var wF = 0; wF < uniforms.filterDims[0]; wF++) {
          let dyF = f32(dyFCorner + wF) / f32(uniforms.strides[0]);
          if (dyF < 0.0 || dyF >= f32(uniforms.outDepth) || fract(dyF) > 0.0) {
            continue;
          }
          let idyF = i32(dyF);

          let wFPerm = uniforms.filterDims[0] - 1 - wF;

          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {
            let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[1]);

            if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
              continue;
            }
            let idyR = i32(dyR);

            let wRPerm = uniforms.filterDims[1] - 1 - wR;

            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {
              let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[2]);

              if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
                continue;
              }
              let idyC = i32(dyC);

              let wCPerm = uniforms.filterDims[2] - 1 - wC;

              for (var d2 = 0; d2 < uniforms.outChannels; d2++) {
                let xValue = getDy(batch, idyF, idyR, idyC, d2);
                let wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
  `}};function Vj(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,dy:i}=t,{strides:s,pad:a,dataFormat:l,dimRoundingMode:u,filterShape:c}=o,p=P.convertConv2DDataFormat(l),d=P.computeConv2DInfo(n.shape,c,s,1,a,u,!1,p),m=new Qh(d),f=[{type:"int32",data:[d.padInfo.top,d.padInfo.left]},{type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.batchSize]},{type:"int32",data:[d.outHeight]},{type:"int32",data:[d.outWidth]},{type:"int32",data:[d.inHeight]},{type:"int32",data:[d.inWidth]}];return e.runWebGPUProgram(m,[n,i],n.dtype,f)}var XE={kernelName:vl,backendName:"webgpu",kernelFunc:Vj};function Wj(r=4){let t=i=>{switch(i){case 1:return"return W[getIndexFromCoords4D(coord, uniforms.wShape)];";case 4:return`
            let coord1 = vec4<i32>(coordX, coordY, col + 1, rowInner);
            let coord2 = vec4<i32>(coordX, coordY, col + 2, rowInner);
            let coord3 = vec4<i32>(coordX, coordY, col + 3, rowInner);
            let v0 = W[getIndexFromCoords4D(coord, uniforms.wShape)];
            let v1 = W[getIndexFromCoords4D(coord1, uniforms.wShape)];
            let v2 = W[getIndexFromCoords4D(coord2, uniforms.wShape)];
            let v3 = W[getIndexFromCoords4D(coord3, uniforms.wShape)];
            return vec4<f32>(v0, v1, v2, v3);
            `;default:throw new Error(`innerElementSize ${i} is not supported.`)}},o=`if (row < uniforms.dimAOuter && col < uniforms.dimInner) {
        ${`
      let outRow = row / uniforms.outShape[2];
      let outCol = row % uniforms.outShape[2];

      let WRow = col / (uniforms.filterDims[1] * uniforms.outBackprop[3]);
      let WCol = col / uniforms.outBackprop[3] % uniforms.filterDims[1];
      let xR = f32(outRow - uniforms.pads[0] + WRow) / f32(uniforms.strides[0]);
      let xC = f32(outCol - uniforms.pads[1] + WCol) / f32(uniforms.strides[1]);
      if (xR < 0.0 || xR >= f32(uniforms.outBackprop[1]) || fract(xR) > 0.0) {
        return ${We(r)}(0.0);
      }
      if (xC < 0.0 || xC >= f32(uniforms.outBackprop[2]) || fract(xC) > 0.0) {
        return ${We(r)}(0.0);
      }
      let coord = vec4<i32>(
          batch,
          i32(xR),
          i32(xC),
          col % uniforms.outBackprop[3]);
      return x[getIndexFromCoords4D(coord, uniforms.xShape)/${r}];`}
      }
      return ${We(r)}(0.0);`;return`
  fn mm_readA(batch: i32, row : i32, col : i32) -> ${We(r)} {
    ${o}
  }

  fn mm_readB(batch: i32, row : i32, col : i32) -> ${We(r)} {
    let coordX = uniforms.filterDims.x - 1 -
        row / (uniforms.filterDims[1] * uniforms.outBackprop[3]);
    let coordY = uniforms.filterDims.y - 1 -
        (row / uniforms.outBackprop[3]) % uniforms.filterDims[1];
    if (row < uniforms.dimInner && col < uniforms.dimBOuter &&
        coordX >= 0 && coordY >= 0) {
      let rowInner = row % uniforms.outBackprop[3];
      let coord = vec4<i32>(coordX, coordY, col, rowInner);
      ${t(r)}
    }
    return ${We(r)}(0.0);
  }

  fn mm_write(batch: i32, row : i32, col : i32, valueInput : ${We(r)}) {
    if (row < uniforms.dimAOuter && col < uniforms.dimBOuter) {
      var value = valueInput;
      let outCoord = vec4<i32>(
          batch,
          row / uniforms.outShape[2],
          row % uniforms.outShape[2],
          col);
      result[getIndexFromCoords4D(outCoord, uniforms.outShape)/${r}] = value;
    }
  }`}var eg=class{constructor(t){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, strides : vec2<i32>, outBackprop : vec4<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.outputShape=t.inShape,S.assert(t.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),this.isVec4=t.inChannels%4===0&&t.outChannels%4===0,this.dispatchLayout={x:[3],y:[1,2],z:[0]},this.workgroupSize=Up(this.dispatchLayout,this.outputShape,this.isVec4),this.elementsPerThread=zp(this.dispatchLayout,this.outputShape,this.isVec4),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize,this.elementsPerThread),this.isVec4&&(this.outputComponent=4,this.variableComponents=[4,1]),this.shaderKey=`conv2DDerInputMM_${this.isVec4}_${this.elementsPerThread}`}getUserCode(){let t=this.isVec4?na(this.elementsPerThread,this.workgroupSize):ia(this.elementsPerThread,this.workgroupSize);return`
    ${Wj(this.isVec4?4:1)}
    ${t}
    `}};function Uj(r){let{inputs:t,backend:e,attrs:o}=r,{dy:n,filter:i}=t,{inputShape:s,strides:a,pad:l,dataFormat:u,dimRoundingMode:c}=o,p=P.convertConv2DDataFormat(u),d=P.computeConv2DInfo(s,i.shape,a,1,l,c,!1,p),m=[{type:"int32",data:[d.filterHeight,d.filterWidth]},{type:"int32",data:[d.filterHeight-1-d.padInfo.top,d.filterWidth-1-d.padInfo.left]},{type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.batchSize,d.outHeight,d.outWidth,d.outChannels]}],f;if(G().getBool("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE")||d.dataFormat!=="channelsLast")f=new Yh(d);else{f=new eg(d);let g=d.inHeight*d.inWidth,x=d.inChannels,y=d.filterHeight*d.filterWidth*d.outChannels;m.push({type:"uint32",data:[g]},{type:"uint32",data:[x]},{type:"uint32",data:[y]})}return e.runWebGPUProgram(f,[n,i],"float32",m)}var YE={kernelName:bl,backendName:"webgpu",kernelFunc:Uj};var tg=class{constructor(t){this.variableNames=["x","W"],this.uniforms="filterDims: vec3<i32>, pads: vec3<i32>, strides: vec3<i32>, dilations: vec3<i32>,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t.outShape,this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="conv3dnaive"}getUserCode(){return`
    ${J("index")} {
      if (index < uniforms.size) {
        let coords = getOutputCoords();
        let batch = coords.x;
        let d2 = coords.u;

        let xFRCCorner = vec3<i32>(coords.y, coords.z, coords.w) * uniforms.strides - uniforms.pads;
        let xFCorner = xFRCCorner.x;
        let xRCorner = xFRCCorner.y;
        let xCCorner = xFRCCorner.z;

        let inputDepthNearestVec4 = (uniforms.xShape.u / 4) * 4;
        let inputDepthVec4Remainder = uniforms.xShape.u % 4;

        var dotProd = 0.0;
        for (var wF = 0; wF < uniforms.filterDims[0]; wF++) {
          let xF = xFCorner + wF * uniforms.dilations[0];
          if (xF < 0 || xF >= uniforms.xShape.y) {
            continue;
          }

          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {
            let xR = xRCorner + wR * uniforms.dilations[1];
            if (xR < 0 || xR >= uniforms.xShape.z) {
              continue;
            }

            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {
              let xC = xCCorner + wC * uniforms.dilations[2];
              if (xC < 0 || xC >= uniforms.xShape.w) {
                continue;
              }

              for (var d1 = 0; d1 < inputDepthNearestVec4; d1 += 4) {
                let xValues = vec4<f32>(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                let wValues = vec4<f32>(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (inputDepthVec4Remainder == 1) {
                dotProd += getX(batch, xF, xR, xC, inputDepthNearestVec4) *
                  getW(wF, wR, wC, inputDepthNearestVec4, d2);
              } else if (inputDepthVec4Remainder == 2) {
                let xValues = vec2<f32>(
                  getX(batch, xF, xR, xC, inputDepthNearestVec4),
                  getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1)
                );
                let wValues = vec2<f32>(
                  getW(wF, wR, wC, inputDepthNearestVec4, d2),
                  getW(wF, wR, wC, inputDepthNearestVec4 + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (inputDepthVec4Remainder == 3) {
                let xValues = vec3<f32>(
                  getX(batch, xF, xR, xC, inputDepthNearestVec4),
                  getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1),
                  getX(batch, xF, xR, xC, inputDepthNearestVec4 + 2)
                );
                let wValues = vec3<f32>(
                  getW(wF, wR, wC, inputDepthNearestVec4, d2),
                  getW(wF, wR, wC, inputDepthNearestVec4 + 1, d2),
                  getW(wF, wR, wC, inputDepthNearestVec4 + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }`}};function zj(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,filter:i}=t,{strides:s,pad:a,dilations:l}=o,u=P.computeConv3DInfo(n.shape,i.shape,s,l,a),c=[u.padInfo.front,u.padInfo.top,u.padInfo.left],p=[{type:"int32",data:[u.filterDepth,u.filterHeight,u.filterWidth]},{type:"int32",data:[...c]},{type:"int32",data:[u.strideDepth,u.strideHeight,u.strideWidth]},{type:"int32",data:[u.dilationDepth,u.dilationHeight,u.dilationWidth]}],d=new tg(u),m=Et(n.dtype,i.dtype);return e.runWebGPUProgram(d,[n,i],m,p)}var QE={kernelName:Sl,backendName:"webgpu",kernelFunc:zj};function Gj(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,dy:i}=t,{strides:s,pad:a,filterShape:l}=o,u=P.computeConv3DInfo(n.shape,l,s,1,a),c=new Zh(u),p=[{type:"int32",data:[u.padInfo.front,u.padInfo.top,u.padInfo.left]},{type:"int32",data:[u.strideDepth,u.strideHeight,u.strideWidth]},{type:"int32",data:[u.batchSize]},{type:"int32",data:[u.outDepth]},{type:"int32",data:[u.outHeight]},{type:"int32",data:[u.outWidth]},{type:"int32",data:[u.inDepth]},{type:"int32",data:[u.inHeight]},{type:"int32",data:[u.inWidth]}];return e.runWebGPUProgram(c,[n,i],i.dtype,p)}var ZE={kernelName:mm,backendName:"webgpu",kernelFunc:Gj};function Hj(r){let{inputs:t,backend:e,attrs:o}=r,{dy:n,filter:i}=t,{strides:s,pad:a,inputShape:l}=o,u=P.computeConv3DInfo(l,i.shape,s,1,a),c=new Jh(u),p=[{type:"int32",data:[u.filterDepth,u.filterHeight,u.filterWidth]},{type:"int32",data:[u.filterDepth-1-u.padInfo.front,u.filterHeight-1-u.padInfo.top,u.filterWidth-1-u.padInfo.left]},{type:"int32",data:[u.strideDepth,u.strideHeight,u.strideWidth]},{type:"int32",data:[u.outDepth]},{type:"int32",data:[u.outHeight]},{type:"int32",data:[u.outWidth]},{type:"int32",data:[u.outChannels]}];return e.runWebGPUProgram(c,[n,i],n.dtype,p)}var JE={kernelName:wl,backendName:"webgpu",kernelFunc:Hj};var Kj=ke({opType:ae.COS}),eN={kernelName:_l,backendName:"webgpu",kernelFunc:Kj};var qj=ke({opType:ae.COSH}),tN={kernelName:Cl,backendName:"webgpu",kernelFunc:qj};var rg=class{constructor(t,e,o,n){this.variableNames=["Image","Boxes","BoxInd"],this.uniforms="extrapolationValue : f32,",this.workgroupSize=[64,1,1],this.size=!0;let[i]=e;this.outputShape=[i,o[0],o[1],t],this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize),this.methodId=n==="bilinear"?1:0,this.cropHeightBiggerThan1=this.outputShape[1]>1,this.cropWidthBiggerThan1=this.outputShape[2]>1,this.shaderKey=`cropAndResize_${this.methodId}_${this.cropHeightBiggerThan1}_${this.cropWidthBiggerThan1}`}getUserCode(){let[t,e]=["f32(uniforms.imageShape[1] - 1)","f32(uniforms.imageShape[2] - 1)"],[o,n,i]=this.cropHeightBiggerThan1?[`(${t} / f32(uniforms.outShape[1] - 1))`,"(y2-y1) * height_ratio",`y1*${t} + f32(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${t}`],[s,a,l]=this.cropWidthBiggerThan1?[`(${e} / f32(uniforms.outShape[2] - 1))`,"(x2-x1) * width_ratio",`x1*${e} + f32(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${e}`];return`
    ${J("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let height_ratio = f32(${o});
        let width_ratio = f32(${s});
        let b = coords[0];
        let y = coords[1];
        let x = coords[2];
        let d = coords[3];
        // get box vals
        let y1 = getBoxes(b, 0);
        let x1 = getBoxes(b, 1);
        let y2 = getBoxes(b, 2);
        let x2 = getBoxes(b, 3);
        // get image in batch index
        let bInd = i32(round(getBoxInd(b)));
        if(bInd < 0 || bInd >= uniforms.outShape[0]) {
          return;
        }
        let height_scale = ${n};
        let width_scale = ${a};
        let in_y = ${i};
        if( in_y < 0.0 || in_y > ${t} ) {
          setOutputAtIndex(index, uniforms.extrapolationValue);
          return;
        }
        let in_x = ${l};
        if( in_x < 0.0 || in_x > ${e} ) {
          setOutputAtIndex(index, uniforms.extrapolationValue);
          return;
        }
        let sourceFracIndexCR = vec2<f32>(in_x,in_y);
        if(${this.methodId} == 1) {
          // Compute the four integer indices.
          let sourceFloorCR = vec2<i32>(sourceFracIndexCR);
          let sourceCeilCR = vec2<i32>(ceil(sourceFracIndexCR));
          let topLeft = getImage(bInd, sourceFloorCR.y, sourceFloorCR.x, d);
          let bottomLeft = getImage(bInd, sourceCeilCR.y, sourceFloorCR.x, d);
          let topRight = getImage(bInd, sourceFloorCR.y, sourceCeilCR.x, d);
          let bottomRight = getImage(bInd, sourceCeilCR.y, sourceCeilCR.x, d);
          let fracCR = sourceFracIndexCR - vec2<f32>(sourceFloorCR);
          let top = topLeft + (topRight - topLeft) * fracCR.x;
          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          let newValue = top + (bottom - top) * fracCR.y;
          setOutputAtIndex(index, newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          let sourceNearestCR = vec2<i32>(floor(
            sourceFracIndexCR + vec2<f32>(0.5,0.5)));
          let newValue = getImage(
            bInd, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutputAtIndex(index, newValue);
        }
      }
    }
    `}};var jj=r=>{let{inputs:t,backend:e,attrs:o}=r,{image:n,boxes:i,boxInd:s}=t,{cropSize:a,method:l,extrapolationValue:u}=o,c=new rg(n.shape[3],i.shape,a,l),p=[{type:"float32",data:[u]}];return e.runWebGPUProgram(c,[n,i,s],"float32",p)},rN={kernelName:Tl,backendName:"webgpu",kernelFunc:jj};var $c=function(r){return r.Prod="*",r.Sum="+",r}($c||{}),Zp=class{constructor(t,e,o,n){this.variableNames=["x"],this.uniforms="index : f32,",this.size=!0,this.workgroupSize=[128,1,1],this.outputShape=e,this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize),this.exclusive=o,this.reverse=n,this.op=t,this.shaderKey=`cum_${this.op}_${this.exclusive}_${this.reverse}`}getUserCode(){let t=this.outputShape.length,e=this.op===$c.Prod?"1.0":"0.0",o=this.exclusive?e:`getX(${oN(t,"coords",this.op)})`,n=this.outputShape[this.outputShape.length-1],i="",s="";return this.exclusive?(i=this.reverse?`end != ${n-1}`:"end != 0",s=this.reverse?"end + 1":"end - 1"):(i=this.reverse?`end + pow2 < ${n}`:"end >= pow2",s=this.reverse?"end + pow2":"end - pow2"),`
      ${J("index")} {
       if (index < uniforms.size) {
         var coords = getCoordsFromIndex(index);

         let end = ${nN(t,"coords",this.op)};
         var val = ${o};
         let pow2 = i32(pow(2.0, uniforms.index));
         if (${i}) {
           let idx = ${s};
           ${nN(t,"coords",this.op)} = idx;
           val ${this.op}= getX(${oN(t,"coords",this.op)});
         }
         setOutputAtIndex(index, val);
       }
      }
    `}};function oN(r,t,e){if(r===1)return`${t}`;if(r===2)return`${t}.x, ${t}.y`;if(r===3)return`${t}.x, ${t}.y, ${t}.z`;if(r===4)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative ${e} for rank ${r} is not yet supported`)}function nN(r,t,e){if(r===1)return`${t}`;if(r===2)return`${t}.y`;if(r===3)return`${t}.z`;if(r===4)return`${t}.w`;throw Error(`Cumulative ${e} for rank ${r} is not yet supported`)}function og(r,t,e,o,n,i){let s=t.shape.length,a=P.getAxesPermutation([o],s),l=t;a!=null&&(l=xr({inputs:{x:t},backend:e,attrs:{perm:a}}));let u=P.getInnerMostAxes(1,s)[0];if(u!==s-1)throw new Error(`WebGPU cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${o}`);let c=l.shape[u],p=$t({inputs:{x:l},backend:e});for(let d=0;d<=Math.ceil(Math.log2(c))-1;d++){let m=new Zp(r,l.shape,!1,i),f=p,g=[{type:"float32",data:[d]}];p=e.runWebGPUProgram(m,[p],p.dtype,g),e.disposeData(f.dataId)}if(n){let d=new Zp(r,l.shape,n,i),m=p,f=[{type:"float32",data:[0]}];p=e.runWebGPUProgram(d,[p],p.dtype,f),e.disposeData(m.dataId)}if(a!=null){let d=P.getUndoAxesPermutation(a),m=xr({inputs:{x:p},backend:e,attrs:{perm:d}});return e.disposeData(p.dataId),e.disposeData(l.dataId),m}return p}function Xj(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{axis:i,exclusive:s,reverse:a}=o;return og($c.Prod,n,e,i,s,a)}var iN={kernelName:kl,backendName:"webgpu",kernelFunc:Xj};function Yj(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{axis:i,exclusive:s,reverse:a}=o;return og($c.Sum,n,e,i,s,a)}var sN={kernelName:Il,backendName:"webgpu",kernelFunc:Yj};function Qj(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,weights:i}=t,{size:s,binaryOutput:a}=o,l=n.shape.length===1,c=S.sizeFromShape(i.shape)>0,p=i.dtype,d=l?[n.shape[0]]:[n.shape[0],n.shape[1]],m=l?[s]:[n.shape[0],s],f=_t({backend:e,attrs:{shape:m,value:0,dtype:p}}),g=new Rc(d,c,a),x=[{type:"int32",data:[s]}],y=c?[n,i]:[n];return e.runWebGPUProgram(g,y,p,x,f)}var aN={kernelName:El,backendName:"webgpu",kernelFunc:Qj};var ng=class{constructor(t,e){this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.uniforms="blockSize : i32,",this.outputShape=t,this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey=`depthToSpace_${e}`,this.dataFormat=e}getUserCode(){return`
      ${J("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let h = ${this.getHeightCoordString()};
          let w = ${this.getWidthCoordString()};
          let d = ${this.getDepthCoordString()};

          let in_h = h / uniforms.blockSize;
          let offset_h = h % uniforms.blockSize;
          let in_w = w / uniforms.blockSize;
          let offset_w = w % uniforms.blockSize;
          let offset_d = (offset_h * uniforms.blockSize + offset_w) *
            ${this.getOutputDepthSize()};
          let in_d = d + offset_d;

          let rlt = ${this.getInputSamplingString()};
          setOutputAtIndex(index, rlt);
        }
      }`}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?"uniforms.outShape[3]":"uniforms.outShape[1]"}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};function Zj(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{blockSize:i,dataFormat:s}=o,a=n.shape[0],l=s==="NHWC"?n.shape[1]:n.shape[2],u=s==="NHWC"?n.shape[2]:n.shape[3],c=s==="NHWC"?n.shape[3]:n.shape[1],p=l*i,d=u*i,m=c/(i*i),f=s==="NHWC"?[a,p,d,m]:[a,m,p,d],g=[{type:"int32",data:[i]}],x=new ng(f,s);return e.runWebGPUProgram(x,[n],n.dtype,g)}var lN={kernelName:Nl,backendName:"webgpu",kernelFunc:Zj};var ig=class{constructor(t,e,o,n=!1,i=null,s=!1){this.variableNames=["x","W"],this.uniforms="pads : vec2<i32>, inDims : vec2<i32>,",this.workgroupSize=[16,16,1],this.outputShape=t,this.dispatchLayout={x:[3],y:[2],z:[0,1]},this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize),n&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),this.addBias=n,this.activation=i,this.hasPreluActivation=s,this.filterHeight=e,this.filterWidth=o,this.shaderKey=`depthwiseNCHW_${this.activation}_${this.filterHeight}_${this.filterWidth}`}getUserCode(){let t=this.filterWidth*this.filterHeight,e=this.workgroupSize[0]*this.workgroupSize[1]*this.workgroupSize[2],o=this.workgroupSize[1]+this.filterHeight-1,n=this.workgroupSize[0]+this.filterWidth-1;return`
      ${sr(this.activation,this.hasPreluActivation,!1,4)}

      var<workgroup> mm_Asub : array<array<f32, ${n}>, ${o}>;
      var<workgroup> mm_Bsub : array<array<f32, ${this.filterWidth}>, ${this.filterHeight}>;
      fn readX(batch : i32, channel : i32, row : i32, col : i32) -> f32 {
        var value = 0.0;
        if (row >=0 && row < uniforms.inDims[0] && col >=0 && col < uniforms.inDims[1])
        {
          value = getX(batch, channel, row, col);
        }
        return value;
      }

      ${J()} {
        let coords = getOutputCoords();
        let batch = coords[0];
        let xRCCorner = vec2<i32>(coords.zw) - uniforms.pads;
        let channelMul = uniforms.wShape[3];
        let d1 = coords[1] / channelMul;
        let q = coords[1] % channelMul;

        let inputRowStart = xRCCorner.x;
        let inputColStart = xRCCorner.y;

        let localRow = i32(localId.y);
        let localCol = i32(localId.x);

        // Load one tile of X into local memory.
        for (var inputRow = localRow; inputRow < ${o}; inputRow = inputRow + ${this.workgroupSize[1]}) {
          for (var inputCol = localCol; inputCol < ${n}; inputCol = inputCol + ${this.workgroupSize[0]}) {
            let rowOffset = inputRow - localRow;
            let colOffset = inputCol - localCol;
            mm_Asub[inputRow][inputCol] = readX(batch, d1, inputRowStart + rowOffset, inputColStart + colOffset);
          }
        }

        // Load one tile of W into local memory.
        var wIndex = i32(localIndex);
        ${t<e?`if (wIndex < ${t})`:`for(; wIndex < ${t}; wIndex = wIndex + ${e})`}

        {
          let wRow = wIndex / ${this.filterWidth};
          let wCol = wIndex % ${this.filterWidth};
          mm_Bsub[wRow][wCol] = getW(wRow, wCol, d1, q);
        }

        workgroupBarrier();

        var value = 0.0;
        for (var wR = 0; wR < ${this.filterHeight}; wR = wR + 1) {
          for (var wC = 0; wC < ${this.filterWidth}; wC = wC + 1) {
            let xVal = mm_Asub[localRow + wR][localCol + wC];
            let wVal = mm_Bsub[wR][wC];
            value = fma(xVal, wVal, value);
          }
        }
        ${uo(this.addBias,this.activation)}
        if (coordsInBounds4D(coords, uniforms.outShape)) {
          setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
        }
      }
    `}};var Ac=class{constructor(t,e=!1,o=null,n=!1){this.variableNames=["x","W"],this.uniforms="pads : vec2<i32>, inDims : vec2<i32>, virtualWidth : i32,",this.workgroupSize=[64,1,1],this.workPerThread=4,this.outputComponent=4,this.outputShape=t.outShape,this.virtualWidth=Math.ceil(this.outputShape[2]/this.workPerThread)*this.workPerThread;let i=[this.outputShape[0],this.outputShape[1],this.virtualWidth,this.outputShape[3]];this.dispatchLayout=ie(i),this.dispatch=ee(this.dispatchLayout,i,this.workgroupSize,[this.outputComponent*this.workPerThread,1,1]),S.assert(t.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),e&&this.variableNames.push("bias"),n&&this.variableNames.push("preluActivationWeights"),this.convInfo=t,this.addBias=e,this.activation=o,this.hasPreluActivation=n,this.shaderKey=`depthwiseVec4_${o}_${this.convInfo.filterHeight}_${this.convInfo.filterWidth}_${this.convInfo.strideHeight}_${this.convInfo.strideWidth}_${this.workPerThread}`}getUserCode(){let t=(this.workPerThread-1)*this.convInfo.strideWidth+this.convInfo.filterWidth,e=this.convInfo.strideHeight,o=this.convInfo.strideWidth;return`
      ${sr(this.activation,this.hasPreluActivation,!0,4)}
      fn readX(batch : i32, row : i32, col : i32, channel : i32) -> vec4<f32> {
        var value = vec4<f32>(0.0);
        if (col >=0 && col < uniforms.inDims[1]) {
          value = getX(batch, row, col, channel);
        }
        return value;
      }

      ${J("index")} {
        let width0 = uniforms.outShape[3] / ${this.outputComponent};
        let d1 = (index % width0) * ${this.outputComponent};
        var index1 = index / width0;
        let width1 = uniforms.virtualWidth / ${this.workPerThread};
        let c = (index1 % width1) * ${this.workPerThread};
        index1 = index1 / width1;
        let r = index1 % uniforms.outShape[1];
        let batch = index1 / uniforms.outShape[1];

        let xRCCorner = vec2<i32>(r, c) * vec2<i32>(${e}, ${o}) - uniforms.pads;

        let xRCorner = xRCCorner.x;
        let xCCorner = xRCCorner.y;
        var xVals : array<vec4<f32>, ${t}>;
        var dotProd : array<vec4<f32>, ${this.workPerThread}>;
        for (var i = 0; i < ${this.workPerThread}; i++) {
          dotProd[i] = vec4<f32>(0.0);
        }

        // Use constant instead of uniform can give better performance.
        for (var wR = 0; wR < ${this.convInfo.filterHeight}; wR = wR + 1) {
          let xR = xRCorner + wR;
          if (xR >=0 && xR < uniforms.inDims[0]) {
            for (var i = 0; i < ${t}; i++) {
              xVals[i] = readX(batch, xR, xCCorner + i, d1);
            }
            for (var wC = 0; wC < ${this.convInfo.filterWidth}; wC = wC + 1) {
              let wValue = getW(wR, wC, d1, 0);
              for (var i = 0; i < ${this.workPerThread}; i++) {
                dotProd[i] = fma(xVals[i * ${o} + wC], wValue, dotProd[i]);
              }
            }
          }
        }

        for (var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let coords = vec4<i32>(batch, r, c + i, d1);
          if (coordsInBounds4D(coords, uniforms.outShape)) {
            var value = dotProd[i];
            ${uo(this.addBias,this.activation)}
            setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
          }
        }
      }
    `}};var Dc=class{constructor(t,e=!1,o=null,n=!1){this.variableNames=["x","W"],this.uniforms=`pads : vec2<i32>, inDims : vec2<i32>, filterHeight : i32,
      filterWidth : i32, strides : vec2<i32>, dilations : vec2<i32>,`,this.workgroupSize=[256,1,1],this.size=!0,this.outputShape=t.outShape,this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize),this.isChannelsLast=t.dataFormat==="channelsLast",e&&this.variableNames.push("bias"),n&&this.variableNames.push("preluActivationWeights"),this.convInfo=t,this.addBias=e,this.activation=o,this.hasPreluActivation=n,this.shaderKey=`depthwise_${this.activation}_${this.isChannelsLast}`}getUserCode(){let t=this.isChannelsLast?"getX(batch, xR, xC, d1);":"getX(batch, d1, xR, xC);";return`
      ${sr(this.activation,this.hasPreluActivation,!1,4)}

      ${J("index")} {
        if (index < uniforms.size) {
          let coords = getOutputCoords();
          let batch = coords[0];
          let xRCCorner = vec2<i32>(coords.${this.isChannelsLast?"yz":"zw"}) * uniforms.strides - uniforms.pads;
          let d2 = coords[${this.isChannelsLast?3:1}];
          let channelMul = uniforms.wShape[3];
          let d1 = d2 / channelMul;
          let q = d2 % channelMul;

          let inputRowStart = xRCCorner.x;
          let inputColStart = xRCCorner.y;
          let inputRowEnd = inputRowStart + uniforms.filterHeight *
              uniforms.dilations[0];
          let inputColEnd = inputColStart + uniforms.filterWidth *
              uniforms.dilations[1];

          // Convolve x(?, ?, d1)|x(d1, ?, ?) with w(:, :, d1, q) to get
          // y(yR, yC, d2)|y(d2, yR, yC). ? = to be determined. : = across all
          // values in that axis. x(?, ?, d1) and y(yR, yC, d2) is for NHWC.
          // x(d1, ?, ?) and y(d2, yR, yC) is for NCHW.
          var value = 0.0;

          // Extract if checking out of for loop for performance.
          if (inputRowStart >= 0 && inputColStart >= 0 &&
            inputRowEnd < uniforms.inDims[0] &&
                inputColEnd < uniforms.inDims[1]) {
              for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {
                let xR = inputRowStart + wR * uniforms.dilations[0];

                for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {
                  let xC = inputColStart + wC * uniforms.dilations[1];

                  let xVal = ${t};
                  let wVal = getW(wR, wC, d1, q);
                  value = value + xVal * wVal;
                }
              }
            } else {
              for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {
                let xR = inputRowStart + wR * uniforms.dilations[0];

                if (xR < 0 || xR >= uniforms.inDims[0]) {
                  continue;
                }

                for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {
                  let xC = inputColStart + wC * uniforms.dilations[1];

                  if (xC < 0 || xC >= uniforms.inDims[1]) {
                    continue;
                  }

                  let xVal = ${t};
                  let wVal = getW(wR, wC, d1, q);
                  value = value + xVal * wVal;
                }
              }
            }
            ${uo(this.addBias,this.activation)}
          setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
        }
      }
    `}};function Jj(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,filter:i}=t,{strides:s,pad:a,dataFormat:l,dilations:u,dimRoundingMode:c}=o,p=P.convertConv2DDataFormat(l),d=u;d==null&&(d=[1,1]);let m=P.computeConv2DInfo(n.shape,i.shape,s,d,a,c,!0,p),f=[{type:"int32",data:[m.padInfo.top,m.padInfo.left]},{type:"int32",data:[m.inHeight,m.inWidth]}],g=m.dataFormat==="channelsLast",x;return!g&&m.inHeight>16&&m.inWidth>16&&m.strideHeight===1&&m.strideWidth===1&&m.dilationWidth===1&&m.dilationHeight===1&&m.inChannels===m.outChannels?x=new ig(m.outShape,m.filterHeight,m.filterWidth):g&&m.outHeight>4&&m.outWidth>4&&m.strideWidth<=2&&m.inChannels===m.outChannels&&m.dilationHeight===1&&m.dilationWidth===1&&m.inChannels%4===0?(x=new Ac(m),f.push({type:"int32",data:[x.virtualWidth]})):(x=new Dc(m),f.push({type:"int32",data:[m.filterHeight]},{type:"int32",data:[m.filterWidth]},{type:"int32",data:[m.strideHeight,m.strideWidth]},{type:"int32",data:[m.dilationHeight,m.dilationWidth]})),e.runWebGPUProgram(x,[n,i],n.dtype,f)}var uN={kernelName:Rl,backendName:"webgpu",kernelFunc:Jj};var sg=class{constructor(t){this.variableNames=["x","dy"],this.uniforms=`strides : vec2<i32>, pads : vec2<i32>, filterDims : vec2<i32>, outHeight : i32,
      outWidth : i32, inHeight : i32, inWidth : i32, batchSize : i32, channelMul : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t.filterShape,this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="depthwise_conv2d_backprop_filter"}getUserCode(){return`
      ${J("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let wR = coords[0];
        let wC = coords[1];
        let d1 = coords[2];
        let dm = coords[3];
        let d2 = d1 * uniforms.channelMul + dm;

        var dotProd = 0.0;
        for (var b = 0; b < uniforms.batchSize; b++) {
          for (var yR = 0; yR < uniforms.outHeight; yR++) {
            let xR = wR + yR * uniforms.strides[0] - uniforms.pads[0];

            if (xR < 0 || xR >= uniforms.inHeight) {
              continue;
            }

            for (var yC = 0; yC < uniforms.outWidth; yC++) {
              let xC = wC + yC * uniforms.strides[1] - uniforms.pads[1];

              if (xC < 0 || xC >= uniforms.inWidth) {
                continue;
              }

              let dyValue = getDy(b, yR, yC, d2);
              let xValue = getX(b, xR, xC, d1);
              dotProd += xValue * dyValue;
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
    `}},ag=class{constructor(t){this.variableNames=["dy","W"],this.uniforms=`strides : vec2<i32>, pads : vec2<i32>, filterDims : vec2<i32>,
       outHeight : i32, outWidth : i32, channelMul : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t.inShape,this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="depthwise_conv2d_backprop_input"}getUserCode(){return`
      ${J("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords[0];
        let d1 = coords[3];
        let dyCorner = coords.yz - uniforms.pads;
        let dyRCorner = dyCorner.x;
        let dyCCorner = dyCorner.y;

        var dotProd = 0.0;
        for (var wR = 0; wR < uniforms.filterDims[0]; wR++) {
          let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[0]);

          if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
            continue;
          }

          let idyR = i32(dyR);
          let wRPerm = uniforms.filterDims[0] - 1 - wR;

          for (var wC = 0; wC < uniforms.filterDims[1]; wC++) {
            let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[1]);

            if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
              continue;
            }

            let idyC = i32(dyC);
            let wCPerm = uniforms.filterDims[1] - 1 - wC;

            for (var dm = 0; dm < uniforms.channelMul; dm++) {
              let d2 = d1 * uniforms.channelMul + dm;
              let xValue = getDy(batch, idyR, idyC, d2);
              let wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
    `}};function e9(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,dy:i}=t,{strides:s,dilations:a,pad:l,dimRoundingMode:u,filterShape:c}=o,p=P.computeConv2DInfo(n.shape,c,s,a,l,u,!0),d=new sg(p),m=[{type:"int32",data:[p.strideHeight,p.strideWidth]},{type:"int32",data:[p.padInfo.top,p.padInfo.left]},{type:"int32",data:[p.filterHeight,p.filterWidth]},{type:"int32",data:[p.outHeight]},{type:"int32",data:[p.outWidth]},{type:"int32",data:[p.inHeight]},{type:"int32",data:[p.inWidth]},{type:"int32",data:[p.batchSize]},{type:"int32",data:[p.outChannels/p.inChannels]}];return e.runWebGPUProgram(d,[n,i],"float32",m)}var cN={kernelName:Pl,backendName:"webgpu",kernelFunc:e9};function t9(r){let{inputs:t,backend:e,attrs:o}=r,{dy:n,filter:i}=t,{strides:s,dilations:a,pad:l,dimRoundingMode:u,inputShape:c}=o,p=P.computeConv2DInfo(c,i.shape,s,a,l,u,!0),d=new ag(p),m=[{type:"int32",data:[p.strideHeight,p.strideWidth]},{type:"int32",data:[p.filterHeight-1-p.padInfo.top,p.filterWidth-1-p.padInfo.left]},{type:"int32",data:[p.filterHeight,p.filterWidth]},{type:"int32",data:[p.outHeight]},{type:"int32",data:[p.outWidth]},{type:"int32",data:[p.outChannels/p.inChannels]}];return e.runWebGPUProgram(d,[n,i],n.dtype,m)}var pN={kernelName:$l,backendName:"webgpu",kernelFunc:t9};var lg=class{constructor(t){this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[t,t],this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="diag"}getUserCode(){return`
      ${J("index")} {
        if (index < uniforms.size) {
          let coords = getOutputCoords();
          let value = select(0.0, getX(coords[0]), coords[0] == coords[1]);
          setOutputAtIndex(index, value);
        }
      }
    `}};function r9(r){let{inputs:t,backend:e}=r,{x:o}=t,n=[...o.shape,...o.shape],i=S.sizeFromShape(o.shape),s=he({inputs:{x:o},backend:e,attrs:{shape:[i]}}),a=new lg(i),l=e.runWebGPUProgram(a,[s],s.dtype),u=he({inputs:{x:l},backend:e,attrs:{shape:n}});return e.disposeData(s.dataId),e.disposeData(l.dataId),u}var dN={kernelName:Al,backendName:"webgpu",kernelFunc:r9};var ug=class{constructor(t){this.variableNames=["x","w"],this.uniforms="filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t.outShape,this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="dilation2d"}getUserCode(){return`
       ${J("index")} {
         if (index < uniforms.size) {
           let neg_infinity = -3.4e38;
           let coords = getOutputCoords();
           let batch = coords.x;
           let d1 = coords.w;
           let outTopLeftCorner = coords.yz * uniforms.strides - uniforms.pads;
           let hBeg = outTopLeftCorner.x;
           let wBeg = outTopLeftCorner.y;

           var curVal = neg_infinity;
           for (var h = 0; h < uniforms.filterDims[0]; h = h + 1) {
             let hIn = hBeg + h * uniforms.dilations[0];

             if (hIn >= 0 && hIn < uniforms.xShape[1]) {
               for (var w = 0; w < uniforms.filterDims[1]; w = w + 1) {
                 let wIn = wBeg + w * uniforms.dilations[1];

                 if (wIn >= 0 && wIn < uniforms.xShape[2]) {
                   let val = getX(batch, hIn, wIn, d1) + getW(h, w, d1);
                   if (val > curVal) {
                     curVal = val;
                   }
                 }
               }
             }
           }

           setOutputAtIndex(index, curVal);
         }
       }
     `}};function o9(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,filter:i}=t,{strides:s,pad:a,dilations:l}=o,u=P.computeDilation2DInfo(n.shape,i.shape,s,a,"NHWC",l),c=[u.padInfo.top,u.padInfo.left],p=[{type:"int32",data:[u.filterHeight,u.filterWidth]},{type:"int32",data:[...c]},{type:"int32",data:[u.strideHeight,u.strideWidth]},{type:"int32",data:[u.dilationHeight,u.dilationWidth]}],d=new ug(u);return e.runWebGPUProgram(d,[n,i],n.dtype,p)}var mN={kernelName:Dl,backendName:"webgpu",kernelFunc:o9};var cg=class{constructor(t,e){if(this.variableNames=["x","w","dy"],this.uniforms="filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>, dySize: i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=t.inShape,this.dispatchLayout=ie(t.outShape),this.dispatch=ee(this.dispatchLayout,t.outShape,this.workgroupSize),e!=="float32"&&e!=="int32")throw new Error(`Dilation2DBackpropInput only supports float32 and int32
          types, does not support ${e} type.`);this.type=e,this.shaderKey="dilation2DBackpropInput"}getUserCode(){return`
       ${J("index")} {
         if (index < uniforms.dySize) {
           let coords = getDyCoordsFromIndex(index);
           let b = coords[0];
           let r = coords[1];
           let c = coords[2];
           let d = coords[3];

           let dyCorner = vec2<i32>(r, c) * uniforms.strides - uniforms.pads;
           var curVal = -3.4e38;  // neg_infinity
           var xRMax = 0;
           var xCMax = 0;

           // In the case of multiple argmax branches, we only back-propagate
           // along the last branch, i.e., the one with largest value of
           // 'wR * uniforms.filterDims[1] + wC', similarly to the max-pooling
           // backward routines.
           for (var wR = 0; wR < uniforms.filterDims[0]; wR++) {
             let xR = dyCorner.x + wR * uniforms.dilations[0];

             if (xR >= 0 && xR < uniforms.xShape[1]) {
               for (var wC = 0; wC < uniforms.filterDims[1]; wC++) {
                 let xC = dyCorner.y + wC * uniforms.dilations[1];

                 if (xC >= 0 && xC < uniforms.xShape[2]) {
                   let val = getX(b, xR, xC, d) + getW(wR, wC, d);
                   if (val > curVal) {
                     curVal = val;
                     xRMax = xR;
                     xCMax = xC;
                   }
                 }
               }
             }
           }

           let flatIndexIn = d + uniforms.xShape[3] *
               (xCMax + uniforms.xShape[2] * (xRMax + uniforms.xShape[1] * b));
           let value = getDy(b, r, c, d);
           ${lo("&result[flatIndexIn]","value",this.type)}
         }
       }
     `}},pg=class{constructor(t,e,o){if(this.variableNames=["x","w","dy"],this.uniforms="filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>, dySize: i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=t.filterShape,this.dispatchLayout=ie(t.outShape),this.dispatch=ee(this.dispatchLayout,t.outShape,this.workgroupSize),o!=="float32"&&o!=="int32")throw new Error(`Dilation2DBackpropFilter only supports float32 and int32
          types, does not support ${o} type.`);this.type=o,this.shaderKey="dilation2DBackpropFilter"}getUserCode(){return`
       ${J("index")} {
         if (index < uniforms.dySize) {
           let coords = getDyCoordsFromIndex(index);
           let b = coords[0];
           let r = coords[1];
           let c = coords[2];
           let d = coords[3];

           let dyCorner = vec2<i32>(r, c) * uniforms.strides - uniforms.pads;
           var curVal = -3.4e38;  // neg_infinity
           var wRMax = 0;
           var wCMax = 0;

           // In the case of multiple argmax branches, we only back-propagate
           // along the last branch, i.e., the one with largest value of
           // 'wR * uniforms.filterDims[1] + wC', similarly to the max-pooling
           // backward routines.
           for (var wR = 0; wR < uniforms.filterDims[0]; wR++) {
             let xR = dyCorner.x + wR * uniforms.dilations[0];

             if (xR >= 0 && xR < uniforms.xShape[1]) {
               for (var wC = 0; wC < uniforms.filterDims[1]; wC++) {
                 let xC = dyCorner.y + wC * uniforms.dilations[1];

                 if (xC >= 0 && xC < uniforms.xShape[2]) {
                   let val = getX(b, xR, xC, d) + getW(wR, wC, d);
                   if (val > curVal) {
                     curVal = val;
                     wRMax = wR;
                     wCMax = wC;
                   }
                 }
               }
             }
           }

           let flatIndexIn = d + uniforms.wShape[2] * (wCMax + wRMax * uniforms.wShape[1]);
           let value = getDy(b, r, c, d);
           ${lo("&result[flatIndexIn]","value",this.type)}
         }
       }
     `}};function n9(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,filter:i,dy:s}=t,{strides:a,pad:l,dilations:u}=o,c=P.computeDilation2DInfo(n.shape,i.shape,a,l,"NHWC",u),p=i.dtype,d=new pg(c,i.shape,p),m=[{type:"int32",data:[c.filterHeight,c.filterWidth]},{type:"int32",data:[c.padInfo.top,c.padInfo.left]},{type:"int32",data:[c.strideHeight,c.strideWidth]},{type:"int32",data:[c.dilationHeight,c.dilationWidth]},{type:"int32",data:[S.sizeFromShape(c.outShape)]}],f=_t({backend:e,attrs:{shape:i.shape,value:0,dtype:p}});return e.runWebGPUProgram(d,[n,i,s],p,m,f)}var fN={kernelName:mw,backendName:"webgpu",kernelFunc:n9};function i9(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,filter:i,dy:s}=t,{strides:a,pad:l,dilations:u}=o,c=P.computeDilation2DInfo(n.shape,i.shape,a,l,"NHWC",u),p=n.dtype,d=new cg(c,p),m=[{type:"int32",data:[c.filterHeight,c.filterWidth]},{type:"int32",data:[c.padInfo.top,c.padInfo.left]},{type:"int32",data:[c.strideHeight,c.strideWidth]},{type:"int32",data:[c.dilationHeight,c.dilationWidth]},{type:"int32",data:[S.sizeFromShape(c.outShape)]}],f=_t({backend:e,attrs:{shape:c.inShape,value:0,dtype:p}});return e.runWebGPUProgram(d,[n,i,s],p,m,f)}var hN={kernelName:dw,backendName:"webgpu",kernelFunc:i9};var dg=class{constructor(t,e,o){this.variableNames=["Image"],this.uniforms="alpha: f32,",this.workgroupSize=[64,1,1],this.pixelsOpType=os.DRAW,this.size=!0,this.outputShape=t,this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize),this.type=e,this.textureFormat=o,this.shaderKey=`draw_${e}_${o}`}getUserCode(){let t,e=this.type==="float32"?"value":"value / 255.0";return t=`
      if (uniforms.numChannels == 1) {
        rgba[0] = ${e};
        rgba[1] = ${e};
        rgba[2] = ${e};
      } else {
        rgba[d] = ${e};
      }`,`
       @group(0) @binding(0) var outImage : texture_storage_2d<${this.textureFormat}, write>;
       ${J("index")} {
         if (index < uniforms.size) {
           var rgba = vec4<f32>(0.0, 0.0, 0.0, uniforms.alpha);
           for (var d = 0; d < uniforms.numChannels; d = d + 1) {
             let value = f32(inBuf[index * uniforms.numChannels + d]);
             ${t}
           }
           rgba.x = rgba.x * rgba.w;
           rgba.y = rgba.y * rgba.w;
           rgba.z = rgba.z * rgba.w;
           let coords = getCoordsFromIndex(index);
           textureStore(outImage, vec2<i32>(coords.yx), rgba);
         }
       }
      `}};function s9(r){let{inputs:t,backend:e,attrs:o}=r,{image:n}=t,{canvas:i,options:s}=o,[a,l]=n.shape.slice(0,2),{imageOptions:u}=s||{},c=u?.alpha||1,p=e.device.features.has("bgra8unorm-storage")?"bgra8unorm":"rgba8unorm",d=[a,l],m=new dg(d,n.dtype,p);i.width=l,i.height=a;let f="webgpu",g=i.getContext(f),x;g||(x=new OffscreenCanvas(l,a),g=x.getContext(f));let y=n.shape.length===3?n.shape[2]:1;g.configure({device:e.device,format:p,usage:GPUTextureUsage.STORAGE_BINDING,alphaMode:"premultiplied"});let b="int32",I=e.makeTensorInfo(d,b),N=e.tensorMap.get(I.dataId);N.resource=g.getCurrentTexture(),N.external=!0;let M=[{type:"uint32",data:[y]},{type:"float32",data:[c]}];if(e.runWebGPUProgram(m,[n],b,M,I),x){let B=i.getContext("2d");if(!B)throw new Error("Please make sure this canvas has only been used for 2d or webgpu context!");B.drawImage(x,0,0)}return e.disposeData(I.dataId),n}var gN={kernelName:Sp,backendName:"webgpu",kernelFunc:s9};var Sb=Ze({opType:Ce.MUL,cpuKernelImpl:QT,supportsComplex:!0}),xN={kernelName:Ri,backendName:"webgpu",kernelFunc:Sb};function wb(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{axis:i,keepDims:s}=o;return po(n,i,s,"sum",e)}var yN={kernelName:Bu,backendName:"webgpu",kernelFunc:wb};function a9(r){let{inputs:t,backend:e,attrs:o}=r,{equation:n}=o,i=t,{allDims:s,summedDims:a,idDims:l}=P.decodeEinsumEquation(n,i.length);P.checkEinsumDimSizes(s.length,l,i);let{path:u,steps:c}=P.getEinsumComputePath(a,l),p=c.length,d=null,m=s.length,f=[];for(let g=0;g<p;++g){for(let x of c[g]){let{permutationIndices:y,expandDims:b}=P.getEinsumPermutation(m,l[x]),I;P.isIdentityPermutation(y)?I=i[x]:(I=xr({inputs:{x:i[x]},backend:e,attrs:{perm:y}}),f.push(I));let N=I.shape.slice();for(let M=0;M<b.length;++M)N.splice(b[M],0,1);S.arraysEqual(I.shape,N)||(I=he({inputs:{x:I},backend:e,attrs:{shape:N}}),f.push(I)),d===null?d=I:(d=Sb({inputs:{a:I,b:d},backend:e}),f.push(d))}g<p-1&&(u[g]>=0&&(d=wb({inputs:{x:d},backend:e,attrs:{axis:u[g]-(s.length-m),keepDims:!1}}),f.push(d)),m--)}for(let g of f)g!==d&&e.disposeData(g.dataId);return d}var vN={kernelName:Ol,backendName:"webgpu",kernelFunc:a9};var l9=ke({opType:ae.ELU}),bN={kernelName:Ll,backendName:"webgpu",kernelFunc:l9};var u9=r=>{let{inputs:t,backend:e}=r,{dy:o,y:n}=t,i=new Jn(Ce.ELU_DER,o.shape,n.shape);return e.runWebGPUProgram(i,[o,n],o.dtype)},SN={kernelName:fm,backendName:"webgpu",kernelFunc:u9};var c9=Ze({opType:Ce.EQUAL,dtype:"bool",cpuKernelImpl:OT}),wN={kernelName:yi,backendName:"webgpu",kernelFunc:c9};var p9=ke({opType:ae.ERF}),_N={kernelName:Ml,backendName:"webgpu",kernelFunc:p9};var d9=ke({opType:ae.EXP,cpuKernelImpl:LT,dtype:"float32"}),CN={kernelName:vi,backendName:"webgpu",kernelFunc:d9};function mg(r){let{inputs:t,attrs:e,backend:o}=r,{dim:n}=e,{input:i}=t,s=i.shape.length,a=i.shape.slice(),l=n;return n<0&&(S.assert(-(s+1)<=n,()=>`Axis must be in the interval [${-(s+1)}, ${s}]`),l=s+n+1),a.splice(l,0,1),he({inputs:{x:i},backend:o,attrs:{shape:a}})}var kN={kernelName:Bl,backendName:"webgpu",kernelFunc:mg};var m9=ke({opType:ae.EXPM1,cpuKernelImpl:MT}),IN={kernelName:bi,backendName:"webgpu",kernelFunc:m9};var Jp=class{constructor(t,e){this.variableNames=["real","imag"],this.outputShape=[],this.uniforms="exponentMultiplier : f32, denominator: f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize),this.component=t,this.shaderKey=`fft_${t}`}getUserCode(){return`
    fn unaryOpComplex(real: f32, expR: f32, imag: f32, expI: f32) -> f32 {
      ${this.component==="real"?"return real * expR - imag * expI;":"return real * expI + imag * expR;"}
    }

    fn mulMatDFT(batch: i32, index: i32) -> f32 {
      let indexRatio = f32(index) / f32(uniforms.realShape[1]);
      let exponentMultiplierTimesIndexRatio =
          uniforms.exponentMultiplier * indexRatio;

      var result = 0.0;

      for (var i = 0; i < uniforms.realShape[1]; i = i + 1) {
        // x = (-2|2 * PI / N) * index * i;
        let x = exponentMultiplierTimesIndexRatio * f32(i);
        let expR = cos(x);
        let expI = sin(x);
        let real = getReal(batch, i);
        let imag = getImag(batch, i);

        result = result +
            unaryOpComplex(real, expR, imag, expI) / uniforms.denominator;
      }

      return result;
    }

    ${J("index")} {
      if (index < uniforms.size) {
        let coords = getOutputCoords();
        setOutputAtIndex(index, mulMatDFT(coords[0], coords[1]));
      }
    }
  `}};function fg(r,t,e){let o=e.tensorMap.get(r.dataId),n=S.sizeFromShape(r.shape),i=r.shape[r.shape.length-1],s=n/i,a=[],l=he({inputs:{x:r},backend:e,attrs:{shape:[s,i]}});a.push(l);let u=l.shape,c=new Jp("real",u),p=new Jp("imag",u),d=[{dataId:o.complexTensorInfos.real.dataId,dtype:o.complexTensorInfos.real.dtype,shape:u},{dataId:o.complexTensorInfos.imag.dataId,dtype:o.complexTensorInfos.imag.dtype,shape:u}],m=t?2*Math.PI:-2*Math.PI,f=t?u[1]:1,g=[{type:"float32",data:[m]},{type:"float32",data:[f]}],x=e.runWebGPUProgram(c,d,"float32",g);a.push(x);let y=e.runWebGPUProgram(p,d,"float32",g);a.push(y);let b=ko({inputs:{real:x,imag:y},backend:e});a.push(b);let I=he({inputs:{x:b},backend:e,attrs:{shape:r.shape}});return a.forEach(N=>e.disposeData(N.dataId)),I}function f9(r){let{inputs:t,backend:e}=r,{input:o}=t;return fg(o,!1,e)}var TN={kernelName:Vl,backendName:"webgpu",kernelFunc:f9};var hg=class{constructor(t){this.outputShape=[],this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="flipLeftRight"}getUserCode(){return`
      ${J("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let coordX = uniforms.xShape[2] - coords[2] - 1;
          let outputValue = getX(coords[0], coords[1], coordX, coords[3]);
          setOutputAtIndex(index, outputValue);
        }
      }
    `}};var EN={kernelName:Ul,backendName:"webgpu",kernelFunc:({inputs:r,backend:t})=>{let{image:e}=r,o=t,n=new hg(e.shape);return o.runWebGPUProgram(n,[e],e.dtype)}};var h9=ke({opType:ae.FLOOR,cpuKernelImpl:BT}),NN={kernelName:Si,backendName:"webgpu",kernelFunc:h9};var g9=Ze({opType:Ce.FLOOR_DIV,cpuKernelImpl:VT,dtype:"int32"}),RN={kernelName:wi,backendName:"webgpu",kernelFunc:g9};var gg=class{constructor(t,e,o=!1){this.pixelsOpType=os.FROM_PIXELS,this.outputShape=[0],this.variableNames=[],this.workgroupSize=[256,1,1],this.outputShape=t,this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize,[e,1,1]),this.importVideo=o,this.shaderKey=`fromPixels_${this.importVideo}`}getUserCode(){let t=this.importVideo?"textureLoad(src, vec2<i32>(coords.yx));":"textureLoad(src, vec2<i32>(coords.yx), 0)";return`
      @binding(1) @group(0) var src: ${this.importVideo?"texture_external":"texture_2d<f32>"};
      ${J("index")} {
        let flatIndex = index * uniforms.numChannels;
        if (flatIndex < uniforms.size) {
          let coords = getCoordsFromIndex(flatIndex);
          let values = ${t};
          for (var i = 0; i < uniforms.numChannels; i = i + 1) {
            result[flatIndex + i] = i32(floor(255.0 * values[i]));
          }
        }
      }
  `}};var PN={kernelName:Ns,backendName:"webgpu",kernelFunc:x9},Fc,_b=G().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");function x9(r){let{inputs:t,backend:e,attrs:o}=r,{pixels:n}=t,{numChannels:i}=o;if(n==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let s=typeof HTMLVideoElement<"u"&&n instanceof HTMLVideoElement,a=typeof HTMLImageElement<"u"&&n instanceof HTMLImageElement,l=typeof HTMLCanvasElement<"u"&&n instanceof HTMLCanvasElement||typeof OffscreenCanvas<"u"&&n instanceof OffscreenCanvas,u=typeof ImageBitmap<"u"&&n instanceof ImageBitmap,[c,p]=s?[n.videoWidth,n.videoHeight]:[n.width,n.height],d=[p,c,i],m=G().getBool("WEBGPU_IMPORT_EXTERNAL_TEXTURE")&&s,f=s||a;if(u||l||f){let b;if(m)b=e.device.importExternalTexture({source:n});else{if(f){let pe=G().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(Fc==null||pe!==_b)&&(_b=pe,Fc=document.createElement("canvas").getContext("2d",{willReadFrequently:_b})),Fc.canvas.width=c,Fc.canvas.height=p,Fc.drawImage(n,0,0,c,p),n=Fc.canvas}let X=GPUTextureUsage.COPY_DST|GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.TEXTURE_BINDING,ce=e.textureManager.acquireTexture(d[1],d[0],"rgba8unorm",X);e.queue.copyExternalImageToTexture({source:n},{texture:ce},[d[1],d[0]]),b=ce}let I=S.sizeFromShape(d),N=S.computeStrides(d),M=new gg(d,i,m),B=[{type:"uint32",data:[I]},{type:"uint32",data:[i]},{type:"uint32",data:[...N]}],W=e.makeTensorInfo([p,c],"int32"),H=e.tensorMap.get(W.dataId);H.resource=b;let K=e.runWebGPUProgram(M,[W],"int32",B);return e.disposeData(W.dataId),K}let g=n.data,x=g;if(i!=null&&i!==4){x=new Uint8Array(n.width*n.height*i);let b=g.length,I=0;for(let N=0;N<b;N++)N%4<i&&(x[I++]=g[N])}let y=e.makeTensorInfo(d,"int32",new Int32Array(x));return e.uploadToGPU(y.dataId),y}var xg=class{constructor(t,e,o,n,i){this.uniforms="varianceEpsilon : f32,",this.workgroupSize=[128,1,1],this.size=!0,this.variableNames=["x","mean","variance"],P.assertAndGetBroadcastShape(t,e),P.assertAndGetBroadcastShape(t,o),this.outputShape=t,this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize),n!=null&&(P.assertAndGetBroadcastShape(t,n),this.variableNames.push("offset")),i!=null&&(P.assertAndGetBroadcastShape(t,i),this.variableNames.push("scale")),this.offsetShape=n,this.scaleShape=i,this.shaderKey="batchNorm"}getUserCode(){let t="0.0";this.offsetShape!=null&&(t="getOffsetByOutputIndex(index)");let e="1.0";return this.scaleShape!=null&&(e="getScaleByOutputIndex(index)"),`
      ${J("index")} {
        if (index < uniforms.size)
        {
          let xValue = getXByOutputIndex(index);
          let meanValue = getMeanByOutputIndex(index);
          let varianValue = getVarianceByOutputIndex(index);
          let offsetValue = ${t};
          let scaleValue = ${e};
          let inv = scaleValue * inverseSqrt(varianValue + f32(uniforms.varianceEpsilon));
          setOutputAtIndex(index,dot(vec3<f32>(xValue, -meanValue, offsetValue), vec3<f32>(inv, inv, 1.0)));
        }
      }
  `}};var $N={kernelName:zl,backendName:"webgpu",kernelFunc:({inputs:r,attrs:t,backend:e})=>{let{x:o,scale:n,offset:i,mean:s,variance:a}=r,{varianceEpsilon:l}=t,u=e,c=[o,s,a],p=null;i!=null&&(p=i.shape,c.push(i));let d=null;n!=null&&(d=n.shape,c.push(n));let m=new xg(o.shape,s.shape,a.shape,p,d),f=[{type:"float32",data:[l]}];return u.runWebGPUProgram(m,c,o.dtype,f)}};function y9(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,filter:i,bias:s,preluActivationWeights:a}=t,{strides:l,pad:u,dataFormat:c,dilations:p,dimRoundingMode:d,activation:m,leakyreluAlpha:f}=o,g=P.convertConv2DDataFormat(c),x=P.computeConv2DInfo(n.shape,i.shape,l,p,u,d,!1,g);return Xh({x:n,filter:i,convInfo:x,backend:e,bias:s,preluActivationWeights:a,leakyreluAlpha:f,activation:m})}var AN={kernelName:Ps,backendName:"webgpu",kernelFunc:y9};function v9(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,filter:i,bias:s,preluActivationWeights:a}=t,{strides:l,pad:u,dilations:c,dimRoundingMode:p,activation:d,leakyreluAlpha:m}=o,f=c;f==null&&(f=[1,1]),S.assert(P.eitherStridesOrDilationsAreOne(l,f),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${f}'`);let g=P.computeConv2DInfo(n.shape,i.shape,l,f,u,p,!0),x=[n,i],y=s!=null,b=a!=null;y&&x.push(s),b&&x.push(a);let I=[{type:"int32",data:[g.padInfo.top,g.padInfo.left]},{type:"int32",data:[g.inHeight,g.inWidth]}],N;return g.outHeight>4&&g.outWidth>4&&g.strideWidth<=2&&g.inChannels===g.outChannels&&g.dilationHeight===1&&g.dilationWidth===1&&g.inChannels%4===0?(N=new Ac(g,y,d,b),I.push({type:"int32",data:[N.virtualWidth]})):(N=new Dc(g,y,d,b),I.push({type:"int32",data:[g.filterHeight]},{type:"int32",data:[g.filterWidth]},{type:"int32",data:[g.strideHeight,g.strideWidth]},{type:"int32",data:[g.dilationHeight,g.dilationWidth]})),d==="leakyrelu"&&(I.push({type:"float32",data:[m]}),N.uniforms+=" alpha : f32,"),e.runWebGPUProgram(N,x,"float32",I)}var DN={kernelName:$s,backendName:"webgpu",kernelFunc:v9};var yg=class{constructor(t,e){this.variableNames=["A","indices"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey=`gathernd_${t}`,this.sliceDim=t,this.uniforms=`sliceDim : i32, strides : ${mt(t)},`}getUserCode(){let t;return this.sliceDim>1?t="uniforms.strides[j]":t="uniforms.strides",`
      ${J("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          var flattenIndex = 0;
          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
            let indexTemp = i32(round(getIndices(coords[0], j)));
            let strideNum = ${t};
            flattenIndex = flattenIndex + indexTemp * strideNum;
          }

          setOutputAtIndex(index, getA(flattenIndex, coords[1]));
        }
      }
      `}};function b9(r){let{inputs:t,backend:e}=r,{params:o,indices:n}=t,i=n.shape,s=i[i.length-1],a=S.sizeFromShape(o.shape),[l,u,c,p]=P.prepareAndValidate(o,n),d=he({inputs:{x:n},backend:e,attrs:{shape:[u,s]}}),m=he({inputs:{x:o},backend:e,attrs:{shape:[S.sizeFromShape(o.shape)/c,c]}});if(e.shouldExecuteOnCPU([o,n])||o.dtype==="string"){let b=e.readSync(n.dataId),I=e.bufferSync(o),N=WT(b,I,o.dtype,u,s,c,p,o.shape,a);return e.makeTensorInfo(l,o.dtype,N.values)}let f=new yg(s,[u,c]),g=[{type:"int32",data:[s]},{type:"int32",data:p}],x=e.runWebGPUProgram(f,[m,d],m.dtype,g),y=he({inputs:{x},backend:e,attrs:{shape:l}});return e.disposeData(d.dataId),e.disposeData(m.dataId),e.disposeData(x.dataId),y}var FN={kernelName:Hl,backendName:"webgpu",kernelFunc:b9};var vg=class{constructor(t,e){this.variableNames=["A","indices"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t.slice(),this.aShape=t,this.outputShape=e,this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="gather"}getUserCode(){let t=S9(this.aShape);return`
      ${J("index")} {
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          let indexZ = i32(getIndices(resRC.x, resRC.z));
          let inBounds = select(0.0, 1.0, indexZ >= 0 && indexZ < uniforms.aShape[2]);
          setOutputAtIndex(index, inBounds * getA(${t}));
        }
      }
    `}};function S9(r){let t=["resRC.x","resRC.y","resRC.z","resRC.w"],e=[];for(let o=0;o<r.length;o++)o===2?e.push("indexZ"):e.push(`${t[o]}`);return e.join()}function Cb(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,indices:i}=t,{axis:s,batchDims:a}=o,l=S.parseAxisParam(s,n.shape)[0],u=P.segment_util.collectGatherOpShapeInfo(n,i,l,a),c=S.sizeFromShape(i.shape),p=[],d=he({inputs:{x:n},backend:e,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),m=he({inputs:{x:i},backend:e,attrs:{shape:[u.batchSize,c/u.batchSize]}});p.push(d),p.push(m);let f=[u.batchSize,u.outerSize,c/u.batchSize,u.sliceSize];if(e.shouldExecuteOnCPU([n,i])){let I=e.tensorMap.get(m.dataId).values,N=Le(m.shape,m.dtype,I),B=e.tensorMap.get(d.dataId).values,W=Le(d.shape,d.dtype,B),H=UT(W,N,f);return p.forEach(K=>e.disposeData(K.dataId)),e.makeTensorInfo(u.outputShape,H.dtype,H.values)}let g=new vg(d.shape,f),x=e.runWebGPUProgram(g,[d,m],d.dtype);p.push(x);let y=he({inputs:{x},backend:e,attrs:{shape:u.outputShape}});return p.forEach(b=>e.disposeData(b.dataId)),y}var ON={kernelName:Gl,backendName:"webgpu",kernelFunc:Cb};var w9=Ze({opType:Ce.GREATER,cpuKernelImpl:GT,dtype:"bool"}),LN={kernelName:_i,backendName:"webgpu",kernelFunc:w9};var _9=Ze({opType:Ce.GREATER_EQUAL,dtype:"bool",cpuKernelImpl:zT}),MN={kernelName:Ci,backendName:"webgpu",kernelFunc:_9};function C9(r){let{inputs:t,backend:e}=r,{input:o}=t;return fg(o,!0,e)}var BN={kernelName:Kl,backendName:"webgpu",kernelFunc:C9};var k9=ke({opType:ae.IS_FINITE,dtype:"bool"}),VN={kernelName:jl,backendName:"webgpu",kernelFunc:k9};var I9=ke({opType:ae.IS_INF,dtype:"bool"}),WN={kernelName:Xl,backendName:"webgpu",kernelFunc:I9};var T9=ke({opType:ae.IS_NAN,dtype:"bool"}),UN={kernelName:Yl,backendName:"webgpu",kernelFunc:T9};function E9(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{alpha:i}=o,s=[{type:"float32",data:[i]}],a=new co(n.shape,ae.LEAKYRELU,"alpha : f32,");return e.runWebGPUProgram(a,[n],"float32",s)}var zN={kernelName:Ql,backendName:"webgpu",kernelFunc:E9};var N9=Ze({opType:Ce.LESS,dtype:"bool",cpuKernelImpl:KT}),GN={kernelName:ki,backendName:"webgpu",kernelFunc:N9};var R9=Ze({opType:Ce.LESS_EQUAL,dtype:"bool",cpuKernelImpl:HT}),HN={kernelName:Ii,backendName:"webgpu",kernelFunc:R9};var bg=class{constructor(t){this.variableNames=[],this.outputShape=[],this.uniforms="start : f32, step : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[t],this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="linSpace"}getUserCode(){return`
      ${J("index")} {
        if (index < uniforms.size) {
          setOutputAtIndex(index, uniforms.start + f32(index) * uniforms.step);
        }
      }
    `}};function P9(r){let{backend:t,attrs:e}=r,{start:o,stop:n,num:i}=e,s=(n-o)/(i-1),a=new bg(i),l=[{type:"float32",data:[o]},{type:"float32",data:[s]}];return t.runWebGPUProgram(a,[],"float32",l)}var KN={kernelName:Zl,backendName:"webgpu",kernelFunc:P9};var $9=ke({opType:ae.LOG,cpuKernelImpl:qT}),qN={kernelName:Ti,backendName:"webgpu",kernelFunc:$9};var A9=ke({opType:ae.LOG1P}),jN={kernelName:Jl,backendName:"webgpu",kernelFunc:A9};var D9=Ze({opType:Ce.LOGICAL_AND,dtype:"bool"}),XN={kernelName:eu,backendName:"webgpu",kernelFunc:D9};var F9=ke({opType:ae.LOGICAL_NOT}),YN={kernelName:tu,backendName:"webgpu",kernelFunc:F9};var O9=Ze({opType:Ce.LOGICAL_OR}),QN={kernelName:ru,backendName:"webgpu",kernelFunc:O9};var ZN=`
  var powValue = 0.0;
  let basis = uniforms.bias + uniforms.alpha * sum;
  if (uniforms.beta == 0.5) {
    powValue = inverseSqrt(basis);
  } else if (uniforms.beta == 1.0) {
    powValue = 1.0 / basis;
  } else {
    powValue = exp(log(basis) * (-uniforms.beta));
  }
`,Sg=class{constructor(t){this.outputShape=[],this.variableNames=["x"],this.uniforms="radius : i32, bias : f32, alpha : f32, beta : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="lrn"}getUserCode(){return`
    ${J("index")} {
      if (index < uniforms.size) {
        let coords = getOutputCoords();
        let b = coords[0];
        let r = coords[1];
        let c = coords[2];
        let d = coords[3];

        let x = getX(b, r, c, d);
        var sum = 0.0;
        for (var i = -uniforms.radius; i <= uniforms.radius; i = i + 1) {
          let idx = d + i;
          if (idx >= 0 && idx < uniforms.xShape[3]) {
            let z = getX(b, r, c, idx);
            sum = sum + z * z;
          }
        }
        ${ZN}

        setOutputAtIndex(index, x * powValue);
      }
    }
  `}},wg=class{constructor(t,e){this.outputShape=[],this.variableNames=["x"],this.uniforms="radius : i32, bias : f32, alpha : f32, beta : f32,",this.workgroupSize=[256,1,1],this.maxAllowRadius=16,S.assert(e<=this.maxAllowRadius,()=>`Radius must be less than or equal to ${this.maxAllowRadius}, current radius is ${e}`),this.outputShape=t,this.elementsPerWorkgroup=this.workgroupSize[0]-2*this.maxAllowRadius,this.dispatchLayout={x:[3],y:[2],z:[0,1]},this.dispatch=ee(this.dispatchLayout,this.outputShape,[this.elementsPerWorkgroup,this.workgroupSize[1],this.workgroupSize[2]]),this.shaderKey="lrn_shared"}getUserCode(){return`
    var <workgroup>lrnSub: array<f32, ${this.workgroupSize[0]}>;
    const elementsPerWorkgroup = ${this.elementsPerWorkgroup};
    const maxAllowRadius = ${this.maxAllowRadius};

    ${J()} {
      let localDepth = i32(localId.x);
      let workgroupDepth = i32(workgroupId.x) * elementsPerWorkgroup;
      let xDepth = workgroupDepth + localDepth - maxAllowRadius;
      let b = i32(globalId.z) / uniforms.xShape[1];
      let r = i32(globalId.z) - b * uniforms.xShape[1];
      let c = i32(globalId.y);
      let d = workgroupDepth + localDepth;

      var x = 0.0;
      if (xDepth >= 0 && xDepth < uniforms.xShape[3]) {
        x = getX(b, r, c, xDepth);
      }
      lrnSub[localDepth] = x;
      workgroupBarrier();

      if (localDepth < elementsPerWorkgroup && d < uniforms.outShape[3]) {
        var sum = 0.0;
        let index = localDepth + maxAllowRadius;
        for (var i = -uniforms.radius; i <= uniforms.radius; i = i + 1) {
          let z = lrnSub[index + i];
          sum = sum + z * z;
        }
        ${ZN}

        setOutputAtCoords(b, r, c, d, lrnSub[index] * powValue);
      }
    } `}};function L9(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{depthRadius:i,bias:s,alpha:a,beta:l}=o,u;i>16?u=new Sg(n.shape):u=new wg(n.shape,i);let c=[{type:"int32",data:[i]},{type:"float32",data:[s]},{type:"float32",data:[a]},{type:"float32",data:[l]}];return e.runWebGPUProgram(u,[n],n.dtype,c)}var JN={kernelName:ou,backendName:"webgpu",kernelFunc:L9};var _g=class{constructor(t){this.outputShape=[],this.variableNames=["inputImage","outputImage","dy"],this.uniforms="depthRadius : i32, bias : f32, alpha : f32, beta : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="lrn_grad"}getUserCode(){return`
    ${J("index")} {
      if (index < uniforms.size) {
        let coords = getOutputCoords();
        let b = coords[0];
        let r = coords[1];
        let c = coords[2];

        let MIN_DEPTH_BEGIN = 0;
        let MAX_DEPTH_END = uniforms.outShape[3];
        var result = 0.0;
        for (var d = MIN_DEPTH_BEGIN; d < MAX_DEPTH_END; d++) {
          let depthBegin = max(MIN_DEPTH_BEGIN, d - uniforms.depthRadius);
          let depthEnd = min(MAX_DEPTH_END, d + uniforms.depthRadius + 1);

          var norm = 0.0;
          for (var k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; k++) {
            if (k < depthBegin) {
              continue;
            } else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            } else {
              break;
            }
          }

          norm = uniforms.alpha * norm + uniforms.bias;

          for (var k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; k++) {
            if (k < depthBegin) {
              continue;
            } else if (k >= depthBegin && k < depthEnd) {
              var dyi = -2.0 * uniforms.alpha * uniforms.beta
                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d) / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * uniforms.beta);
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            } else {
              break;
            }
          }
        }

        setOutputAtIndex(index, result);
      }
    }
  `}};function M9(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,y:i,dy:s}=t,{depthRadius:a,bias:l,alpha:u,beta:c}=o,p=new _g(n.shape),d=[{type:"int32",data:[a]},{type:"float32",data:[l]},{type:"float32",data:[u]},{type:"float32",data:[c]}];return e.runWebGPUProgram(p,[n,i,s],n.dtype,d)}var eR={kernelName:hm,backendName:"webgpu",kernelFunc:M9};var B9=Ze({opType:Ce.MAX,cpuKernelImpl:XT}),tR={kernelName:Ei,backendName:"webgpu",kernelFunc:B9};function V9(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{filterSize:i,strides:s,pad:a,dimRoundingMode:l}=o,c=P.computePool2DInfo(n.shape,i,s,1,a,l);return Oh(n,c,"max",e)}var rR={kernelName:iu,backendName:"webgpu",kernelFunc:V9};function W9(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{filterSize:i,strides:s,pad:a,dataFormat:l,dimRoundingMode:u}=o,c=[1,1,1],p=P.computePool3DInfo(n.shape,i,s,c,a,u,l),d=new is(p,"max"),m=[{type:"int32",data:[p.strideDepth,p.strideHeight,p.strideWidth]},{type:"int32",data:[p.padInfo.front,p.padInfo.top,p.padInfo.left]},{type:"int32",data:[p.inDepth,p.inHeight,p.inWidth]},{type:"int32",data:[p.effectiveFilterDepth,p.effectiveFilterHeight,p.effectiveFilterWidth]}];return e.runWebGPUProgram(d,[n],n.dtype,m)}var oR={kernelName:su,backendName:"webgpu",kernelFunc:W9};var Cg=class{constructor(t){this.variableNames=["dy","maxPos"],this.uniforms=`strides : vec2<i32>, pads : vec2<i32>, dilations : vec2<i32>, filterDims : vec2<i32>,
       outHeight : i32, outWidth : i32`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t.inShape,this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="maxPool2DBackprop"}getUserCode(){return`
      ${J("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords[0];
        let d = coords[3];

        let dyRCCorner = vec2<i32>(coords.yz) - uniforms.pads;
        let dyRCorner = dyRCCorner.x;
        let dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        let lastIndex = uniforms.filterDims[0] * uniforms.filterDims[1] - 1;
        for (var wR = 0; wR < uniforms.filterDims[0]; wR += uniforms.dilations[0]) {
          let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[0]);

          if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
            continue;
          }
          let idyR = i32(dyR);

          for (var wC = 0; wC < uniforms.filterDims[1]; wC += uniforms.dilations[1]) {
            let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[1]);

            if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
              continue;
            }
            let idyC = i32(dyC);

            let dyValue = getDy(batch, idyR, idyC, d);
            let maxPosValue = lastIndex - i32(getMaxPos(batch, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            let curPosValue = wR * uniforms.filterDims[1] + wC;
            let mask = select(0.0, 1.0, maxPosValue == curPosValue);
            dotProd += dyValue * mask;
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
    `}},kg=class{constructor(t){this.variableNames=["dy","maxPos"],this.uniforms=`strides : vec3<i32>, pads : vec3<i32>, filterDims : vec3<i32>,
      outDepth : i32, outHeight : i32, outWidth : i32`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t.inShape,this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="maxPool3DBackprop"}getUserCode(){return`
      ${J("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords.x;
        let ch = coords.u;

        let dyCorner = vec3<i32>(coords.y, coords.z, coords.w) - uniforms.pads;
        let dyDCorner = dyCorner.x;
        let dyRCorner = dyCorner.y;
        let dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        let lastIndex = uniforms.filterDims[0] * uniforms.filterDims[1] * uniforms.filterDims[2] - 1;

        for (var wD = 0; wD < uniforms.filterDims[0]; wD++) {
          let dyD = f32(dyDCorner + wD) / f32(uniforms.strides[0]);

          if (dyD < 0.0 || dyD >= f32(uniforms.outDepth) || fract(dyD) > 0.0) {
            continue;
          }
          let idyD = i32(dyD);

          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {
            let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[1]);

            if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
              continue;
            }
            let idyR = i32(dyR);

            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {
              let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[2]);

              if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
                continue;
              }
              let idyC = i32(dyC);

              let dyValue = getDy(batch, idyD, idyR, idyC, ch);
              let maxPosValue = lastIndex - i32(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              let curPosValue = wD * uniforms.filterDims[1] * uniforms.filterDims[2] + wR * uniforms.filterDims[2] + wC;
              let mask = select(0.0, 1.0, maxPosValue == curPosValue);
              dotProd += dyValue * mask;
            }
          }
        }

        setOutputAtIndex(index, dotProd);
      }
    }
    `}};function U9(r){let{inputs:t,backend:e,attrs:o}=r,{dy:n,input:i}=t,s=i,{filterSize:a,strides:l,pad:u,dimRoundingMode:c}=o,p=[1,1,1],d=P.computePool3DInfo(s.shape,a,l,p,u,c),m=new is(d,"max",!0),f=[{type:"int32",data:[d.strideDepth,d.strideHeight,d.strideWidth]},{type:"int32",data:[d.padInfo.front,d.padInfo.top,d.padInfo.left]},{type:"int32",data:[d.inDepth,d.inHeight,d.inWidth]},{type:"int32",data:[d.effectiveFilterDepth,d.effectiveFilterHeight,d.effectiveFilterWidth]}],g=e.runWebGPUProgram(m,[s],"int32",f),x=new kg(d);f=[{type:"int32",data:[d.strideDepth,d.strideHeight,d.strideWidth]},{type:"int32",data:[d.effectiveFilterDepth-1-d.padInfo.front,d.effectiveFilterHeight-1-d.padInfo.top,d.effectiveFilterWidth-1-d.padInfo.left]},{type:"int32",data:[d.effectiveFilterDepth,d.effectiveFilterHeight,d.effectiveFilterWidth]},{type:"int32",data:[d.outDepth]},{type:"int32",data:[d.outHeight]},{type:"int32",data:[d.outWidth]}];let y=e.runWebGPUProgram(x,[n,g],s.dtype,f);return e.disposeData(g.dataId),y}var nR={kernelName:xm,backendName:"webgpu",kernelFunc:U9};function z9(r){let{inputs:t,backend:e,attrs:o}=r,{dy:n,input:i,output:s}=t,a=i;Hp([i,s],"maxPoolGrad");let{filterSize:l,strides:u,pad:c,dimRoundingMode:p}=o,d=P.computePool2DInfo(a.shape,l,u,1,c,p),m=new In(d,"max",!0),f=[{type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.padInfo.top,d.padInfo.left]},{type:"int32",data:[d.dilationHeight,d.dilationWidth]},{type:"int32",data:[d.inHeight,d.inWidth]},{type:"int32",data:[d.effectiveFilterHeight,d.effectiveFilterWidth]}],g=e.runWebGPUProgram(m,[a],"int32",f),x=new Cg(d);f=[{type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.effectiveFilterHeight-1-d.padInfo.top,d.effectiveFilterWidth-1-d.padInfo.left]},{type:"int32",data:[d.dilationHeight,d.dilationWidth]},{type:"int32",data:[d.effectiveFilterHeight,d.effectiveFilterWidth]},{type:"int32",data:[d.outHeight]},{type:"int32",data:[d.outWidth]}];let y=e.runWebGPUProgram(x,[n,g],a.dtype,f);return e.disposeData(g.dataId),y}var iR={kernelName:gm,backendName:"webgpu",kernelFunc:z9};function G9(r){let{inputs:t,backend:e,attrs:o}=r,{filterSize:n,strides:i,pad:s,includeBatchInIndex:a}=o,{x:l}=t;S.assert(l.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${l.shape.length}.`);let u=[1,1];S.assert(P.eitherStridesOrDilationsAreOne(i,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);let c=P.computePool2DInfo(l.shape,n,i,u,s),p=[{type:"int32",data:[c.strideHeight,c.strideWidth]},{type:"int32",data:[c.padInfo.top,c.padInfo.left]},{type:"int32",data:[c.dilationHeight,c.dilationWidth]},{type:"int32",data:[c.inHeight,c.inWidth]},{type:"int32",data:[c.effectiveFilterHeight,c.effectiveFilterWidth]}],d=new In(c,"max",!1),m=e.runWebGPUProgram(d,[l],l.dtype,p);d=new In(c,"max",!0,!0,a);let f=e.runWebGPUProgram(d,[l],"int32",p);return[m,f]}var sR={kernelName:au,backendName:"webgpu",kernelFunc:G9};function H9(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{axis:i,keepDims:s}=o;return po(n,i,s,"min",e)}var aR={kernelName:uu,backendName:"webgpu",kernelFunc:H9};var K9=Ze({opType:Ce.MIN,cpuKernelImpl:YT}),lR={kernelName:Ni,backendName:"webgpu",kernelFunc:K9};var Ig=class{constructor(t,e,o){this.uniforms="",this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.map((n,i)=>n[0]+t[i]+n[1]),this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize),this.xShape=t,e.map((n,i)=>{this.uniforms+=` pad${i} : vec2<i32>,`}),this.offset=o==="reflect"?0:1,this.shaderKey=`mirrorPad_${o}`}getUserCode(){let t=this.xShape.length,e=this.xShape.map((u,c)=>`uniforms.pad${c}[0]`).join(","),o=this.xShape.map((u,c)=>`uniforms.pad${c}[0] + uniforms.xShape${t>1?`[${c}]`:""}`).join(","),n=t===1?"start":"start[i]",i=t===1?"end":"end[i]",s=t===1?"outC":"outC[i]",a=mt(t),l=t>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,t):"coords";return`
      ${J("index")} {
        if (index < uniforms.size) {
          let start = ${a}(${e});
          let end = ${a}(${o});
          var outC = getCoordsFromIndex(index);
          for (var i = 0; i < ${t}; i = i + 1) {
            if (${s} < ${n}) {
              ${s} = ${n} * 2 - ${s} - ${this.offset};
            } else if(${s} >= ${i}) {
              ${s} = (${i} - 1) * 2 - ${s} + ${this.offset};
            }
          }
          let coords = outC - start;
          setOutputAtIndex(index, getX(${l}));
        }
      }
    `}};var uR={kernelName:cu,backendName:"webgpu",kernelFunc:({inputs:r,attrs:t,backend:e})=>{let{x:o}=r,{paddings:n,mode:i}=t,s=e,a=n.map(c=>({type:"int32",data:[c[0],c[1]]})),l=new Ig(o.shape,n,i);return s.runWebGPUProgram(l,[o],o.dtype,a)}};var q9=Ze({opType:Ce.MOD}),cR={kernelName:pu,backendName:"webgpu",kernelFunc:q9};var Tg=class{constructor(t,e){this.variableNames=["probs"],this.outputShape=[],this.uniforms="seed : f32, numOutcomes: i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[t,e],this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="multinomial"}getUserCode(){return`
    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    fn random (seed : f32, resultUV : vec2<f32>) -> f32 {
      let HASHSCALE1 = 443.8975;
      let p = resultUV * seed;
      var p3  = fract(vec3<f32>(p.xyx) * HASHSCALE1);
      p3 = p3 + dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${J("index")} {
      if (index < uniforms.size) {
        let coords = getOutputCoords();
        let batch = coords[0];

        let resUV = vec2<f32>(f32(coords[1]) / f32(uniforms.outShape[1]),
            f32(coords[0]) / f32(uniforms.outShape[0]));
        let r = random(uniforms.seed, resUV);
        var cdf = 0.0;
        for (var i = 0; i < uniforms.numOutcomes - 1; i = i + 1) {
          cdf = cdf + getProbs(batch, i);

          if (r < cdf) {
            setOutputAtIndexI32(index, i);
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutputAtIndexI32(index, uniforms.numOutcomes - 1);
      }
    }
  `}};var Eg=class{constructor(t){this.variableNames=["logits"],this.outputShape=t,this.dispatchLayout=ie(this.outputShape),this.dispatch=[this.outputShape[0],1,1],this.outputShape[1]>=4096?this.workgroupSize=[256,1,1]:this.workgroupSize=[64,1,1],this.shaderKey="softmax"}getUserCode(){return`
    var<workgroup> buf : array<f32, ${this.workgroupSize[0]}>;
    var<workgroup> rowMaxShared : f32;
    var<workgroup> rowSumShared : f32;
    const blockSize = ${this.workgroupSize[0]};
    ${J("index")} {
      let row = index / blockSize;
      let tid = i32(localId.x);
      let cols = uniforms.outShape[1];

      var threadMax = -3.402823e+38f;
      for (var col = tid; col < cols; col += blockSize) {
        let value = getLogits(row, col);
        threadMax = max(threadMax, value);
      }
      if (tid < cols) {
        buf[tid] = threadMax;
      }
      workgroupBarrier();

      var reduceSize = min(cols, blockSize);
      for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {
        reduceSize = currSize + (reduceSize & 1);
        if (tid < currSize) {
          buf[tid] = max(buf[tid], buf[tid + reduceSize]);
        }
        workgroupBarrier();
      }

      if (tid == 0) {
        rowMaxShared = buf[0];
      }
      workgroupBarrier();

      var threadSum = 0.0;
      for (var col = tid; col < cols; col += blockSize) {
        let subExp = exp(getLogits(row, col) - rowMaxShared);
        threadSum += subExp;
      }
      buf[tid] = threadSum;
      workgroupBarrier();

      for (var currSize = blockSize >> 1;  currSize > 0; currSize = currSize >> 1) {
        if (tid < currSize) {
          buf[tid] = buf[tid] + buf[tid + currSize];
        }
        workgroupBarrier();
      }

      if (tid == 0) {
        rowSumShared = buf[0];
      }
      workgroupBarrier();

      for (var col = tid; col < cols; col += blockSize) {
        let value = exp(getLogits(row, col) - rowMaxShared) / rowSumShared;
        setOutputAtCoords(row, col, value);
      }
  }
    `}};function kb(r){let{inputs:t,backend:e,attrs:o}=r,{logits:n}=t,{dim:i}=o,s=he({inputs:{x:n},backend:e,attrs:{shape:[S.sizeFromShape(n.shape)/n.shape[i],n.shape[i]]}}),a=new Eg(s.shape),l=e.runWebGPUProgram(a,[s],n.dtype),u=he({inputs:{x:l},backend:e,attrs:{shape:n.shape}});return e.disposeData(s.dataId),e.disposeData(l.dataId),u}var pR={kernelName:Uu,backendName:"webgpu",kernelFunc:kb};function j9(r){let{inputs:t,backend:e,attrs:o}=r,{logits:n}=t,{numSamples:i,seed:s,normalized:a}=o,l=a?n:kb({inputs:{logits:n},backend:e,attrs:{dim:n.shape.length-1}}),u=l.shape[0],c=l.shape[1],p=new Tg(u,i),d=[{type:"float32",data:[s]},{type:"int32",data:[c]}],m=e.runWebGPUProgram(p,[l],"int32",d);return a||e.disposeData(l.dataId),m}var dR={kernelName:du,backendName:"webgpu",kernelFunc:j9};function X9(r){let{inputs:t,backend:e}=r,{x:o}=t;if(e.shouldExecuteOnCPU([o])){let i=e.tensorMap.get(o.dataId),[s,a]=ZT(i.values,o.shape,o.dtype);return e.makeTensorInfo(a,o.dtype,s)}let n=new co(o.shape,ae.NEG);return e.runWebGPUProgram(n,[o],o.dtype)}var mR={kernelName:ks,backendName:"webgpu",kernelFunc:X9};function Y9(r){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:e,attrs:o}=r,{boxes:n,scores:i}=t,{maxOutputSize:s,iouThreshold:a,scoreThreshold:l}=o,u=e.readSync(n.dataId),c=e.readSync(i.dataId),{selectedIndices:p}=io.nonMaxSuppressionV3Impl(u,c,s,a,l);return e.makeTensorInfo([p.length],"int32",new Int32Array(p))}var fR={kernelName:mu,backendName:"webgpu",kernelFunc:Y9};function Q9(r){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:e,attrs:o}=r,{boxes:n,scores:i}=t,{maxOutputSize:s,iouThreshold:a,scoreThreshold:l,softNmsSigma:u}=o,c=e.readSync(n.dataId),p=e.readSync(i.dataId),d=s,m=a,f=l,g=u,{selectedIndices:x,selectedScores:y}=io.nonMaxSuppressionV5Impl(c,p,d,m,f,g);return[e.makeTensorInfo([x.length],"int32",new Int32Array(x)),e.makeTensorInfo([y.length],"float32",new Float32Array(y))]}var hR={kernelName:fu,backendName:"webgpu",kernelFunc:Q9};var Ng=class{constructor(t,e){this.variableNames=["x"],this.uniforms="onValue : f32, offValue : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[t,e],this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="onehot"}getUserCode(){return`
      ${J("index")} {
        if(index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          setOutputAtIndex(index, mix(uniforms.offValue, uniforms.onValue,
                                      f32(i32(round(getX(coords.x))) == coords.y)));
        }
      }
    `}};function Z9(r){let{inputs:t,backend:e,attrs:o}=r,{indices:n}=t,{dtype:i,depth:s,onValue:a,offValue:l}=o,u=S.sizeFromShape(n.shape),c=new Ng(u,s),p=he({inputs:{x:n},backend:e,attrs:{shape:[u]}}),d=[{type:"float32",data:[a]},{type:"float32",data:[l]}],m=e.runWebGPUProgram(c,[p],i,d);e.disposeData(p.dataId);let f=[...n.shape,s],g=he({inputs:{x:m},backend:e,attrs:{shape:f}});return e.disposeData(m.dataId),g}var gR={kernelName:gu,backendName:"webgpu",kernelFunc:Z9};function ed(r){let{inputs:t,backend:e}=r,{x:o}=t;if(o.dtype==="complex64"){let n=ei({inputs:{input:o},backend:e}),i=ed({inputs:{x:n},backend:e}),s=aa({inputs:{input:o},backend:e}),a=ed({inputs:{x:s},backend:e}),l=ko({inputs:{real:i,imag:a},backend:e});return e.disposeData(n.dataId),e.disposeData(i.dataId),e.disposeData(s.dataId),e.disposeData(a.dataId),l}else return _t({attrs:{shape:o.shape,dtype:o.dtype,value:o.dtype==="string"?"":0},backend:e})}var xR={kernelName:tc,backendName:"webgpu",kernelFunc:ed};function yR(r){let{inputs:t,backend:e}=r,{x:o}=t;if(o.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(o.dtype==="complex64"){let n=ei({inputs:{input:o},backend:e}),i=yR({inputs:{x:n},backend:e}),s=aa({inputs:{input:o},backend:e}),a=ed({inputs:{x:s},backend:e}),l=ko({inputs:{real:i,imag:a},backend:e});return e.disposeData(n.dataId),e.disposeData(i.dataId),e.disposeData(s.dataId),e.disposeData(a.dataId),l}else return _t({attrs:{shape:o.shape,dtype:o.dtype,value:1},backend:e})}var vR={kernelName:hu,backendName:"webgpu",kernelFunc:yR};function J9(r){let{inputs:t,backend:e,attrs:o}=r,{axis:n}=o;if(t.length===1)return mg({inputs:{input:t[0]},backend:e,attrs:{dim:n}});let i=t[0].shape,s=t[0].dtype;t.forEach(c=>{S.assertShapesMatch(i,c.shape,"All tensors passed to stack must have matching shapes"),S.assert(s===c.dtype,()=>"All tensors passed to stack must have matching dtypes")});let a=[],l=t.map(c=>{let p=mg({inputs:{input:c},backend:e,attrs:{dim:n}});return a.push(p),p}),u=bb({inputs:l,backend:e,attrs:{axis:n}});return a.forEach(c=>e.disposeData(c.dataId)),u}var bR={kernelName:xu,backendName:"webgpu",kernelFunc:J9};function Ib(r,t=!1){let e=r.length,o=mt(e),n=r.map((p,d)=>`uniforms.pad${d}[0]`).join(","),i=r.map((p,d)=>`uniforms.pad${d}[0] + uniforms.xShape${e>1?`[${d}]`:""}`).join(","),s=e>1?`${o}(${n})`:`${n}`,a=e>1?`${o}(${i})`:`${i}`,l=e>1?"any(paddedCoords < start)":"paddedCoords < start",u=e>1?"any(paddedCoords >= end)":"paddedCoords >= end",c=e>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,e):"coords";return`
        let start = ${s};
        let end = ${a};
        if (${l} || ${u}) {
          setOutputAtIndex(index, ${t?0:"uniforms.constantValue"});
        } else {
          let coords = paddedCoords - start;
          setOutputAtIndex(index, getX(${c}));
        }
  `}var Rg=class{constructor(t,e){this.variableNames=["x"],this.uniforms="constantValue : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.map((o,n)=>o[0]+t[n]+o[1]),this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize),e.map((o,n)=>{this.uniforms+=` pad${n} : vec2<i32>,`}),this.xShape=t,this.shaderKey="pad"}getUserCode(){return`
      ${J("index")} {
        if (index < uniforms.size) {
          let paddedCoords = getCoordsFromIndex(index);
          ${Ib(this.xShape)}
        }
      }
    `}};var eX=r=>{let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{paddings:i,constantValue:s}=o;if(i.every(u=>S.arraysEqual(u,[0,0])))return $t({inputs:{x:n},backend:e});if(S.sizeFromShape(n.shape)===0){let u=i.map((c,p)=>c[0]+n.shape[p]+c[1]);return _t({backend:e,attrs:{shape:u,value:s,dtype:n.dtype}})}let a=[{type:"float32",data:[s]}];i.map(u=>a.push({type:"int32",data:[u[0],u[1]]}));let l=new Rg(n.shape,i);return e.runWebGPUProgram(l,[n],n.dtype,a)},SR={kernelName:yu,backendName:"webgpu",kernelFunc:eX};var tX=Ze({opType:Ce.POW}),wR={kernelName:vu,backendName:"webgpu",kernelFunc:tX};function rX(r){let{inputs:t,backend:e}=r,{x:o,alpha:n}=t,i=new Jn(Ce.PRELU,o.shape,n.shape);return e.runWebGPUProgram(i,[o,n],"float32")}var _R={kernelName:bu,backendName:"webgpu",kernelFunc:rX};function oX(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{axis:i,keepDims:s}=o;return po(n,i,s,"prod",e)}var CR={kernelName:Is,backendName:"webgpu",kernelFunc:oX};var nX=r=>{let{backend:t,attrs:e}=r,{start:o,stop:n,step:i,dtype:s}=e,a=tE(o,n,i,s);return t.makeTensorInfo([a.length],s,a)},kR={kernelName:Su,backendName:"webgpu",kernelFunc:nX};var iX=Ze({opType:Ce.DIV}),IR={kernelName:Fl,backendName:"webgpu",kernelFunc:iX};var sX=ke({opType:ae.RECIPROCAL}),TR={kernelName:wu,backendName:"webgpu",kernelFunc:sX};var aX=ke({opType:ae.RELU}),ER={kernelName:_u,backendName:"webgpu",kernelFunc:aX};var lX=ke({opType:ae.RELU6}),NR={kernelName:Tu,backendName:"webgpu",kernelFunc:lX};var Pg=class{constructor(t,e,o){this.variableNames=["x"],this.uniforms="adjustHeightWidth : vec2<f32>, halfPixelCenters : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[t[0],e,o,t[3]],this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="resizeBilinear"}getUserCode(){return`
      ${J("index")} {
        if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let d = coords[3];
          let rc = coords.yz;

          let effectiveInSize = vec2<f32>(
            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveOutSize = vec2<f32>(
            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveInputOverOutputRatioRC =
              effectiveInSize / effectiveOutSize;

          // Fractional source index
          let sourceFracIndexRC =
            (vec2<f32>(rc) + vec2<f32>(uniforms.halfPixelCenters)) *
            effectiveInputOverOutputRatioRC - vec2<f32>(uniforms.halfPixelCenters);

          // Compute the four integer indices.
          let sourceFloorRC = vec2<i32>(sourceFracIndexRC);
          let sourceCeilRC = vec2<i32>(
            min(vec2<f32>(uniforms.xShape.yz) - vec2<f32>(1.0), ceil(sourceFracIndexRC)));

          let topLeft = getX(b, sourceFloorRC.x, sourceFloorRC.y, d);
          let bottomLeft = getX(b, sourceCeilRC.x, sourceFloorRC.y, d);
          let topRight = getX(b, sourceFloorRC.x, sourceCeilRC.y, d);
          let bottomRight = getX(b, sourceCeilRC.x, sourceCeilRC.y, d);

          let fracRC = sourceFracIndexRC - vec2<f32>(sourceFloorRC);

          let top = topLeft + (topRight - topLeft) * fracRC.y;
          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
          let newValue = top + (bottom - top) * fracRC.x;

          setOutputAtIndex(index, newValue);
        }
      }
    `}};function uX(r){let{inputs:t,backend:e,attrs:o}=r,{images:n}=t,{alignCorners:i,size:s,halfPixelCenters:a}=o,[l,u]=s,c=i&&l>1?1:0,p=i&&u>1?1:0,m=[{type:"float32",data:[c,p]},{type:"float32",data:[a?.5:0]}],f=new Pg(n.shape,l,u);return e.runWebGPUProgram(f,[n],"float32",m)}var RR={kernelName:Iu,backendName:"webgpu",kernelFunc:uX};var $g=class{constructor(t,e){this.variableNames=["dy"],this.uniforms=`effectiveXSize : vec2<i32>, effectiveYSize : vec2<i32>, heightScale : f32, widthScale : f32,
       invHeightScale : f32, invWidthScale : f32, winHeight : i32, winWidth : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize),this.alignCorners=e,this.shaderKey=`resizeBilinearBackprop_${e}`}getUserCode(){return`
      ${J("index")} {
        if (index < uniforms.size) {
          let coords = getOutputCoords();
          let b = coords[0];
          let d = coords[3];
          let r = coords[1];
          let c = coords[2];

          var accumulator = 0.0;

          // Compute bounds for where in dy we will look
          let startRLerp = floor(f32(r) * uniforms.invHeightScale);
          let startDyR = i32(startRLerp - f32(uniforms.winHeight / 2));

          let startCLerp = floor(f32(c) * uniforms.invWidthScale);
          let startDyC = i32(startCLerp - f32(uniforms.winWidth / 2));

          // Loop over dy
          for (var dyROffset = 0; dyROffset < uniforms.winHeight; dyROffset++) {
            let dyR = startDyR + dyROffset;

            // Guard against the window exceeding the bounds of dy
            if (dyR < 0 || dyR >= uniforms.dyShape[1]) {
              continue;
            }

            for (var dyCOffset = 0; dyCOffset < uniforms.winWidth; dyCOffset++) {
              let dyC = startDyC + dyCOffset;

              // Guard against the window exceeding the bounds of dy
              if (dyC < 0 || dyC >= uniforms.dyShape[2]) {
                continue;
              }

              let dxR = f32(dyR) * uniforms.heightScale;
              let topDxRIndex = i32(floor(dxR));
              let bottomDxRIndex = i32(min(ceil(dxR), f32(uniforms.outShape[1] - 1)));
              let dxRLerp = dxR - f32(topDxRIndex);
              let inverseDxRLerp = 1.0 - dxRLerp;

              let dxC = f32(dyC) * uniforms.widthScale;
              let leftDxCIndex = i32(floor(dxC));
              let rightDxCIndex = i32(min(ceil(dxC), f32(uniforms.outShape[2] - 1)));
              let dxCLerp = dxC - f32(leftDxCIndex);
              let inverseDxCLerp = 1.0 - dxCLerp;

              if (r == topDxRIndex && c == leftDxCIndex) {
                // topLeft
                accumulator +=
                  getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
              }

              if (r == topDxRIndex && c == rightDxCIndex) {
                // topRight
                accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
              }

              if (r == bottomDxRIndex && c == leftDxCIndex) {
                // bottomLeft
                accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
              }

              if (r == bottomDxRIndex && c == rightDxCIndex) {
                // bottomRight
                accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
              }
            }
          }
          // End loop over dy

          setOutputAtIndex(index, accumulator);
        }
      }
    `}};function cX(r){let{inputs:t,backend:e,attrs:o}=r,{images:n,dy:i}=t,{alignCorners:s}=o,[,a,l]=n.shape,[,u,c]=i.shape,p=[s&&u>1?a-1:a,s&&c>1?l-1:l],d=[s&&u>1?u-1:u,s&&c>1?c-1:c],m=p[0]/d[0],f=p[1]/d[1],g=1/m,x=1/f,y=Math.ceil(g)*2+2,b=Math.ceil(x)*2+2,I=new $g(n.shape,s),N=[{type:"int32",data:p},{type:"int32",data:d},{type:"float32",data:[m]},{type:"float32",data:[f]},{type:"float32",data:[g]},{type:"float32",data:[x]},{type:"int32",data:[y]},{type:"int32",data:[b]}];return e.runWebGPUProgram(I,[i],i.dtype,N)}var PR={kernelName:_m,backendName:"webgpu",kernelFunc:cX};var Ag=class{constructor(t,e,o,n){this.variableNames=["x"],this.uniforms="adjustHeightWidth : vec2<f32>, roundBase : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[t[0],e,o,t[3]],this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize),this.halfPixelCenters=n,this.shaderKey=`resizeNearest_${n}`}getUserCode(){let t;return this.halfPixelCenters?t="max((vec2<f32>(rc) + vec2<f32>(0.5)) * effectiveInputOverOutputRatioRC, vec2<f32>(0.0))":t="vec2<f32>(rc) * effectiveInputOverOutputRatioRC",`
      ${J("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let d = coords[3];
          let rc = coords.yz;

          let effectiveInSize = vec2<f32>(
            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveOutSize = vec2<f32>(
            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveInputOverOutputRatioRC =
              effectiveInSize / effectiveOutSize;

          // Fractional source index
          let sourceFracIndexRC = ${t};

          // Compute the coordinators of nearest neighbor point.
          let inputShapeRC = vec2<f32>(f32(uniforms.xShape.y), f32(uniforms.xShape.z));
          let sourceNearestRC = vec2<i32>(
            min(inputShapeRC - 1.0, floor(sourceFracIndexRC + uniforms.roundBase)));
          let newValue = getX(b, sourceNearestRC.x, sourceNearestRC.y, d);

          setOutputAtIndex(index, newValue);
        }
      }
    `}};function pX(r){let{inputs:t,backend:e,attrs:o}=r,{images:n}=t,{alignCorners:i,halfPixelCenters:s,size:a}=o,[l,u]=a,c=i&&l>1?1:0,p=i&&u>1?1:0,m=[{type:"float32",data:[c,p]},{type:"float32",data:[i?.5:0]}],f=new Ag(n.shape,l,u,s);return e.runWebGPUProgram(f,[n],n.dtype,m)}var $R={kernelName:ku,backendName:"webgpu",kernelFunc:pX};var Dg=class{constructor(t,e){this.variableNames=["dy"],this.uniforms=`effectiveXSize : vec2<i32>, effectiveYSize : vec2<i32>, invHeightScale : f32, invWidthScale : f32,
       winHeight : i32, winWidth : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize),this.alignCorners=e,this.shaderKey=`resizeNearestNeigborBackprop_${e}`}getUserCode(){return`
      ${J("index")} {
        if (index < uniforms.size) {
          let coords = getOutputCoords();
          let b = coords[0];
          let d = coords[3];
          let r = coords[1];
          let c = coords[2];

          var accumulator = 0.0;

          // Compute bounds for where in dy we will look
          let startRLerp = floor(f32(r) * uniforms.invHeightScale);
          let startDyR = i32(floor(startRLerp - f32(uniforms.winHeight / 2)));

          let startCLerp = floor(f32(c) * uniforms.invWidthScale);
          let startDyC = i32(floor(startCLerp - f32(uniforms.winWidth / 2)));

          // Loop over dy
          for (var dyROffset = 0; dyROffset < uniforms.winHeight; dyROffset++) {
            let dyR = startDyR + dyROffset;

            // Guard against the window exceeding the bounds of dy
            if (dyR < 0 || dyR >= uniforms.dyShape[1]) {
              continue;
            }

            for (var dyCOffset = 0; dyCOffset < uniforms.winWidth; dyCOffset++) {
              let dyC = startDyC + dyCOffset;

              // Guard against the window exceeding the bounds of dy
              if (dyC < 0 || dyC >= uniforms.dyShape[2]) {
                continue;
              }

              let sourceFracRow = f32(uniforms.effectiveXSize[0]) *
                  (f32(dyR) / f32(uniforms.effectiveYSize[0]));

              let sourceFracCol = f32(uniforms.effectiveXSize[1]) *
                  (f32(dyC) / f32(uniforms.effectiveYSize[1]));

              let sourceNearestRow =
                  i32(min(f32(uniforms.outShape[1] - 1),
                  ${this.alignCorners?"floor(sourceFracRow + 0.5)":"floor(sourceFracRow)"}));

              let sourceNearestCol =
                  i32(min(f32(uniforms.outShape[2] - 1),
                  ${this.alignCorners?"floor(sourceFracCol + 0.5)":"floor(sourceFracCol)"}));

              if (r == sourceNearestRow && c == sourceNearestCol) {
                accumulator += getDy(b, dyR, dyC, d);
              }
            }
          }
          // End loop over dy

          setOutputAtIndex(index, accumulator);
        }
      }
    `}};function dX(r){let{inputs:t,backend:e,attrs:o}=r,{images:n,dy:i}=t,{alignCorners:s}=o,[,a,l]=n.shape,[,u,c]=i.shape,p=[s&&u>1?a-1:a,s&&c>1?l-1:l],d=[s&&u>1?u-1:u,s&&c>1?c-1:c],m=p[0]/d[0],f=p[1]/d[1],g=1/m,x=1/f,y=Math.ceil(g)*2+2,b=Math.ceil(x)*2+2,I=new Dg(n.shape,s),N=[{type:"int32",data:p},{type:"int32",data:d},{type:"float32",data:[g]},{type:"float32",data:[x]},{type:"int32",data:[y]},{type:"int32",data:[b]}];return e.runWebGPUProgram(I,[i],i.dtype,N)}var AR={kernelName:wm,backendName:"webgpu",kernelFunc:dX};var Fg=class{constructor(t){this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms=" axis : vec4<i32>,",this.shaderKey="reverse"}getUserCode(){return`
      
      // Using uniform variables as judging conditions, so the function has
      // coherent execution within all threads.
      fn getReverseCoords(coords : vec4<i32>) -> vec4<i32> {
        var reverseCoords = coords;
        if (uniforms.axis[0] == 1) {
          reverseCoords[0] = uniforms.xShape[0] - coords[0] - 1;
        }
        if (uniforms.axis[1] == 1) {
          reverseCoords[1] = uniforms.xShape[1] - coords[1] - 1;
        }
        if (uniforms.axis[2] == 1) {
          reverseCoords[2] = uniforms.xShape[2] - coords[2] - 1;
        }
        if (uniforms.axis[3] == 1) {
          reverseCoords[3] = uniforms.xShape[3] - coords[3] - 1;
        }

        return reverseCoords;
      }
    
      ${J("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let reverseCoords = getReverseCoords(coords);
          setOutputAtIndex(index, getX(reverseCoords[0],
              reverseCoords[1], reverseCoords[2], reverseCoords[3]));
        }
      }
    `}};function mX(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{dims:i}=o,s=n.shape.length;if(s===0)return $t({inputs:{x:n},backend:e});let a=n.shape,l=[1,1,1,1];a.forEach((x,y)=>{let b=y+4-s;l[b]=x});let u=S.parseAxisParam(i,n.shape),c=[0,0,0,0];u.forEach(x=>{let y=x+4-s;c[y]=1});let p=[{type:"int32",data:c}],d=he({inputs:{x:n},backend:e,attrs:{shape:l}}),m=new Fg(l),f=e.runWebGPUProgram(m,[d],d.dtype,p);e.disposeData(d.dataId);let g=he({inputs:{x:f},backend:e,attrs:{shape:a}});return e.disposeData(f.dataId),g}var DR={kernelName:Eu,backendName:"webgpu",kernelFunc:mX};var Og=class{constructor(t,e){this.outputShape=[],this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms=`centerX : f32, centerY : f32, sinRadians : f32,
          cosRadians : f32,`,this.shaderKey="rotate",this.outputShape=t,typeof e=="number"?(this.uniforms+=" fillValue : f32,",this.fillSnippet="var outputValue = uniforms.fillValue;",this.shaderKey+="_float"):(this.uniforms+=" fillValue : vec3<f32>,",this.fillSnippet="var outputValue = uniforms.fillValue[coords[3]];",this.shaderKey+="_vec3")}getUserCode(){return`
        ${J("index")} {
          if (index < uniforms.size) {
            let coords = getCoordsFromIndex(index);
            let coordXFloat = (f32(coords[2]) - uniforms.centerX) *
                uniforms.cosRadians - (f32(coords[1]) - uniforms.centerY) *
                uniforms.sinRadians;
            let coordYFloat = (f32(coords[2]) - uniforms.centerX) *
                uniforms.sinRadians + (f32(coords[1]) - uniforms.centerY) *
                uniforms.cosRadians;
            let coordX = i32(round(coordXFloat + uniforms.centerX));
            let coordY = i32(round(coordYFloat + uniforms.centerY));
            ${this.fillSnippet}
            if(coordX >= 0 && coordX < uniforms.xShape[2] && coordY >= 0 &&
                coordY < uniforms.xShape[1]) {
              outputValue = getX(coords[0], coordY, coordX, coords[3]);
            }
            setOutputAtIndex(index, outputValue);
          }
        }
      `}};var FR={kernelName:oc,backendName:"webgpu",kernelFunc:({inputs:r,attrs:t,backend:e})=>{let{image:o}=r,{radians:n,fillValue:i,center:s}=t,a=e,l=new Og(o.shape,i),[u,c]=P.getImageCenter(s,o.shape[1],o.shape[2]),p=[{type:"float32",data:[u]},{type:"float32",data:[c]},{type:"float32",data:[Math.sin(n)]},{type:"float32",data:[Math.cos(n)]}];return typeof i=="number"?p.push({type:"float32",data:[Number.parseFloat(i.toFixed(2))]}):p.push({type:"float32",data:i}),a.runWebGPUProgram(l,[o],o.dtype,p)}};var fX=ke({opType:ae.ROUND}),OR={kernelName:Nu,backendName:"webgpu",kernelFunc:fX};var hX=ke({opType:ae.RSQRT,cpuKernelImpl:rE}),LR={kernelName:$i,backendName:"webgpu",kernelFunc:hX};var Tn=class{constructor(t,e,o,n,i,s,a,l=!0){this.variableNames=["updates","indices"],this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=s,this.type=a,this.sumDupeIndices=l,this.dispatchLayout=ie(t),this.dispatch=ee(this.dispatchLayout,t,this.workgroupSize),this.sliceDimGreaterThanOne=e>1,this.shaderKey=`scatter_${o}_${n}_${this.sliceDimGreaterThanOne}_${a}_${l}_${i.length}`;let u=mt(i.length);this.uniforms=`sliceDim : i32, strides: ${u}, updatesSize: i32,`,this.updatesRank=n,this.indicesRank=o}getUserCode(){let t="";this.indicesRank===1?t="coords[0]":this.indicesRank===2&&(t="coords[0], j");let e=`getIndices(${t})`,o=this.sliceDimGreaterThanOne?"uniforms.strides[j]":"uniforms.strides",n="",i="";this.dispatchLayout.x.length===1?(n="flattenedIndex",i=`
      fn getUpdatesCoordsFromFlatIndex(index : i32) -> i32 {
        return index;
      }
      `):this.dispatchLayout.x.length===2&&(n="vec2<i32>(flattenedIndex, coords[1])",i=`
      fn getUpdatesCoordsFromFlatIndex(index : i32) -> vec2<i32> {
        // N.B. |updates| could be a scalar tensor, conceptually representing a
        // 2D tensor with all values equal to that. By design, its size must be
        // the same as |outShape[1]| in one dimension, and |indicesShape[0]|
        // gives the other.
        let sliceSize = uniforms.outShape[1];
        let d0 = index / sliceSize;
        let d1 = index - d0 * sliceSize;
        return vec2<i32>(d0, d1);
      }
      `);let a=`getUpdates(${Array.from({length:this.updatesRank},(u,c)=>`coords[${c}]`).join(", ")})`;return`
    ${i}
      ${J("index")} {
        if (index < uniforms.updatesSize) {
          let coords = getUpdatesCoordsFromFlatIndex(index);
          var flattenedIndex = 0;
          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
            let indexInside = i32(round(${e}));
            flattenedIndex = flattenedIndex + indexInside * ${o};
          }
          let updateValue =
              ${rs(this.type)}(${a});
          let flatIndex = getOutputIndexFromCoords(${n});

          ${this.sumDupeIndices?lo("&result[flatIndex]","updateValue",this.type):"atomicStore(&result[flatIndex], bitcast<i32>(updateValue));"}
        }
      }`}};function gX(r){let{inputs:t,backend:e,attrs:o}=r,{indices:n,updates:i}=t,{shape:s}=o,{sliceRank:a,numUpdates:l,sliceSize:u,strides:c,outputSize:p}=P.calculateShapes(i,n,s),d=[p/u,u];if(p===0)return e.makeTensorInfo(s,n.dtype);let m=he({inputs:{x:n},backend:e,attrs:{shape:[l,a]}}),f=he({inputs:{x:i},backend:e,attrs:{shape:[l,u]}}),g=f.dtype,x=_t({backend:e,attrs:{shape:d,value:0,dtype:g}}),y=S.sizeFromShape(f.shape),b=[{type:"int32",data:[a]},{type:"int32",data:c},{type:"int32",data:[y]}],I=new Tn(f.shape,a,m.shape.length,f.shape.length,c,d,g),N=e.runWebGPUProgram(I,[f,m],g,b,x),M=he({inputs:{x:N},backend:e,attrs:{shape:s}});return e.disposeData(m.dataId),e.disposeData(f.dataId),e.disposeData(N.dataId),M}var MR={kernelName:Ru,backendName:"webgpu",kernelFunc:gX};var Lg=class{constructor(t,e){this.outputShape=[],this.variableNames=["sortedSequence","values"],this.uniforms="numInputs : i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize),this.side=e,this.shaderKey=`search_sorted_${e}`}getUserCode(){return`
      fn findBound(batch: i32, value: f32) -> i32 {
        var left = i32(0);
        var right = uniforms.numInputs;
        while (left < right) {
          var mid = (left + right) / 2;
          if (getSortedSequence(batch, mid) ${this.side==="left"?"<":"<="} value) {
            left = mid + 1;
          } else {
            right = mid;
          }
        }
        return right;
      }

      ${J("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let value = getValuesByOutputIndex(index);
          setOutputAtIndexI32(index, findBound(coords[0], value));
        }
      }
    `}};function xX(r){let{inputs:t,backend:e,attrs:o}=r,{sortedSequence:n,values:i}=t,{side:s}=o,a=new Lg([i.shape[0],i.shape[1]],s),l=[{type:"int32",data:[n.shape[1]]}];return e.runWebGPUProgram(a,[n,i],"int32",l)}var BR={kernelName:$u,backendName:"webgpu",kernelFunc:xX};var Mg=class{constructor(t,e,o){this.variableNames=["c","a","b"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize),this.cRank=t,this.rank=o,this.shaderKey="select"}getUserCode(){let t,e;if(this.rank>4)throw Error(`Where for rank ${this.rank} is not yet supported`);if(this.rank===1)e="resRC",t="resRC";else{let n=["resRC.x","resRC.y","resRC.z","resRC.w"],i=[],s=[];for(let a=0;a<this.outputShape.length;a++)s.push(`${n[a]}`),a<this.cRank&&i.push(`${n[a]}`);t=i.join(),e=s.join()}return`
      ${J("index")} {
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          let cVal = getC(${t});
          if (cVal >= 1.0) {
            setOutputAtIndex(index, getA(${e}));
          } else {
            setOutputAtIndex(index, getB(${e}));
          }
        }
      }
    `}};function yX(r){let{inputs:t,backend:e}=r,{condition:o,t:n,e:i}=t,s=new Mg(o.shape.length,n.shape,n.shape.length);return e.runWebGPUProgram(s,[o,n,i],Et(n.dtype,i.dtype))}var VR={kernelName:Au,backendName:"webgpu",kernelFunc:yX};var vX=ke({opType:ae.SELU}),WR={kernelName:Du,backendName:"webgpu",kernelFunc:vX};var bX=ke({opType:ae.SIGMOID}),UR={kernelName:Ai,backendName:"webgpu",kernelFunc:bX};var SX=ke({opType:ae.SIGN}),zR={kernelName:Lu,backendName:"webgpu",kernelFunc:SX};var wX=ke({opType:ae.SIN}),GR={kernelName:Fu,backendName:"webgpu",kernelFunc:wX};var _X=ke({opType:ae.SINH}),HR={kernelName:Ou,backendName:"webgpu",kernelFunc:_X};var CX=ke({opType:ae.SOFTPLUS}),KR={kernelName:Mu,backendName:"webgpu",kernelFunc:CX};var Bg=class{constructor(t,e,o,n,i,s){this.variableNames=["x"],this.outputShape=[],this.uniforms="",this.workgroupSize=[64,1,1],this.size=!0;let a=new Array(n.length);for(let l=0;l<a.length;l++)a[l]=n[i[l]];this.outputShape=a,this.newDim=i,this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize),this.xShape=t,this.paddedXShape=e,this.uniforms+=`reshapedPaddedXShape : ${mt(n.length)}, paddedXShapeStrides : ${mt(s)}, `,o.map((l,u)=>{this.uniforms+=` pad${u} : vec2<i32>,`}),this.shaderKey=`spaceToBatchND_${i}`}getUserCode(){let t=mt(this.outputShape.length),e=fb(this.newDim);return`
      ${Wp(this.paddedXShape,"PaddedX")}
      ${J("index")} {
        if(index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let switchedIndex = getIndexFromCoords${this.outputShape.length}D(${t}(${e}), uniforms.reshapedPaddedXShape);
          let paddedCoords = getPaddedXCoordsFromIndex(switchedIndex);
          ${Ib(this.xShape,!0)}
        }
      }
    `}};var kX=r=>{let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{blockShape:i,paddings:s}=o;S.assert(n.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGPU backend not implemented yet");let a=i.reduce((b,I)=>b*I),l=[[0,0]];l.push(...s);for(let b=1+i.length;b<n.shape.length;++b)l.push([0,0]);let u=l.map((b,I)=>b[0]+n.shape[I]+b[1]),c=P.getReshaped(u,i,a,!1),p=P.getPermuted(c.length,i.length,!1),d=P.getReshapedPermuted(u,i,a,!1),m=S.computeStrides(u),f=new Bg(n.shape,u,l,c,p,m.length),g=[{type:"int32",data:c},{type:"int32",data:m}];l.map(b=>g.push({type:"int32",data:[b[0],b[1]]}));let x=e.runWebGPUProgram(f,[n],n.dtype,g),y=he({inputs:{x},backend:e,attrs:{shape:d}});return e.disposeData(x.dataId),y},qR={kernelName:Vu,backendName:"webgpu",kernelFunc:kX};var Vg=class{constructor(t,e,o){this.variableNames=["input","indices","segmentIds"],this.outputShape=[],this.uniforms="segmentSize : i32, sparseSize : i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=t,this.type=o,this.dispatchLayout=ie([e]),this.dispatch=ee(this.dispatchLayout,[e],this.workgroupSize),this.shaderKey="sparseSegmentSum"}getUserCode(){return`
    ${J("index")} {
      if (index < uniforms.sparseSize) {
        let indexInSegmentIds = index / uniforms.segmentSize;
        let indexInSegment = index % uniforms.segmentSize;
        let indexInInput = indices[indexInSegmentIds];
        let segmentId = segmentIds[indexInSegmentIds];

        let value = input[indexInInput * uniforms.segmentSize + indexInSegment];
        let outIndex = segmentId * uniforms.segmentSize + indexInSegment;
        ${lo("&result[outIndex]","value",this.type)}
      }
    }
  `}},Wg=class{constructor(t,e){this.variableNames=["segmentIds"],this.outputShape=[],this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=[t],this.dispatchLayout=ie(e),this.dispatch=ee(this.dispatchLayout,e,this.workgroupSize),this.shaderKey="sparseSegmentIdCountProgram"}getUserCode(){return`
    ${J("index")} {
      if (index < uniforms.segmentIdsShape) {
        let segmentId = segmentIds[index];
        ${lo("&result[segmentId]","1","int32")}
      }
    }
  `}},Ug=class{constructor(t,e){this.variableNames=["segmentSum","sameSegmentIdCount"],this.outputShape=[],this.uniforms="segmentSize : i32",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.type=e,this.dispatchLayout=ie(t),this.dispatch=ee(this.dispatchLayout,t,this.workgroupSize),this.shaderKey="sparseSegmentMean"}getUserCode(){return`
    ${J("index")} {
      if (index < uniforms.size) {
        let segmentId = index / uniforms.segmentSize;
        let count = sameSegmentIdCount[segmentId];
        if (count != 0) {
          ${this.type==="float32"?"setOutputAtIndex(index, segmentSum[index] / f32(count));":"setOutputAtIndexI32(index, segmentSum[index] / count);"}
        }
      }
    }
  `}};function zg(r,t,e,o=!1,n){let s=S.sizeFromShape(r.shape)/r.shape[0],a=r.dtype,l=S.sizeFromShape(t.shape),u=n.readSync(e.dataId),p=l>0?u[l-1]+1:0,d,m=r.shape.slice();m[0]=p;let f=l*s,g=_t({backend:n,attrs:{shape:m,value:0,dtype:a}});d=new Vg(m,f,a);let x=[{type:"int32",data:[s]},{type:"int32",data:[f]}],y=n.runWebGPUProgram(d,[r,t,e],a,x,g);if(o)return y;let b=_t({backend:n,attrs:{shape:[p],value:0,dtype:"int32"}});d=new Wg(p,e.shape);let I=n.runWebGPUProgram(d,[e],"int32",null,b),N=_t({backend:n,attrs:{shape:m,value:0,dtype:a}});d=new Ug(m,a),x=[{type:"int32",data:[s]}];let M=n.runWebGPUProgram(d,[y,I],a,x,N);return n.disposeData(y.dataId),n.disposeData(I.dataId),M}function IX(r){let{inputs:t,backend:e}=r,{data:o,indices:n,segmentIds:i}=t;return zg(o,n,i,!1,e)}var jR={kernelName:zu,backendName:"webgpu",kernelFunc:IX};function TX(r){let{inputs:t,backend:e}=r,{data:o,indices:n,segmentIds:i}=t;return zg(o,n,i,!0,e)}var XR={kernelName:Gu,backendName:"webgpu",kernelFunc:TX};var Gg=class{constructor(t,e){this.variableNames=["A"],this.workgroupSize=[64,1,1],this.size=!0;let o=new Array(t.length);for(let n=0;n<o.length;n++)o[n]=t[n]*e[n];this.outputShape=o,this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize),this.rank=this.outputShape.length,this.shaderKey="tile"}getUserCode(){let t=EX(this.rank,"uniforms.");return`
      ${J("index")} {
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          setOutputAtIndex(index, getA(${t}));
        }
      }
    `}};function EX(r,t=""){if(r>=5)throw Error(`Tile for rank ${r} is not yet supported`);if(r===1)return`(resRC % ${t}aShape)`;let e=["resRC.x","resRC.y","resRC.z","resRC.w"],o=[];for(let n=0;n<r;n++)o.push(`(${e[n]} % ${t}aShape[${n}])`);return o.join()}function td(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{reps:i}=o;if(e.shouldExecuteOnCPU([n])||n.dtype==="string"||n.shape.length>=5){let l=e.readSync(n.dataId),u=n.dtype==="string"?l.map(d=>S.decodeString(d)):l,c=Le(n.shape,n.dtype,u),p=uE(c,i);return e.makeTensorInfo(p.shape,p.dtype,p.values)}let s=new Gg(n.shape,i);return e.runWebGPUProgram(s,[n],n.dtype)}var YR={kernelName:Li,backendName:"webgpu",kernelFunc:td};function NX(r){let{inputs:t,backend:e,attrs:o}=r,{sparseIndices:n,sparseValues:i,defaultValue:s}=t,{outputShape:a}=o,{sliceRank:l,numUpdates:u,sliceSize:c,strides:p,outputSize:d}=P.calculateShapes(i,n,a),m=!1;if(i.dtype==="string"){let H=e.bufferSync(n),K=e.bufferSync(i),X=S.decodeString(e.readSync(s.dataId)[0]),re=oE(H,K,a,d,c,u,l,p,X,m);return e.makeTensorInfo(a,re.dtype,re.values)}let f=[d/c,c],g=he({inputs:{x:n},backend:e,attrs:{shape:[u,l]}}),x=i.shape.length?he({inputs:{x:i},backend:e,attrs:{shape:[u,c]}}):$t({inputs:{x:i},backend:e}),y=x.dtype,b=e.makeTensorInfo([],y,S.makeZerosTypedArray(1,y)),I=he({inputs:{x:s},backend:e,attrs:{shape:Array(f.length).fill(1)}}),N=td({inputs:{x:I},backend:e,attrs:{reps:f}}),M=S.sizeFromShape([u,c]),B=[{type:"int32",data:[l]},{type:"int32",data:p},{type:"int32",data:[M]}];switch(u){case 0:break;case 1:{let H=new Tn([u,c],l,g.shape.length,x.shape.length,p,f,y,m);e.runWebGPUProgram(H,[x,g],y,B,N)}break;default:{let H=new Tn([u,c],l,g.shape.length,b.shape.length,p,f,y,m);e.runWebGPUProgram(H,[b,g],y,B,N)}{let H=new Tn([u,c],l,g.shape.length,x.shape.length,p,f,y);e.runWebGPUProgram(H,[x,g],y,B,N)}}let W=he({inputs:{x:N},backend:e,attrs:{shape:a}});return e.disposeData(g.dataId),e.disposeData(x.dataId),e.disposeData(I.dataId),e.disposeData(b.dataId),e.disposeData(N.dataId),W}var QR={kernelName:Hu,backendName:"webgpu",kernelFunc:NX};function RX(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{numOrSizeSplits:i,axis:s}=o,a=S.parseAxisParam(s,n.shape)[0],l=P.prepareSplitSize(n,i,a),u=n.shape.length,c=new Array(u).fill(0),p=n.shape.slice();return l.map(d=>{let m=[...p];m[a]=d;let f=Yo({inputs:{x:n},backend:e,attrs:{begin:c,size:m}});return c[a]+=d,f})}var ZR={kernelName:Wu,backendName:"webgpu",kernelFunc:RX};var PX=ke({opType:ae.SQRT}),JR={kernelName:Di,backendName:"webgpu",kernelFunc:PX};var e3={kernelName:Im,backendName:"webgpu",kernelFunc:({inputs:r,backend:t})=>{let{x:e}=r,o=t,n=new co(e.shape,ae.SQUARE);return o.runWebGPUProgram(n,[e],e.dtype)}};var $X=Ze({opType:Ce.SQUARED_DIFFERENCE}),t3={kernelName:Fi,backendName:"webgpu",kernelFunc:$X};function AX({inputs:r,attrs:t,backend:e}){let{x:o}=r,n=new co(o.shape,ae.STEP,"stepAlpha : f32,"),i=[{type:"float32",data:[t.alpha]}];return e.runWebGPUProgram(n,[o],o.dtype,i)}var r3={kernelName:rc,backendName:"webgpu",kernelFunc:AX};var Hg=class{constructor(t){this.variableNames=["x"],this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]);let e=mt(this.outputShape.length);this.uniforms=`begin : ${e},  strides : ${e}, `,this.shaderKey="stridedSlice"}getUserCode(){let t=this.outputShape.length,e="";if(t===1)e="coords * uniforms.strides + uniforms.begin";else{let n=0;e=this.outputShape.map((i,s)=>(n++,this.outputShape.length===1?`coords * uniforms.strides[${s}] + uniforms.begin[${s}]`:`coords[${n-1}] * uniforms.strides[${s}] + uniforms.begin[${s}]`)).join(",")}return`
       ${J("index")} {
         if (index < uniforms.size) {
           let coords = getCoordsFromIndex(index);
           setOutputAtIndex(index, getX(${e}));
         }
       }
     `}};function DX(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{begin:i,end:s,strides:a,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:p,shrinkAxisMask:d}=o,{finalShapeSparse:m,finalShape:f,isIdentity:g,sliceDim0:x,isSimpleSlice:y,begin:b,end:I,strides:N}=Kt.sliceInfo(n.shape,i,s,a,l,u,c,p,d),M;if(g)M=he({inputs:{x:n},backend:e,attrs:{shape:f}});else if(x||y){S.assert(n.shape.length>=1,()=>`Input must have rank at least 1, got: ${n.shape.length}`);let B=Kt.computeOutShape(b,I,N),W=Yo({inputs:{x:n},backend:e,attrs:{begin:b,size:B}});M=he({inputs:{x:W},backend:e,attrs:{shape:f}}),e.disposeData(W.dataId)}else if(e.shouldExecuteOnCPU([n])){let W=e.readSync(n.dataId),H=Le(n.shape,n.dtype,W),K=sE(m,H,N,b);M=e.makeTensorInfo(f,n.dtype,K.values)}else{let W=new Hg(m),H=[{type:"int32",data:b},{type:"int32",data:N}],K=e.runWebGPUProgram(W,[n],n.dtype,H);M=he({inputs:{x:K},backend:e,attrs:{shape:f}}),e.disposeData(K.dataId)}return M}var o3={kernelName:qu,backendName:"webgpu",kernelFunc:DX};function FX(r){let{inputs:t,backend:e,attrs:o}=r,{separator:n,nGramWidths:i,leftPad:s,rightPad:a,padWidth:l,preserveShortSequences:u}=o,{data:c,dataSplits:p}=t,d=e.readSync(c.dataId),m=e.readSync(p.dataId),[f,g]=aE(d,m,n,i,s,a,l,u);return[e.makeTensorInfo([f.length],"string",f),e.makeTensorInfo(p.shape,"int32",g)]}var n3={kernelName:ju,backendName:"webgpu",kernelFunc:FX};var OX=Ze({opType:Ce.SUB,cpuKernelImpl:lE,supportsComplex:!0}),i3={kernelName:Oi,backendName:"webgpu",kernelFunc:OX};var LX=ke({opType:ae.TAN}),s3={kernelName:Xu,backendName:"webgpu",kernelFunc:LX};var MX=ke({opType:ae.TANH}),a3={kernelName:Yu,backendName:"webgpu",kernelFunc:MX};function BX(r){let{inputs:t,backend:e,attrs:o}=r,{tensor:n,indices:i,updates:s}=t,{}=o,{sliceRank:a,numUpdates:l,sliceSize:u,strides:c,outputSize:p}=P.calculateShapes(s,i,n.shape),d=[p/u,u];if(p===0)return e.makeTensorInfo(n.shape,i.dtype);let m=[],f=he({inputs:{x:i},backend:e,attrs:{shape:[l,a]}});m.push(f);let g=he({inputs:{x:s},backend:e,attrs:{shape:[l,u]}});m.push(g);let x=he({inputs:{x:n},backend:e,attrs:{shape:d}});m.push(x);let y=td({inputs:{x},backend:e,attrs:{reps:Array(d.length).fill(1)}}),b=new Tn([l,u],a,f.shape.length,g.shape.length,c,d,n.dtype,!1),I=S.sizeFromShape([l,u]),N=[{type:"int32",data:[a]},{type:"int32",data:c},{type:"int32",data:[I]}],M=e.runWebGPUProgram(b,[g,f],x.dtype,N,y);m.push(M);let B=he({inputs:{x:M},backend:e,attrs:{shape:n.shape}});return m.forEach(W=>e.disposeData(W.dataId)),B}var l3={kernelName:Pu,backendName:"webgpu",kernelFunc:BX};var Kg=class{constructor(t){this.variableNames=["x","indices"],this.workgroupSize=[256,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms=`inputSize : i32, firstPass : i32, negativeInf : f32,
        dir : i32, inc : i32,`,this.shaderKey="swap"}getUserCode(){return`
        ${J("index")} {
          if (index < uniforms.size) {
            let outC = getCoordsFromIndex(index);
            let batch = outC[0];
            let elemIdx = outC[1];
            // We compare elements pair-wise within a group of size 2 * inc.
            // The comparing rule for each group alternates between ascending
            // and descending. Within each group, we compare each pair at
            // positions i and i+inc. To decide whether an element at position i
            // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
            // inc, it is in the first half of the group, we denote it as x0,
            // otherwise we denote it as x1.
            // For example, as shown in the Bitonic top K paper referenced
            // above, Figure5(a) shows that element[1] is in the second half of
            // the group when group size is 2, but it is in the first half of
            // the group when group size is 4.
            let isFirstInPair = elemIdx % (2 * uniforms.inc) < uniforms.inc;
            var i = 0;
            if (isFirstInPair) {
              i = elemIdx;
            } else {
              i = elemIdx - uniforms.inc;
            }

            var i0 = 0;
            if (uniforms.firstPass == 1) {
              i0 = i;
            } else {
              i0 = i32(getIndices(batch, i));
            }

            var i1 = 0;
            if (uniforms.firstPass == 1) {
              i1 = i + uniforms.inc;
            } else {
              i1 = i32(getIndices(batch, i + uniforms.inc));
            }

            var x0 = f32(0.0);
            var x1 = f32(0.0);
            if (i0 < uniforms.inputSize) {
              x0 = getX(batch, i0);
            } else {
              x0 = uniforms.negativeInf;
            }
            if (i1 < uniforms.inputSize) {
              x1 = getX(batch, i1);
            } else {
              x1 = uniforms.negativeInf;
            }

            let reverse = elemIdx % (2 * uniforms.dir) >= uniforms.dir;
            let isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
            if (reverse == isGreater) {
              // Elements in opposite order of direction
              let iTemp = i0;
              i0 = i1;
              i1 = iTemp;
            }
            if (isFirstInPair) {
              setOutputAtIndex(index, f32(i0));
            } else {
              setOutputAtIndex(index, f32(i1));
            }
          }
        }
      `}},qg=class{constructor(t){this.variableNames=["x","indices"],this.workgroupSize=[256,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms="inputSize : i32, firstPass : i32, k : i32,",this.shaderKey="merge"}getUserCode(){return`
        ${J("index")} {
          if (index < uniforms.size) {
            let outC = getCoordsFromIndex(index);
            let batch = outC[0];
            let elemIdx = outC[1];
            // The output size is half of the previous size.
            // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _
            // (k=4), we only need to output the indices at positions |, the
            // indices at positions _ can be thrown away, see Figure5(b) After
            // Phase 2 (Merge phase) in the Bitonic Top K paper referenced
            // above.
            // For example, the paper shows we only need to output the orange
            // bars. The output sequence should look like this | | | | | | | |.
            // Because the sequence is halved, to map the output index back to
            // the previous sequence to find the corresponding value, we need
            // to double the index. When we double the index, we basically
            // interpolate a position, so 2i looks like
            // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k
            // position of each 2k positions by - elemIdx % k. E.g. for output
            // at index 4,5,6,7, we want to get the corresponding element at
            // original index 8,9,10,11, for output at index 8,9,10,11,
            // we want to get the corresponding element at original index
            // 16,17,18,19, so on and so forth.

            var i = 0;
            if (elemIdx < uniforms.k) {
              i = elemIdx;
            } else {
              i = elemIdx * 2 - elemIdx % uniforms.k;
            }
            var i0 = 0;
            if (uniforms.firstPass == 1) {
              i0 = i;
            } else {
              i0 = i32(getIndices(batch, i));
            }
            var i1 = 0;
            if (uniforms.firstPass == 1) {
              i1 = i + uniforms.k;
            } else {
              i1 = i32(getIndices(batch, i + uniforms.k));
            }

            let x0 = getX(batch, i0);
            var x1 = f32(0.0);
            if (i1 < uniforms.inputSize) {
              x1 = getX(batch, i1);
            } else {
              x1 = x0;
            }

            if (x0 >= x1) {
              setOutputAtIndex(index, f32(i0));
            } else {
              setOutputAtIndex(index, f32(i1));
            }
          }
        }
      `}};function Oc(r,t){t!==null&&r.disposeData(t.dataId)}function u3(r){let t=1;for(;t<r;)t*=2;return t}function VX(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{k:i,sorted:s}=o,a=n.shape,l=a[a.length-1];if(e.shouldExecuteOnCPU([n])){let M=e.readSync(n.dataId),[B,W]=cE(M,a,n.dtype,i,s);return[e.makeTensorInfo(B.shape,B.dtype,B.values),e.makeTensorInfo(W.shape,W.dtype,W.values)]}if(i===0)return a[a.length-1]=0,[e.makeTensorInfo(a,n.dtype,[]),e.makeTensorInfo(a,"int32",[])];if(l===1)return[n,_t({attrs:{shape:a,dtype:"int32",value:0},backend:e})];let c=S.sizeFromShape(a)/l,p=he({inputs:{x:n},attrs:{shape:[c,l]},backend:e}),d=u3(i),m=u3(l),f=null,g=()=>f===null?[p,p]:[p,f],x=(M,B,W)=>{let H=g(),K=new Kg(W),re=[{type:"int32",data:[l]},{type:"int32",data:[f===null?1:0]},{type:"float32",data:[Number.NEGATIVE_INFINITY]},{type:"int32",data:[M]},{type:"int32",data:[B]}],ce=f;f=e.runWebGPUProgram(K,H,"int32",re),Oc(e,ce)};for(let M=1;M<d;M*=2){let B=M*2;for(let W=M;W>=1;W/=2)x(B,W,[c,m])}for(let M=m;M>d;M/=2){let B=g(),W=new qg([c,M/2]),K=[{type:"int32",data:[l]},{type:"int32",data:[f===null?1:0]},{type:"int32",data:[d]}],X=f;f=e.runWebGPUProgram(W,B,"int32",K),Oc(e,X);let re=d/2,ce=re*2;for(let pe=re;pe>=1;pe/=2)x(ce,pe,f.shape)}let y=f;f=Yo({inputs:{x:f},backend:e,attrs:{begin:0,size:[c,i]}}),Oc(e,y);let b=Cb({inputs:{x:p,indices:f},backend:e,attrs:{axis:1,batchDims:1}});Oc(e,p);let I=a.slice(0,-1);I.push(i),y=f,f=he({inputs:{x:f},attrs:{shape:I},backend:e}),Oc(e,y);let N=b;return b=he({inputs:{x:b},attrs:{shape:I},backend:e}),Oc(e,N),[b,f]}var c3={kernelName:Qu,backendName:"webgpu",kernelFunc:VX};var jg=class{constructor(t){this.variableNames=["Image","Transforms"],this.uniforms="interpolationModeId : i32, fillModeId : i32, fillValue : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="transform"}getUserCode(){return`
          fn mapCoord(outCoord : f32, len : f32) -> f32{
            var inCoord = outCoord;
            if(uniforms.fillModeId == 2) {
              if (inCoord < 0.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz2 = 2.0 * len;
                  if (inCoord < sz2) {
                    inCoord = sz2 * f32(i32(f32(-inCoord / sz2))) +
                    inCoord;
                  }
                  if (inCoord < -len) {
                    inCoord = inCoord + sz2;
                  } else {
                    inCoord = -inCoord - 1.0;
                  }
                }
              } else if (inCoord > len - 1.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz2 = 2.0 * len;
                  inCoord = inCoord - sz2 * f32(i32(f32(inCoord / sz2)));
                  if (inCoord >= len) {
                    inCoord = sz2 - inCoord - 1.0;
                  }
                }
              }
              return clamp(inCoord, 0.0, len - 1.0);
            } else if (uniforms.fillModeId == 3) {
              if (inCoord < 0.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz = len - 1.0;
                  inCoord = inCoord + len * (f32(i32(f32(-inCoord / sz))) + 1.0);
                }
              } else if (inCoord > len - 1.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz = len - 1.0;
                  inCoord = inCoord - len * f32(i32(f32(inCoord / sz)));
                }
              }
              return clamp(inCoord, 0.0, len - 1.0);
            } else if (uniforms.fillModeId == 4) {
              return clamp(outCoord, 0.0, len - 1.0);
            }
            return outCoord;
          }
          fn readWithFillValue(batch : i32, coordY : i32, coordX : i32,
            channel : i32) -> f32 {
            var outputValue : f32;
            if (0 <= coordY && coordY < uniforms.imageShape[1] && 0 <= coordX && coordX < uniforms.imageShape[2]) {
                outputValue = getImage(batch, coordY, coordX, channel);
            } else {
              outputValue = uniforms.fillValue;
            }
            return outputValue;
          }

          ${J("index")} {
            if (index < uniforms.size) {
              let coords = getCoordsFromIndex(index);
              var outputValue : f32;
              let batch = coords[0];
              let x = coords[2];
              let y = coords[1];
              let channel = coords[3];
              let xf = f32(x);
              let yf = f32(y);
              let a1 = getTransforms(batch, 0);
              let a2 = getTransforms(batch, 1);
              let a3 = getTransforms(batch, 2);
              let b1 = getTransforms(batch, 3);
              let b2 = getTransforms(batch, 4);
              let b3 = getTransforms(batch, 5);
              let c1 = getTransforms(batch, 6);
              let c2 = getTransforms(batch, 7);
              let projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = uniforms.fillValue;
              } else {
                let inX = (a1 * xf + a2 * yf + a3) / projection;
                let inY = (b1 * xf + b2 * yf + b3) / projection;
                let mapX = mapCoord(inX, f32(uniforms.imageShape[2]));
                let mapY = mapCoord(inY, f32(uniforms.imageShape[1]));

                if (uniforms.interpolationModeId == 1) {
                  let coordY = i32(round(mapY));
                  let coordX = i32(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  let yFloor = floor(mapY);
                  let xFloor = floor(mapX);
                  let yCeil = yFloor + 1.0;
                  let xCeil = xFloor + 1.0;
                  let valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, i32(yFloor), i32(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, i32(yFloor), i32(xCeil), channel);
                  let valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, i32(yCeil), i32(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, i32(yCeil), i32(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutputAtIndex(index, outputValue);
            }
          }
        `}};function WX(r){let{inputs:t,backend:e,attrs:o}=r,{image:n,transforms:i}=t,{interpolation:s,fillMode:a,fillValue:l,outputShape:u}=o,[c,p,d,m]=n.shape,[f,g]=u??[p,d],x=[c,f,g,m],y=new jg(x),b=s==="nearest"?1:2,I;switch(a){case"constant":I=1;break;case"reflect":I=2;break;case"wrap":I=3;break;case"nearest":I=4;break;default:I=1;break}let N=[{type:"int32",data:[b]},{type:"int32",data:[I]},{type:"float32",data:[l]}];return e.runWebGPUProgram(y,[n,i],"float32",N)}var p3={kernelName:Zu,backendName:"webgpu",kernelFunc:WX};function UX(r){let{inputs:t,backend:e,attrs:o}=r,{value:n}=t,{axis:i}=o;i<0&&(i+=n.shape.length);let s=n,a=s.shape.length,l=n.shape[i],u=new Array(a-1),c=0;for(let g=0;g<a;g++)g!==i&&(u[c++]=s.shape[g]);let p=[],d=new Array(a).fill(0),m=s.shape.slice();m[i]=1;let f=new Array(l);for(let g=0;g<f.length;g++){d[i]=g;let x=Yo({inputs:{x:s},backend:e,attrs:{begin:d,size:m}}),y=he({inputs:{x},backend:e,attrs:{shape:u}});f[g]=y,p.push(x)}return p.forEach(g=>e.disposeData(g.dataId)),f}var d3={kernelName:Ju,backendName:"webgpu",kernelFunc:UX};var Xg=class{constructor(t,e,o){if(this.outputShape=[],this.variableNames=["x","segmentIds"],this.uniforms="numSegments : i32, xSize: i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=e,this.dispatchLayout=ie(t),this.dispatch=ee(this.dispatchLayout,t,this.workgroupSize),o!=="float32"&&o!=="int32")throw new Error(`UnsortedSegmentSum only supports float32 and int32
              types, does not support ${o} type.`);this.type=o,this.shaderKey="unsortedSegmentSum"}getUserCode(){return`
    ${J("index")} {
      if (index < uniforms.xSize) {
        let coords = getXCoordsFromIndex(index);
        let b = coords[0];
        let inCol = coords[1];

        let segmentId = i32(getSegmentIds(inCol));
        if (segmentId >= 0) {
          let flatIndex = b * uniforms.numSegments + segmentId % uniforms.numSegments;
          let value = getX(b, inCol);

          ${lo("&result[flatIndex]","value",this.type)}
        }
      }
    }
  `}};function zX(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,segmentIds:i}=t,{numSegments:s}=o,a=n.shape.length,l=[],u=0,c=P.getAxesPermutation([u],a),p=n;c!=null&&(p=xr({inputs:{x:n},backend:e,attrs:{perm:c}}),l.push(p),u=P.getInnerMostAxes(1,a)[0]);let d=P.segment_util.computeOutShape(p.shape,u,s),m=S.sizeFromShape([p.shape[u]]),f=he({inputs:{x:p},backend:e,attrs:{shape:[-1,m]}});l.push(f);let g=n.dtype,x=[f.shape[0],s],y=_t({backend:e,attrs:{shape:x,value:0,dtype:g}}),b=new Xg(f.shape,x,g),I=[{type:"int32",data:[s]},{type:"int32",data:[S.sizeFromShape(f.shape)]}],N=e.runWebGPUProgram(b,[f,i],g,I,y),M=he({inputs:{x:N},backend:e,attrs:{shape:d}});l.push(N);let B=M;if(c!=null){l.push(M);let W=P.getUndoAxesPermutation(c);B=xr({inputs:{x:B},backend:e,attrs:{perm:W}})}return l.forEach(W=>e.disposeData(W.dataId)),B}var m3={kernelName:ec,backendName:"webgpu",kernelFunc:zX};var GX=[jI,dE,mE,fE,hE,gE,yE,vE,bE,SE,wE,_E,CE,kE,IE,NE,RE,PE,$E,AE,FE,OE,LE,WE,UE,zE,YI,HE,qE,jE,XE,YE,QE,ZE,JE,eN,tN,rN,iN,sN,aN,lN,cN,pN,uN,dN,mN,fN,hN,gN,vN,bN,SN,wN,_N,CN,kN,IN,TN,KI,EN,PN,NN,RN,$N,AN,DN,FN,ON,LN,MN,XI,BN,KE,VN,WN,UN,zN,GN,HN,KN,jN,qN,XN,YN,QN,JN,eR,TE,tR,rR,iR,oR,nR,sR,EE,aR,lR,uR,cR,dR,xN,mR,fR,hR,ME,gR,vR,bR,SR,wR,_R,CR,kR,BE,IR,TR,ER,NR,qI,RR,PR,$R,AR,DR,FR,OR,LR,MR,BR,VR,WR,UR,zR,GR,HR,DE,r3,o3,n3,pR,KR,qR,jR,XR,QR,ZR,JR,e3,t3,i3,yN,s3,a3,l3,YR,c3,p3,xE,d3,m3,xR];for(let r of GX)Pm(r);var H3=function(r,t){return(H3=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,o){e.__proto__=o}||function(e,o){for(var n in o)Object.prototype.hasOwnProperty.call(o,n)&&(e[n]=o[n])})(r,t)};function K3(r,t){if(typeof t!="function"&&t!==null)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");function e(){this.constructor=r}H3(r,t),r.prototype=t===null?Object.create(t):(e.prototype=t.prototype,new e)}var yt=function(){return(yt=Object.assign||function(r){for(var t,e=1,o=arguments.length;e<o;e++)for(var n in t=arguments[e])Object.prototype.hasOwnProperty.call(t,n)&&(r[n]=t[n]);return r}).apply(this,arguments)};function rt(r,t,e,o){return new(e||(e=Promise))(function(n,i){function s(u){try{l(o.next(u))}catch(c){i(c)}}function a(u){try{l(o.throw(u))}catch(c){i(c)}}function l(u){var c;u.done?n(u.value):(c=u.value,c instanceof e?c:new e(function(p){p(c)})).then(s,a)}l((o=o.apply(r,t||[])).next())})}function ot(r,t){var e,o,n,i,s={label:0,sent:function(){if(1&n[0])throw n[1];return n[1]},trys:[],ops:[]};return i={next:a(0),throw:a(1),return:a(2)},typeof Symbol=="function"&&(i[Symbol.iterator]=function(){return this}),i;function a(l){return function(u){return function(c){if(e)throw new TypeError("Generator is already executing.");for(;s;)try{if(e=1,o&&(n=2&c[0]?o.return:c[0]?o.throw||((n=o.return)&&n.call(o),0):o.next)&&!(n=n.call(o,c[1])).done)return n;switch(o=0,n&&(c=[2&c[0],n.value]),c[0]){case 0:case 1:n=c;break;case 4:return s.label++,{value:c[1],done:!1};case 5:s.label++,o=c[1],c=[0];continue;case 7:c=s.ops.pop(),s.trys.pop();continue;default:if(n=s.trys,!((n=n.length>0&&n[n.length-1])||c[0]!==6&&c[0]!==2)){s=0;continue}if(c[0]===3&&(!n||c[1]>n[0]&&c[1]<n[3])){s.label=c[1];break}if(c[0]===6&&s.label<n[1]){s.label=n[1],n=c;break}if(n&&s.label<n[2]){s.label=n[2],s.ops.push(c);break}n[2]&&s.ops.pop(),s.trys.pop();continue}c=t.call(r,s)}catch(p){c=[6,p],o=0}finally{e=n=0}if(5&c[0])throw c[1];return{value:c[0]?c[1]:void 0,done:!0}}([l,u])}}}function la(r,t,e){if(e||arguments.length===2)for(var o,n=0,i=t.length;n<i;n++)!o&&n in t||(o||(o=Array.prototype.slice.call(t,0,n)),o[n]=t[n]);return r.concat(o||Array.prototype.slice.call(t))}var En=["nose","left_eye","right_eye","left_ear","right_ear","left_shoulder","right_shoulder","left_elbow","right_elbow","left_wrist","right_wrist","left_hip","right_hip","left_knee","right_knee","left_ankle","right_ankle"],od=["nose","left_eye_inner","left_eye","left_eye_outer","right_eye_inner","right_eye","right_eye_outer","left_ear","right_ear","mouth_left","mouth_right","left_shoulder","right_shoulder","left_elbow","right_elbow","left_wrist","right_wrist","left_pinky","right_pinky","left_index","right_index","left_thumb","right_thumb","left_hip","right_hip","left_knee","right_knee","left_ankle","right_ankle","left_heel","right_heel","left_foot_index","right_foot_index"],HX={left:[1,2,3,7,9,11,13,15,17,19,21,23,25,27,29,31],right:[4,5,6,8,10,12,14,16,18,20,22,24,26,28,30,32],middle:[0]},KX={left:[1,3,5,7,9,11,13,15],right:[2,4,6,8,10,12,14,16],middle:[0]},qX=[[0,1],[0,2],[1,3],[2,4],[5,6],[5,7],[5,11],[6,8],[6,12],[7,9],[8,10],[11,12],[11,13],[12,14],[13,15],[14,16]],jX=[[0,1],[0,4],[1,2],[2,3],[3,7],[4,5],[5,6],[6,8],[9,10],[11,12],[11,13],[11,23],[12,14],[14,16],[12,24],[13,15],[15,17],[16,18],[16,20],[15,17],[15,19],[15,21],[16,22],[17,19],[18,20],[23,25],[23,24],[24,26],[25,27],[26,28],[27,29],[28,30],[27,31],[28,32],[29,31],[30,32]];function Yg(r){return r instanceof SVGAnimatedLength?r.baseVal.value:r}function q3(r){return rt(this,void 0,void 0,function(){var t,e;return ot(this,function(o){switch(o.label){case 0:return t=document.createElement("canvas"),r instanceof st?[4,Ji.toPixels(r,t)]:[3,2];case 1:return o.sent(),[3,3];case 2:t.width=Yg(r.width),t.height=Yg(r.height),e=t.getContext("2d"),r instanceof ImageData?e.putImageData(r,0,0):e.drawImage(r,0,0),o.label=3;case 3:return[2,t]}})})}function j3(r){return rt(this,void 0,void 0,function(){var t,e,o,n,i,s;return ot(this,function(a){switch(a.label){case 0:return r instanceof st?(t=r.shape.slice(0,2),e=t[0],o=t[1],n=ImageData.bind,[4,Ji.toPixels(r)]):[3,2];case 1:return[2,new(n.apply(ImageData,[void 0,a.sent(),o,e]))];case 2:return i=document.createElement("canvas"),s=i.getContext("2d"),i.width=Yg(r.width),i.height=Yg(r.height),s.drawImage(r,0,0),[2,s.getImageData(0,0,i.width,i.height)]}})})}function XX(r){return rt(this,void 0,void 0,function(){var t,e;return ot(this,function(o){switch(o.label){case 0:return r instanceof SVGImageElement||r instanceof OffscreenCanvas?[4,q3(r)]:[3,2];case 1:return e=o.sent(),[3,3];case 2:e=r,o.label=3;case 3:return t=e,[2,Ji.fromPixels(t,4)]}})})}function X3(r){if(r<0||r>=256)throw new Error("Mask value must be in range [0, 255] but got ".concat(r));if(!Number.isInteger(r))throw new Error("Mask value must be an integer but got ".concat(r))}var rd={runtime:"mediapipe",enableSmoothing:!0,enableSegmentation:!1,smoothSegmentation:!0,modelType:"full"},YX=function(){function r(t){this.mask=t}return r.prototype.toCanvasImageSource=function(){return rt(this,void 0,void 0,function(){return ot(this,function(t){return[2,this.mask]})})},r.prototype.toImageData=function(){return rt(this,void 0,void 0,function(){return ot(this,function(t){return[2,j3(this.mask)]})})},r.prototype.toTensor=function(){return rt(this,void 0,void 0,function(){return ot(this,function(t){return[2,XX(this.mask)]})})},r.prototype.getUnderlyingType=function(){return"canvasimagesource"},r}();function QX(r){return X3(r),"person"}var ZX=function(){function r(t){var e,o=this;switch(this.width=0,this.height=0,this.selfieMode=!1,this.poseSolution=new G3.Pose({locateFile:function(n,i){if(t.solutionPath){var s=t.solutionPath.replace(/\/+$/,"");return"".concat(s,"/").concat(n)}return"".concat(i,"/").concat(n)}}),t.modelType){case"lite":e=0;break;case"heavy":e=2;break;case"full":default:e=1}this.poseSolution.setOptions({modelComplexity:e,smoothLandmarks:t.enableSmoothing,enableSegmentation:t.enableSegmentation,smoothSegmentation:t.smoothSegmentation,selfieMode:this.selfieMode}),this.poseSolution.onResults(function(n){if(o.height=n.image.height,o.width=n.image.width,n.poseLandmarks==null)o.poses=[];else{var i=o.translateOutput(n.poseLandmarks,n.poseWorldLandmarks);n.segmentationMask&&(i.segmentation={maskValueToLabel:QX,mask:new YX(n.segmentationMask)}),o.poses=[i]}})}return r.prototype.translateOutput=function(t,e){var o=this,n={keypoints:t.map(function(i,s){return{x:i.x*o.width,y:i.y*o.height,z:i.z,score:i.visibility,name:od[s]}})};return e!=null&&(n.keypoints3D=e.map(function(i,s){return{x:i.x,y:i.y,z:i.z,score:i.visibility,name:od[s]}})),n},r.prototype.estimatePoses=function(t,e,o){return rt(this,void 0,void 0,function(){var n,i;return ot(this,function(s){switch(s.label){case 0:return e&&e.flipHorizontal&&e.flipHorizontal!==this.selfieMode&&(this.selfieMode=e.flipHorizontal,this.poseSolution.setOptions({selfieMode:this.selfieMode})),t instanceof st?(i=ImageData.bind,[4,Ji.toPixels(t)]):[3,2];case 1:return n=new(i.apply(ImageData,[void 0,s.sent(),t.shape[1],t.shape[0]])),[3,3];case 2:n=t,s.label=3;case 3:return t=n,[4,this.poseSolution.send({image:t},o)];case 4:return s.sent(),[2,this.poses]}})})},r.prototype.dispose=function(){this.poseSolution.close()},r.prototype.reset=function(){this.poseSolution.reset()},r.prototype.initialize=function(){return this.poseSolution.initialize()},r}();function JX(r){return rt(this,void 0,void 0,function(){var t,e;return ot(this,function(o){switch(o.label){case 0:return t=function(n){if(n==null)return yt({},rd);var i=yt({},n);return i.runtime="mediapipe",i.enableSegmentation==null&&(i.enableSegmentation=rd.enableSegmentation),i.enableSmoothing==null&&(i.enableSmoothing=rd.enableSmoothing),i.smoothSegmentation==null&&(i.smoothSegmentation=rd.smoothSegmentation),i.modelType==null&&(i.modelType=rd.modelType),i}(r),[4,(e=new ZX(t)).initialize()];case 1:return o.sent(),[2,e]}})})}function Mc(r){return r instanceof st?{height:r.shape[0],width:r.shape[1]}:{height:r.height,width:r.width}}function Y3(r){return r-2*Math.PI*Math.floor((r+Math.PI)/(2*Math.PI))}function Vb(r){return r instanceof st?r:Ji.fromPixels(r)}function Q3(r,t,e){return Ob(e,"inputResolution"),[1/e.width*r[0][0]*t.width,1/e.height*r[0][1]*t.width,r[0][3]*t.width,1/e.width*r[1][0]*t.height,1/e.height*r[1][1]*t.height,r[1][3]*t.height,0,0]}function Ob(r,t){S.assert(r.width!==0,function(){return"".concat(t," width cannot be 0.")}),S.assert(r.height!==0,function(){return"".concat(t," height cannot be 0.")})}function Tb(r,t,e){var o=e.rotationVectorStartKeypointIndex,n=e.rotationVectorEndKeypointIndex,i=r.locationData,s=i.relativeKeypoints[o].x*t.width,a=i.relativeKeypoints[o].y*t.height,l=i.relativeKeypoints[n].x*t.width,u=i.relativeKeypoints[n].y*t.height,c=2*Math.sqrt((l-s)*(l-s)+(u-a)*(u-a)),p=function(d,m,f){var g,x=d.locationData,y=f.rotationVectorStartKeypointIndex,b=f.rotationVectorEndKeypointIndex;g=f.rotationVectorTargetAngle?f.rotationVectorTargetAngle:Math.PI*f.rotationVectorTargetAngleDegree/180;var I=x.relativeKeypoints[y].x*m.width,N=x.relativeKeypoints[y].y*m.height,M=x.relativeKeypoints[b].x*m.width,B=x.relativeKeypoints[b].y*m.height;return Y3(g-Math.atan2(-(B-N),M-I))}(r,t,e);return{xCenter:s/t.width,yCenter:a/t.height,width:c/t.width,height:c/t.height,rotation:p}}function Z3(r){if(r.length!==16)throw new Error("Array length must be 16 but got ".concat(r.length));return[[r[0],r[1],r[2],r[3]],[r[4],r[5],r[6],r[7]],[r[8],r[9],r[10],r[11]],[r[12],r[13],r[14],r[15]]]}function Eb(r,t,e,o,n,i,s){return r[t][n]*(r[e][i]*r[o][s]-r[e][s]*r[o][i])}function Tr(r,t,e){var o=(t+1)%4,n=(t+2)%4,i=(t+3)%4,s=(e+1)%4,a=(e+2)%4,l=(e+3)%4;return Eb(r,o,n,i,s,a,l)+Eb(r,n,i,o,s,a,l)+Eb(r,i,o,n,s,a,l)}function f3(r,t,e){e===void 0&&(e={ignoreRotation:!1});for(var o=[],n=0,i=r;n<i.length;n++){var s=i[n],a=s.x-.5,l=s.y-.5,u=e.ignoreRotation?0:t.rotation,c=Math.cos(u)*a-Math.sin(u)*l,p=Math.sin(u)*a+Math.cos(u)*l;c=c*t.width+t.xCenter,p=p*t.height+t.yCenter;var d=s.z*t.width,m=yt({},s);m.x=c,m.y=p,m.z=d,o.push(m)}return o}function J3(r,t){var e=function(o,n,i,s){var a=n-o,l=s-i;if(a===0)throw new Error("Original min and max are both ".concat(o,", range cannot be 0."));var u=l/a;return{scale:u,offset:i-o*u}}(0,255,t[0],t[1]);return Ee(function(){return xe(le(r,e.scale),e.offset)})}function Lb(r,t,e){var o,n,i,s,a,l,u,c,p,d,m,f,g,x,y=t.outputTensorSize,b=t.keepAspectRatio,I=t.borderMode,N=t.outputTensorFloatRange,M=Mc(r),B=function(K,X){return X?{xCenter:X.xCenter*K.width,yCenter:X.yCenter*K.height,width:X.width*K.width,height:X.height*K.height,rotation:X.rotation}:{xCenter:.5*K.width,yCenter:.5*K.height,width:K.width,height:K.height,rotation:0}}(M,e),W=function(K,X,re){if(re===void 0&&(re=!1),!re)return{top:0,left:0,right:0,bottom:0};var ce=X.height,pe=X.width;Ob(X,"targetSize"),Ob(K,"roi");var be,we,Te=ce/pe,qe=K.height/K.width,je=0,it=0;return Te>qe?(be=K.width,we=K.width*Te,it=(1-qe/Te)/2):(be=K.height/Te,we=K.height,je=(1-Te/qe)/2),K.width=be,K.height=we,{top:it,left:je,right:je,bottom:it}}(B,y,b),H=(o=B,n=M.width,i=M.height,s=!1,a=o.width,l=o.height,u=s?-1:1,c=Math.cos(o.rotation),p=Math.sin(o.rotation),d=o.xCenter,m=o.yCenter,f=1/n,g=1/i,(x=new Array(16))[0]=a*c*u*f,x[1]=-l*p*f,x[2]=0,x[3]=(-.5*a*c*u+.5*l*p+d)*f,x[4]=a*p*u*g,x[5]=l*c*g,x[6]=0,x[7]=(-.5*l*c-.5*a*p*u+m)*g,x[8]=0,x[9]=0,x[10]=a*f,x[11]=0,x[12]=0,x[13]=0,x[14]=0,x[15]=1,Z3(x));return{imageTensor:Ee(function(){var K=Vb(r),X=kr(Q3(H,M,y),[1,8]),re=I==="zero"?"constant":"nearest",ce=Yn.transform(gr(ze(K,"float32")),X,"bilinear",re,0,[y.height,y.width]);return N!=null?J3(ce,N):ce}),padding:W,transformationMatrix:H}}function h3(r,t,e,o){return o===1?.5*(r+t):r+(t-r)*e/(o-1)}function eY(r){return Ee(function(){var t=function(n){return Ee(function(){return[Fe(n,[0,0,0],[1,-1,1]),Fe(n,[0,0,1],[1,-1,-1])]})}(r),e=t[0],o=t[1];return{boxes:ut(o),logits:ut(e)}})}function eP(r){return r!=null&&r.currentTime!=null}function g3(r){for(var t={locationData:{relativeKeypoints:[]}},e=Number.MAX_SAFE_INTEGER,o=Number.MIN_SAFE_INTEGER,n=Number.MAX_SAFE_INTEGER,i=Number.MIN_SAFE_INTEGER,s=0;s<r.length;++s){var a=r[s];e=Math.min(e,a.x),o=Math.max(o,a.x),n=Math.min(n,a.y),i=Math.max(i,a.y),t.locationData.relativeKeypoints.push({x:a.x,y:a.y})}return t.locationData.relativeBoundingBox={xMin:e,yMin:n,xMax:o,yMax:i,width:o-e,height:i-n},t}function tY(r,t,e,o){return rt(this,void 0,void 0,function(){var n,i,s,a,l;return ot(this,function(u){switch(u.label){case 0:return r.sort(function(c,p){return Math.max.apply(Math,p.score)-Math.max.apply(Math,c.score)}),n=kr(r.map(function(c){return[c.locationData.relativeBoundingBox.yMin,c.locationData.relativeBoundingBox.xMin,c.locationData.relativeBoundingBox.yMax,c.locationData.relativeBoundingBox.xMax]})),i=Pt(r.map(function(c){return c.score[0]})),[4,Yn.nonMaxSuppressionAsync(n,i,t,e)];case 1:return[4,(s=u.sent()).array()];case 2:return a=u.sent(),l=r.filter(function(c,p){return a.indexOf(p)>-1}),Xe([n,i,s]),[2,l]}})})}function tP(r,t){return r.map(function(e){var o=yt(yt({},e),{x:e.x*t.width,y:e.y*t.height});return e.z!=null&&(o.z=e.z*t.width),o})}function rY(r,t,e){return rt(this,void 0,void 0,function(){var o,n,i,s,a,l,u,c,p,d,m,f,g,x,y,b,I,N,M,B,W,H,K,X;return ot(this,function(re){switch(re.label){case 0:if(o=ut(t,[0]),n=o.shape,i=n[0],s=n[1],a=n[2],r.length!==a)throw new Error("Expected heatmap to have same number of channels as the number of landmarks. But got landmarks length: "+"".concat(r.length,", heatmap length: ").concat(a));return l=[],[4,o.buffer()];case 1:for(u=re.sent(),c=0;c<r.length;c++)if(p=r[c],d=yt({},p),l.push(d),m=Math.trunc(d.x*s),f=Math.trunc(d.y*i),!(m<0||m>=s||f<0||m>=i)){for(g=Math.trunc((e.kernelSize-1)/2),x=Math.max(0,m-g),y=Math.min(s,m+g+1),b=Math.max(0,f-g),I=Math.min(i,f+g+1),N=0,M=0,B=0,W=0,H=b;H<I;++H)for(K=x;K<y;++K)X=u.get(H,K,c),N+=X,W=Math.max(W,X),M+=K*X,B+=H*X;W>=e.minConfidenceToRefine&&N>0&&(d.x=M/s/N,d.y=B/i/N)}return o.dispose(),[2,l]}})})}function x3(r,t){var e=t.left,o=t.top,n=t.left+t.right,i=t.top+t.bottom;return r.map(function(s){return yt(yt({},s),{x:(s.x-e)/(1-n),y:(s.y-o)/(1-i),z:s.z/(1-n)})})}function oY(r,t,e){return yn()==="webgl"?function(o,n,i){var s=i.combineWithPreviousRatio.toFixed(2),a={variableNames:["prevMask","newMask"],outputShape:o.shape,userCode:`
  void main() {
      ivec2 coords = getOutputCoords();
      int height = coords[0];
      int width = coords[1];

      float prevMaskValue = getPrevMask(height, width);
      float newMaskValue = getNewMask(height, width);

      /*
      * Assume p := newMaskValue
      * H(p) := 1 + (p * log(p) + (1-p) * log(1-p)) / log(2)
      * uncertainty alpha(p) =
      *   Clamp(1 - (1 - H(p)) * (1 - H(p)), 0, 1) [squaring the
      * uncertainty]
      *
      * The following polynomial approximates uncertainty alpha as a
      * function of (p + 0.5):
      */
      const float c1 = 5.68842;
      const float c2 = -0.748699;
      const float c3 = -57.8051;
      const float c4 = 291.309;
      const float c5 = -624.717;
      float t = newMaskValue - 0.5;
      float x = t * t;

      float uncertainty =
        1.0 - min(1.0, x * (c1 + x * (c2 + x * (c3 + x * (c4 + x * c5)))));

      float outputValue = newMaskValue + (prevMaskValue - newMaskValue) *
                             (uncertainty * `.concat(s,`);

      setOutput(outputValue);
    }
`)},l=Ui();return Ee(function(){var u=l.compileAndRun(a,[o,n]);return fr().makeTensorFromDataId(u.dataId,u.shape,u.dtype)})}(r,t,e):Ee(function(){var o=Re(t,.5),n=Ht(o),i=Re(1,qn(1,le(n,xe(5.68842,le(n,xe(-.748699,le(n,xe(-57.8051,le(n,xe(291.309,le(n,-624.717)))))))))));return xe(t,le(Re(r,t),le(i,e.combineWithPreviousRatio)))})}function nY(r,t,e){return rt(this,void 0,void 0,function(){var o,n,i,s,a;return ot(this,function(l){switch(l.label){case 0:return o=r[0],n=r[1],i=function(u,c,p){return Ee(function(){var d,m,f,g;p.reverseOutputOrder?(m=ut(Fe(u,[0,p.boxCoordOffset+0],[-1,1])),d=ut(Fe(u,[0,p.boxCoordOffset+1],[-1,1])),g=ut(Fe(u,[0,p.boxCoordOffset+2],[-1,1])),f=ut(Fe(u,[0,p.boxCoordOffset+3],[-1,1]))):(d=ut(Fe(u,[0,p.boxCoordOffset+0],[-1,1])),m=ut(Fe(u,[0,p.boxCoordOffset+1],[-1,1])),f=ut(Fe(u,[0,p.boxCoordOffset+2],[-1,1])),g=ut(Fe(u,[0,p.boxCoordOffset+3],[-1,1]))),m=xe(le(De(m,p.xScale),c.w),c.x),d=xe(le(De(d,p.yScale),c.h),c.y),p.applyExponentialOnBoxSize?(f=le(Dr(De(f,p.hScale)),c.h),g=le(Dr(De(g,p.wScale)),c.w)):(f=le(De(f,p.hScale),c.h),g=le(De(g,p.wScale),c.h));var x=Re(d,De(f,2)),y=Re(m,De(g,2)),b=xe(d,De(f,2)),I=xe(m,De(g,2)),N=dt([Z(x,[p.numBoxes,1]),Z(y,[p.numBoxes,1]),Z(b,[p.numBoxes,1]),Z(I,[p.numBoxes,1])],1);if(p.numKeypoints)for(var M=0;M<p.numKeypoints;++M){var B=p.keypointCoordOffset+M*p.numValuesPerKeypoint,W=void 0,H=void 0;p.reverseOutputOrder?(W=ut(Fe(u,[0,B],[-1,1])),H=ut(Fe(u,[0,B+1],[-1,1]))):(H=ut(Fe(u,[0,B],[-1,1])),W=ut(Fe(u,[0,B+1],[-1,1])));var K=xe(le(De(W,p.xScale),c.w),c.x),X=xe(le(De(H,p.yScale),c.h),c.y);N=dt([N,Z(K,[p.numBoxes,1]),Z(X,[p.numBoxes,1])],1)}return N})}(n,t,e),s=Ee(function(){var u=o;return e.sigmoidScore?(e.scoreClippingThresh!=null&&(u=ef(o,-e.scoreClippingThresh,e.scoreClippingThresh)),u=oo(u)):u}),[4,iY(i,s,e)];case 1:return a=l.sent(),Xe([i,s]),[2,a]}})})}function iY(r,t,e){return rt(this,void 0,void 0,function(){var o,n,i,s,a,l,u,c,p,d,m,f;return ot(this,function(g){switch(g.label){case 0:return o=[],[4,r.data()];case 1:return n=g.sent(),[4,t.data()];case 2:for(i=g.sent(),s=0;s<e.numBoxes;++s)if(!(e.minScoreThresh!=null&&i[s]<e.minScoreThresh||(a=s*e.numCoords,l=sY(n[a+0],n[a+1],n[a+2],n[a+3],i[s],e.flipVertically,s),(u=l.locationData.relativeBoundingBox).width<0||u.height<0))){if(e.numKeypoints>0)for((c=l.locationData).relativeKeypoints=[],p=e.numKeypoints*e.numValuesPerKeypoint,d=0;d<p;d+=e.numValuesPerKeypoint)m=a+e.keypointCoordOffset+d,f={x:n[m+0],y:e.flipVertically?1-n[m+1]:n[m+1]},c.relativeKeypoints.push(f);o.push(l)}return[2,o]}})})}function sY(r,t,e,o,n,i,s){return{score:[n],ind:s,locationData:{relativeBoundingBox:{xMin:t,yMin:i?1-e:r,xMax:o,yMax:i?1-r:e,width:o-t,height:e-r}}}}function aY(r,t){return r==="none"?t:function(e){return 1/(1+Math.exp(-e))}(t)}function y3(r,t,e,o){return rt(this,void 0,void 0,function(){var n,i,s,a,l,u,c,p;return ot(this,function(d){switch(d.label){case 0:return e=e||t.flipHorizontally||!1,o=o||t.flipVertically||!1,n=r.size,i=n/t.numLandmarks,[4,r.data()];case 1:for(s=d.sent(),a=[],l=0;l<t.numLandmarks;++l)u=l*i,(p={x:0,y:0}).x=e?t.inputImageWidth-s[u]:s[u],i>1&&(p.y=o?t.inputImageHeight-s[u+1]:s[u+1]),i>2&&(p.z=s[u+2]),i>3&&(p.score=aY(t.visibilityActivation,s[u+3])),a.push(p);for(c=0;c<a.length;++c)(p=a[c]).x=p.x/t.inputImageWidth,p.y=p.y/t.inputImageHeight,p.z=p.z/t.inputImageWidth/(t.normalizeZ||1);return[2,a]}})})}function v3(r,t,e){var o=r.width,n=r.height,i=r.rotation;if(e.rotation==null&&e.rotationDegree==null||(i=function(c,p){return p.rotation!=null?c+=p.rotation:p.rotationDegree!=null&&(c+=Math.PI*p.rotationDegree/180),Y3(c)}(i,e)),i===0)r.xCenter=r.xCenter+o*e.shiftX,r.yCenter=r.yCenter+n*e.shiftY;else{var s=(t.width*o*e.shiftX*Math.cos(i)-t.height*n*e.shiftY*Math.sin(i))/t.width,a=(t.width*o*e.shiftX*Math.sin(i)+t.height*n*e.shiftY*Math.cos(i))/t.height;r.xCenter=r.xCenter+s,r.yCenter=r.yCenter+a}if(e.squareLong){var l=Math.max(o*t.width,n*t.height);o=l/t.width,n=l/t.height}else if(e.squareShort){var u=Math.min(o*t.width,n*t.height);o=u/t.width,n=u/t.height}return r.width=o*e.scaleX,r.height=n*e.scaleY,r}function lY(r,t){return r.map(function(e){var o=yt(yt({},e),{x:e.x/t.width,y:e.y/t.height});return e.z!=null&&(e.z=e.z/t.width),o})}var ss=function(){function r(t){this.alpha=t,this.initialized=!1}return r.prototype.apply=function(t,e){var o;return this.initialized?o=e==null?this.storedValue+this.alpha*(t-this.storedValue):this.storedValue+this.alpha*e*Math.asinh((t-this.storedValue)/e):(o=t,this.initialized=!0),this.rawValue=t,this.storedValue=o,o},r.prototype.applyWithAlpha=function(t,e,o){return this.alpha=e,this.apply(t,o)},r.prototype.hasLastRawValue=function(){return this.initialized},r.prototype.lastRawValue=function(){return this.rawValue},r.prototype.reset=function(){this.initialized=!1},r}(),Nb=function(){function r(t){this.frequency=t.frequency,this.minCutOff=t.minCutOff,this.beta=t.beta,this.thresholdCutOff=t.thresholdCutOff,this.thresholdBeta=t.thresholdBeta,this.derivateCutOff=t.derivateCutOff,this.x=new ss(this.getAlpha(this.minCutOff)),this.dx=new ss(this.getAlpha(this.derivateCutOff)),this.lastTimestamp=0}return r.prototype.apply=function(t,e,o){if(t==null)return t;var n=Math.trunc(e);if(this.lastTimestamp>=n)return t;this.lastTimestamp!==0&&n!==0&&(this.frequency=1/(1e-6*(n-this.lastTimestamp))),this.lastTimestamp=n;var i=this.x.hasLastRawValue()?(t-this.x.lastRawValue())*o*this.frequency:0,s=this.dx.applyWithAlpha(i,this.getAlpha(this.derivateCutOff)),a=this.minCutOff+this.beta*Math.abs(s),l=this.thresholdCutOff!=null?this.thresholdCutOff+this.thresholdBeta*Math.abs(s):null;return this.x.applyWithAlpha(t,this.getAlpha(a),l)},r.prototype.getAlpha=function(t){return 1/(1+this.frequency/(2*Math.PI*t))},r}(),Mb=function(){function r(t){this.config=t}return r.prototype.apply=function(t,e,o){var n=this;if(t==null)return this.reset(),null;this.initializeFiltersIfEmpty(t);var i=1;if(!this.config.disableValueScaling){if(o<this.config.minAllowedObjectScale)return la([],t,!0);i=1/o}return t.map(function(s,a){var l=yt(yt({},s),{x:n.xFilters[a].apply(s.x,e,i),y:n.yFilters[a].apply(s.y,e,i)});return s.z!=null&&(l.z=n.zFilters[a].apply(s.z,e,i)),l})},r.prototype.reset=function(){this.xFilters=null,this.yFilters=null,this.zFilters=null},r.prototype.initializeFiltersIfEmpty=function(t){var e=this;this.xFilters!=null&&this.xFilters.length===t.length||(this.xFilters=t.map(function(o){return new Nb(e.config)}),this.yFilters=t.map(function(o){return new Nb(e.config)}),this.zFilters=t.map(function(o){return new Nb(e.config)}))},r}(),Rb=function(){function r(t){this.config=t,this.window=[],this.lowPassFilter=new ss(1),this.lastValue=0,this.lastValueScale=1,this.lastTimestamp=-1}return r.prototype.apply=function(t,e,o){if(t==null)return t;var n,i=Math.trunc(e);if(this.lastTimestamp>=i)return t;if(this.lastTimestamp===-1)n=1;else{for(var s=t*o-this.lastValue*this.lastValueScale,a=i-this.lastTimestamp,l=s,u=a,c=(1+this.window.length)*(1e6/30),p=0,d=this.window;p<d.length;p++){var m=d[p];if(u+m.duration>c)break;l+=m.distance,u+=m.duration}var f=l/(1e-6*u);n=1-1/(1+this.config.velocityScale*Math.abs(f)),this.window.unshift({distance:s,duration:a}),this.window.length>this.config.windowSize&&this.window.pop()}return this.lastValue=t,this.lastValueScale=o,this.lastTimestamp=i,this.lowPassFilter.applyWithAlpha(t,n)},r}(),uY=function(){function r(t){this.config=t}return r.prototype.apply=function(t,e,o){var n=this;if(t==null)return this.reset(),null;var i=1;if(!this.config.disableValueScaling){if(o<this.config.minAllowedObjectScale)return la([],t,!0);i=1/o}return this.initializeFiltersIfEmpty(t),t.map(function(s,a){var l=yt(yt({},s),{x:n.xFilters[a].apply(s.x,e,i),y:n.yFilters[a].apply(s.y,e,i)});return s.z!=null&&(l.z=n.zFilters[a].apply(s.z,e,i)),l})},r.prototype.reset=function(){this.xFilters=null,this.yFilters=null,this.zFilters=null},r.prototype.initializeFiltersIfEmpty=function(t){var e=this;this.xFilters!=null&&this.xFilters.length===t.length||(this.xFilters=t.map(function(o){return new Rb(e.config)}),this.yFilters=t.map(function(o){return new Rb(e.config)}),this.zFilters=t.map(function(o){return new Rb(e.config)}))},r}(),Pb=function(){function r(t){if(t.velocityFilter!=null)this.keypointsFilter=new uY(t.velocityFilter);else{if(t.oneEuroFilter==null)throw new Error("Either configure velocityFilter or oneEuroFilter, but got "+"".concat(t,"."));this.keypointsFilter=new Mb(t.oneEuroFilter)}}return r.prototype.apply=function(t,e,o,n,i){if(n===void 0&&(n=!1),t==null)return this.keypointsFilter.reset(),null;var s=i!=null?function(u,c){return(u.width*c.width+u.height*c.height)/2}(i,o):1,a=n?tP(t,o):t,l=this.keypointsFilter.apply(a,e,s);return n?lY(l,o):l},r}(),b3=function(){function r(t){this.alpha=t.alpha}return r.prototype.apply=function(t){var e=this;if(t==null)return this.visibilityFilters=null,null;this.visibilityFilters!=null&&this.visibilityFilters.length===t.length||(this.visibilityFilters=t.map(function(a){return new ss(e.alpha)}));for(var o=[],n=0;n<t.length;++n){var i=t[n],s=yt({},i);s.score=this.visibilityFilters[n].apply(i.score),o.push(s)}return o},r}(),cY={reduceBoxesInLowestlayer:!1,interpolatedScaleAspectRatio:1,featureMapHeight:[],featureMapWidth:[],numLayers:5,minScale:.1484375,maxScale:.75,inputSizeHeight:224,inputSizeWidth:224,anchorOffsetX:.5,anchorOffsetY:.5,strides:[8,16,32,32,32],aspectRatios:[1],fixedAnchorSize:!0},Lc={runtime:"tfjs",modelType:"full",enableSmoothing:!0,enableSegmentation:!1,smoothSegmentation:!0,detectorModelUrl:"https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/detector/1",landmarkModelUrl:"https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/landmark/full/2"},pY={maxPoses:1,flipHorizontal:!1},dY={applyExponentialOnBoxSize:!1,flipVertically:!1,ignoreClasses:[],numClasses:1,numBoxes:2254,numCoords:12,boxCoordOffset:0,keypointCoordOffset:4,numKeypoints:4,numValuesPerKeypoint:2,sigmoidScore:!0,scoreClippingThresh:100,reverseOutputOrder:!0,xScale:224,yScale:224,hScale:224,wScale:224,minScoreThresh:.5},mY=.3,S3={shiftX:0,shiftY:0,scaleX:1.25,scaleY:1.25,squareLong:!0},fY={outputTensorSize:{width:224,height:224},keepAspectRatio:!0,outputTensorFloatRange:[-1,1],borderMode:"zero"},hY={outputTensorSize:{width:256,height:256},keepAspectRatio:!0,outputTensorFloatRange:[0,1],borderMode:"zero"},gY={numLandmarks:39,inputImageWidth:256,inputImageHeight:256,visibilityActivation:"sigmoid",flipHorizontally:!1,flipVertically:!1},xY={numLandmarks:39,inputImageWidth:1,inputImageHeight:1,visibilityActivation:"sigmoid",flipHorizontally:!1,flipVertically:!1},yY={kernelSize:7,minConfidenceToRefine:.5},w3={alpha:.1},vY={oneEuroFilter:{frequency:30,minCutOff:.05,beta:80,derivateCutOff:1,minAllowedObjectScale:1e-6}},bY={oneEuroFilter:{frequency:30,minCutOff:.01,beta:10,derivateCutOff:1,minAllowedObjectScale:1e-6}},SY={oneEuroFilter:{frequency:30,minCutOff:.1,beta:40,derivateCutOff:1,minAllowedObjectScale:1e-6,disableValueScaling:!0}},wY={activation:"none"},_Y={combineWithPreviousRatio:.7},CY=function(){function r(t){this.mask=t}return r.prototype.toCanvasImageSource=function(){return rt(this,void 0,void 0,function(){return ot(this,function(t){return[2,q3(this.mask)]})})},r.prototype.toImageData=function(){return rt(this,void 0,void 0,function(){return ot(this,function(t){return[2,j3(this.mask)]})})},r.prototype.toTensor=function(){return rt(this,void 0,void 0,function(){return ot(this,function(t){return[2,this.mask]})})},r.prototype.getUnderlyingType=function(){return"tensor"},r}();function kY(r){return X3(r),"person"}var IY=function(){function r(t,e,o,n,i,s){this.detectorModel=t,this.landmarkModel=e,this.enableSmoothing=o,this.enableSegmentation=n,this.smoothSegmentation=i,this.modelType=s,this.regionOfInterest=null,this.prevFilteredSegmentationMask=null,this.anchors=function(p){p.reduceBoxesInLowestLayer==null&&(p.reduceBoxesInLowestLayer=!1),p.interpolatedScaleAspectRatio==null&&(p.interpolatedScaleAspectRatio=1),p.fixedAnchorSize==null&&(p.fixedAnchorSize=!1);for(var d=[],m=0;m<p.numLayers;){for(var f=[],g=[],x=[],y=[],b=m;b<p.strides.length&&p.strides[b]===p.strides[m];){var I=h3(p.minScale,p.maxScale,b,p.strides.length);if(b===0&&p.reduceBoxesInLowestLayer)x.push(1),x.push(2),x.push(.5),y.push(.1),y.push(I),y.push(I);else{for(var N=0;N<p.aspectRatios.length;++N)x.push(p.aspectRatios[N]),y.push(I);if(p.interpolatedScaleAspectRatio>0){var M=b===p.strides.length-1?1:h3(p.minScale,p.maxScale,b+1,p.strides.length);y.push(Math.sqrt(I*M)),x.push(p.interpolatedScaleAspectRatio)}}b++}for(var B=0;B<x.length;++B){var W=Math.sqrt(x[B]);f.push(y[B]/W),g.push(y[B]*W)}var H=0,K=0;if(p.featureMapHeight.length>0)H=p.featureMapHeight[m],K=p.featureMapWidth[m];else{var X=p.strides[m];H=Math.ceil(p.inputSizeHeight/X),K=Math.ceil(p.inputSizeWidth/X)}for(var re=0;re<H;++re)for(var ce=0;ce<K;++ce)for(var pe=0;pe<f.length;++pe){var be={xCenter:(ce+p.anchorOffsetX)/K,yCenter:(re+p.anchorOffsetY)/H,width:0,height:0};p.fixedAnchorSize?(be.width=1,be.height=1):(be.width=g[pe],be.height=f[pe]),d.push(be)}m=b}return d}(cY);var a=Pt(this.anchors.map(function(p){return p.width})),l=Pt(this.anchors.map(function(p){return p.height})),u=Pt(this.anchors.map(function(p){return p.xCenter})),c=Pt(this.anchors.map(function(p){return p.yCenter}));this.anchorTensor={x:u,y:c,w:a,h:l},this.prevFilteredSegmentationMask=this.enableSegmentation?kr([],[0,0]):null}return r.prototype.estimatePoses=function(t,e,o){return rt(this,void 0,void 0,function(){var n,i,s,a,l,u,c,p,d,m,f,g,x,y,b,I,N,M,B,W,H,K,X;return ot(this,function(re){switch(re.label){case 0:return n=function(ce){var pe;if((pe=ce==null?pY:yt({},ce)).maxPoses==null&&(pe.maxPoses=1),pe.maxPoses<=0)throw new Error("Invalid maxPoses ".concat(pe.maxPoses,". Should be > 0."));if(pe.maxPoses>1)throw new Error("Multi-pose detection is not implemented yet. Please set maxPoses to 1.");return pe}(e),t==null?(this.reset(),[2,[]]):(this.maxPoses=n.maxPoses,this.timestamp=o!=null?1e3*o:eP(t)?1e6*t.currentTime:null,i=Mc(t),s=Ee(function(){return ze(Vb(t),"float32")}),(a=this.regionOfInterest)!=null?[3,2]:[4,this.detectPose(s)]);case 1:if((l=re.sent()).length===0)return this.reset(),s.dispose(),[2,[]];u=l[0],a=this.poseDetectionToRoi(u,i),re.label=2;case 2:return[4,this.poseLandmarksByRoi(a,s)];case 3:return c=re.sent(),s.dispose(),c==null?(this.reset(),[2,[]]):(p=c.landmarks,d=c.auxiliaryLandmarks,m=c.poseScore,f=c.worldLandmarks,g=c.segmentationMask,x=this.poseLandmarkFiltering(p,d,f,i),y=x.actualLandmarksFiltered,b=x.auxiliaryLandmarksFiltered,I=x.actualWorldLandmarksFiltered,N=this.poseLandmarksToRoi(b,i),this.regionOfInterest=N,M=this.smoothSegmentation&&g!=null?this.poseSegmentationFiltering(g):g,(B=y!=null?tP(y,i):null)!=null&&B.forEach(function(ce,pe){ce.name=od[pe]}),(W=I)!=null&&W.forEach(function(ce,pe){ce.name=od[pe]}),H={score:m,keypoints:B,keypoints3D:W},M!==null&&(K=Ee(function(){var ce=gr(M,2),pe=no(ce,[[0,0],[0,0],[0,1]]);return vf(pe,[[0,0],[0,0],[0,2]],"symmetric")}),this.smoothSegmentation||Xe(M),X={maskValueToLabel:kY,mask:new CY(K)},H.segmentation=X),[2,[H]])}})})},r.prototype.poseSegmentationFiltering=function(t){var e=this.prevFilteredSegmentationMask;return e.size===0?this.prevFilteredSegmentationMask=t:(this.prevFilteredSegmentationMask=oY(e,t,_Y),Xe(t)),Xe(e),this.prevFilteredSegmentationMask},r.prototype.dispose=function(){this.detectorModel.dispose(),this.landmarkModel.dispose(),Xe([this.anchorTensor.x,this.anchorTensor.y,this.anchorTensor.w,this.anchorTensor.h,this.prevFilteredSegmentationMask])},r.prototype.reset=function(){this.regionOfInterest=null,this.enableSegmentation&&(Xe(this.prevFilteredSegmentationMask),this.prevFilteredSegmentationMask=kr([],[0,0])),this.visibilitySmoothingFilterActual=null,this.visibilitySmoothingFilterAuxiliary=null,this.landmarksSmoothingFilterActual=null,this.landmarksSmoothingFilterAuxiliary=null},r.prototype.detectPose=function(t){return rt(this,void 0,void 0,function(){var e,o,n,i,s,a,l,u,c,p;return ot(this,function(d){switch(d.label){case 0:return e=Lb(t,fY),o=e.imageTensor,n=e.padding,i=this.detectorModel.predict(o),s=eY(i),a=s.boxes,[4,nY([l=s.logits,a],this.anchorTensor,dY)];case 1:return(u=d.sent()).length===0?(Xe([o,i,l,a]),[2,u]):[4,tY(u,this.maxPoses,mY)];case 2:return c=d.sent(),p=function(m,f){m===void 0&&(m=[]);for(var g=f.left,x=f.top,y=f.left+f.right,b=f.top+f.bottom,I=0;I<m.length;I++){var N=m[I],M=N.locationData.relativeBoundingBox,B=(M.xMin-g)/(1-y),W=(M.yMin-x)/(1-b),H=M.width/(1-y),K=M.height/(1-b);M.xMin=B,M.yMin=W,M.width=H,M.height=K,M.xMax=B+H,M.yMax=W+K;var X=N.locationData.relativeKeypoints;X&&X.forEach(function(re){var ce=(re.x-g)/(1-y),pe=(re.y-x)/(1-b);re.x=ce,re.y=pe})}return m}(c,n),Xe([o,i,l,a]),[2,p]}})})},r.prototype.poseDetectionToRoi=function(t,e){return v3(Tb(t,e,{rotationVectorEndKeypointIndex:1,rotationVectorStartKeypointIndex:0,rotationVectorTargetAngleDegree:90}),e,S3)},r.prototype.poseLandmarksByRoi=function(t,e){return rt(this,void 0,void 0,function(){var o,n,i,s,a,l,u,c,p,d,m,f,g,x;return ot(this,function(y){switch(y.label){case 0:if(o=Mc(e),n=Lb(e,hY,t),i=n.imageTensor,s=n.padding,a=n.transformationMatrix,this.modelType!=="lite"&&this.modelType!=="full"&&this.modelType!=="heavy")throw new Error("Model type must be one of lite, full or heavy,"+"but got ".concat(this.modelType));return l=["ld_3d","output_poseflag","activation_heatmap","world_3d"],this.enableSegmentation&&l.push("activation_segmentation"),u=this.landmarkModel.execute(i,l),[4,this.tensorsToPoseLandmarksAndSegmentation(u)];case 1:return(c=y.sent())==null?(Xe(u),Xe(i),[2,null]):(p=c.landmarks,d=c.auxiliaryLandmarks,m=c.poseScore,f=c.worldLandmarks,g=c.segmentationMask,[4,this.poseLandmarksAndSegmentationInverseProjection(o,t,s,a,p,d,f,g)]);case 2:return x=y.sent(),Xe(u),Xe(i),[2,yt({poseScore:m},x)]}})})},r.prototype.poseLandmarksAndSegmentationInverseProjection=function(t,e,o,n,i,s,a,l){return rt(this,void 0,void 0,function(){var u,c,p,d,m,f;return ot(this,function(g){return u=x3(i,o),c=x3(s,o),p=f3(u,e),d=f3(c,e),m=function(x,y){for(var b=[],I=0,N=x;I<N.length;I++){var M=N[I],B=M.x,W=M.y,H=y.rotation,K=Math.cos(H)*B-Math.sin(H)*W,X=Math.sin(H)*B+Math.cos(H)*W,re=yt({},M);re.x=K,re.y=X,b.push(re)}return b}(a,e),f=null,this.enableSegmentation&&(f=Ee(function(){var x=l.shape,y=x[0],b=x[1],I=function(B){var W=Z3(new Array(16).fill(0));W[0][0]=Tr(B,0,0),W[1][0]=-Tr(B,0,1),W[2][0]=Tr(B,0,2),W[3][0]=-Tr(B,0,3),W[0][2]=Tr(B,2,0),W[1][2]=-Tr(B,2,1),W[2][2]=Tr(B,2,2),W[3][2]=-Tr(B,2,3),W[0][1]=-Tr(B,1,0),W[1][1]=Tr(B,1,1),W[2][1]=-Tr(B,1,2),W[3][1]=Tr(B,1,3),W[0][3]=-Tr(B,3,0),W[1][3]=Tr(B,3,1),W[2][3]=-Tr(B,3,2),W[3][3]=Tr(B,3,3);for(var H=B[0][0]*W[0][0]+B[1][0]*W[0][1]+B[2][0]*W[0][2]+B[3][0]*W[0][3],K=0;K<W.length;K++)for(var X=0;X<W.length;X++)W[K][X]/=H;return W}(n),N=kr(Q3(I,{width:b,height:y},t),[1,8]),M=[1,y,b,1];return ut(Yn.transform(Z(l,M),N,"bilinear","constant",0,[t.height,t.width]),[0,3])}),Xe(l)),[2,{landmarks:p,auxiliaryLandmarks:d,worldLandmarks:m,segmentationMask:f}]})})},r.prototype.tensorsToPoseLandmarksAndSegmentation=function(t){return rt(this,void 0,void 0,function(){var e,o,n,i,s,a,l,u,c,p,d,m,f;return ot(this,function(g){switch(g.label){case 0:return e=t[0],o=t[1],n=t[2],i=t[3],s=this.enableSegmentation?t[4]:null,[4,o.data()];case 1:return(a=g.sent()[0])<.5?[2,null]:[4,y3(e,gY)];case 2:return[4,rY(g.sent(),n,yY)];case 3:return l=g.sent(),u=l.slice(0,33),c=l.slice(33,35),[4,y3(i,xY)];case 4:return p=g.sent(),d=p.slice(0,33),m=function(x,y,b){b===void 0&&(b=!0);for(var I=[],N=0;N<x.length;N++){var M=yt({},y[N]);b&&(M.score=x[N].score),I.push(M)}return I}(u,d,!0),f=this.enableSegmentation?function(x,y,b){return Ee(function(){var I=ut(x,[0]),N=I.shape[2];if(N===1){var M=I;switch(y.activation){case"none":break;case"sigmoid":M=oo(M);break;case"softmax":throw new Error("Softmax activation requires two channels.");default:throw new Error("Activation not supported (".concat(y.activation,")"))}var B=b?Yn.resizeBilinear(M,[b.height,b.width]):M;return ut(B,[2])}throw new Error("Unsupported number of tensor channels ".concat(N))})}(s,wY):null,[2,{landmarks:u,auxiliaryLandmarks:c,poseScore:a,worldLandmarks:m,segmentationMask:f}]}})})},r.prototype.poseLandmarksToRoi=function(t,e){return v3(Tb(g3(t),e,{rotationVectorStartKeypointIndex:0,rotationVectorEndKeypointIndex:1,rotationVectorTargetAngleDegree:90}),e,S3)},r.prototype.poseLandmarkFiltering=function(t,e,o,n){var i,s,a;if(this.timestamp!=null&&this.enableSmoothing){var l=Tb(g3(e),n,{rotationVectorEndKeypointIndex:0,rotationVectorStartKeypointIndex:1,rotationVectorTargetAngleDegree:90});this.visibilitySmoothingFilterActual==null&&(this.visibilitySmoothingFilterActual=new b3(w3)),i=this.visibilitySmoothingFilterActual.apply(t),this.visibilitySmoothingFilterAuxiliary==null&&(this.visibilitySmoothingFilterAuxiliary=new b3(w3)),s=this.visibilitySmoothingFilterAuxiliary.apply(e),a=this.visibilitySmoothingFilterActual.apply(o),this.landmarksSmoothingFilterActual==null&&(this.landmarksSmoothingFilterActual=new Pb(vY)),i=this.landmarksSmoothingFilterActual.apply(i,this.timestamp,n,!0,l),this.landmarksSmoothingFilterAuxiliary==null&&(this.landmarksSmoothingFilterAuxiliary=new Pb(bY)),s=this.landmarksSmoothingFilterAuxiliary.apply(s,this.timestamp,n,!0,l),this.worldLandmarksSmoothingFilterActual==null&&(this.worldLandmarksSmoothingFilterActual=new Pb(SY)),a=this.worldLandmarksSmoothingFilterActual.apply(o,this.timestamp)}else i=t,s=e,a=o;return{actualLandmarksFiltered:i,auxiliaryLandmarksFiltered:s,actualWorldLandmarksFiltered:a}},r}();function TY(r){return rt(this,void 0,void 0,function(){var t,e,o,n,i,s;return ot(this,function(a){switch(a.label){case 0:return t=function(l){var u=yt({},l??Lc);if(u.enableSmoothing==null&&(u.enableSmoothing=Lc.enableSmoothing),u.enableSegmentation==null&&(u.enableSegmentation=Lc.enableSegmentation),u.smoothSegmentation==null&&(u.smoothSegmentation=Lc.smoothSegmentation),u.modelType==null&&(u.modelType=Lc.modelType),u.detectorModelUrl==null&&(u.detectorModelUrl=Lc.detectorModelUrl),u.landmarkModelUrl==null)switch(u.modelType){case"lite":u.landmarkModelUrl="https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/landmark/lite/2";break;case"heavy":u.landmarkModelUrl="https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/landmark/heavy/2";break;case"full":default:u.landmarkModelUrl="https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/landmark/full/2"}return u}(r),e=typeof t.detectorModelUrl=="string"&&t.detectorModelUrl.indexOf("https://tfhub.dev")>-1,o=typeof t.landmarkModelUrl=="string"&&t.landmarkModelUrl.indexOf("https://tfhub.dev")>-1,[4,Promise.all([ts(t.detectorModelUrl,{fromTFHub:e}),ts(t.landmarkModelUrl,{fromTFHub:o})])];case 1:return n=a.sent(),i=n[0],s=n[1],[2,new IY(i,s,t.enableSmoothing,t.enableSegmentation,t.smoothSegmentation,t.modelType)]}})})}var ua,ar,rP=function(){function r(t){(function(e){if(e.maxTracks<1)throw new Error("Must specify 'maxTracks' to be at least 1, but "+"encountered ".concat(e.maxTracks));if(e.maxAge<=0)throw new Error("Must specify 'maxAge' to be positive, but "+"encountered ".concat(e.maxAge));if(e.keypointTrackerParams!==void 0){if(e.keypointTrackerParams.keypointConfidenceThreshold<0||e.keypointTrackerParams.keypointConfidenceThreshold>1)throw new Error("Must specify 'keypointConfidenceThreshold' to be in the range [0, 1], but encountered "+"".concat(e.keypointTrackerParams.keypointConfidenceThreshold));if(e.keypointTrackerParams.minNumberOfKeypoints<1)throw new Error("Must specify 'minNumberOfKeypoints' to be at least 1, but "+"encountered ".concat(e.keypointTrackerParams.minNumberOfKeypoints));for(var o=0,n=e.keypointTrackerParams.keypointFalloff;o<n.length;o++){var i=n[o];if(i<=0)throw new Error("Must specify each keypoint falloff parameterto be positive "+"but encountered ".concat(i))}}})(t),this.tracks=[],this.maxTracks=t.maxTracks,this.maxAge=1e3*t.maxAge,this.minSimilarity=t.minSimilarity,this.nextID=1}return r.prototype.apply=function(t,e){this.filterOldTracks(e);var o=this.computeSimilarity(t);return this.assignTracks(t,o,e),this.updateTracks(e),t},r.prototype.getTracks=function(){return this.tracks.slice()},r.prototype.getTrackIDs=function(){return new Set(this.tracks.map(function(t){return t.id}))},r.prototype.filterOldTracks=function(t){var e=this;this.tracks=this.tracks.filter(function(o){return t-o.lastTimestamp<=e.maxAge})},r.prototype.assignTracks=function(t,e,o){for(var n=Array.from(Array(e[0].length).keys()),i=[],s=0,a=Array.from(Array(t.length).keys());s<a.length;s++){var l=a[s];if(n.length!==0){for(var u=-1,c=-1,p=0,d=n;p<d.length;p++){var m=d[p],f=e[l][m];f>=this.minSimilarity&&f>c&&(u=m,c=f)}if(u>=0){var g=this.tracks[u];g=Object.assign(g,this.createTrack(t[l],o,g.id)),t[l].id=g.id;var x=n.indexOf(u);n.splice(x,1)}else i.push(l)}else i.push(l)}for(var y=0,b=i;y<b.length;y++){l=b[y];var I=this.createTrack(t[l],o);this.tracks.push(I),t[l].id=I.id}},r.prototype.updateTracks=function(t){this.tracks.sort(function(e,o){return o.lastTimestamp-e.lastTimestamp}),this.tracks=this.tracks.slice(0,this.maxTracks)},r.prototype.createTrack=function(t,e,o){var n={id:o||this.nextTrackID(),lastTimestamp:e,keypoints:la([],t.keypoints,!0).map(function(i){return yt({},i)})};return t.box!==void 0&&(n.box=yt({},t.box)),n},r.prototype.nextTrackID=function(){var t=this.nextID;return this.nextID+=1,t},r.prototype.remove=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];this.tracks=this.tracks.filter(function(o){return!t.includes(o.id)})},r.prototype.reset=function(){this.tracks=[]},r}(),EY=function(r){function t(e){return r.call(this,e)||this}return K3(t,r),t.prototype.computeSimilarity=function(e){var o=this;return e.length===0||this.tracks.length===0?[[]]:e.map(function(n){return o.tracks.map(function(i){return o.iou(n,i)})})},t.prototype.iou=function(e,o){var n=Math.max(e.box.xMin,o.box.xMin),i=Math.max(e.box.yMin,o.box.yMin),s=Math.min(e.box.xMax,o.box.xMax),a=Math.min(e.box.yMax,o.box.yMax);if(n>=s||i>=a)return 0;var l=(s-n)*(a-i);return l/(e.box.width*e.box.height+o.box.width*o.box.height-l)},t}(rP),NY=function(r){function t(e){var o=r.call(this,e)||this;return o.keypointThreshold=e.keypointTrackerParams.keypointConfidenceThreshold,o.keypointFalloff=e.keypointTrackerParams.keypointFalloff,o.minNumKeyoints=e.keypointTrackerParams.minNumberOfKeypoints,o}return K3(t,r),t.prototype.computeSimilarity=function(e){if(e.length===0||this.tracks.length===0)return[[]];for(var o=[],n=0,i=e;n<i.length;n++){for(var s=i[n],a=[],l=0,u=this.tracks;l<u.length;l++){var c=u[l];a.push(this.oks(s,c))}o.push(a)}return o},t.prototype.oks=function(e,o){for(var n=this.area(o.keypoints)+1e-6,i=0,s=0,a=0;a<e.keypoints.length;++a){var l=e.keypoints[a],u=o.keypoints[a];if(!(l.score<this.keypointThreshold||u.score<this.keypointThreshold)){s+=1;var c=Math.pow(l.x-u.x,2)+Math.pow(l.y-u.y,2),p=2*this.keypointFalloff[a];i+=Math.exp(-1*c/(2*n*Math.pow(p,2)))}}return s<this.minNumKeyoints?0:i/s},t.prototype.area=function(e){var o=this,n=e.filter(function(l){return l.score>o.keypointThreshold}),i=Math.min.apply(Math,la([1],n.map(function(l){return l.x}),!1)),s=Math.max.apply(Math,la([0],n.map(function(l){return l.x}),!1)),a=Math.min.apply(Math,la([1],n.map(function(l){return l.y}),!1));return(s-i)*(Math.max.apply(Math,la([0],n.map(function(l){return l.y}),!1))-a)},t}(rP);function oP(r){switch(r){case ar.BlazePose:return od.reduce(function(t,e,o){return t[e]=o,t},{});case ar.PoseNet:case ar.MoveNet:return En.reduce(function(t,e,o){return t[e]=o,t},{});default:throw new Error("Model ".concat(r," is not supported."))}}(function(r){r.Keypoint="keypoint",r.BoundingBox="boundingBox"})(ua||(ua={})),function(r){r.MoveNet="MoveNet",r.BlazePose="BlazePose",r.PoseNet="PoseNet"}(ar||(ar={}));var nP=Object.freeze({__proto__:null,getKeypointIndexBySide:function(r){switch(r){case ar.BlazePose:return HX;case ar.PoseNet:case ar.MoveNet:return KX;default:throw new Error("Model ".concat(r," is not supported."))}},getAdjacentPairs:function(r){switch(r){case ar.BlazePose:return jX;case ar.PoseNet:case ar.MoveNet:return qX;default:throw new Error("Model ".concat(r," is not supported."))}},getKeypointIndexByName:oP}),_3=["SinglePose.Lightning","SinglePose.Thunder","MultiPose.Lightning"],iP={modelType:"SinglePose.Lightning",enableSmoothing:!0},C3={},k3={frequency:30,minCutOff:2.5,beta:300,derivateCutOff:2.5,thresholdCutOff:.5,thresholdBeta:5,disableValueScaling:!0},$b={maxTracks:18,maxAge:1e3,minSimilarity:.2,keypointTrackerParams:{keypointConfidenceThreshold:.3,keypointFalloff:[.026,.025,.025,.035,.035,.079,.079,.072,.072,.062,.062,.107,.107,.087,.087,.089,.089],minNumberOfKeypoints:4}},I3={maxTracks:18,maxAge:1e3,minSimilarity:.15,trackerParams:{}};function RY(r,t,e,o){for(var n={},i=0,s=En;i<s.length;i++){var a=s[i];n[a]=[t[e[a]].y*o.height,t[e[a]].x*o.width]}if(function(b,I){return(b[I.left_hip].score>.2||b[I.right_hip].score>.2)&&(b[I.left_shoulder].score>.2||b[I.right_shoulder].score>.2)}(t,e)){var l=(n.left_hip[0]+n.right_hip[0])/2,u=(n.left_hip[1]+n.right_hip[1])/2,c=function(b,I,N,M,B){for(var W=["left_shoulder","right_shoulder","left_hip","right_hip"],H=0,K=0,X=0;X<W.length;X++)(we=Math.abs(M-N[W[X]][0]))>H&&(H=we),(Te=Math.abs(B-N[W[X]][1]))>K&&(K=Te);for(var re=0,ce=0,pe=0,be=Object.keys(N);pe<be.length;pe++){var we,Te,qe=be[pe];b[I[qe]].score<.2||((we=Math.abs(M-N[qe][0]))>re&&(re=we),(Te=Math.abs(B-N[qe][1]))>ce&&(ce=Te))}return[H,K,re,ce]}(t,e,n,l,u),p=c[0],d=c[1],m=c[2],f=c[3],g=Math.max(1.9*d,1.9*p,1.2*m,1.2*f),x=[l-(g=Math.min(g,Math.max(u,o.width-u,l,o.height-l))),u-g];if(g>Math.max(o.width,o.height)/2)return Bb(r==null,o);var y=2*g;return{yMin:x[0]/o.height,xMin:x[1]/o.width,yMax:(x[0]+y)/o.height,xMax:(x[1]+y)/o.width,height:(x[0]+y)/o.height-x[0]/o.height,width:(x[1]+y)/o.width-x[1]/o.width}}return Bb(r==null,o)}function Bb(r,t){var e,o,n,i;return r?t.width>t.height?(e=1,o=t.height/t.width,n=0,i=(t.width/2-t.height/2)/t.width):(e=t.width/t.height,o=1,n=(t.height/2-t.width/2)/t.height,i=0):t.width>t.height?(e=t.width/t.height,o=1,n=(t.height/2-t.width/2)/t.height,i=0):(e=1,o=t.height/t.width,n=0,i=(t.width/2-t.height/2)/t.width),{yMin:n,xMin:i,yMax:n+e,xMax:i+o,height:e,width:o}}function PY(r){var t,e=r==null?iP:yt({},r);if(e.modelType==null)e.modelType="SinglePose.Lightning";else if(_3.indexOf(e.modelType)<0)throw new Error("Invalid architecture ".concat(e.modelType,". ")+"Should be one of ".concat(_3));if(e.enableSmoothing==null&&(e.enableSmoothing=!0),e.minPoseScore!=null&&(e.minPoseScore<0||e.minPoseScore>1))throw new Error("minPoseScore should be between 0.0 and 1.0");if(e.multiPoseMaxDimension!=null&&(e.multiPoseMaxDimension%32!=0||e.multiPoseMaxDimension<32))throw new Error("multiPoseMaxDimension must be a multiple of 32 and higher than 0");if(e.modelType==="MultiPose.Lightning"&&e.enableTracking==null&&(e.enableTracking=!0),e.modelType==="MultiPose.Lightning"&&e.enableTracking===!0)if(e.trackerType==null&&(e.trackerType=ua.BoundingBox),e.trackerType===ua.Keypoint)e.trackerConfig!=null?e.trackerConfig=function(o){var n=T3($b,o);return n.keypointTrackerParams=yt({},$b.keypointTrackerParams),o.keypointTrackerParams!=null&&(o.keypointTrackerParams.keypointConfidenceThreshold!=null&&(n.keypointTrackerParams.keypointConfidenceThreshold=o.keypointTrackerParams.keypointConfidenceThreshold),o.keypointTrackerParams.keypointFalloff!=null&&(n.keypointTrackerParams.keypointFalloff=o.keypointTrackerParams.keypointFalloff),o.keypointTrackerParams.minNumberOfKeypoints!=null&&(n.keypointTrackerParams.minNumberOfKeypoints=o.keypointTrackerParams.minNumberOfKeypoints)),n}(e.trackerConfig):e.trackerConfig=$b;else{if(e.trackerType!==ua.BoundingBox)throw new Error("Tracker type not supported by MoveNet");e.trackerConfig!=null?e.trackerConfig=(t=e.trackerConfig,T3(I3,t)):e.trackerConfig=I3}return e}function T3(r,t){var e={maxTracks:r.maxTracks,maxAge:r.maxAge,minSimilarity:r.minSimilarity};return t.maxTracks!=null&&(e.maxTracks=t.maxTracks),t.maxAge!=null&&(e.maxAge=t.maxAge),t.minSimilarity!=null&&(e.minSimilarity=t.minSimilarity),e}var $Y=function(){function r(t,e){this.moveNetModel=t,this.modelInputResolution={height:0,width:0},this.keypointIndexByName=oP(ar.MoveNet),e.modelType==="SinglePose.Lightning"?(this.modelInputResolution.width=192,this.modelInputResolution.height=192):e.modelType==="SinglePose.Thunder"&&(this.modelInputResolution.width=256,this.modelInputResolution.height=256),this.multiPoseModel=e.modelType==="MultiPose.Lightning",this.multiPoseModel||(this.keypointFilter=new Mb(k3),this.cropRegionFilterYMin=new ss(.9),this.cropRegionFilterXMin=new ss(.9),this.cropRegionFilterYMax=new ss(.9),this.cropRegionFilterXMax=new ss(.9)),this.enableSmoothing=e.enableSmoothing,e.minPoseScore?this.minPoseScore=e.minPoseScore:this.minPoseScore=.25,e.multiPoseMaxDimension?this.multiPoseMaxDimension=e.multiPoseMaxDimension:this.multiPoseMaxDimension=256,this.enableTracking=e.enableTracking,this.multiPoseModel&&this.enableTracking&&(e.trackerType===ua.Keypoint?this.tracker=new NY(e.trackerConfig):e.trackerType===ua.BoundingBox&&(this.tracker=new EY(e.trackerConfig)),this.enableSmoothing&&(this.keypointFilterMap=new Map))}return r.prototype.runSinglePersonPoseModel=function(t){return rt(this,void 0,void 0,function(){var e,o,n,i,s;return ot(this,function(a){switch(a.label){case 0:if((e=this.moveNetModel.execute(t)).shape.length!==4||e.shape[0]!==1||e.shape[1]!==1||e.shape[2]!==17||e.shape[3]!==3)throw e.dispose(),new Error("Unexpected output shape from model: [".concat(e.shape,"]"));return yn()==="webgpu"?[3,1]:(o=e.dataSync(),[3,3]);case 1:return[4,e.data()];case 2:o=a.sent(),a.label=3;case 3:for(e.dispose(),n={keypoints:[],score:0},i=0,s=0;s<17;++s)n.keypoints[s]={y:o[3*s],x:o[3*s+1],score:o[3*s+2]},n.keypoints[s].score>.2&&(++i,n.score+=n.keypoints[s].score);return i>0&&(n.score/=i),[2,n]}})})},r.prototype.runMultiPersonPoseModel=function(t){return rt(this,void 0,void 0,function(){var e,o,n,i,s,a,l,u;return ot(this,function(c){switch(c.label){case 0:if((e=this.moveNetModel.execute(t)).shape.length!==3||e.shape[0]!==1||e.shape[2]!==56)throw e.dispose(),new Error("Unexpected output shape from model: [".concat(e.shape,"]"));return yn()==="webgpu"?[3,1]:(o=e.dataSync(),[3,3]);case 1:return[4,e.data()];case 2:o=c.sent(),c.label=3;case 3:for(e.dispose(),n=[],i=o.length/56,s=0;s<i;++s)for(n[s]={keypoints:[]},a=56*s+51,n[s].box={yMin:o[a],xMin:o[a+1],yMax:o[a+2],xMax:o[a+3],width:o[a+3]-o[a+1],height:o[a+2]-o[a]},l=56*s+55,n[s].score=o[l],n[s].keypoints=[],u=0;u<17;++u)n[s].keypoints[u]={y:o[56*s+3*u],x:o[56*s+3*u+1],score:o[56*s+3*u+2]};return[2,n]}})})},r.prototype.estimatePoses=function(t,e,o){return e===void 0&&(e=C3),rt(this,void 0,void 0,function(){var n,i,s,a,l,u;return ot(this,function(c){switch(c.label){case 0:return e=function(p){return p==null?C3:yt({},p)}(e),t==null?(this.reset(),[2,[]]):(o==null?eP(t)&&(o=1e6*t.currentTime):o*=1e3,n=Vb(t),i=Mc(n),s=gr(n,0),t instanceof st||n.dispose(),a=[],this.multiPoseModel?[3,2]:[4,this.estimateSinglePose(s,i,o)]);case 1:return a=c.sent(),[3,4];case 2:return[4,this.estimateMultiplePoses(s,i,o)];case 3:a=c.sent(),c.label=4;case 4:for(l=0;l<a.length;++l)for(u=0;u<a[l].keypoints.length;++u)a[l].keypoints[u].name=En[u],a[l].keypoints[u].y*=i.height,a[l].keypoints[u].x*=i.width;return[2,a]}})})},r.prototype.estimateSinglePose=function(t,e,o){return rt(this,void 0,void 0,function(){var n,i,s,a,l=this;return ot(this,function(u){switch(u.label){case 0:return this.cropRegion||(this.cropRegion=Bb(this.cropRegion==null,e)),n=Ee(function(){var c=kr([[l.cropRegion.yMin,l.cropRegion.xMin,l.cropRegion.yMax,l.cropRegion.xMax]]),p=_r([1],"int32"),d=[l.modelInputResolution.height,l.modelInputResolution.width];return ze(Yn.cropAndResize(t,c,p,d,"bilinear",0),"int32")}),t.dispose(),[4,this.runSinglePersonPoseModel(n)];case 1:if(i=u.sent(),n.dispose(),i.score<this.minPoseScore)return this.reset(),[2,[]];for(s=0;s<i.keypoints.length;++s)i.keypoints[s].y=this.cropRegion.yMin+i.keypoints[s].y*this.cropRegion.height,i.keypoints[s].x=this.cropRegion.xMin+i.keypoints[s].x*this.cropRegion.width;return o!=null&&this.enableSmoothing&&(i.keypoints=this.keypointFilter.apply(i.keypoints,o,1)),a=RY(this.cropRegion,i.keypoints,this.keypointIndexByName,e),this.cropRegion=this.filterCropRegion(a),[2,[i]]}})})},r.prototype.estimateMultiplePoses=function(t,e,o){return rt(this,void 0,void 0,function(){var n,i,s,a,l,u,c,p,d,m,f,g=this;return ot(this,function(x){switch(x.label){case 0:return e.width>e.height?(i=this.multiPoseMaxDimension,s=Math.round(this.multiPoseMaxDimension*e.height/e.width),n=Yn.resizeBilinear(t,[s,i]),l=i,u=32*Math.ceil(s/32),a=no(n,[[0,0],[0,u-s],[0,0],[0,0]])):(i=Math.round(this.multiPoseMaxDimension*e.width/e.height),s=this.multiPoseMaxDimension,n=Yn.resizeBilinear(t,[s,i]),l=32*Math.ceil(i/32),u=s,a=no(n,[[0,0],[0,0],[0,l-i],[0,0]])),n.dispose(),t.dispose(),c=ze(a,"int32"),a.dispose(),[4,this.runMultiPersonPoseModel(c)];case 1:for(p=x.sent(),c.dispose(),p=p.filter(function(y){return y.score>=g.minPoseScore}),m=0;m<p.length;++m)for(d=0;d<p[m].keypoints.length;++d)p[m].keypoints[d].y*=u/s,p[m].keypoints[d].x*=l/i;if(this.enableTracking&&(this.tracker.apply(p,o),this.enableSmoothing)){for(m=0;m<p.length;++m)this.keypointFilterMap.has(p[m].id)||this.keypointFilterMap.set(p[m].id,new Mb(k3)),p[m].keypoints=this.keypointFilterMap.get(p[m].id).apply(p[m].keypoints,o,1);f=this.tracker.getTrackIDs(),this.keypointFilterMap.forEach(function(y,b){f.has(b)||g.keypointFilterMap.delete(b)})}return[2,p]}})})},r.prototype.filterCropRegion=function(t){if(t){var e=this.cropRegionFilterYMin.apply(t.yMin),o=this.cropRegionFilterXMin.apply(t.xMin),n=this.cropRegionFilterYMax.apply(t.yMax),i=this.cropRegionFilterXMax.apply(t.xMax);return{yMin:e,xMin:o,yMax:n,xMax:i,height:n-e,width:i-o}}return this.cropRegionFilterYMin.reset(),this.cropRegionFilterXMin.reset(),this.cropRegionFilterYMax.reset(),this.cropRegionFilterXMax.reset(),null},r.prototype.dispose=function(){this.moveNetModel.dispose()},r.prototype.reset=function(){this.cropRegion=null,this.resetFilters()},r.prototype.resetFilters=function(){this.keypointFilter.reset(),this.cropRegionFilterYMin.reset(),this.cropRegionFilterXMin.reset(),this.cropRegionFilterYMax.reset(),this.cropRegionFilterXMax.reset()},r}();function AY(r){return r===void 0&&(r=iP),rt(this,void 0,void 0,function(){var t,e,o,n;return ot(this,function(i){switch(i.label){case 0:return t=PY(r),o=!0,t.modelUrl?(o=typeof t.modelUrl=="string"&&t.modelUrl.indexOf("https://tfhub.dev")>-1,[4,ts(t.modelUrl,{fromTFHub:o})]):[3,2];case 1:return e=i.sent(),[3,4];case 2:return n=void 0,t.modelType==="SinglePose.Lightning"?n="https://tfhub.dev/google/tfjs-model/movenet/singlepose/lightning/4":t.modelType==="SinglePose.Thunder"?n="https://tfhub.dev/google/tfjs-model/movenet/singlepose/thunder/4":t.modelType==="MultiPose.Lightning"&&(n="https://tfhub.dev/google/tfjs-model/movenet/multipose/lightning/1"),[4,ts(n,{fromTFHub:o})];case 3:e=i.sent(),i.label=4;case 4:return yn()==="webgl"&&G().set("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",0),[2,new $Y(e,t)]}})})}var E3={architecture:"MobileNetV1",outputStride:16,multiplier:.75,inputResolution:{height:257,width:257}},N3=["MobileNetV1","ResNet50"],R3={MobileNetV1:[8,16],ResNet50:[16]},DY=[8,16,32],P3={MobileNetV1:[.5,.75,1],ResNet50:[1]},$3=[1,2,4],A3={maxPoses:1,flipHorizontal:!1},FY={maxPoses:5,flipHorizontal:!1,scoreThreshold:.5,nmsRadius:20},OY=[-123.15,-115.9,-103.06];function Ab(r){return Math.floor(r/2)}var LY=function(){function r(t,e){this.priorityQueue=new Array(t),this.numberOfElements=-1,this.getElementValue=e}return r.prototype.enqueue=function(t){this.priorityQueue[++this.numberOfElements]=t,this.swim(this.numberOfElements)},r.prototype.dequeue=function(){var t=this.priorityQueue[0];return this.exchange(0,this.numberOfElements--),this.sink(0),this.priorityQueue[this.numberOfElements+1]=null,t},r.prototype.empty=function(){return this.numberOfElements===-1},r.prototype.size=function(){return this.numberOfElements+1},r.prototype.all=function(){return this.priorityQueue.slice(0,this.numberOfElements+1)},r.prototype.max=function(){return this.priorityQueue[0]},r.prototype.swim=function(t){for(;t>0&&this.less(Ab(t),t);)this.exchange(t,Ab(t)),t=Ab(t)},r.prototype.sink=function(t){for(;2*t<=this.numberOfElements;){var e=2*t;if(e<this.numberOfElements&&this.less(e,e+1)&&e++,!this.less(t,e))break;this.exchange(t,e),t=e}},r.prototype.getValueAt=function(t){return this.getElementValue(this.priorityQueue[t])},r.prototype.less=function(t,e){return this.getValueAt(t)<this.getValueAt(e)},r.prototype.exchange=function(t,e){var o=this.priorityQueue[t];this.priorityQueue[t]=this.priorityQueue[e],this.priorityQueue[e]=o},r}();function MY(r,t,e,o,n,i){for(var s=i.shape,a=s[0],l=s[1],u=!0,c=Math.max(e-n,0),p=Math.min(e+n+1,a),d=c;d<p;++d){for(var m=Math.max(o-n,0),f=Math.min(o+n+1,l),g=m;g<f;++g)if(i.get(d,g,r)>t){u=!1;break}if(!u)break}return u}function BY(r){return rt(this,void 0,void 0,function(){return ot(this,function(t){return[2,Promise.all(r.map(function(e){return e.buffer()}))]})})}function sP(r,t,e,o){return{y:o.get(r,t,e),x:o.get(r,t,e+17)}}function aP(r,t,e){var o=sP(r.heatmapY,r.heatmapX,r.id,e),n=o.y,i=o.x;return{x:r.heatmapX*t+i,y:r.heatmapY*t+n}}function lP(r,t,e,o){var n=e.x,i=e.y;return r.some(function(s){var a,l,u,c,p,d,m=s.keypoints;return a=i,l=n,u=m[o].y,c=m[o].x,(p=u-a)*p+(d=c-l)*d<=t})}var D3=En.reduce(function(r,t,e){return r[t]=e,r},{}),uP=[["nose","left_eye"],["left_eye","left_ear"],["nose","right_eye"],["right_eye","right_ear"],["nose","left_shoulder"],["left_shoulder","left_elbow"],["left_elbow","left_wrist"],["left_shoulder","left_hip"],["left_hip","left_knee"],["left_knee","left_ankle"],["nose","right_shoulder"],["right_shoulder","right_elbow"],["right_elbow","right_wrist"],["right_shoulder","right_hip"],["right_hip","right_knee"],["right_knee","right_ankle"]].map(function(r){var t=r[0],e=r[1];return[D3[t],D3[e]]}),Db=uP.map(function(r){return r[1]}),F3=uP.map(function(r){return r[0]});function O3(r,t,e){return r<t?t:r>e?e:r}function Fb(r,t,e,o){return{y:O3(Math.round(r.y/t),0,e-1),x:O3(Math.round(r.x/t),0,o-1)}}function L3(r,t){return{x:r.x+t.x,y:r.y+t.y}}function M3(r,t,e,o,n,i,s,a){a===void 0&&(a=2);for(var l=o.shape,u=l[0],c=l[1],p={y:t.y,x:t.x},d=L3(p,function(b,I,N){var M=N.shape[2]/2;return{y:N.get(I.y,I.x,b),x:N.get(I.y,I.x,M+b)}}(r,Fb(p,i,u,c),s)),m=0;m<a;m++){var f=Fb(d,i,u,c),g=sP(f.y,f.x,e,n);d=L3({x:f.x*i,y:f.y*i},{x:g.x,y:g.y})}var x=Fb(d,i,u,c),y=o.get(x.y,x.x,e);return{y:d.y,x:d.x,name:En[e],score:y}}function VY(r,t,e,o,n,i){var s=t.shape[2],a=Db.length,l=new Array(s),u=r.part,c=r.score,p=aP(u,o,e);l[u.id]={score:c,name:En[u.id],y:p.y,x:p.x};for(var d=a-1;d>=0;--d){var m=Db[d],f=F3[d];l[m]&&!l[f]&&(l[f]=M3(d,l[m],f,t,e,o,i))}for(d=0;d<a;++d)m=F3[d],f=Db[d],l[m]&&!l[f]&&(l[f]=M3(d,l[m],f,t,e,o,n));return l}function WY(r,t,e){return e.reduce(function(o,n,i){var s=n.y,a=n.x,l=n.score;return lP(r,t,{y:s,x:a},i)||(o+=l),o},0)/e.length}function UY(r,t,e,o,n,i,s,a){return s===void 0&&(s=.5),a===void 0&&(a=20),rt(this,void 0,void 0,function(){var l,u,c,p,d,m,f,g,x,y,b,I;return ot(this,function(N){switch(N.label){case 0:return[4,BY([r,t,e,o])];case 1:for(l=N.sent(),u=l[0],c=l[1],p=l[2],d=l[3],m=[],f=function(M,B,W){for(var H=W.shape,K=H[0],X=H[1],re=H[2],ce=new LY(K*X*re,function(qe){return qe.score}),pe=0;pe<K;++pe)for(var be=0;be<X;++be)for(var we=0;we<re;++we){var Te=W.get(pe,be,we);Te<M||MY(we,Te,pe,be,B,W)&&ce.enqueue({score:Te,part:{heatmapY:pe,heatmapX:be,id:we}})}return ce}(s,1,u),g=a*a;m.length<i&&!f.empty();)x=f.dequeue(),y=aP(x.part,n,c),lP(m,g,y,x.part.id)||(b=VY(x,u,c,n,p,d),I=WY(m,g,b),m.push({keypoints:b,score:I}));return[2,m]}})})}function cP(){for(var r,t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];switch(t.length){case 0:r="fn main() ";break;case 1:r="fn main(".concat(t[0]," : i32)");break;default:throw Error("Unreachable")}return r}var zY=function(){function r(t){this.variableNames=["A","B"],this.size=!0,this.workgroupSize=[32,1,1],this.outputShape=[t[0],1],this.dispatchLayout=ns.flatDispatchLayout(this.outputShape),this.dispatch=ns.computeDispatch(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="getpointsConfidenceOp"}return r.prototype.getUserCode=function(){return`
        `.concat(cP("index"),` {
          if (index < uniforms.size) {
            let y = B[index * 2];
            let x = B[index * 2 + 1];
            let outIndex = y * uniforms.aShape.x * uniforms.aShape.z + x * uniforms.aShape.z + index;
            result[index] = A[outIndex];
          }
        }
        `)},r}();function GY(r,t){if(Ui()instanceof kc)return function(e,o){var n=Ui(),i=new zY(o.shape),s=n.runWebGPUProgram(i,[e,o],"float32");return fr().makeTensorFromTensorInfo(s)}(r,t);throw new Error("getPointsConfidenceWebGPU is not supported in this backend!")}var HY=function(){function r(t){if(this.variableNames=["A","B"],this.size=!0,this.supportedLastDimension=2,t.length!==2||t[1]!==this.supportedLastDimension)throw new Error("GetOffsetVectorsProgram only supports shape of [x, ".concat(this.supportedLastDimension,"], but current shape is ").concat(t));this.workgroupSize=[32,1,1],this.outputShape=t;var e=[t[0],1];this.dispatchLayout=ns.flatDispatchLayout(e),this.dispatch=ns.computeDispatch(this.dispatchLayout,e,this.workgroupSize),this.shaderKey="GetOffsetVectors"}return r.prototype.getUserCode=function(){return`
    fn getOffsetPoint(y: i32, x: i32, index: i32) -> vec2<i32> {
      let outIndexY = y * uniforms.bShape.x * uniforms.bShape.y + x * uniforms.bShape.y + index;
      let outIndexX = outIndexY + uniforms.bShape.z;
      let outY = i32(B[outIndexY]);
      let outX = i32(B[outIndexX]);
      return vec2<i32>(outY, outX);
    }

    `.concat(cP("index"),` {
      if (index < uniforms.size) {
        let indexY = index * `).concat(this.supportedLastDimension,`;
        let indexX = indexY + 1;
        let heatmapY = A[indexY];
        let heatmapX = A[indexX];
        let out = getOffsetPoint(i32(heatmapY), i32(heatmapX), index);
        result[indexY] = f32(out[0]);
        result[indexX] = f32(out[1]);
      }
    }
    `)},r}();function KY(r,t){if(Ui()instanceof kc)return function(e,o){var n=Ui(),i=new HY(e.shape),s=n.runWebGPUProgram(i,[e,o],"float32");return fr().makeTensorFromTensorInfo(s)}(r,t);throw new Error("getOffsetVectorsGPU is not supported in this backend!")}function pP(r){var t=r.shape,e=t[0],o=t[1],n=t[2];return Ee(function(){var i,s,a=Z(r,[e*o,n]),l=Ym(a,0),u=gr(De(l,Ne(o,"int32")),1),c=gr((i=l,s=o,Ee(function(){var p=De(i,Ne(s,"int32"));return Re(i,le(p,Ne(s,"int32")))})),1);return dt([u,c],1)})}function qY(r,t,e){return Ee(function(){var o=function(n,i){for(var s=[],a=0;a<En.length;a++){var l=n.get(a,0).valueOf(),u=n.get(a,1).valueOf(),c=jY(l,u,a,i),p=c.x,d=c.y;s.push(d),s.push(p)}return kr(s,[En.length,2])}(r,e);return xe(ze(le(r.toTensor(),Ne(t,"int32")),"float32"),o)})}function jY(r,t,e,o){return{y:o.get(r,t,e),x:o.get(r,t,e+En.length)}}function XY(r,t,e){return rt(this,void 0,void 0,function(){var o,n,i,s,a,l,u,c,p,d;return ot(this,function(m){switch(m.label){case 0:return o=0,n=pP(r),[4,Promise.all([r.buffer(),t.buffer(),n.buffer()])];case 1:return i=m.sent(),s=i[0],a=i[1],l=i[2],[4,(u=qY(l,e,a)).buffer()];case 2:return c=m.sent(),p=Array.from(function(f,g){for(var x=g.shape[0],y=new Float32Array(x),b=0;b<x;b++){var I=g.get(b,0),N=g.get(b,1);y[b]=f.get(I,N,b)}return y}(s,l)),d=p.map(function(f,g){return o+=f,{y:c.get(g,0),x:c.get(g,1),score:f,name:En[g]}}),n.dispose(),u.dispose(),[2,{keypoints:d,score:o/d.length}]}})})}function YY(r,t,e){return rt(this,void 0,void 0,function(){var o,n,i;return ot(this,function(s){return o=pP(r),n=function(a,l,u){return Ee(function(){var c=KY(a,u);return xe(ze(le(a,Ne(l,"int32")),"float32"),c)})}(o,e,t),i=GY(r,o),[2,[n,i]]})})}function B3(r,t){return(r-1)%t==0}var V3="https://storage.googleapis.com/tfjs-models/savedmodel/posenet/mobilenet/",W3="https://storage.googleapis.com/tfjs-models/savedmodel/posenet/resnet50/";function U3(r,t){return function(e,o){return(e-1)%o==0}(r,t)?r:Math.floor(r/t)*t+1}var z3=function(){function r(t,e){this.posenetModel=t;var o=this.posenetModel.inputs[0].shape;S.assert(o[1]===-1&&o[2]===-1,function(){return"Input shape [".concat(o[1],", ").concat(o[2],"] ")+"must both be equal to or -1"});var n,i,s=(n=e.inputResolution,i=e.outputStride,{height:U3(n.height,i),width:U3(n.width,i)});(function(a){S.assert(DY.indexOf(a)>=0,function(){return"outputStride of ".concat(a," is invalid. ")+"It must be either 8 or 16."})})(e.outputStride),function(a,l){S.assert(B3(a.height,l),function(){return"height of ".concat(a.height," is invalid for output stride ")+"".concat(l,".")}),S.assert(B3(a.width,l),function(){return"width of ".concat(a.width," is invalid for output stride ")+"".concat(l,".")})}(s,e.outputStride),this.inputResolution=s,this.outputStride=e.outputStride,this.architecture=e.architecture}return r.prototype.estimatePoses=function(t,e){return e===void 0&&(e=A3),rt(this,void 0,void 0,function(){return ot(this,function(o){return[2,this.estimatePosesGPU(t,e,!1)]})})},r.prototype.estimatePosesGPU=function(t,e,o){return e===void 0&&(e=A3),o===void 0&&(o=!1),rt(this,void 0,void 0,function(){var n,i,s,a,l,u,c,p,d,m,f,g,x,y,b,I,N,M;return ot(this,function(B){switch(B.label){case 0:return n=function(W){var H=W;if(H.maxPoses==null&&(H.maxPoses=1),H.maxPoses<=0)throw new Error("Invalid maxPoses ".concat(H.maxPoses,". Should be > 0."));if(H.maxPoses>1){if((H=yt(yt({},FY),H)).scoreThreshold<0||H.scoreThreshold>1)throw new Error("Invalid scoreThreshold ".concat(H.scoreThreshold,". ")+"Should be in range [0.0, 1.0]");if(H.nmsRadius<=0)throw new Error("Invalid nmsRadius ".concat(H.nmsRadius,"."))}return H}(e),t==null?[2,o?[[],[]]:[]]:(this.maxPoses=n.maxPoses,i=Lb(t,{outputTensorSize:this.inputResolution,keepAspectRatio:!0,borderMode:"replicate"}),s=i.imageTensor,a=i.padding,l=this.architecture==="ResNet50"?xe(s,OY):J3(s,[-1,1]),u=this.posenetModel.predict(l),this.architecture==="ResNet50"?(c=ut(u[2],[0]),p=ut(u[3],[0]),d=ut(u[0],[0]),m=ut(u[1],[0])):(c=ut(u[0],[0]),p=ut(u[1],[0]),d=ut(u[2],[0]),m=ut(u[3],[0])),f=oo(p),this.maxPoses!==1?[3,5]:o?[4,YY(f,c,this.outputStride)]:[3,2]);case 1:return x=B.sent(),b=x[0],y=x[1],g=[b,y],[3,4];case 2:return[4,XY(f,c,this.outputStride)];case 3:b=B.sent(),g=[b],B.label=4;case 4:return[3,7];case 5:if(o)throw new Error("GPU renderer only supports single pose!");return[4,UY(f,c,d,m,this.outputStride,this.maxPoses,n.scoreThreshold,n.nmsRadius)];case 6:g=B.sent(),B.label=7;case 7:if(o){if(n.flipHorizontal===!0)throw new Error("flipHorizontal is not supported!");I=this.getCanvasInfo(Mc(t),this.inputResolution,a)}else M=Mc(t),N=function(W,H,K,X){var re=H.height,ce=H.width,pe=re/(K.height*(1-X.top-X.bottom)),be=ce/(K.width*(1-X.left-X.right)),we=-X.top*K.height,Te=-X.left*K.width;if(be===1&&pe===1&&we===0&&Te===0)return W;for(var qe=0,je=W;qe<je.length;qe++)for(var it=0,Qt=je[qe].keypoints;it<Qt.length;it++){var rr=Qt[it];rr.x=(rr.x+Te)*be,rr.y=(rr.y+we)*pe}return W}(g,M,this.inputResolution,a),n.flipHorizontal&&(N=function(W,H){for(var K=0,X=W;K<X.length;K++)for(var re=0,ce=X[K].keypoints;re<ce.length;re++){var pe=ce[re];pe.x=H.width-1-pe.x}return W}(N,M));return s.dispose(),l.dispose(),Xe(u),c.dispose(),p.dispose(),d.dispose(),m.dispose(),f.dispose(),[2,o?[g,I]:N]}})})},r.prototype.getCanvasInfo=function(t,e,o){var n=t.height,i=t.width,s=n/(e.height*(1-o.top-o.bottom)),a=i/(e.width*(1-o.left-o.right)),l=-o.top*e.height;return[-o.left*e.width,l,a,s,t.width,t.height]},r.prototype.dispose=function(){this.posenetModel.dispose()},r.prototype.reset=function(){},r}();function QY(r){return r===void 0&&(r=E3),rt(this,void 0,void 0,function(){var t,e,o,n,i;return ot(this,function(s){switch(s.label){case 0:return(t=function(c){var p=c||E3;if(p.architecture==null&&(p.architecture="MobileNetV1"),N3.indexOf(p.architecture)<0)throw new Error("Invalid architecture ".concat(p.architecture,". ")+"Should be one of ".concat(N3));if(p.inputResolution==null&&(p.inputResolution={height:257,width:257}),p.outputStride==null&&(p.outputStride=16),R3[p.architecture].indexOf(p.outputStride)<0)throw new Error("Invalid outputStride ".concat(p.outputStride,". ")+"Should be one of ".concat(R3[p.architecture]," ")+"for architecture ".concat(p.architecture,"."));if(p.multiplier==null&&(p.multiplier=1),P3[p.architecture].indexOf(p.multiplier)<0)throw new Error("Invalid multiplier ".concat(p.multiplier,". ")+"Should be one of ".concat(P3[p.architecture]," ")+"for architecture ".concat(p.architecture,"."));if(p.quantBytes==null&&(p.quantBytes=4),$3.indexOf(p.quantBytes)<0)throw new Error("Invalid quantBytes ".concat(p.quantBytes,". ")+"Should be one of ".concat($3," ")+"for architecture ".concat(p.architecture,"."));if(p.architecture==="MobileNetV1"&&p.outputStride===32&&p.multiplier!==1)throw new Error("When using an output stride of 32, you must select 1 as the multiplier.");return p}(r)).architecture!=="ResNet50"?[3,2]:(a=t.outputStride,l=t.quantBytes,u="model-stride".concat(a,".json"),e=l===4?W3+"float/"+u:W3+"quant".concat(l,"/")+u,[4,ts(t.modelUrl||e)]);case 1:return o=s.sent(),[2,new z3(o,t)];case 2:return n=function(c,p,d){var m={1:"100",.75:"075",.5:"050"},f="model-stride".concat(c,".json");return d===4?V3+"float/".concat(m[p],"/")+f:V3+"quant".concat(d,"/").concat(m[p],"/")+f}(t.outputStride,t.multiplier,t.quantBytes),[4,ts(t.modelUrl||n)];case 3:return i=s.sent(),[2,new z3(i,t)]}var a,l,u})})}function dP(r,t){return rt(this,void 0,void 0,function(){var e,o;return ot(this,function(n){switch(r){case ar.PoseNet:return[2,QY(t)];case ar.BlazePose:if(o=void 0,(e=t)!=null){if(e.runtime==="tfjs")return[2,TY(t)];if(e.runtime==="mediapipe")return[2,JX(t)];o=e.runtime}throw new Error("Expect modelConfig.runtime to be either 'tfjs' "+"or 'mediapipe', but got ".concat(o));case ar.MoveNet:return[2,AY(t)];default:throw new Error("".concat(r," is not a supported model name."))}})})}var mP={modelType:{SINGLEPOSE_LIGHTNING:"SinglePose.Lightning",SINGLEPOSE_THUNDER:"SinglePose.Thunder",MULTIPOSE_LIGHTNING:"MultiPose.Lightning"}};var ca={},Qg={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function fP(r,t){ca[r]=t}function mo(r,t){if(!(r in ca)||t!=null){let o=eQ(r,t);if(o!==null)ca[r]=o;else return console.log("Could not get context for WebGL version",r),null}let e=ca[r];return e==null||e.isContextLost()?(delete ca[r],mo(r)):(e.disable(e.DEPTH_TEST),e.disable(e.STENCIL_TEST),e.disable(e.BLEND),e.disable(e.DITHER),e.disable(e.POLYGON_OFFSET_FILL),e.disable(e.SAMPLE_COVERAGE),e.enable(e.SCISSOR_TEST),e.enable(e.CULL_FACE),e.cullFace(e.BACK),ca[r])}function JY(r){if(!G().getBool("IS_SAFARI")&&typeof OffscreenCanvas<"u"&&r===2)return new OffscreenCanvas(300,150);if(typeof document<"u")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function eQ(r,t){if(r!==1&&r!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");let e=t??JY(r);return e.addEventListener("webglcontextlost",o=>{o.preventDefault(),delete ca[r]},!1),G().getBool("SOFTWARE_WEBGL_ENABLED")&&(Qg.failIfMajorPerformanceCaveat=!1),r===1?e.getContext("webgl",Qg)||e.getContext("experimental-webgl",Qg):e.getContext("webgl2",Qg)}var pa=function(r){return r[r.DENSE=0]="DENSE",r[r.SHARED_BATCH=1]="SHARED_BATCH",r}(pa||{}),yr=function(r){return r[r.RENDER=0]="RENDER",r[r.UPLOAD=1]="UPLOAD",r[r.PIXELS=2]="PIXELS",r[r.DOWNLOAD=3]="DOWNLOAD",r}(yr||{}),lr=function(r){return r[r.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",r[r.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",r[r.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",r[r.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",r[r.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16",r}(lr||{});function da(r,t){return[t,r]}function hP(r,t){return r*t}function nd(r){let t=S.sizeFromShape(r),e=Math.ceil(t/4);return S.sizeToSquarishShape(e)}function Nn(r,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(r/2))]}function gP(r,t){let[e,o]=Nn(r,t);return e*o*4}function id(r,t){let e=r,o,n,i,s,a,l,u,c,p,d;return G().getNumber("WEBGL_VERSION")===2?(o=e.R32F,n=e.R16F,i=e.RGBA16F,s=e.RGBA32F,a=e.RED,u=4,c=1,p=e.HALF_FLOAT,d=e.FLOAT,l=e.RGBA8):(o=r.RGBA,n=r.RGBA,i=r.RGBA,s=e.RGBA,a=r.RGBA,u=4,c=4,p=t!=null?t.HALF_FLOAT_OES:null,d=r.FLOAT,l=r.RGBA),{internalFormatFloat:o,internalFormatHalfFloat:n,internalFormatPackedHalfFloat:i,internalFormatPackedFloat:s,textureFormatFloat:a,downloadTextureFormat:l,downloadUnpackNumChannels:u,defaultNumChannels:c,textureTypeHalfFloat:p,textureTypeFloat:d}}function Se(r,t){let e=t();return G().getBool("DEBUG")&&tQ(r),e}function tQ(r){let t=r.getError();if(t!==r.NO_ERROR)throw new Error("WebGL Error: "+nQ(r,t))}var rQ=596e-10,oQ=65504;function xP(r){return!!(G().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||r===0||rQ<Math.abs(r)&&Math.abs(r)<oQ)}function nQ(r,t){switch(t){case r.NO_ERROR:return"NO_ERROR";case r.INVALID_ENUM:return"INVALID_ENUM";case r.INVALID_VALUE:return"INVALID_VALUE";case r.INVALID_OPERATION:return"INVALID_OPERATION";case r.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case r.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case r.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}function sd(r,t){return ti(r,()=>r.getExtension(t),'Extension "'+t+'" not supported on this browser.')}function yP(r,t){let e=ti(r,()=>r.createShader(r.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(Se(r,()=>r.shaderSource(e,t)),Se(r,()=>r.compileShader(e)),r.getShaderParameter(e,r.COMPILE_STATUS)===!1)throw console.log(r.getShaderInfoLog(e)),new Error("Failed to compile vertex shader.");return e}function vP(r,t){let e=ti(r,()=>r.createShader(r.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(Se(r,()=>r.shaderSource(e,t)),Se(r,()=>r.compileShader(e)),G().get("ENGINE_COMPILE_ONLY"))return e;if(r.getShaderParameter(e,r.COMPILE_STATUS)===!1)throw Hb(t,r.getShaderInfoLog(e)),new Error("Failed to compile fragment shader.");return e}var iQ=/ERROR: [0-9]+:([0-9]+):/g;function Hb(r,t){let e=iQ.exec(t);if(e==null){console.log(`Couldn't parse line number in error: ${t}`),console.log(r);return}let o=+e[1],n=r.split(`
`),i=n.length.toString().length+2,s=n.map((p,d)=>S.rightPad((d+1).toString(),i)+p),a=0;for(let p=0;p<s.length;p++)a=Math.max(s[p].length,a);let l=s.slice(0,o-1),u=s.slice(o-1,o),c=s.slice(o);console.log(l.join(`
`)),console.log(t.split(`
`)[0]),console.log(`%c ${S.rightPad(u[0],a)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join(`
`))}function bP(r){return ti(r,()=>r.createProgram(),"Unable to create WebGLProgram.")}function SP(r,t){if(Se(r,()=>r.linkProgram(t)),!G().get("ENGINE_COMPILE_ONLY")&&r.getProgramParameter(t,r.LINK_STATUS)===!1)throw console.log(r.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}function Jg(r,t){if(Se(r,()=>r.validateProgram(t)),r.getProgramParameter(t,r.VALIDATE_STATUS)===!1)throw console.log(r.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function wP(r,t){let e=ti(r,()=>r.createBuffer(),"Unable to create WebGLBuffer");return Se(r,()=>r.bindBuffer(r.ARRAY_BUFFER,e)),Se(r,()=>r.bufferData(r.ARRAY_BUFFER,t,r.STATIC_DRAW)),e}function _P(r,t){let e=ti(r,()=>r.createBuffer(),"Unable to create WebGLBuffer");return Se(r,()=>r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,e)),Se(r,()=>r.bufferData(r.ELEMENT_ARRAY_BUFFER,t,r.STATIC_DRAW)),e}function CP(r){return ti(r,()=>r.createTexture(),"Unable to create WebGLTexture.")}function kP(r,t){let e=G().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(r<=0||t<=0){let o=`[${r}x${t}]`;throw new Error("Requested texture size "+o+" is invalid.")}if(r>e||t>e){let o=`[${r}x${t}]`,n=`[${e}x${e}]`;throw new Error("Requested texture size "+o+" greater than WebGL maximum on this browser / GPU "+n+".")}}function IP(r){return ti(r,()=>r.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function Kb(r,t,e,o,n,i,s){let a=r.getAttribLocation(t,e);return a===-1?!1:(Se(r,()=>r.bindBuffer(r.ARRAY_BUFFER,o)),Se(r,()=>r.vertexAttribPointer(a,n,r.FLOAT,!1,i,s)),Se(r,()=>r.enableVertexAttribArray(a)),!0)}function sQ(r,t,e){lQ(r,e),Se(r,()=>r.activeTexture(r.TEXTURE0+e)),Se(r,()=>r.bindTexture(r.TEXTURE_2D,t))}function TP(r,t,e){return ti(r,()=>r.getUniformLocation(t,e),'uniform "'+e+'" not present in program.')}function EP(r,t,e){return r.getUniformLocation(t,e)}function NP(r,t,e,o){Se(r,()=>sQ(r,t,o)),Se(r,()=>r.uniform1i(e,o))}function ex(r,t,e){Se(r,()=>r.bindFramebuffer(r.FRAMEBUFFER,e)),Se(r,()=>r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,t,0))}function qb(r,t){Se(r,()=>r.bindFramebuffer(r.FRAMEBUFFER,t)),Se(r,()=>r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,null,0))}function ad(r){let t=r.checkFramebufferStatus(r.FRAMEBUFFER);if(t!==r.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+aQ(r,t))}function aQ(r,t){switch(t){case r.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case r.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case r.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case r.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}function ti(r,t,e){let o=Se(r,()=>t());if(o==null)throw new Error(e);return o}function lQ(r,t){let e=r.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,o=t+r.TEXTURE0;if(o<r.TEXTURE0||o>e){let n=`[gl.TEXTURE0, gl.TEXTURE${e}]`;throw new Error(`textureUnit must be in ${n}.`)}}function as(r,t=2){return S.sizeFromShape(r.slice(0,r.length-t))}function ls(r){if(r.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[r.length>1?r[r.length-2]:1,r[r.length-1]]}function ld(r){let t=[1,1,1];return r.length===0||r.length===1&&r[0]===1||(t=[as(r),...ls(r)]),t}function RP(r,t=!1){let e=G().getNumber("WEBGL_MAX_TEXTURE_SIZE"),o=G().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");o===1/0&&G().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(o=e/2),t&&(e=e*2,o=o*2,r=r.map((a,l)=>l>=r.length-2?S.nearestLargerEven(r[l]):r[l]),r.length===1&&(r=[2,r[0]])),r.length!==2&&(r=S.squeezeShape(r).newShape);let n=S.sizeFromShape(r),i=null;r.length<=1&&n<=e?i=[1,n]:r.length===2&&r[0]<=e&&r[1]<=e?i=r:r.length===3&&r[0]*r[1]<=e&&r[2]<=e?i=[r[0]*r[1],r[2]]:r.length===3&&r[0]<=e&&r[1]*r[2]<=e?i=[r[0],r[1]*r[2]]:r.length===4&&r[0]*r[1]*r[2]<=e&&r[3]<=e?i=[r[0]*r[1]*r[2],r[3]]:r.length===4&&r[0]<=e&&r[1]*r[2]*r[3]<=e&&(i=[r[0],r[1]*r[2]*r[3]]);let s=i!=null&&Math.max(...i)>o&&Math.min(...i)<=(t?2:1)&&Math.min(...i)>0;if(i==null||s)if(t){let a=as(r),l=2,u=2;r.length&&([l,u]=ls(r)),n=a*(l/2)*(u/2),i=S.sizeToSquarishShape(n).map(c=>c*2)}else i=S.sizeToSquarishShape(n);return i}function Zg(r){return r%2===0}function ma(r,t){if(r=r.slice(-2),t=t.slice(-2),S.arraysEqual(r,t)||!r.length||!t.length||r[0]===0||r[1]===0||t[0]===0||t[1]===0)return!0;if(r.length!==t.length){let e=r[r.length-1],o=t[t.length-1];if(e===o||Zg(e)&&Zg(o)&&(r[0]===1||t[0]===1))return!0}return r[1]===t[1]&&Zg(r[0])&&Zg(t[0])}var Ub,zb;function PP(r){if(Ub==null){let t=mo(r);Ub=t.getParameter(t.MAX_TEXTURE_SIZE)}return Ub}function $P(r){if(zb==null){let t=mo(r);zb=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,zb)}function AP(r){if(r===0)return 0;let t,e=mo(r);return Io(e,"EXT_disjoint_timer_query_webgl2")&&r===2?t=2:Io(e,"EXT_disjoint_timer_query")?t=1:t=0,t}function Io(r,t){return r.getExtension(t)!=null}function jb(r){try{if(mo(r)!=null)return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function DP(r){if(r===0)return!1;let t=mo(r);if(r===1){if(!Io(t,"OES_texture_float"))return!1}else if(!Io(t,"EXT_color_buffer_float"))return!1;return Gb(t)}function FP(r){if(r===0)return!1;let t=mo(r);if(r===1){if(!Io(t,"OES_texture_float")||!Io(t,"WEBGL_color_buffer_float"))return!1}else{if(Io(t,"EXT_color_buffer_float"))return Gb(t);let o="EXT_color_buffer_half_float";if(Io(t,o)){let n=t.getExtension(o);return uQ(t,n)}return!1}return Gb(t)}function Gb(r){let t=id(r),e=r.createTexture();r.bindTexture(r.TEXTURE_2D,e),r.texImage2D(r.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);let i=r.createFramebuffer();r.bindFramebuffer(r.FRAMEBUFFER,i),r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,e,0);let s=r.checkFramebufferStatus(r.FRAMEBUFFER)===r.FRAMEBUFFER_COMPLETE;return r.bindTexture(r.TEXTURE_2D,null),r.bindFramebuffer(r.FRAMEBUFFER,null),r.deleteTexture(e),r.deleteFramebuffer(i),s}function uQ(r,t){let e=id(r,t),o=r.createTexture();r.bindTexture(r.TEXTURE_2D,o),r.texImage2D(r.TEXTURE_2D,0,e.internalFormatHalfFloat,1,1,0,e.textureFormatFloat,e.textureTypeHalfFloat,null);let s=r.createFramebuffer();r.bindFramebuffer(r.FRAMEBUFFER,s),r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,o,0);let a=r.checkFramebufferStatus(r.FRAMEBUFFER)===r.FRAMEBUFFER_COMPLETE;return r.bindTexture(r.TEXTURE_2D,null),r.bindFramebuffer(r.FRAMEBUFFER,null),r.deleteTexture(o),r.deleteFramebuffer(s),a}function OP(r){return r!==2?!1:mo(r).fenceSync!=null}function Rn(r,t){Array.isArray(r)||(r=[r]),r.forEach(e=>{e!=null&&S.assert(e.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the WebGL backend.`)})}var Pe=G();Pe.registerFlag("HAS_WEBGL",()=>Pe.getNumber("WEBGL_VERSION")>0);Pe.registerFlag("WEBGL_VERSION",()=>jb(2)?2:jb(1)?1:0);Pe.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);Pe.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>Pe.get("WEBGL_VERSION")===2);Pe.registerFlag("WEBGL_CPU_FORWARD",()=>!0);Pe.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);Pe.registerFlag("WEBGL_PACK",()=>Pe.getBool("HAS_WEBGL"));Pe.registerFlag("WEBGL_PACK_NORMALIZATION",()=>Pe.getBool("WEBGL_PACK"));Pe.registerFlag("WEBGL_PACK_CLIP",()=>Pe.getBool("WEBGL_PACK"));Pe.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>Pe.getBool("WEBGL_PACK"));Pe.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>Pe.getBool("WEBGL_PACK"));Pe.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>Pe.getBool("WEBGL_PACK"));Pe.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>Pe.getBool("WEBGL_PACK"));Pe.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>Pe.getBool("WEBGL_PACK"));Pe.registerFlag("WEBGL_PACK_REDUCE",()=>Pe.getBool("WEBGL_PACK"));Pe.registerFlag("WEBGL_LAZILY_UNPACK",()=>Pe.getBool("WEBGL_PACK"));Pe.registerFlag("WEBGL_CONV_IM2COL",()=>Pe.getBool("WEBGL_PACK"));Pe.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",()=>Pe.getBool("WEBGL_PACK"));Pe.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>PP(Pe.getNumber("WEBGL_VERSION")));Pe.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>$P(Pe.getNumber("WEBGL_VERSION")));Pe.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{let r=Pe.getNumber("WEBGL_VERSION");return r===0?0:AP(r)});Pe.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>Pe.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!Wi.isMobile());Pe.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>DP(Pe.getNumber("WEBGL_VERSION")));Pe.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>Pe.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:Pe.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));Pe.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>FP(Pe.getNumber("WEBGL_VERSION")));Pe.registerFlag("WEBGL_FENCE_API_ENABLED",()=>OP(Pe.getNumber("WEBGL_VERSION")));Pe.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>Pe.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);Pe.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,r=>{if(typeof r!="number")throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but got ${r}.`);if(r<0&&r!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${r}.`)});Pe.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>Wi.isMobile()?1:-1,r=>{if(typeof r!="number")throw new Error(`WEBGL_FLUSH_THRESHOLD must be a number but got ${r}.`);if(r<0&&r!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${r}.`)});Pe.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128);Pe.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1);Pe.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5);Pe.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128);Pe.registerFlag("WEBGL_EXP_CONV",()=>!1);Pe.registerFlag("SOFTWARE_WEBGL_ENABLED",()=>Pe.getBool("IS_TEST"));Pe.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",()=>1/0);Pe.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",()=>!1);Pe.registerFlag("WEBGL2_ISNAN_CUSTOM",()=>!1);Pe.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);function Ct(){let r,t,e,o,n,i,s,a,l,u;return G().getNumber("WEBGL_VERSION")===2?(r="#version 300 es",t="in",e="out",o="in",n="texture",i="outputColor",s="out vec4 outputColor;",a=G().getBool("WEBGL2_ISNAN_CUSTOM")?`
      bool isnan_custom(float val) {
        uint floatToUint = floatBitsToUint(val);
        return (floatToUint & 0x7fffffffu) > 0x7f800000u;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `:"",l="",u=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(r="",t="attribute",e="varying",o="varying",n="texture2D",i="gl_FragColor",s="",a=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,l=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,u=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:r,attribute:t,varyingVs:e,varyingFs:o,texture2D:n,output:i,defineOutput:s,defineSpecialNaN:a,defineSpecialInf:l,defineRound:u}}function Qo(r,t,e="index"){let o=S.computeStrides(t);return o.map((n,i)=>{let s=`int ${r[i]} = ${e} / ${n}`,a=i===o.length-1?`int ${r[i+1]} = ${e} - ${r[i]} * ${n}`:`index -= ${r[i]} * ${n}`;return`${s}; ${a};`}).join("")}function fa(r,t,e="index"){let o=S.computeStrides(t);return o.map((n,i)=>{let s=`int ${r[i]} = ${e} / outShapeStrides[${i}]`,a=i===o.length-1?`int ${r[i+1]} = ${e} - ${r[i]} * outShapeStrides[${i}]`:`index -= ${r[i]} * outShapeStrides[${i}]`;return`${s}; ${a};`}).join("")}function cQ(r,t){let e=r.length,o=r.map(i=>`${t}[${i}]`),n=new Array(e-1);n[e-2]=o[e-1];for(let i=e-3;i>=0;--i)n[i]=`(${n[i+1]} * ${o[i+1]})`;return n}function LP(r,t,e="index"){let o=r.map((i,s)=>s),n=cQ(o,t);return n.map((i,s)=>{let a=`int ${r[s]} = ${e} / ${n[s]}`,l=s===n.length-1?`int ${r[s+1]} = ${e} - ${r[s]} * ${n[s]}`:`index -= ${r[s]} * ${n[s]}`;return`${a}; ${l};`}).join("")}function Bc(r){let t=S.computeStrides(r).map(e=>e.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;
  }
`}function Vc(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}var rx=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`;var{getBroadcastDims:MP}=P;function BP(r,t,e){let o=[];if(r.forEach(m=>{let f=S.sizeFromShape(m.shapeInfo.logicalShape);if(m.shapeInfo.isUniform?o.push(`uniform float ${m.name}${f>1?`[${f}]`:""};`):(o.push(`uniform sampler2D ${m.name};`),o.push(`uniform int offset${m.name};`)),e.enableShapeUniforms){let{uniformShape:g}=ox(e.packedInputs,m.shapeInfo.logicalShape,m.shapeInfo.texShape);switch(g.length){case 1:o.push(`uniform int ${m.name}Shape;`);break;case 2:o.push(`uniform ivec2 ${m.name}Shape;`);break;case 3:o.push(`uniform ivec3 ${m.name}Shape;`);break;case 4:o.push(`uniform ivec4 ${m.name}Shape;`);break;default:break}o.push(`uniform ivec2 ${m.name}TexShape;`)}}),e.enableShapeUniforms){switch(t.logicalShape.length){case 1:o.push("uniform int outShape;");break;case 2:o.push("uniform ivec2 outShape;"),o.push("uniform int outShapeStrides;");break;case 3:o.push("uniform ivec3 outShape;"),o.push("uniform ivec2 outShapeStrides;");break;case 4:o.push("uniform ivec4 outShape;"),o.push("uniform ivec3 outShapeStrides;");break;default:break}o.push("uniform ivec2 outTexShape;")}e.customUniforms&&e.customUniforms.forEach(m=>{o.push(`uniform ${m.type} ${m.name}${m.arrayIndex?`[${m.arrayIndex}]`:""};`)});let n=o.join(`
`),i=r.map(m=>pQ(m,t,e.packedInputs,e.enableShapeUniforms)).join(`
`),s=t.texShape,a=Ct(),l=fQ(a),u,c,p=xQ(a);return t.isPacked?(u=dQ(t.logicalShape,s,e.enableShapeUniforms),c=gQ(a)):(u=mQ(t.logicalShape,s,e.enableShapeUniforms),c=hQ(a)),e.packedInputs&&(p+=SQ),[p,l,c,n,u,i,e.userCode].join(`
`)}function Uc(r,t=!1){let e=r.shapeInfo.logicalShape;switch(e.length){case 0:return AQ(r,t);case 1:return FQ(r,t);case 2:return LQ(r,t);case 3:return BQ(r,t);case 4:return WQ(r,t);case 5:return UQ(r);case 6:return zQ(r);default:throw new Error(`${e.length}-D input sampling is not yet supported`)}}function VP(r,t){switch(r.shapeInfo.logicalShape.length){case 0:return $Q(r);case 1:return DQ(r,t);case 2:return OQ(r,t);case 3:return MQ(r,t);default:return VQ(r,t)}}function pQ(r,t,e=!1,o){let n="";e?n+=VP(r,o):n+=Uc(r,o);let i=r.shapeInfo.logicalShape,s=t.logicalShape;return i.length<=s.length&&(e?n+=GQ(r,t):n+=HQ(r,t)),n}function dQ(r,t,e){switch(r.length){case 0:return WP();case 1:return wQ(r,t,e);case 2:return RQ(r,t,e);case 3:return CQ(r,t,e);default:return IQ(r,t,e)}}function mQ(r,t,e){switch(r.length){case 0:return WP();case 1:return _Q(r,t,e);case 2:return PQ(r,t,e);case 3:return kQ(r,t,e);case 4:return TQ(r,t,e);case 5:return EQ(r,t);case 6:return NQ(r,t);default:throw new Error(`${r.length}-D output sampling is not yet supported`)}}function fQ(r){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${r.texture2D}(textureSampler, uv).r;
    }
  `}function hQ(r){return`
    void setOutput(float val) {
      ${r.output} = vec4(val, 0, 0, 0);
    }
  `}function gQ(r){return`
    void setOutput(vec4 val) {
      ${r.output} = val;
    }
  `}function xQ(r){return`${r.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${r.varyingFs} vec2 resultUV;
    ${r.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${r.defineSpecialNaN}
    ${r.defineSpecialInf}
    ${r.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${yQ}
    ${vQ}
    ${bQ}
  `}var yQ=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,vQ=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,bQ=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,SQ=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function WP(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function wQ(r,t,e){let o=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return o[0]===1?e?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${o[1]}.0);
      }
    `:o[1]===1?e?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${o[0]}.0);
      }
    `:e?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${o[0]}, ${o[1]}));
      return 2 * (resTexRC.x * ${o[1]} + resTexRC.y);
    }
  `}function _Q(r,t,e){return t[0]===1?e?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${t[1]}.0);
      }
    `:t[1]===1?e?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${t[0]}.0);
      }
    `:e?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      return resTexRC.x * ${t[1]} + resTexRC.y;
    }
  `}function CQ(r,t,e){if(e)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;let o=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],n=Math.ceil(r[2]/2),i=n*Math.ceil(r[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${o[0]}, ${o[1]}));
      int index = resTexRC.x * ${o[1]} + resTexRC.y;

      int b = index / ${i};
      index -= b * ${i};

      int r = 2 * (index / ${n});
      int c = imod(index, ${n}) * 2;

      return ivec3(b, r, c);
    }
  `}function kQ(r,t,e){if(e)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${fa(["r","c","d"],r)}
    return ivec3(r, c, d);
  }
`;let o=Qo(["r","c","d"],r);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${o}
      return ivec3(r, c, d);
    }
  `}function IQ(r,t,e){if(e)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;let o=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],n=Math.ceil(r[r.length-1]/2),i=n*Math.ceil(r[r.length-2]/2),s=i,a="",l="b, r, c";for(let u=2;u<r.length-1;u++)s*=r[r.length-u-1],a=`
      int b${u} = index / ${s};
      index -= b${u} * ${s};
    `+a,l=`b${u}, `+l;return`
    ivec${r.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${o[0]}, ${o[1]}));
      int index = resTexRC.x * ${o[1]} + resTexRC.y;

      ${a}

      int b = index / ${i};
      index -= b * ${i};

      int r = 2 * (index / ${n});
      int c = imod(index, ${n}) * 2;

      return ivec${r.length}(${l});
    }
  `}function TQ(r,t,e){if(e)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${fa(["r","c","d","d2"],r)}
      return ivec4(r, c, d, d2);
    }
  `;let o=Qo(["r","c","d","d2"],r);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${o}
      return ivec4(r, c, d, d2);
    }
  `}function EQ(r,t){let e=Qo(["r","c","d","d2","d3"],r);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},
                             ${t[1]}));

      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${e}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function NQ(r,t){let e=Qo(["r","c","d","d2","d3","d4"],r);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${e}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function RQ(r,t,e){let o=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(S.arraysEqual(r,t))return e?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${o[0]}, ${o[1]}));
      }
    `;let n=Math.ceil(r[1]/2);return e?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${o[0]}, ${o[1]}));

      int index = resTexRC.x * ${o[1]} + resTexRC.y;
      int r = 2 * (index / ${n});
      int c = imod(index, ${n}) * 2;

      return ivec2(r, c);
    }
  `}function PQ(r,t,e){return S.arraysEqual(r,t)?e?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));
      }
    `:r[1]===1?e?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:r[0]===1?e?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:e?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      int r = index / ${r[1]};
      int c = index - r * ${r[1]};
      return ivec2(r, c);
    }
  `}function ha(r){return`offset${r}`}function $Q(r){let t=r.name,e="get"+t.charAt(0).toUpperCase()+t.slice(1),o=Ct();return`
    vec4 ${e}() {
      return ${o.texture2D}(${t}, halfCR);
    }
  `}function AQ(r,t){let e=r.name,o="get"+e.charAt(0).toUpperCase()+e.slice(1);if(r.shapeInfo.isUniform)return`float ${o}() {return ${e};}`;let[n,i]=r.shapeInfo.texShape;if(n===1&&i===1)return`
      float ${o}() {
        return sampleTexture(${e}, halfCR);
      }
    `;let s=ha(e);if(t)return`
    float ${o}() {
      vec2 uv = uvFromFlat(${e}TexShape[0], ${e}TexShape[1], ${s});
      return sampleTexture(${e}, uv);
    }
  `;let[a,l]=r.shapeInfo.texShape;return`
    float ${o}() {
      vec2 uv = uvFromFlat(${a}, ${l}, ${s});
      return sampleTexture(${e}, uv);
    }
  `}function DQ(r,t){let e=r.name,o="get"+e.charAt(0).toUpperCase()+e.slice(1),n=r.shapeInfo.texShape,i=Ct();if(t)return`
    vec4 ${o}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${e}TexShape[0]) / 2.0), ceil(float(${e}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${i.texture2D}(${e}, uv);
    }
  `;let s=[Math.ceil(n[0]/2),Math.ceil(n[1]/2)];return`
    vec4 ${o}(int index) {
      vec2 uv = packedUVfrom1D(
        ${s[0]}, ${s[1]}, index);
      return ${i.texture2D}(${e}, uv);
    }
  `}function FQ(r,t){let e=r.name,o="get"+e.charAt(0).toUpperCase()+e.slice(1);if(r.shapeInfo.isUniform)return`
      float ${o}(int index) {
        ${zc(r)}
      }
    `;let n=r.shapeInfo.texShape,i=n[0],s=n[1];if(s===1&&i===1)return`
      float ${o}(int index) {
        return sampleTexture(${e}, halfCR);
      }
    `;let a=ha(e);return s===1?t?`
      float ${o}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${a}) + 0.5) / float(${e}TexShape[0]));
        return sampleTexture(${e}, uv);
      }
    `:`
      float ${o}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${a}) + 0.5) / ${i}.0);
        return sampleTexture(${e}, uv);
      }
    `:i===1?t?`
      float ${o}(int index) {
        vec2 uv = vec2((float(index + ${a}) + 0.5) / float(${e}TexShape[1]), 0.5);
        return sampleTexture(${e}, uv);
      }
    `:`
      float ${o}(int index) {
        vec2 uv = vec2((float(index + ${a}) + 0.5) / ${s}.0, 0.5);
        return sampleTexture(${e}, uv);
      }
    `:t?`
    float ${o}(int index) {
      vec2 uv = uvFromFlat(${e}TexShape[0], ${e}TexShape[1], index + ${a});
      return sampleTexture(${e}, uv);
    }
  `:`
    float ${o}(int index) {
      vec2 uv = uvFromFlat(${i}, ${s}, index + ${a});
      return sampleTexture(${e}, uv);
    }
  `}function OQ(r,t){let e=r.shapeInfo.logicalShape,o=r.name,n="get"+o.charAt(0).toUpperCase()+o.slice(1),i=r.shapeInfo.texShape,s=i[0],a=i[1],l=Ct();if(i!=null&&S.arraysEqual(e,i))return t?`
      vec4 ${n}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}TexShape[1], ${o}TexShape[0]);

        return ${l.texture2D}(${o}, uv);
      }
    `:`
      vec4 ${n}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${a}.0, ${s}.0);

        return ${l.texture2D}(${o}, uv);
      }
    `;if(t)return`
    vec4 ${n}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${o}TexShape[0]) / 2.0), ceil(float(${o}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${o}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${l.texture2D}(${o}, uv);
    }
  `;let u=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],c=Math.ceil(e[1]/2);return`
    vec4 ${n}(int row, int col) {
      vec2 uv = packedUVfrom2D(${c}, ${u[0]}, ${u[1]}, row, col);
      return ${l.texture2D}(${o}, uv);
    }
  `}function LQ(r,t){let e=r.shapeInfo.logicalShape,o=r.name,n="get"+o.charAt(0).toUpperCase()+o.slice(1),i=r.shapeInfo.texShape;if(i!=null&&S.arraysEqual(e,i)){if(t)return`
      float ${n}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}TexShape[1], ${o}TexShape[0]);
        return sampleTexture(${o}, uv);
      }
    `;let d=i[0],m=i[1];return`
    float ${n}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${m}.0, ${d}.0);
      return sampleTexture(${o}, uv);
    }
  `}let{newShape:s,keptDims:a}=S.squeezeShape(e),l=s;if(l.length<e.length){let d=Gc(r,l),m=["row","col"];return`
      ${Uc(d,t)}
      float ${n}(int row, int col) {
        return ${n}(${Hc(m,a)});
      }
    `}if(r.shapeInfo.isUniform)return`
      float ${n}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${e[1]}, 1)));
        ${zc(r)}
      }
    `;let u=i[0],c=i[1],p=ha(o);return c===1?t?`
      float ${n}(int row, int col) {
        float index = dot(vec3(row, col, ${p}), vec3(${o}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${o}TexShape[0]));
        return sampleTexture(${o}, uv);
      }
    `:`
    float ${n}(int row, int col) {
      float index = dot(vec3(row, col, ${p}), vec3(${e[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);
      return sampleTexture(${o}, uv);
    }
  `:u===1?t?`
      float ${n}(int row, int col) {
        float index = dot(vec3(row, col, ${p}), vec3(${o}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${o}TexShape[1]), 0.5);
        return sampleTexture(${o}, uv);
      }
    `:`
    float ${n}(int row, int col) {
      float index = dot(vec3(row, col, ${p}), vec3(${e[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${c}.0, 0.5);
      return sampleTexture(${o}, uv);
    }
  `:t?`
      float ${n}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${o}Shape[1] + col + ${p};
        vec2 uv = uvFromFlat(${o}TexShape[0], ${o}TexShape[1], index);
        return sampleTexture(${o}, uv);
      }
    `:`
  float ${n}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${e[1]} + col + ${p};
    vec2 uv = uvFromFlat(${u}, ${c}, index);
    return sampleTexture(${o}, uv);
  }
`}function MQ(r,t){let e=r.shapeInfo.logicalShape,o=r.name,n="get"+o.charAt(0).toUpperCase()+o.slice(1),i=r.shapeInfo.texShape,s=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)];if(e[0]===1){let d=e.slice(1),m=[1,2],f=Gc(r,d),g=["b","row","col"];return`
        ${VP(f,t)}
        vec4 ${n}(int b, int row, int col) {
          return ${n}(${Hc(g,m)});
        }
      `}let a=Ct();if(t)return`
    vec4 ${n}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${o}TexShape[0]) / 2.0), ceil(float(${o}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${o}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${o}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${a.texture2D}(${o}, uv);
    }
  `;let l=s[0],u=s[1],c=Math.ceil(e[2]/2),p=c*Math.ceil(e[1]/2);return`
    vec4 ${n}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${l}, ${u}, ${p}, ${c}, b, row, col);
      return ${a.texture2D}(${o}, uv);
    }
  `}function BQ(r,t){let e=r.shapeInfo.logicalShape,o=r.name,n="get"+o.charAt(0).toUpperCase()+o.slice(1),i=e[1]*e[2],s=e[2],{newShape:a,keptDims:l}=S.squeezeShape(e),u=a;if(u.length<e.length){let g=Gc(r,u),x=["row","col","depth"];return`
        ${Uc(g,t)}
        float ${n}(int row, int col, int depth) {
          return ${n}(${Hc(x,l)});
        }
      `}if(r.shapeInfo.isUniform)return`
      float ${n}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${i}, ${s}, 1)));
        ${zc(r)}
      }
    `;let c=r.shapeInfo.texShape,p=c[0],d=c[1],m=r.shapeInfo.flatOffset;if(d===i&&m==null)return t?`
      float ${n}(int row, int col, int depth) {
        int stride1 = ${o}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${o}TexShape[1], ${o}TexShape[0]);
        return sampleTexture(${o}, uv);
      }
    `:`
        float ${n}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${s}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${d}.0, ${p}.0);
          return sampleTexture(${o}, uv);
        }
      `;if(d===s&&m==null)return t?`
      float ${n}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${o}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${o}TexShape[1], ${o}TexShape[0]);
        return sampleTexture(${o}, uv);
      }
    `:`
    float ${n}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${e[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}.0, ${p}.0);
      return sampleTexture(${o}, uv);
    }
  `;let f=ha(o);return t?`
    float ${n}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${o}Shape[1] * ${o}Shape[2];
      int stride1 = ${o}Shape[2];
      int index = row * stride0 + col * stride1 + depth + ${f};
      vec2 uv = uvFromFlat(${o}TexShape[0], ${o}TexShape[1], index);
      return sampleTexture(${o}, uv);
    }
    `:`
      float ${n}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${i} + col * ${s} + depth + ${f};
        vec2 uv = uvFromFlat(${p}, ${d}, index);
        return sampleTexture(${o}, uv);
      }
  `}function VQ(r,t){let e=r.name,o="get"+e.charAt(0).toUpperCase()+e.slice(1),n=Ct();if(t)return`
    vec4 ${o}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${e}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${e}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${e}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${e}TexShape[0]) / 2.0), ceil(float(${e}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${n.texture2D}(${e}, uv);
    }
  `;let i=r.shapeInfo.logicalShape,s=i.length,a=r.shapeInfo.texShape,l=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],u=l[0],c=l[1],p=Math.ceil(i[s-1]/2),d=p*Math.ceil(i[s-2]/2),m="int b, int row, int col",f=`b * ${d} + (row / 2) * ${p} + (col / 2)`;for(let g=2;g<s-1;g++)m=`int b${g}, `+m,d*=i[s-g-1],f=`b${g} * ${d} + `+f;return`
    vec4 ${o}(${m}) {
      int index = ${f};
      int texR = index / ${c};
      int texC = index - texR * ${c};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}, ${u});
      return ${n.texture2D}(${e}, uv);
    }
  `}function WQ(r,t){let e=r.shapeInfo.logicalShape,o=r.name,n="get"+o.charAt(0).toUpperCase()+o.slice(1),i=e[3],s=e[2]*i,a=e[1]*s,{newShape:l,keptDims:u}=S.squeezeShape(e);if(l.length<e.length){let b=Gc(r,l),I=["row","col","depth","depth2"];return`
      ${Uc(b,t)}
      float ${n}(int row, int col, int depth, int depth2) {
        return ${n}(${Hc(I,u)});
      }
    `}if(r.shapeInfo.isUniform)return`
      float ${n}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${a}, ${s}, ${i}, 1)));
        ${zc(r)}
      }
    `;let c=r.shapeInfo.flatOffset,p=r.shapeInfo.texShape,d=p[0],m=p[1],f=`int stride2 = ${o}Shape[3];`,g=`int stride1 = ${o}Shape[2] * stride2;`,x=`int stride0 = ${o}Shape[1] * stride1;`;if(m===a&&c==null)return t?`
      float ${n}(int row, int col, int depth, int depth2) {
        ${f}
        ${g}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${o}TexShape[1], ${o}TexShape[0]);
        return sampleTexture(${o}, uv);
      }
    `:`
      float ${n}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${s}, ${i}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${m}.0, ${d}.0);
        return sampleTexture(${o}, uv);
      }
    `;if(m===i&&c==null)return t?`
      float ${n}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${o}Shape[1] * ${o}Shape[2], ${o}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${o}TexShape[1], ${o}TexShape[0]);
        return sampleTexture(${o}, uv);
      }
    `:`
      float ${n}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${e[1]*e[2]}, ${e[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${m}.0, ${d}.0);
        return sampleTexture(${o}, uv);
      }
    `;let y=ha(o);return t?`
    float ${n}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${f}
      ${g}
      ${x}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${o}TexShape[0], ${o}TexShape[1], index + ${y});
      return sampleTexture(${o}, uv);
    }
  `:`
    float ${n}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${a} + col * ${s} +
          depth * ${i} + depth2;
      vec2 uv = uvFromFlat(${d}, ${m}, index + ${y});
      return sampleTexture(${o}, uv);
    }
  `}function UQ(r){let t=r.shapeInfo.logicalShape,e=r.name,o="get"+e.charAt(0).toUpperCase()+e.slice(1),n=t[4],i=t[3]*n,s=t[2]*i,a=t[1]*s,{newShape:l,keptDims:u}=S.squeezeShape(t);if(l.length<t.length){let g=Gc(r,l),x=["row","col","depth","depth2","depth3"];return`
      ${Uc(g)}
      float ${o}(int row, int col, int depth, int depth2, int depth3) {
        return ${o}(${Hc(x,u)});
      }
    `}if(r.shapeInfo.isUniform)return`
      float ${o}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${a}, ${s}, ${i}, ${n})) +
          depth3;
        ${zc(r)}
      }
    `;let c=r.shapeInfo.flatOffset,p=r.shapeInfo.texShape,d=p[0],m=p[1];if(m===a&&c==null)return`
      float ${o}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${s}, ${i}, ${n}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${m}.0, ${d}.0);
        return sampleTexture(${e}, uv);
      }
    `;if(m===n&&c==null)return`
      float ${o}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]},
               ${t[2]*t[3]}, ${t[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${m}.0, ${d}.0);
        return sampleTexture(${e}, uv);
      }
    `;let f=ha(e);return`
    float ${o}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${a} + col * ${s} + depth * ${i} +
          depth2 * ${n} + depth3 + ${f};
      vec2 uv = uvFromFlat(${d}, ${m}, index);
      return sampleTexture(${e}, uv);
    }
  `}function zQ(r){let t=r.shapeInfo.logicalShape,e=r.name,o="get"+e.charAt(0).toUpperCase()+e.slice(1),{newShape:n,keptDims:i}=S.squeezeShape(t);if(n.length<t.length){let x=Gc(r,n),y=["row","col","depth","depth2","depth3","depth4"];return`
      ${Uc(x)}
      float ${o}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${o}(${Hc(y,i)});
      }
    `}let s=t[5],a=t[4]*s,l=t[3]*a,u=t[2]*l,c=t[1]*u;if(r.shapeInfo.isUniform)return`
      float ${o}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${c}, ${u}, ${l}, ${a})) +
          dot(
            vec2(depth3, depth4),
            vec2(${s}, 1)));
        ${zc(r)}
      }
    `;let p=r.shapeInfo.flatOffset,d=r.shapeInfo.texShape,m=d[0],f=d[1];if(f===c&&p==null)return`
      float ${o}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${u}, ${l}, ${a}, ${s})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${m}.0);
        return sampleTexture(${e}, uv);
      }
    `;if(f===s&&p==null)return`
      float ${o}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]*t[4]},
               ${t[2]*t[3]*t[4]},
               ${t[3]*t[4]},
               ${t[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${m}.0);
        return sampleTexture(${e}, uv);
      }
    `;let g=ha(e);return`
    float ${o}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${c} + col * ${u} + depth * ${l} +
          depth2 * ${a} + depth3 * ${s} + depth4 + ${g};
      vec2 uv = uvFromFlat(${m}, ${f}, index);
      return sampleTexture(${e}, uv);
    }
  `}function zc(r){let t=r.name,e=S.sizeFromShape(r.shapeInfo.logicalShape);return e<2?`return ${t};`:`
    for (int i = 0; i < ${e}; i++) {
      if (i == index) {
        return ${t}[i];
      }
    }
  `}function GQ(r,t){let e=r.name,o=e.charAt(0).toUpperCase()+e.slice(1),n="get"+o+"AtOutCoords",i=r.shapeInfo.logicalShape.length,s=t.logicalShape.length,a=MP(r.shapeInfo.logicalShape,t.logicalShape),l=Me(s),u=s-i,c,p=["x","y","z","w","u","v"];i===0?c="":s<2&&a.length>=1?c="coords = 0;":c=a.map(b=>`coords.${p[b+u]} = 0;`).join(`
`);let d="";s<2&&i>0?d="coords":d=r.shapeInfo.logicalShape.map((b,I)=>`coords.${p[I+u]}`).join(", ");let m="return outputValue;",g=S.sizeFromShape(r.shapeInfo.logicalShape)===1,y=S.sizeFromShape(t.logicalShape)===1;if(i===1&&!g&&!y)m=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(g&&!y)s===1?m=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:m=`
        return vec4(outputValue.x);
      `;else if(a.length){let b=i-2,I=i-1;a.indexOf(b)>-1&&a.indexOf(I)>-1?m="return vec4(outputValue.x);":a.indexOf(b)>-1?m="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":a.indexOf(I)>-1&&(m="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${n}() {
      ${l} coords = getOutputCoords();
      ${c}
      vec4 outputValue = get${o}(${d});
      ${m}
    }
  `}function HQ(r,t){let e=r.name,o=e.charAt(0).toUpperCase()+e.slice(1),n="get"+o+"AtOutCoords",i=t.texShape,s=r.shapeInfo.texShape,a=r.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!r.shapeInfo.isUniform&&a===l&&r.shapeInfo.flatOffset==null&&S.arraysEqual(s,i))return`
      float ${n}() {
        return sampleTexture(${e}, resultUV);
      }
    `;let u=Me(l),c=MP(r.shapeInfo.logicalShape,t.logicalShape),p=l-a,d,m=["x","y","z","w","u","v"];a===0?d="":l<2&&c.length>=1?d="coords = 0;":d=c.map(g=>`coords.${m[g+p]} = 0;`).join(`
`);let f="";return l<2&&a>0?f="coords":f=r.shapeInfo.logicalShape.map((g,x)=>`coords.${m[x+p]}`).join(", "),`
    float ${n}() {
      ${u} coords = getOutputCoords();
      ${d}
      return get${o}(${f});
    }
  `}function Me(r){if(r<=1)return"int";if(r===2)return"ivec2";if(r===3)return"ivec3";if(r===4)return"ivec4";if(r===5)return"ivec5";if(r===6)return"ivec6";throw Error(`GPU for rank ${r} is not yet supported`)}function ox(r,t,e){let{newShape:o,keptDims:n}=S.squeezeShape(t),i=t.length,s=r&&i===3&&t[0]===1,a=s?t.slice(1):o,l=!r&&i>1&&!S.arraysEqual(t,e)&&o.length<i||s;return{useSqueezeShape:l,uniformShape:l?a:t,keptDims:n}}function Gc(r,t){let e=JSON.parse(JSON.stringify(r));return e.shapeInfo.logicalShape=t,e}function Hc(r,t){return t.map(e=>r[e]).join(", ")}function zP(r,t,e,o){let n=e.map((c,p)=>{let d={logicalShape:c.shape,texShape:c.isUniform?null:c.texData.texShape,isUniform:c.isUniform,isPacked:c.isUniform?!1:c.texData.isPacked,flatOffset:null};return c.texData!=null&&c.texData.slice!=null&&c.texData.slice.flatOffset>0&&(d.flatOffset=c.texData.slice.flatOffset),{name:t.variableNames[p],shapeInfo:d}}),i=n.map(c=>c.shapeInfo),s={logicalShape:o.shape,texShape:o.texData.texShape,isUniform:!1,isPacked:o.texData.isPacked,flatOffset:null},a=BP(n,s,t),l=vP(r.gl,a),u=r.createProgram(l);return G().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:l,source:a,webGLProgram:u,inShapeInfos:i,outShapeInfo:s,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(r.buildVao(u),Object.assign({program:t,fragmentShader:l,source:a,webGLProgram:u,inShapeInfos:i,outShapeInfo:s},Xb(r,t,u)))}function Xb(r,t,e){let o=[],n=[],i,s,a,l=null,u=null;u=r.getUniformLocation(e,"NAN",!1),G().getNumber("WEBGL_VERSION")===1&&(l=r.getUniformLocation(e,"INFINITY",!1));let c=!1;for(let p of t.variableNames){let d={name:p,uniform:r.getUniformLocation(e,p,c),offset:r.getUniformLocation(e,`offset${p}`,c)};t.enableShapeUniforms&&(d.shape=r.getUniformLocation(e,`${p}Shape`,c),d.texShape=r.getUniformLocation(e,`${p}TexShape`,c)),o.push(d)}if(t.enableShapeUniforms&&(i=r.getUniformLocation(e,"outShape",c),a=r.getUniformLocation(e,"outShapeStrides",c),s=r.getUniformLocation(e,"outTexShape",c)),t.customUniforms)for(let p of t.customUniforms)n.push(r.getUniformLocation(e,p.name,c));return{variablesLocations:o,customUniformLocations:n,infLoc:l,nanLoc:u,outShapeLocation:i,outShapeStridesLocation:a,outTexShapeLocation:s}}function UP(r,t){if(r.length!==t.length)throw Error(`Binary was compiled with ${r.length} inputs, but was executed with ${t.length} inputs`);r.forEach((e,o)=>{let n=e.logicalShape,i=t[o],s=i.shape;if(!S.arraysEqual(n,s))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${n} and ${s} must match`);if(e.isUniform&&i.isUniform)return;let a=e.texShape,l=i.isUniform?null:i.texData.texShape;if(!S.arraysEqual(a,l))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${a} and ${l} must match`)})}function GP(r,t,e,o,n){t.program.enableShapeUniforms||(UP(t.inShapeInfos,e),UP([t.outShapeInfo],[o]));let i=o.texData.texture,s=o.texData.texShape;o.texData.isPacked?r.setOutputPackedMatrixTexture(i.texture,s[0],s[1]):r.setOutputMatrixTexture(i.texture,s[0],s[1]),r.setProgram(t.webGLProgram),r.bindVertexArray(t.webGLProgram.vao),G().getNumber("WEBGL_VERSION")===1&&t.infLoc!==null&&r.gl.uniform1f(t.infLoc,1/0),t.nanLoc!==null&&r.gl.uniform1f(t.nanLoc,NaN);for(let l=0;l<e.length;++l){let u=e[l],{uniform:c,offset:p,shape:d,texShape:m}=t.variablesLocations[l];if(d){let{uniformShape:f}=ox(t.program.packedInputs,u.shape,u.texData.texShape);switch(f.length){case 1:r.gl.uniform1iv(d,new Int32Array(f));break;case 2:r.gl.uniform2iv(d,new Int32Array(f));break;case 3:r.gl.uniform3iv(d,new Int32Array(f));break;case 4:r.gl.uniform4iv(d,new Int32Array(f));break;default:break}}if(m&&r.gl.uniform2i(m,u.texData.texShape[0],u.texData.texShape[1]),c!=null){if(u.isUniform){if(S.sizeFromShape(u.shape)<2)r.gl.uniform1f(c,u.uniformValues[0]);else{let f=u.uniformValues;f instanceof Float32Array||(f=new Float32Array(f)),r.gl.uniform1fv(c,f)}continue}u.texData.slice!=null&&p!=null&&r.gl.uniform1i(p,u.texData.slice.flatOffset),r.setInputMatrixTexture(u.texData.texture.texture,c,l)}}let a=t.outShapeLocation;if(a)switch(o.shape.length){case 1:r.gl.uniform1iv(a,new Int32Array(o.shape));break;case 2:r.gl.uniform2iv(a,new Int32Array(o.shape));break;case 3:r.gl.uniform3iv(a,new Int32Array(o.shape));break;case 4:r.gl.uniform4iv(a,new Int32Array(o.shape));break;default:break}if(t.outShapeStridesLocation){let l=S.computeStrides(o.shape);switch(o.shape.length){case 2:r.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(l));break;case 3:r.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(l));break;case 4:r.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(l));break;default:break}}if(t.outTexShapeLocation&&r.gl.uniform2i(t.outTexShapeLocation,o.texData.texShape[0],o.texData.texShape[1]),t.program.customUniforms&&n)for(let l=0;l<t.program.customUniforms.length;++l){let u=t.program.customUniforms[l],c=t.customUniformLocations[l],p=n[l];if(u.type==="float")r.gl.uniform1fv(c,p);else if(u.type==="vec2")r.gl.uniform2fv(c,p);else if(u.type==="vec3")r.gl.uniform3fv(c,p);else if(u.type==="vec4")r.gl.uniform4fv(c,p);else if(u.type==="int")r.gl.uniform1iv(c,p);else if(u.type==="ivec2")r.gl.uniform2iv(c,p);else if(u.type==="ivec3")r.gl.uniform3iv(c,p);else if(u.type==="ivec4")r.gl.uniform4iv(c,p);else throw Error(`uniform type ${u.type} is not supported yet.`)}r.executeProgram()}function HP(r,t,e){let o="";t.concat(e).forEach(s=>{let a=s.texData!=null&&s.texData.slice!=null&&s.texData.slice.flatOffset>0;if(r.enableShapeUniforms&&!s.isUniform){let l=s.texData.texShape,{useSqueezeShape:u,uniformShape:c,keptDims:p}=ox(r.packedInputs,s.shape,l),d="",m="",f="";if(c.length===1&&r.packedInputs){let M=[Math.ceil(l[0]/2),Math.ceil(l[1]/2)];d=`${M[0]>1}_${M[1]>1}`}else if(c.length===2&&!r.packedInputs)m=`${c[0]>1}_${c[1]>1}`;else if(c.length>2&&!r.packedInputs){let M=S.computeStrides(c);f=`${M[0]===l[1]}_${M[M.length-1]===l[1]}`}let g=s.shape.length,x=c.length===2&&S.arraysEqual(s.shape,l),y=S.sizeFromShape(s.shape)===1,b=P.getBroadcastDims(s.shape,e.shape),I=!r.packedInputs&&g===e.shape.length&&S.arraysEqual(l,e.texData.texShape),N=r.packedInputs||c.length>2?"":`${l[0]>1}_${l[1]>1}`;o+=`${g}_${I}_${u?p:""}_${c.length}_${y}_${b}_${x}_${d}_${m}_${f}_${N}_${a}`}else{let l=s.isUniform?"uniform":s.texData.texShape;o+=`${s.shape}_${l}_${a}`}});let n=r.userCode,i=r.constructor.name;return i+="_"+o+"_"+n+`${G().getNumber("WEBGL_VERSION")}`,i}function at(r){return G().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&r<=4}var nx=class{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=pa.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];let e=Ct();this.outputShape=t,this.enableShapeUniforms=at(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?fa(["r","c","d"],t):Qo(["r","c","d"],t)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${e.output} = result;
      }
    `}};var ix=class{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=pa.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];let e=Ct();this.outputShape=t,this.enableShapeUniforms=at(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?fa(["r","c","d"],t):Qo(["r","c","d"],t)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${e.output} = result;
      }
    `}};var sx=class{constructor(t){this.variableNames=["A"],this.outTexUsage=yr.DOWNLOAD;let e=Ct();this.outputShape=t,this.userCode=`
      ${rx}

      void main() {
        float x = getAAtOutCoords();
        ${e.output} = encode_float(x);
      }
    `}};var ax=class{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=yr.DOWNLOAD;let e=Ct();this.outputShape=t,this.userCode=`
      ${rx}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${e.output} = encode_float(x);
      }
    `}};var jQ={R:0,G:1,B:2,A:3},ud=class{constructor(t,e=!1,o="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];let n=Ct();this.outputShape=t,this.enableShapeUniforms=at(this.outputShape.length);let i="result";e&&(i="floor(result * 255. + 0.5)");let s="";for(let a=0;a<o.length;a++){let l=o[a];s+=`
          if(offset == ${a}) {
            result = values[${jQ[l]}];
          }`}this.userCode=`
      ${this.enableShapeUniforms?Vc():Bc(t)}

      void main() {
        ivec3 coords = getOutputCoords();
        int flatIndex = getFlatIndex(coords);
        float result = 0.;
        int offset = imod(flatIndex, ${o.length});

        flatIndex = idiv(flatIndex, ${o.length}, 1.);

        int r = flatIndex / texShape[1];
        if (r < texShape[0]) {
          int c = imod(flatIndex, texShape[1]);
          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
          vec4 values = ${n.texture2D}(A, uv);
          ${s}
        }
        ${n.output} = vec4(${i}, 0., 0., 0.);
      }
    `}};var lx=class{constructor(t,e=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];let o=Ct();this.outputShape=t,this.enableShapeUniforms=at(this.outputShape.length);let n="",i="result";e&&(i="floor(result * 255. + 0.5)");for(let s=0;s<=1;s++)for(let a=0;a<=1;a++){let l=s*2+a;n+=`
          localCoords = coords;
          if(localCoords[2] + ${a} < ${this.enableShapeUniforms?"outShape[2]":`${t[2]}`}) {
          localCoords[2] += ${a};
          if (localCoords[1] + ${s} < ${this.enableShapeUniforms?"outShape[1]":`${t[1]}`}) {
            localCoords[1] += ${s};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${o.texture2D}(A, uv);

            if (offset == 0) {
              result[${l}] = values[0];
            } else if (offset == 1) {
              result[${l}] = values[1];
            } else if (offset == 2) {
              result[${l}] = values[2];
            } else {
              result[${l}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?Vc():Bc(t)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${n}

          ${o.output} = ${i};
        }
    `}};function KP(r){let t=Ct(),e=`${t.version}
    precision highp float;
    ${t.attribute} vec3 clipSpacePos;
    ${t.attribute} vec2 uv;
    ${t.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return yP(r,e)}function qP(r){let t=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return wP(r,t)}function jP(r){let t=new Uint16Array([0,1,2,2,1,3]);return _P(r,t)}function cd(r,t,e,o,n,i){kP(t,e);let s=CP(r),a=r.TEXTURE_2D;return Se(r,()=>r.bindTexture(a,s)),Se(r,()=>r.texParameteri(a,r.TEXTURE_WRAP_S,r.CLAMP_TO_EDGE)),Se(r,()=>r.texParameteri(a,r.TEXTURE_WRAP_T,r.CLAMP_TO_EDGE)),Se(r,()=>r.texParameteri(a,r.TEXTURE_MIN_FILTER,r.NEAREST)),Se(r,()=>r.texParameteri(a,r.TEXTURE_MAG_FILTER,r.NEAREST)),G().getNumber("WEBGL_VERSION")===1?Se(r,()=>r.texImage2D(a,0,o,t,e,0,n,i,null)):Se(r,()=>r.texStorage2D(a,1,o,t,e)),Se(r,()=>r.bindTexture(r.TEXTURE_2D,null)),{texture:s,texShape:[e,t]}}function Yb(r){return r.internalFormatFloat}function XP(r,t,e,o){let[n,i]=da(t,e);return cd(r,n,i,Yb(o),o.textureFormatFloat,r.FLOAT)}function Qb(r){return r.internalFormatHalfFloat}function YP(r,t,e,o){let[n,i]=da(t,e);return cd(r,n,i,Qb(o),o.textureFormatFloat,o.textureTypeHalfFloat)}function Zb(r){return r.downloadTextureFormat}function QP(r,t,e,o){let[n,i]=da(t,e);return cd(r,n,i,Zb(o),r.RGBA,r.UNSIGNED_BYTE)}function Jb(r){return r.internalFormatPackedFloat}function ZP(r,t,e,o){let[n,i]=Nn(t,e);return cd(r,n,i,Jb(o),r.RGBA,r.FLOAT)}function e1(r){return r.internalFormatPackedHalfFloat}function JP(r,t,e,o){let[n,i]=Nn(t,e);return cd(r,n,i,e1(o),r.RGBA,o.textureTypeHalfFloat)}function e$(r,t,e){return Se(r,()=>r.bindBuffer(r.ARRAY_BUFFER,e)),Kb(r,t,"clipSpacePos",e,3,20,0)&&Kb(r,t,"uv",e,2,20,12)}function t$(r,t,e,o,n,i){Se(r,()=>r.bindTexture(r.TEXTURE_2D,t));let s,a,l;n instanceof Uint8Array?(s=new Uint8Array(e*o*4),a=r.UNSIGNED_BYTE,l=r.RGBA):(s=new Float32Array(e*o*4),a=r.FLOAT,l=i.internalFormatPackedFloat),s.set(n),G().getNumber("WEBGL_VERSION")===2?Se(r,()=>r.texSubImage2D(r.TEXTURE_2D,0,0,0,e,o,r.RGBA,a,s)):Se(r,()=>r.texImage2D(r.TEXTURE_2D,0,l,e,o,0,r.RGBA,a,s)),Se(r,()=>r.bindTexture(r.TEXTURE_2D,null))}function r$(r,t,e){Se(r,()=>r.bindTexture(r.TEXTURE_2D,t)),e.data instanceof Uint8Array?G().getNumber("WEBGL_VERSION")===2?Se(r,()=>r.texSubImage2D(r.TEXTURE_2D,0,0,0,e.width,e.height,r.RGBA,r.UNSIGNED_BYTE,e.data)):Se(r,()=>r.texImage2D(r.TEXTURE_2D,0,r.RGBA,e.width,e.height,0,r.RGBA,r.UNSIGNED_BYTE,e.data)):G().getNumber("WEBGL_VERSION")===2?Se(r,()=>r.texSubImage2D(r.TEXTURE_2D,0,0,0,r.RGBA,r.UNSIGNED_BYTE,e)):Se(r,()=>r.texImage2D(r.TEXTURE_2D,0,r.RGBA,r.RGBA,r.UNSIGNED_BYTE,e)),Se(r,()=>r.bindTexture(r.TEXTURE_2D,null))}function o$(r,t,e,o){let n=r.createBuffer();Se(r,()=>r.bindBuffer(r.PIXEL_PACK_BUFFER,n));let a=4*4*t*e;return Se(r,()=>r.bufferData(r.PIXEL_PACK_BUFFER,a,r.STREAM_READ)),Se(r,()=>r.readPixels(0,0,e,t,r.RGBA,r.FLOAT,0)),Se(r,()=>r.bindBuffer(r.PIXEL_PACK_BUFFER,null)),n}function n$(r,t,e){let o=r,n=new Float32Array(e);return o.bindBuffer(o.PIXEL_PACK_BUFFER,t),o.getBufferSubData(o.PIXEL_PACK_BUFFER,0,n),o.bindBuffer(o.PIXEL_PACK_BUFFER,null),n}function i$(r,t,e,o){let[n,i]=da(t,e),s=4,a=new Uint8Array(hP(t*e,s));return Se(r,()=>r.readPixels(0,0,n,i,o.downloadTextureFormat,r.UNSIGNED_BYTE,a)),new Float32Array(a.buffer)}function s$(r,t,e,o,n,i,s,a){let l=r,u=new Float32Array(gP(i,s));return l.bindBuffer(l.PIXEL_PACK_BUFFER,t),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,u),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),u}function a$(r,t,e){let o=new Float32Array(t*e*4);return Se(r,()=>r.readPixels(0,0,e,t,r.RGBA,r.FLOAT,o)),o}var Kc=class{constructor(t){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];let e=G().getNumber("WEBGL_VERSION");if(t!=null?(this.gl=t,fP(e,t)):this.gl=mo(e),t=this.gl,G().getNumber("WEBGL_VERSION")===2){let i=t;this.createVertexArray=()=>Se(i,()=>i.createVertexArray()),this.bindVertexArray=s=>Se(i,()=>i.bindVertexArray(s)),this.deleteVertexArray=s=>Se(i,()=>i.deleteVertexArray(s)),this.getVertexArray=()=>Se(i,()=>i.getParameter(i.VERTEX_ARRAY_BINDING))}else if(t!=null){let i=t.getExtension("OES_vertex_array_object");if(i==null)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>Se(t,()=>i.createVertexArrayOES()),this.bindVertexArray=s=>Se(t,()=>i.bindVertexArrayOES(s)),this.deleteVertexArray=s=>Se(t,()=>i.deleteVertexArrayOES(s)),this.getVertexArray=()=>Se(t,()=>t.getParameter(i.VERTEX_ARRAY_BINDING_OES))}let o="WEBGL_color_buffer_float",n="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),G().getNumber("WEBGL_VERSION")===1){let i="OES_texture_float",s="OES_texture_half_float";if(this.textureFloatExtension=sd(this.gl,i),Io(this.gl,s))this.textureHalfFloatExtension=sd(this.gl,s);else if(G().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(o),Io(this.gl,n))this.colorBufferHalfFloatExtension=sd(this.gl,n);else if(G().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(o="EXT_color_buffer_float",Io(this.gl,o))this.colorBufferFloatExtension=this.gl.getExtension(o);else if(Io(this.gl,n))this.colorBufferHalfFloatExtension=this.gl.getExtension(n);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=qP(this.gl),this.indexBuffer=jP(this.gl),this.framebuffer=IP(this.gl),this.textureConfig=id(this.gl,this.textureHalfFloatExtension)}get debug(){return G().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");let t=this.gl;Se(t,()=>t.finish()),Se(t,()=>t.bindFramebuffer(t.FRAMEBUFFER,null)),Se(t,()=>t.deleteFramebuffer(this.framebuffer)),Se(t,()=>t.bindBuffer(t.ARRAY_BUFFER,null)),Se(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,null)),Se(t,()=>t.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(t,e){return this.throwIfDisposed(),XP(this.gl,t,e,this.textureConfig)}createFloat16MatrixTexture(t,e){return this.throwIfDisposed(),YP(this.gl,t,e,this.textureConfig)}createUnsignedBytesMatrixTexture(t,e){return this.throwIfDisposed(),QP(this.gl,t,e,this.textureConfig)}uploadPixelDataToTexture(t,e){this.throwIfDisposed(),r$(this.gl,t,e)}uploadDenseMatrixToTexture(t,e,o,n){this.throwIfDisposed(),t$(this.gl,t,e,o,n,this.textureConfig)}createFloat16PackedMatrixTexture(t,e){return this.throwIfDisposed(),JP(this.gl,t,e,this.textureConfig)}createPackedMatrixTexture(t,e){return this.throwIfDisposed(),ZP(this.gl,t,e,this.textureConfig)}deleteMatrixTexture(t){this.throwIfDisposed(),this.outputTexture===t&&(qb(this.gl,this.framebuffer),this.outputTexture=null),Se(this.gl,()=>this.gl.deleteTexture(t))}downloadByteEncodedFloatMatrixFromOutputTexture(t,e,o){return this.downloadMatrixDriver(t,()=>i$(this.gl,e,o,this.textureConfig))}downloadPackedMatrixFromBuffer(t,e,o,n,i,s){return s$(this.gl,t,e,o,n,i,s,this.textureConfig)}downloadFloat32MatrixFromBuffer(t,e){return n$(this.gl,t,e)}createBufferFromTexture(t,e,o){this.bindTextureToFrameBuffer(t);let n=o$(this.gl,e,o,this.textureConfig);return this.unbindTextureToFrameBuffer(),n}createAndWaitForFence(){let t=this.createFence(this.gl);return this.pollFence(t)}createFence(t){let e,o;if(G().getBool("WEBGL_FENCE_API_ENABLED")){let n=t,i=n.fenceSync(n.SYNC_GPU_COMMANDS_COMPLETE,0);t.flush(),o=()=>{let s=n.clientWaitSync(i,0,0);return s===n.ALREADY_SIGNALED||s===n.CONDITION_SATISFIED},e=i}else G().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(e=this.beginQuery(),this.endQuery(),o=()=>this.isQueryAvailable(e,G().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):o=()=>!0;return{query:e,isFencePassed:o}}downloadMatrixFromPackedTexture(t,e,o){return this.downloadMatrixDriver(t,()=>a$(this.gl,e,o))}createProgram(t){this.throwIfDisposed();let e=this.gl;this.vertexShader==null&&(this.vertexShader=KP(e));let o=bP(e);Se(e,()=>e.attachShader(o,this.vertexShader)),Se(e,()=>e.attachShader(o,t)),SP(e,o);let n=Object.assign(o,{vao:this.createVertexArray()});return this.debug&&Jg(e,n),n}buildVao(t){this.setProgram(t),this.bindVertexArray(t.vao);let e=this.gl;Se(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,this.indexBuffer)),e$(e,t,this.vertexBuffer)}deleteProgram(t){this.throwIfDisposed(),t===this.program&&(this.program=null),t!=null&&(Se(this.gl,()=>this.gl.deleteProgram(t)),this.deleteVertexArray(t.vao))}setProgram(t){this.throwIfDisposed(),this.program=t,this.program!=null&&this.debug&&Jg(this.gl,this.program),Se(this.gl,()=>this.gl.useProgram(t))}getUniformLocation(t,e,o=!0){return this.throwIfDisposed(),o?TP(this.gl,t,e):EP(this.gl,t,e)}getAttributeLocation(t,e){return this.throwIfDisposed(),Se(this.gl,()=>this.gl.getAttribLocation(t,e))}getUniformLocationNoThrow(t,e){return this.throwIfDisposed(),this.gl.getUniformLocation(t,e)}setInputMatrixTexture(t,e,o){this.throwIfDisposed(),this.throwIfNoProgram(),NP(this.gl,t,e,o)}setOutputMatrixTexture(t,e,o){this.setOutputMatrixTextureDriver(t,o,e)}setOutputPackedMatrixTexture(t,e,o){this.throwIfDisposed();let[n,i]=Nn(e,o);this.setOutputMatrixTextureDriver(t,n,i)}setOutputMatrixWriteRegion(t,e,o,n){this.setOutputMatrixWriteRegionDriver(o,t,n,e)}setOutputPackedMatrixWriteRegion(t,e,o,n){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&Jg(this.gl,this.program),ad(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();let t=this.gl;if(this.debug){let e=this.getVertexArray();console.assert(e===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}Se(t,()=>t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),Se(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=sd(this.gl,G().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(G().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let o=this.gl,n=this.getQueryTimerExtensionWebGL2(),i=o.createQuery();return o.beginQuery(n.TIME_ELAPSED_EXT,i),i}let t=this.getQueryTimerExtensionWebGL1(),e=t.createQueryEXT();return t.beginQueryEXT(t.TIME_ELAPSED_EXT,e),e}endQuery(){if(G().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let e=this.gl,o=this.getQueryTimerExtensionWebGL2();e.endQuery(o.TIME_ELAPSED_EXT);return}let t=this.getQueryTimerExtensionWebGL1();t.endQueryEXT(t.TIME_ELAPSED_EXT)}waitForQueryAndGetTime(t){return j(this,null,function*(){return yield S.repeatedTry(()=>this.disposed||this.isQueryAvailable(t,G().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(t,G().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))})}getQueryTime(t,e){if(e===0)return null;if(e===2){let o=this.gl;return o.getQueryParameter(t,o.QUERY_RESULT)/1e6}else{let o=this.getQueryTimerExtensionWebGL1();return o.getQueryObjectEXT(t,o.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(t,e){if(e===0)return!0;if(e===2){let o=this.gl,n=this.getQueryTimerExtensionWebGL2(),i=o.getQueryParameter(t,o.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),i&&!this.disjoint}else{let o=this.getQueryTimerExtensionWebGL1(),n=o.getQueryObjectEXT(t,o.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(o.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(t){return new Promise(e=>{this.addItemToPoll(()=>t.isFencePassed(),()=>e())})}pollItems(){let t=YQ(this.itemsToPoll.map(e=>e.isDoneFn));for(let e=0;e<=t;++e){let{resolveFn:o}=this.itemsToPoll[e];o()}this.itemsToPoll=this.itemsToPoll.slice(t+1)}addItemToPoll(t,e){if(this.itemsToPoll.push({isDoneFn:t,resolveFn:e}),this.itemsToPoll.length>1)return;let o;"setTimeoutCustom"in G().platform&&(o=G().platform.setTimeoutCustom.bind(G().platform)),S.repeatedTry(()=>(this.pollItems(),this.itemsToPoll.length===0),()=>0,null,o)}bindTextureToFrameBuffer(t){this.throwIfDisposed(),ex(this.gl,t,this.framebuffer),this.debug&&ad(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(ex(this.gl,this.outputTexture,this.framebuffer),this.debug&&ad(this.gl)):qb(this.gl,this.framebuffer)}downloadMatrixDriver(t,e){this.bindTextureToFrameBuffer(t);let o=e();return this.unbindTextureToFrameBuffer(),o}setOutputMatrixTextureDriver(t,e,o){this.throwIfDisposed();let n=this.gl;ex(n,t,this.framebuffer),this.debug&&ad(n),this.outputTexture=t,Se(n,()=>n.viewport(0,0,e,o)),Se(n,()=>n.scissor(0,0,e,o))}setOutputMatrixWriteRegionDriver(t,e,o,n){this.throwIfDisposed(),Se(this.gl,()=>this.gl.scissor(t,e,o,n))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}};function YQ(r){let t=0;for(;t<r.length&&r[t]();++t);return t-1}var{addImpl:l$,bincountImpl:ux,bincountReduceImpl:u$,bitwiseAndImpl:c$,castImpl:p$,ceilImpl:d$,concatImpl:m$,equalImpl:f$,expImpl:h$,expm1Impl:g$,floorImpl:x$,gatherNdImpl:y$,gatherV2Impl:v$,greaterImpl:b$,greaterEqualImpl:S$,lessImpl:w$,lessEqualImpl:_$,linSpaceImpl:C$,logImpl:k$,maxImpl:I$,maximumImpl:T$,minimumImpl:E$,multiplyImpl:N$,negImpl:R$,notEqualImpl:P$,prodImpl:$$,raggedGatherImpl:A$,raggedRangeImpl:D$,raggedTensorToTensorImpl:F$,rangeImpl:O$,rsqrtImpl:L$,scatterImpl:M$,sigmoidImpl:B$,simpleAbsImpl:cx,sliceImpl:V$,sparseFillEmptyRowsImpl:W$,sparseReshapeImpl:U$,sparseSegmentReductionImpl:px,sqrtImpl:z$,staticRegexReplaceImpl:G$,stridedSliceImpl:H$,stringNGramsImpl:K$,stringSplitImpl:q$,stringToHashBucketFastImpl:j$,subImpl:X$,tileImpl:Y$,topKImpl:Q$,transposeImpl:ga,uniqueImpl:Z$}=Qp;function t1(r,t){return["x","y","z","w","u","v"].slice(0,t).map(e=>`${r}.${e}`)}function At(r,t){return t===1?[r]:t1(r,t)}function J$(r,t){if(r===1)return"rc";let e="";for(let o=0;o<r;o++)e+=t[o],o<r-1&&(e+=",");return e}var dx=class{constructor(t){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=t,this.rank=t.length,this.enableShapeUniforms=at(this.outputShape.length),this.rank===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{let e=At("rc",this.rank),o=Me(this.rank),n=this.getOutOfBoundsCondition(e),i=this.getSetup(e),s=this.getOutput(e);this.userCode=`
        void main() {
          ${o} rc = getOutputCoords();

          if(${n}) {
            setOutput(vec4(0));
          } else {
            ${i}

            setOutput(vec4(${s}));
          }
        }
      `}}getSourceCoordsArr(t){let e=[];for(let o=0;o<=1;o++)for(let n=0;n<=1;n++){let i=`${o===0?"r":"rp1"}, ${n===0?"c":"cp1"}`;for(let s=2;s<this.rank;s++)i=`${t[t.length-1-s]},`+i;e.push(i)}return e}getOutOfBoundsCondition(t){if(this.rank===1)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let e="";for(let o=this.rank-2;o<this.rank;o++)e+=`${t[o]} >= ${this.enableShapeUniforms?`outShape[${o}]`:this.outputShape[o]}`,o<this.rank-1&&(e+="||");return e}getSetup(t){if(this.rank===1)return"";let e=t.slice(-2),o=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],n=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${e[0]};
      int c = ${e[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${o};
      bool rEdge = rp1 >= ${n};
    `}getOutput(t){let e=this.getSourceCoordsArr(t);return this.rank===1?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${e[0]}),
            cEdge ? 0. : getA(${e[1]}),
            rEdge ? 0. : getA(${e[2]}),
            rEdge || cEdge ? 0. : getA(${e[3]})`}};var qc=class{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=t,this.enableShapeUniforms=at(this.outputShape.length);let o="";for(let n=0;n<4;n++){let i="thisRC = rc;";n%2===1&&(i+="thisRC.z += 1;"),n>1&&(i+="thisRC.y += 1;"),o+=`
        ${i}
        ${n>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${n}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${n>0?"}":""}
      `}this.userCode=`
      ${QQ(e,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?Vc():Bc(t)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":t[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":t[2]};

        ${o}

        setOutput(result);
      }
    `}};function QQ(r,t){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${t?LP(["r","c","d"],"inputShape"):Qo(["r","c","d"],r)}
      return ivec3(r, c, d);
    }
  `}var mx=class{constructor(t){this.gpgpu=t,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(t,e,o){let n=tA(e,o),i=rA(t,n,o);i in this.freeTextures||(this.freeTextures[i]=[]),i in this.usedTextures||(this.usedTextures[i]=[]);let s=eA(t,n,this.gpgpu.gl,this.gpgpu.textureConfig,o);if(this.freeTextures[i].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=s,this.log();let l=this.freeTextures[i].pop();return this.usedTextures[i].push(l),l}let a;return n===lr.PACKED_2X2_FLOAT32?a=this.gpgpu.createPackedMatrixTexture(t[0],t[1]):n===lr.PACKED_2X2_FLOAT16?a=this.gpgpu.createFloat16PackedMatrixTexture(t[0],t[1]):n===lr.UNPACKED_FLOAT32?a=this.gpgpu.createFloat32MatrixTexture(t[0],t[1]):n===lr.UNPACKED_FLOAT16?a=this.gpgpu.createFloat16MatrixTexture(t[0],t[1]):n===lr.PACKED_4X1_UNSIGNED_BYTE&&(a=this.gpgpu.createUnsignedBytesMatrixTexture(t[0],t[1])),this.usedTextures[i].push(a),this.numUsedTextures++,this._numBytesAllocated+=s,this.log(),a}releaseTexture(t,e,o,n){if(this.freeTextures==null)return;let i=tA(o,n),s=rA(e,i,n);s in this.freeTextures||(this.freeTextures[s]=[]);let a=eA(e,i,this.gpgpu.gl,this.gpgpu.textureConfig,n),l=G().getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");l!==-1&&this._numBytesAllocated>l?(this.gpgpu.deleteMatrixTexture(t.texture),this._numBytesAllocated-=a):(this.freeTextures[s].push(t),this.numFreeTextures++,this._numBytesFree+=a),this.numUsedTextures--;let u=this.usedTextures[s],c=u&&u.indexOf(t);if(c==null||c<0)throw new Error("Cannot release a texture that was never provided by this texture manager");u[c]=u[u.length-1],u.pop(),this.log()}log(){if(!this.logEnabled)return;let t=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${t})`);let e=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*e)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(let t in this.freeTextures)this.freeTextures[t].forEach(e=>{this.gpgpu.deleteMatrixTexture(e.texture)});for(let t in this.usedTextures)this.usedTextures[t].forEach(e=>{this.gpgpu.deleteMatrixTexture(e.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}};function ZQ(r,t){let e=r;if(t===e.R32F)return 4;if(t===e.R16F)return 2;if(t===e.RGBA32F)return 16;if(t===r.RGBA)return 16;if(t===e.RGBA16F)return 8;if(t===e.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}function eA(r,t,e,o,n){let i=JQ(t,o),s;if(n){let[l,u]=Nn(r[0],r[1]);s=l*u}else{let[l,u]=da(r[0],r[1]);s=l*u}let a=ZQ(e,i);return s*a}function JQ(r,t){switch(r){case lr.PACKED_2X2_FLOAT32:return Jb(t);case lr.PACKED_2X2_FLOAT16:return e1(t);case lr.UNPACKED_FLOAT32:return Yb(t);case lr.UNPACKED_FLOAT16:return Qb(t);case lr.PACKED_4X1_UNSIGNED_BYTE:return Zb(t);default:throw new Error(`Unknown physical texture type ${r}`)}}function eZ(r){return G().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?r?lr.PACKED_2X2_FLOAT32:lr.UNPACKED_FLOAT32:r?lr.PACKED_2X2_FLOAT16:lr.UNPACKED_FLOAT16}function tA(r,t){if(r===yr.UPLOAD)return lr.PACKED_2X2_FLOAT32;if(r===yr.RENDER||r==null)return eZ(t);if(r===yr.DOWNLOAD||r===yr.PIXELS)return lr.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${r}`)}function rA(r,t,e){return`${r[0]}_${r[1]}_${t}_${e}`}var tr=class{constructor(t,e){this.variableNames=["A"],this.outputShape=t,this.enableShapeUniforms=at(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${e}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}},Ut="if (isnan(x)) return x;",oA="return x;",r1="return abs(x);";var nA="return (x >= 0.0) ? x : (exp(x) - 1.0);",iA=Ut+`
  return (x < 0.0) ? 0.0 : x;
`,sA=Ut+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,Pn="return x;",aA="return 1.0 / (1.0 + exp(-1.0 * x));";var uA="return x;",cA=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,pA=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,dA=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,mA="return 1.0 / (1.0 + exp(-1.0 * x));",Mr=class{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.enableShapeUniforms=at(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${e}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}};var fx=class{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=t,this.enableShapeUniforms=at(this.outputShape.length);let e=t.length,o=At("rc",e),n=Me(e),i=J$(e,o),s=o.slice(-2),a=e<=1?"rc":`vec2(${s.join(",")})`;this.userCode=`
      void main() {
        ${n} rc = getOutputCoords();
        vec4 packedInput = getA(${i});

        setOutput(getChannel(packedInput, ${a}));
      }
    `}};var rZ=io.whereImpl,oZ=1e-7,nZ=1e-4,hx={};function iZ(r){return r in hx||(hx[r]={}),hx[r]}var sZ=G().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),aZ=600;function lZ(){return G().global.screen==null?1024:G().global.screen.height*G().global.screen.width*window.devicePixelRatio*aZ/1024/1024}var fA=(()=>{class r extends Fn{nextDataId(){return r.nextDataId++}constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!G().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let o;if(e!=null){if(e instanceof Kc)o=e;else{let n=mo(G().getNumber("WEBGL_VERSION"),e);o=new Kc(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{let n=mo(G().getNumber("WEBGL_VERSION"));o=new Kc(n),this.binaryCache=iZ(G().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=o,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new mx(this.gpgpu),this.numMBBeforeWarning=lZ(),this.texData=new vs(this,fr())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,o,n,i,s,a){let l=this.makeTensorInfo(o,n),u=this.texData.get(l.dataId);u.isPacked=!1,u.texture={texture:e,texShape:[i,s]},u.texShape=[i,s];let c=ld(o),p=new ud(c,!1,a),d=this.runWebGLProgram(p,[l],n,[[i,s]]);return d.shape=o,u.texture=null,this.disposeIntermediateTensorInfo(l),d.dataId}write(e,o,n){if((G().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||G().getBool("DEBUG"))&&this.checkNumericalProblems(e),n==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let i={id:this.nextDataId()};return this.texData.set(i,{shape:o,dtype:n,values:e,usage:yr.UPLOAD,refCount:1}),i}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){let o=this.texData.get(e);o.refCount++}decRef(e){if(this.texData.has(e)){let o=this.texData.get(e);o.refCount--}}move(e,o,n,i,s){if(G().getBool("DEBUG")&&this.checkNumericalProblems(o),i==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:i,values:o,usage:yr.UPLOAD,refCount:s})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){let o=this.texData.get(e),{values:n,dtype:i,complexTensorInfos:s,slice:a,shape:l,isPacked:u}=o;if(a!=null){let m;u?m=new Mr(l,Pn):m=new tr(l,Pn);let f=this.runWebGLProgram(m,[{dataId:e,shape:l,dtype:i}],i),g=this.readSync(f.dataId);return this.disposeIntermediateTensorInfo(f),g}if(n!=null)return this.convertAndCacheOnCPU(e);if(i==="string")return n;let c=this.activeTimers!=null,p;c&&(p=S.now());let d;if(i==="complex64"){let m=this.readSync(s.real.dataId),f=this.readSync(s.imag.dataId);d=P.mergeRealAndImagArrays(m,f)}else d=this.getValuesFromTexture(e);return c&&(this.downloadWaitMs+=S.now()-p),this.convertAndCacheOnCPU(e,d)}read(e){return j(this,null,function*(){if(this.pendingRead.has(e)){let g=this.pendingRead.get(e);return new Promise(x=>g.push(x))}let o=this.texData.get(e),{values:n,shape:i,slice:s,dtype:a,complexTensorInfos:l,isPacked:u}=o;if(s!=null){let g;u?g=new Mr(i,Pn):g=new tr(i,Pn);let x=this.runWebGLProgram(g,[{dataId:e,shape:i,dtype:a}],a),y=this.read(x.dataId);return this.disposeIntermediateTensorInfo(x),y}if(n!=null)return this.convertAndCacheOnCPU(e);if(G().getBool("DEBUG")&&!G().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&G().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let c=null,p;if(a!=="complex64"&&G().get("WEBGL_BUFFER_SUPPORTED")){p=this.decode(e);let g=this.texData.get(p.dataId);c=this.gpgpu.createBufferFromTexture(g.texture.texture,...nd(i))}this.pendingRead.set(e,[]),a!=="complex64"&&(yield this.gpgpu.createAndWaitForFence());let d;if(a==="complex64"){let g=yield Promise.all([this.read(l.real.dataId),this.read(l.imag.dataId)]),x=g[0],y=g[1];d=P.mergeRealAndImagArrays(x,y)}else if(c==null)d=this.getValuesFromTexture(e);else{let g=S.sizeFromShape(i);d=this.gpgpu.downloadFloat32MatrixFromBuffer(c,g)}if(p!=null&&this.disposeIntermediateTensorInfo(p),c!=null){let g=this.gpgpu.gl;Se(g,()=>g.deleteBuffer(c))}let m=this.convertAndCacheOnCPU(e,d),f=this.pendingRead.get(e);return this.pendingRead.delete(e),f.forEach(g=>g(m)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&fr().removeDataId(e,this),this.pendingDeletes--),m})}readToGPU(e,o={}){let n=this.texData.get(e),{values:i,shape:s,slice:a,dtype:l,isPacked:u,texture:c}=n;if(l==="complex64")throw new Error("Does not support reading texture for complex64 dtype.");if(a!=null){let f;u?f=new Mr(s,Pn):f=new tr(s,Pn);let g=this.runWebGLProgram(f,[{dataId:e,shape:s,dtype:l}],l),x=this.readToGPU(g,o);return this.disposeIntermediateTensorInfo(g),x}if(c==null)throw i!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");let p=this.decode(e,o.customTexShape),d=fr().makeTensorFromTensorInfo(p),m=this.texData.get(p.dataId);return Object.assign({tensorRef:d},m.texture)}bufferSync(e){let o=this.readSync(e.dataId);if(e.dtype==="string")try{let n=o.map(i=>S.decodeString(i));return Le(e.shape,e.dtype,n)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Le(e.shape,e.dtype,o)}checkNumericalProblems(e){if(e!=null)for(let o=0;o<e.length;o++){let n=e[o];if(!xP(n))throw G().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${n} cannot be represented on this device.`)}}getValuesFromTexture(e){let{shape:o,dtype:n,isPacked:i}=this.texData.get(e),s=S.sizeFromShape(o);if(G().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){let m=this.decode(e),f=this.texData.get(m.dataId),g=this.gpgpu.downloadMatrixFromPackedTexture(f.texture.texture,...nd(o)).subarray(0,s);return this.disposeIntermediateTensorInfo(m),g}let a=G().getBool("WEBGL_PACK")&&i===!0,l=a?ld(o):o,u=a?new ax(l):new sx(l),c=this.runWebGLProgram(u,[{shape:l,dtype:n,dataId:e}],"float32"),p=this.texData.get(c.dataId),d=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(p.texture.texture,p.texShape[0],p.texShape[1]).subarray(0,s);return this.disposeIntermediateTensorInfo(c),d}timerAvailable(){return G().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){let o=this.activeTimers,n=[],i=!1;this.programTimersStack==null?(this.programTimersStack=n,i=!0):this.activeTimers.push(n),this.activeTimers=n,e();let s=S.flatten(this.activeTimers.map(u=>u.query)).filter(u=>u!=null),a=S.flatten(this.activeTimers.map(u=>u.name)).filter(u=>u!=null);this.activeTimers=o,i&&(this.programTimersStack=null);let l={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return j(this,null,function*(){if(G().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){let u=yield Promise.all(s);l.kernelMs=S.sum(u),l.getExtraProfileInfo=()=>u.map((c,p)=>({name:a[p],ms:c})).map(c=>`${c.name}: ${c.ms}`).join(", ")}else l.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,l})}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return G().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:S.now(),endMs:null}}endTimer(e){return G().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=S.now(),e)}getQueryTime(e){return j(this,null,function*(){if(G().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);let o=e;return o.endMs-o.startMs})}disposeData(e,o=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(o?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!o&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);let{complexTensorInfos:n}=this.texData.get(e);return n!=null&&(this.disposeData(n.real.dataId,o),this.disposeData(n.imag.dataId,o)),this.texData.delete(e),!0}releaseGPUData(e){let{texture:o,dtype:n,texShape:i,usage:s,isPacked:a,slice:l}=this.texData.get(e),u=l&&l.origDataId||e,c=this.dataRefCount.get(u);c>1?this.dataRefCount.set(u,c-1):(this.dataRefCount.delete(u),o!=null&&(this.numBytesInGPU-=this.computeBytes(i,n),this.textureManager.releaseTexture(o,i,s,a)));let p=this.texData.get(e);p.texture=null,p.texShape=null,p.isPacked=!1,p.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,o=sZ){return G().getBool("WEBGL_CPU_FORWARD")&&e.every(n=>this.texData.get(n.dataId).texture==null&&S.sizeFromShape(n.shape)<o)}getGPGPUContext(){return this.gpgpu}where(e){P.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");let o=e.dataSync();return rZ(e.shape,o)}packedUnaryOp(e,o,n){let i=new Mr(e.shape,o),s=this.compileAndRun(i,[e],n);return fr().makeTensorFromTensorInfo(s)}abs(e){if(this.shouldExecuteOnCPU([e])&&e.dtype!=="complex64"){let i=cx(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,i)}if(G().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,r1,e.dtype);let o=new tr(e.shape,r1),n=this.compileAndRun(o,[e]);return fr().makeTensorFromTensorInfo(n)}makeTensorInfo(e,o,n){let i;if(o==="string"&&n!=null&&n.length>0&&S.isString(n[0])){let s=n.map(a=>S.encodeString(a));i=this.write(s,e,o)}else i=this.write(n,e,o);return this.texData.get(i).usage=null,{dataId:i,shape:e,dtype:o}}makeOutput(e,o,n){return fr().makeTensorFromTensorInfo(this.makeTensorInfo(e,o,n),this)}unpackTensor(e){let o=new fx(e.shape);return this.runWebGLProgram(o,[e],e.dtype)}packTensor(e){let o=new dx(e.shape);return this.runWebGLProgram(o,[e],e.dtype,null,!0)}packedReshape(e,o){let n=[as(e.shape),...ls(e.shape)],i={dtype:e.dtype,shape:n,dataId:e.dataId},s=[as(o),...ls(o)],a=new qc(s,n),l=!0,u=[n],c=this.runWebGLProgram(a,[i],e.dtype,u,l);return{dataId:c.dataId,shape:o,dtype:c.dtype}}decode(e,o){let n=this.texData.get(e),{isPacked:i,shape:s,dtype:a}=n;if(o!=null){let m=S.sizeFromShape(s),f=o[0]*o[1]*4;S.assert(m<=f,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}let l=ld(s),u;i?u=new ix(l):u=new nx(l);let c=!0,p=[o??nd(l)],d=this.runWebGLProgram(u,[{shape:l,dtype:a,dataId:e}],a,p,c,o);return{dtype:a,shape:s,dataId:d.dataId}}runWebGLProgram(e,o,n,i,s=!1,a){let l=this.makeTensorInfo(e.outputShape,n),u=this.texData.get(l.dataId);if(e.packedOutput&&(u.isPacked=!0),e.outPackingScheme===pa.DENSE){let b=a??nd(e.outputShape);u.texShape=b.map(I=>I*2)}if(e.outTexUsage!=null&&(u.usage=e.outTexUsage),S.sizeFromShape(l.shape)===0)return u.values=S.getTypedArrayFromDType(l.dtype,0),l;let c=[],p=o.map(b=>{if(b.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let I=this.texData.get(b.dataId);if(I.texture==null){if(!e.packedInputs&&S.sizeFromShape(b.shape)<=G().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:b.shape,texData:null,isUniform:!0,uniformValues:I.values};e.packedInputs&&(I.isPacked=!0,I.shape=b.shape)}if(this.uploadToGPU(b.dataId),!!I.isPacked!=!!e.packedInputs)b=I.isPacked?this.unpackTensor(b):this.packTensor(b),c.push(b),I=this.texData.get(b.dataId);else if(I.isPacked&&!ma(I.shape,b.shape)){let N=b,M=b.shape;b.shape=I.shape,b=this.packedReshape(b,M),c.push(b),I=this.texData.get(b.dataId),N.shape=M}return{shape:b.shape,texData:I,isUniform:!1}});this.uploadToGPU(l.dataId);let d={shape:l.shape,texData:u,isUniform:!1},m=HP(e,p,d),f=this.getAndSaveBinary(m,()=>zP(this.gpgpu,e,p,d)),g=this.activeTimers!=null,x;g&&(x=this.startTimer()),G().get("ENGINE_COMPILE_ONLY")||GP(this.gpgpu,f,p,d,i),c.forEach(b=>this.disposeIntermediateTensorInfo(b)),g&&(x=this.endTimer(x),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(x)}));let y=G().getNumber("WEBGL_FLUSH_THRESHOLD");if(y>0){let b=S.now();b-this.lastGlFlushTime>y&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=b)}if(!G().getBool("WEBGL_LAZILY_UNPACK")&&u.isPacked&&s===!1){let b=this.unpackTensor(l);return this.disposeIntermediateTensorInfo(l),b}return l}compileAndRun(e,o,n,i,s=!1){return n=n||o[0].dtype,this.runWebGLProgram(e,o,n,i,s)}getAndSaveBinary(e,o){return e in this.binaryCache||(this.binaryCache[e]=o()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(G().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(o=>{this.gpgpu.deleteProgram(this.binaryCache[o].webGLProgram),delete this.binaryCache[o]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement<"u"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=Ee(()=>{if(!G().get("WEBGL_RENDER_FLOAT32_ENABLED")){let e=G().getBool("DEBUG");G().set("DEBUG",!1);let o=this.abs(Ne(1e-8)).dataSync()[0];if(G().set("DEBUG",e),o>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?oZ:nZ}uploadToGPU(e){let o=this.texData.get(e),{shape:n,dtype:i,values:s,texture:a,usage:l,isPacked:u}=o;if(a!=null)return;let c=this.activeTimers!=null,p;c&&(p=S.now());let d=o.texShape;if(d==null&&(d=RP(n,u),o.texShape=d),s!=null){let m=ld(n),f,g=d[1],x=d[0],y=s instanceof Uint8Array||s instanceof Uint8ClampedArray;(u||!y)&&([g,x]=Nn(d[0],d[1])),u?f=new lx(m,y):f=new ud(m,y);let b=y?[x,g]:d,I=this.makeTensorInfo(b,i),N=this.texData.get(I.dataId);y?N.usage=yr.PIXELS:N.usage=yr.UPLOAD,N.texShape=b,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(I.dataId),g,x,s);let M=[[x,g]],W=this.runWebGLProgram(f,[I],i,M,!0),H=this.texData.get(W.dataId);o.texShape=H.texShape,o.isPacked=H.isPacked,o.usage=H.usage,G().get("ENGINE_COMPILE_ONLY")?this.disposeData(W.dataId):(o.texture=H.texture,o.values=null,this.texData.delete(W.dataId)),this.disposeIntermediateTensorInfo(I),c&&(this.uploadWaitMs+=S.now()-p)}else{let m=this.acquireTexture(d,l,i,u);o.texture=m}}convertAndCacheOnCPU(e,o){let n=this.texData.get(e),{dtype:i}=n;return o!=null&&(n.values=uZ(o,i)),n.values}acquireTexture(e,o,n,i){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){let s=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${s} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,o,i)}computeBytes(e,o){return e[0]*e[1]*S.bytesPerElement(o)}checkCompileCompletion(){for(let[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}checkCompileCompletionAsync(){return j(this,null,function*(){let e=[];if(this.gpgpu.parallelCompilationExtension){for(let[,o]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(o));return Promise.all(e)}else{for(let[,o]of Object.entries(this.binaryCache)){let n=new Promise(i=>{try{this.checkCompletion_(o),i(!0)}catch(s){throw s}});e.push(n)}return Promise.all(e)}})}checkCompletionAsync_(e){return j(this,null,function*(){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(yield hv(),this.checkCompletionAsync_(e))})}checkCompletion_(e){if(this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)===!1)throw console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)===!1?(Hb(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(let e of Object.values(this.binaryCache)){this.gpgpu.buildVao(e.webGLProgram);let{variablesLocations:o,customUniformLocations:n,infLoc:i,nanLoc:s,outShapeLocation:a,outShapeStridesLocation:l,outTexShapeLocation:u}=Xb(this.gpgpu,e.program,e.webGLProgram);e.variablesLocations=o,e.customUniformLocations=n,e.infLoc=i,e.nanLoc=s,e.outShapeLocation=a,e.outShapeStridesLocation=l,e.outTexShapeLocation=u}}createTensorFromGPUData(e,o,n){e.channels=e.channels||"RGBA";let{texture:i,height:s,width:a,channels:l}=e,u=fr().backend;if(!u.gpgpu.gl.isTexture(i))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");let c=u.writeTexture(i,o,n,s,a,l);return fr().makeTensorFromDataId(c,o,n,u)}}return r.nextDataId=0,r})();function uZ(r,t){if(t==="float32"||t==="complex64")return r;if(t==="int32"||t==="bool"){let e=t==="int32"?new Int32Array(r.length):new Uint8Array(r.length);for(let o=0;o<e.length;++o)e[o]=Math.round(r[o]);return e}else throw new Error(`Unknown dtype ${t}`)}Wi.isBrowser()&&Wm("webgl",()=>new fA,2);var jc=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`;var Br=class{constructor(t,e,o){this.variableNames=["A","B"],this.outputShape=P.assertAndGetBroadcastShape(e,o),this.enableShapeUniforms=at(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${t}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}};var ho=`
  result.r = isNaN.r ? NAN : result.r;
  result.g = isNaN.g ? NAN : result.g;
  result.b = isNaN.b ? NAN : result.b;
  result.a = isNaN.a ? NAN : result.a;
`;var fo=class{constructor(t,e,o,n=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=P.assertAndGetBroadcastShape(e,o);let i=this.outputShape.length;this.enableShapeUniforms=at(i);let s="";if(n)if(i===0||S.sizeFromShape(this.outputShape)===1)s=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(s=`
          ${Me(i)} coords = getOutputCoords();
        `,i===1)this.enableShapeUniforms?s+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:s+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{let l=At("coords",i);this.enableShapeUniforms?s+=`
            bool nextRowOutOfBounds =
              (${l[i-2]} + 1) >= outShape[${i} - 2];
            bool nextColOutOfBounds =
              (${l[i-1]} + 1) >= outShape[${i} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:s+=`
            bool nextRowOutOfBounds =
              (${l[i-2]} + 1) >= ${this.outputShape[i-2]};
            bool nextColOutOfBounds =
              (${l[i-1]} + 1) >= ${this.outputShape[i-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${t}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${s}

        setOutput(result);
      }
    `}};function Dt(r){let{inputs:t,backend:e}=r,{x:o}=t;return e.incRef(o.dataId),{dataId:o.dataId,shape:o.shape,dtype:o.dtype}}var hA={kernelName:Mn,backendName:"webgl",kernelFunc:Dt};function Vr(r){let{inputs:t,backend:e}=r,{real:o,imag:n}=t,i=e.makeTensorInfo(o.shape,"complex64"),s=e.texData.get(i.dataId),a=Dt({inputs:{x:o},backend:e}),l=Dt({inputs:{x:n},backend:e});return s.complexTensorInfos={real:a,imag:l},i}var gA={kernelName:Cs,backendName:"webgl",kernelFunc:Vr};var o1="return (a < 0.) ? b * a : a;",n1=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function cZ(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{alpha:i}=o,s=e.makeTensorInfo([],"float32",S.createScalarValue(i,"float32")),a=G().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new fo(n1,n.shape,s.shape):new Br(o1,n.shape,s.shape),l=e.runWebGLProgram(a,[n,s],"float32");return e.disposeIntermediateTensorInfo(s),l}var xA={kernelName:Ql,backendName:"webgl",kernelFunc:cZ};var i1="return (a < 0.) ? b * a : a;",s1=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function pZ(r){let{inputs:t,backend:e}=r,{x:o,alpha:n}=t,i=G().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new fo(s1,o.shape,n.shape):new Br(i1,o.shape,n.shape);return e.runWebGLProgram(i,[o,n],"float32")}var yA={kernelName:bu,backendName:"webgl",kernelFunc:pZ};var Bo="if (isnan(x)) return x;";function Ie({opSnippet:r,packedOpSnippet:t,cpuKernelImpl:e,dtype:o}){return({inputs:n,backend:i})=>{let{x:s}=n,a=i,l=o||s.dtype;if(a.shouldExecuteOnCPU([s])&&e!=null){let p=a.texData.get(s.dataId),d=e(p.values,l);return a.makeTensorInfo(s.shape,l,d)}let u=G().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&t!=null,c;return u?c=new Mr(s.shape,t):c=new tr(s.shape,r),a.runWebGLProgram(c,[s],l)}}function nt({opSnippet:r,packedOpSnippet:t,checkOutOfBounds:e=!1,supportsComplex:o=!1,cpuKernelImpl:n,dtype:i}){return({inputs:s,backend:a})=>{let{a:l,b:u}=s,c=a;if(o&&l.dtype==="complex64"){let f=c.texData.get(l.dataId),g=c.texData.get(u.dataId),[x,y]=[[f.complexTensorInfos.real,g.complexTensorInfos.real],[f.complexTensorInfos.imag,g.complexTensorInfos.imag]].map(I=>{let[N,M]=I,B={dataId:N.dataId,dtype:N.dtype,shape:l.shape},W={dataId:M.dataId,dtype:M.dtype,shape:u.shape},H=new Br(r,l.shape,u.shape);return c.runWebGLProgram(H,[B,W],Et(N.dtype,M.dtype))}),b=Vr({inputs:{real:x,imag:y},backend:c});return c.disposeIntermediateTensorInfo(x),c.disposeIntermediateTensorInfo(y),b}let p=i||Et(l.dtype,u.dtype);if((l.dtype==="string"||u.dtype==="string"||c.shouldExecuteOnCPU([l,u]))&&n!=null){let f=c.texData.get(l.dataId).values,g=c.texData.get(u.dataId).values,x=l.dtype==="string"?P.fromUint8ToStringArray(f):f,y=l.dtype==="string"?P.fromUint8ToStringArray(g):g,[b,I]=n(l.shape,u.shape,x,y,p),N=c.makeTensorInfo(I,p),M=c.texData.get(N.dataId);return M.values=b,N}let d=G().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&t!=null,m;return d?m=new fo(t,l.shape,u.shape,e):m=new Br(r,l.shape,u.shape),c.runWebGLProgram(m,[l,u],p)}}function ri(r,t=!1){if(r==="linear")return t?uA:oA;if(r==="relu")return t?pA:iA;if(r==="elu")return t?cA:nA;if(r==="relu6")return t?dA:sA;if(r==="prelu")return t?s1:i1;if(r==="leakyrelu")return t?n1:o1;if(r==="sigmoid")return t?mA:aA;throw new Error(`Activation ${r} has not been implemented for the WebGL backend.`)}var Xc=class{constructor(t,e,o,n=!1,i=!1,s=!1,a=null,l=!1,u=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=o,this.enableShapeUniforms=at(this.outputShape.length);let c=n?t[1]:t[2],p=Math.ceil(c/2),d=n?"i * 2, rc.y":"rc.y, i * 2",m=i?"rc.z, i * 2":"i * 2, rc.z",f=n?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],g=i?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"],x="",y="";a&&(l?x=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${a}
        }`:u?x=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${a}
        }`:x=`vec4 activation(vec4 x) {
          ${a}
        }`,y="result = activation(result);");let b=s?"result += getBiasAtOutCoords();":"";s&&this.variableNames.push("bias"),l&&this.variableNames.push("preluActivationWeights"),u&&this.variableNames.push("leakyreluAlpha");let I="rc.x",N="rc.x";t[0]<e[0]?I=`imod(rc.x, ${t[0]})`:e[0]<t[0]&&(N=`imod(rc.x, ${e[0]})`),this.userCode=`
      ${x}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${p}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        int batchA = ${I};
        int batchB = ${N};
        for (int i = 0; i < ${p}; i++) {
          vec4 a = getMatrixA(batchA, ${d});
          vec4 b = getMatrixB(batchB, ${m});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${f[0]} * ${g[0]});
          result += (${f[1]} * ${g[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${b}

        ${y}

        setOutput(result);
      }
    `}};var a1={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"},pd=class{constructor(t,e,o){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=P.assertAndGetBroadcastShape(e,o),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${t}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}};var vA="return a * b;";function dd(r){let{inputs:t,backend:e}=r,{a:o,b:n}=t,i=P.upcastType(o.dtype,n.dtype);if(o.dtype==="complex64"){let a=e.texData.get(o.dataId),l=e.texData.get(n.dataId),u=new pd(a1.REAL,o.shape,n.shape),c=new pd(a1.IMAG,o.shape,n.shape),p=[{dataId:a.complexTensorInfos.real.dataId,dtype:a.complexTensorInfos.real.dtype,shape:o.shape},{dataId:a.complexTensorInfos.imag.dataId,dtype:a.complexTensorInfos.imag.dtype,shape:o.shape},{dataId:l.complexTensorInfos.real.dataId,dtype:l.complexTensorInfos.real.dtype,shape:n.shape},{dataId:l.complexTensorInfos.imag.dataId,dtype:l.complexTensorInfos.imag.dtype,shape:n.shape}],d=e.runWebGLProgram(u,p,"float32"),m=e.runWebGLProgram(c,p,"float32"),f=Vr({inputs:{real:d,imag:m},backend:e});return e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(m),f}if(e.shouldExecuteOnCPU([o,n])){let a=e.texData.get(o.dataId),l=e.texData.get(n.dataId),[u,c]=N$(o.shape,n.shape,a.values,l.values,i),p=e.makeTensorInfo(c,i),d=e.texData.get(p.dataId);return d.values=u,p}let s;return G().getBool("WEBGL_PACK_BINARY_OPERATIONS")?s=new fo(vA,o.shape,n.shape):s=new Br(vA,o.shape,n.shape),e.runWebGLProgram(s,[o,n],i)}var bA={kernelName:Ri,backendName:"webgl",kernelFunc:dd};function SA(r,t,e){let o=[as(r.shape),...ls(r.shape)],n={dtype:r.dtype,shape:o,dataId:r.dataId},i=[as(t),...ls(t)],s=new qc(i,o),a=!0,l=[o],u=e.runWebGLProgram(s,[n],r.dtype,l,a);return{dataId:u.dataId,shape:t,dtype:u.dtype}}function ue(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{shape:i}=o,s=e,a=S.sizeFromShape(n.shape),l=S.inferFromImplicitShape(i,a),u=S.sizeFromShape(l);S.assert(a===u,()=>`The new shape (${l}) has ${u} elements and the old shape (${n.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`);let c=s.texData.get(n.dataId);return c.isPacked&&!ma(n.shape,l)&&!(c.texture!==null&&ma(c.shape,l))?SA(n,l,s):(s.incRef(n.dataId),{dataId:n.dataId,shape:l,dtype:n.dtype})}var wA={kernelName:Cu,backendName:"webgl",kernelFunc:ue};var md=class{constructor(t,e){this.variableNames=["x"];let{windowSize:o,batchSize:n,inSize:i,outSize:s}=t;this.outputShape=[n,s];let a=Math.floor(o/4)*4,l=o%4,u="sumValue += dot(values, ones);";if(e!=null){let p=1/e;u=`sumValue += dot(values * ${S.isInt(p)?p.toPrecision(2):p}, ones);`}let c="";i%o>0&&(c=`
        if (inIdx < 0 || inIdx >= ${i}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${c}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${o};

        float sumValue = 0.0;

        for (int i = 0; i < ${a}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${u}
        }

        int inIdx = inOffset + ${a};
        if (${l===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${u}
        } else if (${l===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${u}
        } else if (${l===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${u}
        }
        setOutput(sumValue);
      }
    `}};var gx=class{constructor(t,e){this.variableNames=["x"];let{windowSize:o,batchSize:n,inSize:i,outSize:s}=t;this.outputShape=[n,s];let a="0.0",l="";e==="prod"?a="1.0":e==="min"?(a="1.0 / 1e-20",l="min"):e==="max"&&(a="-1.0 / 1e-20",l="max");let u=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;e==="sum"?u="sumValue":e==="prod"?u="prodValue":e==="all"?u="allValue":e==="any"&&(u="anyValue");let c=Math.floor(o/4)*4,p=o%4,d=`
      if (${e==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${e==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${l}(values, minMaxValue);
        if (${e==="min"} || ${e==="max"}) {
          minMaxValue = ${l}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,m="vec4";e==="all"?(a="1.0",d=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,m="bvec4"):e==="any"&&(a="0.0",d=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,m="bvec4");let f="";i%o>0&&(f=`
        if (inIdx < 0 || inIdx >= ${i}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${a};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${f}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${o};

        vec4 minMaxValue = vec4(${a});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${c}; i += 4) {
          int inIdx = inOffset + i;
          ${m} values = ${m}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${d}
        }

        int inIdx = inOffset + ${c};
        if (${p===1}) {
          ${m} values = ${m}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${d}
        } else if (${p===2}) {
          ${m} values = ${m}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${d}
        } else if (${p===3}) {
          ${m} values = ${m}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${d}
        }
        setOutput(${u});
      }
    `}};function mZ(r){let t=[];for(;t.length===0||t[t.length-1].outSize!==1;){let e=t.length?t[t.length-1].outSize:r[1],o=P.computeOptimalWindowSize(e);t.push({inSize:e,windowSize:o,outSize:Math.ceil(e/o)})}return t}function go(r,t,e,o){let n=mZ(r.shape),i=r;for(let s=0;s<n.length;s++){let{inSize:a,windowSize:l,outSize:u}=n[s],c,p;e==="mean"?c=s===0?new md({windowSize:l,inSize:a,batchSize:r.shape[0],outSize:u},a):new md({windowSize:l,inSize:a,batchSize:r.shape[0],outSize:u}):c=new gx({windowSize:l,inSize:a,batchSize:r.shape[0],outSize:u},e),p=i,i=o.runWebGLProgram(c,[i],t),p.dataId!==r.dataId&&o.disposeIntermediateTensorInfo(p)}return i}var xx=class{constructor(t,e){this.variableNames=["A"];let o=new Array(t.length);for(let s=0;s<o.length;s++)o[s]=t[e[s]];this.outputShape=o,this.rank=o.length;let n=Me(this.rank),i=fZ(e);this.userCode=`
    void main() {
      ${n} resRC = getOutputCoords();
      setOutput(getA(${i}));
    }
    `}};function fZ(r){let t=r.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);let e=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],o=new Array(t);for(let n=0;n<r.length;n++)o[r[n]]=e[n];return o.join()}var yx=class{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;let o=new Array(t.length);for(let c=0;c<o.length;c++)o[c]=t[e[c]];if(this.outputShape=o,this.rank=o.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);let n=Me(this.rank),i=t1("rc",this.rank),s=new Array(this.rank);for(let c=0;c<e.length;c++)s[e[c]]=i[c];let a=`vec2(${s.slice(-2).join()})`,l=`++${i[this.rank-1]} < ${o[this.rank-1]}`,u=`getChannel(getA(${s.join()}), ${a})`;this.userCode=`
    void main() {
      ${n} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${u};
      if(${l}) {
        result[1] = ${u};
      }
      --${i[this.rank-1]};
      if(++${i[this.rank-2]} < ${o[this.rank-2]}) {
        result[2] = ${u};
        if(${l}) {
          result[3] = ${u};
        }
      }
      setOutput(result);
    }
    `}};function us(r,t,e){let o=G().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new yx(r.shape,t):new xx(r.shape,t);return e.runWebGLProgram(o,[r],r.dtype)}function _A(r,t,e,o){let n=t,i=r.shape.length,s=S.parseAxisParam(n,r.shape),a=s,l=P.getAxesPermutation(a,i),u=l!=null,c=r;u&&(c=us(r,l,o),a=P.getInnerMostAxes(a.length,i)),P.assertAxesAreInnerMostDims("sum",a,i);let[p,d]=P.computeOutAndReduceShapes(c.shape,a),m=p;e&&(m=P.expandShapeToKeepDim(p,s));let f=S.sizeFromShape(d),x=S.sizeFromShape(r.shape)/f,y=ue({inputs:{x:c},attrs:{shape:[x,f]},backend:o}),b=Wn(r.dtype),I=go(y,b,"sum",o),N=ue({inputs:{x:I},attrs:{shape:m},backend:o});return o.disposeIntermediateTensorInfo(y),o.disposeIntermediateTensorInfo(I),u&&o.disposeIntermediateTensorInfo(c),N}function xa(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{axis:i,keepDims:s}=o;return _A(n,i,s,e)}var CA={kernelName:Bu,backendName:"webgl",kernelFunc:xa};function vt(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{perm:i}=o,s=e,a=n.shape.length,l=new Array(a);for(let c=0;c<l.length;c++)l[c]=n.shape[i[c]];let u;if(s.shouldExecuteOnCPU([n])){let p=s.texData.get(n.dataId).values,d=ga(p,n.shape,n.dtype,i,l);u=s.makeTensorInfo(l,n.dtype);let m=s.texData.get(u.dataId);m.values=d}else u=us(n,i,s);return u}var kA={kernelName:Mi,backendName:"webgl",kernelFunc:vt};var l1=1e3;function ya({a:r,b:t,transposeA:e,transposeB:o,backend:n,bias:i=null,preluActivationWeights:s=null,leakyreluAlpha:a=0,activation:l=null}){let u=r.shape.length,c=t.shape.length,p=e?r.shape[u-2]:r.shape[u-1],d=o?t.shape[c-1]:t.shape[c-2],m=e?r.shape[u-1]:r.shape[u-2],f=o?t.shape[c-2]:t.shape[c-1],g=r.shape.slice(0,-2),x=t.shape.slice(0,-2),y=S.sizeFromShape(g),b=S.sizeFromShape(x),N=_n.assertAndGetBroadcastShape(r.shape.slice(0,-2),t.shape.slice(0,-2)).concat([m,f]);S.assert(p===d,()=>`Error in matMul: inner shapes (${p}) and (${d}) of Tensors with shapes ${r.shape} and ${t.shape} and transposeA=${e} and transposeB=${o} must match.`);let M=e?[y,p,m]:[y,m,p],B=o?[b,f,d]:[b,d,f],W=ue({inputs:{x:r},backend:n,attrs:{shape:M}}),H=ue({inputs:{x:t},backend:n,attrs:{shape:B}}),K=[W,H],X=Math.max(y,b),re=e?W.shape[1]:W.shape[2],ce=i!=null,pe=s!=null,be=l==="leakyrelu",we=l!=null?ri(l,!0):null,Te=ce||pe||be||we!=null,qe;if((m===1||f===1)&&re>l1&&Te===!1){let it=W,Qt=H;e&&(it=vt({inputs:{x:W},backend:n,attrs:{perm:[0,2,1]}}),K.push(it)),o&&(Qt=vt({inputs:{x:H},backend:n,attrs:{perm:[0,2,1]}}),K.push(Qt));let rr=f!==1,en=f===1,$n=it;rr&&($n=ue({inputs:{x:it},backend:n,attrs:{shape:[X,re,1]}}),K.push($n));let Sa=f===1?2:1,wa=Qt;en&&(wa=ue({inputs:{x:Qt},backend:n,attrs:{shape:[X,1,re]}}),K.push(wa));let op=dd({inputs:{a:$n,b:wa},backend:n});qe=xa({inputs:{x:op},backend:n,attrs:{axis:Sa,keepDims:!0}}),K.push(op)}else{let it=Et(r.dtype,t.dtype),Qt=new Xc(M,B,[X,m,f],e,o,ce,we,pe,be),rr=[W,H];if(i!=null&&rr.push(i),pe&&rr.push(s),be){let en=n.makeTensorInfo([],"float32",S.createScalarValue(a,"float32"));rr.push(en),K.push(en)}qe=n.runWebGLProgram(Qt,rr,it)}let je=ue({inputs:{x:qe},backend:n,attrs:{shape:N}});K.push(qe);for(let it of K)n.disposeIntermediateTensorInfo(it);return je}function hZ(r){let{inputs:t,backend:e,attrs:o}=r,{a:n,b:i,bias:s,preluActivationWeights:a}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:p}=o;return ya({a:n,b:i,transposeA:l,transposeB:u,backend:e,bias:s,preluActivationWeights:a,leakyreluAlpha:p,activation:c})}var IA={kernelName:Rs,backendName:"webgl",kernelFunc:hZ};var TA="return abs(x);";function gZ(r){let{inputs:t,backend:e}=r,{x:o}=t;if(e.shouldExecuteOnCPU([o])&&o.dtype!=="complex64"){let i=e.texData.get(o.dataId),s=cx(i.values);return e.makeTensorInfo(o.shape,o.dtype,s)}let n;return G().getBool("WEBGL_PACK_UNARY_OPERATIONS")?n=new Mr(o.shape,TA):n=new tr(o.shape,TA),e.runWebGLProgram(n,[o],o.dtype)}var EA={kernelName:_s,backendName:"webgl",kernelFunc:gZ};var xZ=Ut+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,yZ=Ie({opSnippet:xZ}),NA={kernelName:Ya,backendName:"webgl",kernelFunc:yZ};var vZ=Ut+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,bZ=Ie({opSnippet:vZ}),RA={kernelName:Qa,backendName:"webgl",kernelFunc:bZ};var PA="return a + b;",SZ=nt({opSnippet:PA,packedOpSnippet:PA,supportsComplex:!0,cpuKernelImpl:l$}),$A={kernelName:xn,backendName:"webgl",kernelFunc:SZ};var vx=class{constructor(t,e){this.outputShape=[],this.outputShape=t,this.variableNames=e.map((i,s)=>`T${s}`);let o=[];this.variableNames.forEach(i=>{o.push(`float v${i} = get${i}AtOutCoords();`)});let n=this.variableNames.map(i=>`v${i}`).join(" + ");this.userCode=`
      void main() {
        ${o.join(`
        `)}

        float result = ${n};
        setOutput(result);
      }
    `}};var bx=class{constructor(t,e){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.variableNames=e.map((i,s)=>`T${s}`);let o=[];this.variableNames.forEach(i=>{o.push(`vec4 v${i} = get${i}AtOutCoords();`)});let n=this.variableNames.map(i=>`v${i}`).join(" + ");this.userCode=`
      void main() {
        ${o.join(`
        `)}

        vec4 result = ${n};
        setOutput(result);
      }
    `}};function Sx(r){let{inputs:t,backend:e}=r,o=t;if(o.length===1)return Dt({inputs:{x:o[0]},backend:e});if(o.length>G().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){let l=Math.floor(o.length/2),u=Sx({inputs:o.slice(0,l),backend:e}),c=Sx({inputs:o.slice(l),backend:e});return Sx({inputs:[u,c],backend:e})}let n=o.map(l=>l.dtype).reduce((l,u)=>Et(l,u)),i=o.map(l=>l.shape),a=G().getBool("WEBGL_PACK")?new bx(o[0].shape,i):new vx(o[0].shape,i);return e.runWebGLProgram(a,o,n)}var AA={kernelName:Za,backendName:"webgl",kernelFunc:Sx};function wZ(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{axis:i,keepDims:s}=o,a=n.shape.length,l=S.parseAxisParam(i,n.shape),u=l,c=P.getAxesPermutation(u,a),p=n;c!=null&&(p=vt({inputs:{x:n},backend:e,attrs:{perm:c}}),u=P.getInnerMostAxes(u.length,a)),P.assertAxesAreInnerMostDims("all",u,a);let[d,m]=P.computeOutAndReduceShapes(p.shape,u),f=S.sizeFromShape(m),g=ue({inputs:{x:p},backend:e,attrs:{shape:[-1,f]}}),x=go(g,g.dtype,"all",e),y;if(s){let b=P.expandShapeToKeepDim(d,l);y=ue({inputs:{x},backend:e,attrs:{shape:b}})}else y=ue({inputs:{x},backend:e,attrs:{shape:d}});return e.disposeIntermediateTensorInfo(g),e.disposeIntermediateTensorInfo(x),c!=null&&e.disposeIntermediateTensorInfo(p),y}var DA={kernelName:Ja,backendName:"webgl",kernelFunc:wZ};function _Z(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{axis:i,keepDims:s}=o,a=n.shape.length,l=S.parseAxisParam(i,n.shape),u=l,c=P.getAxesPermutation(u,a),p=n;c!=null&&(p=vt({inputs:{x:n},backend:e,attrs:{perm:c}}),u=P.getInnerMostAxes(u.length,a)),P.assertAxesAreInnerMostDims("any",u,a);let[d,m]=P.computeOutAndReduceShapes(p.shape,u),f=S.sizeFromShape(m),g=ue({inputs:{x:p},backend:e,attrs:{shape:[-1,f]}}),x=go(g,g.dtype,"any",e),y;if(s){let b=P.expandShapeToKeepDim(d,l);y=ue({inputs:{x},backend:e,attrs:{shape:b}})}else y=ue({inputs:{x},backend:e,attrs:{shape:d}});return e.disposeIntermediateTensorInfo(g),e.disposeIntermediateTensorInfo(x),c!=null&&e.disposeIntermediateTensorInfo(p),y}var FA={kernelName:el,backendName:"webgl",kernelFunc:_Z};var wx=class{constructor(t,e,o){this.variableNames=["A"];let{windowSize:n,batchSize:i,outSize:s}=t;o||this.variableNames.push("bestIndicesA"),this.outputShape=[i,s];let a=e==="max"?">":"<",l=o?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${n}; i++) {
          int inIdx = ${l};
          float candidate = getA(batch, inIdx);
          if (candidate ${a} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}};var _x=class{constructor(t,e,o,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,S.assert(t.length>2,()=>`Packed arg${o.charAt(0).toUpperCase()+o.slice(1)} supports only inputs with rank above 2.`);let i=t[t.length-1],s=Math.ceil(i/e);this.outputShape=t.slice(0,-1),s>1&&this.outputShape.push(s),n||this.variableNames.push("bestIndicesA");let a=this.outputShape,l=a.length,u=Me(l),c=At("coords",l),p,d;if(s===1){d=l+1;let H=Me(d);p=`
        ${H} sourceLocR = ${H}(${c.join()}, 0);
        ++${c[l-1]};
        ${H} sourceLocG = ${H}(${c.join()}, 0);
        ++${c[l-2]};
        ${H} sourceLocA = ${H}(${c.join()}, 0);
        --${c[l-1]};
        ${H} sourceLocB = ${H}(${c.join()}, 0);
        --${c[l-2]};`}else d=l,p=`
        ${u} sourceLocR = coords;
        ++${c[l-1]};
        ${u} sourceLocG = coords;
        ++${c[l-2]};
        ${u} sourceLocA = coords;
        --${c[l-1]};
        ${u} sourceLocB = coords;
        --${c[l-2]};`;let m=["x","y","z","w","u","v"].slice(0,d),f="."+m[d-1],g=m.map(H=>"int "+H),x=At("sourceLocR",d-1).concat("inIdx.r"),y=At("sourceLocG",d-1).concat("inIdx.g"),b=At("sourceLocB",d-1).concat("inIdx.b"),I=At("sourceLocA",d-1).concat("inIdx.a"),N=o==="max"?"greaterThan":"lessThan",M=n?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${x.join()}),
                             getBestIndicesAChannel(${y.join()}),
                             getBestIndicesAChannel(${b.join()}),
                             getBestIndicesAChannel(${I.join()})));`,B=`vec4(
            getAChannel(${x.join()}),
            hasNextCol ? getAChannel(${y.join()}) : 0.,
            hasNextRow ? getAChannel(${b.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${I.join()}) : 0.)`,W=n?"":`
      float getBestIndicesAChannel(${g.join()}) {
        return getChannel(getBestIndicesA(${m.join()}),
                                          vec2(${m.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${g.join()}) {
        return getChannel(getA(${m.join()}),
                               vec2(${m.slice(-2).join()}));
      }
      ${W}
      void main() {
        ${u} coords = getOutputCoords();
        bool hasNextCol = ${c[l-1]} < ${a[l-1]-1};
        bool hasNextRow = ${c[l-2]} < ${a[l-2]-1};
        ${p}
        ivec4 srcIdx = ivec4(sourceLocR${f}, sourceLocG${f},
          sourceLocB${f}, sourceLocA${f}) * ${e};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${B};

        for (int i = 0; i < ${e}; i++) {
          inIdx = srcIdx;
          ${M}
          vec4 candidate = ${B};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${N}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}};function OA(r,t,e,o=null){let n=t.shape[0],i=t.shape[1];o!=null&&(n=o.shape[0],i=o.shape[1]);let s=P.computeOptimalWindowSize(i),a={windowSize:s,inSize:i,batchSize:n,outSize:Math.ceil(i/s)},l=new wx(a,e,o==null),u=[t];o!=null&&u.push(o);let c=r.runWebGLProgram(l,u,"int32");if(c.shape[1]===1)return c;let p=OA(r,t,e,c);return r.disposeIntermediateTensorInfo(c),p}function LA(r,t,e,o=null){let n=o!=null?o.shape:t.shape,i=n[n.length-1],s=P.computeOptimalWindowSize(i),a=new _x(n,s,e,o==null),l=o==null?[t]:[t,o],u=r.runWebGLProgram(a,l,"int32");if(u.shape.length===t.shape.length){let c=LA(r,t,e,u);return r.disposeIntermediateTensorInfo(u),c}return u}function Cx(r,t,e,o){let n=[e];if(P.assertAxesAreInnerMostDims("arg"+o.charAt(0).toUpperCase()+o.slice(1),n,t.shape.length),!G().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){let i=[],s=r.texData.get(t.dataId),a=s!==null&&s.isPacked,l=t;a&&(l=r.unpackTensor(t),i.push(l));let[u,c]=P.computeOutAndReduceShapes(l.shape,n),p=S.sizeFromShape(c),d=ue({inputs:{x:l},backend:r,attrs:{shape:[-1,p]}});i.push(d);let m=OA(r,d,o);i.push(m);let f=ue({inputs:{x:m},backend:r,attrs:{shape:u}});return i.forEach(g=>r.disposeIntermediateTensorInfo(g)),f}return LA(r,t,o)}function CZ(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{axis:i}=o,s=S.parseAxisParam(i,n.shape),a=P.getAxesPermutation(s,n.shape.length),l=n,u=[];a!=null&&(l=vt({inputs:{x:n},backend:e,attrs:{perm:a}}),u.push(l),s=P.getInnerMostAxes(s.length,l.shape.length)),P.assertAxesAreInnerMostDims("argMax",[s[0]],l.shape.length);let c=Cx(e,l,s[0],"max");return u.forEach(p=>e.disposeIntermediateTensorInfo(p)),c}var MA={kernelName:tl,backendName:"webgl",kernelFunc:CZ};function kZ(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{axis:i}=o,s=S.parseAxisParam(i,n.shape),a=P.getAxesPermutation(s,n.shape.length),l=n,u=[];a!=null&&(l=vt({inputs:{x:n},backend:e,attrs:{perm:a}}),u.push(l),s=P.getInnerMostAxes(s.length,l.shape.length)),P.assertAxesAreInnerMostDims("argMin",[s[0]],l.shape.length);let c=Cx(e,l,s[0],"min");return u.forEach(p=>e.disposeIntermediateTensorInfo(p)),c}var BA={kernelName:rl,backendName:"webgl",kernelFunc:kZ};var IZ=Ut+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,TZ=Ie({opSnippet:IZ}),VA={kernelName:ol,backendName:"webgl",kernelFunc:TZ};var EZ=Ut+"return log(x + sqrt(x * x + 1.0));",NZ=Ie({opSnippet:EZ}),WA={kernelName:nl,backendName:"webgl",kernelFunc:NZ};var RZ=Ut+`
  return atan(x);
`,PZ=Ie({opSnippet:RZ}),UA={kernelName:il,backendName:"webgl",kernelFunc:PZ};var $Z=jc+`
  return atan(a, b);
`,AZ=`
  vec4 result = atan(a, b);
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+ho+`
  return result;
`,DZ=nt({opSnippet:$Z,packedOpSnippet:AZ}),zA={kernelName:al,backendName:"webgl",kernelFunc:DZ};var FZ=Ut+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,OZ=Ie({opSnippet:FZ}),GA={kernelName:sl,backendName:"webgl",kernelFunc:OZ};var Zo=class{constructor(t,e,o,n=!1,i=!1){if(this.variableNames=["x"],e==="avg"&&o)throw new Error("Cannot compute positions for average pool.");let s=t.filterWidth,a=t.strideHeight,l=t.strideWidth,u=t.dilationHeight,c=t.dilationWidth,p=t.effectiveFilterHeight,d=t.effectiveFilterWidth,m=t.padInfo.top,f=t.padInfo.left;this.outputShape=t.outShape;let g=e==="avg",x=`((batch  * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + d`,y=`(xR * ${t.inWidth} + xC) * ${t.inChannels} + d`,b="0.0";if(g||(b="-1.0 / 1e-20"),o){let H=">=";this.userCode=`
        const ivec2 strides = ivec2(${a}, ${l});
        const ivec2 pads = ivec2(${m}, ${f});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${p};
              wR += ${u}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${d};
                wC += ${c}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${H} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${n?i?x:y:`wR * ${d} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let I="max",N=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;e==="avg"&&(N="avgValue / max(count, 1.0)");let M=Math.floor(s/4)*4,B=s%4,W=`
      if (${g}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${I}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${a}, ${l});
      const ivec2 pads = ivec2(${m}, ${f});
      const float initializationValue = ${b};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${t.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${b});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${p};
            wR += ${u}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${t.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${M}; wC += 4) {
            int xC = xCCorner + wC * ${c};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              getValue(batch, xR, xC + 2 * ${c}, d),
              getValue(batch, xR, xC + 3 * ${c}, d)
            );

            ${W}
          }

          int xC = xCCorner + ${M};
          if (${B===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${W}
          } else if (${B===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              initializationValue,
              initializationValue
            );

            ${W}
          } else if (${B===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              getValue(batch, xR, xC + 2 * ${c}, d),
              initializationValue
            );

            ${W}
          }
        }
        setOutput(${N});
      }
    `}},cs=class{constructor(t,e,o,n=!1,i=!1){if(this.variableNames=["x"],e==="avg"&&o)throw new Error("Cannot compute positions for average pool.");let s=t.filterWidth,a=t.strideDepth,l=t.strideHeight,u=t.strideWidth,c=t.dilationDepth,p=t.dilationHeight,d=t.dilationWidth,m=t.effectiveFilterDepth,f=t.effectiveFilterHeight,g=t.effectiveFilterWidth,x=t.padInfo.front,y=t.padInfo.top,b=t.padInfo.left;this.outputShape=t.outShape;let I=e==="avg",N="0.0";if(I||(N="-1.0 / 1e-20"),o){let X=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${a}, ${l}, ${u});
        const ivec3 pads = ivec3(${x}, ${y}, ${b});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${m};
              wD += ${c}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${t.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${f};
                wR += ${p}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${t.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${g};
                  wC += ${d}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${t.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${X} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${n?i?`(((batch * ${t.inDepth} + xD) * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`((xD * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`wD * ${f} * ${g} +
                      wR * ${g} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let M="max",B=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;e==="avg"&&(B="avgValue / max(count, 1.0)");let W=Math.floor(s/4)*4,H=s%4,K=`
      if (${I}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${M}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${a}, ${l}, ${u});
      const ivec3 pads = ivec3(${x}, ${y}, ${b});
      const float initializationValue = ${N};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${t.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${N});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${m};
            wD += ${c}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${t.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${f};
            wR += ${p}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${W}; wC += 4) {
              int xC = xCCorner + wC * ${d};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                getValue(batch, xD, xR, xC + 2 * ${d}, ch),
                getValue(batch, xD, xR, xC + 3 * ${d}, ch)
              );

              ${K}
            }

            int xC = xCCorner + ${W};
            if (${H===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${K}
            } else if (${H===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                initializationValue,
                initializationValue
              );

              ${K}
            } else if (${H===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                getValue(batch, xD, xR, xC + 2 * ${d}, ch),
                initializationValue
              );

              ${K}
            }
          }
        }
        setOutput(${B});
      }
    `}};function LZ(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t;Rn(n,"avgPool");let{filterSize:i,strides:s,pad:a,dimRoundingMode:l}=o,u=1;S.assert(P.eitherStridesOrDilationsAreOne(s,u),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${s} and dilations '${u}'`);let c=P.computePool2DInfo(n.shape,i,s,u,a,l);if(c.filterWidth===1&&c.filterHeight===1&&S.arraysEqual(c.inShape,c.outShape))return Dt({inputs:{x:n},backend:e});let p=new Zo(c,"avg",!1);return e.runWebGLProgram(p,[n],"float32")}var HA={kernelName:ll,backendName:"webgl",kernelFunc:LZ};function MZ(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{filterSize:i,strides:s,pad:a,dimRoundingMode:l,dataFormat:u}=o,c=[1,1,1],p=P.computePool3DInfo(n.shape,i,s,c,a,l,u),d=new cs(p,"avg",!1);return e.runWebGLProgram(d,[n],"float32")}var KA={kernelName:ul,backendName:"webgl",kernelFunc:MZ};var kx=class{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;let e=t.filterHeight,o=t.filterWidth,n=t.strideHeight,i=t.strideWidth,s=t.dilationHeight,a=t.dilationWidth,l=t.effectiveFilterHeight,u=t.effectiveFilterWidth,c=l-1-t.padInfo.top,p=u-1-t.padInfo.left,d=1/(e*o);this.userCode=`
      const ivec2 pads = ivec2(${c}, ${p});
      const float avgMultiplier = float(${d});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${l};
            wR += ${s}) {
          float dyR = float(dyRCorner + wR) / ${n}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${u};
            wC+= ${a}) {
            float dyC = float(dyCCorner + wC) / ${i}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}},Ix=class{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;let e=t.filterDepth,o=t.filterHeight,n=t.filterWidth,i=t.strideDepth,s=t.strideHeight,a=t.strideWidth,l=t.dilationDepth,u=t.dilationHeight,c=t.dilationWidth,p=t.effectiveFilterDepth,d=t.effectiveFilterHeight,m=t.effectiveFilterWidth,f=p-1-t.padInfo.front,g=d-1-t.padInfo.top,x=m-1-t.padInfo.left,y=1/(e*o*n);this.userCode=`
      const ivec3 pads = ivec3(${f}, ${g}, ${x});
      const float avgMultiplier = float(${y});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${p};
            wD += ${l}) {
          float dyD = float(dyDCorner + wD) / ${i}.0;

          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${d};
              wR += ${u}) {
            float dyR = float(dyRCorner + wR) / ${s}.0;

            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${m};
                wC += ${c}) {
              float dyC = float(dyCCorner + wC) / ${a}.0;

              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function BZ(r){let{inputs:t,backend:e,attrs:o}=r,{dy:n,input:i}=t,s=i,{filterSize:a,strides:l,pad:u,dimRoundingMode:c}=o,p=[1,1,1],d=P.computePool3DInfo(s.shape,a,l,p,u,c),m=new Ix(d);return e.runWebGLProgram(m,[n],s.dtype)}var qA={kernelName:dm,backendName:"webgl",kernelFunc:BZ};function VZ(r){let{inputs:t,backend:e,attrs:o}=r,{dy:n,input:i}=t,s=i;Rn([n,i],"avgPoolGrad");let{filterSize:a,strides:l,pad:u}=o,c=P.computePool2DInfo(s.shape,a,l,1,u),p=new kx(c);return e.runWebGLProgram(p,[n],s.dtype)}var jA={kernelName:pm,backendName:"webgl",kernelFunc:VZ};function WZ(r){let{inputs:t,backend:e,attrs:o}=r,{a:n,b:i}=t,{transposeA:s,transposeB:a}=o;return ya({a:n,b:i,transposeA:s,transposeB:a,backend:e})}var XA={kernelName:cl,backendName:"webgl",kernelFunc:WZ};var Tx=class{constructor(t,e,o,n,i,s){this.outputShape=[],this.variableNames=["x","mean","variance"],P.assertAndGetBroadcastShape(t,e),P.assertAndGetBroadcastShape(t,o);let a="0.0";n!=null&&(P.assertAndGetBroadcastShape(t,n),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let l="1.0";i!=null&&(P.assertAndGetBroadcastShape(t,i),this.variableNames.push("scale"),l="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${a};
        float scale = ${l};
        float inv = scale * inversesqrt(variance + float(${s}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}};var Ex=class{constructor(t,e,o,n,i,s){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],P.assertAndGetBroadcastShape(t,e),P.assertAndGetBroadcastShape(t,o);let a="vec4(0.0)";n!=null&&(P.assertAndGetBroadcastShape(t,n),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let l="vec4(1.0)";i!=null&&(P.assertAndGetBroadcastShape(t,i),this.variableNames.push("scale"),l="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`
      void main() {
        vec4 offset = ${a};
        vec4 scale = ${l};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${s}));

        setOutput((x - mean) * inv + offset);
      }
    `}};var UZ=({inputs:r,backend:t,attrs:e})=>{let{x:o,mean:n,variance:i,offset:s,scale:a}=r;S.assert(n.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),S.assert(s==null||n.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),S.assert(a==null||n.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:l}=e;l==null&&(l=.001);let u=[o,n,i],c=null;s!=null&&(c=s.shape,u.push(s));let p=null;a!=null&&(p=a.shape,u.push(a));let d=G().getBool("WEBGL_PACK_NORMALIZATION")?new Ex(o.shape,n.shape,i.shape,c,p,l):new Tx(o.shape,n.shape,i.shape,c,p,l);return t.runWebGLProgram(d,u,u[0].dtype)},YA={kernelName:zl,backendName:"webgl",kernelFunc:UZ};var Nx=class{constructor(t){this.variableNames=["source"],this.outputShape=t,this.rank=t.length;let e=Me(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let o=zZ(this.rank),n,i=t.map((s,a)=>`sourceLoc.${u1[a]} = start[${a}] + coords.${u1[a]};`);n=`
        ${e} sourceLoc;
        ${e} coords = getOutputCoords();
        ${i.join(`
`)}
      `,this.userCode=`
      void main() {
        ${n}
        setOutput(getSource(${o}));
      }
    `}},u1=["x","y","z","w","u","v"];function zZ(r){if(r===1)return"sourceLoc";if(r<=6)return u1.slice(0,r).map(t=>"sourceLoc."+t).join(",");throw Error(`Slicing for rank ${r} is not yet supported`)}var Rx=class{constructor(t){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.rank=t.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let e=Me(this.rank),o=At("coords",this.rank),n=At("sourceLoc",this.rank),i=this.rank===1?"sourceLoc":`vec2(${n.slice(-2).join()})`,s=`getChannel(getSource(${n.join()}), ${i})`,a=`
      result.x = ${s};
      if (++${o[this.rank-1]} < ${t[this.rank-1]}) {
        ++${n[this.rank-1]};
        result.y = ${s};
        --${n[this.rank-1]};
      }
    `,l=this.rank===1?"":`
      --${o[this.rank-1]};
      if (++${o[this.rank-2]} < ${t[this.rank-2]}) {
        ++${n[this.rank-2]};
        result.z = ${s};
        if (++${o[this.rank-1]} < ${t[this.rank-1]}) {
          ++${n[this.rank-1]};
          result.w = ${s};
        }
      }
    `,u=this.rank<=4?`sourceLoc = coords +
            ${e}(${t.map((c,p)=>`start[${p}]`).join()});`:t.map((c,p)=>`${n[p]} = ${o[p]} + start[${p}];`).join(`
`);this.userCode=`
      void main() {
        ${e} coords = getOutputCoords();
        ${e} sourceLoc;
        ${u}
        vec4 result = vec4(0.);
        ${a}
        ${l}
        setOutput(result);
      }
    `}};function GZ(r,t,e,o){let n=o.texData.get(r.dataId),i=o.makeTensorInfo(e,r.dtype),s=o.texData.get(i.dataId);Object.assign(s,n),s.refCount=1,s.shape=e,s.dtype=r.dtype;let a=Kt.computeFlatOffset(t,S.computeStrides(r.shape));n.slice&&(a+=n.slice.flatOffset),s.slice={flatOffset:a,origDataId:n.slice&&n.slice.origDataId||r.dataId};let l=o.dataRefCount.get(s.slice.origDataId)||1;return o.dataRefCount.set(s.slice.origDataId,l+1),i}function Jo(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{begin:i,size:s}=o,[a,l]=Kt.parseSliceParams(n,i,s);if(Kt.assertParamsValid(n,a,l),S.sizeFromShape(l)===0)return e.makeTensorInfo(l,n.dtype,[]);if(e.shouldExecuteOnCPU([n])||n.dtype==="string"){let p=e.texData.get(n.dataId),d=V$(p.values,a,l,n.shape,n.dtype);return e.makeTensorInfo(l,n.dtype,d)}let{isPacked:u}=e.texData.get(n.dataId),c=Kt.isSliceContinous(n.shape,a,l);if(u||!c){let p=G().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Rx(l):new Nx(l),d=[a];return e.runWebGLProgram(p,[n],n.dtype,d)}return e.uploadToGPU(n.dataId),GZ(n,a,l,e)}var QA={kernelName:Es,backendName:"webgl",kernelFunc:Jo};var HZ=r=>{let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{blockShape:i,crops:s}=o;S.assert(n.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");let a=i.reduce((b,I)=>b*I),l=P.getReshaped(n.shape,i,a),u=P.getPermuted(l.length,i.length),c=P.getReshapedPermuted(n.shape,i,a),p=P.getSliceBeginCoords(s,i.length),d=P.getSliceSize(c,s,i.length),m=[],f=ue({inputs:{x:n},backend:e,attrs:{shape:l}}),g=vt({inputs:{x:f},backend:e,attrs:{perm:u}}),x=ue({inputs:{x:g},backend:e,attrs:{shape:c}}),y=Jo({inputs:{x},backend:e,attrs:{begin:p,size:d}});return m.push(f),m.push(g),m.push(x),m.forEach(b=>e.disposeIntermediateTensorInfo(b)),y},ZA={kernelName:pl,backendName:"webgl",kernelFunc:HZ};function KZ(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,weights:i}=t,{size:s}=o,a=e.readSync(n.dataId),l=e.readSync(i.dataId),u=ux(a,l,i.dtype,i.shape,s);return e.makeTensorInfo([s],i.dtype,u)}var JA={kernelName:dl,backendName:"webgl",kernelFunc:KZ};var qZ=`
  int r = int(a.r) & int(b.r);
  int g = int(a.g) & int(b.g);
  int rb = int(a.b) & int(b.b);
  int ra = int(a.a) & int(b.a);
  return vec4(r, g, rb, ra);
`,jZ=`
  return float(int(a.r) & int(b.r));
`;function XZ(r){let{inputs:t,backend:e}=r,{a:o,b:n}=t,i=G().getBool("WEBGL_PACK_BINARY_OPERATIONS"),s=G().getNumber("WEBGL_VERSION");if(e.shouldExecuteOnCPU([o,n])||s===1){let l=e.texData.get(o.dataId).values,u=e.texData.get(n.dataId).values,[c,p]=c$(o.shape,n.shape,l,u,o.dtype),d=e.makeTensorInfo(p,o.dtype),m=e.texData.get(d.dataId);return m.values=c,d}let a;return i?a=new fo(qZ,o.shape,n.shape,!1):a=new Br(jZ,o.shape,n.shape),e.runWebGLProgram(a,[o,n],o.dtype)}var eD={kernelName:ml,backendName:"webgl",kernelFunc:XZ};function YZ(r){let{inputs:t,backend:e}=r,{s0:o,s1:n}=t,i=e.readSync(o.dataId),s=e.readSync(n.dataId),a=P.assertAndGetBroadcastShape(Array.from(i),Array.from(s));return e.makeTensorInfo([a.length],"int32",Int32Array.from(a))}var tD={kernelName:fl,backendName:"webgl",kernelFunc:YZ};var QZ="return float(a != b);",c1=nt({opSnippet:QZ,cpuKernelImpl:P$,dtype:"bool"}),rD={kernelName:Pi,backendName:"webgl",kernelFunc:c1};function oi(r){let{inputs:t,backend:e}=r,{input:o}=t,n=e.texData.get(o.dataId);return Dt({inputs:{x:n.complexTensorInfos.real},backend:e})}var oD={kernelName:Ts,backendName:"webgl",kernelFunc:oi};var ZZ="return float(int(x));";function nD(r,t){let e=new tr(r.shape,ZZ),o=t.runWebGLProgram(e,[r],"int32");return{dataId:o.dataId,shape:o.shape,dtype:o.dtype}}function p1(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{dtype:i}=o;if(i==="complex64"){if(n.dtype==="complex64")return Dt({inputs:{x:n},backend:e});let s=_r(n.shape),a=p1({inputs:{x:n},backend:e,attrs:{dtype:"float32"}}),l=Vr({inputs:{real:a,imag:s},backend:e});return s.dispose(),e.disposeIntermediateTensorInfo(a),l}if(n.dtype==="complex64"){let s=oi({inputs:{input:n},backend:e}),a=p1({inputs:{x:s},backend:e,attrs:{dtype:i}});return e.disposeIntermediateTensorInfo(s),a}if(!S.hasEncodingLoss(n.dtype,i)){let s=Dt({inputs:{x:n},backend:e});return{dataId:s.dataId,shape:s.shape,dtype:i}}if(e.shouldExecuteOnCPU([n])){let s=e.texData.get(n.dataId).values,[a,l,u]=p$(s,n.shape,n.dtype,i);return e.makeTensorInfo(a,l,u)}if(i==="int32")return nD(n,e);if(i==="bool"){let s=e.makeTensorInfo([],"bool",S.getTypedArrayFromDType("bool",1)),l=c1({inputs:{a:n,b:s},backend:e});return e.disposeIntermediateTensorInfo(s),l}throw new Error(`Error in Cast: failed to cast ${n.dtype} to ${i}`)}var iD={kernelName:Ln,backendName:"webgl",kernelFunc:p1};var sD="return ceil(x);",JZ=Ie({opSnippet:sD,packedOpSnippet:sD,cpuKernelImpl:d$}),aD={kernelName:xi,backendName:"webgl",kernelFunc:JZ};var Px=class{constructor(t){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=t,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}};var $x=class{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=t,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}};function eJ(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{clipValueMin:i,clipValueMax:s}=o,a;G().getBool("WEBGL_PACK_CLIP")?a=new $x(n.shape):a=new Px(n.shape);let l=[[i],[s]];return e.runWebGLProgram(a,[n],n.dtype,l)}var lD={kernelName:hl,backendName:"webgl",kernelFunc:eJ};var Ax=class{constructor(t){this.variableNames=["real","imag"],this.outputShape=t,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}};function uD(r,t){return{dataId:t.dataId,dtype:t.dtype,shape:r.shape}}function tJ(r){let{inputs:t,backend:e}=r,{x:o}=t,n=e.texData.get(o.dataId),i=new Ax(o.shape),s=[uD(o,n.complexTensorInfos.real),uD(o,n.complexTensorInfos.imag)];return e.runWebGLProgram(i,s,s[0].dtype)}var cD={kernelName:gl,backendName:"webgl",kernelFunc:tJ};var Dx=class{constructor(t){this.outputShape=[],this.outputShape=P.computeOutShape(t,1),this.variableNames=t.map((s,a)=>`T${a}`);let e=new Array(t.length-1);e[0]=t[0][1];for(let s=1;s<e.length;s++)e[s]=e[s-1]+t[s][1];let o=[`if (yC < ${e[0]}) setOutput(getT0(yR, yC));`];for(let s=1;s<e.length;s++){let a=e[s-1];o.push(`else if (yC < ${e[s]}) setOutput(getT${s}(yR, yC-${a}));`)}let n=e.length,i=e[e.length-1];o.push(`else setOutput(getT${n}(yR, yC-${i}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${o.join(`
        `)}
      }
    `}};var Ox=class{constructor(t,e){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=P.computeOutShape(t,e);let o=this.outputShape,n=o.length,i=Me(n),s=At("coords",n),a=["x","y","z","w","u","v"].slice(0,n);this.variableNames=t.map((g,x)=>`T${x}`);let l=new Array(t.length-1);l[0]=t[0][e];for(let g=1;g<l.length;g++)l[g]=l[g-1]+t[g][e];let u=a[e],c=a.slice(-2),p=a.join(),d=`if (${u} < ${l[0]}) {
        return getChannel(
            getT0(${p}), vec2(${c.join()}));
        }`;for(let g=1;g<l.length;g++){let x=l[g-1];d+=`
        if (${u} < ${l[g]}  && ${u} >= ${l[g-1]}) {
          return getChannel(
            getT${g}(${Fx(a,u,x)}),
            vec2(${Fx(c,u,x)}));
        }`}let m=l.length,f=l[l.length-1];d+=`
        return getChannel(
          getT${m}(${Fx(a,u,f)}),
          vec2(${Fx(c,u,f)}));`,this.userCode=`
      float getValue(${a.map(g=>"int "+g)}) {
        ${d}
      }

      void main() {
        ${i} coords = getOutputCoords();
        vec4 result = vec4(getValue(${s}), 0., 0., 0.);

        ${s[n-1]} = ${s[n-1]} + 1;
        if (${s[n-1]} < ${o[n-1]}) {
          result.g = getValue(${s});
        }

        ${s[n-2]} = ${s[n-2]} + 1;
        if (${s[n-2]} < ${o[n-2]}) {
          result.a = getValue(${s});
        }

        ${s[n-1]} = ${s[n-1]} - 1;
        if (${s[n-2]} < ${o[n-2]} &&
            ${s[n-1]} < ${o[n-1]}) {
          result.b = getValue(${s});
        }
        setOutput(result);
      }
    `}};function Fx(r,t,e){let o=r.indexOf(t);return r.map((i,s)=>s===o?`${i} - ${e}`:i).join()}function va(r){let{inputs:t,backend:e}=r,{input:o}=t,n=e.texData.get(o.dataId);return Dt({inputs:{x:n.complexTensorInfos.imag},backend:e})}var pD={kernelName:ql,backendName:"webgl",kernelFunc:va};function Yc(r,t,e){let o=r[0].dtype;if(o==="complex64"){let m=r.map(b=>oi({inputs:{input:b},backend:e})),f=r.map(b=>va({inputs:{input:b},backend:e})),g=Yc(m,t,e),x=Yc(f,t,e),y=Vr({inputs:{real:g,imag:x},backend:e});return m.forEach(b=>e.disposeIntermediateTensorInfo(b)),f.forEach(b=>e.disposeIntermediateTensorInfo(b)),e.disposeIntermediateTensorInfo(g),e.disposeIntermediateTensorInfo(x),y}let n=e.shouldExecuteOnCPU(r);if(o==="string"&&(n=!0),n){let m=r.map(N=>{let B=[-1,S.sizeFromShape(N.shape.slice(t))];return ue({inputs:{x:N},backend:e,attrs:{shape:B}})}),f=m.map(N=>({vals:e.readSync(N.dataId),shape:N.shape})),g=P.computeOutShape(m.map(N=>N.shape),1),x=m[0].shape[0]===1,y=m$(f,g,o,x),b=P.computeOutShape(r.map(N=>N.shape),t),I=e.makeTensorInfo(b,o,y);return m.forEach(N=>e.disposeIntermediateTensorInfo(N)),I}let i=r.filter(m=>S.sizeFromShape(m.shape)>0),s=G().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&i[0].shape.length>1;if(i.length===1){let m=s?new tr(r[0].shape,Pn):new Mr(r[0].shape,Pn);return e.runWebGLProgram(m,r,o)}let a=G().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(i.length>a){let m=[];for(let g=0;g<i.length;g+=a){let x=i.slice(g,g+a);m.push(Yc(x,t,e))}let f=Yc(m,t,e);for(let g of m)e.disposeIntermediateTensorInfo(g);return f}if(s){let m=new Ox(i.map(f=>f.shape),t);return e.runWebGLProgram(m,i,o)}let{tensors2D:l,outShape:u}=rJ(i,t,e),c=new Dx(l.map(m=>m.shape)),p=e.runWebGLProgram(c,l,o);l.forEach(m=>e.disposeIntermediateTensorInfo(m));let d=ue({inputs:{x:p},attrs:{shape:u},backend:e});return e.disposeIntermediateTensorInfo(p),d}function rJ(r,t,e){let o=P.computeOutShape(r.map(i=>i.shape),t);return{tensors2D:r.map(i=>ue({inputs:{x:i},attrs:{shape:[-1,S.sizeFromShape(i.shape.slice(t))]},backend:e})),outShape:o}}function d1(r){let{inputs:t,backend:e,attrs:o}=r,{axis:n}=o,i=S.parseAxisParam(n,t[0].shape)[0],s=t.map(u=>u.shape);P.assertParamsConsistent(s,i);let a=P.computeOutShape(t.map(u=>u.shape),i);if(S.sizeFromShape(a)===0)return e.makeTensorInfo(a,t[0].dtype,[]);let l=t.filter(u=>S.sizeFromShape(u.shape)>0);return l.length===1?Dt({inputs:{x:l[0]},backend:e}):Yc(l,i,e)}var dD={kernelName:xl,backendName:"webgl",kernelFunc:d1};var Qc=class{constructor(t,e=!1,o=null,n=!1,i=!1){this.variableNames=["x","W"],this.outputShape=t.outShape;let s=t.padInfo.top,a=t.padInfo.left,l=t.strideHeight,u=t.strideWidth,c=t.dilationHeight,p=t.dilationWidth,d=t.filterHeight,m=t.filterWidth,f=Math.floor(t.inChannels/4)*4,g=t.inChannels%4,x=t.dataFormat==="channelsLast",y=x?1:2,b=x?2:3,I=x?3:1,N="",M="";o&&(n?N=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${o}
        }`:i?N=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${o}
        }`:N=`
          float activation(float x) {
            ${o}
          }
        `,M="result = activation(result);");let B=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),n&&this.variableNames.push("preluActivationWeights"),i&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${N}

      const ivec2 strides = ivec2(${l}, ${u});
      const ivec2 pads = ivec2(${s}, ${a});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${I}];

        ivec2 xRCCorner =
            ivec2(coords[${y}], coords[${b}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${d}; wR++) {
          int xR = xRCorner + wR * ${c};

          if (xR < 0 || xR >= ${t.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${m}; wC++) {
            int xC = xCCorner + wC * ${p};

            if (xC < 0 || xC >= ${t.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${f}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${x}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${g===1}) {

              if (${x}) {
                dotProd +=
                    getX(batch, xR, xC, ${f}) *
                    getW(wR, wC, ${f}, d2);
              } else {
                dotProd +=
                    getX(batch, ${f}, xR, xC) *
                    getW(wR, wC, ${f}, d2);
              }

            } else if (${g===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${f}, d2),
                getW(wR, wC, ${f} + 1, d2)
              );

              if (${x}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${f}),
                  getX(batch, xR, xC, ${f} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${f}, xR, xC),
                  getX(batch, ${f} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${g===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${f}, d2),
                getW(wR, wC, ${f} + 1, d2),
                getW(wR, wC, ${f} + 2, d2)
              );

              if (${x}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${f}),
                  getX(batch, xR, xC, ${f} + 1),
                  getX(batch, xR, xC, ${f} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${f}, xR, xC),
                  getX(batch, ${f} + 1, xR, xC),
                  getX(batch, ${f} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${B}
        ${M}
        setOutput(result);
      }
    `}},Lx=class{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;let e=t.padInfo.front,o=t.padInfo.top,n=t.padInfo.left,i=t.strideDepth,s=t.strideHeight,a=t.strideWidth,l=t.dilationDepth,u=t.dilationHeight,c=t.dilationWidth,p=t.filterDepth,d=t.filterHeight,m=t.filterWidth,f=Math.floor(t.inChannels/4)*4,g=t.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${i}, ${s}, ${a});
      const ivec3 pads = ivec3(${e}, ${o}, ${n});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${p}; wF++) {
          int xF = xFCorner + wF * ${l};

          if (xF < 0 || xF >= ${t.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${d}; wR++) {
            int xR = xRCorner + wR * ${u};

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${m}; wC++) {
              int xC = xCCorner + wC * ${c};

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${f}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${g===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${f}) *
                  getW(wF, wR, wC, ${f}, d2);
              } else if (${g===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${f}),
                  getX(batch, xF, xR, xC, ${f} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${f}, d2),
                  getW(wF, wR, wC, ${f} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${g===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${f}),
                  getX(batch, xF, xR, xC, ${f} + 1),
                  getX(batch, xF, xR, xC, ${f} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${f}, d2),
                  getW(wF, wR, wC, ${f} + 1, d2),
                  getW(wF, wR, wC, ${f} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}};var Zc=class{constructor(t,e=!1,o=null,n=!1,i=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=at(this.outputShape.length);let s=t.padInfo.left,a=t.strideWidth,l=t.dilationWidth,u=t.filterHeight,c=t.filterWidth,p=c,d=`
       int xR; int xC; int xCOffset;
       vec4 wTexel; vec4 previous; vec4 final;`;for(let x=0;x<c;x++)d+=`
           vec4 xTexelC${x*2};
           int xTexelC${x*2}Ready;
           vec4 xTexelC${x*2+1};
           int xTexelC${x*2+1}Ready;
           vec4 xC${x};`;d+=`
     for (int r = 0; r < ${u}; r++) {
      for (int d1 = 0; d1 < ${t.inChannels}; d1 += 2) {
       `;for(let x=0;x<c;x++)d+=`
           xTexelC${x*2} = vec4(0.0);
           xTexelC${x*2}Ready = 0;
           xTexelC${x*2+1} = vec4(0.0);
           xTexelC${x*2+1}Ready = 0;
           xC${x} = vec4(0.0);`;d+=`
         xR = xRCorner + r * dilations[0];
         if (xR >=0 && xR < inDims[0]) {
       `;for(let x=0;x<(p+1)/2;x++){let y=x*2;if(d+=`
           xC = xCCorner + ${y*l};
           `,a===1){if(y<c&&(s%2===1?(d+=`
                 xCOffset = xC + 1;
                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y}Ready == 0) {
                   xTexelC${y} = getX(batch, xR, xCOffset, d1);

                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${y}.zw = vec2(0.0);
                   }
                   xTexelC${y}Ready = 1;
                 }
               `,l===1&&y>0?d+=`
                 xC${y} = vec4(xTexelC${y-2}.zw, xTexelC${y}.xy);
                 `:d+=`
                   xCOffset = xC + 1 - 2;

                   if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       previous.zw = vec2(0.0);
                     }

                     xC${y} = vec4(previous.zw, xTexelC${y}.xy);
                   } else {
                     xC${y} = vec4(0.0, 0.0, xTexelC${y}.xy);
                   }
                   `):d+=`
                 if (xC >= 0 && xC < inDims[1] && xTexelC${y}Ready == 0) {
                   xTexelC${y} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${y}.zw = vec2(0.0);
                   }
                   xTexelC${y}Ready = 1;
                 }

                 xC${y} = xTexelC${y};
                 `,y+1<c)){let b=s%2===0?S.nearestLargerEven(l):l;l%2===0&&s%2===1||l%2!==0&&s%2!==1?(d+=`
                   xCOffset = xC + imod(pads[1], 2) + ${b};

                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                     xTexelC${y+1} = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       xTexelC${y+1}.zw = vec2(0.0);
                     }
                     xTexelC${y+1}Ready = 1;
                   }
                   `,l>1?d+=`
                     xCOffset -= 2;
                     if (xCOffset >= 0 && xCOffset < inDims[1]) {
                      previous = getX(batch, xR, xCOffset, d1);
                      xC${y+1} = vec4(previous.zw, xTexelC${y+1}.xy);
                     } else {
                      xC${y+1} = vec4(0.0, 0.0, xTexelC${y+1}.xy);
                     }
                     `:d+=`
                     xC${y+1} = vec4(xTexelC${y}.zw, xTexelC${y+1}.xy);
                     `):b===1?d+=`
                     xC${y+1} = xTexelC${y};
                     `:d+=`
                     xCOffset = xC + ${b};

                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                       xTexelC${y+1} = getX(batch, xR, xCOffset, d1);
                       if (xCOffset + 1 >= inDims[1]) {
                         xTexelC${y+1}.zw = vec2(0.0);
                       }
                       xTexelC${y+1}Ready = 1;
                     }

                     xC${y+1} = xTexelC${y+1};
                     `}}else y<c&&(s%2===1?(d+=`
                 xCOffset = xC + 1 - strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y}Ready == 0) {
                   xTexelC${y} = getX(batch, xR, xCOffset, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${y}.zw = vec2(0.0);
                   }
                   xTexelC${y}Ready = 1;
                 }

                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${y+1}Ready == 0) {
                   xTexelC${y+1} = getX(batch, xR, xC + 1, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xC + 2 >= inDims[1]) {
                     xTexelC${y+1}.zw = vec2(0.0);
                   }
                   xTexelC${y+1}Ready = 1;
                 }

                 xC${y} = vec4(xTexelC${y}.zw, xTexelC${y+1}.zw);
               `,y+1<c&&(d+=`
                   final = vec4(0.0);
                   xCOffset = xC + 1 + strides[1];
                   if(xCOffset >= 0 && xCOffset < inDims[1]) {
                     final = getX(batch, xR, xCOffset, d1);
                   }
                   xC${y+1} = vec4(xTexelC${y+1}.xy, final.xy);
                 `)):(d+=`
                 if(xC >= 0 && xC < inDims[1] && xTexelC${y}Ready == 0) {
                   xTexelC${y} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${y}.zw = vec2(0.0);
                   }
                   xTexelC${y}Ready = 1;
                 }

                 xCOffset = xC + strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                   xTexelC${y+1} = getX(batch, xR, xCOffset, d1);
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${y+1}.zw = vec2(0.);
                   }
                   xTexelC${y+1}Ready = 1;
                 }

                 xC${y} = vec4(
                   xTexelC${y}.xy, xTexelC${y+1}.xy);
               `,y+1<c&&(d+=`
                   xC${y+1} = vec4(xTexelC${y}.zw, xTexelC${y+1}.zw);
                 `)));y<c&&(d+=`
             wTexel = getW(r, ${y}, d1, d2);
             dotProd += xC${y}.xxzz * vec4(wTexel.xy, wTexel.xy);
             if(d1 + 1 < ${t.inChannels}) {
               dotProd += xC${y}.yyww * vec4(wTexel.zw, wTexel.zw);
             }
           `,y+1<c&&(d+=`
               wTexel = getW(r, ${y+1}, d1, d2);
               dotProd += xC${y+1}.xxzz * vec4(wTexel.xy, wTexel.xy);
               if(d1 + 1 < ${t.inChannels}) {
                 dotProd += xC${y+1}.yyww * vec4(wTexel.zw, wTexel.zw);
               }
             `))}d+=`
     }
   `,d+=`
     }
   `,d+=`
     }
   `;let m="",f="";o&&(n?m=`vec4 activation(vec4 a) {
           vec4 b = getPreluActivationWeightsAtOutCoords();
           ${o}
         }`:i?m=`vec4 activation(vec4 a) {
           vec4 b = getLeakyreluAlphaAtOutCoords();
           ${o}
         }`:m=`vec4 activation(vec4 x) {
           ${o}
         }`,f="result = activation(result);");let g=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),n&&this.variableNames.push("preluActivationWeights"),i&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
       ${m}

       void main() {
         ivec4 coords = getOutputCoords();
         int batch = coords.x;
         ivec2 xRCCorner = coords.yz * strides - pads;
         int d2 = coords.w;
         int xRCorner = xRCCorner.x;
         int xCCorner = xRCCorner.y;

         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
         vec4 dotProd = vec4(0.000000000000001);

         ${d}

         vec4 result = dotProd - vec4(0.000000000000001);
         ${g}
         ${f}
         setOutput(result);
       }
     `}};var Mx=class{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=t,this.enableShapeUniforms=at(this.outputShape.length);let{dataFormat:o}=e,n=Ct(),i=o==="channelsLast",s=i?1:2,a=i?2:3,l=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${t[2]} && pos < ${t[1]}) {`,u="";for(let c=0;c<=1;c++)for(let p=0;p<=1;p++)u+=`
          blockIndex = rc.z + ${p};
          pos = rc.y + ${c};

          ${l}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${s}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${a}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${i}) {
                  innerDims = vec2(d1, ch);
                  result[${c*2+p}] = getChannel(
                    getA(rc.x, d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${c*2+p}] = getChannel(
                    getA(rc.x, ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${u}

        ${n.output} = result;
      }
    `}};function Bx(r,t){let e=r.length;return e>=3?t?[...r.slice(0,-3),r[e-3]*r[e-2],r[e-1]]:[...r.slice(0,-3),r[e-3],r[e-2]*r[e-1]]:!t&&e===1&&r[0]>1?[r[0],1]:null}function Vx({x:r,filter:t,convInfo:e,backend:o,bias:n=null,preluActivationWeights:i=null,leakyreluAlpha:s=0,activation:a=null}){let l=r.shape,u=o.texData.get(r.dataId),c=e.inChannels,p=l[0]*l[1]*l[2],d=e.outChannels,m=e.dataFormat==="channelsLast",f=!1,g=!1,x,y=[];if(i!=null){let N=Bx(i.shape,m);N!=null&&(i=ue({inputs:{x:i},backend:o,attrs:{shape:N}}),y.push(i))}if(n!=null){let N=Bx(n.shape,m);N!=null&&(n=ue({inputs:{x:n},backend:o,attrs:{shape:N}}),y.push(n))}if(!((p===1||d===1)&&c>l1)&&u.isPacked&&m&&u.texture!=null&&l[2]%2!==0&&S.arraysEqual(u.shape.slice(-3),l.slice(-3))){let N=l[0]*l[1]*(l[2]+1),M={dataId:r.dataId,shape:[1,N,e.inChannels],dtype:r.dtype},B=u.shape;u.shape=u.shape.slice(),u.shape[u.shape.length-2]++,S.assert(ma(u.shape,M.shape),()=>`packed reshape ${u.shape} to ${M.shape} isn't free`);let W=ue({inputs:{x:t},backend:o,attrs:{shape:[1,e.inChannels,e.outChannels]}});y.push(W);let H=ya({a:M,b:W,backend:o,transposeA:f,transposeB:g,bias:n,activation:a,preluActivationWeights:i,leakyreluAlpha:s}),K=o.texData.get(H.dataId);S.assert(K.isPacked,()=>"batchMatMul result is expected to be packed"),u.shape=B,K.shape=e.outShape,x=Dt({inputs:{x:H},backend:o}),x.shape=e.outShape,y.push(H)}else{let N=e.outHeight*e.outWidth,M=ue({inputs:{x:r},backend:o,attrs:{shape:m?[e.batchSize,N,e.inChannels]:[e.batchSize,e.inChannels,N]}}),B=ue({inputs:{x:t},backend:o,attrs:{shape:[1,e.inChannels,e.outChannels]}}),W=ya({a:m?M:B,b:m?B:M,transposeA:!m,transposeB:g,backend:o,bias:n,activation:a,preluActivationWeights:i,leakyreluAlpha:s});x=ue({inputs:{x:W},backend:o,attrs:{shape:e.outShape}}),y.push(M),y.push(B),y.push(W)}for(let N of y)o.disposeIntermediateTensorInfo(N);return x}function Wx({x:r,filter:t,convInfo:e,backend:o,bias:n=null,preluActivationWeights:i=null,leakyreluAlpha:s=0,activation:a=null}){let{filterWidth:l,filterHeight:u,inChannels:c,outWidth:p,outHeight:d,dataFormat:m}=e,f=m==="channelsLast",g=l*u*c,x=d*p,y=[e.batchSize,g,x],b=!0,I=!1,N=[];if(i!=null){let je=Bx(i.shape,f);je!=null&&(i=ue({inputs:{x:i},backend:o,attrs:{shape:je}}),N.push(i))}if(n!=null){let je=Bx(n.shape,f);je!=null&&(n=ue({inputs:{x:n},backend:o,attrs:{shape:je}}),N.push(n))}let M=ue({inputs:{x:t},backend:o,attrs:{shape:[1,g,S.sizeFromShape(t.shape)/g]}});N.push(M);let B=new Mx(y,e),W=[r.shape,[e.padInfo.top,e.padInfo.left],[e.strideHeight,e.strideWidth],[e.dilationHeight,e.dilationWidth],[e.inChannels],[e.filterWidth*e.inChannels],[e.outWidth]],H=o.runWebGLProgram(B,[r],"float32",W),K=ue({inputs:{x:H},backend:o,attrs:{shape:y}});N.push(H),N.push(K);let X=n!=null,re=i!=null,ce=a==="leakyrelu",pe=a?ri(a,!0):null,be=new Xc(f?K.shape:M.shape,f?M.shape:K.shape,f?[e.batchSize,x,e.outChannels]:[e.batchSize,e.outChannels,x],b,I,X,pe,re,ce),we=f?[K,M]:[M,K];if(n&&we.push(n),re&&we.push(i),ce){let je=o.makeTensorInfo([],"float32",S.createScalarValue(s,"float32"));we.push(je),N.push(je)}let Te=o.runWebGLProgram(be,we,"float32"),qe=ue({inputs:{x:Te},backend:o,attrs:{shape:e.outShape}});N.push(Te);for(let je of N)o.disposeIntermediateTensorInfo(je);return qe}function oJ(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,filter:i}=t,{strides:s,pad:a,dataFormat:l,dilations:u,dimRoundingMode:c}=o,p=P.convertConv2DDataFormat(l),d=P.computeConv2DInfo(n.shape,i.shape,s,u,a,c,!1,p),m;if(d.filterHeight===1&&d.filterWidth===1&&d.dilationHeight===1&&d.dilationWidth===1&&d.strideHeight===1&&d.strideWidth===1&&(d.padInfo.type==="SAME"||d.padInfo.type==="VALID"))m=Vx({x:n,filter:i,convInfo:d,backend:e});else if(d.strideWidth<=2&&p==="channelsLast"&&G().getBool("WEBGL_EXP_CONV")){let g=new Zc(d),x=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];m=e.runWebGLProgram(g,[n,i],"float32",x)}else if(G().getBool("WEBGL_CONV_IM2COL"))m=Wx({x:n,filter:i,convInfo:d,backend:e});else{let g=new Qc(d);m=e.runWebGLProgram(g,[n,i],"float32")}let f=ue({inputs:{x:m},backend:e,attrs:{shape:d.outShape}});return e.disposeIntermediateTensorInfo(m),f}var mD={kernelName:yl,backendName:"webgl",kernelFunc:oJ};var Ux=class{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;let e=t.strideHeight,o=t.strideWidth,n=t.padInfo.top,i=t.padInfo.left,s=t.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${t.batchSize}; b++) {
          for (int yR = 0; yR < ${t.outHeight}; yR++) {
            int xR = wR + yR * ${e} - ${n};

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${t.outWidth}; yC++) {
              int xC = wC + yC * ${o} - ${i};

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              ${s?`float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);`:`float dyValue = getDy(b, d2, yR, yC);
              float xValue = getX(b, d1, xR, xC);
              dotProd += (xValue * dyValue);`}
            }
          }
        }
        setOutput(dotProd);
      }
    `}},zx=class{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;let e=t.filterHeight,o=t.filterWidth,n=t.strideHeight,i=t.strideWidth,s=t.dataFormat==="channelsLast",a=e-1-t.padInfo.top,l=o-1-t.padInfo.left,u=s?1:2,c=s?2:3,p=s?3:1;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${l});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${p}];

        ivec2 dyCorner = ivec2(coords[${u}], coords[${c}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${e}; wR++) {
          float dyR = float(dyRCorner + wR) / ${n}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${e} - 1 - wR;

          for (int wC = 0; wC < ${o}; wC++) {
            float dyC = float(dyCCorner + wC) / ${i}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${o} - 1 - wC;

            for (int d2 = 0; d2 < ${t.outChannels}; d2++) {

              if (${s}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}},Gx=class{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;let e=t.strideDepth,o=t.strideHeight,n=t.strideWidth,i=t.padInfo.front,s=t.padInfo.top,a=t.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${t.batchSize}; b++) {
          for (int yF = 0; yF < ${t.outDepth}; yF++) {
            int xF = wF + yF * ${e} - ${i};

            if (xF < 0 || xF >= ${t.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${t.outHeight}; yR++) {
              int xR = wR + yR * ${o} - ${s};

              if (xR < 0 || xR >= ${t.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${t.outWidth}; yC++) {
                int xC = wC + yC * ${n} - ${a};

                if (xC < 0 || xC >= ${t.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}},Hx=class{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;let e=t.filterDepth,o=t.filterHeight,n=t.filterWidth,i=t.strideDepth,s=t.strideHeight,a=t.strideWidth,l=e-1-t.padInfo.front,u=o-1-t.padInfo.top,c=n-1-t.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${l}, ${u}, ${c});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${e}; wF++) {
          float dyF = float(dyFCorner + wF) / ${i}.0;

          if (dyF < 0.0 || dyF >= ${t.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${e} - 1 - wF;

          for (int wR = 0; wR < ${o}; wR++) {
            float dyR = float(dyRCorner + wR) / ${s}.0;

            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${o} - 1 - wR;

            for (int wC = 0; wC < ${n}; wC++) {
              float dyC = float(dyCCorner + wC) / ${a}.0;

              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${n} - 1 - wC;

              for (int d2 = 0; d2 < ${t.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function nJ(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,dy:i}=t,{strides:s,pad:a,dataFormat:l,dimRoundingMode:u,filterShape:c}=o,p=P.convertConv2DDataFormat(l),d=P.computeConv2DInfo(n.shape,c,s,1,a,u,!1,p),m=new Ux(d);return e.runWebGLProgram(m,[n,i],"float32")}var fD={kernelName:vl,backendName:"webgl",kernelFunc:nJ};var Kx=class{constructor(t){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=t.inShape,this.enableShapeUniforms=at(this.outputShape.length);let e=t.filterHeight,o=t.filterWidth,n=e-1-t.padInfo.top,i=o-1-t.padInfo.left;this.userCode=`
      const ivec2 pads = ivec2(${n}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];

        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        vec4 result = vec4(0.);
        for (int wR = 0; wR < ${e}; wR++) {
          float dyR = float(dyRCorner + wR) / strides[0];
          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);
          int wRPerm = ${e} - 1 - wR;

          for (int wC = 0; wC < ${o}; wC++) {
            int wCPerm = ${o} - 1 - wC;

            float dyC = float(dyCCorner + wC) / strides[1];
            bool idyCVal = (dyC >= 0.0) && (dyC < ${t.outWidth}.0)
              && (fract(dyC) == 0.0);
            int idyC = int(dyC);

            float dyC2 = float(dyCCorner + wC + 1) / strides[1];
            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${t.outWidth}.0)
              && (fract(dyC2) == 0.0);
            int idyC2 = int(dyC2);

            if (idyCVal && idyCVal2) {
              for (int d2 = 0; d2 < ${t.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?
                  dySample : getDy(batch, idyR, idyC2, d2);

                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));

                dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample2.xy : dySample2.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal) {
              for (int d2 = 0; d2 < ${t.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal2) {
              for (int d2 = 0; d2 < ${t.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC2, d2);
                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            }
          }
        }
        setOutput(result);
      }
    `}};function iJ(r){let{inputs:t,backend:e,attrs:o}=r,{dy:n,filter:i}=t,{inputShape:s,strides:a,pad:l,dataFormat:u,dimRoundingMode:c}=o,p=P.convertConv2DDataFormat(u),d=P.computeConv2DInfo(s,i.shape,a,1,l,c,!1,p);if(G().getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&p==="channelsLast"){let m=[[d.strideHeight,d.strideWidth]],f=new Kx(d);return e.runWebGLProgram(f,[n,i],"float32",m)}else{let m=new zx(d);return e.runWebGLProgram(m,[n,i],"float32")}}var hD={kernelName:bl,backendName:"webgl",kernelFunc:iJ};function sJ(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,filter:i}=t,{strides:s,pad:a,dilations:l}=o,u=P.computeConv3DInfo(n.shape,i.shape,s,l,a),c=new Lx(u);return e.runWebGLProgram(c,[n,i],"float32")}var gD={kernelName:Sl,backendName:"webgl",kernelFunc:sJ};function aJ(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,dy:i}=t,{strides:s,pad:a,filterShape:l}=o,u=P.computeConv3DInfo(n.shape,l,s,1,a),c=new Gx(u);return e.runWebGLProgram(c,[n,i],"float32")}var xD={kernelName:mm,backendName:"webgl",kernelFunc:aJ};function lJ(r){let{inputs:t,backend:e,attrs:o}=r,{dy:n,filter:i}=t,{pad:s,strides:a,inputShape:l}=o,u=P.computeConv3DInfo(l,i.shape,a,1,s),c=new Hx(u);return e.runWebGLProgram(c,[n,i],"float32")}var yD={kernelName:wl,backendName:"webgl",kernelFunc:lJ};var uJ=Bo+`
  return cos(x);
`,cJ=`
  vec4 result = cos(x);
  bvec4 isNaN = isnan(x);
  ${ho}
  return result;
`,pJ=Ie({opSnippet:uJ,packedOpSnippet:cJ}),vD={kernelName:_l,backendName:"webgl",kernelFunc:pJ};var dJ=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,mJ=Ie({opSnippet:dJ}),bD={kernelName:Cl,backendName:"webgl",kernelFunc:mJ};var qx=class{constructor(t,e,o,n,i){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];let[s,a,l,u]=t,[c]=e,[p,d]=o;this.outputShape=[c,p,d,u];let m=n==="bilinear"?1:0,[f,g]=[`${a-1}.0`,`${l-1}.0`],[x,y,b]=p>1?[`${(a-1)/(p-1)}`,"(y2-y1) * height_ratio",`y1*${f} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${f}`],[I,N,M]=d>1?[`${(l-1)/(d-1)}`,"(x2-x1) * width_ratio",`x1*${g} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${g}`];this.userCode=`
      const float height_ratio = float(${x});
      const float width_ratio = float(${I});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${s}) {
          return;
        }

        float height_scale = ${y};
        float width_scale = ${N};

        float in_y = ${b};
        if( in_y < 0.0 || in_y > ${f} ) {
          setOutput(float(${i}));
          return;
        }
        float in_x = ${M};
        if( in_x < 0.0 || in_x > ${g} ) {
          setOutput(float(${i}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${m} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}};var fJ=r=>{let{inputs:t,backend:e,attrs:o}=r,{image:n,boxes:i,boxInd:s}=t,{cropSize:a,method:l,extrapolationValue:u}=o,c=new qx(n.shape,i.shape,a,l,u);return e.runWebGLProgram(c,[n,i,s],"float32")},SD={kernelName:Tl,backendName:"webgl",kernelFunc:fJ};var Jc=function(r){return r.Prod="*",r.Sum="+",r}(Jc||{}),fd=class{constructor(t,e,o,n){this.op=t,this.outputShape=e,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];let i=this.outputShape.length,s=this.op===Jc.Prod?"1.0":"0.0",a=o?s:`getX(${wD(i,"coords",this.op)})`,l=this.outputShape[this.outputShape.length-1],u="",c="";o?(u=n?`end != ${l-1}`:"end != 0",c=n?"end + 1":"end - 1"):(u=n?`end + pow2 < ${l}`:"end >= pow2",c=n?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${Me(i)} coords = getOutputCoords();
        int end = ${_D(i,"coords",this.op)};
        float val = ${a};
        int pow2 = int(pow(2.0, index));
        if (${u}) {
          int idx = ${c};
          ${_D(i,"coords",this.op)} = idx;
          val ${this.op}= getX(${wD(i,"coords",this.op)});
        }
        setOutput(val);
      }
    `}};function wD(r,t,e){if(r===1)return`${t}`;if(r===2)return`${t}.x, ${t}.y`;if(r===3)return`${t}.x, ${t}.y, ${t}.z`;if(r===4)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw new Error(`Cumulative ${e} for rank ${r} is not yet supported`)}function _D(r,t,e){if(r===1)return`${t}`;if(r===2)return`${t}.y`;if(r===3)return`${t}.z`;if(r===4)return`${t}.w`;throw new Error(`Cumulative ${e} for rank ${r} is not yet supported`)}function jx(r,t,e,o,n,i){let s=t.shape.length,a=P.getAxesPermutation([o],s),l=t;a!=null&&(l=vt({inputs:{x:t},backend:e,attrs:{perm:a}}));let u=P.getInnerMostAxes(1,s)[0];if(u!==s-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${o}`);let c=l.shape[u],p=Dt({inputs:{x:l},backend:e});for(let d=0;d<=Math.ceil(Math.log2(c))-1;d++){let m=new fd(r,l.shape,!1,i),f=[[d]],g=p;p=e.runWebGLProgram(m,[p],p.dtype,f),e.disposeIntermediateTensorInfo(g)}if(n){let d=new fd(r,l.shape,n,i),m=p;p=e.runWebGLProgram(d,[p],p.dtype),e.disposeIntermediateTensorInfo(m)}if(a!=null){let d=P.getUndoAxesPermutation(a),m=vt({inputs:{x:p},backend:e,attrs:{perm:d}});return e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(l),m}return p}function hJ(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{axis:i,exclusive:s,reverse:a}=o;return jx(Jc.Prod,n,e,i,s,a)}var CD={kernelName:kl,backendName:"webgl",kernelFunc:hJ};function gJ(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{axis:i,exclusive:s,reverse:a}=o;return jx(Jc.Sum,n,e,i,s,a)}var kD={kernelName:Il,backendName:"webgl",kernelFunc:gJ};function xJ(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,weights:i}=t,{size:s,binaryOutput:a}=o;if(n.shape.length===1){let l=e.readSync(n.dataId),u=e.readSync(i.dataId),c=ux(l,u,i.dtype,i.shape,s);return e.makeTensorInfo([s],i.dtype,c)}else if(n.shape.length===2){let l=e.bufferSync(n),u=e.bufferSync(i),c=u$(l,u,s,a);return e.makeTensorInfo(c.shape,i.dtype,c.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${n.shape.length}.`)}var ID={kernelName:El,backendName:"webgl",kernelFunc:xJ};var Xx=class{constructor(t,e,o){this.variableNames=["x"],this.outputShape=[],this.outputShape=t,this.blockSize=e,this.dataFormat=o,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${e};
      int offset_h = imod(h, ${e});
      int in_w = w / ${e};
      int offset_w = imod(w, ${e});
      int offset_d = (offset_h * ${e} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};function yJ(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{blockSize:i,dataFormat:s}=o,a=n.shape[0],l=s==="NHWC"?n.shape[1]:n.shape[2],u=s==="NHWC"?n.shape[2]:n.shape[3],c=s==="NHWC"?n.shape[3]:n.shape[1],p=l*i,d=u*i,m=c/(i*i),f=s==="NHWC"?[a,p,d,m]:[a,m,p,d],g=new Xx(f,i,s);return e.runWebGLProgram(g,[n],n.dtype)}var TD={kernelName:Nl,backendName:"webgl",kernelFunc:yJ};var ep=class{constructor(t,e=!1,o=null,n=!1,i=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=at(this.outputShape.length);let s=t.filterHeight,a=t.filterWidth,l=t.outChannels/t.inChannels,u="",c="";o&&(n?u=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${o}
        }`:i?u=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${o}
        }`:u=`
          float activation(float x) {
            ${o}
          }
        `,c="result = activation(result);");let p=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),n&&this.variableNames.push("preluActivationWeights"),i&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${u}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${l};
        int q = d2 - d1 * ${l};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${s}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${a}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${p}
        ${c}
        setOutput(result);
      }
    `}};var tp=class{constructor(t,e=!1,o=null,n=!1,i=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=at(this.outputShape.length);let s=t.outChannels/t.inChannels,a=t.padInfo.left,l=t.strideWidth,u=t.dilationWidth,c=t.filterHeight,p=t.filterWidth,d=p,m=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let y=0;y<p;y++)m+=`
          vec4 xTexelC${y*2};
          int xTexelC${y*2}Ready;
          vec4 xTexelC${y*2+1};
          int xTexelC${y*2+1}Ready;
          vec4 xC${y};`;m+=`
    for (int r = 0; r < ${c}; r++) {
      `;for(let y=0;y<p;y++)m+=`
          xTexelC${y*2} = vec4(0.0);
          xTexelC${y*2}Ready = 0;
          xTexelC${y*2+1} = vec4(0.0);
          xTexelC${y*2+1}Ready = 0;
          xC${y} = vec4(0.0);`;m+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let y=0;y<(d+1)/2;y++){let b=y*2;if(m+=`
          xC = xCCorner + ${b*u};
          `,l===1){if(b<p&&(a%2===1?(m+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b}Ready == 0) {
                  xTexelC${b} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${b}.zw = vec2(0.0);
                  }
                  xTexelC${b}Ready = 1;
                }
              `,u===1&&b>0?m+=`
                xC${b} = vec4(xTexelC${b-2}.zw, xTexelC${b}.xy);
                `:m+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${b} = vec4(previous.zw, xTexelC${b}.xy);
                  } else {
                    xC${b} = vec4(0.0, 0.0, xTexelC${b}.xy);
                  }
                  `):m+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${b}Ready == 0) {
                  xTexelC${b} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${b}.zw = vec2(0.0);
                  }
                  xTexelC${b}Ready = 1;
                }

                xC${b} = xTexelC${b};
                `,b+1<p)){let I=a%2===0?S.nearestLargerEven(u):u;u%2===0&&a%2===1||u%2!==0&&a%2!==1?(m+=`
                  xCOffset = xC + imod(pads[1], 2) + ${I};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                    xTexelC${b+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${b+1}.zw = vec2(0.0);
                    }
                    xTexelC${b+1}Ready = 1;
                  }
                  `,u>1?m+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);
                     xC${b+1} = vec4(previous.zw, xTexelC${b+1}.xy);
                    } else {
                     xC${b+1} = vec4(0.0, 0.0, xTexelC${b+1}.xy);
                    }
                    `:m+=`
                    xC${b+1} = vec4(xTexelC${b}.zw, xTexelC${b+1}.xy);
                    `):I===1?m+=`
                    xC${b+1} = xTexelC${b};
                    `:m+=`
                    xCOffset = xC + ${I};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                      xTexelC${b+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${b+1}.zw = vec2(0.0);
                      }
                      xTexelC${b+1}Ready = 1;
                    }

                    xC${b+1} = xTexelC${b+1};
                    `}}else b<p&&(a%2===1?(m+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b}Ready == 0) {
                  xTexelC${b} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${b}.zw = vec2(0.0);
                  }
                  xTexelC${b}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${b+1}Ready == 0) {
                  xTexelC${b+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${b+1}.zw = vec2(0.0);
                  }
                  xTexelC${b+1}Ready = 1;
                }

                xC${b} = vec4(xTexelC${b}.zw, xTexelC${b+1}.zw);
              `,b+1<p&&(m+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${b+1} = vec4(xTexelC${b+1}.xy, final.xy);
                `)):(m+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${b}Ready == 0) {
                  xTexelC${b} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${b}.zw = vec2(0.0);
                  }
                  xTexelC${b}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                  xTexelC${b+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${b+1}.zw = vec2(0.);
                  }
                  xTexelC${b+1}Ready = 1;
                }

                xC${b} = vec4(
                  xTexelC${b}.xy, xTexelC${b+1}.xy);
              `,b+1<p&&(m+=`
                  xC${b+1} = vec4(xTexelC${b}.zw, xTexelC${b+1}.zw);
                `)));b<p&&(m+=`
            wTexel = getW(r, ${b}, d1, q);
            dotProd += xC${b} * vec4(wTexel.xz, wTexel.xz);
          `,b+1<p&&(m+=`
              wTexel = getW(r, ${b+1}, d1, q);
              dotProd += xC${b+1} * vec4(wTexel.xz, wTexel.xz);
            `))}m+=`
    }
  `,m+=`
      }
    `;let f="",g="";o&&(n?f=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${o}
        }`:i?f=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${o}
        }`:f=`vec4 activation(vec4 x) {
          ${o}
        }`,g="result = activation(result);");let x=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),n&&this.variableNames.push("preluActivationWeights"),i&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${f}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${s};
        int q = d2 - d1 * ${s};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${m}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${x}
        ${g}
        setOutput(result);
      }
    `}};function vJ(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,filter:i}=t,{strides:s,pad:a,dilations:l,dimRoundingMode:u}=o,c=l;c==null&&(c=[1,1]),S.assert(P.eitherStridesOrDilationsAreOne(s,c),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${s} and dilations '${c}'`);let p=P.computeConv2DInfo(n.shape,i.shape,s,c,a,u,!0),d;G().getBool("WEBGL_PACK_DEPTHWISECONV")&&p.strideWidth<=2&&p.outChannels/p.inChannels===1?d=new tp(p):d=new ep(p);let m=[[p.padInfo.top,p.padInfo.left],[p.strideHeight,p.strideWidth],[p.dilationHeight,p.dilationWidth],[p.inHeight,p.inWidth]];return e.runWebGLProgram(d,[n,i],"float32",m)}var ED={kernelName:Rl,backendName:"webgl",kernelFunc:vJ};var Yx=class{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;let e=t.strideHeight,o=t.strideWidth,n=t.padInfo.top,i=t.padInfo.left,s=t.outChannels/t.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${s} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${t.batchSize}; b++) {
          for (int yR = 0; yR < ${t.outHeight}; yR++) {
            int xR = wR + yR * ${e} - ${n};

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${t.outWidth}; yC++) {
              int xC = wC + yC * ${o} - ${i};

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}},Qx=class{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;let e=t.filterHeight,o=t.filterWidth,n=t.strideHeight,i=t.strideWidth,s=e-1-t.padInfo.top,a=o-1-t.padInfo.left,l=t.outChannels/t.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${s}, ${a});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${e}; wR++) {
          float dyR = float(dyRCorner + wR) / ${n}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${e} - 1 - wR;

          for (int wC = 0; wC < ${o}; wC++) {
            float dyC = float(dyCCorner + wC) / ${i}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${o} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${l}; dm++) {
              int d2 = d1 * ${l} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function bJ(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,dy:i}=t,{strides:s,dilations:a,pad:l,dimRoundingMode:u,filterShape:c}=o,p=P.computeConv2DInfo(n.shape,c,s,a,l,u,!0),d=new Yx(p);return e.runWebGLProgram(d,[n,i],"float32")}var ND={kernelName:Pl,backendName:"webgl",kernelFunc:bJ};function SJ(r){let{inputs:t,backend:e,attrs:o}=r,{dy:n,filter:i}=t,{strides:s,dilations:a,pad:l,dimRoundingMode:u,inputShape:c}=o,p=P.computeConv2DInfo(c,i.shape,s,a,l,u,!0),d=new Qx(p);return e.runWebGLProgram(d,[n,i],"float32")}var RD={kernelName:$l,backendName:"webgl",kernelFunc:SJ};var Zx=class{constructor(t){this.variableNames=["X"],this.outputShape=[t,t],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}};function wJ(r){let{inputs:t,backend:e}=r,{x:o}=t,n=[...o.shape,...o.shape],i=S.sizeFromShape(o.shape),s=ue({inputs:{x:o},backend:e,attrs:{shape:[i]}}),a=new Zx(i),l=e.runWebGLProgram(a,[s],s.dtype),u=ue({inputs:{x:l},backend:e,attrs:{shape:n}});return e.disposeIntermediateTensorInfo(s),e.disposeIntermediateTensorInfo(l),u}var PD={kernelName:Al,backendName:"webgl",kernelFunc:wJ};var Jx=class{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;let{inHeight:e,inWidth:o,padInfo:n,strideHeight:i,strideWidth:s,filterHeight:a,filterWidth:l,dilationHeight:u,dilationWidth:c}=t,{top:p,left:d}=n;this.userCode=`
      const ivec2 strides = ivec2(${i}, ${s});
      const ivec2 pads = ivec2(${p}, ${d});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${a}; h++) {
          int hIn = hBeg + h * ${u};

          if (hIn >= 0 && hIn < ${e}) {
            for (int w = 0; w < ${l}; w++) {
              int wIn = wBeg + w * ${c};

              if (wIn >= 0 && wIn < ${o}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}};function _J(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,filter:i}=t,{strides:s,pad:a,dilations:l}=o,u=P.computeDilation2DInfo(n.shape,i.shape,s,a,"NHWC",l),c,p=new Jx(u);c=e.runWebGLProgram(p,[n,i],"float32");let d=ue({inputs:{x:c},backend:e,attrs:{shape:u.outShape}});return e.disposeIntermediateTensorInfo(c),d}var $D={kernelName:Dl,backendName:"webgl",kernelFunc:_J};function CJ(r){let{inputs:t,backend:e,attrs:o}=r,{equation:n}=o,i=t,{allDims:s,summedDims:a,idDims:l}=P.decodeEinsumEquation(n,i.length);P.checkEinsumDimSizes(s.length,l,i);let{path:u,steps:c}=P.getEinsumComputePath(a,l),p=c.length,d=null,m=s.length,f=[];for(let g=0;g<p;++g){for(let x of c[g]){let{permutationIndices:y,expandDims:b}=P.getEinsumPermutation(m,l[x]),I;P.isIdentityPermutation(y)?I=i[x]:(I=vt({inputs:{x:i[x]},backend:e,attrs:{perm:y}}),f.push(I));let N=I.shape.slice();for(let M=0;M<b.length;++M)N.splice(b[M],0,1);S.arraysEqual(I.shape,N)||(I=ue({inputs:{x:I},backend:e,attrs:{shape:N}}),f.push(I)),d===null?d=I:(d=dd({inputs:{a:I,b:d},backend:e}),f.push(d))}g<p-1&&(u[g]>=0&&(d=xa({inputs:{x:d},backend:e,attrs:{axis:u[g]-(s.length-m),keepDims:!1}}),f.push(d)),m--)}for(let g of f)g!==d&&e.disposeIntermediateTensorInfo(g);return d}var AD={kernelName:Ol,backendName:"webgl",kernelFunc:CJ};var kJ="return (x >= 0.0) ? x : (exp(x) - 1.0);",IJ=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,TJ=Ie({opSnippet:kJ,packedOpSnippet:IJ}),DD={kernelName:Ll,backendName:"webgl",kernelFunc:TJ};var EJ="return (b >= 0.0) ? a : a * (b + 1.0);",NJ=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,RJ=r=>{let{inputs:t,backend:e}=r,{dy:o,y:n}=t,i=G().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new fo(NJ,o.shape,n.shape):new Br(EJ,o.shape,n.shape);return e.runWebGLProgram(i,[o,n],o.dtype)},FD={kernelName:fm,backendName:"webgl",kernelFunc:RJ};var PJ=`
  return vec4(equal(a, b));
`,$J="return float(a == b);",AJ=nt({opSnippet:$J,packedOpSnippet:PJ,dtype:"bool",cpuKernelImpl:f$}),OD={kernelName:yi,backendName:"webgl",kernelFunc:AJ};var DJ=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${P.ERF_P};
  float a1 = ${P.ERF_A1};
  float a2 = ${P.ERF_A2};
  float a3 = ${P.ERF_A3};
  float a4 = ${P.ERF_A4};
  float a5 = ${P.ERF_A5};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,FJ=Ie({opSnippet:DJ}),LD={kernelName:Ml,backendName:"webgl",kernelFunc:FJ};var OJ=Bo+`
  return exp(x);
`,LJ=`
  vec4 result = exp(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,m1=Ie({opSnippet:OJ,packedOpSnippet:LJ,cpuKernelImpl:h$,dtype:"float32"}),MD={kernelName:vi,backendName:"webgl",kernelFunc:m1};function e0(r){let{inputs:t,attrs:e,backend:o}=r,{dim:n}=e,{input:i}=t,s=i.shape.length,a=i.shape.slice(),l=n;return n<0&&(S.assert(-(s+1)<=n,()=>`Axis must be in the interval [${-(s+1)}, ${s}]`),l=s+n+1),a.splice(l,0,1),ue({inputs:{x:i},backend:o,attrs:{shape:a}})}var BD={kernelName:Bl,backendName:"webgl",kernelFunc:e0};var VD="return exp(x) - 1.0;",MJ=Ie({opSnippet:VD,packedOpSnippet:VD,cpuKernelImpl:g$}),WD={kernelName:bi,backendName:"webgl",kernelFunc:MJ};var hd=class{constructor(t,e,o){this.variableNames=["real","imag"];let n=e[1];this.outputShape=e;let i=o?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,s=o?`${n}.0`:"1.0",a;if(t==="real")a="return real * expR - imag * expI;";else if(t==="imag")a="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${t}.`);this.userCode=`
      const float exponentMultiplier = ${i};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${a}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${n});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${n}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${s};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}};function t0(r,t,e){let o=e.texData.get(r.dataId),n=S.sizeFromShape(r.shape),i=r.shape[r.shape.length-1],s=n/i,a=ue({inputs:{x:r},backend:e,attrs:{shape:[s,i]}}),l=a.shape,u=new hd("real",l,t),c=new hd("imag",l,t),p=[{dataId:o.complexTensorInfos.real.dataId,dtype:o.complexTensorInfos.real.dtype,shape:l},{dataId:o.complexTensorInfos.imag.dataId,dtype:o.complexTensorInfos.imag.dtype,shape:l}],d=e.runWebGLProgram(u,p,"float32"),m=e.runWebGLProgram(c,p,"float32"),f=Vr({inputs:{real:d,imag:m},backend:e});e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(m);let g=ue({inputs:{x:f},backend:e,attrs:{shape:r.shape}});return e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(f),g}function BJ(r){let{inputs:t,backend:e}=r,{input:o}=t;return t0(o,!1,e)}var UD={kernelName:Vl,backendName:"webgl",kernelFunc:BJ};var r0=class{constructor(t,e){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=t,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}};function ni(r){let{backend:t,attrs:e}=r,{shape:o,value:n}=e,{dtype:i}=e;if(i=i||S.inferDtype(n),i==="string"){let s=S.getArrayFromDType(i,S.sizeFromShape(o));return s.fill(n),t.makeTensorInfo(o,i,s)}else{let s=new r0(o,n),a=[[n]];return t.runWebGLProgram(s,[],i,a)}}var zD={kernelName:Wl,backendName:"webgl",kernelFunc:ni};var o0=class{constructor(t){this.variableNames=["Image"],this.outputShape=[];let e=t[2];this.outputShape=t,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${e} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${e}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}};var GD={kernelName:Ul,backendName:"webgl",kernelFunc:({inputs:r,backend:t})=>{let{image:e}=r,o=t,n=new o0(e.shape);return o.runWebGLProgram(n,[e],e.dtype)}};var HD="return floor(x);",VJ=Ie({opSnippet:HD,packedOpSnippet:HD,cpuKernelImpl:x$}),KD={kernelName:Si,backendName:"webgl",kernelFunc:VJ};var WJ=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,UJ=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,zJ=nt({opSnippet:WJ,packedOpSnippet:UJ,dtype:"int32"}),qD={kernelName:wi,backendName:"webgl",kernelFunc:zJ};var n0=class{constructor(t){this.variableNames=["A"];let e=Ct(),[o,n]=t;this.outputShape=t,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${n}.0, ${o}.0);

        vec4 values = ${e.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}};var i0=class{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;let e=Ct(),[o,n]=t;this.outputShape=t,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${n}.0, ${o}.0);
            vec4 values = ${e.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${e.output} = result;
      }
    `}};var jD={kernelName:Ns,backendName:"webgl",kernelFunc:GJ},rp,f1=G().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");function GJ(r){let{inputs:t,backend:e,attrs:o}=r,{pixels:n}=t,{numChannels:i}=o,s=typeof HTMLVideoElement<"u"&&n instanceof HTMLVideoElement,a=typeof HTMLImageElement<"u"&&n instanceof HTMLImageElement,[l,u]=s?[n.videoWidth,n.videoHeight]:[n.width,n.height],c=[u,l],p=[u,l,i];if(a||s){let g=G().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(rp==null||g!==f1)&&(f1=g,rp=document.createElement("canvas").getContext("2d",{willReadFrequently:f1})),rp.canvas.width=l,rp.canvas.height=u,rp.drawImage(n,0,0,l,u),n=rp.canvas}let d=e.makeTensorInfo(c,"int32");e.texData.get(d.dataId).usage=yr.PIXELS,e.gpgpu.uploadPixelDataToTexture(e.getTexture(d.dataId),n);let m=G().getBool("WEBGL_PACK")?new i0(p):new n0(p),f=e.runWebGLProgram(m,[d],"int32");return e.disposeData(d.dataId),f}function HJ(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,filter:i,bias:s,preluActivationWeights:a}=t,{strides:l,pad:u,dataFormat:c,dilations:p,dimRoundingMode:d,activation:m,leakyreluAlpha:f}=o,g=P.convertConv2DDataFormat(c),x=P.computeConv2DInfo(n.shape,i.shape,l,p,u,d,!1,g),y,b=[],I=s!=null,N=a!=null,M=m==="leakyrelu",B=()=>{let H=[n,i],K=(X,re)=>{if(re==="NCHW"&&X.shape.length===1&&X.shape[0]!==1){let ce=ue({inputs:{x:X},backend:e,attrs:{shape:[X.shape[0],1,1]}});return b.push(ce),ce}return X};if(I&&H.push(K(s,c)),N&&H.push(K(a,c)),M){let X=e.makeTensorInfo([],"float32",S.createScalarValue(f,"float32"));H.push(X),b.push(X)}return H};if(x.filterHeight===1&&x.filterWidth===1&&x.dilationHeight===1&&x.dilationWidth===1&&x.strideHeight===1&&x.strideWidth===1&&(x.padInfo.type==="SAME"||x.padInfo.type==="VALID"))y=Vx({x:n,filter:i,convInfo:x,backend:e,bias:s,activation:m,preluActivationWeights:a,leakyreluAlpha:f});else if(x.strideWidth<=2&&g==="channelsLast"&&G().getBool("WEBGL_EXP_CONV")){let H=m?ri(m,!0):null,K=new Zc(x,I,H,N,M),X=[[x.padInfo.top,x.padInfo.left],[x.strideHeight,x.strideWidth],[x.dilationHeight,x.dilationWidth],[x.inHeight,x.inWidth]],re=B();y=e.runWebGLProgram(K,re,"float32",X)}else if(G().getBool("WEBGL_CONV_IM2COL"))y=Wx({x:n,filter:i,convInfo:x,backend:e,bias:s,activation:m,preluActivationWeights:a,leakyreluAlpha:f});else{let H=m?ri(m,!1):null,K=new Qc(x,I,H,N,M),X=B();y=e.runWebGLProgram(K,X,"float32")}let W=ue({inputs:{x:y},backend:e,attrs:{shape:x.outShape}});return b.push(y),b.forEach(H=>e.disposeIntermediateTensorInfo(H)),W}var XD={kernelName:Ps,backendName:"webgl",kernelFunc:HJ};function KJ(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,filter:i,bias:s,preluActivationWeights:a}=t,{strides:l,pad:u,dilations:c,dimRoundingMode:p,activation:d,leakyreluAlpha:m}=o,f=[],g=c;g==null&&(g=[1,1]),S.assert(P.eitherStridesOrDilationsAreOne(l,g),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${g}'`);let x=P.computeConv2DInfo(n.shape,i.shape,l,g,u,p,!0),y=G().getBool("WEBGL_PACK_DEPTHWISECONV")&&x.strideWidth<=2&&x.outChannels/x.inChannels===1,b=d?ri(d,y):null,I=[n,i],N=s!=null,M=a!=null,B=d==="leakyrelu";if(N&&I.push(s),M&&I.push(a),B){let X=e.makeTensorInfo([],"float32",S.createScalarValue(m,"float32"));I.push(X),f.push(X)}let W;y?W=new tp(x,N,b,M,B):W=new ep(x,N,b,M,B);let H=[[x.padInfo.top,x.padInfo.left],[x.strideHeight,x.strideWidth],[x.dilationHeight,x.dilationWidth],[x.inHeight,x.inWidth]],K=e.runWebGLProgram(W,I,"float32",H);return f.forEach(X=>e.disposeIntermediateTensorInfo(X)),K}var YD={kernelName:$s,backendName:"webgl",kernelFunc:KJ};var s0=class{constructor(t,e,o,n){this.sliceDim=t,this.strides=e,this.paramsShape=n,this.variableNames=["x","indices"],this.outputShape=o;let i=Me(o.length),s=`
    int index;`;for(let a=0;a<this.sliceDim;a++)s+=`
          index = round(getIndices(coords[0], ${a}));
          out_of_bounds = out_of_bounds || index < 0;
          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[a]};
          flattenIndex += index * ${this.strides[a]};`;this.userCode=`
         void main() {
          ${i} coords = getOutputCoords();
          int flattenIndex = 0;
          bool out_of_bounds = false;

          ${s}

          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));
        }
      `}};function qJ(r){let{inputs:t,backend:e}=r,{params:o,indices:n}=t,i=n.shape,s=i[i.length-1],a=S.sizeFromShape(o.shape),[l,u,c,p]=P.prepareAndValidate(o,n),d=ue({inputs:{x:n},backend:e,attrs:{shape:[u,s]}}),m=ue({inputs:{x:o},backend:e,attrs:{shape:[S.sizeFromShape(o.shape)/c,c]}});if(e.shouldExecuteOnCPU([o,n])||o.dtype==="string"){let y=e.readSync(n.dataId),b=e.bufferSync(o),I=y$(y,b,o.dtype,u,s,c,p,o.shape,a);return e.makeTensorInfo(l,o.dtype,I.values)}let f=new s0(s,p,[u,c],o.shape),g=e.runWebGLProgram(f,[m,d],m.dtype),x=ue({inputs:{x:g},backend:e,attrs:{shape:l}});return e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(g),x}var QD={kernelName:Hl,backendName:"webgl",kernelFunc:qJ};var a0=class{constructor(t,e){this.variableNames=["A","indices"],this.outputShape=e,this.rank=e.length;let o=Me(this.rank),n=jJ(t,2);this.userCode=`
      void main() {
        ${o} resRC = getOutputCoords();
        int index = int(getIndices(resRC.x, resRC.z));
        float inBounds = (index >= 0) && (index < ${t[2]}) ? 1.0 : 0.0;
        setOutput(inBounds * getA(${n}));
      }
    `}};function jJ(r,t){let e=["resRC.x","resRC.y","resRC.z","resRC.w"],o=[];for(let n=0;n<r.length;n++)n===2?o.push("index"):o.push(`${e[n]}`);return o.join()}function h1(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,indices:i}=t,{axis:s,batchDims:a}=o,l=S.parseAxisParam(s,n.shape)[0];if(G().get("DEBUG")){let b=e.readSync(i.dataId),I=n.shape[l];for(let N=0;N<b.length;++N){let M=b[N];S.assert(M<=I-1&&M>=0,()=>`GatherV2: the index value ${M} is not in [0, ${I-1}]`)}}let u=P.segment_util.collectGatherOpShapeInfo(n,i,l,a),c=S.sizeFromShape(i.shape),p=[],d=ue({inputs:{x:n},backend:e,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),m=ue({inputs:{x:i},backend:e,attrs:{shape:[u.batchSize,c/u.batchSize]}});p.push(d),p.push(m);let f=[u.batchSize,u.outerSize,c/u.batchSize,u.sliceSize];if(e.shouldExecuteOnCPU([n,i])||n.dtype==="string"){let b=e.bufferSync(m),I=e.bufferSync(d),N=v$(I,b,f);return p.forEach(M=>e.disposeIntermediateTensorInfo(M)),e.makeTensorInfo(u.outputShape,N.dtype,N.values)}let g=new a0(d.shape,f),x=e.runWebGLProgram(g,[d,m],d.dtype);p.push(x);let y=ue({inputs:{x},backend:e,attrs:{shape:u.outputShape}});return p.forEach(b=>e.disposeIntermediateTensorInfo(b)),y}var ZD={kernelName:Gl,backendName:"webgl",kernelFunc:h1};var XJ="return float(a > b);",YJ=`
  return vec4(greaterThan(a, b));
`,QJ=nt({opSnippet:XJ,packedOpSnippet:YJ,cpuKernelImpl:b$,dtype:"bool"}),JD={kernelName:_i,backendName:"webgl",kernelFunc:QJ};var ZJ="return float(a >= b);",JJ=`
  return vec4(greaterThanEqual(a, b));
`,eee=nt({opSnippet:ZJ,packedOpSnippet:JJ,dtype:"bool",cpuKernelImpl:S$}),eF={kernelName:Ci,backendName:"webgl",kernelFunc:eee};function tee(r){let{inputs:t,backend:e}=r,{input:o}=t;return t0(o,!0,e)}var tF={kernelName:Kl,backendName:"webgl",kernelFunc:tee};var ree="return float(!isnan(x) && !isinf(x));",oee=Ie({opSnippet:ree,dtype:"bool"}),rF={kernelName:jl,backendName:"webgl",kernelFunc:oee};var nee="return float(isinf(x));",iee=Ie({opSnippet:nee,dtype:"bool"}),oF={kernelName:Xl,backendName:"webgl",kernelFunc:iee};var see="return float(isnan(x));",aee=Ie({opSnippet:see,dtype:"bool"}),nF={kernelName:Yl,backendName:"webgl",kernelFunc:aee};var lee="return float(a < b);",uee=`
  return vec4(lessThan(a, b));
`,cee=nt({opSnippet:lee,packedOpSnippet:uee,cpuKernelImpl:w$,dtype:"bool"}),iF={kernelName:ki,backendName:"webgl",kernelFunc:cee};var pee="return float(a <= b);",dee=`
  return vec4(lessThanEqual(a, b));
`,mee=nt({opSnippet:pee,packedOpSnippet:dee,cpuKernelImpl:_$,dtype:"bool"}),sF={kernelName:Ii,backendName:"webgl",kernelFunc:mee};function fee(r){let{backend:t,attrs:e}=r,{start:o,stop:n,num:i}=e,s=C$(o,n,i);return t.makeTensorInfo([s.length],"float32",s)}var aF={kernelName:Zl,backendName:"webgl",kernelFunc:fee};var hee=Bo+`
  return x < 0.0 ? 0./0. : log(x);
`,gee=`
  vec4 result = log(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);
  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);
  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);
  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);
  return result;
`,xee=Ie({opSnippet:hee,packedOpSnippet:gee,cpuKernelImpl:k$}),lF={kernelName:Ti,backendName:"webgl",kernelFunc:xee};var yee=Bo+`
  return log(1.0 + x);
`,vee=Ie({opSnippet:yee}),uF={kernelName:Jl,backendName:"webgl",kernelFunc:vee};var bee="return float(a >= 1.0 && b >= 1.0);",See=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,wee=nt({opSnippet:bee,packedOpSnippet:See,dtype:"bool"}),cF={kernelName:eu,backendName:"webgl",kernelFunc:wee};var _ee="return float(!(x >= 1.0));",Cee=Ie({opSnippet:_ee}),pF={kernelName:tu,backendName:"webgl",kernelFunc:Cee};var kee="return float(a >= 1.0 || b >= 1.0);",Iee=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,Tee=nt({opSnippet:kee,packedOpSnippet:Iee,dtype:"bool"}),dF={kernelName:ru,backendName:"webgl",kernelFunc:Tee};var l0=class{constructor(t,e,o,n,i){this.variableNames=["x"],this.outputShape=[];let s=e,a=t[3]-1;this.outputShape=t;let l,u=`float(${o}) + float(${n}) * sum`;i===.5?l=`inversesqrt(${u})`:i===1?l=`1.0/(${u})`:l=`exp(log(${u}) * float(-${i}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${s}; j <= ${s}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${a}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${l};
        setOutput(val);
      }
    `}};var u0=class{constructor(t,e,o,n,i){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;let s=e,a=t[3]-1;this.outputShape=t;let l,u=`float(${o}) + float(${n}) * sum`;i===.5?l=`inversesqrt(${u})`:i===1?l=`1.0/(${u})`:l=`exp(log(${u}) * float(-${i}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${s};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${s}; j <= ${s}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${a}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${l};
        setOutput(result);
      }
    `}};var Eee=r=>{let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{depthRadius:i,bias:s,alpha:a,beta:l}=o,u=G().getBool("WEBGL_PACK_NORMALIZATION")?new u0(n.shape,i,s,a,l):new l0(n.shape,i,s,a,l);return e.runWebGLProgram(u,[n],n.dtype)},mF={kernelName:ou,backendName:"webgl",kernelFunc:Eee};var c0=class{constructor(t,e,o,n,i){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=t,this.depth=t[3],this.depthRadius=e,this.bias=o,this.alpha=n,this.beta=i,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${e})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${e} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${n}) * norm + float(${o});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${n})
                * float(${i})
                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${i});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}};var Nee=r=>{let{inputs:t,backend:e,attrs:o}=r,{x:n,y:i,dy:s}=t,{depthRadius:a,bias:l,alpha:u,beta:c}=o,p=new c0(n.shape,a,l,u,c);return e.runWebGLProgram(p,[n,i,s],n.dtype)},fF={kernelName:hm,backendName:"webgl",kernelFunc:Nee};function hF(r,t,e,o){let n=S.sizeFromShape(t),s=S.sizeFromShape(r.shape)/n,a=ue({inputs:{x:r},attrs:{shape:[s,n]},backend:o}),l=go(a,r.dtype,"max",o),u=ue({inputs:{x:l},attrs:{shape:e},backend:o});return o.disposeIntermediateTensorInfo(a),o.disposeIntermediateTensorInfo(l),u}function g1(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{reductionIndices:i,keepDims:s}=o,a=n.shape.length,l=S.parseAxisParam(i,n.shape),u=l,c=P.getAxesPermutation(u,a),p=c!=null,d=e.shouldExecuteOnCPU([n]),m=n;if(p){if(d){let I=e.texData.get(m.dataId).values,N=new Array(a);for(let W=0;W<N.length;W++)N[W]=n.shape[c[W]];let M=ga(I,n.shape,n.dtype,c,N);m=e.makeTensorInfo(N,n.dtype);let B=e.texData.get(m.dataId);B.values=M}else m=us(n,c,e);u=P.getInnerMostAxes(u.length,a)}P.assertAxesAreInnerMostDims("max",u,a);let[f,g]=P.computeOutAndReduceShapes(m.shape,u),x=f;s&&(x=P.expandShapeToKeepDim(f,l));let y;if(d){let I=e.texData.get(m.dataId).values,N=I$(I,S.sizeFromShape(g),x,n.dtype);y=e.makeTensorInfo(x,n.dtype);let M=e.texData.get(y.dataId);M.values=N}else y=hF(m,g,x,e);return p&&e.disposeIntermediateTensorInfo(m),y}var gF={kernelName:nu,backendName:"webgl",kernelFunc:g1};var Ree=jc+`
  return max(a, b);
`,Pee=`
  vec4 result = vec4(max(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+ho+`
  return result;
`,$ee=nt({opSnippet:Ree,packedOpSnippet:Pee,cpuKernelImpl:T$}),xF={kernelName:Ei,backendName:"webgl",kernelFunc:$ee};function Aee(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t;Rn(n,"maxPool");let{filterSize:i,strides:s,pad:a,dimRoundingMode:l}=o,u=1;S.assert(P.eitherStridesOrDilationsAreOne(s,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '${u}'`);let c=P.computePool2DInfo(n.shape,i,s,u,a,l);if(c.filterWidth===1&&c.filterHeight===1&&S.arraysEqual(c.inShape,c.outShape))return Dt({inputs:{x:n},backend:e});let p=new Zo(c,"max",!1);return e.runWebGLProgram(p,[n],n.dtype)}var yF={kernelName:iu,backendName:"webgl",kernelFunc:Aee};function Dee(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{filterSize:i,strides:s,pad:a,dataFormat:l,dimRoundingMode:u}=o,c=[1,1,1],p=P.computePool3DInfo(n.shape,i,s,c,a,u,l),d=new cs(p,"max",!1);return e.runWebGLProgram(d,[n],n.dtype)}var vF={kernelName:su,backendName:"webgl",kernelFunc:Dee};var p0=class{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;let e=t.strideHeight,o=t.strideWidth,n=t.dilationHeight,i=t.effectiveFilterHeight,s=t.effectiveFilterWidth,a=i-1-t.padInfo.top,l=s-1-t.padInfo.left,u=i*s-1;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${l});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${i};
          wR += ${n}) {
          float dyR = float(dyRCorner + wR) / ${e}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${s}; wC++) {
            float dyC = float(dyCCorner + wC) / ${o}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${u} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${s} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}},d0=class{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;let e=t.strideDepth,o=t.strideHeight,n=t.strideWidth,i=t.dilationDepth,s=t.dilationHeight,a=t.dilationWidth,l=t.effectiveFilterDepth,u=t.effectiveFilterHeight,c=t.effectiveFilterWidth,p=l-1-t.padInfo.front,d=u-1-t.padInfo.top,m=c-1-t.padInfo.left,f=l*u*c-1;this.userCode=`
      const ivec3 pads = ivec3(${p}, ${d}, ${m});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${l};
           wD += ${i}) {
          float dyD = float(dyDCorner + wD) / ${e}.0;

          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${u};
              wR += ${s}) {
            float dyR = float(dyRCorner + wR) / ${o}.0;

            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${c};
                wC += ${a}) {
              float dyC = float(dyCCorner + wC) / ${n}.0;

              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${f} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${u} * ${c} +
                  wR * ${c} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function Fee(r){let{inputs:t,backend:e,attrs:o}=r,{dy:n,input:i}=t,s=i,{filterSize:a,strides:l,pad:u,dimRoundingMode:c}=o,p=[1,1,1],d=P.computePool3DInfo(s.shape,a,l,p,u,c),m=new cs(d,"max",!0),f=e.runWebGLProgram(m,[s],s.dtype),g=new d0(d),x=e.runWebGLProgram(g,[n,f],s.dtype);return e.disposeIntermediateTensorInfo(f),x}var bF={kernelName:xm,backendName:"webgl",kernelFunc:Fee};function Oee(r){let{inputs:t,backend:e,attrs:o}=r,{dy:n,input:i,output:s}=t,a=i;Rn([i,s],"maxPoolGrad");let{filterSize:l,strides:u,pad:c,dimRoundingMode:p}=o,d=P.computePool2DInfo(a.shape,l,u,1,c,p),m=!0,f=new Zo(d,"max",m),g=e.runWebGLProgram(f,[a],a.dtype),x=new p0(d),y=e.runWebGLProgram(x,[n,g],a.dtype);return e.disposeIntermediateTensorInfo(g),y}var SF={kernelName:gm,backendName:"webgl",kernelFunc:Oee};function wF(r,t,e,o){let n=new Zo(e,"max",!1),i=o.runWebGLProgram(n,[r],"float32");n=new Zo(e,"max",!0,!0,t);let s=o.runWebGLProgram(n,[r],"float32");return[i,s]}var _F={kernelName:au,backendName:"webgl",kernelFunc:({inputs:r,attrs:t,backend:e})=>{let{x:o}=r,{filterSize:n,strides:i,pad:s,includeBatchInIndex:a}=t,l=e;S.assert(o.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${o.shape.length}.`);let u=[1,1];S.assert(P.eitherStridesOrDilationsAreOne(i,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);let c=P.computePool2DInfo(o.shape,n,i,u,s),[p,d]=wF(o,a,c,l);return[p,d]}};function CF(r,t,e,o){let n=S.sizeFromShape(t),s=S.sizeFromShape(r.shape)/n,a=ue({inputs:{x:r},attrs:{shape:[s,n]},backend:o}),l=go(a,"float32","mean",o),u=ue({inputs:{x:l},attrs:{shape:e},backend:o});return o.disposeIntermediateTensorInfo(a),o.disposeIntermediateTensorInfo(l),u}var kF={kernelName:lu,backendName:"webgl",kernelFunc:({inputs:r,attrs:t,backend:e})=>{let{x:o}=r,{keepDims:n,axis:i}=t,s=e,a=o.shape.length,l=S.parseAxisParam(i,o.shape),u=l,c=P.getAxesPermutation(u,a),p=c!=null,d=s.shouldExecuteOnCPU([o]),m=[],f=o;if(p){if(d){let N=s.texData.get(f.dataId).values,M=new Array(a);for(let H=0;H<M.length;H++)M[H]=o.shape[c[H]];let B=ga(N,o.shape,o.dtype,c,M);f=s.makeTensorInfo(M,o.dtype);let W=s.texData.get(f.dataId);W.values=B}else f=us(o,c,s);m.push(f),u=P.getInnerMostAxes(u.length,a)}P.assertAxesAreInnerMostDims("sum",u,a);let[g,x]=P.computeOutAndReduceShapes(f.shape,u),y=g;n&&(y=P.expandShapeToKeepDim(g,l));let b=CF(f,x,y,s);for(let I of m)s.disposeIntermediateTensorInfo(I);return b}};function Lee(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{axis:i,keepDims:s}=o,a=n.shape.length,l=S.parseAxisParam(i,n.shape),u=l,c=P.getAxesPermutation(u,a),p=n;c!=null&&(p=vt({inputs:{x:n},backend:e,attrs:{perm:c}}),u=P.getInnerMostAxes(u.length,n.shape.length)),P.assertAxesAreInnerMostDims("min",u,a);let[d,m]=P.computeOutAndReduceShapes(p.shape,u),f=S.sizeFromShape(m),g=ue({inputs:{x:p},backend:e,attrs:{shape:[-1,f]}}),x=go(g,g.dtype,"min",e),y;if(s){let b=P.expandShapeToKeepDim(d,l);y=ue({inputs:{x},backend:e,attrs:{shape:b}})}else y=ue({inputs:{x},backend:e,attrs:{shape:d}});return e.disposeIntermediateTensorInfo(g),e.disposeIntermediateTensorInfo(x),c!=null&&e.disposeIntermediateTensorInfo(p),y}var IF={kernelName:uu,backendName:"webgl",kernelFunc:Lee};var Mee=jc+`
  return min(a, b);
`,Bee=`
  vec4 result = vec4(min(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+ho+`
  return result;
`,Vee=nt({opSnippet:Mee,packedOpSnippet:Bee,cpuKernelImpl:E$}),TF={kernelName:Ni,backendName:"webgl",kernelFunc:Vee};var m0=class{constructor(t,e,o){this.variableNames=["x"],this.outputShape=e.map((c,p)=>c[0]+t[p]+c[1]);let n=t.length,i=Me(n),s=e.map(c=>c[0]).join(","),a=e.map((c,p)=>c[0]+t[p]).join(","),l=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,n),u=o==="reflect"?0:1;if(n===1){this.userCode=`
        int start = ${s};
        int end = ${a};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${u};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${u};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${i} start = ${i}(${s});
      ${i} end = ${i}(${a});

      void main() {
        ${i} outC = getOutputCoords();
        for (int i = 0; i < ${n}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${u};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};
          }
        }
        ${i} coords = outC - start;
        setOutput(getX(${l}));
      }
    `}};var f0=class{constructor(t,e,o){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.map((f,g)=>f[0]+t[g]+f[1]);let n=t.length,i=Me(n),s=e.map(f=>f[0]).join(","),a=e.map((f,g)=>f[0]+t[g]).join(","),l=At("rc",n),u=At("source",n),c=`${l[n-1]} < ${this.outputShape[n-1]}`,p=n===1?"source":`vec2(${u.slice(-2).join()})`,d=o==="reflect"?0:1,m="";if(n===1){let f=`
        ${i} source = rc;
        if (source < start) {
          source = start * 2 - source - ${d};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${d};
        }
        source -= start;
      `;m=`
        ${i} rc = outputLoc;
        ${f}
        result[0] = getChannel(getX(${u.join()}), ${p});
        ${l[n-1]} += 1;
        if(${c}) {
          ${f}
          result[1] = getChannel(getX(${u.join()}), ${p});
        }
      `}else{let f=`
        ${i} source = rc;
        ${i} lt = ${i}(lessThan(source, start));
        ${i} gte = ${i}(greaterThanEqual(source, end));
        ${i} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${d}) +
                gte * ((end - 1) * 2 - source + ${d});
        source -= start;
      `;m=`
        ${i} rc = outputLoc;
        ${f}
        result[0] = getChannel(getX(${u.join()}), ${p});
        ${l[n-1]} += 1;
        if(${c}) {
          ${f}
          result[1] = getChannel(getX(${u.join()}), ${p});
        }
        rc = outputLoc;
        ${l[n-2]} += 1;
        if(${l[n-2]} < ${this.outputShape[n-2]}) {
          ${f}
          result[2] = getChannel(getX(${u.join()}), ${p});
          ${l[n-1]} += 1;
          if(${c}) {
            ${f}
            result[3] = getChannel(getX(${u.join()}), ${p});
          }
        }
      `}this.userCode=`
      const ${i} start = ${i}(${s});
      const ${i} end = ${i}(${a});

      void main() {
        ${i} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${m}
        setOutput(result);
      }
    `}};var Wee=({inputs:r,backend:t,attrs:e})=>{let{x:o}=r,{paddings:n,mode:i}=e,s=G().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new f0(o.shape,n,i):new m0(o.shape,n,i);return t.runWebGLProgram(s,[o],o.dtype)},EF={kernelName:cu,backendName:"webgl",kernelFunc:Wee};var Uee=`if (b == 0.0) return NAN;
  return mod(a, b);`,zee=`
  vec4 result = mod(a, b);
  bvec4 isNaN = equal(b, vec4(0.0));
  `+ho+`
  return result;
`,Gee=nt({opSnippet:Uee,packedOpSnippet:zee}),NF={kernelName:pu,backendName:"webgl",kernelFunc:Gee};var h0=class{constructor(t,e,o){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[t,o],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${e-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${e-1}));
      }
    `}};var Hee=`
if (a == b) {
  return 1.0;
};
return a / b;`,Kee=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,x1=nt({opSnippet:Hee,packedOpSnippet:Kee,checkOutOfBounds:!0}),RF={kernelName:Fl,backendName:"webgl",kernelFunc:x1};var PF="return a - b;",y1=nt({opSnippet:PF,packedOpSnippet:PF,supportsComplex:!0,cpuKernelImpl:X$}),$F={kernelName:Oi,backendName:"webgl",kernelFunc:y1};function v1(r){let{inputs:t,backend:e,attrs:o}=r,{logits:n}=t,{dim:i}=o,s=S.parseAxisParam([i],n.shape),a=g1({inputs:{x:n},backend:e,attrs:{reductionIndices:s,keepDims:!1}}),l=P.expandShapeToKeepDim(a.shape,s),u=ue({inputs:{x:a},backend:e,attrs:{shape:l}}),c=y1({inputs:{a:n,b:u},backend:e}),p=m1({inputs:{x:c},backend:e}),d=xa({inputs:{x:p},backend:e,attrs:{axis:s,keepDims:!1}}),m=ue({inputs:{x:d},backend:e,attrs:{shape:l}}),f=x1({inputs:{a:p,b:m},backend:e});return e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(u),e.disposeIntermediateTensorInfo(c),e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(m),f}var AF={kernelName:Uu,backendName:"webgl",kernelFunc:v1};function qee(r){let{inputs:t,backend:e,attrs:o}=r,{logits:n}=t,{numSamples:i,seed:s,normalized:a}=o,l=a?n:v1({inputs:{logits:n},backend:e,attrs:{dim:n.shape.length-1}}),u=l.shape[0],c=l.shape[1],p=new h0(u,c,i),d=[[s]],m=e.runWebGLProgram(p,[l],"int32",d);return a||e.disposeIntermediateTensorInfo(l),m}var DF={kernelName:du,backendName:"webgl",kernelFunc:qee};var jee=Ut+`
  return -x;
`,Xee=`
  vec4 result = -x;
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`;function Yee(r){let{inputs:t,backend:e}=r,{x:o}=t;if(e.shouldExecuteOnCPU([o])){let i=e.texData.get(o.dataId),[s,a]=R$(i.values,o.shape,o.dtype);return e.makeTensorInfo(a,o.dtype,s)}let n;return G().getBool("WEBGL_PACK_UNARY_OPERATIONS")?n=new Mr(o.shape,Xee):n=new tr(o.shape,jee),e.runWebGLProgram(n,[o],o.dtype)}var FF={kernelName:ks,backendName:"webgl",kernelFunc:Yee};var Qee=io.nonMaxSuppressionV3Impl;function Zee(r){P.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:e,attrs:o}=r,{boxes:n,scores:i}=t,{maxOutputSize:s,iouThreshold:a,scoreThreshold:l}=o,u=e.readSync(n.dataId),c=e.readSync(i.dataId),{selectedIndices:p}=Qee(u,c,s,a,l);return e.makeTensorInfo([p.length],"int32",new Int32Array(p))}var OF={kernelName:mu,backendName:"webgl",kernelFunc:Zee};var Jee=io.nonMaxSuppressionV4Impl;function ete(r){P.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:e,attrs:o}=r,{boxes:n,scores:i}=t,{maxOutputSize:s,iouThreshold:a,scoreThreshold:l,padToMaxOutputSize:u}=o,c=e.readSync(n.dataId),p=e.readSync(i.dataId),{selectedIndices:d,validOutputs:m}=Jee(c,p,s,a,l,u);return[e.makeTensorInfo([d.length],"int32",new Int32Array(d)),e.makeTensorInfo([],"int32",new Int32Array([m]))]}var LF={kernelName:ym,backendName:"webgl",kernelFunc:ete};var tte=io.nonMaxSuppressionV5Impl;function rte(r){P.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:e,attrs:o}=r,{boxes:n,scores:i}=t,{maxOutputSize:s,iouThreshold:a,scoreThreshold:l,softNmsSigma:u}=o,c=e.readSync(n.dataId),p=e.readSync(i.dataId),d=s,m=a,f=l,g=u,{selectedIndices:x,selectedScores:y}=tte(c,p,d,m,f,g);return[e.makeTensorInfo([x.length],"int32",new Int32Array(x)),e.makeTensorInfo([y.length],"float32",new Float32Array(y))]}var MF={kernelName:fu,backendName:"webgl",kernelFunc:rte};var g0=class{constructor(t,e,o,n){this.variableNames=["indices"],this.outputShape=[t,e],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${n}), float(${o}),
                      float(index == coords.y)));
      }
    `}};var ote=r=>{let{inputs:t,backend:e,attrs:o}=r,{indices:n}=t,{dtype:i,depth:s,onValue:a,offValue:l}=o,u=S.sizeFromShape(n.shape),c=new g0(u,s,a,l),p=ue({inputs:{x:n},backend:e,attrs:{shape:[u]}}),d=e.runWebGLProgram(c,[p],i);e.disposeIntermediateTensorInfo(p);let m=[...n.shape,s],f=ue({inputs:{x:d},backend:e,attrs:{shape:m}});return e.disposeIntermediateTensorInfo(d),f},BF={kernelName:gu,backendName:"webgl",kernelFunc:ote};function gd(r){let{inputs:t,backend:e}=r,{x:o}=t;if(o.dtype==="complex64"){let n=oi({inputs:{input:o},backend:e}),i=gd({inputs:{x:n},backend:e}),s=va({inputs:{input:o},backend:e}),a=gd({inputs:{x:s},backend:e}),l=Vr({inputs:{real:i,imag:a},backend:e});return e.disposeIntermediateTensorInfo(n),e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(s),e.disposeIntermediateTensorInfo(a),l}else return ni({attrs:{shape:o.shape,dtype:o.dtype,value:o.dtype==="string"?"":0},backend:e})}var VF={kernelName:tc,backendName:"webgl",kernelFunc:gd};function WF(r){let{inputs:t,backend:e}=r,{x:o}=t;if(o.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(o.dtype==="complex64"){let n=oi({inputs:{input:o},backend:e}),i=WF({inputs:{x:n},backend:e}),s=va({inputs:{input:o},backend:e}),a=gd({inputs:{x:s},backend:e}),l=Vr({inputs:{real:i,imag:a},backend:e});return e.disposeIntermediateTensorInfo(n),e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(s),e.disposeIntermediateTensorInfo(a),l}else return ni({attrs:{shape:o.shape,dtype:o.dtype,value:1},backend:e})}var UF={kernelName:hu,backendName:"webgl",kernelFunc:WF};function nte(r){let{inputs:t,backend:e,attrs:o}=r,{axis:n}=o;if(t.length===1)return e0({inputs:{input:t[0]},backend:e,attrs:{dim:n}});let i=t[0].shape,s=t[0].dtype;t.forEach(c=>{S.assertShapesMatch(i,c.shape,"All tensors passed to stack must have matching shapes"),S.assert(s===c.dtype,()=>"All tensors passed to stack must have matching dtypes")});let a=[],l=t.map(c=>{let p=e0({inputs:{input:c},backend:e,attrs:{dim:n}});return a.push(p),p}),u=d1({inputs:l,backend:e,attrs:{axis:n}});return a.forEach(c=>e.disposeIntermediateTensorInfo(c)),u}var zF={kernelName:xu,backendName:"webgl",kernelFunc:nte};var x0=class{constructor(t,e,o){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=e.map((u,c)=>u[0]+t[c]+u[1]);let n=t.length,i=Me(n),s=e.map(u=>u[0]).join(","),a=e.map((u,c)=>u[0]+t[c]).join(","),l=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,n);if(n===1){this.userCode=`
        int start = ${s};
        int end = ${a};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${i} start = ${i}(${s});
      ${i} end = ${i}(${a});

      void main() {
        ${i} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${i} coords = outC - start;
          setOutput(getX(${l}));
        }
      }
    `}};var y0=class{constructor(t,e,o){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=e.map((g,x)=>g[0]+t[x]+g[1]);let n=t.length,i=Me(n),s=e.map(g=>g[0]).join(","),a=e.map((g,x)=>g[0]+t[x]).join(","),l=At("rc",n),u=At("source",n),c=`${l[n-1]} < ${this.outputShape[n-1]}`,p=n===1?"source":`vec2(${u.slice(-2).join()})`,d=[`${i} rc = outputLoc;`,`${l[n-1]} += 1;
       if(${c}) {
      `,n===1?"":`}
       rc = outputLoc;
       ${l[n-2]} += 1;
       if(${l[n-2]} < ${this.outputShape[n-2]}) {`,n===1?"":`  ${l[n-1]} += 1;
         if(${c}) {`],m=n===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))",f="";for(let g=0,x=n===1?2:4;g<x;g++)f+=`
        ${d[g]}
        if (${m}) {
          result[${g}] = float(value);
        } else {
          ${i} source = rc - start;
          result[${g}] = getChannel(getX(${u.join()}), ${p});
        }
      `;f+=n===1?"} ":"}}",this.userCode=`
      const ${i} start = ${i}(${s});
      const ${i} end = ${i}(${a});

      void main() {
        ${i} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${f}
        setOutput(result);
      }
    `}};var b1=r=>{let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{paddings:i,constantValue:s}=o;if(S.sizeFromShape(n.shape)===0){let u=i.map((c,p)=>c[0]+n.shape[p]+c[1]);return ni({backend:e,attrs:{shape:u,value:s,dtype:n.dtype}})}let a=G().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new y0(n.shape,i,s):new x0(n.shape,i,s),l=[[s]];return e.runWebGLProgram(a,[n],n.dtype,l)},GF={kernelName:yu,backendName:"webgl",kernelFunc:b1};var ite=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,ste=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  bvec4 isNaN1 = lessThan(a, vec4(0.0));
  bvec4 isNaN2 = lessThan(floor(b), b);
  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);
  `+ho+`
  return result;
`,ate=nt({opSnippet:ite,packedOpSnippet:ste}),HF={kernelName:vu,backendName:"webgl",kernelFunc:ate};function lte(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{axis:i,keepDims:s}=o,a=n.shape.length,l=[],u=S.parseAxisParam(i,n.shape),c=u,p=P.getAxesPermutation(c,a),d=n;p!=null&&(d=vt({inputs:{x:n},backend:e,attrs:{perm:p}}),c=P.getInnerMostAxes(c.length,a),l.push(d)),P.assertAxesAreInnerMostDims("prod",c,a);let m;if(e.shouldExecuteOnCPU([d])){let f=e.texData.get(d.dataId).values,{outVals:g,outShape:x,outDtype:y}=$$(d.shape,d.dtype,f,c);m=e.makeTensorInfo(x,y,g)}else{let[f,g]=P.computeOutAndReduceShapes(d.shape,c),x=S.sizeFromShape(g),y=ue({inputs:{x:d},backend:e,attrs:{shape:[-1,x]}}),b=Wn(n.dtype),I=go(y,b,"prod",e);m=ue({inputs:{x:I},backend:e,attrs:{shape:f}}),l.push(y),l.push(I)}if(s){l.push(m);let f=P.expandShapeToKeepDim(m.shape,u);m=ue({inputs:{x:m},backend:e,attrs:{shape:f}})}return l.forEach(f=>e.disposeIntermediateTensorInfo(f)),m}var KF={kernelName:Is,backendName:"webgl",kernelFunc:lte};function ute(r){let{inputs:t,backend:e,attrs:o}=r,{paramsNestedSplits:n,paramsDenseValues:i,indices:s}=t,{outputRaggedRank:a}=o,l=n.map(y=>e.readSync(y.dataId)),u=n.map(y=>y.shape),c=e.readSync(i.dataId),p=e.readSync(s.dataId),[d,m,f]=A$(l,u,c,i.shape,i.dtype,p,s.shape,a),g=d.map(y=>e.makeTensorInfo([y.length],"int32",y)),x=e.makeTensorInfo(f,i.dtype,m);return g.concat([x])}var qF={kernelName:vm,backendName:"webgl",kernelFunc:ute};function cte(r){let{inputs:t,backend:e}=r,{starts:o,limits:n,deltas:i}=t,s=e.readSync(o.dataId),a=e.readSync(n.dataId),l=e.readSync(i.dataId),[u,c]=D$(s,o.shape,o.dtype,a,n.shape,l,i.shape),p=e.makeTensorInfo([u.length],"int32",u),d=e.makeTensorInfo([c.length],o.dtype,c);return[p,d]}var jF={kernelName:bm,backendName:"webgl",kernelFunc:cte};function pte(r){let{inputs:t,backend:e,attrs:o}=r,{shape:n,values:i,defaultValue:s,rowPartitionTensors:a}=t,{rowPartitionTypes:l}=o,u=e.readSync(n.dataId),c=e.readSync(i.dataId),p=e.readSync(s.dataId),d=a.map(x=>e.readSync(x.dataId)),m=a.map(x=>x.shape),[f,g]=F$(u,n.shape,c,i.shape,i.dtype,p,s.shape,d,m,l);return e.makeTensorInfo(f,i.dtype,g)}var XF={kernelName:Sm,backendName:"webgl",kernelFunc:pte};var S1=r=>{let{backend:t,attrs:e}=r,{start:o,stop:n,step:i,dtype:s}=e,a=O$(o,n,i,s);return t.makeTensorInfo([a.length],s,a)},YF={kernelName:Su,backendName:"webgl",kernelFunc:S1};var dte="return 1.0 / x;",mte=Ie({opSnippet:dte}),QF={kernelName:wu,backendName:"webgl",kernelFunc:mte};var fte=Ut+`
  return (x < 0.0) ? 0.0 : x;
`,hte=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,gte=Ie({opSnippet:fte,packedOpSnippet:hte}),ZF={kernelName:_u,backendName:"webgl",kernelFunc:gte};var xte=Ut+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,yte=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,vte=Ie({opSnippet:xte,packedOpSnippet:yte}),JF={kernelName:Tu,backendName:"webgl",kernelFunc:vte};var v0=class{constructor(t,e,o,n,i){this.variableNames=["A"],this.outputShape=[];let[s,a,l,u]=t;this.outputShape=[s,e,o,u];let c=[n&&e>1?a-1:a,n&&o>1?l-1:l],p=[n&&e>1?e-1:e,n&&o>1?o-1:o],d;i?d="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":d="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${c[0]/p[0]},
          ${c[1]/p[1]});
      const vec2 inputShapeRC = vec2(${a}.0, ${l}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${d};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}};var b0=class{constructor(t,e,o,n,i){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[s,a,l,u]=t;this.outputShape=[s,e,o,u];let c=[n&&e>1?a-1:a,n&&o>1?l-1:l],p=[n&&e>1?e-1:e,n&&o>1?o-1:o],d;i?d="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":d="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${c[0]/p[0]},
          ${c[1]/p[1]},
          ${c[1]/p[1]});
      const vec3 inputShapeRC = vec3(${a}.0, ${l}.0,
                                     ${l}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${d};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${u-1};
        bool hasNextRow = coords.z < ${o-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}};function bte(r){let{inputs:t,backend:e,attrs:o}=r,{images:n}=t,{alignCorners:i,halfPixelCenters:s,size:a}=o,[l,u]=a,c=G().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new b0(n.shape,l,u,i,s):new v0(n.shape,l,u,i,s);return e.runWebGLProgram(c,[n],"float32")}var eO={kernelName:Iu,backendName:"webgl",kernelFunc:bte};var S0=class{constructor(t,e,o){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e;let[,n,i]=e,[,s,a]=t,l=[o&&s>1?n-1:n,o&&a>1?i-1:i],u=[o&&s>1?s-1:s,o&&a>1?a-1:a],c=l[0]/u[0],p=l[1]/u[1],d=1/c,m=1/p,f=Math.ceil(d)*2+2,g=Math.ceil(m)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${c});
        const float widthScale = float(${p});

        const float invHeightScale = float(${d});
        const float invWidthScale = float(${m});

        const int winHeight = int(${f});
        const int winWidth = int(${g});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${s}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${a}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${n-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${i-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function Ste(r){let{inputs:t,backend:e,attrs:o}=r,{images:n,dy:i}=t,{alignCorners:s}=o,a=new S0(i.shape,n.shape,s);return e.runWebGLProgram(a,[i],i.dtype)}var tO={kernelName:_m,backendName:"webgl",kernelFunc:Ste};var w0=class{constructor(t,e,o,n,i){this.variableNames=["A"],this.outputShape=[];let[s,a,l,u]=t;this.outputShape=[s,e,o,u];let c=[n&&e>1?a-1:a,n&&o>1?l-1:l],p=[n&&e>1?e-1:e,n&&o>1?o-1:o],d=n?"0.5":"0.0",m;i?m="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":m="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${c[0]/p[0]},
          ${c[1]/p[1]});
      const vec2 inputShapeRC = vec2(${a}.0, ${l}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${m};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}};var _0=class{constructor(t,e,o,n,i){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[s,a,l,u]=t;this.outputShape=[s,e,o,u];let c=[n&&e>1?a-1:a,n&&o>1?l-1:l],p=[n&&e>1?e-1:e,n&&o>1?o-1:o],d=n?"0.5":"0.0",m;i?m="max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":m="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${c[0]/p[0]},
          ${c[1]/p[1]},
          ${c[1]/p[1]});
      const vec3 inputShapeRC = vec3(${a}.0, ${l}.0,
                                     ${l}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${m};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${u-1};
        bool hasNextRow = coords.z < ${o-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}};function wte(r){let{inputs:t,backend:e,attrs:o}=r,{images:n}=t,{alignCorners:i,halfPixelCenters:s,size:a}=o,[l,u]=a,c=G().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new _0(n.shape,l,u,i,s):new w0(n.shape,l,u,i,s);return e.runWebGLProgram(c,[n],n.dtype)}var rO={kernelName:ku,backendName:"webgl",kernelFunc:wte};var C0=class{constructor(t,e,o){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e;let[,n,i]=e,[,s,a]=t,l=[o&&s>1?n-1:n,o&&a>1?i-1:i],u=[o&&s>1?s-1:s,o&&a>1?a-1:a],c=l[0]/u[0],p=l[1]/u[1],d=1/c,m=1/p,f=Math.ceil(d)*2+2,g=Math.ceil(m)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${c});
        const float widthScale = float(${p});

        const float invHeightScale = float(${d});
        const float invWidthScale = float(${m});

        const int winHeight = int(${f});
        const int winWidth = int(${g});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${s}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${a}) {
              continue;
            }

            float sourceFracRow =
              float(${l[0]}) *
                (float(dyR) / float(${u[0]}));

            float sourceFracCol =
                float(${l[1]}) *
                  (float(dyC) / float(${u[1]}));

            int sourceNearestRow = int(min(
                float(int(${n}) - 1),
                ${o} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${i}) - 1),
                ${o} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function _te(r){let{inputs:t,backend:e,attrs:o}=r,{images:n,dy:i}=t,{alignCorners:s}=o,a=new C0(i.shape,n.shape,s);return e.runWebGLProgram(a,[i],i.dtype)}var oO={kernelName:wm,backendName:"webgl",kernelFunc:_te};var k0=class{constructor(t,e){this.variableNames=["x"];let o=t.length;if(o>4)throw new Error(`WebGL backend: Reverse of rank-${o} tensor is not yet supported`);if(this.outputShape=t,o===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${t[0]} - coord - 1));
        }
      `;return}let n=a=>e.indexOf(a)!==-1&&t[a]!==1?`${t[a]} - coords[${a}] - 1`:`coords[${a}]`,i=t.map((a,l)=>n(l)).join(","),s=Me(o);this.userCode=`
      void main() {
        ${s} coords = getOutputCoords();
        setOutput(getX(${i}));
      }
    `}};var I0=class{constructor(t,e){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;let o=t.length;if(o>4)throw new Error(`WebGL backend: Reverse of rank-${o} tensor is not yet supported`);this.outputShape=t;let n=At("rc",o),i=`${n[o-1]} + 1 < ${this.outputShape[o-1]}`,s=`${n[o-2]} + 1 < ${this.outputShape[o-2]}`,a=Me(o);o===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${t[0]} - rc - 1),
            ${t[0]} - rc - 1);
          if(${i}){
              result.g = getChannel(getX(${t[0]} - (rc  + 1) - 1),
                ${t[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${a} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${l(n.slice())};
          if(${i}){
            result.g = ${u(n.slice())};
          }
          if(${s}) {
            result.b = ${c(n.slice())};
            if(${i}) {
              result.a = ${p(n.slice())};
            }
          }
          setOutput(result);
        }
    `;function l(f){return d(f)}function u(f){return f[o-1]="("+f[o-1]+" + 1)",d(f)}function c(f){return f[o-2]="("+f[o-2]+" + 1)",d(f)}function p(f){return f[o-1]="("+f[o-1]+" + 1)",f[o-2]="("+f[o-2]+" + 1)",d(f)}function d(f){let g=t.map((b,I)=>m(I,f)),x=g.join(","),y=g.slice(-2).join(",");return`getChannel(getX(${x}), vec2(${y}))`}function m(f,g){return e.indexOf(f)!==-1&&t[f]!==1?`${t[f]} - ${g[f]} - 1`:`${g[f]}`}}};function Cte(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{dims:i}=o,s=n.shape.length,a=S.parseAxisParam(i,n.shape);if(s===0)return Dt({inputs:{x:n},backend:e});let l=G().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new I0(n.shape,a):new k0(n.shape,a);return e.runWebGLProgram(l,[n],n.dtype)}var nO={kernelName:Eu,backendName:"webgl",kernelFunc:Cte};var T0=class{constructor(t,e){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];let o=t[1],n=t[2];this.outputShape=t;let i="";typeof e=="number"?i=`float outputValue = ${e.toFixed(2)};`:i=`
        vec3 fill = vec3(${e.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${i}
          if(coordX >= 0 && coordX < ${n} && coordY >= 0 && coordY < ${o}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}};var iO={kernelName:oc,backendName:"webgl",kernelFunc:({inputs:r,attrs:t,backend:e})=>{let{image:o}=r,{radians:n,fillValue:i,center:s}=t,a=e,l=new T0(o.shape,i),[u,c]=P.getImageCenter(s,o.shape[1],o.shape[2]),p=[[u,c,Math.sin(n),Math.cos(n)]];return a.runWebGLProgram(l,[o],o.dtype,p)}};var kte=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,Ite=Ie({opSnippet:kte}),sO={kernelName:Nu,backendName:"webgl",kernelFunc:Ite};var Tte="return inversesqrt(x);",Ete=Ie({opSnippet:Tte,cpuKernelImpl:L$}),aO={kernelName:$i,backendName:"webgl",kernelFunc:Ete};var ps=class{constructor(t,e,o,n,i,s,a=!0,l=!1){this.variableNames=["updates","indices","defaultValue"],this.outputShape=s;let u=Me(i.length),c=Me(s.length),p="";o===1?p="i":o===2&&(p="i, j");let d=`getIndices(${p})`,m="";n===1?m="i":n===2&&(m="i, coords[1]");let f=`getUpdates(${m})`,g="";l&&(g="coords[0], coords[1]");let x=`getDefaultValue(${g})`,y=e>1?"strides[j]":"strides";this.userCode=`
        ${u} strides = ${u}(${i});

        void main() {
          ${c} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${t}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${e}; j++) {
              int index = round(${d});
              flattenedIndex += index * ${y};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${f};
              found = true;
            }
          }
          setOutput(mix(${x}, sum, float(found)));
        }
      `}};var E0=class{constructor(t,e,o,n,i,s,a=!0,l=!1){this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=s;let u=Me(i.length),c=Me(s.length),p="";o===1?p="i":o===2&&(p="i, j");let d=`getIndices(${p})`,m="";n===1?m="i":n===2&&(m="i, coords[1]");let f=`getUpdates(${m})`,g="";l&&(g="coords[0], coords[1]");let x=`getDefaultValue(${g})`,y=e>1?"strides[j]":"strides",b=e>1?"strides[j + 1]":"strides";this.userCode=`
        ${u} strides = ${u}(${i});

        void main() {
          ${c} coords = getOutputCoords();
          vec4 sum = vec4(0.);
          vec4 found = vec4(0.);
          for (int i = 0; i < ${t}; i+=2) {
            ivec2 flattenedIndex = ivec2(0);
            for (int j = 0; j < ${e}; j+=2) {
              ivec4 index = round(${d});
              flattenedIndex += index.xz * ${y};
              if (j + 1 < ${e}) {
                flattenedIndex += index.yw * ${b};
              }
            }
            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||
                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {
              vec4 updVals = ${f};
              if (flattenedIndex[0] == coords[0]) {
                sum.xy += updVals.xy;
                found.xy = vec2(1.);
              } else if (flattenedIndex[0] == coords[0] + 1) {
                sum.zw += updVals.xy;
                found.zw = vec2(1.);
              }
              if (flattenedIndex[1] == coords[0]) {
                sum.xy += updVals.zw;
                found.xy = vec2(1.);
              } else if (flattenedIndex[1] == coords[0] + 1) {
                sum.zw += updVals.zw;
                found.zw = vec2(1.);
              }
            }
          }
          setOutput(mix(${x}, sum, found));
        }
      `}};function Nte(r){let{inputs:t,backend:e,attrs:o}=r,{indices:n,updates:i}=t,{shape:s}=o,{sliceRank:a,numUpdates:l,sliceSize:u,strides:c,outputSize:p}=P.calculateShapes(i,n,s),d=[p/u,u];if(p===0)return e.makeTensorInfo(s,n.dtype);let m=ue({inputs:{x:n},backend:e,attrs:{shape:[l,a]}}),f=ue({inputs:{x:i},backend:e,attrs:{shape:[l,u]}}),g=e.makeTensorInfo([],"float32",new Float32Array([0])),x;G().getBool("WEBGL_PACK")?x=new E0(l,a,m.shape.length,f.shape.length,c,d):x=new ps(l,a,m.shape.length,f.shape.length,c,d);let y=e.runWebGLProgram(x,[f,m,g],f.dtype),b=ue({inputs:{x:y},backend:e,attrs:{shape:s}});return e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(y),e.disposeIntermediateTensorInfo(g),b}var lO={kernelName:Ru,backendName:"webgl",kernelFunc:Nte};var N0=class{constructor(t,e,o,n){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[t,o];let i="while (left < right) {",s=`for (int i = 0; i < ${Math.ceil(Math.log2(e+1))}; ++i) { if (left >= right) break;`,a=G().getNumber("WEBGL_VERSION")===2?i:s,l=n==="left"?"<":"<=";this.userCode=`
       int findBound(int batch, float value) {
         int left = 0;
         int right = numInputs;
         int mid;
         ${a}
           mid = (left + right) / 2;
           if (getSortedSequence(batch, mid) ${l} value) {
             left = mid + 1;
           } else {
             right = mid;
           }
         }
         return right;
       }

       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int valueIndex = coords[1];

         float value = getValues(batch, valueIndex);

         setOutput(float(findBound(batch, value)));
       }
     `}};function Rte(r){let{inputs:t,backend:e,attrs:o}=r,{sortedSequence:n,values:i}=t,{side:s}=o,a=new N0(n.shape[0],n.shape[1],i.shape[1],s),l=[[n.shape[1]]];return e.runWebGLProgram(a,[n,i],"int32",l)}var uO={kernelName:$u,backendName:"webgl",kernelFunc:Rte};var R0=class{constructor(t,e,o){this.variableNames=["c","a","b"],this.outputShape=e;let n,i;if(o>4)throw Error(`Where for rank ${o} is not yet supported`);if(o===1)i="resRC",n="resRC";else{let a=["resRC.x","resRC.y","resRC.z","resRC.w"],l=[],u=[];for(let c=0;c<e.length;c++)u.push(`${a[c]}`),c<t&&l.push(`${a[c]}`);n=l.join(),i=u.join()}let s=Me(o);this.userCode=`
      void main() {
        ${s} resRC = getOutputCoords();
        float cVal = getC(${n});
        if (cVal >= 1.0) {
          setOutput(getA(${i}));
        } else {
          setOutput(getB(${i}));
        }
      }
    `}};function Pte(r){let{inputs:t,backend:e}=r,{condition:o,t:n,e:i}=t,s=new R0(o.shape.length,n.shape,n.shape.length);return e.runWebGLProgram(s,[o,n,i],Et(n.dtype,i.dtype))}var cO={kernelName:Au,backendName:"webgl",kernelFunc:Pte};var $te=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${P.SELU_SCALEALPHA};
  float scale = ${P.SELU_SCALE};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,Ate=Ie({opSnippet:$te}),pO={kernelName:Du,backendName:"webgl",kernelFunc:Ate};var Dte=Bo+`
  return 1.0 / (1.0 + exp(-1.0 * x));
`,Fte=`
  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Ote=Ie({opSnippet:Dte,packedOpSnippet:Fte,cpuKernelImpl:B$}),dO={kernelName:Ai,backendName:"webgl",kernelFunc:Ote};var Lte=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,Mte=Ie({opSnippet:Lte}),mO={kernelName:Lu,backendName:"webgl",kernelFunc:Mte};var Bte=Bo+`
  return sin(x);
`,Vte=`
  vec4 result = sin(x);
  bvec4 isNaN = isnan(x);
  ${ho}
  return result;
`,Wte=Ie({opSnippet:Bte,packedOpSnippet:Vte}),fO={kernelName:Fu,backendName:"webgl",kernelFunc:Wte};var Ute=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,zte=Ie({opSnippet:Ute}),hO={kernelName:Ou,backendName:"webgl",kernelFunc:zte};var Gte=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,Hte=Ie({opSnippet:Gte}),gO={kernelName:Mu,backendName:"webgl",kernelFunc:Hte};var Kte=r=>{let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{blockShape:i,paddings:s}=o;S.assert(n.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");let a=i.reduce((y,b)=>y*b),l=[[0,0]];l.push(...s);for(let y=1+i.length;y<n.shape.length;++y)l.push([0,0]);let u=[],c=b1({inputs:{x:n},backend:e,attrs:{paddings:l,constantValue:0}}),p=P.getReshaped(c.shape,i,a,!1),d=P.getPermuted(p.length,i.length,!1),m=P.getReshapedPermuted(c.shape,i,a,!1),f=ue({inputs:{x:c},backend:e,attrs:{shape:p}}),g=vt({inputs:{x:f},backend:e,attrs:{perm:d}}),x=ue({inputs:{x:g},backend:e,attrs:{shape:m}});return u.push(c),u.push(f),u.push(g),u.forEach(y=>e.disposeIntermediateTensorInfo(y)),x},xO={kernelName:Vu,backendName:"webgl",kernelFunc:Kte};function qte(r){let{inputs:t,backend:e}=r,{indices:o,values:n,denseShape:i,defaultValue:s}=t;if(i.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
         ${i.shape}`);if(o.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
         ${o.shape}`);if(n.shape.length!==1)throw new Error(`Values must be a vector, saw:
         ${n.shape}`);if(s.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${s.shape}`);let a=e.readSync(o.dataId),l=e.readSync(n.dataId),u=e.readSync(i.dataId),c=e.readSync(s.dataId)[0],[p,d,m,f,g]=W$(a,o.shape,o.dtype,l,n.dtype,u,c);return[e.makeTensorInfo(d,o.dtype,p),e.makeTensorInfo([d[0]],n.dtype,m),e.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(x=>Number(x)))),e.makeTensorInfo([g.length],o.dtype,new Int32Array(g))]}var yO={kernelName:Cm,backendName:"webgl",kernelFunc:qte};function jte(r){let{inputs:t,backend:e}=r,{inputIndices:o,inputShape:n,newShape:i}=t;if(o.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape ${o.shape}`);if(n.shape.length!==1)throw new Error(`Input shape should be a vector but received shape ${n.shape}`);if(i.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${i.shape}`);let s=Array.from(e.readSync(n.dataId)),a=e.readSync(o.dataId),l=Array.from(e.readSync(i.dataId)),[u,c,p]=U$(a,o.shape,o.dtype,s,l);return[e.makeTensorInfo(c,o.dtype,u),e.makeTensorInfo([p.length],i.dtype,new Int32Array(p))]}var vO={kernelName:km,backendName:"webgl",kernelFunc:jte};function Xte(r){let{inputs:t,backend:e}=r,{data:o,indices:n,segmentIds:i}=t;if(o.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(n.shape.length!==1)throw new Error(`Indices should be a vector but received shape
              ${n.shape}`);if(i.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
              ${i.shape}`);let s=e.readSync(o.dataId),a=e.readSync(n.dataId),l=e.readSync(i.dataId),[u,c]=px(s,o.shape,o.dtype,a,l,!0);return e.makeTensorInfo(c,o.dtype,u)}var bO={kernelName:zu,backendName:"webgl",kernelFunc:Xte};function Yte(r){let{inputs:t,backend:e}=r,{data:o,indices:n,segmentIds:i}=t;if(o.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(n.shape.length!==1)throw new Error(`Indices should be a vector but received shape
             ${n.shape}`);if(i.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
             ${i.shape}`);let s=e.readSync(o.dataId),a=e.readSync(n.dataId),l=e.readSync(i.dataId),[u,c]=px(s,o.shape,o.dtype,a,l);return e.makeTensorInfo(c,o.dtype,u)}var SO={kernelName:Gu,backendName:"webgl",kernelFunc:Yte};function Qte(r){let{inputs:t,backend:e,attrs:o}=r,{sparseIndices:n,sparseValues:i,defaultValue:s}=t,{outputShape:a}=o,{sliceRank:l,numUpdates:u,sliceSize:c,strides:p,outputSize:d}=P.calculateShapes(i,n,a),m=!1;if(i.dtype==="string"){let y=e.bufferSync(n),b=e.bufferSync(i),I=S.decodeString(e.readSync(s.dataId)[0]),N=M$(y,b,a,d,c,u,l,p,I,m);return e.makeTensorInfo(a,N.dtype,N.values)}let f=new ps(u,l,n.shape.length,i.shape.length,p,[d,1],m),g=e.runWebGLProgram(f,[i,n,s],i.dtype),x=ue({inputs:{x:g},backend:e,attrs:{shape:a}});return e.disposeIntermediateTensorInfo(g),x}var wO={kernelName:Hu,backendName:"webgl",kernelFunc:Qte};function Zte(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{numOrSizeSplits:i,axis:s}=o,a=S.parseAxisParam(s,n.shape)[0],l=P.prepareSplitSize(n,i,a),u=n.shape.length,c=new Array(u).fill(0),p=n.shape.slice();return l.map(d=>{let m=[...p];m[a]=d;let f=Jo({inputs:{x:n},backend:e,attrs:{begin:c,size:m}});return c[a]+=d,f})}var _O={kernelName:Wu,backendName:"webgl",kernelFunc:Zte};var CO="return sqrt(x);",Jte=Ie({opSnippet:CO,packedOpSnippet:CO,cpuKernelImpl:z$}),kO={kernelName:Di,backendName:"webgl",kernelFunc:Jte};var ere="return x * x;",tre=Ie({opSnippet:ere}),IO={kernelName:Im,backendName:"webgl",kernelFunc:tre};var TO="return (a - b) * (a - b);",rre=nt({opSnippet:TO,packedOpSnippet:TO}),EO={kernelName:Fi,backendName:"webgl",kernelFunc:rre};function ore(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t;if(n.dtype!=="string")throw new Error("Input must be of datatype string");let i=e.readSync(n.dataId),s=P.fromUint8ToStringArray(i),a=G$(s,"string",o);return e.makeTensorInfo(n.shape,"string",a)}var NO={kernelName:Ku,backendName:"webgl",kernelFunc:ore};function nre({inputs:r,attrs:t,backend:e}){let{x:o}=r,n=Ut+`
    return x > 0.0 ? 1.0 : float(${t.alpha});
  `,i=new tr(o.shape,n);return e.runWebGLProgram(i,[o],o.dtype)}var RO={kernelName:rc,backendName:"webgl",kernelFunc:nre};var P0=class{constructor(t,e,o){this.variableNames=["x"],this.outputShape=o;let n=o.length,i=Me(o.length),s=Me(o.length),a="";if(n===1)a="coords * strides + begin";else{let l=0;a=o.map((u,c)=>(l++,o.length===1?`coords * strides[${c}] + begin[${c}]`:`coords[${l-1}] * strides[${c}] + begin[${c}]`)).join(",")}this.userCode=`
      ${i} begin = ${i}(${t});
      ${i} strides = ${i}(${e});

      void main() {
        ${s} coords = getOutputCoords();
        setOutput(getX(${a}));
      }
    `}};function ire(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{begin:i,end:s,strides:a,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:p,shrinkAxisMask:d}=o,{finalShapeSparse:m,finalShape:f,isIdentity:g,sliceDim0:x,isSimpleSlice:y,begin:b,end:I,strides:N}=Kt.sliceInfo(n.shape,i,s,a,l,u,c,p,d),M;if(g)M=ue({inputs:{x:n},backend:e,attrs:{shape:f}});else if(x||y){S.assert(n.shape.length>=1,()=>`Input must have rank at least 1, got: ${n.shape.length}`);let W=Kt.computeOutShape(b,I,N),H=Jo({inputs:{x:n},backend:e,attrs:{begin:b,size:W}});M=ue({inputs:{x:H},backend:e,attrs:{shape:f}}),e.disposeIntermediateTensorInfo(H)}else if(e.shouldExecuteOnCPU([n])){let H=e.readSync(n.dataId),K=Le(n.shape,n.dtype,H),X=H$(m,K,N,b);M=e.makeTensorInfo(f,n.dtype,X.values)}else{let H=new P0(b,N,m);M=e.runWebGLProgram(H,[n],n.dtype)}let B=ue({inputs:{x:M},backend:e,attrs:{shape:f}});return e.disposeIntermediateTensorInfo(M),B}var PO={kernelName:qu,backendName:"webgl",kernelFunc:ire};function sre(r){let{inputs:t,backend:e,attrs:o}=r,{separator:n,nGramWidths:i,leftPad:s,rightPad:a,padWidth:l,preserveShortSequences:u}=o,{data:c,dataSplits:p}=t,d=e.readSync(c.dataId),m=e.readSync(p.dataId),[f,g]=K$(d,m,n,i,s,a,l,u);return[e.makeTensorInfo([f.length],"string",f),e.makeTensorInfo(p.shape,"int32",g)]}var $O={kernelName:ju,backendName:"webgl",kernelFunc:sre};function are(r){let{inputs:t,backend:e,attrs:o}=r,{skipEmpty:n}=o,{input:i,delimiter:s}=t;if(i.dtype!=="string")throw new Error("Input must be of datatype string");if(i.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${i.shape}`);if(s.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${s.shape}`);let a=e.readSync(i.dataId),l=e.readSync(s.dataId)[0],[u,c,p]=q$(a,l,n),d=c.length;return[e.makeTensorInfo([d,2],"int32",u),e.makeTensorInfo([d],"string",c),e.makeTensorInfo([2],"int32",new Int32Array(p))]}var AO={kernelName:Tm,backendName:"webgl",kernelFunc:are};function lre(r){let{inputs:t,backend:e,attrs:o}=r,{numBuckets:n}=o,{input:i}=t;if(i.dtype!=="string")throw new Error("Input must be of datatype string");if(n<=0)throw new Error("Number of buckets must be at least 1");let s=e.readSync(i.dataId),a=j$(s,n);return e.makeTensorInfo(i.shape,"int32",a)}var DO={kernelName:Em,backendName:"webgl",kernelFunc:lre};var ure="return tan(x);",cre=Ie({opSnippet:ure}),FO={kernelName:Xu,backendName:"webgl",kernelFunc:cre};var pre=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,dre=Ie({opSnippet:pre}),OO={kernelName:Yu,backendName:"webgl",kernelFunc:dre};function mre(r){let{inputs:t,backend:e,attrs:o}=r,{tensor:n,indices:i,updates:s}=t,{}=o,{sliceRank:a,numUpdates:l,sliceSize:u,strides:c,outputSize:p}=P.calculateShapes(s,i,n.shape),d=[p/u,u];if(p===0)return e.makeTensorInfo(n.shape,i.dtype);let m=ue({inputs:{x:i},backend:e,attrs:{shape:[l,a]}}),f=ue({inputs:{x:s},backend:e,attrs:{shape:[l,u]}}),g=ue({inputs:{x:n},backend:e,attrs:{shape:d}}),x=new ps(l,a,m.shape.length,f.shape.length,c,d,!1,!0),y=e.runWebGLProgram(x,[f,m,g],g.dtype),b=ue({inputs:{x:y},backend:e,attrs:{shape:n.shape}});return e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(g),e.disposeIntermediateTensorInfo(y),b}var LO={kernelName:Pu,backendName:"webgl",kernelFunc:mre};var $0=class{constructor(t,e){this.variableNames=["A"];let o=new Array(t.length);for(let s=0;s<o.length;s++)o[s]=t[s]*e[s];this.outputShape=o,this.rank=o.length;let n=Me(this.rank),i=fre(t);this.userCode=`
      void main() {
        ${n} resRC = getOutputCoords();
        setOutput(getA(${i}));
      }
    `}};function fre(r){let t=r.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(t===1)return`imod(resRC, ${r[0]})`;let e=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],o=[];for(let n=0;n<r.length;n++)o.push(`imod(${e[n]}, ${r[n]})`);return o.join()}function w1(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{reps:i}=o;if(n.dtype==="string"||n.shape.length>5){let l=e.readSync(n.dataId),u=n.dtype==="string"?l.map(d=>S.decodeString(d)):l,c=Le(n.shape,n.dtype,u),p=Y$(c,i);return e.makeTensorInfo(p.shape,p.dtype,p.values)}let s=new $0(n.shape,i);return e.runWebGLProgram(s,[n],n.dtype)}var MO={kernelName:Li,backendName:"webgl",kernelFunc:w1};var A0=class{constructor(t){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=t,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}},D0=class{constructor(t){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=t,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}};function ba(r,t){t!==null&&r.disposeIntermediateTensorInfo(t)}function BO(r){let t=1;for(;t<r;)t*=2;return t}function hre(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{k:i,sorted:s}=o,a=G().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=G().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),u=n.shape,c=u[u.length-1];if(e.shouldExecuteOnCPU([n])||c<a||i>l){let X=e.readSync(n.dataId),[re,ce]=Q$(X,u,n.dtype,i,s);return[e.makeTensorInfo(re.shape,re.dtype,re.values),e.makeTensorInfo(ce.shape,ce.dtype,ce.values)]}if(i===0)return u[u.length-1]=0,[e.makeTensorInfo(u,n.dtype,[]),e.makeTensorInfo(u,"int32",[])];if(c===1)return[n,ni({attrs:{shape:u,dtype:"int32",value:0},backend:e})];let p=e.texData.get(n.dataId),d=p!==null&&p.isPacked,m=d?e.unpackTensor(n):n,g=S.sizeFromShape(u)/c,x=ue({inputs:{x:m},attrs:{shape:[g,c]},backend:e});d&&ba(e,m);let y=BO(i),b=BO(c),I=null,N=()=>I===null?[x,x]:[x,I],M=(X,re,ce)=>{let pe=N(),be=new A0(ce),Te=[[c],[I===null?1:0],[Number.NEGATIVE_INFINITY],[X],[re]],qe=I;I=e.runWebGLProgram(be,pe,"int32",Te),ba(e,qe)};for(let X=1;X<y;X*=2){let re=X*2;for(let ce=X;ce>=1;ce/=2)M(re,ce,[g,b])}for(let X=b;X>y;X/=2){let re=N(),ce=new D0([g,X/2]),be=[[c],[I===null?1:0],[y]],we=I;I=e.runWebGLProgram(ce,re,"int32",be),ba(e,we);let Te=y/2,qe=Te*2;for(let je=Te;je>=1;je/=2)M(qe,je,I.shape)}let B=I;I=Jo({inputs:{x:I},backend:e,attrs:{begin:0,size:[g,i]}}),ba(e,B);let W=h1({inputs:{x,indices:I},backend:e,attrs:{axis:1,batchDims:1}});ba(e,x);let H=u.slice(0,-1);H.push(i),B=I,I=ue({inputs:{x:I},attrs:{shape:H},backend:e}),ba(e,B);let K=W;return W=ue({inputs:{x:W},attrs:{shape:H},backend:e}),ba(e,K),[W,I]}var VO={kernelName:Qu,backendName:"webgl",kernelFunc:hre};var F0=class{constructor(t,e,o,n,i,s){this.variableNames=["Image","Transforms"],this.outputShape=s;let a=o==="nearest"?1:2,l;switch(n){case"constant":l=1;break;case"reflect":l=2;break;case"wrap":l=3;break;case"nearest":l=4;break;default:l=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${l} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${l} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${l} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${t} && 0 <= coordX && coordX < ${e}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${i});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${i});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${e}));
                float mapY = mapCoord(inY, float(${t}));

                if (${a} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}};function gre(r){let{inputs:t,backend:e,attrs:o}=r,{image:n,transforms:i}=t,{interpolation:s,fillMode:a,fillValue:l,outputShape:u}=o,[c,p,d,m]=n.shape,[f,g]=u??[p,d],x=[c,f,g,m],y=new F0(p,d,s,a,l,x);return e.runWebGLProgram(y,[n,i],"float32")}var WO={kernelName:Zu,backendName:"webgl",kernelFunc:gre};function xre(r){let{inputs:t,attrs:e,backend:o}=r,{axis:n}=e,{x:i}=t;Rn(i,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");let s=o.readSync(i.dataId),{outputValues:a,outputShape:l,indices:u}=Z$(s,n,i.shape,i.dtype);return[o.makeTensorInfo(l,i.dtype,a),o.makeTensorInfo([u.length],"int32",u)]}var UO={kernelName:Nm,backendName:"webgl",kernelFunc:xre};function yre(r){let{inputs:t,backend:e,attrs:o}=r,{value:n}=t,{axis:i}=o;i<0&&(i+=n.shape.length);let s=n,a=s.shape.length,l=n.shape[i],u=new Array(a-1),c=0;for(let g=0;g<a;g++)g!==i&&(u[c++]=s.shape[g]);let p=[],d=new Array(a).fill(0),m=s.shape.slice();m[i]=1;let f=new Array(l);for(let g=0;g<f.length;g++){d[i]=g;let x=Jo({inputs:{x:s},backend:e,attrs:{begin:d,size:m}}),y=ue({inputs:{x},backend:e,attrs:{shape:u}});f[g]=y,p.push(x)}return p.forEach(g=>e.disposeIntermediateTensorInfo(g)),f}var zO={kernelName:Ju,backendName:"webgl",kernelFunc:yre};var O0=class{constructor(t,e){this.variableNames=["x","segmentIds"];let o=t.windowSize,n=t.batchSize,i=t.inSize,s=t.numSegments,a=s*Math.ceil(i/o);this.outputShape=[n,a];let l="0.0",u="sumValue",c=Math.floor(o/4)*4,p=o%4,d=`
        sumValue += dot(values, segFilter);
    `,m="";i%o>0&&(m=`
        if (inIdx < 0 || inIdx >= ${i}) {
          return initializationValue;
        }
      `);let f="";i%o>0&&(f=`
        if (inIdx < 0 || inIdx >= ${i}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${l};

      float getValue(int batch, int inIdx) {
        ${m}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${f}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${s})) * float(${o}));
        int currentSeg = int(mod(float(outIdx), float(${s})));

        float sumValue = 0.0;

        for (int i = 0; i < ${c}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${d}
        }

        int inIdx = inOffset + ${c};
        if (${p===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${d}
        } else if (${p===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${d}
        } else if (${p===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${d}
        }
        setOutput(${u});
      }
    `}};function vre(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,segmentIds:i}=t,{numSegments:s}=o,a=n.shape.length,l=[],u=0,c=P.getAxesPermutation([u],a),p=n;c!=null&&(p=vt({inputs:{x:n},backend:e,attrs:{perm:c}}),l.push(p),u=P.getInnerMostAxes(1,a)[0]);let d=P.segment_util.computeOutShape(p.shape,u,s),m=S.sizeFromShape([p.shape[u]]),f=ue({inputs:{x:p},backend:e,attrs:{shape:[-1,m]}});l.push(f);let g=Wn(n.dtype),x=(N,M,B,W,H)=>{let K=N.shape[0],X=N.shape[1],re=P.segment_util.segOpComputeOptimalWindowSize(X,H),ce={windowSize:re,inSize:X,batchSize:K,numSegments:H},pe=new O0(ce,M),be=e.compileAndRun(pe,[N,B],W);if(l.push(be),be.shape[1]===H)return be;let we=S1({backend:e,attrs:{start:0,stop:H,step:1,dtype:"float32"}}),Te=w1({inputs:{x:we},backend:e,attrs:{reps:[X/re]}});return l.push(we),l.push(Te),x(be,M,Te,W,H)},y=x(f,"unsortedSegmentSum",i,g,s),b=ue({inputs:{x:y},backend:e,attrs:{shape:d}}),I=b;if(c!=null){l.push(b);let N=P.getUndoAxesPermutation(c);I=vt({inputs:{x:I},backend:e,attrs:{perm:N}})}return l.forEach(N=>e.disposeIntermediateTensorInfo(N)),I}var GO={kernelName:ec,backendName:"webgl",kernelFunc:vre};var bre=[IA,EA,NA,RA,$A,AA,DA,FA,MA,BA,VA,WA,UA,zA,GA,HA,KA,qA,jA,XA,YA,ZA,JA,eD,tD,iD,aD,lD,gA,cD,dD,mD,fD,hD,gD,xD,yD,vD,bD,SD,CD,kD,ID,TD,ED,ND,RD,PD,$D,AD,DD,FD,OD,LD,MD,BD,WD,UD,zD,GD,KD,qD,jD,XD,YD,QD,ZD,JD,eF,hA,tF,pD,rF,oF,nF,xA,iF,sF,aF,lF,uF,cF,pF,dF,mF,fF,gF,xF,yF,vF,bF,SF,_F,kF,IF,TF,EF,NF,DF,bA,FF,OF,LF,MF,rD,BF,UF,zF,GF,HF,yA,KF,qF,jF,XF,YF,oD,RF,QF,ZF,JF,wA,eO,tO,rO,oO,nO,iO,sO,aO,lO,uO,cO,pO,dO,mO,fO,hO,QA,AF,gO,xO,yO,vO,bO,SO,wO,_O,kO,IO,EO,NO,RO,PO,$O,AO,DO,$F,CA,FO,OO,LO,MO,VO,WO,kA,UO,zO,GO,VF];for(let r of bre)Pm(r);var Sre=["videoElement"],wre=["canvasElement"];function _re(r,t){if(r&1&&(k(0,"div",32)(1,"div",33),L(2),T(),k(3,"div",34),L(4,"REPS"),T()()),r&2){let e=O();E(2),Oe(e.repCount)}}function Cre(r,t){r&1&&(k(0,"p"),L(1,"Requesting camera access..."),T())}function kre(r,t){r&1&&(k(0,"p"),L(1,"Loading video feed..."),T())}function Ire(r,t){r&1&&(k(0,"p"),L(1,"Loading AI model, please wait..."),T())}function Tre(r,t){if(r&1&&(k(0,"div",35),te(1,Cre,2,0,"p",36)(2,kre,2,0,"p",36)(3,Ire,2,0,"p",36),T()),r&2){let e=O();E(),D("ngIf",!e.videoStream),E(),D("ngIf",e.videoStream&&!e.isCameraReady),E(),D("ngIf",e.isCameraReady&&!e.modelReady)}}function Ere(r,t){r&1&&(k(0,"p"),L(1,"Camera access was lost or denied. Please reload or check permissions"),T())}function Nre(r,t){r&1&&(k(0,"p"),L(1,"AI Model failed to load. Try reloading"),T())}function Rre(r,t){if(r&1){let e=me();k(0,"button",38),ne("click",function(){Y(e);let n=O(2);return Q(n.setupCamera())}),L(1,"Retry Camera"),T()}}function Pre(r,t){if(r&1){let e=me();k(0,"button",38),ne("click",function(){Y(e);let n=O(2);return Q(n.loadPoseDetectionModel())}),L(1,"Retry AI Model"),T()}}function $re(r,t){if(r&1&&(k(0,"div",35),te(1,Ere,2,0,"p",36)(2,Nre,2,0,"p",36)(3,Rre,2,0,"button",37)(4,Pre,2,0,"button",37),T()),r&2){let e=O();E(),D("ngIf",!(e.videoStream!=null&&e.videoStream.active)),E(),D("ngIf",!e.modelReady&&(e.videoStream==null?null:e.videoStream.active)),E(),D("ngIf",!(e.videoStream!=null&&e.videoStream.active)),E(),D("ngIf",!e.modelReady&&(e.videoStream==null?null:e.videoStream.active))}}function Are(r,t){if(r&1){let e=me();k(0,"button",39),ne("click",function(){Y(e);let n=O();return Q(n.startWorkout())}),L(1," Start Workout "),T()}if(r&2){let e=O();D("disabled",!e.isCameraReady||!e.modelReady)}}function Dre(r,t){if(r&1){let e=me();k(0,"button",40),ne("click",function(){Y(e);let n=O();return Q(n.stopWorkout())}),L(1," Stop Workout "),T()}}function Fre(r,t){if(r&1){let e=me();k(0,"button",41),ne("click",function(){Y(e);let n=O();return Q(n.toggleRecording())}),L(1),T()}if(r&2){let e=O();yo("recording",e.isRecording),E(),fe(" ",e.isRecording?"Stop Recording":"Start Recording"," ")}}function Ore(r,t){if(r&1&&(k(0,"li",49),L(1),Ke(2,"uppercase"),T()),r&2){let e=t.$implicit;D("ngClass","feedback-"+e.type),E(),Ft(" [",ht(2,3,e.type),"] ",e.message," ")}}function Lre(r,t){r&1&&(k(0,"div",50),L(1," No feedback yet. Start your workout! "),T())}function Mre(r,t){if(r&1){let e=me();k(0,"div",42),ne("click",function(){Y(e);let n=O();return Q(n.toggleFeedbackVisibility())}),k(1,"div",43),ne("click",function(n){return Y(e),Q(n.stopPropagation())}),k(2,"div",44)(3,"h3"),L(4,"Feedback & Log"),T(),k(5,"button",45),ne("click",function(){Y(e);let n=O();return Q(n.toggleFeedbackVisibility())}),L(6,"\xD7"),T()(),k(7,"div",46)(8,"ul"),te(9,Ore,3,5,"li",47),T(),te(10,Lre,2,0,"div",48),T()()()}if(r&2){let e=O();E(9),D("ngForOf",e.feedbackMessages),E(),D("ngIf",e.feedbackMessages.length===0)}}var L0=class r{constructor(t){this.hostElement=t}videoElementRef;canvasElementRef;videoStream=null;mediaRecorder=null;recordedChunks=[];poseDetector=null;modelReady=!1;isFeedbackVisible=!1;isControlsExpanded=!1;isCameraReady=!1;isRecording=!1;isWorkoutActive=!1;repCount=0;elapsedTime=0;timerInterval;feedbackMessages=[];currentExercise="Right Bicep Curl";changeDetectorRef=$e(Ea);ngZone=$e(NS);animationFrameId=null;currentRepCycleState="START";exerciseSpecificLogic=null;KEYPOINT_SCORE_THRESHOLD=.5;STABLE_FRAME_COUNT=3;lastFramesStates={};BICEP_ELBOW_ANGLE_UP=50;BICEP_ELBOW_ANGLE_DOWN=160;BICEP_WRIST_ELBOW_VERTICAL_DIFF_DOWN=10;SNATCH_HIP_EXTENSION_ANGLE_START=170;SNATCH_ARM_LOCKOUT_SHOULDER_WRIST_ALIGNMENT_Y=30;SNATCH_KNEE_ANGLE_BOTTOM=80;PRESS_ELBOW_ANGLE_UP=170;PRESS_ELBOW_ANGLE_RACK=90;PRESS_WRIST_SHOULDER_Y_DIFF_UP=-10;PRESS_WRIST_SHOULDER_Y_DIFF_RACK=20;PRESS_WRIST_SHOULDER_X_ALIGNMENT=30;PRESS_TORSO_LEAN_X_ALIGNMENT=40;JERK_ELBOW_LOCKOUT_ANGLE=165;JERK_ELBOW_RACK_ANGLE=90;JERK_KNEE_DIP_ANGLE=90;JERK_SECOND_DIP_KNEE_ANGLE=100;JERK_WRIST_SHOULDER_Y_DIFF_LOCKOUT=-20;JERK_WRIST_SHOULDER_X_ALIGNMENT=30;alternatingArm="";fabPosition={x:0,y:0};isFabDragging=!1;fabDragStartOffset={x:0,y:0};fabElementRef;ngOnInit(){return j(this,null,function*(){this.addFeedback("info","Initializing TensorFlow.js backend...");try{yield Oy("webgl"),yield Ly(),this.addFeedback("info",`TensorFlow.js backend set to: ${yn()}`)}catch(t){console.error("Error setting TF backend:",t),this.addFeedback("error",`Error setting TF backend: ${t instanceof Error?t.message:String(t)}`);try{yield Oy("cpu"),yield Ly(),this.addFeedback("warning",`Fell back to TF.js backend: ${yn()}`)}catch(e){this.addFeedback("error",`CPU backend also failed: ${e instanceof Error?e.message:String(e)}`);return}}yield this.setupCamera(),yield this.loadPoseDetectionModel(),this.setExerciseLogic(this.currentExercise),this.initializeFabPosition()})}ngOnDestroy(){this.stopWorkout(),this.stopCamera(),this.poseDetector&&(this.poseDetector.dispose(),this.addFeedback("info","Pose detection model disposed."),this.poseDetector=null)}setupCamera(){return j(this,null,function*(){try{if(navigator.mediaDevices&&navigator.mediaDevices.getUserMedia){if(this.videoStream=yield navigator.mediaDevices.getUserMedia({video:{facingMode:"user",width:{ideal:640},height:{ideal:480}}}),this.videoElementRef&&this.canvasElementRef){let t=this.videoElementRef.nativeElement,e=this.canvasElementRef.nativeElement;t.srcObject=this.videoStream,t.onloadedmetadata=()=>{t.play().then(()=>{this.isCameraReady=!0,this.addFeedback("info","Camera ready."),e.width=t.videoWidth,e.height=t.videoHeight,this.changeDetectorRef.detectChanges()}).catch(o=>{console.error("Error playing video:",o),this.addFeedback("error","Could not start video playback")})}}}else this.addFeedback("error","getUserMedia not supported in this browser."),this.isCameraReady=!1}catch(t){console.error("Error accessing camera:",t),this.addFeedback("error",`Error accessing camera: ${t instanceof Error?t.message:String(t)}`),t.name==="NotAllowedError"&&this.addFeedback("warning","Camera permission denied. Please allow camera access."),this.isCameraReady=!1}this.changeDetectorRef.detectChanges()})}loadPoseDetectionModel(){return j(this,null,function*(){this.poseDetector&&(this.poseDetector.dispose(),this.poseDetector=null),this.modelReady=!1,this.addFeedback("info","Loading pose detection model (MoveNet Lightning)..."),this.changeDetectorRef.detectChanges();try{let t=ar.MoveNet,e={modelType:mP.modelType.SINGLEPOSE_LIGHTNING};this.poseDetector=yield dP(t,e),this.modelReady=!0,this.addFeedback("success","Pose detection model loaded successfully!")}catch(t){console.error("Error loading pose detection model:",t),this.addFeedback("error",`Could not load AI model: ${t instanceof Error?t.message:String(t)}`),this.modelReady=!1}finally{this.changeDetectorRef.detectChanges()}})}startWorkout(){if(!this.isCameraReady){this.addFeedback("warning","Camera not ready.");return}if(!this.modelReady||!this.poseDetector){this.addFeedback("warning","AI Model not ready. Please wait or try reloading model.");return}this.isWorkoutActive=!0,this.repCount=0,this.elapsedTime=0,this.lastFramesStates={},this.currentRepCycleState="START",this.feedbackMessages=[{type:"success",message:"Workout started! Form tracking active."}],this.changeDetectorRef.detectChanges(),this.timerInterval=setInterval(()=>{this.elapsedTime++,this.changeDetectorRef.detectChanges()},1e3),this.animationFrameId&&cancelAnimationFrame(this.animationFrameId),this.animationFrameId=requestAnimationFrame(this.processVideoFrame)}stopWorkout(){this.isWorkoutActive=!1,this.timerInterval&&(clearInterval(this.timerInterval),this.timerInterval=null),this.animationFrameId&&(cancelAnimationFrame(this.animationFrameId),this.animationFrameId=null),this.addFeedback("info",`Workout stopped. Total reps: ${this.repCount}. Time: ${this.formatTime(this.elapsedTime)}`);let t=this.canvasElementRef?.nativeElement;if(t){let e=t.getContext("2d");e&&e.clearRect(0,0,t.width,t.height)}this.changeDetectorRef.detectChanges()}stopCamera(){this.videoStream&&(this.videoStream.getTracks().forEach(t=>t.stop()),this.videoStream=null),this.videoElementRef?.nativeElement.srcObject&&(this.videoElementRef.nativeElement.srcObject=null),this.isCameraReady=!1,this.changeDetectorRef.detectChanges()}processVideoFrame=()=>j(this,null,function*(){if(!this.isWorkoutActive||!this.videoElementRef||!this.canvasElementRef||!this.poseDetector||!this.modelReady){this.isWorkoutActive&&(this.animationFrameId=requestAnimationFrame(this.processVideoFrame));return}let t=this.videoElementRef.nativeElement,e=this.canvasElementRef.nativeElement;if(t.readyState<t.HAVE_CURRENT_DATA){this.animationFrameId=requestAnimationFrame(this.processVideoFrame);return}try{if((e.width!==t.videoWidth||e.height!==t.videoHeight)&&(e.width=t.videoWidth,e.height=t.videoHeight,t.videoWidth===0||t.videoHeight===0)){this.animationFrameId=requestAnimationFrame(this.processVideoFrame);return}let o=yield this.poseDetector.estimatePoses(t,{flipHorizontal:!1}),n=e.getContext("2d");if(n&&(n.clearRect(0,0,e.width,e.height),o&&o.length>0)){let i=o[0];this.drawPose(i.keypoints,n),this.analyzePoseForReps(i)}}catch(o){console.error("Error during pose estimation or drawing:",o),this.addFeedback("error","AI processing error. Workout may be affected.")}this.isWorkoutActive&&(this.animationFrameId=requestAnimationFrame(this.processVideoFrame))});drawPose(t,e){e.fillStyle="aqua";for(let i of t)i.score!=null&&i.score>=.3&&(e.beginPath(),e.arc(i.x,i.y,5,0,2*Math.PI),e.fill());let n=nP.getAdjacentPairs(ar.MoveNet);e.strokeStyle="lime",e.lineWidth=3;for(let[i,s]of n){let a=t[i],l=t[s];a&&l&&(a.score??0)>=.3&&(l.score??0)>=.3&&(e.beginPath(),e.moveTo(a.x,a.y),e.lineTo(l.x,l.y),e.stroke())}}setExerciseLogic(t){this.currentRepCycleState="START",this.repCount=0,this.lastFramesStates={},this.addFeedback("info",`Switched to exercise: ${t}`),this.currentExercise=t,t==="Right Bicep Curl"?this.exerciseSpecificLogic=this.analyzeRightBicepCurl:t==="Left Bicep Curl"?this.exerciseSpecificLogic=this.analyzeLeftBicepCurl:t==="Alternating Bicep Curl"?this.exerciseSpecificLogic=this.analyzeAlternatingBicepCurl:t==="Kettlebell Snatch"?this.exerciseSpecificLogic=this.analyzeKettlebellSnatch:t==="Kettlebell Press"?this.exerciseSpecificLogic=this.analyzeKettlebellPress:t==="Goblet Squat"?this.exerciseSpecificLogic=this.analyzeGobletSquat:t==="Deadlift"?this.exerciseSpecificLogic=this.analyzeDeadlift:t==="Kettlebell Jerk"?this.exerciseSpecificLogic=this.analyzeKettlebellJerk:(this.addFeedback("warning",`No specific logic implemented for exercise: ${t}`),this.exerciseSpecificLogic=null),this.changeDetectorRef.detectChanges()}analyzePoseForReps(t){this.exerciseSpecificLogic&&this.exerciseSpecificLogic.call(this,t)}analyzeRightBicepCurl(t){let e=t.keypoints.find(s=>s.name==="right_shoulder"),o=t.keypoints.find(s=>s.name==="right_elbow"),n=t.keypoints.find(s=>s.name==="right_wrist");if(!e||!o||!n||(e.score??0)<this.KEYPOINT_SCORE_THRESHOLD||(o.score??0)<this.KEYPOINT_SCORE_THRESHOLD||(n.score??0)<this.KEYPOINT_SCORE_THRESHOLD)return;let i=this.calculateAngle(e,o,n);i!==null&&(this.currentRepCycleState==="START"?i<this.BICEP_ELBOW_ANGLE_UP&&(this.currentRepCycleState="UP",this.addFeedback("info",`Curl: Up phase detected (Angle: ${i.toFixed(0)}\xB0)`)):this.currentRepCycleState==="UP"&&i>this.BICEP_ELBOW_ANGLE_DOWN&&(this.incrementRep(),this.currentRepCycleState="START",this.addFeedback("success",`Curl: Down phase, Rep Complete! (Angle: ${i.toFixed(0)}\xB0)`)))}analyzeLeftBicepCurl(t){let e=t.keypoints.find(s=>s.name==="left_shoulder"),o=t.keypoints.find(s=>s.name==="left_elbow"),n=t.keypoints.find(s=>s.name==="left_wrist");if(!e||!o||!n||(e.score??0)<this.KEYPOINT_SCORE_THRESHOLD||(o.score??0)<this.KEYPOINT_SCORE_THRESHOLD||(n.score??0)<this.KEYPOINT_SCORE_THRESHOLD)return;let i=this.calculateAngle(e,o,n);i!==null&&(this.currentRepCycleState==="START"?i<this.BICEP_ELBOW_ANGLE_UP&&(this.currentRepCycleState="UP",this.addFeedback("info",`Left Curl: Up phase detected (Angle: ${i.toFixed(0)}\xB0)`)):this.currentRepCycleState==="UP"&&i>this.BICEP_ELBOW_ANGLE_DOWN&&(this.incrementRep(),this.currentRepCycleState="START",this.addFeedback("success",`Left Curl: Down phase, Rep Complete! (Angle: ${i.toFixed(0)}\xB0)`)))}analyzeAlternatingBicepCurl(t){let e=t.keypoints.find(c=>c.name==="right_shoulder"),o=t.keypoints.find(c=>c.name==="right_elbow"),n=t.keypoints.find(c=>c.name==="right_wrist"),i=t.keypoints.find(c=>c.name==="left_shoulder"),s=t.keypoints.find(c=>c.name==="left_elbow"),a=t.keypoints.find(c=>c.name==="left_wrist");if(!e||!o||!n||!i||!s||!a||(e.score??0)<this.KEYPOINT_SCORE_THRESHOLD||(o.score??0)<this.KEYPOINT_SCORE_THRESHOLD||(n.score??0)<this.KEYPOINT_SCORE_THRESHOLD||(i.score??0)<this.KEYPOINT_SCORE_THRESHOLD||(s.score??0)<this.KEYPOINT_SCORE_THRESHOLD||(a.score??0)<this.KEYPOINT_SCORE_THRESHOLD)return;let l=this.calculateAngle(e,o,n),u=this.calculateAngle(i,s,a);l===null||u===null||(this.alternatingArm||(this.alternatingArm="right"),this.alternatingArm==="right"?this.currentRepCycleState==="START"?l<this.BICEP_ELBOW_ANGLE_UP&&(this.currentRepCycleState="UP",this.addFeedback("info",`Alt Curl: Right up phase (Angle: ${l.toFixed(0)}\xB0)`)):this.currentRepCycleState==="UP"&&l>this.BICEP_ELBOW_ANGLE_DOWN&&(this.incrementRep(),this.currentRepCycleState="START",this.alternatingArm="left",this.addFeedback("success",`Alt Curl: Right down, Rep Complete! (Angle: ${l.toFixed(0)}\xB0)`)):this.alternatingArm==="left"&&(this.currentRepCycleState==="START"?u<this.BICEP_ELBOW_ANGLE_UP&&(this.currentRepCycleState="UP",this.addFeedback("info",`Alt Curl: Left up phase (Angle: ${u.toFixed(0)}\xB0)`)):this.currentRepCycleState==="UP"&&u>this.BICEP_ELBOW_ANGLE_DOWN&&(this.incrementRep(),this.currentRepCycleState="START",this.alternatingArm="right",this.addFeedback("success",`Alt Curl: Left down, Rep Complete! (Angle: ${u.toFixed(0)}\xB0)`))))}analyzeKettlebellSnatch(t){this.addFeedback("info","Snatch: Analyzing (placeholder)...");let e=t.keypoints.find(n=>n.name==="right_shoulder"),o=t.keypoints.find(n=>n.name==="right_wrist");e&&o&&(e.score??0)>.5&&(o.score??0)>.5&&o.y<e.y-this.SNATCH_ARM_LOCKOUT_SHOULDER_WRIST_ALIGNMENT_Y}analyzeKettlebellPress(t){let e=t.keypoints.find(p=>p.name==="right_shoulder"),o=t.keypoints.find(p=>p.name==="right_elbow"),n=t.keypoints.find(p=>p.name==="right_wrist"),i=t.keypoints.find(p=>p.name==="right_hip");if(!e||!o||!n||!i||[e,o,n,i].some(p=>(p.score??0)<this.KEYPOINT_SCORE_THRESHOLD))return;let s=this.calculateAngle(e,o,n);if(s===null)return;let a=s>this.PRESS_ELBOW_ANGLE_UP&&n.y<e.y+this.PRESS_WRIST_SHOULDER_Y_DIFF_UP,l=s<this.PRESS_ELBOW_ANGLE_RACK&&Math.abs(n.y-e.y)<this.PRESS_WRIST_SHOULDER_Y_DIFF_RACK+20,u=this.isStateStable("press_overhead",a),c=this.isStateStable("press_racked",l);if(this.currentRepCycleState==="START")u&&(this.currentRepCycleState="UP",this.addFeedback("info",`Press: Lockout achieved (Elbow: ${s.toFixed(0)}\xB0)`),this.lastFramesStates={});else if(this.currentRepCycleState==="UP"){if(c)this.incrementRep(),this.addFeedback("success","Press: Rep complete! Returned to rack"),this.currentRepCycleState="START",this.lastFramesStates={};else if(u){let p=Math.abs(n.x-e.x),d=Math.abs(e.x-i.x);p>this.PRESS_WRIST_SHOULDER_X_ALIGNMENT&&this.addFeedback("warning","Press: Check wrist/shoulder horizontal alignment at lockout."),d>this.PRESS_TORSO_LEAN_X_ALIGNMENT&&this.addFeedback("warning","Press: Possible torso lean at lockout. Stay upright.")}}}analyzeGobletSquat(t){let e=t.keypoints.find(g=>g.name==="left_hip"),o=t.keypoints.find(g=>g.name==="right_hip"),n=t.keypoints.find(g=>g.name==="left_knee"),i=t.keypoints.find(g=>g.name==="right_knee"),s=t.keypoints.find(g=>g.name==="left_ankle"),a=t.keypoints.find(g=>g.name==="right_ankle");if([e,o,n,i,s,a].some(g=>(g?.score??0)<this.KEYPOINT_SCORE_THRESHOLD))return;let l=this.calculateAngle(e,n,s),u=this.calculateAngle(o,i,a);if(!l||!u)return;let c=(l+u)/2,p=c<90,d=c>160,m=this.isStateStable("goblet_down",p),f=this.isStateStable("goblet_up",d);this.currentRepCycleState==="START"&&m?(this.currentRepCycleState="UP",this.addFeedback("info","Squat: Down phase"),this.lastFramesStates={}):this.currentRepCycleState==="UP"&&f&&(this.incrementRep(),this.addFeedback("success","Squat: Rep complete!"),this.currentRepCycleState="START",this.lastFramesStates={})}analyzeDeadlift(t){let e=t.keypoints.find(g=>g.name==="left_hip"),o=t.keypoints.find(g=>g.name==="right_hip"),n=t.keypoints.find(g=>g.name==="left_knee"),i=t.keypoints.find(g=>g.name==="right_knee"),s=t.keypoints.find(g=>g.name==="left_shoulder"),a=t.keypoints.find(g=>g.name==="right_shoulder");if([e,o,n,i,s,a].some(g=>(g?.score??0)<this.KEYPOINT_SCORE_THRESHOLD))return;let l=this.calculateAngle(s,e,n),u=this.calculateAngle(a,o,i);if(l===null||u===null)return;let c=(l+u)/2,p=c<90,d=c>160,m=this.isStateStable("deadlift_bottom",p),f=this.isStateStable("deadlift_top",d);this.currentRepCycleState==="START"&&m?(this.currentRepCycleState="UP",this.addFeedback("info","Deadlift: Bottom position"),this.lastFramesStates={}):this.currentRepCycleState==="UP"&&f&&(this.incrementRep(),this.addFeedback("success","Deadlift: Rep complete!"),this.currentRepCycleState="START",this.lastFramesStates={})}analyzeKettlebellJerk(t){let e=t.keypoints.find(y=>y.name==="right_shoulder"),o=t.keypoints.find(y=>y.name==="right_elbow"),n=t.keypoints.find(y=>y.name==="right_wrist"),i=t.keypoints.find(y=>y.name==="right_hip"),s=t.keypoints.find(y=>y.name==="right_knee"),a=t.keypoints.find(y=>y.name==="right_ankle");if([e,o,n,i,s,a].some(y=>(y?.score??0)<this.KEYPOINT_SCORE_THRESHOLD))return;let l=this.calculateAngle(e,o,n),u=this.calculateAngle(i,s,a),c=n.y<e.y+this.JERK_WRIST_SHOULDER_Y_DIFF_LOCKOUT,p=Math.abs(n.x-e.x),d=u<this.JERK_KNEE_DIP_ANGLE,m=u<this.JERK_SECOND_DIP_KNEE_ANGLE,f=this.isStateStable("jerk_dip",d),g=this.isStateStable("jerk_second_dip",m),x=this.isStateStable("jerk_lockout",l>this.JERK_ELBOW_LOCKOUT_ANGLE&&c);this.currentRepCycleState==="START"?f&&(this.currentRepCycleState="UP",this.addFeedback("info","Jerk: First dip detected (drive)."),this.lastFramesStates={}):this.currentRepCycleState==="UP"&&(g&&c&&(this.currentRepCycleState="UP",this.addFeedback("info","Jerk: Second dip under bell.")),x&&(p>this.JERK_WRIST_SHOULDER_X_ALIGNMENT&&this.addFeedback("warning","Jerk: Check wrist/shoulder alignment at lockout."),this.incrementRep(),this.addFeedback("success","Jerk: Rep complete!"),this.currentRepCycleState="START",this.lastFramesStates={}))}calculateAngle(t,e,o){if(!t||!e||!o||(t.score??0)<this.KEYPOINT_SCORE_THRESHOLD||(e.score??0)<this.KEYPOINT_SCORE_THRESHOLD||(o.score??0)<this.KEYPOINT_SCORE_THRESHOLD)return null;let n=t.x-e.x,i=t.y-e.y,s=o.x-e.x,a=o.y-e.y,l=n*s+i*a,u=Math.sqrt(n*n+i*i),c=Math.sqrt(s*s+a*a);if(u===0||c===0)return null;let p=Math.max(-1,Math.min(1,l/(u*c)));return Math.acos(p)*(180/Math.PI)}isStateStable(t,e){return this.lastFramesStates[t]||(this.lastFramesStates[t]=[]),this.lastFramesStates[t].push(e),this.lastFramesStates[t].length>this.STABLE_FRAME_COUNT&&this.lastFramesStates[t].shift(),this.lastFramesStates[t].length<this.STABLE_FRAME_COUNT?!1:this.lastFramesStates[t].every(o=>o===e)}incrementRep(){this.ngZone.run(()=>{this.repCount++,this.addFeedback("success",`Rep ${this.repCount} counted!`)})}addFeedback(t,e){this.ngZone.run(()=>{let o=`[${new Date().toLocaleTimeString()}] ${e}`;this.feedbackMessages.unshift({type:t,message:o}),this.feedbackMessages.length>20&&this.feedbackMessages.pop(),this.changeDetectorRef.detectChanges()})}formatTime(t){let e=Math.floor(t/60),o=t%60;return`${e.toString().padStart(2,"0")}:${o.toString().padStart(2,"0")}`}toggleFeedbackVisibility(){this.isFeedbackVisible=!this.isFeedbackVisible,this.changeDetectorRef.detectChanges()}toggleControlsExpansion(){this.isControlsExpanded=!this.isControlsExpanded,this.changeDetectorRef.detectChanges()}startRecording(){if(!this.videoStream){this.addFeedback("warning","No video stream to record.");return}if(this.mediaRecorder&&this.mediaRecorder.state==="recording"){this.addFeedback("info","Already recording.");return}try{this.recordedChunks=[];let t=["video/webm; codecs=vp9,opus","video/webm; codecs=vp9","video/webm; codecs=vp8,opus","video/webm; codecs=vp8","video/mp4","video/webm"],e=t.find(o=>MediaRecorder.isTypeSupported(o));if(!e){this.addFeedback("error","No supported video format for recording."),console.error("No supported MediaRecorder MimeType found from list:",t);return}this.addFeedback("info",`Using recording format: ${e}`),this.mediaRecorder=new MediaRecorder(this.videoStream,{mimeType:e}),this.mediaRecorder.ondataavailable=o=>{o.data.size>0&&this.recordedChunks.push(o.data)},this.mediaRecorder.onstop=()=>{let o=new Blob(this.recordedChunks,{type:e}),n=URL.createObjectURL(o),i=document.createElement("a");document.body.appendChild(i),i.style.display="none",i.href=n;let s=e.includes("mp4")?"mp4":e.includes("webm")?"webm":"video";i.download=`workout-${new Date().toISOString().replace(/:/g,"-")}.${s}`,i.click(),window.URL.revokeObjectURL(n),i.remove(),this.addFeedback("success","Video recording saved."),this.isRecording=!1,this.changeDetectorRef.detectChanges()},this.mediaRecorder.onerror=o=>{let n=o;console.error("MediaRecorder error:",n.error||o),this.addFeedback("error",`Recording error: ${n.error?.name||"Unknown error"}`),this.isRecording=!1,this.changeDetectorRef.detectChanges()},this.mediaRecorder.start(),this.isRecording=!0,this.addFeedback("info","Recording started."),this.changeDetectorRef.detectChanges()}catch(t){console.error("Error starting recording:",t),this.addFeedback("error",`Failed to start recording: ${t instanceof Error?t.message:String(t)}`),this.isRecording=!1,this.changeDetectorRef.detectChanges()}}stopRecording(){this.mediaRecorder&&this.mediaRecorder.state==="recording"?(this.mediaRecorder.stop(),this.addFeedback("info","Stopping recording...")):(this.addFeedback("info","Not currently recording."),this.isRecording&&(this.isRecording=!1,this.changeDetectorRef.detectChanges()))}toggleRecording(){this.isRecording?this.stopRecording():this.startRecording()}initializeFabPosition(){this.fabPosition.x=window.innerWidth-56-20,this.fabPosition.y=window.innerHeight-56-20}onFabMouseDown(t){if(t.button!==0)return;t.preventDefault(),this.isFabDragging=!1;let o=t.currentTarget.getBoundingClientRect();this.fabDragStartOffset.x=t.clientX-o.left,this.fabDragStartOffset.y=t.clientY-o.top;let n=5,i=t.clientX,s=t.clientY,a=u=>{let c=u.clientX-i,p=u.clientY-s;!this.isFabDragging&&(Math.abs(c)>n||Math.abs(p)>n)&&(this.isFabDragging=!0),this.isFabDragging&&this.updateFabPosition(u.clientX,u.clientY)},l=()=>{window.removeEventListener("mousemove",a),window.removeEventListener("mouseup",l),this.isFabDragging=!1};window.addEventListener("mousemove",a),window.addEventListener("mouseup",l)}onFabTouchStart(t){if(t.touches.length!==1)return;t.preventDefault(),this.isFabDragging=!1;let o=t.currentTarget.getBoundingClientRect(),n=t.touches[0];this.fabDragStartOffset.x=n.clientX-o.left,this.fabDragStartOffset.y=n.clientY-o.top;let i=5,s=n.clientX,a=n.clientY,l=!1,u=p=>{if(p.touches.length!==1)return;let d=p.touches[0],m=d.clientX-s,f=d.clientY-a;!this.isFabDragging&&(Math.abs(m)>i||Math.abs(f)>i)&&(this.isFabDragging=!0,l=!0),this.isFabDragging&&this.updateFabPosition(d.clientX,d.clientY)},c=()=>{window.removeEventListener("touchmove",u),window.removeEventListener("touchend",c),l||this.toggleControlsExpansion(),this.isFabDragging=!1};window.addEventListener("touchmove",u,{passive:!1}),window.addEventListener("touchend",c)}onDocumentMouseMove(t){this.isFabDragging&&(t.preventDefault(),this.updateFabPosition(t.clientX,t.clientY))}onDocumentTouchMove(t){if(!this.isFabDragging||t.touches.length!==1)return;let e=t.touches[0];this.updateFabPosition(e.clientX,e.clientY)}onDocumentMouseUp(t){this.isFabDragging&&(this.isFabDragging=!1)}onDocumentTouchEnd(t){this.isFabDragging&&(this.isFabDragging=!1)}updateFabPosition(t,e){let o=this.hostElement.nativeElement.getBoundingClientRect(),n=56,i=t-this.fabDragStartOffset.x-o.left,s=e-this.fabDragStartOffset.y-o.top;i=Math.max(0,Math.min(i,o.width-n)),s=Math.max(0,Math.min(s,o.height-n)),this.fabPosition={x:i,y:s}}static \u0275fac=function(e){return new(e||r)(fp(ai))};static \u0275cmp=zr({type:r,selectors:[["app-workout-tracker"]],viewQuery:function(e,o){if(e&1&&(Hr(Sre,5),Hr(wre,5)),e&2){let n;Kr(n=qr())&&(o.videoElementRef=n.first),Kr(n=qr())&&(o.canvasElementRef=n.first)}},hostBindings:function(e,o){e&1&&ne("mousemove",function(i){return o.onDocumentMouseMove(i)},ys)("touchmove",function(i){return o.onDocumentTouchMove(i)},ys)("mouseup",function(i){return o.onDocumentMouseUp(i)},ys)("touchend",function(i){return o.onDocumentTouchEnd(i)},ys)},decls:48,vars:19,consts:[["videoElement",""],["canvasElement",""],[1,"workout-tracker-container"],["class","rep-counter-display-area",4,"ngIf"],[1,"video-area"],["autoplay","","playsinline","","muted","",1,"video-feed"],[1,"pose-canvas"],["class","video-placeholder",4,"ngIf"],[1,"controls-fab",3,"click","mousedown","touchstart"],["width","50px","height","50px","viewBox","0 0 24 24","xmlns","http://www.w3.org/2000/svg","fill","currentColor"],["d","M19.43,12.98c0.04-0.32,0.07-0.64,0.07-0.98s-0.03-0.66-0.07-0.98l2.11-1.65c0.19-0.15,0.24-0.42,0.12-0.64 l-2-3.46c-0.12-0.22-0.39-0.3-0.61-0.22l-2.49,1c-0.52-0.4-1.08-0.73-1.69-0.98l-0.38-2.65C14.46,2.18,14.25,2,14,2h-4 c-0.25,0-0.46,0.18-0.49,0.42L9.11,5.07C8.5,5.32,7.94,5.66,7.41,6.05L4.92,5.05C4.7,4.96,4.44,5.05,4.32,5.26L2.32,8.72 c-0.12,0.22-0.07,0.49,0.12,0.64l2.11,1.65C4.49,11.34,4.46,11.67,4.46,12s0.03,0.66,0.07,0.98l-2.11,1.65 c-0.19,0.15-0.24,0.42-0.12,0.64l2,3.46c0.12,0.22,0.39,0.3,0.61,0.22l2.49-1c0.52,0.4,1.08,0.73,1.69,0.98l0.38,2.65 c0.03,0.24,0.24,0.42,0.49,0.42h4c0.25,0,0.46-0.18,0.49-0.42l0.38-2.65c0.61-0.25,1.17-0.59,1.69-0.98l2.49,1 c0.23,0.09,0.49,0,0.61-0.22l2-3.46c0.12-0.22,0.07-0.49-0.12-0.64L19.43,12.98z M12,15.5c-1.93,0-3.5-1.57-3.5-3.5 s1.57-3.5,3.5-3.5s3.5,1.57,3.5,3.5S13.93,15.5,12,15.5z"],[1,"expandable-controls-panel"],[1,"main-controls"],[1,"exercise-selector"],["for","exercise"],["id","exercise",3,"ngModelChange","ngModel"],["value","Right Bicep Curl"],["value","Left Bicep Curl"],["value","Alternating Bicep Curl"],["value","Kettlebell Snatch"],["value","Kettlebell Press"],["value","Goblet Squat"],["value","Deadlift"],["value","Kettlebell Jerk"],[1,"status-info"],[1,"timer"],[1,"action-buttons"],["class","action-btn start-btn",3,"disabled","click",4,"ngIf"],["class","action-btn stop-btn",3,"click",4,"ngIf"],["class","action-btn record-btn",3,"recording","click",4,"ngIf"],[1,"action-btn","feedback-modal-btn",3,"click"],["class","modal-overlay",3,"click",4,"ngIf"],[1,"rep-counter-display-area"],[1,"rep-count-value"],[1,"rep-count-label"],[1,"video-placeholder"],[4,"ngIf"],["class","action-btn retry-btn",3,"click",4,"ngIf"],[1,"action-btn","retry-btn",3,"click"],[1,"action-btn","start-btn",3,"click","disabled"],[1,"action-btn","stop-btn",3,"click"],[1,"action-btn","record-btn",3,"click"],[1,"modal-overlay",3,"click"],[1,"modal-content",3,"click"],[1,"modal-header"],[1,"modal-close-btn",3,"click"],[1,"modal-body"],[3,"ngClass",4,"ngFor","ngForOf"],["class","no-feedback",4,"ngIf"],[3,"ngClass"],[1,"no-feedback"]],template:function(e,o){if(e&1){let n=me();k(0,"div",2),te(1,_re,5,1,"div",3),k(2,"div",4),se(3,"video",5,0)(5,"canvas",6,1),te(7,Tre,4,3,"div",7)(8,$re,5,4,"div",7),T(),k(9,"button",8),ne("click",function(){return Y(n),Q(o.toggleControlsExpansion())})("mousedown",function(s){return Y(n),Q(o.onFabMouseDown(s))})("touchstart",function(s){return Y(n),Q(o.onFabTouchStart(s))}),Ue(),k(10,"svg",9),se(11,"path",10),T()(),bt(),k(12,"div",11)(13,"div",12)(14,"div",13)(15,"label",14),L(16,"Exercise: "),T(),k(17,"select",15),Po("ngModelChange",function(s){return Y(n),Ro(o.currentExercise,s)||(o.currentExercise=s),Q(s)}),ne("ngModelChange",function(s){return Y(n),Q(o.setExerciseLogic(s))}),k(18,"option",16),L(19,"Right Bicep Curl"),T(),k(20,"option",17),L(21,"Left Bicep Curl"),T(),k(22,"option",18),L(23,"Alternating Bicep Curl"),T(),k(24,"option",19),L(25,"Kettlebell Snatch"),T(),k(26,"option",20),L(27,"Kettlebell Press"),T(),k(28,"option",21),L(29,"Goblet Squat"),T(),k(30,"option",22),L(31,"Deadlift"),T(),k(32,"option",23),L(33,"Kettlebell Jerk"),T()()(),k(34,"div",24)(35,"span"),L(36),T(),k(37,"div",25),L(38,"Time: "),k(39,"span"),L(40),T()()(),k(41,"div",26),te(42,Are,2,1,"button",27)(43,Dre,2,0,"button",28)(44,Fre,2,3,"button",29),k(45,"button",30),ne("click",function(){return Y(n),Q(o.toggleFeedbackVisibility())}),L(46," View Log "),T()()()(),te(47,Mre,11,2,"div",31),T()}e&2&&(E(),D("ngIf",o.isWorkoutActive),E(2),yo("hidden",!o.isCameraReady),E(4),D("ngIf",!o.isCameraReady&&!o.modelReady),E(),D("ngIf",o.isCameraReady&&!o.isWorkoutActive&&(!(o.videoStream!=null&&o.videoStream.active)||!o.modelReady)),E(),hp("left",o.fabPosition.x,"px")("top",o.fabPosition.y,"px"),E(3),yo("expanded",o.isControlsExpanded),E(5),No("ngModel",o.currentExercise),E(19),Ft("",o.currentExercise," - ",o.modelReady?"AI Ready":"AI Loading..."),E(4),Oe(o.formatTime(o.elapsedTime)),E(2),D("ngIf",!o.isWorkoutActive),E(),D("ngIf",o.isWorkoutActive),E(),D("ngIf",o.isCameraReady&&(o.videoStream==null?null:o.videoStream.active)),E(3),D("ngIf",o.isFeedbackVisible))},dependencies:[Qr,un,cn,Yr,AS,di,Hd,Kd,Gd,pi,Fa],styles:["[_nghost-%COMP%]{display:flex;flex-direction:column;width:100%;height:100vh;overflow:hidden;background-color:#343a40}.workout-tracker-container[_ngcontent-%COMP%]{display:flex;flex-direction:column;width:100%;flex-grow:1;overflow:hidden;position:relative}.rep-counter-display-area[_ngcontent-%COMP%]{position:absolute;top:20px;left:50%;transform:translate(-50%);z-index:10;background-color:#0009;padding:10px 25px;border-radius:10px;text-align:center;color:#f0f0f0;box-shadow:0 2px 8px #0000004d}.rep-counter-display-area[_ngcontent-%COMP%]   .rep-count-value[_ngcontent-%COMP%]{font-size:4rem;font-weight:700;line-height:1;color:#28a745;text-shadow:1px 1px 2px rgba(0,0,0,.5)}.rep-counter-display-area[_ngcontent-%COMP%]   .rep-count-label[_ngcontent-%COMP%]{font-size:1rem;text-transform:uppercase;letter-spacing:1px;margin-top:2px}.video-area[_ngcontent-%COMP%]{z-index:1;position:relative;width:100%;flex-grow:1;background-color:#000;overflow:hidden;display:flex;justify-content:center;align-items:center}.video-feed[_ngcontent-%COMP%]{display:block;width:100%;height:100%;object-fit:contain}.video-feed.hidden[_ngcontent-%COMP%]{display:none}.pose-canvas[_ngcontent-%COMP%]{position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none}.video-placeholder[_ngcontent-%COMP%]{color:#f8f9fa;text-align:center;padding:20px}.video-placeholder[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{background-color:#007bff}.controls-fab[_ngcontent-%COMP%]{position:absolute;bottom:20px;right:20px;width:56px;height:56px;background-color:#007bff;color:#fff;border-radius:50%;border:none;box-shadow:0 4px 12px #0000004d;display:flex;justify-content:center;align-items:center;cursor:pointer;z-index:990;transition:background-color .3s ease,transform .3s ease}.controls-fab[_ngcontent-%COMP%]:hover{background-color:#0062cc;transform:scale(1.05)}.controls-fab[_ngcontent-%COMP%]   .material-icons-outlined[_ngcontent-%COMP%]{font-size:28px}.expandable-controls-panel[_ngcontent-%COMP%]{position:absolute;bottom:0;left:0;width:100%;background-color:#1e1e1ef2;box-shadow:0 -3px 15px #0006;transform:translateY(100%);transition:transform .3s ease-in-out,opacity .3s ease-in-out;opacity:0;z-index:980;display:flex;justify-content:center;padding-top:15px;padding-bottom:10px;box-sizing:border-box}.expandable-controls-panel.expanded[_ngcontent-%COMP%]{transform:translateY(0);opacity:1}.main-controls[_ngcontent-%COMP%]{color:#f8f9fa;padding:10px 15px;border-radius:8px;width:100%;max-width:700px;display:flex;flex-direction:column;gap:12px}.exercise-selector[_ngcontent-%COMP%]{display:flex;align-items:center;gap:8px}.exercise-selector[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{font-size:.9em}.exercise-selector[_ngcontent-%COMP%]   select[_ngcontent-%COMP%]{padding:6px 10px;border-radius:4px;border:1px solid #6c757d;background-color:#343a40;color:#f8f9fa;flex-grow:1}.status-info[_ngcontent-%COMP%]{display:flex;justify-content:space-around;align-items:center;font-size:.9em;text-align:center;flex-wrap:wrap;gap:10px}.status-info[_ngcontent-%COMP%]   .timer[_ngcontent-%COMP%]{background-color:#0003;padding:5px 10px;border-radius:4px}.status-info[_ngcontent-%COMP%]   .timer[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{font-weight:700;color:#007bff}.action-buttons[_ngcontent-%COMP%]{display:flex;justify-content:center;gap:10px;flex-wrap:wrap}.action-btn[_ngcontent-%COMP%]{padding:10px 15px;font-size:.9em;border:none;border-radius:5px;cursor:pointer;transition:background-color .2s ease,transform .1s ease;color:#fff;min-width:120px;text-align:center}.action-btn[_ngcontent-%COMP%]:hover{opacity:.9}.action-btn[_ngcontent-%COMP%]:active{transform:translateY(1px)}.action-btn[_ngcontent-%COMP%]:disabled{background-color:#6c757d!important;cursor:not-allowed;opacity:.7}.start-btn[_ngcontent-%COMP%]{background-color:#28a745}.start-btn[_ngcontent-%COMP%]:hover{background-color:#1e7e34}.stop-btn[_ngcontent-%COMP%]{background-color:#dc3545}.stop-btn[_ngcontent-%COMP%]:hover{background-color:#bd2130}.record-btn[_ngcontent-%COMP%]{background-color:#17a2b8}.record-btn[_ngcontent-%COMP%]:hover{background-color:#117a8b}.record-btn.recording[_ngcontent-%COMP%]{background-color:#ffc107;color:#343a40}.record-btn.recording[_ngcontent-%COMP%]:hover{background-color:#d39e00}.feedback-modal-btn[_ngcontent-%COMP%]{background-color:#6c757d}.feedback-modal-btn[_ngcontent-%COMP%]:hover{background-color:#545b62}.modal-overlay[_ngcontent-%COMP%]{position:fixed;top:0;left:0;width:100%;height:100%;background-color:#0009;display:flex;justify-content:center;align-items:center;z-index:1000;padding:20px;box-sizing:border-box}.modal-content[_ngcontent-%COMP%]{background-color:#fff;color:#212529;padding:20px;border-radius:8px;box-shadow:0 5px 15px #0000004d;width:100%;max-width:600px;max-height:80vh;display:flex;flex-direction:column}.modal-header[_ngcontent-%COMP%]{display:flex;justify-content:space-between;align-items:center;border-bottom:1px solid #eee;padding-bottom:10px;margin-bottom:15px}.modal-header[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%]{margin:0;font-size:1.4em}.modal-close-btn[_ngcontent-%COMP%]{background:none;border:none;font-size:1.8em;line-height:1;cursor:pointer;padding:0 5px;color:#6c757d}.modal-close-btn[_ngcontent-%COMP%]:hover{color:#343a40}.modal-body[_ngcontent-%COMP%]{flex-grow:1}.modal-body[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%]{list-style-type:none;padding:0;margin:0}.modal-body[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]{padding:6px 0;font-size:.9em;border-bottom:1px solid #f0f0f0;word-break:break-word}.modal-body[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]:last-child{border-bottom:none}.modal-body[_ngcontent-%COMP%]   .feedback-info[_ngcontent-%COMP%]{color:#007bff}.modal-body[_ngcontent-%COMP%]   .feedback-success[_ngcontent-%COMP%]{color:#28a745}.modal-body[_ngcontent-%COMP%]   .feedback-warning[_ngcontent-%COMP%]{color:#ffc107}.modal-body[_ngcontent-%COMP%]   .feedback-error[_ngcontent-%COMP%]{color:#dc3545}.no-feedback[_ngcontent-%COMP%]{color:#6c757d;font-style:italic;padding:20px 0;text-align:center}"]})};var XIt=[{path:"",component:tm,title:"My Routines"},{path:"routine/new",component:hn,data:{mode:"routineBuilder",isNew:!0},title:"Create New Routine"},{path:"routine/new-from-log/:logId",component:hn,data:{mode:"routineBuilder",isNew:!0},title:"Create New Routine"},{path:"routine/edit/:routineId",component:hn,data:{mode:"routineBuilder",isNew:!1},title:"Edit Routine"},{path:"routine/view/:routineId",component:hn,data:{mode:"routineBuilder",isNew:!1,isView:!0},title:"View Routine"},{path:"log/manual/new",component:hn,data:{mode:"manualLogEntry",isNew:!0},title:"Log Past Workout"},{path:"log/manual/new/from/:routineId",component:hn,data:{mode:"manualLogEntry",isNew:!0,prefillFromRoutine:!0},title:"Log Workout from Routine"},{path:"log/manual/edit/:logId",component:hn,data:{mode:"manualLogEntry",isNew:!1},title:"Edit Workout Log"},{path:"play",component:xp,data:{mode:"newRoutine",isNew:!1},title:"Workout Session"},{path:"play/:routineId",component:xp,title:"Workout Session"},{path:"summary/:logId",component:lm,title:"Workout Summary"},{path:"routine/kb-workout-tracker",component:L0}];export{XIt as WORKOUT_TRACKER_ROUTES};
