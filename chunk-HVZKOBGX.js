import{a as zS,b as jd,c as GS}from"./chunk-5Q7C7TBE.js";import{a as Xd}from"./chunk-WX3SMJ3O.js";import"./chunk-XJYEZTJF.js";import{a as US}from"./chunk-SFDSBR3L.js";import{a as ui}from"./chunk-CQ5XYFLE.js";import"./chunk-DO4TUXLP.js";import{a as MS,c as BS,d as VS,e as WS}from"./chunk-ZCUTSGHN.js";import"./chunk-2S7H6F4Q.js";import{e as OS,g as xr}from"./chunk-5U4WJ25F.js";import{a as li}from"./chunk-DVI2UNQO.js";import{a as ai,b as LS}from"./chunk-LGP3OOH3.js";import{a as qd}from"./chunk-DEG6BGD5.js";import{c as Hd}from"./chunk-HZWVDDZF.js";import{a as Kd}from"./chunk-ZUYY33H4.js";import{$a as Cn,A as kd,Aa as lp,Ac as AS,Ba as F,Bb as oi,Bc as Md,Ca as _,Cb as rn,Cc as Bd,D as vS,Da as I,Db as wo,Dc as Vd,E as hr,Ea as le,Ec as Wd,F as bS,Fa as so,Ga as ao,Gc as DS,H as SS,Hb as Rd,Hc as FS,I as Sa,Ia as me,Ib as Ca,Ic as zd,J as Jn,Ja as oe,Jb as NS,Jc as $a,K as ps,Ka as O,Kb as ka,Kc as Ud,Lb as on,Lc as Pa,Mc as Gd,Nb as _o,Nc as Aa,Oa as Do,Ob as gr,Oc as Da,Pa as Fo,Q as Ae,Qa as Oo,Ra as Lo,S as Q,Sa as up,T as Z,Ta as bo,Tc as sy,U as _e,V as He,Va as L,Vb as $d,Wa as Le,Wb as RS,Xa as xe,Xb as Ia,Ya as Ft,Z as we,Zb as ni,_ as wS,_a as kS,_b as ii,a as Ht,aa as ei,ab as kn,b as er,bb as In,ca as wa,d as io,db as Nd,dc as Pd,e as dt,ea as Id,eb as ny,ec as Ta,f as ry,fa as ds,fb as ri,g as j,ga as Td,gb as So,h as mS,ha as ms,hb as IS,hc as si,ia as N,ib as iy,ic as cp,j as fS,jc as Ea,kb as qe,la as _S,lb as ft,ma as ap,mb as lo,nb as TS,o as hS,ob as Mo,oc as Bt,p as tn,qa as vo,qc as Ad,r as ba,rb as Nt,rc as ut,s as _n,sa as ti,sb as ES,sc as Na,t as gS,ta as Ed,tc as Dd,u as oy,uc as $S,v as xS,va as ne,vc as Ra,wa as Ao,wc as Fd,x as sp,xa as CS,xb as _a,xc as Od,y as yS,yc as Ld,zc as PS}from"./chunk-UOFYJVZ3.js";var YS=io(XS=>{"use strict";(function(){"use strict";var r;function t(h){var v=0;return function(){return v<h.length?{done:!1,value:h[v++]}:{done:!0}}}var e=typeof Object.defineProperties=="function"?Object.defineProperty:function(h,v,k){return h==Array.prototype||h==Object.prototype||(h[v]=k.value),h};function o(h){h=[typeof globalThis=="object"&&globalThis,h,typeof window=="object"&&window,typeof self=="object"&&self,typeof global=="object"&&global];for(var v=0;v<h.length;++v){var k=h[v];if(k&&k.Math==Math)return k}throw Error("Cannot find global object")}var n=o(this);function i(h,v){if(v)e:{var k=n;h=h.split(".");for(var P=0;P<h.length-1;P++){var B=h[P];if(!(B in k))break e;k=k[B]}h=h[h.length-1],P=k[h],v=v(P),v!=P&&v!=null&&e(k,h,{configurable:!0,writable:!0,value:v})}}i("Symbol",function(h){function v(U){if(this instanceof v)throw new TypeError("Symbol is not a constructor");return new k(P+(U||"")+"_"+B++,U)}function k(U,W){this.h=U,e(this,"description",{configurable:!0,writable:!0,value:W})}if(h)return h;k.prototype.toString=function(){return this.h};var P="jscomp_symbol_"+(1e9*Math.random()>>>0)+"_",B=0;return v}),i("Symbol.iterator",function(h){if(h)return h;h=Symbol("Symbol.iterator");for(var v="Array Int8Array Uint8Array Uint8ClampedArray Int16Array Uint16Array Int32Array Uint32Array Float32Array Float64Array".split(" "),k=0;k<v.length;k++){var P=n[v[k]];typeof P=="function"&&typeof P.prototype[h]!="function"&&e(P.prototype,h,{configurable:!0,writable:!0,value:function(){return s(t(this))}})}return h});function s(h){return h={next:h},h[Symbol.iterator]=function(){return this},h}function a(h){var v=typeof Symbol<"u"&&Symbol.iterator&&h[Symbol.iterator];return v?v.call(h):{next:t(h)}}function l(h){if(!(h instanceof Array)){h=a(h);for(var v,k=[];!(v=h.next()).done;)k.push(v.value);h=k}return h}var u=typeof Object.assign=="function"?Object.assign:function(h,v){for(var k=1;k<arguments.length;k++){var P=arguments[k];if(P)for(var B in P)Object.prototype.hasOwnProperty.call(P,B)&&(h[B]=P[B])}return h};i("Object.assign",function(h){return h||u});var c=typeof Object.create=="function"?Object.create:function(h){function v(){}return v.prototype=h,new v},p;if(typeof Object.setPrototypeOf=="function")p=Object.setPrototypeOf;else{var d;e:{var m={a:!0},f={};try{f.__proto__=m,d=f.a;break e}catch{}d=!1}p=d?function(h,v){if(h.__proto__=v,h.__proto__!==v)throw new TypeError(h+" is not extensible");return h}:null}var g=p;function x(h,v){if(h.prototype=c(v.prototype),h.prototype.constructor=h,g)g(h,v);else for(var k in v)if(k!="prototype")if(Object.defineProperties){var P=Object.getOwnPropertyDescriptor(v,k);P&&Object.defineProperty(h,k,P)}else h[k]=v[k];h.za=v.prototype}function y(){this.m=!1,this.j=null,this.i=void 0,this.h=1,this.v=this.s=0,this.l=null}function b(h){if(h.m)throw new TypeError("Generator is already running");h.m=!0}y.prototype.u=function(h){this.i=h};function T(h,v){h.l={ma:v,na:!0},h.h=h.s||h.v}y.prototype.return=function(h){this.l={return:h},this.h=this.v};function R(h,v,k){return h.h=k,{value:v}}function M(h){this.h=new y,this.i=h}function V(h,v){b(h.h);var k=h.h.j;return k?z(h,"return"in k?k.return:function(P){return{value:P,done:!0}},v,h.h.return):(h.h.return(v),H(h))}function z(h,v,k,P){try{var B=v.call(h.h.j,k);if(!(B instanceof Object))throw new TypeError("Iterator result "+B+" is not an object");if(!B.done)return h.h.m=!1,B;var U=B.value}catch(W){return h.h.j=null,T(h.h,W),H(h)}return h.h.j=null,P.call(h.h,U),H(h)}function H(h){for(;h.h.h;)try{var v=h.i(h.h);if(v)return h.h.m=!1,{value:v.value,done:!1}}catch(k){h.h.i=void 0,T(h.h,k)}if(h.h.m=!1,h.h.l){if(v=h.h.l,h.h.l=null,v.na)throw v.ma;return{value:v.return,done:!0}}return{value:void 0,done:!0}}function K(h){this.next=function(v){return b(h.h),h.h.j?v=z(h,h.h.j.next,v,h.h.u):(h.h.u(v),v=H(h)),v},this.throw=function(v){return b(h.h),h.h.j?v=z(h,h.h.j.throw,v,h.h.u):(T(h.h,v),v=H(h)),v},this.return=function(v){return V(h,v)},this[Symbol.iterator]=function(){return this}}function X(h){function v(P){return h.next(P)}function k(P){return h.throw(P)}return new Promise(function(P,B){function U(W){W.done?P(W.value):Promise.resolve(W.value).then(v,k).then(U,B)}U(h.next())})}function te(h){return X(new K(new M(h)))}i("Promise",function(h){function v(W){this.i=0,this.j=void 0,this.h=[],this.u=!1;var q=this.l();try{W(q.resolve,q.reject)}catch(re){q.reject(re)}}function k(){this.h=null}function P(W){return W instanceof v?W:new v(function(q){q(W)})}if(h)return h;k.prototype.i=function(W){if(this.h==null){this.h=[];var q=this;this.j(function(){q.m()})}this.h.push(W)};var B=n.setTimeout;k.prototype.j=function(W){B(W,0)},k.prototype.m=function(){for(;this.h&&this.h.length;){var W=this.h;this.h=[];for(var q=0;q<W.length;++q){var re=W[q];W[q]=null;try{re()}catch(de){this.l(de)}}}this.h=null},k.prototype.l=function(W){this.j(function(){throw W})},v.prototype.l=function(){function W(de){return function(ge){re||(re=!0,de.call(q,ge))}}var q=this,re=!1;return{resolve:W(this.I),reject:W(this.m)}},v.prototype.I=function(W){if(W===this)this.m(new TypeError("A Promise cannot resolve to itself"));else if(W instanceof v)this.L(W);else{e:switch(typeof W){case"object":var q=W!=null;break e;case"function":q=!0;break e;default:q=!1}q?this.F(W):this.s(W)}},v.prototype.F=function(W){var q=void 0;try{q=W.then}catch(re){this.m(re);return}typeof q=="function"?this.M(q,W):this.s(W)},v.prototype.m=function(W){this.v(2,W)},v.prototype.s=function(W){this.v(1,W)},v.prototype.v=function(W,q){if(this.i!=0)throw Error("Cannot settle("+W+", "+q+"): Promise already settled in state"+this.i);this.i=W,this.j=q,this.i===2&&this.K(),this.H()},v.prototype.K=function(){var W=this;B(function(){if(W.D()){var q=n.console;typeof q<"u"&&q.error(W.j)}},1)},v.prototype.D=function(){if(this.u)return!1;var W=n.CustomEvent,q=n.Event,re=n.dispatchEvent;return typeof re>"u"?!0:(typeof W=="function"?W=new W("unhandledrejection",{cancelable:!0}):typeof q=="function"?W=new q("unhandledrejection",{cancelable:!0}):(W=n.document.createEvent("CustomEvent"),W.initCustomEvent("unhandledrejection",!1,!0,W)),W.promise=this,W.reason=this.j,re(W))},v.prototype.H=function(){if(this.h!=null){for(var W=0;W<this.h.length;++W)U.i(this.h[W]);this.h=null}};var U=new k;return v.prototype.L=function(W){var q=this.l();W.T(q.resolve,q.reject)},v.prototype.M=function(W,q){var re=this.l();try{W.call(q,re.resolve,re.reject)}catch(de){re.reject(de)}},v.prototype.then=function(W,q){function re(De,Ce){return typeof De=="function"?function(We){try{de(De(We))}catch(Qe){ge(Qe)}}:Ce}var de,ge,Ve=new v(function(De,Ce){de=De,ge=Ce});return this.T(re(W,de),re(q,ge)),Ve},v.prototype.catch=function(W){return this.then(void 0,W)},v.prototype.T=function(W,q){function re(){switch(de.i){case 1:W(de.j);break;case 2:q(de.j);break;default:throw Error("Unexpected state: "+de.i)}}var de=this;this.h==null?U.i(re):this.h.push(re),this.u=!0},v.resolve=P,v.reject=function(W){return new v(function(q,re){re(W)})},v.race=function(W){return new v(function(q,re){for(var de=a(W),ge=de.next();!ge.done;ge=de.next())P(ge.value).T(q,re)})},v.all=function(W){var q=a(W),re=q.next();return re.done?P([]):new v(function(de,ge){function Ve(We){return function(Qe){De[We]=Qe,Ce--,Ce==0&&de(De)}}var De=[],Ce=0;do De.push(void 0),Ce++,P(re.value).T(Ve(De.length-1),ge),re=q.next();while(!re.done)})},v});function ce(h,v){h instanceof String&&(h+="");var k=0,P=!1,B={next:function(){if(!P&&k<h.length){var U=k++;return{value:v(U,h[U]),done:!1}}return P=!0,{done:!0,value:void 0}}};return B[Symbol.iterator]=function(){return B},B}i("Array.prototype.keys",function(h){return h||function(){return ce(this,function(v){return v})}}),i("Array.prototype.fill",function(h){return h||function(v,k,P){var B=this.length||0;for(0>k&&(k=Math.max(0,B+k)),(P==null||P>B)&&(P=B),P=Number(P),0>P&&(P=Math.max(0,B+P)),k=Number(k||0);k<P;k++)this[k]=v;return this}});function pe(h){return h||Array.prototype.fill}i("Int8Array.prototype.fill",pe),i("Uint8Array.prototype.fill",pe),i("Uint8ClampedArray.prototype.fill",pe),i("Int16Array.prototype.fill",pe),i("Uint16Array.prototype.fill",pe),i("Int32Array.prototype.fill",pe),i("Uint32Array.prototype.fill",pe),i("Float32Array.prototype.fill",pe),i("Float64Array.prototype.fill",pe),i("Object.is",function(h){return h||function(v,k){return v===k?v!==0||1/v===1/k:v!==v&&k!==k}}),i("Array.prototype.includes",function(h){return h||function(v,k){var P=this;P instanceof String&&(P=String(P));var B=P.length;for(k=k||0,0>k&&(k=Math.max(k+B,0));k<B;k++){var U=P[k];if(U===v||Object.is(U,v))return!0}return!1}}),i("String.prototype.includes",function(h){return h||function(v,k){if(this==null)throw new TypeError("The 'this' value for String.prototype.includes must not be null or undefined");if(v instanceof RegExp)throw new TypeError("First argument to String.prototype.includes must not be a regular expression");return this.indexOf(v,k||0)!==-1}});var ve=this||self;function Se(h,v){h=h.split(".");var k=ve;h[0]in k||typeof k.execScript>"u"||k.execScript("var "+h[0]);for(var P;h.length&&(P=h.shift());)h.length||v===void 0?k[P]&&k[P]!==Object.prototype[P]?k=k[P]:k=k[P]={}:k[P]=v}function Ee(h){var v;e:{if((v=ve.navigator)&&(v=v.userAgent))break e;v=""}return v.indexOf(h)!=-1}var je=Array.prototype.map?function(h,v){return Array.prototype.map.call(h,v,void 0)}:function(h,v){for(var k=h.length,P=Array(k),B=typeof h=="string"?h.split(""):h,U=0;U<k;U++)U in B&&(P[U]=v.call(void 0,B[U],U,h));return P},Xe={},st=null;function jt(h){var v=h.length,k=3*v/4;k%3?k=Math.floor(k):"=.".indexOf(h[v-1])!=-1&&(k="=.".indexOf(h[v-2])!=-1?k-2:k-1);var P=new Uint8Array(k),B=0;return Jt(h,function(U){P[B++]=U}),B!==k?P.subarray(0,B):P}function Jt(h,v){function k(re){for(;P<h.length;){var de=h.charAt(P++),ge=st[de];if(ge!=null)return ge;if(!/^[\s\xa0]*$/.test(de))throw Error("Unknown base64 encoding at char: "+de)}return re}Yo();for(var P=0;;){var B=k(-1),U=k(0),W=k(64),q=k(64);if(q===64&&B===-1)break;v(B<<2|U>>4),W!=64&&(v(U<<4&240|W>>2),q!=64&&v(W<<6&192|q))}}function Yo(){if(!st){st={};for(var h="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789".split(""),v=["+/=","+/","-_=","-_.","-_"],k=0;5>k;k++){var P=h.concat(v[k].split(""));Xe[k]=P;for(var B=0;B<P.length;B++){var U=P[B];st[U]===void 0&&(st[U]=B)}}}}var Sn=typeof Uint8Array<"u",ga=!(Ee("Trident")||Ee("MSIE"))&&typeof ve.btoa=="function";function xa(h){if(!ga){var v;v===void 0&&(v=0),Yo(),v=Xe[v];for(var k=Array(Math.floor(h.length/3)),P=v[64]||"",B=0,U=0;B<h.length-2;B+=3){var W=h[B],q=h[B+1],re=h[B+2],de=v[W>>2];W=v[(W&3)<<4|q>>4],q=v[(q&15)<<2|re>>6],re=v[re&63],k[U++]=de+W+q+re}switch(de=0,re=P,h.length-B){case 2:de=h[B+1],re=v[(de&15)<<2]||P;case 1:h=h[B],k[U]=v[h>>2]+v[(h&3)<<4|de>>4]+re+P}return k.join("")}for(v="";10240<h.length;)v+=String.fromCharCode.apply(null,h.subarray(0,10240)),h=h.subarray(10240);return v+=String.fromCharCode.apply(null,h),btoa(v)}var Yc=RegExp("[-_.]","g");function O4(h){switch(h){case"-":return"+";case"_":return"/";case".":return"=";default:return""}}function xb(h){if(!ga)return jt(h);Yc.test(h)&&(h=h.replace(Yc,O4)),h=atob(h);for(var v=new Uint8Array(h.length),k=0;k<h.length;k++)v[k]=h.charCodeAt(k);return v}var yb;function Ax(){return yb||(yb=new Uint8Array(0))}var Qc={},L4=typeof Uint8Array.prototype.slice=="function",Xt=0,Ir=0;function vb(h){var v=0>h;h=Math.abs(h);var k=h>>>0;h=Math.floor((h-k)/4294967296),v&&(k=a(bb(k,h)),v=k.next().value,h=k.next().value,k=v),Xt=k>>>0,Ir=h>>>0}var M4=typeof BigInt=="function";function bb(h,v){return v=~v,h?h=~h+1:v+=1,[h,v]}function Sb(h,v){this.i=h>>>0,this.h=v>>>0}function wb(h){if(!h)return _b||(_b=new Sb(0,0));if(!/^-?\d+$/.test(h))return null;if(16>h.length)vb(Number(h));else if(M4)h=BigInt(h),Xt=Number(h&BigInt(4294967295))>>>0,Ir=Number(h>>BigInt(32)&BigInt(4294967295));else{var v=+(h[0]==="-");Ir=Xt=0;for(var k=h.length,P=v,B=(k-v)%6+v;B<=k;P=B,B+=6)P=Number(h.slice(P,B)),Ir*=1e6,Xt=1e6*Xt+P,4294967296<=Xt&&(Ir+=Xt/4294967296|0,Xt%=4294967296);v&&(v=a(bb(Xt,Ir)),h=v.next().value,v=v.next().value,Xt=h,Ir=v)}return new Sb(Xt,Ir)}var _b;function Cb(h,v){return Error("Invalid wire type: "+h+" (at position "+v+")")}function Dx(){return Error("Failed to read varint, encoding is invalid.")}function kb(h,v){return Error("Tried to read past the end of the data "+v+" > "+h)}function as(){throw Error("Invalid UTF8")}function Ib(h,v){return v=String.fromCharCode.apply(null,v),h==null?v:h+v}var md=void 0,Fx,B4=typeof TextDecoder<"u",Tb,V4=typeof TextEncoder<"u",Eb;function Nb(h){if(h!==Qc)throw Error("illegal external caller")}function Zc(h,v){if(Nb(v),this.V=h,h!=null&&h.length===0)throw Error("ByteString should be constructed with non-empty values")}function Ox(){return Eb||(Eb=new Zc(null,Qc))}function Rb(h){Nb(Qc);var v=h.V;return v=v==null||Sn&&v!=null&&v instanceof Uint8Array?v:typeof v=="string"?xb(v):null,v==null?v:h.V=v}function W4(h){if(typeof h=="string")return{buffer:xb(h),C:!1};if(Array.isArray(h))return{buffer:new Uint8Array(h),C:!1};if(h.constructor===Uint8Array)return{buffer:h,C:!1};if(h.constructor===ArrayBuffer)return{buffer:new Uint8Array(h),C:!1};if(h.constructor===Zc)return{buffer:Rb(h)||Ax(),C:!0};if(h instanceof Uint8Array)return{buffer:new Uint8Array(h.buffer,h.byteOffset,h.byteLength),C:!1};throw Error("Type not convertible to a Uint8Array, expected a Uint8Array, an ArrayBuffer, a base64 encoded string, a ByteString or an Array of numbers")}function $b(h,v){this.i=null,this.m=!1,this.h=this.j=this.l=0,Lx(this,h,v)}function Lx(h,v,k){k=k===void 0?{}:k,h.S=k.S===void 0?!1:k.S,v&&(v=W4(v),h.i=v.buffer,h.m=v.C,h.l=0,h.j=h.i.length,h.h=h.l)}$b.prototype.reset=function(){this.h=this.l};function ls(h,v){if(h.h=v,v>h.j)throw kb(h.j,v)}function Jc(h){var v=h.i,k=h.h,P=v[k++],B=P&127;if(P&128&&(P=v[k++],B|=(P&127)<<7,P&128&&(P=v[k++],B|=(P&127)<<14,P&128&&(P=v[k++],B|=(P&127)<<21,P&128&&(P=v[k++],B|=P<<28,P&128&&v[k++]&128&&v[k++]&128&&v[k++]&128&&v[k++]&128&&v[k++]&128)))))throw Dx();return ls(h,k),B}function Pb(h,v){if(0>v)throw Error("Tried to read a negative byte length: "+v);var k=h.h,P=k+v;if(P>h.j)throw kb(v,h.j-k);return h.h=P,k}var Ab=[];function Mx(){this.h=[]}Mx.prototype.length=function(){return this.h.length},Mx.prototype.end=function(){var h=this.h;return this.h=[],h};function Db(h,v,k){for(;0<k||127<v;)h.h.push(v&127|128),v=(v>>>7|k<<25)>>>0,k>>>=7;h.h.push(v)}function us(h,v){for(;127<v;)h.h.push(v&127|128),v>>>=7;h.h.push(v)}function Bx(h,v){if(Ab.length){var k=Ab.pop();Lx(k,h,v),h=k}else h=new $b(h,v);this.h=h,this.j=this.h.h,this.i=this.l=-1,this.setOptions(v)}Bx.prototype.setOptions=function(h){h=h===void 0?{}:h,this.ca=h.ca===void 0?!1:h.ca},Bx.prototype.reset=function(){this.h.reset(),this.j=this.h.h,this.i=this.l=-1};function Fb(h){var v=h.h;if(v.h==v.j)return!1;h.j=h.h.h;var k=Jc(h.h)>>>0;if(v=k>>>3,k&=7,!(0<=k&&5>=k))throw Cb(k,h.j);if(1>v)throw Error("Invalid field number: "+v+" (at position "+h.j+")");return h.l=v,h.i=k,!0}function fd(h){switch(h.i){case 0:if(h.i!=0)fd(h);else e:{h=h.h;for(var v=h.h,k=v+10,P=h.i;v<k;)if((P[v++]&128)===0){ls(h,v);break e}throw Dx()}break;case 1:h=h.h,ls(h,h.h+8);break;case 2:h.i!=2?fd(h):(v=Jc(h.h)>>>0,h=h.h,ls(h,h.h+v));break;case 5:h=h.h,ls(h,h.h+4);break;case 3:v=h.l;do{if(!Fb(h))throw Error("Unmatched start-group tag: stream EOF");if(h.i==4){if(h.l!=v)throw Error("Unmatched end-group tag");break}fd(h)}while(!0);break;default:throw Cb(h.i,h.j)}}var hd=[];function z4(){this.j=[],this.i=0,this.h=new Mx}function ya(h,v){v.length!==0&&(h.j.push(v),h.i+=v.length)}function U4(h,v){if(v=v.R){ya(h,h.h.end());for(var k=0;k<v.length;k++)ya(h,Rb(v[k])||Ax())}}var wn=typeof Symbol=="function"&&typeof Symbol()=="symbol"?Symbol():void 0;function cs(h,v){return wn?h[wn]|=v:h.A!==void 0?h.A|=v:(Object.defineProperties(h,{A:{value:v,configurable:!0,writable:!0,enumerable:!1}}),v)}function Ob(h,v){wn?h[wn]&&(h[wn]&=~v):h.A!==void 0&&(h.A&=~v)}function Wt(h){var v;return wn?v=h[wn]:v=h.A,v??0}function Qo(h,v){wn?h[wn]=v:h.A!==void 0?h.A=v:Object.defineProperties(h,{A:{value:v,configurable:!0,writable:!0,enumerable:!1}})}function Vx(h){return cs(h,1),h}function G4(h,v){Qo(v,(h|0)&-51)}function gd(h,v){Qo(v,(h|18)&-41)}var Wx={};function xd(h){return h!==null&&typeof h=="object"&&!Array.isArray(h)&&h.constructor===Object}var ep,Lb=[];Qo(Lb,23),ep=Object.freeze(Lb);function zx(h){if(Wt(h.o)&2)throw Error("Cannot mutate an immutable Message")}function Ux(h){var v=h.length;(v=v?h[v-1]:void 0)&&xd(v)?v.g=1:(v={},h.push((v.g=1,v)))}function Mb(h){var v=h.i+h.G;return h.B||(h.B=h.o[v]={})}function $o(h,v){return v===-1?null:v>=h.i?h.B?h.B[v]:void 0:h.o[v+h.G]}function Zo(h,v,k,P){zx(h),tp(h,v,k,P)}function tp(h,v,k,P){h.j&&(h.j=void 0),v>=h.i||P?Mb(h)[v]=k:(h.o[v+h.G]=k,(h=h.B)&&v in h&&delete h[v])}function Gx(h,v,k,P){var B=$o(h,v);Array.isArray(B)||(B=ep);var U=Wt(B);if(U&1||Vx(B),P)U&2||cs(B,2),k&1||Object.freeze(B);else{P=!(k&2);var W=U&2;k&1||!W?P&&U&16&&!W&&Ob(B,16):(B=Vx(Array.prototype.slice.call(B)),tp(h,v,B))}return B}function Hx(h,v){var k=$o(h,v),P=k==null?k:typeof k=="number"||k==="NaN"||k==="Infinity"||k==="-Infinity"?Number(k):void 0;return P!=null&&P!==k&&tp(h,v,P),P}function Bb(h,v,k,P,B){h.h||(h.h={});var U=h.h[k],W=Gx(h,k,3,B);if(!U){var q=W;U=[];var re=!!(Wt(h.o)&16);W=!!(Wt(q)&2);var de=q;!B&&W&&(q=Array.prototype.slice.call(q));for(var ge=W,Ve=0;Ve<q.length;Ve++){var De=q[Ve],Ce=v,We=!1;if(We=We===void 0?!1:We,De=Array.isArray(De)?new Ce(De):We?new Ce:void 0,De!==void 0){Ce=De.o;var Qe=We=Wt(Ce);W&&(Qe|=2),re&&(Qe|=16),Qe!=We&&Qo(Ce,Qe),Ce=Qe,ge=ge||!!(2&Ce),U.push(De)}}return h.h[k]=U,re=Wt(q),v=re|33,v=ge?v&-9:v|8,re!=v&&(ge=q,Object.isFrozen(ge)&&(ge=Array.prototype.slice.call(ge)),Qo(ge,v),q=ge),de!==q&&tp(h,k,q),(B||P&&W)&&cs(U,2),P&&Object.freeze(U),U}return B||(B=Object.isFrozen(U),P&&!B?Object.freeze(U):!P&&B&&(U=Array.prototype.slice.call(U),h.h[k]=U)),U}function Kx(h,v,k){var P=!!(Wt(h.o)&2);if(v=Bb(h,v,k,P,P),h=Gx(h,k,3,P),!(P||Wt(h)&8)){for(P=0;P<v.length;P++){if(k=v[P],Wt(k.o)&2){var B=Hb(k,!1);B.j=k}else B=k;k!==B&&(v[P]=B,h[P]=B.o)}cs(h,8)}return v}function Jo(h,v,k){if(k!=null&&typeof k!="number")throw Error("Value of float/double field must be a number|null|undefined, found "+typeof k+": "+k);Zo(h,v,k)}function Vb(h,v,k,P,B){zx(h);var U=Bb(h,k,v,!1,!1);return k=P??new k,h=Gx(h,v,2,!1),B!=null?(U.splice(B,0,k),h.splice(B,0,k.o)):(U.push(k),h.push(k.o)),k.C()&&Ob(h,8),k}function yd(h,v){return h??v}function en(h,v,k){return k=k===void 0?0:k,yd(Hx(h,v),k)}var vd;function H4(h){switch(typeof h){case"number":return isFinite(h)?h:String(h);case"object":if(h)if(Array.isArray(h)){if((Wt(h)&128)!==0)return h=Array.prototype.slice.call(h),Ux(h),h}else{if(Sn&&h!=null&&h instanceof Uint8Array)return xa(h);if(h instanceof Zc){var v=h.V;return v==null?"":typeof v=="string"?v:h.V=xa(v)}}}return h}function Wb(h,v,k,P){if(h!=null){if(Array.isArray(h))h=qx(h,v,k,P!==void 0);else if(xd(h)){var B={},U;for(U in h)B[U]=Wb(h[U],v,k,P);h=B}else h=v(h,P);return h}}function qx(h,v,k,P){var B=Wt(h);P=P?!!(B&16):void 0,h=Array.prototype.slice.call(h);for(var U=0;U<h.length;U++)h[U]=Wb(h[U],v,k,P);return k(B,h),h}function K4(h){return h.ja===Wx?h.toJSON():H4(h)}function q4(h,v){h&128&&Ux(v)}function zb(h,v,k){if(k=k===void 0?gd:k,h!=null){if(Sn&&h instanceof Uint8Array)return h.length?new Zc(new Uint8Array(h),Qc):Ox();if(Array.isArray(h)){var P=Wt(h);return P&2?h:v&&!(P&32)&&(P&16||P===0)?(Qo(h,P|2),h):(h=qx(h,zb,P&4?gd:k,!0),v=Wt(h),v&4&&v&2&&Object.freeze(h),h)}return h.ja===Wx?Gb(h):h}}function Ub(h,v,k,P,B,U,W){if(h=h.h&&h.h[k]){if(P=Wt(h),P&2?P=h:(U=je(h,Gb),gd(P,U),Object.freeze(U),P=U),zx(v),W=P==null?ep:Vx([]),P!=null){for(U=!!P.length,h=0;h<P.length;h++){var q=P[h];U=U&&!(Wt(q.o)&2),W[h]=q.o}U=(U?8:0)|1,h=Wt(W),(h&U)!==U&&(Object.isFrozen(W)&&(W=Array.prototype.slice.call(W)),Qo(W,h|U)),v.h||(v.h={}),v.h[k]=P}else v.h&&(v.h[k]=void 0);tp(v,k,W,B)}else Zo(v,k,zb(P,U,W),B)}function Gb(h){return Wt(h.o)&2||(h=Hb(h,!0),cs(h.o,2)),h}function Hb(h,v){var k=h.o,P=[];cs(P,16);var B=h.constructor.h;if(B&&P.push(B),B=h.B,B){P.length=k.length,P.fill(void 0,P.length,k.length);var U={};P[P.length-1]=U}(Wt(k)&128)!==0&&Ux(P),v=v||h.C()?gd:G4,U=h.constructor,vd=P,P=new U(P),vd=void 0,h.R&&(P.R=h.R.slice()),U=!!(Wt(k)&16);for(var W=B?k.length-1:k.length,q=0;q<W;q++)Ub(h,P,q-h.G,k[q],!1,U,v);if(B)for(var re in B)Ub(h,P,+re,B[re],!0,U,v);return P}function Br(h,v,k){h==null&&(h=vd),vd=void 0;var P=this.constructor.i||0,B=0<P,U=this.constructor.h,W=!1;if(h==null){h=U?[U]:[];var q=48,re=!0;B&&(P=0,q|=128),Qo(h,q)}else{if(!Array.isArray(h)||U&&U!==h[0])throw Error();var de=q=cs(h,0);if((re=(16&de)!==0)&&((W=(32&de)!==0)||(de|=32)),B){if(128&de)P=0;else if(0<h.length){var ge=h[h.length-1];if(xd(ge)&&"g"in ge){P=0,de|=128,delete ge.g;var Ve=!0,De;for(De in ge){Ve=!1;break}Ve&&h.pop()}}}else if(128&de)throw Error();q!==de&&Qo(h,de)}this.G=(U?0:-1)-P,this.h=void 0,this.o=h;e:{if(U=this.o.length,P=U-1,U&&(U=this.o[P],xd(U))){this.B=U,this.i=P-this.G;break e}v!==void 0&&-1<v?(this.i=Math.max(v,P+1-this.G),this.B=void 0):this.i=Number.MAX_VALUE}if(!B&&this.B&&"g"in this.B)throw Error('Unexpected "g" flag in sparse object of message that is not a group type.');if(k){v=re&&!W&&!0,B=this.i;var Ce;for(re=0;re<k.length;re++)W=k[re],W<B?(W+=this.G,(P=h[W])?Kb(P,v):h[W]=ep):(Ce||(Ce=Mb(this)),(P=Ce[W])?Kb(P,v):Ce[W]=ep)}}Br.prototype.toJSON=function(){return qx(this.o,K4,q4)},Br.prototype.C=function(){return!!(Wt(this.o)&2)};function Kb(h,v){if(Array.isArray(h)){var k=Wt(h),P=1;!v||k&2||(P|=16),(k&P)!==P&&Qo(h,k|P)}}Br.prototype.ja=Wx,Br.prototype.toString=function(){return this.o.toString()};function qb(h,v,k){if(k){var P={},B;for(B in k){var U=k[B],W=U.ra;W||(P.J=U.xa||U.oa.W,U.ia?(P.aa=Zb(U.ia),W=function(q){return function(re,de,ge){return q.J(re,de,ge,q.aa)}}(P)):U.ka?(P.Z=Jb(U.da.P,U.ka),W=function(q){return function(re,de,ge){return q.J(re,de,ge,q.Z)}}(P)):W=P.J,U.ra=W),W(v,h,U.da),P={J:P.J,aa:P.aa,Z:P.Z}}}U4(v,h)}var bd=Symbol();function jb(h,v,k){return h[bd]||(h[bd]=function(P,B){return v(P,B,k)})}function Xb(h){var v=h[bd];if(!v){var k=Xx(h);v=function(P,B){return eS(P,B,k)},h[bd]=v}return v}function j4(h){var v=h.ia;if(v)return Xb(v);if(v=h.wa)return jb(h.da.P,v,h.ka)}function X4(h){var v=j4(h),k=h.da,P=h.oa.U;return v?function(B,U){return P(B,U,k,v)}:function(B,U){return P(B,U,k)}}function Yb(h,v){var k=h[v];return typeof k=="function"&&k.length===0&&(k=k(),h[v]=k),Array.isArray(k)&&(op in k||rp in k||0<k.length&&typeof k[0]=="function")?k:void 0}function Qb(h,v,k,P,B,U){v.P=h[0];var W=1;if(h.length>W&&typeof h[W]!="number"){var q=h[W++];k(v,q)}for(;W<h.length;){k=h[W++];for(var re=W+1;re<h.length&&typeof h[re]!="number";)re++;switch(q=h[W++],re-=W,re){case 0:P(v,k,q);break;case 1:(re=Yb(h,W))?(W++,B(v,k,q,re)):P(v,k,q,h[W++]);break;case 2:re=W++,re=Yb(h,re),B(v,k,q,re,h[W++]);break;case 3:U(v,k,q,h[W++],h[W++],h[W++]);break;case 4:U(v,k,q,h[W++],h[W++],h[W++],h[W++]);break;default:throw Error("unexpected number of binary field arguments: "+re)}}return v}var Sd=Symbol();function Zb(h){var v=h[Sd];if(!v){var k=jx(h);v=function(P,B){return tS(P,B,k)},h[Sd]=v}return v}function Jb(h,v){var k=h[Sd];return k||(k=function(P,B){return qb(P,B,v)},h[Sd]=k),k}var rp=Symbol();function Y4(h,v){h.push(v)}function Q4(h,v,k){h.push(v,k.W)}function Z4(h,v,k,P){var B=Zb(P),U=jx(P).P,W=k.W;h.push(v,function(q,re,de){return W(q,re,de,U,B)})}function J4(h,v,k,P,B,U){var W=Jb(P,U),q=k.W;h.push(v,function(re,de,ge){return q(re,de,ge,P,W)})}function jx(h){var v=h[rp];return v||(v=Qb(h,h[rp]=[],Y4,Q4,Z4,J4),op in h&&rp in h&&(h.length=0),v)}var op=Symbol();function eO(h,v){h[0]=v}function tO(h,v,k,P){var B=k.U;h[v]=P?function(U,W,q){return B(U,W,q,P)}:B}function rO(h,v,k,P,B){var U=k.U,W=Xb(P),q=Xx(P).P;h[v]=function(re,de,ge){return U(re,de,ge,q,W,B)}}function oO(h,v,k,P,B,U,W){var q=k.U,re=jb(P,B,U);h[v]=function(de,ge,Ve){return q(de,ge,Ve,P,re,W)}}function Xx(h){var v=h[op];return v||(v=Qb(h,h[op]={},eO,tO,rO,oO),op in h&&rp in h&&(h.length=0),v)}function eS(h,v,k){for(;Fb(v)&&v.i!=4;){var P=v.l,B=k[P];if(!B){var U=k[0];U&&(U=U[P])&&(B=k[P]=X4(U))}if(!B||!B(v,h,P)){B=v,P=h,U=B.j,fd(B);var W=B;if(!W.ca){if(B=W.h.h-U,W.h.h=U,W=W.h,B==0)B=Ox();else{if(U=Pb(W,B),W.S&&W.m)B=W.i.subarray(U,U+B);else{W=W.i;var q=U;B=U+B,B=q===B?Ax():L4?W.slice(q,B):new Uint8Array(W.subarray(q,B))}B=B.length==0?Ox():new Zc(B,Qc)}(U=P.R)?U.push(B):P.R=[B]}}}return h}function tS(h,v,k){for(var P=k.length,B=P%2==1,U=B?1:0;U<P;U+=2)(0,k[U+1])(v,h,k[U]);qb(h,v,B?k[0]:void 0)}function np(h,v){return{U:h,W:v}}var Po=np(function(h,v,k){if(h.i!==5)return!1;h=h.h;var P=h.i,B=h.h,U=P[B],W=P[B+1],q=P[B+2];return P=P[B+3],ls(h,h.h+4),W=(U<<0|W<<8|q<<16|P<<24)>>>0,h=2*(W>>31)+1,U=W>>>23&255,W&=8388607,Zo(v,k,U==255?W?NaN:1/0*h:U==0?h*Math.pow(2,-149)*W:h*Math.pow(2,U-150)*(W+Math.pow(2,23))),!0},function(h,v,k){if(v=Hx(v,k),v!=null){us(h.h,8*k+5),h=h.h;var P=+v;P===0?0<1/P?Xt=Ir=0:(Ir=0,Xt=2147483648):isNaN(P)?(Ir=0,Xt=2147483647):(P=(k=0>P?-2147483648:0)?-P:P,34028234663852886e22<P?(Ir=0,Xt=(k|2139095040)>>>0):11754943508222875e-54>P?(P=Math.round(P/Math.pow(2,-149)),Ir=0,Xt=(k|P)>>>0):(v=Math.floor(Math.log(P)/Math.LN2),P*=Math.pow(2,-v),P=Math.round(8388608*P),16777216<=P&&++v,Ir=0,Xt=(k|v+127<<23|P&8388607)>>>0)),k=Xt,h.h.push(k>>>0&255),h.h.push(k>>>8&255),h.h.push(k>>>16&255),h.h.push(k>>>24&255)}}),nO=np(function(h,v,k){if(h.i!==0)return!1;var P=h.h,B=0,U=h=0,W=P.i,q=P.h;do{var re=W[q++];B|=(re&127)<<U,U+=7}while(32>U&&re&128);for(32<U&&(h|=(re&127)>>4),U=3;32>U&&re&128;U+=7)re=W[q++],h|=(re&127)<<U;if(ls(P,q),128>re)P=B>>>0,re=h>>>0,(h=re&2147483648)&&(P=~P+1>>>0,re=~re>>>0,P==0&&(re=re+1>>>0)),P=4294967296*re+(P>>>0);else throw Dx();return Zo(v,k,h?-P:P),!0},function(h,v,k){v=$o(v,k),v!=null&&(typeof v=="string"&&wb(v),v!=null&&(us(h.h,8*k),typeof v=="number"?(h=h.h,vb(v),Db(h,Xt,Ir)):(k=wb(v),Db(h.h,k.i,k.h))))}),iO=np(function(h,v,k){return h.i!==0?!1:(Zo(v,k,Jc(h.h)),!0)},function(h,v,k){if(v=$o(v,k),v!=null&&v!=null)if(us(h.h,8*k),h=h.h,k=v,0<=k)us(h,k);else{for(v=0;9>v;v++)h.h.push(k&127|128),k>>=7;h.h.push(1)}}),rS=np(function(h,v,k){if(h.i!==2)return!1;var P=Jc(h.h)>>>0;h=h.h;var B=Pb(h,P);if(h=h.i,B4){var U=h,W;(W=Fx)||(W=Fx=new TextDecoder("utf-8",{fatal:!0})),h=B+P,U=B===0&&h===U.length?U:U.subarray(B,h);try{var q=W.decode(U)}catch(Ve){if(md===void 0){try{W.decode(new Uint8Array([128]))}catch{}try{W.decode(new Uint8Array([97])),md=!0}catch{md=!1}}throw!md&&(Fx=void 0),Ve}}else{q=B,P=q+P,B=[];for(var re=null,de,ge;q<P;)de=h[q++],128>de?B.push(de):224>de?q>=P?as():(ge=h[q++],194>de||(ge&192)!==128?(q--,as()):B.push((de&31)<<6|ge&63)):240>de?q>=P-1?as():(ge=h[q++],(ge&192)!==128||de===224&&160>ge||de===237&&160<=ge||((U=h[q++])&192)!==128?(q--,as()):B.push((de&15)<<12|(ge&63)<<6|U&63)):244>=de?q>=P-2?as():(ge=h[q++],(ge&192)!==128||(de<<28)+(ge-144)>>30!==0||((U=h[q++])&192)!==128||((W=h[q++])&192)!==128?(q--,as()):(de=(de&7)<<18|(ge&63)<<12|(U&63)<<6|W&63,de-=65536,B.push((de>>10&1023)+55296,(de&1023)+56320))):as(),8192<=B.length&&(re=Ib(re,B),B.length=0);q=Ib(re,B)}return Zo(v,k,q),!0},function(h,v,k){if(v=$o(v,k),v!=null){var P=!1;if(P=P===void 0?!1:P,V4){if(P&&/(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])/.test(v))throw Error("Found an unpaired surrogate");v=(Tb||(Tb=new TextEncoder)).encode(v)}else{for(var B=0,U=new Uint8Array(3*v.length),W=0;W<v.length;W++){var q=v.charCodeAt(W);if(128>q)U[B++]=q;else{if(2048>q)U[B++]=q>>6|192;else{if(55296<=q&&57343>=q){if(56319>=q&&W<v.length){var re=v.charCodeAt(++W);if(56320<=re&&57343>=re){q=1024*(q-55296)+re-56320+65536,U[B++]=q>>18|240,U[B++]=q>>12&63|128,U[B++]=q>>6&63|128,U[B++]=q&63|128;continue}else W--}if(P)throw Error("Found an unpaired surrogate");q=65533}U[B++]=q>>12|224,U[B++]=q>>6&63|128}U[B++]=q&63|128}}v=B===U.length?U:U.subarray(0,B)}us(h.h,8*k+2),us(h.h,v.length),ya(h,h.h.end()),ya(h,v)}}),oS=np(function(h,v,k,P,B){if(h.i!==2)return!1;v=Vb(v,k,P),k=h.h.j,P=Jc(h.h)>>>0;var U=h.h.h+P,W=U-k;if(0>=W&&(h.h.j=U,B(v,h,void 0,void 0,void 0),W=U-h.h.h),W)throw Error("Message parsing ended unexpectedly. Expected to read "+(P+" bytes, instead read "+(P-W)+" bytes, either the data ended unexpectedly or the message misreported its own length"));return h.h.h=U,h.h.j=k,!0},function(h,v,k,P,B){if(v=Kx(v,P,k),v!=null)for(P=0;P<v.length;P++){var U=h;us(U.h,8*k+2);var W=U.h.end();ya(U,W),W.push(U.i),U=W,B(v[P],h),W=h;var q=U.pop();for(q=W.i+W.h.length()-q;127<q;)U.push(q&127|128),q>>>=7,W.i++;U.push(q),W.i++}});function Yx(h){return function(v,k){e:{if(hd.length){var P=hd.pop();P.setOptions(k),Lx(P.h,v,k),v=P}else v=new Bx(v,k);try{var B=Xx(h),U=eS(new B.P,v,B);break e}finally{B=v.h,B.i=null,B.m=!1,B.l=0,B.j=0,B.h=0,B.S=!1,v.l=-1,v.i=-1,100>hd.length&&hd.push(v)}U=void 0}return U}}function Qx(h){return function(){var v=new z4;tS(this,v,jx(h)),ya(v,v.h.end());for(var k=new Uint8Array(v.i),P=v.j,B=P.length,U=0,W=0;W<B;W++){var q=P[W];k.set(q,U),U+=q.length}return v.j=[k],k}}function va(h){Br.call(this,h)}x(va,Br);var nS=[va,1,iO,2,Po,3,rS,4,rS];va.prototype.l=Qx(nS);function Zx(h){Br.call(this,h,-1,sO)}x(Zx,Br),Zx.prototype.addClassification=function(h,v){return Vb(this,1,va,h,v),this};var sO=[1],aO=Yx([Zx,1,oS,nS]);function ip(h){Br.call(this,h)}x(ip,Br);var iS=[ip,1,Po,2,Po,3,Po,4,Po,5,Po];ip.prototype.l=Qx(iS);function sS(h){Br.call(this,h,-1,lO)}x(sS,Br);var lO=[1],uO=Yx([sS,1,oS,iS]);function wd(h){Br.call(this,h)}x(wd,Br);var aS=[wd,1,Po,2,Po,3,Po,4,Po,5,Po,6,nO],cO=Yx(aS);wd.prototype.l=Qx(aS);function lS(h,v,k){if(k=h.createShader(k===0?h.VERTEX_SHADER:h.FRAGMENT_SHADER),h.shaderSource(k,v),h.compileShader(k),!h.getShaderParameter(k,h.COMPILE_STATUS))throw Error(`Could not compile WebGL shader.

`+h.getShaderInfoLog(k));return k}function pO(h){return Kx(h,va,1).map(function(v){var k=$o(v,1);return{index:k??0,qa:en(v,2),label:$o(v,3)!=null?yd($o(v,3),""):void 0,displayName:$o(v,4)!=null?yd($o(v,4),""):void 0}})}function dO(h){return{x:en(h,1),y:en(h,2),z:en(h,3),visibility:Hx(h,4)!=null?en(h,4):void 0}}function Jx(h){return Kx(uO(h),ip,1).map(dO)}function ey(h,v){this.i=h,this.h=v,this.m=0}function uS(h,v,k){return mO(h,v),typeof h.h.canvas.transferToImageBitmap=="function"?Promise.resolve(h.h.canvas.transferToImageBitmap()):k?Promise.resolve(h.h.canvas):typeof createImageBitmap=="function"?createImageBitmap(h.h.canvas):(h.j===void 0&&(h.j=document.createElement("canvas")),new Promise(function(P){h.j.height=h.h.canvas.height,h.j.width=h.h.canvas.width,h.j.getContext("2d",{}).drawImage(h.h.canvas,0,0,h.h.canvas.width,h.h.canvas.height),P(h.j)}))}function mO(h,v){var k=h.h;if(h.s===void 0){var P=lS(k,`
  attribute vec2 aVertex;
  attribute vec2 aTex;
  varying vec2 vTex;
  void main(void) {
    gl_Position = vec4(aVertex, 0.0, 1.0);
    vTex = aTex;
  }`,0),B=lS(k,`
  precision mediump float;
  varying vec2 vTex;
  uniform sampler2D sampler0;
  void main(){
    gl_FragColor = texture2D(sampler0, vTex);
  }`,1),U=k.createProgram();if(k.attachShader(U,P),k.attachShader(U,B),k.linkProgram(U),!k.getProgramParameter(U,k.LINK_STATUS))throw Error(`Could not compile WebGL program.

`+k.getProgramInfoLog(U));P=h.s=U,k.useProgram(P),B=k.getUniformLocation(P,"sampler0"),h.l={O:k.getAttribLocation(P,"aVertex"),N:k.getAttribLocation(P,"aTex"),ya:B},h.v=k.createBuffer(),k.bindBuffer(k.ARRAY_BUFFER,h.v),k.enableVertexAttribArray(h.l.O),k.vertexAttribPointer(h.l.O,2,k.FLOAT,!1,0,0),k.bufferData(k.ARRAY_BUFFER,new Float32Array([-1,-1,-1,1,1,1,1,-1]),k.STATIC_DRAW),k.bindBuffer(k.ARRAY_BUFFER,null),h.u=k.createBuffer(),k.bindBuffer(k.ARRAY_BUFFER,h.u),k.enableVertexAttribArray(h.l.N),k.vertexAttribPointer(h.l.N,2,k.FLOAT,!1,0,0),k.bufferData(k.ARRAY_BUFFER,new Float32Array([0,1,0,0,1,0,1,1]),k.STATIC_DRAW),k.bindBuffer(k.ARRAY_BUFFER,null),k.uniform1i(B,0)}P=h.l,k.useProgram(h.s),k.canvas.width=v.width,k.canvas.height=v.height,k.viewport(0,0,v.width,v.height),k.activeTexture(k.TEXTURE0),h.i.bindTexture2d(v.glName),k.enableVertexAttribArray(P.O),k.bindBuffer(k.ARRAY_BUFFER,h.v),k.vertexAttribPointer(P.O,2,k.FLOAT,!1,0,0),k.enableVertexAttribArray(P.N),k.bindBuffer(k.ARRAY_BUFFER,h.u),k.vertexAttribPointer(P.N,2,k.FLOAT,!1,0,0),k.bindFramebuffer(k.DRAW_FRAMEBUFFER?k.DRAW_FRAMEBUFFER:k.FRAMEBUFFER,null),k.clearColor(0,0,0,0),k.clear(k.COLOR_BUFFER_BIT),k.colorMask(!0,!0,!0,!0),k.drawArrays(k.TRIANGLE_FAN,0,4),k.disableVertexAttribArray(P.O),k.disableVertexAttribArray(P.N),k.bindBuffer(k.ARRAY_BUFFER,null),h.i.bindTexture2d(0)}function fO(h){this.h=h}var hO=new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11]);function gO(h,v){return v+h}function cS(h,v){window[h]=v}function xO(h){var v=document.createElement("script");return v.setAttribute("src",h),v.setAttribute("crossorigin","anonymous"),new Promise(function(k){v.addEventListener("load",function(){k()},!1),v.addEventListener("error",function(){k()},!1),document.body.appendChild(v)})}function yO(){return te(function(h){switch(h.h){case 1:return h.s=2,R(h,WebAssembly.instantiate(hO),4);case 4:h.h=3,h.s=0;break;case 2:return h.s=0,h.l=null,h.return(!1);case 3:return h.return(!0)}})}function ty(h){if(this.h=h,this.listeners={},this.l={},this.L={},this.s={},this.v={},this.M=this.u=this.ga=!0,this.I=Promise.resolve(),this.fa="",this.D={},this.locateFile=h&&h.locateFile||gO,typeof window=="object")var v=window.location.pathname.toString().substring(0,window.location.pathname.toString().lastIndexOf("/"))+"/";else if(typeof location<"u")v=location.pathname.toString().substring(0,location.pathname.toString().lastIndexOf("/"))+"/";else throw Error("solutions can only be loaded on a web page or in a web worker");if(this.ha=v,h.options){v=a(Object.keys(h.options));for(var k=v.next();!k.done;k=v.next()){k=k.value;var P=h.options[k].default;P!==void 0&&(this.l[k]=typeof P=="function"?P():P)}}}r=ty.prototype,r.close=function(){return this.j&&this.j.delete(),Promise.resolve()};function vO(h){var v,k,P,B,U,W,q,re,de,ge,Ve;return te(function(De){switch(De.h){case 1:return h.ga?(v=h.h.files===void 0?[]:typeof h.h.files=="function"?h.h.files(h.l):h.h.files,R(De,yO(),2)):De.return();case 2:if(k=De.i,typeof window=="object")return cS("createMediapipeSolutionsWasm",{locateFile:h.locateFile}),cS("createMediapipeSolutionsPackedAssets",{locateFile:h.locateFile}),W=v.filter(function(Ce){return Ce.data!==void 0}),q=v.filter(function(Ce){return Ce.data===void 0}),re=Promise.all(W.map(function(Ce){var We=_d(h,Ce.url);if(Ce.path!==void 0){var Qe=Ce.path;We=We.then(function(Et){return h.overrideFile(Qe,Et),Promise.resolve(Et)})}return We})),de=Promise.all(q.map(function(Ce){return Ce.simd===void 0||Ce.simd&&k||!Ce.simd&&!k?xO(h.locateFile(Ce.url,h.ha)):Promise.resolve()})).then(function(){var Ce,We,Qe;return te(function(Et){if(Et.h==1)return Ce=window.createMediapipeSolutionsWasm,We=window.createMediapipeSolutionsPackedAssets,Qe=h,R(Et,Ce(We),2);Qe.i=Et.i,Et.h=0})}),ge=function(){return te(function(Ce){return h.h.graph&&h.h.graph.url?Ce=R(Ce,_d(h,h.h.graph.url),0):(Ce.h=0,Ce=void 0),Ce})}(),R(De,Promise.all([de,re,ge]),7);if(typeof importScripts!="function")throw Error("solutions can only be loaded on a web page or in a web worker");return P=v.filter(function(Ce){return Ce.simd===void 0||Ce.simd&&k||!Ce.simd&&!k}).map(function(Ce){return h.locateFile(Ce.url,h.ha)}),importScripts.apply(null,l(P)),B=h,R(De,createMediapipeSolutionsWasm(Module),6);case 6:B.i=De.i,h.m=new OffscreenCanvas(1,1),h.i.canvas=h.m,U=h.i.GL.createContext(h.m,{antialias:!1,alpha:!1,va:typeof WebGL2RenderingContext<"u"?2:1}),h.i.GL.makeContextCurrent(U),De.h=4;break;case 7:if(h.m=document.createElement("canvas"),Ve=h.m.getContext("webgl2",{}),!Ve&&(Ve=h.m.getContext("webgl",{}),!Ve))return alert("Failed to create WebGL canvas context when passing video frame."),De.return();h.K=Ve,h.i.canvas=h.m,h.i.createContext(h.m,!0,!0,{});case 4:h.j=new h.i.SolutionWasm,h.ga=!1,De.h=0}})}function bO(h){var v,k,P,B,U,W,q,re;return te(function(de){if(de.h==1){if(h.h.graph&&h.h.graph.url&&h.fa===h.h.graph.url)return de.return();if(h.u=!0,!h.h.graph||!h.h.graph.url){de.h=2;return}return h.fa=h.h.graph.url,R(de,_d(h,h.h.graph.url),3)}for(de.h!=2&&(v=de.i,h.j.loadGraph(v)),k=a(Object.keys(h.D)),P=k.next();!P.done;P=k.next())B=P.value,h.j.overrideFile(B,h.D[B]);if(h.D={},h.h.listeners)for(U=a(h.h.listeners),W=U.next();!W.done;W=U.next())q=W.value,CO(h,q);re=h.l,h.l={},h.setOptions(re),de.h=0})}r.reset=function(){var h=this;return te(function(v){h.j&&(h.j.reset(),h.s={},h.v={}),v.h=0})},r.setOptions=function(h,v){var k=this;if(v=v||this.h.options){for(var P=[],B=[],U={},W=a(Object.keys(h)),q=W.next();!q.done;U={X:U.X,Y:U.Y},q=W.next())if(q=q.value,!(q in this.l&&this.l[q]===h[q])){this.l[q]=h[q];var re=v[q];re!==void 0&&(re.onChange&&(U.X=re.onChange,U.Y=h[q],P.push(function(de){return function(){var ge;return te(function(Ve){if(Ve.h==1)return R(Ve,de.X(de.Y),2);ge=Ve.i,ge===!0&&(k.u=!0),Ve.h=0})}}(U))),re.graphOptionXref&&(q=Object.assign({},{calculatorName:"",calculatorIndex:0},re.graphOptionXref,{valueNumber:re.type===1?h[q]:0,valueBoolean:re.type===0?h[q]:!1,valueString:re.type===2?h[q]:""}),B.push(q)))}(P.length!==0||B.length!==0)&&(this.u=!0,this.H=(this.H===void 0?[]:this.H).concat(B),this.F=(this.F===void 0?[]:this.F).concat(P))}};function SO(h){var v,k,P,B,U,W,q;return te(function(re){switch(re.h){case 1:if(!h.u)return re.return();if(!h.F){re.h=2;break}v=a(h.F),k=v.next();case 3:if(k.done){re.h=5;break}return P=k.value,R(re,P(),4);case 4:k=v.next(),re.h=3;break;case 5:h.F=void 0;case 2:if(h.H){for(B=new h.i.GraphOptionChangeRequestList,U=a(h.H),W=U.next();!W.done;W=U.next())q=W.value,B.push_back(q);h.j.changeOptions(B),B.delete(),h.H=void 0}h.u=!1,re.h=0}})}r.initialize=function(){var h=this;return te(function(v){return v.h==1?R(v,vO(h),2):v.h!=3?R(v,bO(h),3):R(v,SO(h),0)})};function _d(h,v){var k,P;return te(function(B){return v in h.L?B.return(h.L[v]):(k=h.locateFile(v,""),P=fetch(k).then(function(U){return U.arrayBuffer()}),h.L[v]=P,B.return(P))})}r.overrideFile=function(h,v){this.j?this.j.overrideFile(h,v):this.D[h]=v},r.clearOverriddenFiles=function(){this.D={},this.j&&this.j.clearOverriddenFiles()},r.send=function(h,v){var k=this,P,B,U,W,q,re,de,ge,Ve;return te(function(De){switch(De.h){case 1:return k.h.inputs?(P=1e3*(v??performance.now()),R(De,k.I,2)):De.return();case 2:return R(De,k.initialize(),3);case 3:for(B=new k.i.PacketDataList,U=a(Object.keys(h)),W=U.next();!W.done;W=U.next())if(q=W.value,re=k.h.inputs[q]){e:{var Ce=h[q];switch(re.type){case"video":var We=k.s[re.stream];if(We||(We=new ey(k.i,k.K),k.s[re.stream]=We),We.m===0&&(We.m=We.i.createTexture()),typeof HTMLVideoElement<"u"&&Ce instanceof HTMLVideoElement)var Qe=Ce.videoWidth,Et=Ce.videoHeight;else typeof HTMLImageElement<"u"&&Ce instanceof HTMLImageElement?(Qe=Ce.naturalWidth,Et=Ce.naturalHeight):(Qe=Ce.width,Et=Ce.height);Et={glName:We.m,width:Qe,height:Et},Qe=We.h,Qe.canvas.width=Et.width,Qe.canvas.height=Et.height,Qe.activeTexture(Qe.TEXTURE0),We.i.bindTexture2d(We.m),Qe.texImage2D(Qe.TEXTURE_2D,0,Qe.RGBA,Qe.RGBA,Qe.UNSIGNED_BYTE,Ce),We.i.bindTexture2d(0),We=Et;break e;case"detections":for(We=k.s[re.stream],We||(We=new fO(k.i),k.s[re.stream]=We),We.data||(We.data=new We.h.DetectionListData),We.data.reset(Ce.length),Et=0;Et<Ce.length;++Et){Qe=Ce[Et];var Ct=We.data,ar=Ct.setBoundingBox,yo=Et,Vr=Qe.la,pt=new wd;if(Jo(pt,1,Vr.sa),Jo(pt,2,Vr.ta),Jo(pt,3,Vr.height),Jo(pt,4,Vr.width),Jo(pt,5,Vr.rotation),Zo(pt,6,Vr.pa),Vr=pt.l(),ar.call(Ct,yo,Vr),Qe.ea)for(Ct=0;Ct<Qe.ea.length;++Ct){pt=Qe.ea[Ct],ar=We.data,yo=ar.addNormalizedLandmark,Vr=Et,pt=Object.assign({},pt,{visibility:pt.visibility?pt.visibility:0});var lr=new ip;Jo(lr,1,pt.x),Jo(lr,2,pt.y),Jo(lr,3,pt.z),pt.visibility&&Jo(lr,4,pt.visibility),pt=lr.l(),yo.call(ar,Vr,pt)}if(Qe.ba)for(Ct=0;Ct<Qe.ba.length;++Ct)ar=We.data,yo=ar.addClassification,Vr=Et,pt=Qe.ba[Ct],lr=new va,Jo(lr,2,pt.qa),pt.index&&Zo(lr,1,pt.index),pt.label&&Zo(lr,3,pt.label),pt.displayName&&Zo(lr,4,pt.displayName),pt=lr.l(),yo.call(ar,Vr,pt)}We=We.data;break e;default:We={}}}switch(de=We,ge=re.stream,re.type){case"video":B.pushTexture2d(Object.assign({},de,{stream:ge,timestamp:P}));break;case"detections":Ve=de,Ve.stream=ge,Ve.timestamp=P,B.pushDetectionList(Ve);break;default:throw Error("Unknown input config type: '"+re.type+"'")}}return k.j.send(B),R(De,k.I,4);case 4:B.delete(),De.h=0}})};function wO(h,v,k){var P,B,U,W,q,re,de,ge,Ve,De,Ce,We,Qe,Et;return te(function(Ct){switch(Ct.h){case 1:if(!k)return Ct.return(v);for(P={},B=0,U=a(Object.keys(k)),W=U.next();!W.done;W=U.next())q=W.value,re=k[q],typeof re!="string"&&re.type==="texture"&&v[re.stream]!==void 0&&++B;1<B&&(h.M=!1),de=a(Object.keys(k)),W=de.next();case 2:if(W.done){Ct.h=4;break}if(ge=W.value,Ve=k[ge],typeof Ve=="string")return Qe=P,Et=ge,R(Ct,_O(h,ge,v[Ve]),14);if(De=v[Ve.stream],Ve.type==="detection_list"){if(De){for(var ar=De.getRectList(),yo=De.getLandmarksList(),Vr=De.getClassificationsList(),pt=[],lr=0;lr<ar.size();++lr){var Zn=cO(ar.get(lr)),kO=en(Zn,1),IO=en(Zn,2),TO=en(Zn,3),EO=en(Zn,4),NO=en(Zn,5,0),Cd=void 0;Cd=Cd===void 0?0:Cd,Zn={la:{sa:kO,ta:IO,height:TO,width:EO,rotation:NO,pa:yd($o(Zn,6),Cd)},ea:Jx(yo.get(lr)),ba:pO(aO(Vr.get(lr)))},pt.push(Zn)}ar=pt}else ar=[];P[ge]=ar,Ct.h=7;break}if(Ve.type==="proto_list"){if(De){for(ar=Array(De.size()),yo=0;yo<De.size();yo++)ar[yo]=De.get(yo);De.delete()}else ar=[];P[ge]=ar,Ct.h=7;break}if(De===void 0){Ct.h=3;break}if(Ve.type==="float_list"){P[ge]=De,Ct.h=7;break}if(Ve.type==="proto"){P[ge]=De,Ct.h=7;break}if(Ve.type!=="texture")throw Error("Unknown output config type: '"+Ve.type+"'");return Ce=h.v[ge],Ce||(Ce=new ey(h.i,h.K),h.v[ge]=Ce),R(Ct,uS(Ce,De,h.M),13);case 13:We=Ct.i,P[ge]=We;case 7:Ve.transform&&P[ge]&&(P[ge]=Ve.transform(P[ge])),Ct.h=3;break;case 14:Qe[Et]=Ct.i;case 3:W=de.next(),Ct.h=2;break;case 4:return Ct.return(P)}})}function _O(h,v,k){var P;return te(function(B){return typeof k=="number"||k instanceof Uint8Array||k instanceof h.i.Uint8BlobList?B.return(k):k instanceof h.i.Texture2dDataOut?(P=h.v[v],P||(P=new ey(h.i,h.K),h.v[v]=P),B.return(uS(P,k,h.M))):B.return(void 0)})}function CO(h,v){for(var k=v.name||"$",P=[].concat(l(v.wants)),B=new h.i.StringList,U=a(v.wants),W=U.next();!W.done;W=U.next())B.push_back(W.value);U=h.i.PacketListener.implement({onResults:function(q){for(var re={},de=0;de<v.wants.length;++de)re[P[de]]=q.get(de);var ge=h.listeners[k];ge&&(h.I=wO(h,re,v.outs).then(function(Ve){Ve=ge(Ve);for(var De=0;De<v.wants.length;++De){var Ce=re[P[De]];typeof Ce=="object"&&Ce.hasOwnProperty&&Ce.hasOwnProperty("delete")&&Ce.delete()}Ve&&(h.I=Ve)}))}}),h.j.attachMultiListener(B,U),B.delete()}r.onResults=function(h,v){this.listeners[v||"$"]=h},Se("Solution",ty),Se("OptionType",{BOOL:0,NUMBER:1,ua:2,0:"BOOL",1:"NUMBER",2:"STRING"});function pS(h){switch(h===void 0&&(h=0),h){case 1:return"pose_landmark_full.tflite";case 2:return"pose_landmark_heavy.tflite";default:return"pose_landmark_lite.tflite"}}function dS(h){var v=this;h=h||{},this.h=new ty({locateFile:h.locateFile,files:function(k){return[{url:"pose_solution_packed_assets_loader.js"},{simd:!1,url:"pose_solution_wasm_bin.js"},{simd:!0,url:"pose_solution_simd_wasm_bin.js"},{data:!0,url:pS(k.modelComplexity)}]},graph:{url:"pose_web.binarypb"},listeners:[{wants:["pose_landmarks","world_landmarks","segmentation_mask","image_transformed"],outs:{image:{type:"texture",stream:"image_transformed"},poseLandmarks:{type:"proto",stream:"pose_landmarks",transform:Jx},poseWorldLandmarks:{type:"proto",stream:"world_landmarks",transform:Jx},segmentationMask:{type:"texture",stream:"segmentation_mask"}}}],inputs:{image:{type:"video",stream:"input_frames_gpu"}},options:{useCpuInference:{type:0,graphOptionXref:{calculatorType:"InferenceCalculator",fieldName:"use_cpu_inference"},default:typeof window!="object"||window.navigator===void 0?!1:"iPad Simulator;iPhone Simulator;iPod Simulator;iPad;iPhone;iPod".split(";").includes(navigator.platform)||navigator.userAgent.includes("Mac")&&"ontouchend"in document},selfieMode:{type:0,graphOptionXref:{calculatorType:"GlScalerCalculator",calculatorIndex:1,fieldName:"flip_horizontal"}},modelComplexity:{type:1,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculatorModelComplexity",fieldName:"int_value"},onChange:function(k){var P,B,U;return te(function(W){return W.h==1?(P=pS(k),B="third_party/mediapipe/modules/pose_landmark/"+P,R(W,_d(v.h,P),2)):(U=W.i,v.h.overrideFile(B,U),W.return(!0))})}},smoothLandmarks:{type:0,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculatorSmoothLandmarks",fieldName:"bool_value"}},enableSegmentation:{type:0,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculatorEnableSegmentation",fieldName:"bool_value"}},smoothSegmentation:{type:0,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculatorSmoothSegmentation",fieldName:"bool_value"}},minDetectionConfidence:{type:1,graphOptionXref:{calculatorType:"TensorsToDetectionsCalculator",calculatorName:"poselandmarkgpu__posedetectiongpu__TensorsToDetectionsCalculator",fieldName:"min_score_thresh"}},minTrackingConfidence:{type:1,graphOptionXref:{calculatorType:"ThresholdingCalculator",calculatorName:"poselandmarkgpu__poselandmarkbyroigpu__tensorstoposelandmarksandsegmentation__ThresholdingCalculator",fieldName:"threshold"}}}})}r=dS.prototype,r.reset=function(){this.h.reset()},r.close=function(){return this.h.close(),Promise.resolve()},r.onResults=function(h){this.h.onResults(h)},r.initialize=function(){var h=this;return te(function(v){return R(v,h.h.initialize(),0)})},r.send=function(h,v){var k=this;return te(function(P){return R(P,k.h.send(h,v),0)})},r.setOptions=function(h){this.h.setOptions(h)},Se("Pose",dS),Se("POSE_CONNECTIONS",[[0,1],[1,2],[2,3],[3,7],[0,4],[4,5],[5,6],[6,8],[9,10],[11,12],[11,13],[13,15],[15,17],[15,19],[15,21],[17,19],[12,14],[14,16],[16,18],[16,20],[16,22],[18,20],[11,23],[12,24],[23,24],[23,25],[24,26],[25,27],[26,28],[27,29],[28,30],[29,31],[30,32],[27,31],[28,32]]),Se("POSE_LANDMARKS",{NOSE:0,LEFT_EYE_INNER:1,LEFT_EYE:2,LEFT_EYE_OUTER:3,RIGHT_EYE_INNER:4,RIGHT_EYE:5,RIGHT_EYE_OUTER:6,LEFT_EAR:7,RIGHT_EAR:8,LEFT_RIGHT:9,RIGHT_LEFT:10,LEFT_SHOULDER:11,RIGHT_SHOULDER:12,LEFT_ELBOW:13,RIGHT_ELBOW:14,LEFT_WRIST:15,RIGHT_WRIST:16,LEFT_PINKY:17,RIGHT_PINKY:18,LEFT_INDEX:19,RIGHT_INDEX:20,LEFT_THUMB:21,RIGHT_THUMB:22,LEFT_HIP:23,RIGHT_HIP:24,LEFT_KNEE:25,RIGHT_KNEE:26,LEFT_ANKLE:27,RIGHT_ANKLE:28,LEFT_HEEL:29,RIGHT_HEEL:30,LEFT_FOOT_INDEX:31,RIGHT_FOOT_INDEX:32}),Se("POSE_LANDMARKS_LEFT",{LEFT_EYE_INNER:1,LEFT_EYE:2,LEFT_EYE_OUTER:3,LEFT_EAR:7,LEFT_RIGHT:9,LEFT_SHOULDER:11,LEFT_ELBOW:13,LEFT_WRIST:15,LEFT_PINKY:17,LEFT_INDEX:19,LEFT_THUMB:21,LEFT_HIP:23,LEFT_KNEE:25,LEFT_ANKLE:27,LEFT_HEEL:29,LEFT_FOOT_INDEX:31}),Se("POSE_LANDMARKS_RIGHT",{RIGHT_EYE_INNER:4,RIGHT_EYE:5,RIGHT_EYE_OUTER:6,RIGHT_EAR:8,RIGHT_LEFT:10,RIGHT_SHOULDER:12,RIGHT_ELBOW:14,RIGHT_WRIST:16,RIGHT_PINKY:18,RIGHT_INDEX:20,RIGHT_THUMB:22,RIGHT_HIP:24,RIGHT_KNEE:26,RIGHT_ANKLE:28,RIGHT_HEEL:30,RIGHT_FOOT_INDEX:32}),Se("POSE_LANDMARKS_NEUTRAL",{NOSE:0}),Se("VERSION","0.5.1675469404")}).call(XS)});var x2=io((Oie,g2)=>{"use strict";g2.exports=kt;var Co=null;try{Co=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}function kt(r,t,e){this.low=r|0,this.high=t|0,this.unsigned=!!e}kt.prototype.__isLong__;Object.defineProperty(kt.prototype,"__isLong__",{value:!0});function Gr(r){return(r&&r.__isLong__)===!0}kt.isLong=Gr;var a2={},l2={};function Ns(r,t){var e,o,n;return t?(r>>>=0,(n=0<=r&&r<256)&&(o=l2[r],o)?o:(e=It(r,(r|0)<0?-1:0,!0),n&&(l2[r]=e),e)):(r|=0,(n=-128<=r&&r<128)&&(o=a2[r],o)?o:(e=It(r,r<0?-1:0,!1),n&&(a2[r]=e),e))}kt.fromInt=Ns;function ko(r,t){if(isNaN(r))return t?Es:Io;if(t){if(r<0)return Es;if(r>=d2)return h2}else{if(r<=-c2)return Ur;if(r+1>=c2)return f2}return r<0?ko(-r,t).neg():It(r%Ju|0,r/Ju|0,t)}kt.fromNumber=ko;function It(r,t,e){return new kt(r,t,e)}kt.fromBits=It;var Em=Math.pow;function vy(r,t,e){if(r.length===0)throw Error("empty string");if(r==="NaN"||r==="Infinity"||r==="+Infinity"||r==="-Infinity")return Io;if(typeof t=="number"?(e=t,t=!1):t=!!t,e=e||10,e<2||36<e)throw RangeError("radix");var o;if((o=r.indexOf("-"))>0)throw Error("interior hyphen");if(o===0)return vy(r.substring(1),t,e).neg();for(var n=ko(Em(e,8)),i=Io,s=0;s<r.length;s+=8){var a=Math.min(8,r.length-s),l=parseInt(r.substring(s,s+a),e);if(a<8){var u=ko(Em(e,a));i=i.mul(u).add(ko(l))}else i=i.mul(n),i=i.add(ko(l))}return i.unsigned=t,i}kt.fromString=vy;function Vo(r,t){return typeof r=="number"?ko(r,t):typeof r=="string"?vy(r,t):It(r.low,r.high,typeof t=="boolean"?t:r.unsigned)}kt.fromValue=Vo;var u2=65536,d5=1<<24,Ju=u2*u2,d2=Ju*Ju,c2=d2/2,p2=Ns(d5),Io=Ns(0);kt.ZERO=Io;var Es=Ns(0,!0);kt.UZERO=Es;var Zu=Ns(1);kt.ONE=Zu;var m2=Ns(1,!0);kt.UONE=m2;var yy=Ns(-1);kt.NEG_ONE=yy;var f2=It(-1,2147483647,!1);kt.MAX_VALUE=f2;var h2=It(-1,-1,!0);kt.MAX_UNSIGNED_VALUE=h2;var Ur=It(0,-2147483648,!1);kt.MIN_VALUE=Ur;var ye=kt.prototype;ye.toInt=function(){return this.unsigned?this.low>>>0:this.low};ye.toNumber=function(){return this.unsigned?(this.high>>>0)*Ju+(this.low>>>0):this.high*Ju+(this.low>>>0)};ye.toString=function(t){if(t=t||10,t<2||36<t)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(Ur)){var e=ko(t),o=this.div(e),n=o.mul(e).sub(this);return o.toString(t)+n.toInt().toString(t)}else return"-"+this.neg().toString(t);for(var i=ko(Em(t,6),this.unsigned),s=this,a="";;){var l=s.div(i),u=s.sub(l.mul(i)).toInt()>>>0,c=u.toString(t);if(s=l,s.isZero())return c+a;for(;c.length<6;)c="0"+c;a=""+c+a}};ye.getHighBits=function(){return this.high};ye.getHighBitsUnsigned=function(){return this.high>>>0};ye.getLowBits=function(){return this.low};ye.getLowBitsUnsigned=function(){return this.low>>>0};ye.getNumBitsAbs=function(){if(this.isNegative())return this.eq(Ur)?64:this.neg().getNumBitsAbs();for(var t=this.high!=0?this.high:this.low,e=31;e>0&&(t&1<<e)==0;e--);return this.high!=0?e+33:e+1};ye.isZero=function(){return this.high===0&&this.low===0};ye.eqz=ye.isZero;ye.isNegative=function(){return!this.unsigned&&this.high<0};ye.isPositive=function(){return this.unsigned||this.high>=0};ye.isOdd=function(){return(this.low&1)===1};ye.isEven=function(){return(this.low&1)===0};ye.equals=function(t){return Gr(t)||(t=Vo(t)),this.unsigned!==t.unsigned&&this.high>>>31===1&&t.high>>>31===1?!1:this.high===t.high&&this.low===t.low};ye.eq=ye.equals;ye.notEquals=function(t){return!this.eq(t)};ye.neq=ye.notEquals;ye.ne=ye.notEquals;ye.lessThan=function(t){return this.comp(t)<0};ye.lt=ye.lessThan;ye.lessThanOrEqual=function(t){return this.comp(t)<=0};ye.lte=ye.lessThanOrEqual;ye.le=ye.lessThanOrEqual;ye.greaterThan=function(t){return this.comp(t)>0};ye.gt=ye.greaterThan;ye.greaterThanOrEqual=function(t){return this.comp(t)>=0};ye.gte=ye.greaterThanOrEqual;ye.ge=ye.greaterThanOrEqual;ye.compare=function(t){if(Gr(t)||(t=Vo(t)),this.eq(t))return 0;var e=this.isNegative(),o=t.isNegative();return e&&!o?-1:!e&&o?1:this.unsigned?t.high>>>0>this.high>>>0||t.high===this.high&&t.low>>>0>this.low>>>0?-1:1:this.sub(t).isNegative()?-1:1};ye.comp=ye.compare;ye.negate=function(){return!this.unsigned&&this.eq(Ur)?Ur:this.not().add(Zu)};ye.neg=ye.negate;ye.add=function(t){Gr(t)||(t=Vo(t));var e=this.high>>>16,o=this.high&65535,n=this.low>>>16,i=this.low&65535,s=t.high>>>16,a=t.high&65535,l=t.low>>>16,u=t.low&65535,c=0,p=0,d=0,m=0;return m+=i+u,d+=m>>>16,m&=65535,d+=n+l,p+=d>>>16,d&=65535,p+=o+a,c+=p>>>16,p&=65535,c+=e+s,c&=65535,It(d<<16|m,c<<16|p,this.unsigned)};ye.subtract=function(t){return Gr(t)||(t=Vo(t)),this.add(t.neg())};ye.sub=ye.subtract;ye.multiply=function(t){if(this.isZero())return Io;if(Gr(t)||(t=Vo(t)),Co){var e=Co.mul(this.low,this.high,t.low,t.high);return It(e,Co.get_high(),this.unsigned)}if(t.isZero())return Io;if(this.eq(Ur))return t.isOdd()?Ur:Io;if(t.eq(Ur))return this.isOdd()?Ur:Io;if(this.isNegative())return t.isNegative()?this.neg().mul(t.neg()):this.neg().mul(t).neg();if(t.isNegative())return this.mul(t.neg()).neg();if(this.lt(p2)&&t.lt(p2))return ko(this.toNumber()*t.toNumber(),this.unsigned);var o=this.high>>>16,n=this.high&65535,i=this.low>>>16,s=this.low&65535,a=t.high>>>16,l=t.high&65535,u=t.low>>>16,c=t.low&65535,p=0,d=0,m=0,f=0;return f+=s*c,m+=f>>>16,f&=65535,m+=i*c,d+=m>>>16,m&=65535,m+=s*u,d+=m>>>16,m&=65535,d+=n*c,p+=d>>>16,d&=65535,d+=i*u,p+=d>>>16,d&=65535,d+=s*l,p+=d>>>16,d&=65535,p+=o*c+n*u+i*l+s*a,p&=65535,It(m<<16|f,p<<16|d,this.unsigned)};ye.mul=ye.multiply;ye.divide=function(t){if(Gr(t)||(t=Vo(t)),t.isZero())throw Error("division by zero");if(Co){if(!this.unsigned&&this.high===-2147483648&&t.low===-1&&t.high===-1)return this;var e=(this.unsigned?Co.div_u:Co.div_s)(this.low,this.high,t.low,t.high);return It(e,Co.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?Es:Io;var o,n,i;if(this.unsigned){if(t.unsigned||(t=t.toUnsigned()),t.gt(this))return Es;if(t.gt(this.shru(1)))return m2;i=Es}else{if(this.eq(Ur)){if(t.eq(Zu)||t.eq(yy))return Ur;if(t.eq(Ur))return Zu;var s=this.shr(1);return o=s.div(t).shl(1),o.eq(Io)?t.isNegative()?Zu:yy:(n=this.sub(t.mul(o)),i=o.add(n.div(t)),i)}else if(t.eq(Ur))return this.unsigned?Es:Io;if(this.isNegative())return t.isNegative()?this.neg().div(t.neg()):this.neg().div(t).neg();if(t.isNegative())return this.div(t.neg()).neg();i=Io}for(n=this;n.gte(t);){o=Math.max(1,Math.floor(n.toNumber()/t.toNumber()));for(var a=Math.ceil(Math.log(o)/Math.LN2),l=a<=48?1:Em(2,a-48),u=ko(o),c=u.mul(t);c.isNegative()||c.gt(n);)o-=l,u=ko(o,this.unsigned),c=u.mul(t);u.isZero()&&(u=Zu),i=i.add(u),n=n.sub(c)}return i};ye.div=ye.divide;ye.modulo=function(t){if(Gr(t)||(t=Vo(t)),Co){var e=(this.unsigned?Co.rem_u:Co.rem_s)(this.low,this.high,t.low,t.high);return It(e,Co.get_high(),this.unsigned)}return this.sub(this.div(t).mul(t))};ye.mod=ye.modulo;ye.rem=ye.modulo;ye.not=function(){return It(~this.low,~this.high,this.unsigned)};ye.and=function(t){return Gr(t)||(t=Vo(t)),It(this.low&t.low,this.high&t.high,this.unsigned)};ye.or=function(t){return Gr(t)||(t=Vo(t)),It(this.low|t.low,this.high|t.high,this.unsigned)};ye.xor=function(t){return Gr(t)||(t=Vo(t)),It(this.low^t.low,this.high^t.high,this.unsigned)};ye.shiftLeft=function(t){return Gr(t)&&(t=t.toInt()),(t&=63)===0?this:t<32?It(this.low<<t,this.high<<t|this.low>>>32-t,this.unsigned):It(0,this.low<<t-32,this.unsigned)};ye.shl=ye.shiftLeft;ye.shiftRight=function(t){return Gr(t)&&(t=t.toInt()),(t&=63)===0?this:t<32?It(this.low>>>t|this.high<<32-t,this.high>>t,this.unsigned):It(this.high>>t-32,this.high>=0?0:-1,this.unsigned)};ye.shr=ye.shiftRight;ye.shiftRightUnsigned=function(t){if(Gr(t)&&(t=t.toInt()),t&=63,t===0)return this;var e=this.high;if(t<32){var o=this.low;return It(o>>>t|e<<32-t,e>>>t,this.unsigned)}else return t===32?It(e,0,this.unsigned):It(e>>>t-32,0,this.unsigned)};ye.shru=ye.shiftRightUnsigned;ye.shr_u=ye.shiftRightUnsigned;ye.toSigned=function(){return this.unsigned?It(this.low,this.high,!1):this};ye.toUnsigned=function(){return this.unsigned?this:It(this.low,this.high,!0)};ye.toBytes=function(t){return t?this.toBytesLE():this.toBytesBE()};ye.toBytesLE=function(){var t=this.high,e=this.low;return[e&255,e>>>8&255,e>>>16&255,e>>>24,t&255,t>>>8&255,t>>>16&255,t>>>24]};ye.toBytesBE=function(){var t=this.high,e=this.low;return[t>>>24,t>>>16&255,t>>>8&255,t&255,e>>>24,e>>>16&255,e>>>8&255,e&255]};kt.fromBytes=function(t,e,o){return o?kt.fromBytesLE(t,e):kt.fromBytesBE(t,e)};kt.fromBytesLE=function(t,e){return new kt(t[0]|t[1]<<8|t[2]<<16|t[3]<<24,t[4]|t[5]<<8|t[6]<<16|t[7]<<24,e)};kt.fromBytesBE=function(t,e){return new kt(t[4]<<24|t[5]<<16|t[6]<<8|t[7],t[0]<<24|t[1]<<16|t[2]<<8|t[3],e)}});var sw=io((ac,iw)=>{"use strict";var Q5=function(){if(typeof self<"u")return self;if(typeof window<"u")return window;if(typeof global<"u")return global;throw new Error("unable to locate global object")},Ls=Q5();iw.exports=ac=Ls.fetch;Ls.fetch&&(ac.default=Ls.fetch.bind(Ls));ac.Headers=Ls.Headers;ac.Request=Ls.Request;ac.Response=Ls.Response});var aw=io(()=>{"use strict"});var A_=io((P_,Hy)=>{"use strict";(function(r,t,e){function o(a){var l=this,u=s();l.next=function(){var c=2091639*l.s0+l.c*23283064365386963e-26;return l.s0=l.s1,l.s1=l.s2,l.s2=c-(l.c=c|0)},l.c=1,l.s0=u(" "),l.s1=u(" "),l.s2=u(" "),l.s0-=u(a),l.s0<0&&(l.s0+=1),l.s1-=u(a),l.s1<0&&(l.s1+=1),l.s2-=u(a),l.s2<0&&(l.s2+=1),u=null}function n(a,l){return l.c=a.c,l.s0=a.s0,l.s1=a.s1,l.s2=a.s2,l}function i(a,l){var u=new o(a),c=l&&l.state,p=u.next;return p.int32=function(){return u.next()*4294967296|0},p.double=function(){return p()+(p()*2097152|0)*11102230246251565e-32},p.quick=p,c&&(typeof c=="object"&&n(c,u),p.state=function(){return n(u,{})}),p}function s(){var a=4022871197,l=function(u){u=String(u);for(var c=0;c<u.length;c++){a+=u.charCodeAt(c);var p=.02519603282416938*a;a=p>>>0,p-=a,p*=a,a=p>>>0,p-=a,a+=p*4294967296}return(a>>>0)*23283064365386963e-26};return l}t&&t.exports?t.exports=i:e&&e.amd?e(function(){return i}):this.alea=i})(P_,typeof Hy=="object"&&Hy,typeof define=="function"&&define)});var F_=io((D_,Ky)=>{"use strict";(function(r,t,e){function o(s){var a=this,l="";a.x=0,a.y=0,a.z=0,a.w=0,a.next=function(){var c=a.x^a.x<<11;return a.x=a.y,a.y=a.z,a.z=a.w,a.w^=a.w>>>19^c^c>>>8},s===(s|0)?a.x=s:l+=s;for(var u=0;u<l.length+64;u++)a.x^=l.charCodeAt(u)|0,a.next()}function n(s,a){return a.x=s.x,a.y=s.y,a.z=s.z,a.w=s.w,a}function i(s,a){var l=new o(s),u=a&&a.state,c=function(){return(l.next()>>>0)/4294967296};return c.double=function(){do var p=l.next()>>>11,d=(l.next()>>>0)/4294967296,m=(p+d)/(1<<21);while(m===0);return m},c.int32=l.next,c.quick=c,u&&(typeof u=="object"&&n(u,l),c.state=function(){return n(l,{})}),c}t&&t.exports?t.exports=i:e&&e.amd?e(function(){return i}):this.xor128=i})(D_,typeof Ky=="object"&&Ky,typeof define=="function"&&define)});var L_=io((O_,qy)=>{"use strict";(function(r,t,e){function o(s){var a=this,l="";a.next=function(){var c=a.x^a.x>>>2;return a.x=a.y,a.y=a.z,a.z=a.w,a.w=a.v,(a.d=a.d+362437|0)+(a.v=a.v^a.v<<4^(c^c<<1))|0},a.x=0,a.y=0,a.z=0,a.w=0,a.v=0,s===(s|0)?a.x=s:l+=s;for(var u=0;u<l.length+64;u++)a.x^=l.charCodeAt(u)|0,u==l.length&&(a.d=a.x<<10^a.x>>>4),a.next()}function n(s,a){return a.x=s.x,a.y=s.y,a.z=s.z,a.w=s.w,a.v=s.v,a.d=s.d,a}function i(s,a){var l=new o(s),u=a&&a.state,c=function(){return(l.next()>>>0)/4294967296};return c.double=function(){do var p=l.next()>>>11,d=(l.next()>>>0)/4294967296,m=(p+d)/(1<<21);while(m===0);return m},c.int32=l.next,c.quick=c,u&&(typeof u=="object"&&n(u,l),c.state=function(){return n(l,{})}),c}t&&t.exports?t.exports=i:e&&e.amd?e(function(){return i}):this.xorwow=i})(O_,typeof qy=="object"&&qy,typeof define=="function"&&define)});var B_=io((M_,jy)=>{"use strict";(function(r,t,e){function o(s){var a=this;a.next=function(){var u=a.x,c=a.i,p,d,m;return p=u[c],p^=p>>>7,d=p^p<<24,p=u[c+1&7],d^=p^p>>>10,p=u[c+3&7],d^=p^p>>>3,p=u[c+4&7],d^=p^p<<7,p=u[c+7&7],p=p^p<<13,d^=p^p<<9,u[c]=d,a.i=c+1&7,d};function l(u,c){var p,d,m=[];if(c===(c|0))d=m[0]=c;else for(c=""+c,p=0;p<c.length;++p)m[p&7]=m[p&7]<<15^c.charCodeAt(p)+m[p+1&7]<<13;for(;m.length<8;)m.push(0);for(p=0;p<8&&m[p]===0;++p);for(p==8?d=m[7]=-1:d=m[p],u.x=m,u.i=0,p=256;p>0;--p)u.next()}l(a,s)}function n(s,a){return a.x=s.x.slice(),a.i=s.i,a}function i(s,a){s==null&&(s=+new Date);var l=new o(s),u=a&&a.state,c=function(){return(l.next()>>>0)/4294967296};return c.double=function(){do var p=l.next()>>>11,d=(l.next()>>>0)/4294967296,m=(p+d)/(1<<21);while(m===0);return m},c.int32=l.next,c.quick=c,u&&(u.x&&n(u,l),c.state=function(){return n(l,{})}),c}t&&t.exports?t.exports=i:e&&e.amd?e(function(){return i}):this.xorshift7=i})(M_,typeof jy=="object"&&jy,typeof define=="function"&&define)});var W_=io((V_,Xy)=>{"use strict";(function(r,t,e){function o(s){var a=this;a.next=function(){var u=a.w,c=a.X,p=a.i,d,m;return a.w=u=u+1640531527|0,m=c[p+34&127],d=c[p=p+1&127],m^=m<<13,d^=d<<17,m^=m>>>15,d^=d>>>12,m=c[p]=m^d,a.i=p,m+(u^u>>>16)|0};function l(u,c){var p,d,m,f,g,x=[],y=128;for(c===(c|0)?(d=c,c=null):(c=c+"\0",d=0,y=Math.max(y,c.length)),m=0,f=-32;f<y;++f)c&&(d^=c.charCodeAt((f+32)%c.length)),f===0&&(g=d),d^=d<<10,d^=d>>>15,d^=d<<4,d^=d>>>13,f>=0&&(g=g+1640531527|0,p=x[f&127]^=d+g,m=p==0?m+1:0);for(m>=128&&(x[(c&&c.length||0)&127]=-1),m=127,f=4*128;f>0;--f)d=x[m+34&127],p=x[m=m+1&127],d^=d<<13,p^=p<<17,d^=d>>>15,p^=p>>>12,x[m]=d^p;u.w=g,u.X=x,u.i=m}l(a,s)}function n(s,a){return a.i=s.i,a.w=s.w,a.X=s.X.slice(),a}function i(s,a){s==null&&(s=+new Date);var l=new o(s),u=a&&a.state,c=function(){return(l.next()>>>0)/4294967296};return c.double=function(){do var p=l.next()>>>11,d=(l.next()>>>0)/4294967296,m=(p+d)/(1<<21);while(m===0);return m},c.int32=l.next,c.quick=c,u&&(u.X&&n(u,l),c.state=function(){return n(l,{})}),c}t&&t.exports?t.exports=i:e&&e.amd?e(function(){return i}):this.xor4096=i})(V_,typeof Xy=="object"&&Xy,typeof define=="function"&&define)});var U_=io((z_,Yy)=>{"use strict";(function(r,t,e){function o(s){var a=this,l="";a.next=function(){var c=a.b,p=a.c,d=a.d,m=a.a;return c=c<<25^c>>>7^p,p=p-d|0,d=d<<24^d>>>8^m,m=m-c|0,a.b=c=c<<20^c>>>12^p,a.c=p=p-d|0,a.d=d<<16^p>>>16^m,a.a=m-c|0},a.a=0,a.b=0,a.c=-1640531527,a.d=1367130551,s===Math.floor(s)?(a.a=s/4294967296|0,a.b=s|0):l+=s;for(var u=0;u<l.length+20;u++)a.b^=l.charCodeAt(u)|0,a.next()}function n(s,a){return a.a=s.a,a.b=s.b,a.c=s.c,a.d=s.d,a}function i(s,a){var l=new o(s),u=a&&a.state,c=function(){return(l.next()>>>0)/4294967296};return c.double=function(){do var p=l.next()>>>11,d=(l.next()>>>0)/4294967296,m=(p+d)/(1<<21);while(m===0);return m},c.int32=l.next,c.quick=c,u&&(typeof u=="object"&&n(u,l),c.state=function(){return n(l,{})}),c}t&&t.exports?t.exports=i:e&&e.amd?e(function(){return i}):this.tychei=i})(z_,typeof Yy=="object"&&Yy,typeof define=="function"&&define)});var G_=io(()=>{"use strict"});var K_=io((H_,yf)=>{"use strict";(function(r,t,e){var o=256,n=6,i=52,s="random",a=e.pow(o,n),l=e.pow(2,i),u=l*2,c=o-1,p;function d(T,R,M){var V=[];R=R==!0?{entropy:!0}:R||{};var z=x(g(R.entropy?[T,b(t)]:T??y(),3),V),H=new m(V),K=function(){for(var X=H.g(n),te=a,ce=0;X<l;)X=(X+ce)*o,te*=o,ce=H.g(1);for(;X>=u;)X/=2,te/=2,ce>>>=1;return(X+ce)/te};return K.int32=function(){return H.g(4)|0},K.quick=function(){return H.g(4)/4294967296},K.double=K,x(b(H.S),t),(R.pass||M||function(X,te,ce,pe){return pe&&(pe.S&&f(pe,H),X.state=function(){return f(H,{})}),ce?(e[s]=X,te):X})(K,z,"global"in R?R.global:this==e,R.state)}function m(T){var R,M=T.length,V=this,z=0,H=V.i=V.j=0,K=V.S=[];for(M||(T=[M++]);z<o;)K[z]=z++;for(z=0;z<o;z++)K[z]=K[H=c&H+T[z%M]+(R=K[z])],K[H]=R;(V.g=function(X){for(var te,ce=0,pe=V.i,ve=V.j,Se=V.S;X--;)te=Se[pe=c&pe+1],ce=ce*o+Se[c&(Se[pe]=Se[ve=c&ve+te])+(Se[ve]=te)];return V.i=pe,V.j=ve,ce})(o)}function f(T,R){return R.i=T.i,R.j=T.j,R.S=T.S.slice(),R}function g(T,R){var M=[],V=typeof T,z;if(R&&V=="object")for(z in T)try{M.push(g(T[z],R-1))}catch{}return M.length?M:V=="string"?T:T+"\0"}function x(T,R){for(var M=T+"",V,z=0;z<M.length;)R[c&z]=c&(V^=R[c&z]*19)+M.charCodeAt(z++);return b(R)}function y(){try{var T;return p&&(T=p.randomBytes)?T=T(o):(T=new Uint8Array(o),(r.crypto||r.msCrypto).getRandomValues(T)),b(T)}catch{var R=r.navigator,M=R&&R.plugins;return[+new Date,r,M,r.screen,b(t)]}}function b(T){return String.fromCharCode.apply(0,T)}if(x(e.random(),t),typeof yf=="object"&&yf.exports){yf.exports=d;try{p=G_()}catch{}}else typeof define=="function"&&define.amd?define(function(){return d}):e["seed"+s]=d})(typeof self<"u"?self:H_,[],Math)});var j_=io((_be,q_)=>{"use strict";var Vz=A_(),Wz=F_(),zz=L_(),Uz=B_(),Gz=W_(),Hz=U_(),Gs=K_();Gs.alea=Vz;Gs.xor128=Wz;Gs.xorwow=zz;Gs.xorshift7=Uz;Gs.xor4096=Gz;Gs.tychei=Hz;q_.exports=Gs});var Fa=class r{shortPress=new Ao;longPress=new Ao;pressRelease=new Ao;timeoutId;isLongPress=!1;onPressStart(t){t?.preventDefault(),this.isLongPress=!1,this.timeoutId=setTimeout(()=>{this.isLongPress=!0,this.longPress.emit()},500)}onPressEnd(){clearTimeout(this.timeoutId),this.isLongPress||this.shortPress.emit(),this.pressRelease.emit()}static \u0275fac=function(e){return new(e||r)};static \u0275dir=ti({type:r,selectors:[["","appPress",""]],hostBindings:function(e,o){e&1&&oe("mousedown",function(){return o.onPressStart()})("touchstart",function(i){return o.onPressStart(i)})("mouseup",function(){return o.onPressEnd()})("touchend",function(){return o.onPressEnd()})("touchcancel",function(){return o.onPressEnd()})},outputs:{shortPress:"shortPress",longPress:"longPress",pressRelease:"pressRelease"}})};var RO=(r,t)=>({"bg-primary text-white focus:ring-primary-dark":r,"bg-gray-200 text-gray-700 hover:bg-gray-300 dark:bg-gray-600 dark:text-gray-200 dark:hover:bg-gray-500 focus:ring-gray-400":t});function $O(r,t){if(r&1&&(_(0,"option",53),L(1),qe(2,"titlecase"),I()),r&2){let e=t.$implicit;F("value",e),N(),Le(ft(2,2,e))}}function PO(r,t){if(r&1&&(_(0,"option",53),L(1),qe(2,"titlecase"),I()),r&2){let e=t.$implicit;F("value",e),N(),Le(ft(2,2,e))}}function AO(r,t){if(r&1){let e=me();_(0,"button",54),oe("click",function(){let n=Q(e).$implicit,i=O();return Z(i.toggleEquipmentFilter(n))}),L(1),qe(2,"titlecase"),I()}if(r&2){let e=t.$implicit,o=O();F("ngClass",So(4,RO,o.selectedEquipment().includes(e),!o.selectedEquipment().includes(e))),N(),xe(" ",ft(2,2,e)," ")}}function DO(r,t){if(r&1&&(_(0,"div",55),L(1," Showing "),_(2,"strong",56),L(3),I(),L(4," of "),_(5,"strong",56),L(6),I(),L(7," routines "),I()),r&2){let e=O();N(3),Le(e.filteredRoutines().length),N(3),Le(e.allRoutinesForList().length)}}function FO(r,t){if(r&1&&le(0,"p",81),r&2){let e=O().$implicit,o=O(3);F("innerHTML",o.updateSanitizedDescription(e.description),Id)("title",e.description)}}function OO(r,t){if(r&1){let e=me();_(0,"div",82),_e(),_(1,"svg",83)(2,"g"),le(3,"path",84)(4,"path",85)(5,"path",86)(6,"path",87)(7,"path",88)(8,"path",89),I()(),He(),_(9,"span",90),L(10,"Goal:"),I(),_(11,"span",91),oe("click",function(n){Q(e);let i=O().$implicit,s=O(3);return Z(s.filterByGoal(i.goal,n))}),L(12),qe(13,"titlecase"),I()()}if(r&2){let e=O().$implicit;N(12),xe(" ",ft(13,1,e.goal)," ")}}function LO(r,t){if(r&1){let e=me();_(0,"span",97),oe("click",function(n){let i=Q(e).$implicit,s=O(5);return Z(s.filterByMuscleGroup(i,n))}),L(1),qe(2,"titlecase"),I()}if(r&2){let e=t.$implicit;N(),xe(" ",ft(2,1,e)," ")}}function MO(r,t){if(r&1&&(_(0,"div",92),_e(),_(1,"svg",93)(2,"g")(3,"g"),le(4,"path",94)(5,"path",95),I()()(),He(),_(6,"span",90),L(7,"Muscles:"),I(),ne(8,LO,3,3,"span",96),I()),r&2){let e=O().$implicit,o=O(3);N(8),F("ngForOf",o.getRoutineMainMuscleGroups(e))}}function BO(r,t){if(r&1&&(_(0,"div",98),_e(),_(1,"svg",99),le(2,"path",100),I(),He(),_(3,"span",90),L(4,"Last:"),I(),L(5),qe(6,"date"),I()),r&2){let e=O().$implicit;N(5),xe(" ",lo(6,1,e.lastPerformed,"dd/MM/yy HH:mm")," ")}}function VO(r,t){if(r&1&&(_(0,"div",101),_e(),_(1,"svg",102),le(2,"path",103),I(),He(),_(3,"span",90),L(4,"Est:"),I(),L(5),I()),r&2){let e=O().$implicit,o=O(3);N(5),xe(" ~",o.getRoutineDuration(e)," min ")}}function WO(r,t){r&1&&(_(0,"div",104),_e(),_(1,"svg",99),le(2,"path",100),I(),L(3," Not performed yet "),I())}function zO(r,t){if(r&1){let e=me();_(0,"div",105),oe("click",function(n){Q(e);let i=O(4);return Z(i.toggleOnlyHiddenRoutines(n))})("shortPress",function(n){Q(e);let i=O(4);return Z(i.toggleOnlyHiddenRoutines(n))})("longPress",function(n){Q(e);let i=O().$implicit,s=O(3);return Z(s.unhideRoutine(i.id,n,!0))}),_(1,"span",106),_e(),_(2,"svg",107),le(3,"path",108)(4,"path",109),I(),L(5),qe(6,"titlecase"),I()()}r&2&&(F("title","Click to filter for favourites. Long-press for unmark as favourite"),N(5),xe(" ",ft(6,2,"Hidden")," "))}function UO(r,t){if(r&1){let e=me();_(0,"div",110),oe("shortPress",function(n){Q(e);let i=O(4);return Z(i.toggleOnlyFavouriteRoutines(n))})("longPress",function(n){Q(e);let i=O().$implicit,s=O(3);return Z(s.unmarkAsFavourite(i.id,n,!0))}),_(1,"span",111),_e(),_(2,"svg",112),le(3,"path",113),I(),L(4),qe(5,"titlecase"),I()()}r&2&&(F("title","Click to filter for favourites. Long-press for unmark as favourite"),N(4),xe(" ",ft(5,2,"Favourite")," "))}function GO(r,t){if(r&1){let e=me();_(0,"app-action-menu",114),oe("itemClick",function(n){Q(e);let i=O(4);return Z(i.handleActionMenuItemClick(n))})("closeMenu",function(){Q(e);let n=O(4);return Z(n.onCloseActionMenu())}),I()}if(r&2){let e=O().$implicit,o=O(3);F("items",o.getRoutineDropdownActionItems(e.id,"dropdown"))("isVisible",o.areActionsVisible(e.id))}}function HO(r,t){if(r&1){let e=me();_(0,"app-action-menu",115),oe("itemClick",function(n){Q(e);let i=O(4);return Z(i.handleActionMenuItemClick(n))})("closeMenu",function(){Q(e);let n=O(4);return Z(n.onCloseActionMenu())}),I()}if(r&2){let e=O().$implicit,o=O(3);F("items",o.getRoutineDropdownActionItems(e.id,"compact-bar"))("isVisible",o.areActionsVisible(e.id))}}function KO(r,t){if(r&1){let e=me();_(0,"div",60),oe("click",function(n){let i=Q(e).$implicit,s=O(3);return Z(s.viewRoutineDetails(i.id,n))}),_(1,"div",61)(2,"div",62)(3,"h2",63),L(4),I()(),ne(5,FO,1,2,"p",64),_(6,"div",65),ne(7,OO,14,3,"div",66),I(),ne(8,MO,9,1,"div",67)(9,BO,7,4,"div",68),_(10,"div"),ne(11,VO,6,1,"div",69),I(),ne(12,WO,4,0,"div",70),_(13,"div",71),ne(14,zO,7,4,"div",72)(15,UO,6,4,"div",73),I()(),_(16,"div",74)(17,"div",75)(18,"button",76),oe("click",function(n){let i=Q(e).$implicit,s=O(3);return Z(s.toggleActions(i.id,n))}),_e(),_(19,"svg",77),le(20,"path",78),I()(),ne(21,GO,1,2,"app-action-menu",79),I()(),ne(22,HO,1,2,"app-action-menu",80),I()}if(r&2){let e=t.$implicit,o=O(3);up("z-index",o.areActionsVisible(e.id)?50:"auto"),N(3),F("title",e.name),N(),Le(e.name),N(),F("ngIf",e.description),N(2),F("ngIf",e.goal),N(),F("ngIf",o.getRoutineMainMuscleGroups(e).length>0),N(),F("ngIf",e.lastPerformed),N(2),F("ngIf",e&&o.getRoutineDuration(e)>0),N(),F("ngIf",!e.lastPerformed),N(2),F("ngIf",e.isHidden),N(),F("ngIf",e.isFavourite),N(6),F("ngIf",o.areActionsVisible(e.id)&&!o.menuModeCompact),N(),F("ngIf",o.areActionsVisible(e.id)&&o.menuModeCompact)}}function qO(r,t){if(r&1&&(_(0,"div",58),ne(1,KO,23,14,"div",59),I()),r&2){let e=O(2);N(),F("ngForOf",e.filteredRoutines())}}function jO(r,t){if(r&1){let e=me();_(0,"button",122),oe("click",function(){Q(e);let n=O(3);return Z(n.navigateToCreateRoutine())}),L(1," CREATE YOUR FIRST ROUTINE "),I()}}function XO(r,t){if(r&1&&(_(0,"div",116),_e(),_(1,"svg",117),le(2,"path",118),I(),He(),_(3,"h3",119),L(4),I(),_(5,"p",120),L(6),I(),ne(7,jO,2,0,"button",121),I()),r&2){let e=O(2);N(4),xe(" ",e.routineSearchTerm()||e.selectedRoutineGoal()||e.selectedRoutineMuscleGroup()?"No Routines Match Filters":"No Routines Yet!"," "),N(2),xe(" ",e.routineSearchTerm()||e.selectedRoutineGoal()||e.selectedRoutineMuscleGroup()?"Try adjusting your filters.":"Get started by creating your first workout routine."," "),N(),F("ngIf",!(e.routineSearchTerm()||e.selectedRoutineGoal()||e.selectedRoutineMuscleGroup()))}}function YO(r,t){if(r&1&&(_(0,"div"),ne(1,qO,2,1,"div",57)(2,XO,8,3,"ng-template",null,1,Mo),I()),r&2){let e=Lo(3),o=O();N(),F("ngIf",o.filteredRoutines().length>0)("ngIfElse",e)}}function QO(r,t){r&1&&(_(0,"div",123),_e(),_(1,"svg",124),le(2,"circle",125)(3,"path",126),I(),He(),_(4,"p",127),L(5,"Loading routines..."),I()())}function ZO(r,t){if(r&1){let e=me();_(0,"button",128),oe("click",function(){Q(e);let n=O();return Z(n.scrollToTop())}),_e(),_(1,"svg",129),le(2,"path",130),I(),He(),_(3,"span",8),L(4,"Back to Top"),I()()}}function JO(r,t){if(r&1){let e=me();_(0,"div",131)(1,"div",132)(2,"span",133),L(3," CREATE ROUTINE "),I(),_(4,"button",134),oe("click",function(){Q(e);let n=O();return Z(n.navigateToCreateRoutine())}),_e(),_(5,"svg",135),le(6,"path",136),I(),He(),_(7,"span",8),L(8,"CREATE NEW ROUTINE"),I()()(),_(9,"div",132)(10,"span",137),L(11," START NEW SESSION "),I(),_(12,"button",138),_e(),_(13,"svg",139),le(14,"path",140),I(),He(),_(15,"span",8),L(16,"START NEW SESSION"),I()()()()}r&2&&F("@fabSlideUp",void 0)}var Yd=class r{workoutService=Ae(Da);exerciseService=Ae(li);trackingService=Ae(ai);trainingService=Ae(Hd);router=Ae(ni);alertService=Ae(Pa);spinnerService=Ae(Kd);toastService=Ae(Aa);storageService=Ae(Gd);themeService=Ae(LS);platformId=Ae(wa);sanitizer=Ae($d);sanitizedDescription="";routines$;allRoutinesForList=we([]);routinesSubscription;exercisesSubscription;showBackToTopButton=we(!1);onWindowScroll(){let t=window.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop||0;this.showBackToTopButton.set(t>400)}visibleActionsRutineId=we(null);menuModeCompact=!1;isFilterAccordionOpen=we(!1);routineSearchTerm=we("");selectedRoutineGoal=we(null);selectedEquipment=we([]);selectedRoutineMuscleGroup=we(null);uniqueRoutineGoals=we([]);uniqueRoutineEquipments=we([]);uniqueRoutineMuscleGroups=we([]);allExercisesMap=new Map;PAUSED_WORKOUT_KEY="fitTrackPro_pausedWorkoutState";maxDuration=we(120);selectedMaxDuration=we(120);showHiddenRoutines=we(!1);showFavouriteRoutinesOnly=we(!1);filteredRoutines=Nt(()=>{let t=this.allRoutinesForList(),e=this.showHiddenRoutines(),o=this.showFavouriteRoutinesOnly();e||(t=t.filter(c=>!c.isHidden)),o&&(t=t.filter(c=>c.isFavourite));let n=this.routineSearchTerm().toLowerCase(),i=this.selectedRoutineGoal(),s=this.selectedRoutineMuscleGroup(),a=this.selectedEquipment(),l=this.selectedMaxDuration();return t=t.map(c=>er(Ht({},c),{estimatedDuration:this.getRoutineDuration(c)})).filter(c=>c.estimatedDuration<=l),n&&(t=t.filter(c=>c.name.toLowerCase().includes(n)||c.description&&c.description.toLowerCase().includes(n))),i&&(t=t.filter(c=>c.goal?.toLowerCase()===i.toLowerCase())),s&&(t=t.filter(c=>c.exercises.some(p=>this.allExercisesMap.get(p.exerciseId)?.primaryMuscleGroup.toLowerCase()===s.toLowerCase()))),a.length>0&&(t=t.filter(c=>{let p=new Set;return c.exercises.forEach(d=>{let m=this.allExercisesMap.get(d.exerciseId);m?.equipment&&p.add(m.equipment),m?.equipmentNeeded?.forEach(f=>{f.toLowerCase().includes("kettlebell")?p.add("Kettlebell"):p.add(f.split(" (")[0].trim())})}),a.every(d=>p.has(d))})),t});toggleEquipmentFilter(t){this.selectedEquipment.update(e=>{let o=new Set(e);return o.has(t)?o.delete(t):o.add(t),Array.from(o)})}isFabActionsOpen=we(!1);isTouchDevice=!1;ngOnInit(){gr(this.platformId)&&(window.scrollTo(0,0),this.isTouchDevice="ontouchstart"in window||navigator.maxTouchPoints>0),this.menuModeCompact=this.themeService.isMenuModeCompact(),this.exercisesSubscription=this.exerciseService.getExercises().subscribe(t=>{t.forEach(e=>this.allExercisesMap.set(e.id,e)),this.loadRoutinesAndPopulateFilters()}),this.routines$=this.workoutService.routines$}loadRoutinesAndPopulateFilters(){this.routinesSubscription=this.workoutService.routines$.subscribe(t=>{this.allRoutinesForList.set(t),this.populateRoutineFilterOptions(t)})}populateRoutineFilterOptions(t){if(!t||t.length===0){this.maxDuration.set(120);return}let e=new Set,o=new Set,n=new Set,i=0;t.forEach(a=>{let l=this.getRoutineDuration(a);l>i&&(i=l),a.goal&&e.add(a.goal),a.exercises.forEach(u=>{let c=this.allExercisesMap.get(u.exerciseId);c?.primaryMuscleGroup&&o.add(c.primaryMuscleGroup),c?.equipmentNeeded?c.equipmentNeeded.forEach(p=>{let d=p.indexOf(" (alternative)"),m=p.indexOf(" (optional)"),f=p.indexOf("Dumbbells"),g=p.indexOf("Dumbbell(s)"),x=p.indexOf("Kettlebells"),y=p.indexOf("Kettlebell(s)");d>=0&&(p=p.substring(0,d)),m>=0&&(p=p.substring(0,m)),(y>=0||x>=0)&&(p="Kettlebell"),(f>=0||g>=0)&&(p="Dumbbell"),n.add(p)}):c?.equipment&&n.add(c.equipment)})});let s=Math.min(Math.ceil(i/10)*10,180);this.maxDuration.set(s>0?s:120),this.selectedMaxDuration.set(s>0?s:120),this.uniqueRoutineGoals.set(Array.from(e).sort()),this.uniqueRoutineMuscleGroups.set(Array.from(o).sort()),this.uniqueRoutineEquipments.set(Array.from(n).sort())}toggleFilterAccordion(){this.isFilterAccordionOpen.update(t=>!t)}onRoutineSearchTermChange(t){let e=t.target;this.routineSearchTerm.set(e.value)}onRoutineGoalChange(t){let e=t.target;this.selectedRoutineGoal.set(e.value||null)}onRoutineMuscleGroupChange(t){let e=t.target;this.selectedRoutineMuscleGroup.set(e.value||null)}onDurationFilterChange(t){let e=t.target;this.selectedMaxDuration.set(Number(e.value))}clearRoutineFilters(){this.routineSearchTerm.set(""),this.selectedRoutineGoal.set(null),this.selectedRoutineMuscleGroup.set(null),this.selectedEquipment.set([]),this.selectedMaxDuration.set(this.maxDuration());let t=document.getElementById("routine-search-term");t&&(t.value="");let e=document.getElementById("routine-goal-filter");e&&(e.value="");let o=document.getElementById("routine-muscle-filter");o&&(o.value="");let n=document.getElementById("routine-equipment-filter");n&&(n.value="")}navigateToCreateRoutine(){this.router.navigate(["/workout/routine/new"])}editRoutine(t,e){this.router.navigate(["/workout/routine/edit",t]),this.visibleActionsRutineId.set(null)}deleteRoutine(t,e){return j(this,null,function*(){this.visibleActionsRutineId.set(null);let o=this.allRoutinesForList().find(l=>l.id===t);if(!o){this.toastService.error("Routine not found for deletion",0,"Error");return}let n=(yield ba(this.trackingService.getWorkoutLogsByRoutineId(t).pipe(hr(1))))||[],i=(yield ba(this.trainingService.getProgramsByRoutineId(t).pipe(hr(1))))||[],s=`Are you sure you want to delete the routine "${o.name}"?`;if(n.length>0&&(s+=` This will also delete ${n.length} associated workout log(s).`),i.length>0)if(i.length===1){let l=i[0].schedule.find(c=>c.routineId===t),u=l?"'"+l.routineName+"'":"";s+=` This will also delete the entries in ${u||"1"} associated program(s).`}else s+=` This will also delete the entries in ${i.length} associated program(s).`;(n.length>0||i.length>0)&&(s+=" This action cannot be undone.");let a=yield this.alertService.showConfirm("Delete Routine",s,"Delete");if(a&&a.data)try{this.spinnerService.show(),n.length>0&&(yield this.trackingService.clearWorkoutLogsByRoutineId(t)),yield this.workoutService.deleteRoutine(t),this.toastService.success(`Routine "${o.name}" deleted successfully.`,4e3,"Routine Deleted")}catch(l){console.error("Error during deletion:",l),this.toastService.error("Failed to delete routine or its logs",0,"Deletion Failed")}finally{this.spinnerService.hide()}})}startWorkout(t,e){return j(this,null,function*(){if(this.visibleActionsRutineId.set(null),!gr(this.platformId)){this.router.navigate(["/workout/play",t]);return}let o=this.storageService.getItem(this.PAUSED_WORKOUT_KEY);if(o){let n=o.sessionRoutine?.name||"a previous session",i=o.workoutDate?` from ${xr(new Date(o.workoutDate),"MMM d, HH:mm")}`:"",s=[{text:"Cancel",role:"cancel",data:"cancel"},{text:"Discard Paused & Start New",role:"confirm",data:"discard_start_new",cssClass:"bg-red-500 hover:bg-red-600 text-white"},{text:`Resume: ${n.substring(0,15)}${n.length>15?"...":""}`,role:"confirm",data:"resume_paused",cssClass:"bg-green-500 hover:bg-green-600 text-white"}],a=yield this.alertService.showConfirmationDialog("Workout in Progress",`You have a paused workout ("${n}"${i}). What would you like to do?`,s);if(a&&a.data==="resume_paused"){let l=o.routineId||"ad-hoc";this.router.navigate(["/workout/play",o.routineId||""],{queryParams:{resume:"true"}})}else a&&a.data==="discard_start_new"?(this.storageService.removeItem(this.PAUSED_WORKOUT_KEY),this.toastService.info("Previous paused workout discarded.",3e3),this.router.navigate(["/workout/play",t])):this.toastService.info("Starting new workout cancelled.",2e3)}else this.router.navigate(["/workout/play",t])})}viewRoutineDetails(t,e){if(e?.stopPropagation(),e&&e.target){let o=e.target;if(o.className&&o.className.includes("bg-primary"))return}this.router.navigate(["/workout/routine/view",t,{isView:"routineBuilder"}]),this.visibleActionsRutineId.set(null)}hideRoutine(t,e){e?.stopPropagation();let o=this.allRoutinesForList().find(n=>n.id===t);o&&(o.isHidden=!0,this.workoutService.updateRoutine(o),this.loadRoutinesAndPopulateFilters())}unhideRoutine(t,e,o=!1){return j(this,null,function*(){e?.stopPropagation();let n=this.allRoutinesForList().find(i=>i.id===t);if(n){if(o){let i=[{text:"Cancel",role:"cancel",data:"cancel"},{text:"Unmark",role:"confirm",data:"confirm"}],s=yield this.alertService.showConfirmationDialog("Unhide routine",`Would you like to unhide ${n.name} from hidden ones?`,i);if(!s||!s.data||s.data==="cancel")return}n.isHidden=!1,this.workoutService.updateRoutine(n),this.loadRoutinesAndPopulateFilters(),this.toastService.success(`Removed ${n.name} from hidden ones`)}})}markAsFavourite(t,e){e?.stopPropagation();let o=this.allRoutinesForList().find(n=>n.id===t);o&&(o.isFavourite=!0,this.workoutService.updateRoutine(o),this.loadRoutinesAndPopulateFilters(),this.toastService.info(`Routine "${o.name}" added to favourites`))}unmarkAsFavourite(t,e,o=!1){return j(this,null,function*(){e?.stopPropagation();let n=this.allRoutinesForList().find(i=>i.id===t);if(n){if(o){let i=[{text:"Cancel",role:"cancel",data:"cancel"},{text:"Unmark",role:"confirm",data:"confirm"}],s=yield this.alertService.showConfirmationDialog("Unmark favourite routine",`Would you like to unmark ${n.name} from favourites?`,i);if(!s||!s.data||s.data==="cancel")return}n.isFavourite=!1,this.workoutService.updateRoutine(n),this.loadRoutinesAndPopulateFilters(),this.toastService.info(`Routine "${n.name}" removed from favourites`)}})}getRoutineMainMuscleGroups(t){if(!this.allExercisesMap.size||!t.exercises.length)return[];let e=new Set;return t.exercises.forEach(o=>{let n=this.allExercisesMap.get(o.exerciseId);n?.primaryMuscleGroup&&e.add(n.primaryMuscleGroup)}),Array.from(e).slice(0,3)}cloneAndEditRoutine(t,e){return j(this,null,function*(){this.visibleActionsRutineId.set(null);let o=this.allRoutinesForList().find(i=>i.id===t);if(!o){this.toastService.error("Routine not found for cloning",0,"Error");return}let n=er(Ht({},structuredClone(o)),{name:o.name+" (Copy)",createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()});try{this.spinnerService.show(),n=yield this.workoutService.addRoutine(n),this.toastService.success(`Routine "${n.name}" cloned successfully.`,3e3,"Routine Cloned"),this.router.navigate(["/workout/routine/edit",n.id]),this.visibleActionsRutineId.set(null)}catch(i){console.error("Error during routine cloning:",i),this.toastService.error("Failed to clone routine",0,"Clone Failed")}finally{this.spinnerService.hide()}})}ngOnDestroy(){this.routinesSubscription?.unsubscribe(),this.exercisesSubscription?.unsubscribe()}startKB(){this.router.navigate(["/workout/routine/kb-workout-tracker"])}getIconPath(t){return this.exerciseService.getIconPath(t)}getRoutineDropdownActionItems(t,e){let o="rounded text-left px-3 py-1.5 sm:px-4 sm:py-2 font-medium text-gray-600 dark:text-gray-300 hover:bg-primary flex items-center text-sm hover:text-white dark:hover:text-gray-100 dark:hover:text-white",n="rounded text-left px-3 py-1.5 sm:px-4 sm:py-2 font-medium text-gray-600 dark:text-gray-300 hover:bg-red-600 flex items-center text-sm hover:text-gray-100 hover:animate-pulse",i=this.allRoutinesForList().find(p=>p.id===t),s={label:"HIDE",actionKey:"hide",iconSvg:`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path fill-rule="evenodd" d="M3.28 2.22a.75.75 0 00-1.06 1.06l14.5 14.5a.75.75 0 101.06-1.06l-1.745-1.745a10.029 10.029 0 003.3-4.38 1.651 1.651 0 000-1.185A10.004 10.004 0 009.999 3a9.956 9.956 0 00-4.744 1.194L3.28 2.22zM7.752 6.69l1.092 1.092a2.5 2.5 0 013.374 3.373l1.091 1.092a4 4 0 00-5.557-5.557z" clip-rule="evenodd" />
        <path d="M10.748 13.93l2.523 2.523a9.987 9.987 0 01-3.27.547c-4.257 0-7.893-2.66-9.336-6.41a1.651 1.651 0 010-1.186A10.007 10.007 0 012.839 6.02L6.07 9.252a4 4 0 004.678 4.678z" /></svg>`,iconClass:"w-8 h-8 mr-2",buttonClass:(e==="dropdown"?"w-full ":"")+o,data:{routineId:t}},a={label:"UNHIDE",actionKey:"unhide",iconSvg:'<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M10 12.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5Z" /><path fill-rule="evenodd" d="M.664 10.59a1.651 1.651 0 010-1.186A10.004 10.004 0 0110 3c4.257 0 7.893 2.66 9.336 6.41.147.381.146.804 0 1.186A10.004 10.004 0 0110 17c-4.257 0-7.893-2.66-9.336-6.41ZM14 10a4 4 0 11-8 0 4 4 0 018 0Z" clip-rule="evenodd" /></svg>',iconClass:"w-8 h-8 mr-2",buttonClass:(e==="dropdown"?"w-full ":"")+o,data:{routineId:t}},l={label:"FAVOURITE",actionKey:"markAsFavourite",iconSvg:`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
          <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"/>
        </svg>`,iconClass:"w-8 h-8 mr-2",buttonClass:(e==="dropdown"?"w-full ":"")+o,data:{routineId:t}},u={label:"REMOVE",actionKey:"unmarkAsFavourite",iconSvg:`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
        <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"/>
        <line x1="2" y1="20" x2="22" y2="4"></line>
      </svg>`,iconClass:"w-8 h-8 mr-2",buttonClass:(e==="dropdown"?"w-full ":"")+o,data:{routineId:t}},c=[{label:"VIEW",actionKey:"view",iconSvg:'<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M10 12.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5Z" /><path fill-rule="evenodd" d="M.664 10.59a1.651 1.651 0 010-1.186A10.004 10.004 0 0110 3c4.257 0 7.893 2.66 9.336 6.41.147.381.146.804 0 1.186A10.004 10.004 0 0110 17c-4.257 0-7.893-2.66-9.336-6.41ZM14 10a4 4 0 11-8 0 4 4 0 018 0Z" clip-rule="evenodd" /></svg>',iconClass:"w-8 h-8 mr-2",buttonClass:(e==="dropdown"?"w-full ":"")+o,data:{routineId:t}},{label:"START",actionKey:"start",iconSvg:'<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" d="M5.25 5.653c0-.856.917-1.398 1.667-.986l11.54 6.347a1.125 1.125 0 0 1 0 1.972l-11.54 6.347a1.125 1.125 0 0 1-1.667-.986V5.653Z" /></svg>',iconClass:"w-8 h-8 mr-2",buttonClass:(e==="dropdown"?"w-full ":"")+o,data:{routineId:t}},{label:"EDIT",actionKey:"edit",iconSvg:'<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" d="m16.862 4.487 1.687-1.688a1.875 1.875 0 1 1 2.652 2.652L10.582 16.07a4.5 4.5 0 0 1-1.897 1.13L6 18l.8-2.685a4.5 4.5 0 0 1 1.13-1.897l8.932-8.931Zm0 0L19.5 7.125M18 14v4.75A2.25 2.25 0 0 1 15.75 21H5.25A2.25 2.25 0 0 1 3 18.75V8.25A2.25 2.25 0 0 1 5.25 6H10" /></svg>',iconClass:"w-8 h-8 mr-2",buttonClass:(e==="dropdown"?"w-full ":"")+o,data:{routineId:t}},{label:"CLONE",actionKey:"clone",iconSvg:'<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" fill="none"><path d="M 5 3 H 16 A 2 2 0 0 1 18 5 V 16 A 2 2 0 0 1 16 18 H 5 A 2 2 0 0 1 3 16 V 5 A 2 2 0 0 1 5 3 Z M 8 6 H 19 A 2 2 0 0 1 21 8 V 19 A 2 2 0 0 1 19 21 H 8 A 2 2 0 0 1 6 19 V 8 A 2 2 0 0 1 8 6 Z" /></svg>',iconClass:"w-8 h-8 mr-2",buttonClass:(e==="dropdown"?"w-full ":"")+o,data:{routineId:t}},{isDivider:!0},{label:"DELETE",actionKey:"delete",iconSvg:'<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path fill-rule="evenodd" d="M8.75 1A2.75 2.75 0 006 3.75v.443c-.795.077-1.58.177-2.365.298a.75.75 0 10.23 1.482l.149-.022.841 10.518A2.75 2.75 0 007.596 19h4.807a2.75 2.75 0 002.742-2.53l.841-10.52.149.023a.75.75 0 00.23-1.482A41.03 41.03 0 0014 4.193V3.75A2.75 2.75 0 0011.25 1h-2.5ZM10 4c.84 0 1.673.025 2.5.075V3.75c0-.69-.56-1.25-1.25-1.25h-2.5c-.69 0-1.25.56-1.25 1.25v.325C8.327 4.025 9.16 4 10 4ZM8.58 7.72a.75.75 0 00-1.5.06l.3 7.5a.75.75 0 101.5-.06l-.3-7.5Zm4.34.06a.75.75 0 10-1.5-.06l-.3 7.5a.75.75 0 101.5.06l.3-7.5Z" clip-rule="evenodd" /></svg>',iconClass:"w-8 h-8 mr-2",buttonClass:(e==="dropdown"?"w-full ":"")+n,data:{routineId:t}}];return i?.isHidden?c.push(a):this.showHiddenRoutines()||c.push(s),i?.isFavourite?c.push(u):c.push(l),c}handleActionMenuItemClick(t,e){let o=t.data?.routineId;if(o){switch(t.actionKey){case"view":this.viewRoutineDetails(o);break;case"hide":this.hideRoutine(o);break;case"unhide":this.unhideRoutine(o);break;case"markAsFavourite":this.markAsFavourite(o);break;case"unmarkAsFavourite":this.unmarkAsFavourite(o);break;case"start":this.startWorkout(o);break;case"edit":this.editRoutine(o);break;case"clone":this.cloneAndEditRoutine(o);break;case"delete":this.deleteRoutine(o);break}this.activeRoutineIdActions.set(null)}}activeRoutineIdActions=we(null);toggleActions(t,e){e.stopPropagation(),this.activeRoutineIdActions.update(o=>o===t?null:t)}areActionsVisible(t){return this.activeRoutineIdActions()===t}onCloseActionMenu(){this.activeRoutineIdActions.set(null)}getRoutineDuration(t){return t?this.workoutService.getEstimatedRoutineDuration(t):0}scrollToTop(){gr(this.platformId)&&window.scrollTo({top:0,behavior:"smooth"})}toggleOnlyFavouriteRoutines(t){t?.stopPropagation(),this.showFavouriteRoutinesOnly.set(!this.showFavouriteRoutinesOnly())}toggleOnlyHiddenRoutines(t){t?.stopPropagation(),this.showHiddenRoutines.set(!this.showHiddenRoutines())}filterByGoal(t,e){if(e?.stopPropagation(),this.onRoutineGoalChange(e),e&&e.target&&t){let o=e.target;o.value=t,this.onRoutineGoalChange(e),this.toastService.info(`Filtered routines by goal '${t}'`)}}filterByMuscleGroup(t,e){if(e?.stopPropagation(),e&&e.target&&t){let o=e.target;o.value=t,this.onRoutineMuscleGroupChange(e),this.toastService.info(`Filtered routines by muscle '${t}'`)}}updateSanitizedDescription(t){return this.sanitizer.bypassSecurityTrustHtml(t)}handleFabClick(){this.isFabActionsOpen.update(t=>!t)}handleFabMouseEnter(){this.isTouchDevice||this.isFabActionsOpen.set(!0)}handleFabMouseLeave(){this.isTouchDevice||this.isFabActionsOpen.set(!1)}static \u0275fac=function(e){return new(e||r)};static \u0275cmp=vo({type:r,selectors:[["app-routine-list"]],hostBindings:function(e,o){e&1&&oe("scroll",function(){return o.onWindowScroll()},Td)},decls:84,vars:29,consts:[["loadingRoutines",""],["noRoutines",""],[1,"container","mx-auto","p-2","sm:p-4"],[1,"flex","justify-between","items-center","pb-2"],[1,"text-2xl","font-bold","text-gray-800","dark:text-gray-200"],["type","button",1,"rounded-md","text-gray-600","dark:text-gray-300","hover:bg-gray-200","dark:hover:bg-gray-700","focus:outline-none","focus:ring-2","focus:ring-primary","dark:focus:ring-primary-light","transition-all","duration-300","ease-in-out",3,"click"],["stroke","currentColor","viewBox","0 0 24 24","stroke-width","0.02","fill","currentColor","xmlns","http://www.w3.org/2000/svg",1,"w-8","h-8","transition-transform","duration-300"],["stroke-linecap","round","stroke-linejoin","round","d","M9 5a1 1 0 1 0 0 2 1 1 0 0 0 0-2zM6.17 5a3.001 3.001 0 0 1 5.66 0H19a1 1 0 1 1 0 2h-7.17a3.001 3.001 0 0 1-5.66 0H5a1 1 0 0 1 0-2h1.17zM15 11a1 1 0 1 0 0 2 1 1 0 0 0 0-2zm-2.83 0a3.001 3.001 0 0 1 5.66 0H19a1 1 0 1 1 0 2h-1.17a3.001 3.001 0 0 1-5.66 0H5a1 1 0 1 1 0-2h7.17zM9 17a1 1 0 1 0 0 2 1 1 0 0 0 0-2zm-2.83 0a3.001 3.001 0 0 1 5.66 0H19a1 1 0 1 1 0 2h-7.17a3.001 3.001 0 0 1-5.66 0H5a1 1 0 1 1 0-2h1.17z"],[1,"sr-only"],[1,"overflow-y-auto","transition-all","duration-500","ease-in-out"],[1,"p-4","bg-white","dark:bg-gray-700","rounded-md","shadow-md","border","dark:border-gray-600","mt-2"],[1,"text-xl","font-semibold","text-gray-700","dark:text-gray-300","mb-4"],[1,"grid","grid-cols-1","md:grid-cols-3","gap-4","items-start"],["for","routine-search-term",1,"block","text-sm","font-medium","text-gray-700","dark:text-gray-300","mb-1"],["type","text","id","routine-search-term","placeholder","Enter routine name or description...",1,"block","w-full","p-2","border","border-gray-300","dark:border-gray-600","rounded-md","shadow-sm","focus:ring-primary","focus:border-primary","dark:bg-gray-600","dark:text-gray-200",3,"input","value"],["for","routine-goal-filter",1,"block","text-sm","font-medium","text-gray-700","dark:text-gray-300","mb-1"],["id","routine-goal-filter",1,"block","w-full","p-2","border","border-gray-300","dark:border-gray-600","rounded-md","shadow-sm","focus:ring-primary","focus:border-primary","dark:bg-gray-600","dark:text-gray-200",3,"change","value"],["value",""],[3,"value",4,"ngFor","ngForOf"],["for","routine-muscle-filter",1,"block","text-sm","font-medium","text-gray-700","dark:text-gray-300","mb-1"],["id","routine-muscle-filter",1,"block","w-full","p-2","border","border-gray-300","dark:border-gray-600","rounded-md","shadow-sm","focus:ring-primary","focus:border-primary","dark:bg-gray-600","dark:text-gray-200",3,"change","value"],[1,"mt-4"],[1,"block","text-sm","font-medium","text-gray-700","dark:text-gray-300","mb-2"],[1,"flex","flex-wrap","gap-2"],["type","button","class","px-3 py-1.5 text-xs font-semibold rounded-full transition-colors duration-200 ease-in-out focus:outline-none focus:ring-2 focus:ring-offset-2 dark:focus:ring-offset-gray-800",3,"ngClass","click",4,"ngFor","ngForOf"],[1,"mt-4","pt-4","border-t","border-gray-200","dark:border-gray-600","md:border-none"],["for","duration-filter",1,"block","text-sm","font-medium","text-gray-700","dark:text-gray-300","mb-2"],[1,"text-primary","dark:text-primary-light"],["type","range","id","duration-filter","min","0","step","5",1,"w-full","h-2","bg-gray-300","dark:bg-gray-600","rounded-md","appearance-none","cursor-pointer",3,"input","max","value"],[1,"border-t","border-gray-200","dark:border-gray-600","md:border-none"],[1,"flex","flex-col","tems-center","justify-between","pt-4"],[1,"text-sm","text-gray-500","dark:text-gray-400","mr-1"],["for","show-hidden-routine",1,"inline-flex","items-center","cursor-pointer","mt-2"],["type","checkbox","id","show-hidden-routine",1,"sr-only","peer",3,"change","checked"],[1,"relative","w-11","h-6","bg-gray-200","peer-focus:outline-none","peer-focus:ring-4","peer-focus:ring-blue-300","dark:peer-focus:ring-blue-800","rounded-full","peer","dark:bg-gray-600","peer-checked:after:translate-x-full","rtl:peer-checked:after:-translate-x-full","peer-checked:after:border-white","after:content-['']","after:absolute","after:top-[2px]","after:start-[2px]","after:bg-white","after:border-gray-300","after:border","after:rounded-full","after:h-5","after:w-5","after:transition-all","dark:border-gray-600","peer-checked:bg-primary","dark:peer-checked:bg-primary-dark"],[1,"ms-3","text-sm","font-medium","text-gray-900","dark:text-gray-300"],["for","show-favourite-routine",1,"inline-flex","items-center","cursor-pointer","mt-2"],["type","checkbox","id","show-favourite-routine",1,"sr-only","peer",3,"change","checked"],[1,"mt-4","flex","justify-between","items-center"],[1,"flex","px-4","py-2","bg-yellow-200","dark:bg-yellow-700","text-gray-700","dark:text-gray-200","rounded-md","hover:bg-yellow-300","dark:hover:bg-yellow-500","text-sm","items-center",3,"click"],["xmlns","http://www.w3.org/2000/svg","fill","none","viewBox","0 0 24 24","stroke-width","1.5","stroke","currentColor",1,"size-5","mr-2"],["stroke-linecap","round","stroke-linejoin","round","d","m14.74 9-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 0 1-2.244 2.077H8.084a2.25 2.25 0 0 1-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 0 0-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 0 1 3.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 0 0-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 0 0-7.5 0"],["class","text-sm text-gray-600 dark:text-gray-400",4,"ngIf"],[4,"ngIf","ngIfElse"],["type","button",1,"p-2","rounded-md","mt-5","text-gray-600","dark:text-gray-300","hover:bg-gray-200","dark:hover:bg-gray-700","focus:outline-none","focus:ring-2","focus:ring-primary","dark:focus:ring-primary-light","transition-all","duration-300","ease-in-out",3,"click"],[1,"w-6","h-6","sm:w-8","sm:h-8","object-contain",3,"src"],[1,"fixed","bottom-20","right-6","z-40","flex","flex-col","items-center","gap-4"],["type","button","class","bg-primary dark:bg-primary-dark text-white rounded-full p-3 shadow-lg hover:bg-primary-dark dark:hover:bg-primary-light focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-focus dark:focus:ring-offset-gray-900 transition-opacity animate-fade-in",3,"click",4,"ngIf"],[1,"flex","flex-col-reverse","items-center","gap-4",3,"mouseenter","mouseleave"],["type","button",1,"flex","h-14","w-14","items-center","justify-center","rounded-full","bg-primary","text-white","shadow-xl","transition-all","duration-300","hover:bg-primary-dark","hover:scale-105","focus:outline-none","focus:ring-2","focus:ring-primary-focus","focus:ring-offset-2","dark:ring-offset-gray-900",3,"click"],["xmlns","http://www.w3.org/2000/svg","fill","none","viewBox","0 0 24 24","stroke","currentColor","stroke-width","2.5",1,"h-8","w-8","transition-transform","duration-300"],["stroke-linecap","round","stroke-linejoin","round","d","M12 6v6m0 0v6m0-6h6m-6 0H6"],["class","flex flex-col items-center gap-4",4,"ngIf"],[3,"value"],["type","button",1,"px-3","py-1.5","text-xs","font-semibold","rounded-full","transition-colors","duration-200","ease-in-out","focus:outline-none","focus:ring-2","focus:ring-offset-2","dark:focus:ring-offset-gray-800",3,"click","ngClass"],[1,"text-sm","text-gray-600","dark:text-gray-400"],[1,"text-gray-800","dark:text-gray-200"],["class","grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 mt-4",4,"ngIf","ngIfElse"],[1,"grid","grid-cols-1","md:grid-cols-2","lg:grid-cols-3","gap-4","mt-4"],["class","bg-white dark:bg-gray-700 rounded-md shadow-md hover:shadow-lg transition-shadow duration-200 relative group transform hover:-translate-y-1 cursor-pointer",3,"zIndex","click",4,"ngFor","ngForOf"],[1,"bg-white","dark:bg-gray-700","rounded-md","shadow-md","hover:shadow-lg","transition-shadow","duration-200","relative","group","transform","hover:-translate-y-1","cursor-pointer",3,"click"],[1,"p-3"],[1,"flex","justify-between","items-start","mb-1.5"],[1,"text-lg","font-semibold","text-primary","dark:text-primary-light","pr-8",3,"title"],["class","text-gray-600 dark:text-gray-400 mb-2 line-clamp-2 text-sm sm:text-xs",3,"innerHTML","title",4,"ngIf"],[1,"flex","justify-between","text-sm","sm:text-xs","text-gray-500","dark:text-gray-300","mb-2","space-x-2"],["class","flex items-center gap-1",4,"ngIf"],["class","flex items-center text-sm sm:text-xs text-gray-500 dark:text-gray-300 mb-2 flex gap-1",4,"ngIf"],["class","text-sm sm:text-xs text-gray-500 dark:text-gray-300 flex gap-1",4,"ngIf"],["class","text-xs text-gray-500 dark:text-gray-300 flex gap-1",4,"ngIf"],["class","text-sm sm:text-xs text-gray-500 dark:text-gray-300 italic flex gap-1",4,"ngIf"],[1,"flex","my-2","text-sm","sm:text-xs","text-gray-500","dark:text-gray-300"],["appPress","","class","favourite-span",3,"title","click","shortPress","longPress",4,"ngIf"],["appPress","","class","favourite-span",3,"title","shortPress","longPress",4,"ngIf"],[1,"absolute","top-2","right-2"],[1,"relative"],[1,"p-1.5","text-gray-500","dark:text-gray-400","hover:bg-gray-200","dark:hover:bg-gray-700","rounded-full","focus:outline-none",3,"click"],["xmlns","http://www.w3.org/2000/svg","fill","none","viewBox","0 0 24 24","stroke","currentColor","stroke-width","2",1,"h-5","w-5"],["stroke-linecap","round","stroke-linejoin","round","d","M12 5v.01M12 12v.01M12 19v.01M12 6a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2z"],["displayMode","dropdown",3,"items","isVisible","itemClick","closeMenu",4,"ngIf"],["displayMode","compact-bar",3,"items","isVisible","itemClick","closeMenu",4,"ngIf"],[1,"text-gray-600","dark:text-gray-400","mb-2","line-clamp-2","text-sm","sm:text-xs",3,"innerHTML","title"],[1,"flex","items-center","gap-1"],["fill","currentColor","version","1.1","id","Layer_1","xmlns","http://www.w3.org/2000/svg",0,"xmlns","xlink","http://www.w3.org/1999/xlink","viewBox","0 0 72 72",0,"xml","space","preserve",1,"w-6","h-6","transition-all"],["d","M21.929,10.583h3c0.553,0,1-0.447,1-1s-0.447-1-1-1h-3c-0.553,0-1,0.447-1,1S21.376,10.583,21.929,10.583z"],["d","M29.929,10.583h8c0.553,0,1-0.447,1-1s-0.447-1-1-1h-8c-0.553,0-1,0.447-1,1S29.376,10.583,29.929,10.583z"],["d",`M41.074,43.893l-2.971-0.443l-1.287-2.796C36.49,39.944,35.78,39.49,35,39.49s-1.49,0.454-1.816,1.163l-1.288,2.796
		l-2.97,0.443c-0.746,0.112-1.366,0.635-1.604,1.352c-0.236,0.717-0.049,1.506,0.484,2.04l2.165,2.168l-0.708,3.16
		c-0.175,0.78,0.133,1.591,0.782,2.059c0.348,0.251,0.759,0.378,1.17,0.378c0.355,0,0.712-0.095,1.03-0.285l2.769-1.664l2.964,1.688
		c0.308,0.176,0.649,0.262,0.989,0.262c0.435,0,0.867-0.142,1.226-0.42c0.639-0.495,0.917-1.326,0.704-2.105l-0.844-3.097
		l2.14-2.143c0.533-0.534,0.721-1.323,0.484-2.04C42.44,44.527,41.82,44.005,41.074,43.893z M38.202,48.451
		c-0.216,0.216-0.313,0.52-0.264,0.818l1.029,3.779l-3.496-1.99c-0.146-0.078-0.309-0.117-0.472-0.117s-0.325,0.039-0.472,0.117
		l-3.313,1.99l0.846-3.779c0.05-0.299-0.048-0.603-0.264-0.818l-2.576-2.58l3.515-0.525c0.321-0.049,0.598-0.25,0.735-0.537
		L35,41.49l1.528,3.318c0.138,0.287,0.414,0.488,0.735,0.537l3.515,0.525L38.202,48.451z`],["d",`M47.874,32.213l3.275-3.227c0.389-0.377,0.434-0.895,0.434-1.436v-9.054c3-1.049,5.453-4.214,5.453-7.757
		c0-4.411-3.608-8.157-7.999-8.157H20.962c-4.391,0-7.926,3.746-7.926,8.157c0,3.552,2.547,6.725,5.547,7.766v9.045
		c0,0.541,0.392,1.059,0.78,1.436l3.142,2.914c-4.463,3.64-7.329,9.176-7.329,15.369c0,10.936,8.893,19.833,19.829,19.833
		c10.936,0,19.831-8.897,19.831-19.833C54.835,41.247,52.125,35.854,47.874,32.213z M40.583,28.231v-9.648h7v8.122l-3.041,3.145
		C43.299,29.17,41.583,28.634,40.583,28.231z M38.583,18.583v9.184c-1-0.205-2.312-0.33-3.512-0.33
		c-1.192,0-2.488,0.124-3.488,0.326v-9.18H38.583z M17,10.583c0-2.209,1.774-4,3.962-4h27.55l0.316-0.025
		c2.189,0,4.067,1.999,4.067,4.208c0,2.208-1.669,3.817-3.858,3.817H20.962C18.774,14.583,17,12.791,17,10.583z M22.583,26.705
		v-8.122h7v9.643c-1,0.374-2.536,0.871-3.708,1.488L22.583,26.705z M35,63.103c-8.745,0-15.833-7.087-15.833-15.833
		S26.255,31.437,35,31.437s15.833,7.087,15.833,15.833S43.745,63.103,35,63.103z`],["d",`M32.5,36.637c0.027,0,0.055-0.001,0.083-0.003c0.246-0.021,0.498-0.031,0.75-0.031c0.553,0,1-0.447,1-1s-0.447-1-1-1
		c-0.307,0-0.613,0.013-0.914,0.037c-0.55,0.046-0.96,0.528-0.915,1.079C31.547,36.241,31.984,36.637,32.5,36.637z`],["d",`M29.584,37.419c0.502-0.23,0.723-0.824,0.492-1.326c-0.231-0.503-0.826-0.721-1.326-0.492
		c-3.898,1.789-6.417,5.715-6.417,10.003c0,0.553,0.447,1,1,1s1-0.447,1-1C24.333,42.095,26.395,38.883,29.584,37.419z`],[1,"font-medium"],[1,"bg-blue-100","text-blue-700","dark:bg-blue-700","dark:text-blue-200","px-1.5","py-0.5","rounded-full","mx-1","inline-block",3,"click"],[1,"flex","items-center","text-sm","sm:text-xs","text-gray-500","dark:text-gray-300","mb-2","flex","gap-1"],["version","1.1","id","Capa_1","xmlns","http://www.w3.org/2000/svg","stroke","currentColor","stroke-width","1.5",0,"xmlns","xlink","http://www.w3.org/1999/xlink","viewBox","-3 0 60 60",0,"xml","space","preserve",1,"w-6","h-6","transition-all",2,"enable-background","new 0 0 49.495 49.495"],["d",`M1.434,28.084c1.527,0.188,3.644,0.847,3.644,1.587c0,0.207,0.128,0.393,0.321,0.467c0.189,0.073,0.412,0.021,0.551-0.133
			c0.026-0.027,2.688-2.917,7.878-2.917c5.405,0,8.5,2.556,8.5,3.25c0,0.241,0.172,0.447,0.408,0.491
			c0.24,0.044,0.471-0.087,0.559-0.312c0.019-0.051,1.904-4.85,4.922-4.85c0.01,0,0.021,0,0.027,0
			c1.557,0.018,4.362,0.042,6.073,2.143c0.193,0.269,0.318,0.438,0.354,0.486c0.16,0.223,0.467,0.271,0.688,0.116
			s0.281-0.456,0.136-0.686c-0.118-0.184-0.243-0.354-0.372-0.518c-1.658-2.314-8.548-12.151-8.548-15.794
			c0-0.194-0.112-0.371-0.288-0.453c-0.175-0.083-0.382-0.056-0.531,0.068c-0.058,0.047-5.736,4.688-10.149,1.041
			c-0.052-0.056-1.274-1.379-0.466-2.437c0.094-0.123,0.124-0.282,0.085-0.432s-0.146-0.272-0.289-0.333
			c-0.008-0.003-0.812-0.354-1.062-1.093c-0.164-0.483-0.062-1.055,0.304-1.7c1.356-2.392,3.701-4.431,3.779-4.506
			c0.012-0.014,1.186-1.341,3.882,0.116c0.351,0.189,0.768,0.409,1.236,0.656c3.612,1.901,10.334,5.439,12.925,9.109
			c0.548,0.773,1.248,1.658,2.062,2.682c3.635,4.578,9.113,11.486,9.43,19.683c-0.25,0.541-1.715,3.412-5.574,5.773
			c-3.948,2.418-11.291,4.786-23.824,2.332c-0.13-0.025-0.272,0.002-0.385,0.082c-0.113,0.079-0.187,0.2-0.206,0.338
			c-0.006,0.039-0.591,3.967-2.71,6.318c-0.185,0.205-0.168,0.521,0.037,0.706c0.096,0.086,0.216,0.128,0.335,0.128
			c0.137,0,0.272-0.056,0.372-0.166c1.867-2.074,2.626-5.123,2.865-6.331c3.566,0.67,6.729,0.956,9.533,0.956
			c16.356-0.001,20.479-9.74,20.523-9.854c0.026-0.064,0.038-0.135,0.036-0.203c-0.276-8.578-5.917-15.683-9.646-20.385
			c-0.806-1.012-1.496-1.887-2.025-2.638c-2.729-3.866-9.592-7.477-13.278-9.417c-0.465-0.245-0.879-0.463-1.228-0.651
			c-3.397-1.837-5.051,0.036-5.063,0.062c-0.102,0.087-2.499,2.169-3.941,4.715c-0.515,0.908-0.643,1.758-0.378,2.525
			c0.237,0.689,0.741,1.144,1.126,1.405c-0.558,1.27,0.255,2.644,0.868,3.285c4.082,3.376,8.941,0.736,10.749-0.476
			c0.651,3.412,4.48,9.436,6.937,13.036c-1.628-0.668-3.354-0.686-4.443-0.695c-2.725-0.035-4.565,2.925-5.363,4.513
			c-1.268-1.495-4.704-3.096-8.974-3.096c-4.277,0-6.947,1.781-8.048,2.708c-0.904-1.229-3.599-1.627-4.225-1.704
			c-0.268-0.035-0.522,0.161-0.557,0.437C0.965,27.799,1.16,28.05,1.434,28.084z`],["d",`M30.738,39.531c1.036,0,2.114-0.15,3.146-0.551c1.934-0.75,3.356-2.25,4.239-4.457c0.104-0.256-0.021-0.547-0.276-0.65
			c-0.256-0.103-0.547,0.021-0.647,0.279c-0.771,1.938-2.013,3.248-3.671,3.895c-3.604,1.402-8.104-0.721-8.146-0.743
			c-0.25-0.119-0.549-0.015-0.668,0.233c-0.12,0.249-0.016,0.547,0.233,0.667C25.093,38.275,27.739,39.531,30.738,39.531z`],["class","text-center text-xs bg-purple-100 text-purple-700 dark:bg-purple-700 dark:text-purple-200 px-1.5 py-0.5 rounded-full mx-1 inline-block",3,"click",4,"ngFor","ngForOf"],[1,"text-center","text-xs","bg-purple-100","text-purple-700","dark:bg-purple-700","dark:text-purple-200","px-1.5","py-0.5","rounded-full","mx-1","inline-block",3,"click"],[1,"text-sm","sm:text-xs","text-gray-500","dark:text-gray-300","flex","gap-1"],["xmlns","http://www.w3.org/2000/svg","fill","none","viewBox","-5 0 32 32","stroke-width","1.5","stroke","currentColor",1,"w-6","h-6","transition-all"],["stroke-linecap","round","stroke-linejoin","round","d","M6.75 3v2.25M17.25 3v2.25M3 18.75V7.5a2.25 2.25 0 012.25-2.25h13.5A2.25 2.25 0 0121 7.5v11.25m-18 0A2.25 2.25 0 005.25 21h13.5A2.25 2.25 0 0021 18.75m-18 0v-7.5A2.25 2.25 0 015.25 9h13.5A2.25 2.25 0 0121 11.25v7.5m-9-3.75h.008v.008H12v-.008zM12 15h.008v.008H12V15zm0 2.25h.008v.008H12v-.008zM9.75 15h.008v.008H9.75V15zm0 2.25h.008v.008H9.75v-.008zM7.5 15h.008v.008H7.5V15zm0 2.25h.008v.008H7.5v-.008zm6.75-4.5h.008v.008h-.008v-.008zm0 2.25h.008v.008h-.008V15zm0 2.25h.008v.008h-.008v-.008zm2.25-4.5h.008v.008H16.5v-.008zm0 2.25h.008v.008H16.5V15z"],[1,"text-xs","text-gray-500","dark:text-gray-300","flex","gap-1"],["xmlns","http://www.w3.org/2000/svg","fill","none","viewBox","-5 0 32 32","stroke-width","1.5","stroke","currentColor",1,"w-6","h-6","transition-all","mb-1"],["stroke-linecap","round","stroke-linejoin","round","d","M12 6v6h4.5m4.5 0a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z"],[1,"text-sm","sm:text-xs","text-gray-500","dark:text-gray-300","italic","flex","gap-1"],["appPress","",1,"favourite-span",3,"click","shortPress","longPress","title"],[1,"text-2xs","bg-yellow-300","text-yellow-600","dark:bg-yellow-700","dark:text-yellow-200","text-2xs","text-white","px-1.5","py-0.5","rounded-full","mx-1","mb-1","inline-block","flex","gap-1"],["xmlns","http://www.w3.org/2000/svg","viewBox","0 0 20 20","fill","currentColor",1,"h-5","w-5"],["fill-rule","evenodd","d","M3.28 2.22a.75.75 0 00-1.06 1.06l14.5 14.5a.75.75 0 101.06-1.06l-1.745-1.745a10.029 10.029 0 003.3-4.38 1.651 1.651 0 000-1.185A10.004 10.004 0 009.999 3a9.956 9.956 0 00-4.744 1.194L3.28 2.22zM7.752 6.69l1.092 1.092a2.5 2.5 0 013.374 3.373l1.091 1.092a4 4 0 00-5.557-5.557z","clip-rule","evenodd"],["d","M10.748 13.93l2.523 2.523a9.987 9.987 0 01-3.27.547c-4.257 0-7.893-2.66-9.336-6.41a1.651 1.651 0 010-1.186A10.007 10.007 0 012.839 6.02L6.07 9.252a4 4 0 004.678 4.678z"],["appPress","",1,"favourite-span",3,"shortPress","longPress","title"],[1,"bg-primary","text-2xs","text-white","px-1.5","py-0.5","rounded-full","mx-1","mb-1","inline-block","flex","gap-1"],["xmlns","http://www.w3.org/2000/svg","viewBox","0 0 24 24","fill","none","stroke","currentColor","stroke-width","2","stroke-linecap","round","stroke-linejoin","round",1,"h-5","w-5"],["d","M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"],["displayMode","dropdown",3,"itemClick","closeMenu","items","isVisible"],["displayMode","compact-bar",3,"itemClick","closeMenu","items","isVisible"],[1,"text-center","py-12","px-6","bg-white","dark:bg-gray-700","rounded-md","shadow-md"],["xmlns","http://www.w3.org/2000/svg","fill","none","viewBox","0 0 24 24","stroke-width","1.5","stroke","currentColor",1,"w-16","h-16","mx-auto","text-gray-400","dark:text-gray-200","mb-4"],["stroke-linecap","round","stroke-linejoin","round","d","M3.75 12h16.5m-16.5 3.75h16.5M3.75 19.5h16.5M5.625 4.5h12.75a1.875 1.875 0 0 1 0 3.75H5.625a1.875 1.875 0 0 1 0-3.75Z"],[1,"text-xl","font-semibold","text-gray-700","dark:text-gray-300","mb-2"],[1,"text-gray-500","dark:text-gray-400","mb-6"],["class","bg-primary hover:bg-primary-dark text-white font-semibold py-2 px-6 rounded-md shadow-md hover:shadow-lg transition-all duration-300 focus:outline-none focus:ring-2 focus:ring-primary-light focus:ring-opacity-75",3,"click",4,"ngIf"],[1,"bg-primary","hover:bg-primary-dark","text-white","font-semibold","py-2","px-6","rounded-md","shadow-md","hover:shadow-lg","transition-all","duration-300","focus:outline-none","focus:ring-2","focus:ring-primary-light","focus:ring-opacity-75",3,"click"],[1,"text-center","py-10"],["xmlns","http://www.w3.org/2000/svg","fill","none","viewBox","0 0 24 24",1,"animate-spin","h-8","w-8","text-primary","dark:text-primary-light","mx-auto"],["cx","12","cy","12","r","10","stroke","currentColor","stroke-width","4",1,"opacity-25"],["fill","currentColor","d","M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z",1,"opacity-75"],[1,"text-lg","text-gray-600","dark:text-gray-400","mt-3"],["type","button",1,"bg-primary","dark:bg-primary-dark","text-white","rounded-full","p-3","shadow-lg","hover:bg-primary-dark","dark:hover:bg-primary-light","focus:outline-none","focus:ring-2","focus:ring-offset-2","focus:ring-primary-focus","dark:focus:ring-offset-gray-900","transition-opacity","animate-fade-in",3,"click"],["xmlns","http://www.w3.org/2000/svg","fill","none","viewBox","0 0 24 24","stroke-width","2.5","stroke","currentColor",1,"w-6","h-6"],["stroke-linecap","round","stroke-linejoin","round","d","M4.5 15.75l7.5-7.5 7.5 7.5"],[1,"flex","flex-col","items-center","gap-4"],[1,"group","relative","flex","items-center"],[1,"absolute","right-full","md:hidden","whitespace-nowrap","rounded-md","bg-blue-500","px-3","py-2","text-sm","font-semibold","text-white","group-hover:block",2,"margin-right","-10px"],["type","button",1,"flex","h-14","w-14","items-center","justify-center","rounded-full","bg-blue-500","text-white","shadow-lg","transition-transform","hover:scale-110","focus:outline-none","focus:ring-2","focus:ring-blue-400","focus:ring-offset-2","dark:ring-offset-gray-900",3,"click"],["xmlns","http://www.w3.org/2000/svg","viewBox","0 0 20 20","fill","currentColor",1,"h-7","w-7"],["d","M10.75 4.75a.75.75 0 0 0-1.5 0v4.5h-4.5a.75.75 0 0 0 0 1.5h4.5v4.5a.75.75 0 0 0 1.5 0v-4.5h4.5a.75.75 0 0 0 0-1.5h-4.5v-4.5Z"],[1,"absolute","right-full","md:hidden","whitespace-nowrap","rounded-md","bg-green-500","px-3","py-2","text-sm","font-semibold","text-white","group-hover:block",2,"margin-right","-10px"],["routerLink","/workout/play/-1","type","button",1,"flex","h-14","w-14","items-center","justify-center","rounded-full","bg-green-500","text-white","shadow-lg","transition-transform","hover:scale-110","focus:outline-none","focus:ring-2","focus:ring-green-400","focus:ring-offset-2","dark:ring-offset-gray-900"],["xmlns","http://www.w3.org/2000/svg","viewBox","0 0 20 20","fill","currentColor",1,"h-7","w-7","pl-0.5"],["d","M6.3 2.841A1.5 1.5 0 0 0 4 4.11V15.89a1.5 1.5 0 0 0 2.3 1.269l9.344-5.89a1.5 1.5 0 0 0 0-2.538L6.3 2.84z"]],template:function(e,o){if(e&1){let n=me();_(0,"div",2)(1,"header",3)(2,"h1",4),L(3,"My Routines"),I(),_(4,"button",5),oe("click",function(){return Q(n),Z(o.toggleFilterAccordion())}),_e(),_(5,"svg",6),le(6,"path",7),I(),He(),_(7,"span",8),L(8,"Toggle Filters"),I()()(),_(9,"div",9)(10,"div",10)(11,"h2",11),L(12,"Filter Routines"),I(),_(13,"div",12)(14,"div")(15,"label",13),L(16,"Search Name/Desc."),I(),_(17,"input",14),oe("input",function(s){return Q(n),Z(o.onRoutineSearchTermChange(s))}),I()(),_(18,"div")(19,"label",15),L(20,"Goal"),I(),_(21,"select",16),oe("change",function(s){return Q(n),Z(o.onRoutineGoalChange(s))}),_(22,"option",17),L(23,"Any Goal"),I(),ne(24,$O,3,4,"option",18),I()(),_(25,"div")(26,"label",19),L(27,"Targets Muscle"),I(),_(28,"select",20),oe("change",function(s){return Q(n),Z(o.onRoutineMuscleGroupChange(s))}),_(29,"option",17),L(30,"Any Muscle Group"),I(),ne(31,PO,3,4,"option",18),I()(),_(32,"div",21)(33,"label",22),L(34,"Equipment"),I(),_(35,"div",23),ne(36,AO,3,7,"button",24),I()(),_(37,"div",25)(38,"label",26),L(39," Max Duration: "),_(40,"strong",27),L(41),I()(),_(42,"input",28),oe("input",function(s){return Q(n),Z(o.onDurationFilterChange(s))}),I()(),_(43,"div",29)(44,"div",30)(45,"div")(46,"p",31),L(47,"Hidden routines"),I()(),_(48,"label",32)(49,"input",33),oe("change",function(){return Q(n),Z(o.showHiddenRoutines.set(!o.showHiddenRoutines()))}),I(),le(50,"div",34),_(51,"span",35),L(52),I()()(),_(53,"div",30)(54,"div")(55,"p",31),L(56,"Favourite routines"),I()(),_(57,"label",36)(58,"input",37),oe("change",function(){return Q(n),Z(o.showFavouriteRoutinesOnly.set(!o.showFavouriteRoutinesOnly()))}),I(),le(59,"div",34),_(60,"span",35),L(61),I()()()()(),_(62,"div",38)(63,"button",39),oe("click",function(){return Q(n),Z(o.clearRoutineFilters())}),_e(),_(64,"svg",40),le(65,"path",41),I(),L(66," CLEAR FILTERS "),I(),ne(67,DO,8,2,"div",42),I()()(),ne(68,YO,4,2,"div",43),qe(69,"async"),ne(70,QO,6,0,"ng-template",null,0,Mo),He(),_(72,"button",44),oe("click",function(){return Q(n),Z(o.startKB())}),le(73,"img",45),L(74," START TRACKING (VERY WIP) "),I(),_(75,"div",46),ne(76,ZO,5,0,"button",47),_(77,"div",48),oe("mouseenter",function(){return Q(n),Z(o.handleFabMouseEnter())})("mouseleave",function(){return Q(n),Z(o.handleFabMouseLeave())}),_(78,"button",49),oe("click",function(){return Q(n),Z(o.handleFabClick())}),_e(),_(79,"svg",50),le(80,"path",51),I(),He(),_(81,"span",8),L(82,"Open creation menu"),I()(),ne(83,JO,17,1,"div",52),I()()()}if(e&2){let n=Lo(71);N(5),bo("rotate-180",o.isFilterAccordionOpen()),N(4),up("max-height",o.isFilterAccordionOpen()?"1000px":"0px"),bo("mb-6",o.isFilterAccordionOpen()),N(8),F("value",o.routineSearchTerm()),N(4),F("value",o.selectedRoutineGoal()||""),N(3),F("ngForOf",o.uniqueRoutineGoals()),N(4),F("value",o.selectedRoutineMuscleGroup()||""),N(3),F("ngForOf",o.uniqueRoutineMuscleGroups()),N(5),F("ngForOf",o.uniqueRoutineEquipments()),N(5),xe("",o.selectedMaxDuration()," min"),N(),F("max",o.maxDuration())("value",o.selectedMaxDuration()),N(7),F("checked",o.showHiddenRoutines()),N(3),xe(" ",o.showHiddenRoutines()?"Hide":"Show"," Hidden Routines "),N(6),F("checked",o.showFavouriteRoutinesOnly()),N(3),xe(" ",o.showFavouriteRoutinesOnly()?"Normal":"Only"," Favourite Routines "),N(6),F("ngIf",o.allRoutinesForList().length>0),N(),F("ngIf",ft(69,27,o.routines$))("ngIfElse",n),N(5),F("src",o.getIconPath("kettlebell"),ds),N(3),F("ngIf",o.showBackToTopButton()),N(3),bo("rotate-45",o.isFabActionsOpen()),N(4),F("ngIf",o.isFabActionsOpen())}},dependencies:[_o,oi,rn,wo,Rd,Ca,ka,ii,qd,Fa],encapsulation:2,data:{animation:[Pd("fabSlideUp",[Ea(":enter",[si({opacity:0,transform:"translateY(200%)"}),Ta("250ms ease-out",si({opacity:1,transform:"translateY(0)"}))]),Ea(":leave",[Ta("200ms ease-in",si({opacity:0,transform:"translateY(100%)"}))])]),Pd("slideInOutActions",[cp("void",si({height:"0px",opacity:0,overflow:"hidden",paddingTop:"0",paddingBottom:"0",marginTop:"0",marginBottom:"0"})),cp("*",si({height:"*",opacity:1,overflow:"hidden",paddingTop:"0.5rem",paddingBottom:"0.5rem"})),Ea("void <=> *",Ta("200ms ease-in-out"))]),Pd("dropdownMenu",[cp("void",si({opacity:0,transform:"scale(0.75) translateY(-10px)",transformOrigin:"top right"})),cp("*",si({opacity:1,transform:"scale(1) translateY(0)",transformOrigin:"top right"})),Ea("void => *",[Ta("150ms cubic-bezier(0.25, 0.8, 0.25, 1)")]),Ea("* => void",[Ta("100ms cubic-bezier(0.25, 0.8, 0.25, 1)")])])]}})};var Oa=class r{decimalPipe=Ae(on);unitsService=Ae(ui);transform(t,e="1.0-2"){if(t==null)return null;let o=this.unitsService.convertFromKg(t,this.unitsService.currentUnit()),n=this.decimalPipe.transform(o,e),i=this.unitsService.getUnitLabel();return`${n} ${i}`}static \u0275fac=function(e){return new(e||r)};static \u0275pipe=Ed({name:"weightUnit",type:r,pure:!0})};var Qd=class r{constructor(t,e){this.renderer=t;this.el=e;this.mouseDownHandler=this.onMouseDown.bind(this),this.touchStartHandler=this.onTouchStart.bind(this),this.pressEndHandler=this.onPressEnd.bind(this)}longPressEnabled=!0;longPressDelay=300;longPressClass="is-long-pressing";longPress=new Ao;timer;isPressing=!1;mouseDownHandler;touchStartHandler;pressEndHandler;ngOnInit(){let t=this.el.nativeElement;t.addEventListener("mousedown",this.mouseDownHandler),t.addEventListener("mouseup",this.pressEndHandler),t.addEventListener("mouseleave",this.pressEndHandler),t.addEventListener("touchstart",this.touchStartHandler,{passive:!1}),t.addEventListener("touchend",this.pressEndHandler),t.addEventListener("touchcancel",this.pressEndHandler)}onMouseDown(t){this.longPressEnabled&&this.startTimer()}onTouchStart(t){this.longPressEnabled&&this.startTimer()}startTimer(){this.isPressing=!0,this.timer=setTimeout(()=>{this.isPressing&&(this.renderer.addClass(this.el.nativeElement,this.longPressClass),this.longPress.emit())},this.longPressDelay)}onPressEnd(){this.timer&&(clearTimeout(this.timer),this.timer=null),this.isPressing=!1,this.renderer.removeClass(this.el.nativeElement,this.longPressClass)}ngOnDestroy(){let t=this.el.nativeElement;t.removeEventListener("mousedown",this.mouseDownHandler),t.removeEventListener("mouseup",this.pressEndHandler),t.removeEventListener("mouseleave",this.pressEndHandler),t.removeEventListener("touchstart",this.touchStartHandler),t.removeEventListener("touchend",this.pressEndHandler),t.removeEventListener("touchcancel",this.pressEndHandler),this.onPressEnd()}static \u0275fac=function(e){return new(e||r)(ap(_S),ap(ei))};static \u0275dir=ti({type:r,selectors:[["","appLongPressDrag",""]],inputs:{longPressEnabled:"longPressEnabled",longPressDelay:"longPressDelay",longPressClass:"longPressClass"},outputs:{longPress:"longPress"}})};var Zd=class r{textAreaElement=Ae(ei).nativeElement;onInput(){this.adjustHeight()}ngOnInit(){setTimeout(()=>this.adjustHeight(),0)}adjustHeight(){this.textAreaElement.style.height="auto",this.textAreaElement.style.height=`${this.textAreaElement.scrollHeight}px`}static \u0275fac=function(e){return new(e||r)};static \u0275dir=ti({type:r,selectors:[["textarea","appAutoGrow",""]],hostBindings:function(e,o){e&1&&oe("input",function(){return o.onInput()})}})};var Jd=class r{elementRef=Ae(ei);clickOutside=new Ao;onDocumentClick(t){let e=t.target;e instanceof Node&&!this.elementRef.nativeElement.contains(e)&&this.clickOutside.emit(t)}static \u0275fac=function(e){return new(e||r)};static \u0275dir=ti({type:r,selectors:[["","appClickOutside",""]],hostBindings:function(e,o){e&1&&oe("click",function(i){return o.onDocumentClick(i)},ms)},outputs:{clickOutside:"clickOutside"}})};var eL=["setRepsInput"],tL=["expandedSetElement"],em=(r,t)=>({"border-red-500 dark:border-red-400":r,"border-gray-300 dark:border-gray-500":t}),rL=r=>({"superset-spacing":r}),oL=r=>({"absolute top-1 right-1 sm:static":r}),nL=(r,t)=>({"grid-cols-6":r,"grid-cols-5":t}),KS=()=>["warmup","dropset","failure","amrap","myorep","restpause"],iL=(r,t)=>({"bg-gray-50 dark:bg-gray-700/50 text-gray-800 dark:text-gray-200":r,"cursor-default":t}),sL=r=>({"bg-gray-100 dark:bg-gray-800/50":r});function aL(r,t){if(r&1&&(_(0,"div",19),L(1),I()),r&2){let e=O();N(),xe(" ",e.errorMessage(),`
`)}}function lL(r,t){if(r&1){let e=me();_(0,"app-action-menu",26),oe("itemClick",function(n){Q(e);let i=O(2);return Z(i.handleActionMenuItemClick(n))})("closeMenu",function(){Q(e);let n=O(2);return Z(n.onCloseActionMenu())}),I()}if(r&2){let e=O().ngIf,o=O();F("items",o.getRoutineDropdownActionItems(e.id,"dropdown"))("isVisible",o.areActionsVisible(e.id))}}function uL(r,t){if(r&1){let e=me();_(0,"div",20)(1,"div",21)(2,"button",22),oe("click",function(n){let i=Q(e).ngIf,s=O();return Z(s.toggleActions(i.id,n))}),_e(),_(3,"svg",23),le(4,"path",24),I()(),ne(5,lL,1,2,"app-action-menu",25),I()()}if(r&2){let e=t.ngIf,o=O();N(5),F("ngIf",o.areActionsVisible(e.id))}}function cL(r,t){if(r&1&&(_(0,"div")(1,"label",28),L(2),I()()),r&2){let e,o=O(2);N(2),Le((e=o.builderForm.get("name"))==null?null:e.value)}}function pL(r,t){r&1&&(_(0,"span"),L(1,"Routine name is required."),I())}function dL(r,t){if(r&1&&(_(0,"div",32),ne(1,pL,2,0,"span",13),I()),r&2){let e,o=O(3);N(),F("ngIf",(e=o.builderForm.get("name"))==null||e.errors==null?null:e.errors.required)}}function mL(r,t){if(r&1&&(_(0,"div")(1,"label",29),L(2,"Routine Name"),I(),le(3,"input",30),ne(4,dL,2,1,"div",31),I()),r&2){let e,o,n=O(2);N(3),F("ngClass",So(2,em,((e=n.builderForm.get("name"))==null?null:e.invalid)&&((e=n.builderForm.get("name"))==null?null:e.touched),!((e=n.builderForm.get("name"))!=null&&e.invalid&&((e=n.builderForm.get("name"))!=null&&e.touched)))),N(),F("ngIf",((o=n.builderForm.get("name"))==null?null:o.invalid)&&(((o=n.builderForm.get("name"))==null?null:o.dirty)||((o=n.builderForm.get("name"))==null?null:o.touched)))}}function fL(r,t){if(r&1&&(_(0,"div"),le(1,"p",33),I()),r&2){let e=O(2);N(),F("innerHTML",e.sanitizedDescription,Id)}}function hL(r,t){r&1&&(_(0,"div")(1,"label",34),L(2,"Description (Optional)"),I(),le(3,"textarea",35),I())}function gL(r,t){if(r&1&&(_(0,"div")(1,"label",36)(2,"span",37),L(3,"Goal: "),I(),L(4),I()()),r&2){let e,o=O(2);N(4),xe(" ",((e=o.builderForm.get("goal"))==null||e.value==null?null:e.value.toUpperCase())||"")}}function xL(r,t){if(r&1&&(_(0,"option",41),L(1),I()),r&2){let e=t.$implicit;F("value",e.value),N(),xe("",e.label," ")}}function yL(r,t){if(r&1&&(_(0,"div")(1,"select",38)(2,"option",39),L(3,"-- Set routine goal --"),I(),ne(4,xL,2,2,"option",40),I()()),r&2){let e=O(2);N(4),F("ngForOf",e.routineGoals)}}function vL(r,t){if(r&1&&(_(0,"div",42)(1,"span",37),L(2,"Est:"),I(),L(3),I()),r&2){let e=O(2);N(3),xe(" ~",e.getRoutineDuration()," min ")}}function bL(r,t){if(r&1&&(so(0),ne(1,cL,3,1,"div",13)(2,mL,5,5,"div",13)(3,fL,2,1,"div",13)(4,hL,4,0,"div",13)(5,gL,5,1,"div",13)(6,yL,5,1,"div",13),_(7,"div"),ne(8,vL,4,1,"div",27),I(),ao()),r&2){let e=O();N(),F("ngIf",e.isViewMode),N(),F("ngIf",e.isEditableMode()),N(),F("ngIf",e.isViewMode),N(),F("ngIf",e.isEditableMode()),N(),F("ngIf",e.isViewMode),N(),F("ngIf",e.isEditableMode()),N(2),F("ngIf",e.routine&&e.getRoutineDuration()>0)}}function SL(r,t){r&1&&(_(0,"span"),L(1,"Date is required."),I())}function wL(r,t){if(r&1&&(_(0,"div",32),ne(1,SL,2,0,"span",13),I()),r&2){let e,o=O(2);N(),F("ngIf",(e=o.builderForm.get("workoutDate"))==null||e.errors==null?null:e.errors.required)}}function _L(r,t){r&1&&(_(0,"span"),L(1,"Start time is required."),I())}function CL(r,t){if(r&1&&(_(0,"div",32),ne(1,_L,2,0,"span",13),I()),r&2){let e,o=O(2);N(),F("ngIf",(e=o.builderForm.get("startTime"))==null||e.errors==null?null:e.errors.required)}}function kL(r,t){r&1&&(_(0,"span"),L(1,"Min duration is 1."),I())}function IL(r,t){if(r&1&&(_(0,"div",32),ne(1,kL,2,0,"span",13),I()),r&2){let e,o=O(2);N(),F("ngIf",(e=o.builderForm.get("durationMinutes"))==null||e.errors==null?null:e.errors.min)}}function TL(r,t){if(r&1&&(_(0,"option",41),L(1),I()),r&2){let e=t.$implicit;F("value",e.id),N(),Le(e.name)}}function EL(r,t){if(r&1&&(_(0,"option",41),L(1),I()),r&2){let e=t.$implicit;F("value",e.id),N(),Le(e.name)}}function NL(r,t){if(r&1&&(so(0),_(1,"div",43)(2,"div")(3,"label",44),L(4,"Workout Date"),I(),le(5,"input",45),ne(6,wL,2,1,"div",31),I(),_(7,"div")(8,"label",46),L(9,"Start Time"),I(),le(10,"input",47),ne(11,CL,2,1,"div",31),I(),_(12,"div")(13,"label",48),L(14,"Duration (min)"),I(),le(15,"input",49),ne(16,IL,2,1,"div",31),I()(),_(17,"div")(18,"label",50),L(19,"Workout Title (Optional)"),I(),le(20,"input",51),I(),_(21,"div")(22,"label",52),L(23,"Based on Routine (Optional)"),I(),_(24,"select",53)(25,"option",39),L(26,"-- Log Ad-hoc Routine --"),I(),ne(27,TL,2,2,"option",40),I()(),_(28,"div")(29,"label",54),L(30,"Based on Program (Optional)"),I(),_(31,"select",55)(32,"option",39),L(33,"-- Log Ad-hoc Program --"),I(),ne(34,EL,2,2,"option",40),I()(),_(35,"div")(36,"label",56),L(37,"Overall Notes (Optional)"),I(),le(38,"textarea",57),I(),ao()),r&2){let e,o,n,i,s,a,l=O();N(5),F("ngClass",So(8,em,((e=l.builderForm.get("workoutDate"))==null?null:e.invalid)&&((e=l.builderForm.get("workoutDate"))==null?null:e.touched),!((e=l.builderForm.get("workoutDate"))!=null&&e.invalid&&((e=l.builderForm.get("workoutDate"))!=null&&e.touched)))),N(),F("ngIf",((o=l.builderForm.get("workoutDate"))==null?null:o.invalid)&&(((o=l.builderForm.get("workoutDate"))==null?null:o.dirty)||((o=l.builderForm.get("workoutDate"))==null?null:o.touched))),N(4),F("ngClass",So(11,em,((n=l.builderForm.get("startTime"))==null?null:n.invalid)&&((n=l.builderForm.get("startTime"))==null?null:n.touched),!((n=l.builderForm.get("startTime"))!=null&&n.invalid&&((n=l.builderForm.get("startTime"))!=null&&n.touched)))),N(),F("ngIf",((i=l.builderForm.get("startTime"))==null?null:i.invalid)&&(((i=l.builderForm.get("startTime"))==null?null:i.dirty)||((i=l.builderForm.get("startTime"))==null?null:i.touched))),N(4),F("ngClass",So(14,em,((s=l.builderForm.get("durationMinutes"))==null?null:s.invalid)&&((s=l.builderForm.get("durationMinutes"))==null?null:s.touched),!((s=l.builderForm.get("durationMinutes"))!=null&&s.invalid&&((s=l.builderForm.get("durationMinutes"))!=null&&s.touched)))),N(),F("ngIf",((a=l.builderForm.get("durationMinutes"))==null?null:a.invalid)&&(((a=l.builderForm.get("durationMinutes"))==null?null:a.dirty)||((a=l.builderForm.get("durationMinutes"))==null?null:a.touched))),N(11),F("ngForOf",l.availableRoutines),N(7),F("ngForOf",l.availablePrograms)}}function RL(r,t){if(r&1){let e=me();_(0,"button",66),oe("click",function(){Q(e);let n=O(2);return Z(n.openExerciseSelectionModal())}),L(1," + ADD EXERCISE "),I()}}function $L(r,t){if(r&1){let e=me();_(0,"button",81),oe("click",function(){Q(e);let n=O(5);return Z(n.groupSelectedAsSuperset())}),L(1),I()}if(r&2){let e=O(5);F("disabled",e.isViewMode),N(),xe(" Group Superset (",e.selectedExerciseIndicesForSuperset().length,") ")}}function PL(r,t){if(r&1){let e=me();_(0,"button",82),oe("click",function(){Q(e);let n=O(2).index,i=O(3);return Z(i.ungroupSuperset(n))}),L(1),I()}if(r&2){let e=O(5);F("disabled",e.isViewMode),N(),xe(" Ungroup Superset (",e.selectedExerciseIndicesForSuperset().length,") ")}}function AL(r,t){if(r&1&&(_(0,"div",78),ne(1,$L,2,2,"button",79)(2,PL,2,2,"button",80),I()),r&2){let e=O(4);N(),F("ngIf",!e.canUngroupSelectedExercises()),N(),F("ngIf",e.canUngroupSelectedExercises())}}function DL(r,t){if(r&1&&(_(0,"div",83),_e(),_(1,"svg",84),le(2,"path",85),I()()),r&2){let e=O(4);F("ngClass",ri(1,oL,e.isCompactView))}}function FL(r,t){if(r&1){let e=me();_(0,"input",86),oe("change",function(n){Q(e);let i=O().index,s=O(3);return Z(s.toggleExerciseSelectionForSuperset(i,n))}),I()}if(r&2){let e=O().index,o=O(3);F("id","superset-select-"+e)("checked",o.selectedExerciseIndicesForSuperset().includes(e))("disabled",o.isViewMode)}}function OL(r,t){if(r&1&&(_(0,"div",90),L(1),I()),r&2){let e,o=O(2).$implicit;N(),Ft(" ",((e=o.get("rounds"))==null?null:e.value)||1," ",(((e=o.get("rounds"))==null?null:e.value)||1)===1?"round":"rounds"," ")}}function LL(r,t){if(r&1){let e=me();_e(),_(0,"svg",98),oe("click",function(){Q(e);let n=O(3).$implicit,i=O(3);return Z(i.openModal(n.value))}),_(1,"title"),L(2,"Exercise details and progression"),I(),le(3,"circle",99)(4,"circle",100)(5,"rect",101),I()}}function ML(r,t){if(r&1&&(_(0,"p"),L(1),I()),r&2){let e=O(3).$implicit,o=O(3);N(),xe(" Duration (s): ",o.getSetDurationPerformed(e)," ")}}function BL(r,t){if(r&1&&(_(0,"p"),L(1),I()),r&2){let e,o=O(3).$implicit,n=O(3);N(),Ft(" Sets: ",o==null||(e=o.get("sets"))==null?null:e.value.length," ",n.getSetReps(o)!="0"?"( Reps: "+n.getSetReps(o)+" )":""," ")}}function VL(r,t){if(r&1&&(_(0,"p"),L(1),I()),r&2){let e=O(3).$implicit,o=O(3);N(),Ft(" Weight (",o.unitService.getUnitLabel(),"): ",o.getSetWeightsUsed(e)," ")}}function WL(r,t){if(r&1&&(_(0,"div",91),le(1,"img",92),qe(2,"async"),_(3,"div",93)(4,"div",94)(5,"h3",95),L(6),I(),ne(7,LL,6,0,"svg",96),I(),_(8,"div",97),ne(9,ML,2,1,"p",13)(10,BL,2,2,"p",13)(11,VL,2,2,"p",13),I()()()),r&2){let e,o,n,i,s,a,l,u=O(2).$implicit,c=O(3);N(),F("src",ft(2,7,c.getIconPath((e=u.get("exerciseId"))==null?null:e.value)),ds),N(4),F("title",(o=u.get("exerciseName"))==null?null:o.value),N(),xe(" ",(n=u.get("exerciseName"))==null?null:n.value," "),N(),F("ngIf",(i=u.get("exerciseId"))==null?null:i.value),N(2),F("ngIf",(u==null||(s=u.get("sets"))==null?null:s.value)&&(u==null||(s=u.get("sets"))==null?null:s.value.length)>=1&&c.checkIfTimedExercise(u)),N(),F("ngIf",(u==null||(a=u.get("sets"))==null?null:a.value)&&(u==null||(a=u.get("sets"))==null?null:a.value.length)>=1),N(),F("ngIf",(u==null||(l=u.get("sets"))==null?null:l.value)&&(u==null||(l=u.get("sets"))==null?null:l.value.length)>1&&c.checkIfWeightedExercise(u))}}function zL(r,t){if(r&1&&(_(0,"div",87),ne(1,OL,2,2,"div",88)(2,WL,12,9,"div",89),I()),r&2){let e,o=O(),n=o.$implicit,i=o.index,s=O(3);N(),F("ngIf",((e=n.get("supersetId"))==null?null:e.value)&&s.getSetsFormArray(n).controls.length>0&&((e=n.get("supersetOrder"))==null?null:e.value)===0),N(),F("ngIf",!s.shouldShowExpandedExercise(i)&&s.getSetsFormArray(n).controls.length>0)}}function UL(r,t){if(r&1){let e=me();_(0,"div",102)(1,"button",103),oe("click",function(n){Q(e);let i=O().index;return O(3).removeExercise(i),Z(n.stopPropagation())}),_e(),_(2,"svg",104),le(3,"rect",105)(4,"path",106),I()()()}}function GL(r,t){if(r&1&&(_(0,"span",120),L(1),I()),r&2){let e,o=O(2).$implicit;N(),Ft(" Superset exercise (",(((e=o.get("supersetOrder"))==null?null:e.value)??0)+1," of ",(e=o.get("supersetSize"))==null?null:e.value,") ")}}function HL(r,t){if(r&1){let e=me();_e(),_(0,"svg",98),oe("click",function(){Q(e);let n=O(2).$implicit,i=O(3);return Z(i.openModal(n.value))}),_(1,"title"),L(2,"Exercise details and progression"),I(),le(3,"circle",99)(4,"circle",100)(5,"rect",101),I()}}function KL(r,t){if(r&1){let e=me();_(0,"div",72)(1,"label",121),L(2,"Rounds:"),I(),_(3,"input",122),oe("change",function(){let n;Q(e);let i=O(2),s=i.$implicit,a=i.index,l=O(3);return Z(l.syncSupersetRounds((n=s.get("supersetId"))==null?null:n.value,(n=s.get("rounds"))==null?null:n.value,a))}),I()()}if(r&2){let e,o=O(2),n=o.$implicit,i=o.index,s=O(3);N(),F("for","rounds-"+i),N(2),F("id","rounds-"+i)("readonly",((e=n.get("supersetId"))==null?null:e.value)&&(((e=n.get("supersetOrder"))==null?null:e.value)??0)>0||s.isViewMode)}}function qL(r,t){if(r&1){let e=me();_(0,"button",123),oe("click",function(){Q(e);let n=O(2).index,i=O(3);return Z(i.removeExercise(n))}),_e(),_(1,"svg",124),le(2,"rect",105)(3,"path",106),I(),L(4," Remove "),I()}}function jL(r,t){if(r&1){let e=me();_(0,"button",125),oe("click",function(){Q(e);let n=O(2).index,i=O(3);return Z(i.ungroupSuperset(n))}),_e(),_(1,"svg",126),le(2,"path",127),I(),L(3," Ungroup "),I()}if(r&2){let e=O(5);F("disabled",e.isViewMode)}}function XL(r,t){if(r&1&&(_(0,"div")(1,"label",128),L(2),I(),le(3,"textarea",129),I()),r&2){let e=O(2).index,o=O(3);N(),F("for","exerciseNotes-"+e),N(),xe(" ",o.mode==="routineBuilder"?"Exercise Notes (Optional)":"Notes for this Logged Exercise (Optional)"," "),N(),F("id","exerciseNotes-"+e)("readonly",o.isViewMode)}}function YL(r,t){r&1&&(_(0,"div",131),L(1," Weight "),I())}function QL(r,t){if(r&1&&(_(0,"div")(1,"strong"),L(2),I()()),r&2){let e=O().$implicit,o=O(6);N(2),xe(" ",e.weight!=null?e.weight+" "+o.unitService.getUnitLabel():"\u2014"," ")}}function ZL(r,t){if(r&1){let e=me();_e(),_(0,"svg",137),oe("click",function(){Q(e);let n=O().$implicit,i=O(6);return Z(i.showNotesModal(n.notes))}),le(1,"path",138),I()}}function JL(r,t){r&1&&(_(0,"span",139),L(1,"-"),I())}function eM(r,t){r&1&&le(0,"div",140)}function tM(r,t){if(r&1&&(so(0),_(1,"div",37),L(2),I(),_(3,"div")(4,"strong"),L(5),I()(),ne(6,QL,3,1,"div",13),qe(7,"isWeighted"),_(8,"div")(9,"strong"),L(10),I()(),_(11,"div")(12,"strong"),L(13),I()(),_(14,"div",133),ne(15,ZL,2,0,"svg",134)(16,JL,2,0,"span",135),I(),ne(17,eM,1,0,"div",136),ao()),r&2){let e=t.$implicit,o=t.index,n=t.last,i=O(3).$implicit;N(2),Le(o+1),N(3),xe(" ",e.reps||"\u2014"," "),N(),F("ngIf",ft(7,8,i.getRawValue())),N(4),xe(" ",e.duration||"\u2014"," "),N(3),xe(" ",e.restAfterSet||"\u2014"," "),N(2),F("ngIf",e.notes),N(),F("ngIf",!e.notes),N(),F("ngIf",!n)}}function rM(r,t){if(r&1&&(_(0,"div",130),qe(1,"isWeighted"),qe(2,"isWeighted"),_(3,"div",131),L(4,"Set"),I(),_(5,"div",131),L(6,"Reps"),I(),ne(7,YL,2,0,"div",132),qe(8,"isWeighted"),_(9,"div",131),L(10,"Time"),I(),_(11,"div",131),L(12,"Rest"),I(),_(13,"div",131),L(14,"Notes "),I(),ne(15,tM,18,10,"ng-container",68),I()),r&2){let e,o=O(2).$implicit;F("ngClass",So(9,nL,ft(1,3,o.getRawValue()),!ft(2,5,o.getRawValue()))),N(7),F("ngIf",ft(8,7,o.getRawValue())),N(8),F("ngForOf",(e=o.get("sets"))==null?null:e.value)}}function oM(r,t){if(r&1){let e=me();_(0,"button",148),oe("click",function(n){Q(e);let i=O(3),s=i.$implicit,a=i.index;return O(3).addSet(s,a),Z(n.stopPropagation())}),L(1," + Add Set "),I()}}function nM(r,t){if(r&1&&(_(0,"div",149)(1,"div",150),L(2,"#"),I(),_(3,"div",151),L(4,"Type"),I(),_(5,"div",152),L(6),I(),_(7,"div",151),L(8),I(),_(9,"div",150),L(10),I(),_(11,"div",152),L(12),I(),_(13,"div",150),L(14),I(),le(15,"div",153),I()),r&2){let e=O(6);N(6),Le(e.mode==="manualLogEntry"?"Reps Ach.":"Reps"),N(2),Ft("",e.mode==="manualLogEntry"?"Wt Used":"Weight"," (",e.unitService.getUnitLabel(),")"),N(2),Le(e.mode==="manualLogEntry"?"Time Perf.":"Time"),N(2),Le(e.mode==="routineBuilder"?"Rest":"Notes"),N(2),Le(e.mode==="routineBuilder"?"Tempo":"")}}function iM(r,t){if(r&1&&(so(0),L(1),ao()),r&2){let e,o=O(2).$implicit;N(),xe("",(e=o.get("restAfterSet"))==null?null:e.value,"s")}}function sM(r,t){if(r&1&&(so(0),L(1),ao()),r&2){let e,o=O(2).$implicit;N(),Le(((e=o.get("notes"))==null?null:e.value)||"-")}}function aM(r,t){if(r&1&&(so(0),L(1),ao()),r&2){let e,o=O(2).$implicit;N(),Le(((e=o.get("tempo"))==null?null:e.value)||"-")}}function lM(r,t){if(r&1){let e=me();_(0,"div",166)(1,"button",167),oe("click",function(n){Q(e);let i=O(2).index,s=O(3),a=s.$implicit,l=s.index;return O(3).removeSet(a,l,i),Z(n.stopPropagation())}),_e(),_(2,"svg",104),le(3,"rect",105)(4,"path",106),I()()()}}function uM(r,t){r&1&&le(0,"div",153)}function cM(r,t){if(r&1){let e=me();_(0,"div",157),oe("click",function(n){Q(e);let i=O().index,s=O(3).index,a=O(3);return Z(a.toggleSetExpansion(s,i,n))}),_(1,"div",158),L(2),I(),_(3,"div",159),qe(4,"titlecase"),L(5),qe(6,"titlecase"),I(),_(7,"div",160),L(8),I(),_(9,"div",160),L(10),qe(11,"weightUnit"),I(),_(12,"div",161),L(13),I(),_(14,"div",162),ne(15,iM,2,1,"ng-container",13)(16,sM,2,1,"ng-container",13),I(),_(17,"div",163),ne(18,aM,2,1,"ng-container",13),I(),ne(19,lM,5,0,"div",164)(20,uM,1,0,"div",165),I()}if(r&2){let e,o,n,i,s,a,l,u,c=O(),p=c.$implicit,d=c.index,m=O(6);F("ngClass",So(22,iL,!ny(21,KS).includes(((e=p.get("type"))==null?null:e.value)??"")&&!m.isViewMode,m.isViewMode)),N(2),Le(d+1),N(),F("title",ft(4,14,(o=p.get("type"))==null?null:o.value)),N(2),Le(ft(6,16,(n=p.get("type"))==null?null:n.value)||"Standard"),N(3),Le((i=p.get(m.mode==="manualLogEntry"?"repsAchieved":"reps"))==null?null:i.value??"-"),N(2),Le(lo(11,18,(s=p.get(m.mode==="manualLogEntry"?"weightUsed":"weight"))==null?null:s.value,"1.0-2")),N(3),Le((a=p.get(m.mode==="manualLogEntry"?"durationPerformed":"duration"))!=null&&a.value?((a=p.get(m.mode==="manualLogEntry"?"durationPerformed":"duration"))==null?null:a.value)+"s":"-"),N(),F("title",m.mode==="routineBuilder"?((l=p.get("restAfterSet"))==null?null:l.value)+"s":(l=p.get("notes"))==null?null:l.value),N(),F("ngIf",m.mode==="routineBuilder"),N(),F("ngIf",m.mode==="manualLogEntry"),N(),F("title",(u=p.get("tempo"))==null?null:u.value),N(),F("ngIf",m.mode==="routineBuilder"),N(),F("ngIf",!m.isViewMode),N(),F("ngIf",m.isViewMode)}}function pM(r,t){if(r&1&&(_(0,"option",41),L(1),I()),r&2){let e=t.$implicit;F("value",e.value),N(),Le(e.label)}}function dM(r,t){if(r&1&&(_(0,"div")(1,"label",171),L(2,"Tempo"),I(),le(3,"input",181),I()),r&2){let e=O(2).index,o=O(3).index,n=O(3);N(),F("for","tempo-exp-"+o+"-"+e),N(2),F("id","tempo-exp-"+o+"-"+e)("readonly",n.isViewMode)}}function mM(r,t){if(r&1&&(_(0,"div")(1,"label",171),L(2,"Rest (s)"),I(),le(3,"input",182),I()),r&2){let e=O(2).index,o=O(3).index,n=O(3);N(),F("for","rest-exp-"+o+"-"+e),N(2),F("id","rest-exp-"+o+"-"+e)("readonly",n.isViewMode)}}function fM(r,t){if(r&1&&(_(0,"div",183)(1,"label",171),L(2,"Set Notes"),I(),le(3,"input",184),I()),r&2){let e=O(2).index,o=O(3).index,n=O(3);N(),F("for","setNotes-exp-"+o+"-"+e),N(2),F("id","setNotes-exp-"+o+"-"+e)("readonly",n.isViewMode)}}function hM(r,t){if(r&1){let e=me();_(0,"div",168,0)(2,"div",169)(3,"div",170)(4,"label",171),L(5,"Set Type"),I(),_(6,"select",172),ne(7,pM,2,2,"option",40),I()(),_(8,"div")(9,"label",171),L(10),I(),le(11,"input",173),I(),_(12,"div")(13,"label",171),L(14),I(),le(15,"input",174),I(),_(16,"div")(17,"label",171),L(18),I(),le(19,"input",175),I(),ne(20,dM,4,3,"div",13)(21,mM,4,3,"div",13)(22,fM,4,3,"div",176),I(),_(23,"div",177)(24,"button",178),oe("click",function(n){Q(e);let i=O(7);return Z(i.collapseExpandedSet(!1,n))}),_e(),_(25,"svg",179),le(26,"path",180),I()()()()}if(r&2){let e,o,n,i=O(),s=i.$implicit,a=i.index,l=O(3).index,u=O(3);F("ngClass",ri(25,sL,!ny(24,KS).includes(((e=s.get("type"))==null?null:e.value)??""))),N(4),F("for","setType-exp-"+l+"-"+a),N(2),F("id","setType-exp-"+l+"-"+a)("disabled",u.isViewMode),N(),F("ngForOf",u.availableSetTypes),N(2),F("for","reps-exp-"+l+"-"+a),N(),xe("Reps ",u.mode==="manualLogEntry"?"(Achieved)":""),N(),F("id","reps-exp-"+l+"-"+a)("formControlName",u.mode==="manualLogEntry"?"repsAchieved":"reps")("readonly",u.isViewMode),N(2),F("for","weight-exp-"+l+"-"+a),N(),Ft("Weight (",u.unitService.getUnitLabel(),") ",u.mode==="manualLogEntry"?"(Used)":""),N(),F("id","weight-exp-"+l+"-"+a)("formControlName",u.mode==="manualLogEntry"?"weightUsed":"weight")("readonly",u.isViewMode),N(2),F("for","duration-exp-"+l+"-"+a),N(),xe("Time (s) ",u.mode==="manualLogEntry"?"(Performed)":""),N(),F("id","duration-exp-"+l+"-"+a)("formControlName",u.mode==="manualLogEntry"?"durationPerformed":"duration")("readonly",u.isViewMode),N(),F("ngIf",u.mode==="routineBuilder"&&(((o=s.get("tempo"))==null?null:o.value)||u.isEditableMode())),N(),F("ngIf",u.mode==="routineBuilder"),N(),F("ngIf",((n=s.get("notes"))==null?null:n.value)||u.isEditableMode())}}function gM(r,t){if(r&1&&(_(0,"div",154),ne(1,cM,21,25,"div",155)(2,hM,27,27,"div",156),I()),r&2){let e=t.index,o=O(3).index,n=O(3);F("formGroupName",e),N(),F("ngIf",!n.isSetExpanded(o,e)),N(),F("ngIf",n.isSetExpanded(o,e))}}function xM(r,t){if(r&1&&(_(0,"div",141)(1,"div",142)(2,"h4",143),L(3,"Sets:"),I(),ne(4,oM,2,0,"button",144),I(),_(5,"div",145),ne(6,nM,16,6,"div",146)(7,gM,3,3,"div",147),I()()),r&2){let e,o=O(2),n=o.$implicit,i=o.index,s=O(3);N(4),F("ngIf",!s.isViewMode),N(2),F("ngIf",s.getSetsFormArray(n).controls.length>0&&((e=s.expandedSetPath())==null?null:e.exerciseIndex)!==i),N(),F("ngForOf",s.getSetsFormArray(n).controls)}}function yM(r,t){if(r&1&&(_(0,"div",107)(1,"div",108)(2,"div",109),ne(3,GL,2,2,"span",110),_(4,"div",111),le(5,"img",112),qe(6,"async"),_(7,"h3",113),L(8),I(),ne(9,HL,6,0,"svg",96),I()(),_(10,"div",114),ne(11,KL,4,3,"div",115)(12,qL,5,0,"button",116)(13,jL,4,1,"button",117),I()(),ne(14,XL,4,4,"div",13)(15,rM,16,12,"div",118)(16,xM,8,3,"div",119),I()),r&2){let e,o,n,i,s,a,l,u=O().$implicit,c=O(3);N(3),F("ngIf",c.mode==="routineBuilder"&&((e=u.get("supersetId"))==null?null:e.value)),N(2),F("src",ft(6,10,c.getIconPath((o=u.get("exerciseId"))==null?null:o.value)),ds),N(3),xe(" ",((n=u.get("exerciseName"))==null?null:n.value)||"Select Exercise"," "),N(),F("ngIf",(i=u.get("exerciseId"))==null?null:i.value),N(2),F("ngIf",c.mode==="routineBuilder"&&((s=u.get("supersetId"))==null?null:s.value)&&((s=u.get("supersetOrder"))==null?null:s.value)===0),N(),F("ngIf",!c.isViewMode),N(),F("ngIf",c.mode==="routineBuilder"&&c.isEditableMode()&&((a=u.get("supersetId"))==null?null:a.value)),N(),F("ngIf",((l=c.builderForm.get("notes"))==null?null:l.value)||c.isEditableMode()),N(),F("ngIf",!c.isCompactView&&c.isViewMode),N(),F("ngIf",!c.isCompactView&&c.isEditableMode())}}function vM(r,t){if(r&1){let e=me();so(0),_(1,"div",69),oe("click",function(n){let i=Q(e).index,s=O(3);return Z(s.toggleSetExpansion(i,0,n))})("clickOutside",function(n){Q(e);let i=O(3);return Z(i.collapseExpandedSet(!1,n))}),ne(2,AL,3,2,"div",70),_(3,"div",71)(4,"div",72),ne(5,DL,3,3,"div",73)(6,FL,1,3,"input",74)(7,zL,3,2,"div",75)(8,UL,5,0,"div",76),I(),ne(9,yM,17,12,"div",77),I()(),ao()}if(r&2){let e=t.$implicit,o=t.index,n=O(3);N(),F("title","Drag to reorder")("ngClass",ri(15,rL,n.isSupersetSpacing(o))),N(),F("ngIf",n.mode==="routineBuilder"&&n.isEditableMode()&&n.selectedExerciseIndicesForSuperset().length>=2&&o===n.firstSelectedExerciseIndexForSuperset),N(),F("cdkDragDisabled",!n.isEditableMode()||n.isSetExpanded(o,0))("longPressEnabled",n.isEditableMode()&&!n.isSetExpanded(o,0))("longPressDelay",150)("cdkDragData",e)("formGroupName",o)("cdkDragStartDelay",110)("ngClass",n.getExerciseCardClasses(e,o)),N(2),F("ngIf",n.isEditableMode()),N(),F("ngIf",n.mode==="routineBuilder"&&(n.isEditableMode()||n.isNewMode)&&!n.isViewMode),N(),F("ngIf",!n.shouldShowExpandedExercise(o)),N(),F("ngIf",!n.shouldShowExpandedExercise(o)&&!n.isViewMode),N(),F("ngIf",n.shouldShowExpandedExercise(o))}}function bM(r,t){if(r&1){let e=me();_(0,"div",67),oe("cdkDropListDropped",function(n){Q(e);let i=O(2);return Z(i.onExerciseDrop(n))}),ne(1,vM,10,17,"ng-container",68),I()}if(r&2){let e=O(2);F("cdkDropListData",e.exercisesFormArray.controls)("cdkDropListDisabled",!e.isEditableMode),N(),F("ngForOf",e.exercisesFormArray.controls)}}function SM(r,t){if(r&1){let e=me();_(0,"div",185)(1,"p",186),L(2,"No exercises added yet."),I(),_(3,"button",187),oe("click",function(){Q(e);let n=O(2);return Z(n.openExerciseSelectionModal())}),L(4," + ADD FIRST EXERCISE "),I()()}}function wM(r,t){if(r&1){let e=me();_(0,"div",185)(1,"p",186),L(2,"Select a routine or ADD EXERCISEs manually to log."),I(),_(3,"button",187),oe("click",function(){Q(e);let n=O(2);return Z(n.openExerciseSelectionModal())}),L(4," + ADD FIRST EXERCISE TO LOG "),I()()}}function _M(r,t){r&1&&(_(0,"div",188),L(1," The selected routine has no exercises. Add them manually or edit the routine template. "),I())}function CM(r,t){if(r&1){let e=me();_(0,"div",189)(1,"button",190),oe("click",function(){Q(e);let n=O(2);return Z(n.openExerciseSelectionModal())}),_e(),_(2,"svg",191),le(3,"path",192),I(),L(4," ADD ANOTHER EXERCISE "),I()()}}function kM(r,t){if(r&1&&(_(0,"section",58)(1,"div",59)(2,"h2",60),L(3),I(),ne(4,RL,2,0,"button",61),I(),ne(5,bM,2,3,"div",62)(6,SM,5,0,"div",63)(7,wM,5,0,"div",63)(8,_M,2,0,"div",64)(9,CM,5,0,"div",65),I()),r&2){let e,o,n,i=O();N(3),Le(i.mode==="routineBuilder"?"Exercises":"Logged Exercises"),N(),F("ngIf",!i.isViewMode&&(!i.exercisesFormArray.controls||i.exercisesFormArray.controls.length>0)),N(),F("ngIf",i.exercisesFormArray.length>0),N(),F("ngIf",!i.isViewMode&&i.exercisesFormArray.length===0&&i.mode==="routineBuilder"&&((e=i.builderForm.get("goal"))==null?null:e.value)!=="rest"),N(),F("ngIf",i.mode==="manualLogEntry"&&i.exercisesFormArray.length===0&&!((o=i.builderForm.get("routineIdForLog"))!=null&&o.value)),N(),F("ngIf",i.mode==="manualLogEntry"&&i.exercisesFormArray.length===0&&((n=i.builderForm.get("routineIdForLog"))==null?null:n.value)),N(),F("ngIf",!i.isViewMode&&i.exercisesFormArray.length>0)}}function IM(r,t){r&1&&(_(0,"section",193)(1,"p",194),L(2,"This is a rest day routine. No exercises are needed."),I()())}function TM(r,t){if(r&1&&(_(0,"div",195)(1,"button",196),L(2," CANCEL "),I(),_(3,"button",197),L(4),I()()),r&2){let e,o=O();N(),F("routerLink",o.mode==="routineBuilder"?"/workout":"/history/list"),N(2),F("disabled",o.builderForm.invalid||o.exercisesFormArray.length===0&&!(o.mode==="routineBuilder"&&((e=o.builderForm.get("goal"))==null?null:e.value)==="rest")),N(),xe(" ",o.mode==="routineBuilder"?o.isNewMode?"CREATE ROUTINE":"SAVE CHANGES":o.isNewMode?"LOG WORKOUT":"SAVE LOG CHANGES"," ")}}function EM(r,t){if(r&1){let e=me();_(0,"li",215),oe("click",function(){let n=Q(e).$implicit,i=O(2);return Z(i.mode==="routineBuilder"?i.selectExercise(n):i.selectExerciseForLog(n))}),_(1,"div")(2,"span",216),L(3),I(),_(4,"span",217),L(5),qe(6,"titlecase"),qe(7,"titlecase"),I()(),_e(),_(8,"svg",218),le(9,"path",219),I()()}if(r&2){let e=t.$implicit;N(3),Le(e.name),N(2),Ft("",ft(6,3,e.category)," - ",ft(7,5,e.primaryMuscleGroup))}}function NM(r,t){r&1&&(_(0,"li",220),L(1,"No exercises match your search or library is empty."),I())}function RM(r,t){if(r&1){let e=me();_(0,"div",198),oe("click",function(){Q(e);let n=O();return Z(n.closeExerciseSelectionModal())}),_(1,"div",199),oe("click",function(n){return Q(e),Z(n.stopPropagation())}),_(2,"div",200)(3,"div",201)(4,"h3",202),L(5,"ADD EXERCISE"),I(),_(6,"button",203),oe("click",function(){Q(e);let n=O();return Z(n.closeExerciseSelectionModal())}),_e(),_(7,"svg",204),le(8,"path",205),I()()(),He(),_(9,"div",206)(10,"input",207),oe("ngModelChange",function(n){Q(e);let i=O();return Z(i.modalSearchTerm.set(n))}),I()(),_(11,"div",208)(12,"ul",141),ne(13,EM,10,7,"li",209)(14,NM,2,0,"li",210),I()(),_(15,"div",211)(16,"button",212),oe("click",function(){Q(e);let n=O();return Z(n.handleTrulyCustomExerciseEntry())}),L(17," Or, create a new custom exercise entry... "),I()()(),_(18,"div",213)(19,"button",214),oe("click",function(){Q(e);let n=O();return Z(n.closeExerciseSelectionModal())}),L(20,"CANCEL"),I()()()()}if(r&2){let e=O();N(10),F("ngModel",e.modalSearchTerm()),N(3),F("ngForOf",e.filteredAvailableExercises()),N(),F("ngIf",e.filteredAvailableExercises().length===0)}}function $M(r,t){if(r&1){let e=me();_(0,"app-modal",221),oe("isOpenChange",function(){Q(e);let n=O();return Z(n.notesModalsData.set(null))}),_(1,"div",222)(2,"textarea",223),L(3),I(),_(4,"button",224),oe("click",function(){Q(e);let n=O();return Z(n.notesModalsData.set(null))}),L(5," CLOSE "),I()()()}if(r&2){let e=t.ngIf;F("isOpen",!!e)("modalTitle","Notes"),N(2),F("disabled",!0),N(),Le(e)}}function PM(r,t){if(r&1){let e=me();_(0,"app-modal",221),In("isOpenChange",function(n){Q(e);let i=O();return kn(i.isSimpleModalOpen,n)||(i.isSimpleModalOpen=n),Z(n)}),le(1,"app-exercise-detail",225),I()}if(r&2){let e=O();Cn("isOpen",e.isSimpleModalOpen),F("modalTitle",e.exerciseDetailsName),N(),F("id",e.exerciseDetailsId)("isModal",!0)}}var Tn=class r{fb=Ae(zd);router=Ae(ni);route=Ae(Ia);workoutService=Ae(Da);trainingService=Ae(Hd);exerciseService=Ae(li);unitService=Ae(ui);spinnerService=Ae(Kd);alertService=Ae(Pa);toastService=Ae(Aa);trackingService=Ae(ai);cdr=Ae(_a);platformId=Ae(wa);setRepsInputs;expandedSetElements;isAllExpandedInViewMode=we(!1);routine=null;builderForm;mode="routineBuilder";isEditableMode=we(!1);isEditMode=!1;isNewMode=!0;isViewMode=!1;currentRoutineId=null;currentProgramId=null;dateParam=null;currentLogId=null;routeSub;initialRoutineIdForLogEdit=void 0;initialProgramIdForLogEdit=void 0;isCompactView=!0;subscriptions=new mS;expandedSetPath=we(null);expandedSetPaths=[];availableSetTypes=[{value:"standard",label:"Standard"},{value:"warmup",label:"Warm-up"},{value:"superset",label:"Superset"},{value:"amrap",label:"AMRAP"},{value:"dropset",label:"Dropset"},{value:"failure",label:"To Failure"},{value:"myorep",label:"Myo-rep"},{value:"restpause",label:"Rest-Pause"},{value:"custom",label:"Custom Type"}];routineGoals=[{value:"hypertrophy",label:"Hypertrophy"},{value:"strength",label:"Strength"},{value:"tabata",label:"Tabata"},{value:"muscular endurance",label:"Muscular endurance"},{value:"cardiovascular endurance",label:"Cardiovascular endurance"},{value:"fat loss / body composition",label:"Fat loss / body composition"},{value:"mobility & flexibility",label:"Mobility & flexibility"},{value:"power / explosiveness",label:"Power / explosiveness"},{value:"speed & agility",label:"Speed & agility"},{value:"balance & coordination",label:"Balance & coordination"},{value:"skill acquisition",label:"Skill acquisition"},{value:"rehabilitation / injury prevention",label:"Rehabilitation / injury prevention"},{value:"mental health / stress relief",label:"Mental health"},{value:"general health & longevity",label:"General health & longevity"},{value:"sport-specific performance",label:"Sport-specific performance"},{value:"maintenance",label:"Maintenance"},{value:"rest",label:"Rest"},{value:"custom",label:"Custom"}];isExerciseModalOpen=!1;availableExercises=[];availableRoutines=[];availablePrograms=[];modalSearchTerm=we("");filteredAvailableExercises=Nt(()=>{let t=this.modalSearchTerm().toLowerCase();return t?this.availableExercises.filter(e=>e.name.toLowerCase().includes(t)||e.category.toLowerCase().includes(t)||e.primaryMuscleGroup&&e.primaryMuscleGroup.toLowerCase().includes(t)):this.availableExercises});selectedExerciseIndicesForSuperset=we([]);sanitizer=Ae($d);sanitizedDescription="";constructor(){this.builderForm=this.fb.group({name:[""],description:[""],goal:["custom"],workoutDate:[""],startTime:[""],durationMinutes:[60,[ut.min(1)]],overallNotesLog:[""],routineIdForLog:[""],programIdForLog:[""],exercises:this.fb.array([])})}ngOnInit(){gr(this.platformId)&&window.scrollTo(0,0),this.loadAvailableExercises(),this.workoutService.routines$.pipe(hr(1)).subscribe(i=>this.availableRoutines=i),this.trainingService.programs$.pipe(hr(1)).subscribe(i=>this.availablePrograms=i),this.routeSub=this.route.data.pipe(Sa(i=>{this.mode=i.mode||"routineBuilder",this.isNewMode=i.isNew===!0,console.log(`Builder ngOnInit: Mode=${this.mode}, isNewMode=${this.isNewMode}`),this.currentRoutineId=this.route.snapshot.paramMap.get("routineId"),this.currentLogId=this.route.snapshot.paramMap.get("logId"),this.currentProgramId=this.route.snapshot.queryParamMap.get("programId");let s=this.route.snapshot.queryParamMap.get("date");if(this.dateParam=s?new Date(s):null,this.isViewMode=this.mode==="routineBuilder"&&!!this.currentRoutineId&&!this.isNewMode&&this.route.snapshot.routeConfig?.path?.includes("view")||!1,this.isEditMode=!this.isNewMode&&!this.isViewMode,this.isEditableMode.set(this.isEditMode||this.isNewMode),this.configureFormValidatorsAndFieldsForMode(),this.expandedSetPath.set(null),this.exercisesFormArray.clear({emitEvent:!1}),this.builderForm.reset(this.getDefaultFormValuesForMode(),{emitEvent:!1}),this.mode==="routineBuilder"){if(this.currentRoutineId&&(this.isEditMode||this.isViewMode))return this.workoutService.getRoutineById(this.currentRoutineId)}else if(this.mode==="manualLogEntry"){if(this.currentLogId&&this.isEditMode)return this.trackingService.getWorkoutLogById(this.currentLogId);if(this.currentRoutineId&&this.isNewMode)return this.workoutService.getRoutineById(this.currentRoutineId)}return tn(null)}),ps(i=>{i?this.mode==="routineBuilder"?(this.routine=i,this.patchFormWithRoutineData(i)):this.mode==="manualLogEntry"&&this.isEditMode&&this.currentLogId?this.patchFormWithLogData(i):this.mode==="manualLogEntry"&&this.isNewMode&&this.currentRoutineId&&this.prefillLogFormFromRoutine(i):!this.isNewMode&&(this.currentRoutineId||this.currentLogId)&&(this.toastService.error("Data not found.",0,"Error"),this.router.navigate([this.mode==="routineBuilder"?"/workout":"/history/list"])),this.isViewMode?(this.toggleFormState(!0),this.isAllExpandedInViewMode.set(!0),this.isCompactView=!1):this.toggleFormState(!1)})).subscribe(),this.subscriptions.add(this.routeSub),this.mode==="manualLogEntry"&&this.builderForm.get("routineIdForLog")?.valueChanges.subscribe(i=>{if(this.isEditMode&&i===this.initialRoutineIdForLogEdit&&!this.builderForm.get("routineIdForLog")?.dirty||this.isEditMode&&i===this.initialProgramIdForLogEdit&&!this.builderForm.get("programIdForLog")?.dirty)return;let s=this.availableRoutines.find(a=>a.id===i);s?this.prefillLogFormFromRoutine(s,!1):(this.exercisesFormArray.clear(),this.isEditMode||this.builderForm.get("name")?.setValue("Ad-hoc Workout"))});let t=this.builderForm.get("goal")?.valueChanges.subscribe(i=>{if(this.mode==="routineBuilder"&&i==="rest"){for(;this.exercisesFormArray.length;)this.exercisesFormArray.removeAt(0);this.exercisesFormArray.clearValidators()}this.exercisesFormArray.updateValueAndValidity()});this.subscriptions.add(t);let e=this.builderForm.get("description")?.valueChanges.subscribe(i=>{this.updateSanitizedDescription(i||"")});this.subscriptions.add(e);let o=this.builderForm.get("sets")?.valueChanges.subscribe(i=>{this.getRoutineDuration()});this.subscriptions.add(o);let n=this.builderForm.get("rounds")?.valueChanges.subscribe(i=>{this.getRoutineDuration()});this.subscriptions.add(n)}updateSanitizedDescription(t){this.sanitizedDescription=this.sanitizer.bypassSecurityTrustHtml(t)}getDefaultFormValuesForMode(){if(this.mode==="manualLogEntry"){let t=new Date;return{name:"",description:"",goal:"custom",workoutDate:xr(t,"yyyy-MM-dd"),startTime:xr(t,"HH:mm"),durationMinutes:60,overallNotesLog:"",routineIdForLog:"",programIdForLog:"",exercises:[]}}else return{name:"",description:"",goal:"",workoutDate:"",startTime:"",durationMinutes:60,overallNotesLog:"",routineIdForLog:"",programIdForLog:"",exercises:[]}}configureFormValidatorsAndFieldsForMode(){let t=this.builderForm.get("name"),e=this.builderForm.get("goal"),o=this.builderForm.get("workoutDate"),n=this.builderForm.get("startTime"),i=this.builderForm.get("durationMinutes");t?.clearValidators(),e?.clearValidators(),o?.clearValidators(),n?.clearValidators(),i?.clearValidators(),this.mode==="routineBuilder"?(t?.setValidators(ut.required),e?.setValidators(ut.required),this.builderForm.get("exercises")?.setValidators(ut.nullValidator)):(o?.setValidators(ut.required),n?.setValidators(ut.required),i?.setValidators([ut.required,ut.min(1)]),this.builderForm.get("exercises")?.setValidators(ut.required)),this.builderForm.updateValueAndValidity({emitEvent:!1})}toggleFormState(t){t?this.builderForm.disable({emitEvent:!1}):(this.builderForm.enable({emitEvent:!1}),this.mode==="routineBuilder"?(this.builderForm.get("workoutDate")?.disable({emitEvent:!1}),this.builderForm.get("startTime")?.disable({emitEvent:!1}),this.builderForm.get("durationMinutes")?.disable({emitEvent:!1}),this.builderForm.get("overallNotesLog")?.disable({emitEvent:!1}),this.builderForm.get("routineIdForLog")?.disable({emitEvent:!1}),this.builderForm.get("programIdForLog")?.disable({emitEvent:!1})):(this.builderForm.get("description")?.disable({emitEvent:!1}),this.builderForm.get("goal")?.disable({emitEvent:!1})),this.exercisesFormArray.controls.forEach(e=>{this.updateRoundsControlability(e)}))}get exercisesFormArray(){return this.builderForm.get("exercises")}getSetsFormArray(t){return t.get("sets")}addRepsListener(t){let e=this.setupRepsListener(t);this.subscriptions.add(e)}setupRepsListener(t){let e=this.getSetsFormArray(t),o=e.valueChanges.pipe(vS(300),SS(null),oy(n=>{let i=e.controls;return hS(i).pipe(oy((s,a)=>{let l=s.get("reps");return l?l.valueChanges.pipe(_n(u=>({reps:u,setIndex:a,exerciseId:t.get("id")?.value})),bS((u,c)=>u.reps===c.reps)):tn(null)}))}),kd(n=>n!==null)).subscribe(n=>{console.log(`Reps changed on Ex: ${n.exerciseId}, Set: ${n.setIndex} to ${n.reps}`),this.getRoutineDuration()});this.subscriptions.add(o)}loadAvailableExercises(){this.exerciseService.getExercises().pipe(hr(1)).subscribe(t=>this.availableExercises=t)}patchFormWithRoutineData(t){this.builderForm.patchValue({name:t.name,description:t.description,goal:t.goal},{emitEvent:!1}),this.updateSanitizedDescription(t.description||""),this.exercisesFormArray.clear({emitEvent:!1}),t.exercises.forEach(e=>{let o=this.createExerciseFormGroup(e,!0,!1);this.exercisesFormArray.push(o,{emitEvent:!1}),this.addRepsListener(o)}),this.builderForm.markAsPristine()}patchFormWithLogData(t){this.initialRoutineIdForLogEdit=t.routineId,this.initialProgramIdForLogEdit=t.programId,this.builderForm.patchValue({name:t.routineName||"Logged Workout",workoutDate:xr(sy(t.date),"yyyy-MM-dd"),startTime:xr(new Date(t.startTime),"HH:mm"),durationMinutes:t.durationMinutes||60,overallNotesLog:t.notes||"",routineIdForLog:t.routineId||"",programIdForLog:t.programId||""},{emitEvent:!1}),this.exercisesFormArray.clear({emitEvent:!1}),t.exercises.forEach(e=>{this.exercisesFormArray.push(this.createExerciseFormGroupFromLog(e),{emitEvent:!1})}),this.toggleFormState(!1),this.expandedSetPath.set(null),this.builderForm.markAsPristine()}prefillLogFormFromRoutine(t,e=!0){let o={name:`Log: ${t.name}`,routineIdForLog:t.id};if(e){let n=new Date,i=this.dateParam?this.dateParam:n;o.workoutDate=xr(i,"yyyy-MM-dd"),o.startTime=xr(i,"HH:mm"),o.durationMinutes=60}this.builderForm.patchValue(o,{emitEvent:!1}),this.exercisesFormArray.clear({emitEvent:!1}),t.exercises.forEach(n=>{this.exercisesFormArray.push(this.createExerciseFormGroup(n,!1,!0),{emitEvent:!1})}),this.builderForm.markAsDirty()}createExerciseFormGroup(t,e=!1,o=!1){let n=t?.exerciseId?this.availableExercises.find(a=>a.id===t.exerciseId):null,i=t?.sets||[],s=this.fb.group({id:[t?.id||this.workoutService.generateWorkoutExerciseId()],exerciseId:[t?.exerciseId||"",ut.required],exerciseName:[t?.exerciseName||n?.name||"Select Exercise"],notes:[t?.notes||""],sets:this.fb.array(i.map(a=>this.createSetFormGroup(a,o))),supersetId:[e?t?.supersetId:null],supersetOrder:[e?t?.supersetOrder:null],supersetSize:[e?t?.supersetSize:null],rounds:[e?t?.rounds??0:0,[ut.min(0)]]});return e?(s.get("supersetId")?.valueChanges.subscribe(()=>this.updateRoundsControlability(s)),s.get("supersetOrder")?.valueChanges.subscribe(()=>this.updateRoundsControlability(s)),this.updateRoundsControlability(s)):s.get("rounds")?.enable({emitEvent:!1}),s.get("exerciseId")?.valueChanges.subscribe(a=>{let l=this.availableExercises.find(u=>u.id===a);s.get("exerciseName")?.setValue(l?.name||"Unknown Exercise",{emitEvent:!1})}),s}createExerciseFormGroupFromLog(t){return this.fb.group({id:[t.id||Bt()],exerciseId:[t.exerciseId,ut.required],exerciseName:[t.exerciseName,ut.required],notes:[t.notes||""],sets:this.fb.array(t.sets.map(e=>this.createSetFormGroup(e,!0))),supersetId:[null],supersetOrder:[null],supersetSize:[null],rounds:[0]})}createSetFormGroup(t,e=!1){let o,n,i,s,a,l,u,c,p,d,m=Bt(),f,g=new Date().toISOString();if(t)if(m=t.id||m,"repsAchieved"in t){let y=t;o=y.repsAchieved,i=y.weightUsed,a=y.durationPerformed,u=y.notes,c=y.type||"standard",f=y.plannedSetId,g=y.timestamp,p=y.targetTempo||"",d=60}else{let y=t;o=y.reps,n=y.reps,i=y.weight,s=y.weight,a=y.duration,l=y.duration,u=y.notes,c=y.type||"standard",p=y.tempo,d=y.restAfterSet,f=y.id}else o=null,i=null,a=null,u="",c="standard",p="",d=60;let x={id:[m],type:[c,ut.required],notes:[u||""]};return e?(x.repsAchieved=[o??null,[ut.required,ut.min(0)]],x.weightUsed=[this.unitService.convertFromKg(i,this.unitService.currentUnit())??null,[ut.min(0)]],x.durationPerformed=[a??null,[ut.min(0)]],x.plannedSetId=[f],x.timestamp=[g]):(x.reps=[o??null,[ut.min(0)]],x.targetReps=[n??null,[ut.min(0)]],x.weight=[this.unitService.convertFromKg(i,this.unitService.currentUnit())??null,[ut.min(0)]],x.targetWeight=[this.unitService.convertFromKg(s,this.unitService.currentUnit())??null,[ut.min(0)]],x.duration=[a??null,[ut.min(0)]],x.targetDuration=[l??null,[ut.min(0)]],x.tempo=[p||""],x.restAfterSet=[d??60,[ut.required,ut.min(0)]]),this.fb.group(x)}openExerciseSelectionModal(){this.isViewMode||(this.modalSearchTerm.set(""),this.isExerciseModalOpen=!0)}closeExerciseSelectionModal(){this.isExerciseModalOpen=!1}onModalSearchTermChange(t){let e=t.target;this.modalSearchTerm.set(e.value)}selectExercise(t){let e=this.createExerciseFormGroup({id:this.workoutService.generateWorkoutExerciseId(),exerciseId:t.id,exerciseName:t.name,sets:[{id:this.workoutService.generateExerciseSetId(),type:"standard",reps:8,weight:0,restAfterSet:60,duration:void 0,tempo:"",notes:""}],supersetId:null,supersetOrder:null,supersetSize:null,rounds:0,type:"standard"},!0,!1);this.addRepsListener(e),this.exercisesFormArray.push(e),this.closeExerciseSelectionModal(),this.toggleSetExpansion(this.exercisesFormArray.length-1,0)}selectExerciseForLog(t){let e={id:this.workoutService.generateWorkoutExerciseId(),exerciseId:t.id,exerciseName:t.name,sets:[{id:this.workoutService.generateExerciseSetId(),type:"standard",reps:8,weight:0,restAfterSet:60,duration:void 0,tempo:"",notes:""}],type:"standard",supersetId:null,supersetOrder:null,supersetSize:null,rounds:0};this.exercisesFormArray.push(this.createExerciseFormGroup(e,!1,!0)),this.closeExerciseSelectionModal()}ngAfterViewInit(){this.expandedSetElements.changes.subscribe(t=>{let e=t.first;e&&this.expandedSetPath()&&setTimeout(()=>{e.nativeElement.scrollIntoView({behavior:"smooth",block:"center"})},100)})}addSet(t,e){if(this.isViewMode)return;if(t.get("supersetId")?.value){this.toastService.warning("Exercises in a superset can only have one set",4e3,"Action Blocked");return}let o=this.getSetsFormArray(t),n;if(o.length>0){let s=o.at(o.length-1).value,a=Ht({},s);if(delete a.id,this.mode==="manualLogEntry"){let l=t.get("exerciseId")?.value;n=this.createSetFormGroup({id:a.id??this.workoutService.generateExerciseSetId(),exerciseId:l,exerciseName:a.exerciseName,repsAchieved:a.repsAchieved,weightUsed:a.weightUsed,durationPerformed:a.durationPerformed,notes:a.notes,type:a.type,plannedSetId:a.plannedSetId,timestamp:new Date().toISOString(),targetReps:a.targetReps,targetWeight:a.targetWeight,targetDuration:a.targetDuration,targetTempo:a.targetTempo},!0)}else n=this.createSetFormGroup({id:a.id??this.workoutService.generateExerciseSetId(),reps:a.reps,weight:a.weight,duration:a.duration,notes:a.notes,type:a.type,tempo:a.tempo,restAfterSet:a.restAfterSet},!1)}else n=this.createSetFormGroup(void 0,this.mode==="manualLogEntry");o.push(n),this.cdr.detectChanges();let i=o.length-1;this.toggleSetExpansion(e,i)}removeSet(t,e,o,n){if(n?.stopPropagation(),this.isViewMode)return;this.getSetsFormArray(t).removeAt(o);let s=this.expandedSetPath();s&&s.exerciseIndex===e&&s.setIndex===o?this.expandedSetPath.set(null):s&&s.exerciseIndex===e&&s.setIndex>o&&this.expandedSetPath.set({exerciseIndex:e,setIndex:s.setIndex-1})}toggleSetExpansion(t,e,o){if(this.isAllExpandedInViewMode.set(!1),o?.stopPropagation(),o&&(o.target instanceof HTMLInputElement||o.target instanceof HTMLTextAreaElement||o.target instanceof HTMLSelectElement)||this.expandedSetPath()!==null&&this.expandedSetPath()?.exerciseIndex===t&&this.expandedSetPath()?.setIndex===e)return;if(this.isViewMode&&!(this.expandedSetPath()?.exerciseIndex===t&&this.expandedSetPath()?.setIndex===e)){this.expandedSetPath.set({exerciseIndex:t,setIndex:e}),this.isCompactView=!1;return}else if(this.isViewMode){this.expandedSetPath.set(null);return}let n=this.expandedSetPath();n?.exerciseIndex===t&&n?.setIndex===e||(this.expandedSetPath.set({exerciseIndex:t,setIndex:e}),this.isCompactView=!1,this.cdr.detectChanges(),setTimeout(()=>{let i=this.expandedSetElements.first?.nativeElement;if(i){let s=i.querySelector('input[type="text"], input[type="number"]');s&&s.focus()}},50))}isSetExpanded(t,e){let o=this.expandedSetPath();return o?.exerciseIndex===t&&o?.setIndex===e}collapseExpandedSet(t=!1,e){this.isAllExpandedInViewMode.set(!1),this.expandedSetPath.set(null),this.isCompactView=t,e?.stopPropagation()}getFormErrors(t){let e={};return Object.keys(t.controls).forEach(o=>{let n=t.get(o).errors;if(n&&(e[o]=n),t.get(o)instanceof $S||t.get(o)instanceof FS){let i=this.getFormErrors(t.get(o));Object.keys(i).length>0&&(e[o]=i)}}),e}get f(){return this.builderForm.controls}toggleExerciseSelectionForSuperset(t,e){if(this.isViewMode)return;let o=e.target;this.selectedExerciseIndicesForSuperset.update(n=>{let i;return o.checked?i=n.includes(t)?n:[...n,t]:i=n.filter(s=>s!==t),i.sort((s,a)=>s-a)}),this.isCompactView}canGroupSelectedExercises(){let t=this.selectedExerciseIndicesForSuperset();if(t.length<2)return!1;let e=this.exercisesFormArray.at(t[0]).get("supersetId")?.value;for(let o=1;o<t.length;o++){let n=t[o],i=this.exercisesFormArray.at(n).get("supersetId")?.value;if(e&&i&&e!==i||!e&&i)return!1}return!0}canUngroupSelectedExercises(){let t=this.selectedExerciseIndicesForSuperset();if(t.length===0)return!1;let e=Array.from(new Set(t.map(n=>this.exercisesFormArray.at(n).get("supersetId")?.value).filter(n=>!!n)));return Array.from(new Set(e)).length===1}onExerciseDrop(t){if(!this.isViewMode&&t.previousContainer===t.container){let e=this.exercisesFormArray;MS(e.controls,t.previousIndex,t.currentIndex),e.updateValueAndValidity(),this.selectedExerciseIndicesForSuperset.set([]),this.handleSupersetIntegrityAfterDrag(t.previousIndex,t.currentIndex),this.recalculateSupersetOrders(),this.expandedSetPath.set(null)}}handleSupersetIntegrityAfterDrag(t,e){let o=new Set;if(o.add(t),o.add(e),t<e)for(let i=t;i<=e;i++)o.add(i);else for(let i=e;i<=t;i++)o.add(i);let n=new Set;o.forEach(i=>{if(i<this.exercisesFormArray.length){let a=this.exercisesFormArray.at(i).get("supersetId")?.value;a&&n.add(a)}}),n.forEach(i=>{this.exercisesFormArray.controls.forEach(s=>{let a=s;a.get("supersetId")?.value===i&&a.patchValue({supersetId:null,supersetOrder:null,supersetSize:null})})}),this.recalculateSupersetOrders()}recalculateSupersetOrders(){let t=new Map;this.exercisesFormArray.controls.forEach(e=>{let o=e,n=o.get("supersetId")?.value;n?(t.has(n)||t.set(n,[]),t.get(n).push(o)):(o.patchValue({supersetOrder:null,supersetSize:null},{emitEvent:!1}),this.updateRoundsControlability(o))}),t.forEach((e,o)=>{e.length<2?e.forEach(n=>{n.patchValue({supersetId:null,supersetOrder:null,supersetSize:null}),this.updateRoundsControlability(n)}):(e.sort((n,i)=>this.exercisesFormArray.controls.indexOf(n)-this.exercisesFormArray.controls.indexOf(i)),e.forEach((n,i)=>{n.patchValue({supersetOrder:i,supersetSize:e.length},{emitEvent:!1}),this.updateRoundsControlability(n)}))}),this.exercisesFormArray.updateValueAndValidity({emitEvent:!1})}groupSelectedAsSuperset(){if(this.isViewMode)return;let t=this.selectedExerciseIndicesForSuperset().sort((i,s)=>i-s);if(t.length<2){this.toastService.warning("Select at least two exercises",3e3,"Superset Error");return}for(let i=1;i<t.length;i++)if(t[i]!==t[i-1]+1){this.toastService.warning("Selected exercises must be next to each other to form a superset",5e3,"Superset Error");return}let e=Bt(),o=t.length,n=1;t.forEach((i,s)=>{let a=this.exercisesFormArray.at(i);a.patchValue({supersetId:e,supersetOrder:s,supersetSize:o,rounds:n,type:"superset"}),this.updateRoundsControlability(a);let l=a.get("sets");for(;l.length>1;)l.removeAt(1);l.controls.forEach(u=>{s<o-1&&u.get("restAfterSet")?.setValue(0)})}),this.selectedExerciseIndicesForSuperset.set([]),this.toastService.success("Superset created! Each exercise is now limited to one set",4e3,"Success")}ungroupSuperset(t){if(this.isViewMode)return;let o=this.exercisesFormArray.at(t).get("supersetId")?.value;o&&(this.exercisesFormArray.controls.forEach(n=>{let i=n;i.get("supersetId")?.value===o&&(i.patchValue({supersetId:null,supersetOrder:null,supersetSize:null}),this.updateRoundsControlability(i))}),this.selectedExerciseIndicesForSuperset.set([]),this.toastService.info("Superset ungrouped",3e3,"Ungrouped"))}removeExercise(t){if(this.isViewMode)return;let o=this.exercisesFormArray.at(t).get("supersetId")?.value;this.exercisesFormArray.removeAt(t),this.selectedExerciseIndicesForSuperset.set([]),o&&this.recalculateSupersetOrders(),this.toastService.info("Exercise removed",2e3),this.expandedSetPath.set(null)}errorMessage=we(null);onSubmit(){return j(this,null,function*(){if(this.isViewMode){this.toastService.info("View mode. No changes",3e3,"View Mode");return}this.mode==="routineBuilder"&&this.recalculateSupersetOrders();let t=this.mode==="routineBuilder"&&this.builderForm.get("goal")?.value==="rest";if(this.mode==="routineBuilder"&&(this.builderForm.get("name")?.invalid||this.builderForm.get("goal")?.invalid)||this.mode==="manualLogEntry"&&(this.builderForm.get("workoutDate")?.invalid||this.builderForm.get("startTime")?.invalid||this.builderForm.get("durationMinutes")?.invalid)){this.builderForm.markAllAsTouched(),this.toastService.error("Please fill all required details.",0,"Validation Error");return}if(!t&&this.exercisesFormArray.length===0){this.toastService.error(this.mode==="manualLogEntry"?"Log must have exercises.":"Routine needs exercises.",0,"Validation Error");return}if(this.mode==="routineBuilder"&&!t&&!this.validateSupersetIntegrity()){this.toastService.error("Invalid superset configuration.",0,"Validation Error");return}if(this.builderForm.invalid){this.toastService.error("Please correct validation errors.",0,"Validation Error"),this.builderForm.markAllAsTouched();return}let e=this.builderForm.getRawValue();this.spinnerService.show(this.isNewMode?"Saving...":"Updating...");try{if(this.mode==="routineBuilder"){let o=this.mapFormToRoutine(e);this.isNewMode?this.workoutService.addRoutine(o):this.workoutService.updateRoutine(o),this.toastService.success(`Routine ${this.isNewMode?"created":"updated"}!`,4e3,"Success"),this.router.navigate(["/workout"])}else{let o=e.workoutDate,n=e.startTime,i=`${o}T${n}:00`,s;try{let c=sy(i);if(!OS(c))throw new Error("Invalid date/time for log entry");s=c.getTime()}catch{this.toastService.error("Invalid date or time format",0,"Error"),this.spinnerService.hide();return}let a;e.durationMinutes&&(a=new Date(s).setMinutes(new Date(s).getMinutes()+e.durationMinutes));let l=e.exercises.map(c=>({id:c.id,exerciseId:c.exerciseId,exerciseName:c.exerciseName,notes:c.notes,sets:c.sets.map(p=>({id:p.id||Bt(),exerciseName:c.exerciseName,plannedSetId:p.plannedSetId,exerciseId:c.exerciseId,type:p.type,repsAchieved:p.repsAchieved,weightUsed:this.unitService.convertToKg(p.weightUsed,this.unitService.currentUnit())??void 0,durationPerformed:p.durationPerformed,notes:p.notes,targetReps:p.targetReps,targetWeight:p.targetWeight,targetDuration:p.targetDuration,targetTempo:p.targetTempo,rpe:void 0,timestamp:p.timestamp||new Date().toISOString()})),rounds:c.rounds||0,type:c.type||"standard"})),u={date:xr(new Date(s),"yyyy-MM-dd"),startTime:s,endTime:a,durationMinutes:e.durationMinutes,routineId:e.routineIdForLog||void 0,routineName:e.routineIdForLog?this.availableRoutines.find(c=>c.id===e.routineIdForLog)?.name||e.name||"Workout from Routine":e.name||"Ad-hoc Workout",programId:e.programIdForLog||void 0,notes:e.overallNotesLog,exercises:l};if(this.isEditMode&&this.currentLogId){let c=er(Ht({},u),{id:this.currentLogId});yield this.trackingService.updateWorkoutLog(c),this.toastService.success("Log updated!",4e3,"Success"),this.router.navigate(["/history/log",this.currentLogId])}else{let c=u,p=this.trackingService.addWorkoutLog(c);this.toastService.success("Workout logged!",4e3,"Success"),this.router.navigate(["/history/log",p.id])}}this.builderForm.markAsPristine()}catch(o){console.error("Error saving:",o),this.toastService.error(`Failed to save: ${o.message||"Unknown error"}`,0,"Save Error")}finally{this.spinnerService.hide()}})}validateSupersetIntegrity(){let t=this.exercisesFormArray.value,e=new Map;for(let o of t)o.supersetId&&(e.has(o.supersetId)||e.set(o.supersetId,[]),e.get(o.supersetId).push(o));for(let[o,n]of e.entries()){if(n.length<2)return!1;let i=n.sort((a,l)=>(a.supersetOrder??1/0)-(l.supersetOrder??1/0));for(let a=0;a<i.length;a++)if(i[a].supersetOrder!==a)return!1;let s=i.map(a=>this.exercisesFormArray.controls.findIndex(l=>l.get("id")?.value===a.id));for(let a=1;a<s.length;a++)if(s[a]!==s[a-1]+1)return!1}return!0}get firstSelectedExerciseIndexForSuperset(){let t=this.selectedExerciseIndicesForSuperset();return t.length>0?t[0]:null}updateRoundsControlability(t){let e=t.get("supersetId")?.value,o=t.get("supersetOrder")?.value,n=t.get("rounds");if(this.isViewMode){n?.disable({emitEvent:!1});return}if(e&&o!==null&&o>0){n?.disable({emitEvent:!1});let i=this.exercisesFormArray.controls.find(s=>s.get("supersetId")?.value===e&&s.get("supersetOrder")?.value===0);i&&n?.setValue(i.get("rounds")?.value??1,{emitEvent:!1})}else n?.enable({emitEvent:!1})}syncSupersetRounds(t,e,o){this.isViewMode||!t||e===null||e===void 0||e<1||this.exercisesFormArray.at(o).get("supersetOrder")?.value!==0||this.exercisesFormArray.controls.forEach(i=>{let s=i;s.get("supersetId")?.value===t&&s.get("rounds")?.value!==e&&s.get("rounds")?.setValue(e,{emitEvent:!1})})}startCurrentWorkout(){this.currentRoutineId?this.router.navigate(["/workout/play",this.currentRoutineId]):this.toastService.error("Cannot start workout: Routine ID is missing",0,"Error")}enableEditMode(){this.isViewMode&&this.currentRoutineId&&(this.isViewMode=!1,this.isEditMode=!0,this.toggleFormState(!1),this.toastService.info("Edit mode enabled",3e3,"Mode Changed"))}ngOnDestroy(){this.subscriptions.unsubscribe()}getExerciseCardClasses(t,e){let o=this.mode==="routineBuilder"&&!!t.get("supersetId")?.value,n=t.get("supersetOrder")?.value??-1,i=t.get("exerciseName")?.value,s=t.get("supersetSize")?.value??0,a=this.mode==="routineBuilder"&&this.selectedExerciseIndicesForSuperset().includes(e),l=o&&n===0,u=o&&n===s-1,c=o&&!l&&!u,p=this.isCompactView,d=this.isEditMode,m=this.firstSelectedExerciseIndexForSuperset,f=t.get("sets")?.value||[],g=f.length>0&&f.every(y=>y.type==="warmup");return{"border rounded":!0,"shadow-sm":!0,"border-orange-500 dark:border-orange-400 bg-orange-50 dark:bg-orange-800/30":o,"ring-2 ring-orange-400 dark:ring-orange-300 shadow-md":a,"dark:bg-orange-800/40":o&&a,"bg-blue-800/40":g,"border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-800":!o&&!a&&!g,"rounded-b-none border-b-transparent dark:border-b-transparent":this.mode==="routineBuilder"&&o&&(l||c),"rounded-t-none border-t-transparent dark:border-t-transparent":o&&(u||c),"border-x border-t":o&&l,"mb-2":!o||o&&u}}hasAdjacentSupersets(t){let e=this.exercisesFormArray;if(t<0||t>=e.length)return!1;let o=e.at(t).get("supersetId")?.value;if(!o)return!1;if(t>0){let n=e.at(t-1).get("supersetId")?.value;if(n&&n===o)return!0}if(t<e.length-1){let n=e.at(t+1).get("supersetId")?.value;if(n&&n===o)return!0}return!1}isSupersetSpacing(t){if(t<=0)return!1;let e=this.exercisesFormArray.at(t).get("id")?.value,o=this.exercisesFormArray.at(t-1).get("id")?.value;return t>0&&e&&e!==o}handleTrulyCustomExerciseEntry(t=!1){return j(this,null,function*(){let e=[{name:"exerciseName",type:"text",placeholder:"Custom Exercise Name",value:"",attributes:{required:!0},label:"Custom Exercise Name"},{name:"numSets",type:"number",placeholder:"Number of Sets (e.g., 3)",value:"3",attributes:{min:"1",required:!0},label:"Number of Sets"},{name:"equipmentNeeded",type:"text",placeholder:"Equipment",value:"",attributes:{required:!1},label:"Equipment"},{name:"description",type:"textarea",placeholder:"Description",value:"",attributes:{required:!1},label:"Description"}];t&&this.toastService.error("Invalid input for custom exercise",0,"Error");let o=yield this.alertService.showPromptDialog("Add New Custom Exercise","Define exercise name and sets:",e,"Add Exercise");if(o&&o.exerciseName){let n=String(o.exerciseName).trim(),i=String(o.description).trim(),s=o.numSets?parseInt(String(o.numSets),10):3;if(!n||s<=0){this.toastService.error("Invalid input for custom exercise",0,"Error");return}let a=Array.from({length:s},()=>({id:`custom-adhoc-set-${Bt()}`,reps:8,weight:null,duration:void 0,restAfterSet:60,type:"standard",notes:""})),u={id:`custom-adhoc-ex-${n.trim().toLowerCase().replace(/\s+/g,"-")}-${Bt()}`,name:n,description:i,category:"custom",muscleGroups:[],primaryMuscleGroup:"",imageUrls:[]};this.closeExerciseSelectionModal(),this.exerciseService.addExercise(u);let c={id:this.workoutService.generateWorkoutExerciseId(),exerciseId:u.id,exerciseName:u.name,sets:a,type:"standard",supersetId:null,supersetOrder:null,supersetSize:null,rounds:0},p=this.createExerciseFormGroup(c,!0,!1);this.exercisesFormArray.push(p),this.toggleSetExpansion(this.exercisesFormArray.length-1,0),this.addRepsListener(p)}else{if(!o)return;this.handleTrulyCustomExerciseEntry(!0);return}})}getRoutineDuration(){return this.routine?(this.routine=this.mapFormToRoutine(this.builderForm.getRawValue()),this.workoutService.getEstimatedRoutineDuration(this.routine)):0}mapFormToRoutine(t){return{id:this.currentRoutineId||Bt(),name:t.name,description:t.description,goal:t.goal,exercises:t.goal==="rest"?[]:t.exercises.map(o=>er(Ht({},o),{id:o.id||Bt(),sets:o.sets.map(n=>er(Ht({},n),{weight:this.unitService.convertToKg(n.weight,this.unitService.currentUnit())??null}))})),isFavourite:this.routine?.isFavourite,isHidden:this.routine?.isHidden}}getRoutineDropdownActionItems(t,e){let o="rounded text-left px-3 py-1.5 sm:px-4 sm:py-2 font-medium text-gray-600 dark:text-gray-300 hover:bg-primary flex items-center text-sm hover:text-white dark:hover:text-gray-100 dark:hover:text-white",n="rounded text-left px-3 py-1.5 sm:px-4 sm:py-2 font-medium text-gray-600 dark:text-gray-300 hover:bg-red-600 flex items-center text-sm hover:text-gray-100 hover:animate-pulse",i={label:"EDIT",actionKey:"edit",iconSvg:'<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" d="m16.862 4.487 1.687-1.688a1.875 1.875 0 1 1 2.652 2.652L10.582 16.07a4.5 4.5 0 0 1-1.897 1.13L6 18l.8-2.685a4.5 4.5 0 0 1 1.13-1.897l8.932-8.931Zm0 0L19.5 7.125M18 14v4.75A2.25 2.25 0 0 1 15.75 21H5.25A2.25 2.25 0 0 1 3 18.75V8.25A2.25 2.25 0 0 1 5.25 6H10" /></svg>',iconClass:"w-8 h-8 mr-2",buttonClass:(e==="dropdown"?"w-full ":"")+o,data:{routineId:t}},s=this.routine,a=[{label:"START",actionKey:"start",iconSvg:'<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" d="M5.25 5.653c0-.856.917-1.398 1.667-.986l11.54 6.347a1.125 1.125 0 0 1 0 1.972l-11.54 6.347a1.125 1.125 0 0 1-1.667-.986V5.653Z" /></svg>',iconClass:"w-8 h-8 mr-2",buttonClass:(e==="dropdown"?"w-full ":"")+o,data:{routineId:t}},{label:"CLONE",actionKey:"clone",iconSvg:'<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" fill="none"><path d="M 5 3 H 16 A 2 2 0 0 1 18 5 V 16 A 2 2 0 0 1 16 18 H 5 A 2 2 0 0 1 3 16 V 5 A 2 2 0 0 1 5 3 Z M 8 6 H 19 A 2 2 0 0 1 21 8 V 19 A 2 2 0 0 1 19 21 H 8 A 2 2 0 0 1 6 19 V 8 A 2 2 0 0 1 8 6 Z" /></svg>',iconClass:"w-8 h-8 mr-2",buttonClass:(e==="dropdown"?"w-full ":"")+o,data:{routineId:t}}];return this.isViewMode&&a.push(i),a}handleActionMenuItemClick(t,e){let o=this.routine?.id;if(o){switch(t.actionKey){case"start":this.startCurrentWorkout();break;case"edit":this.router.navigate(["/workout/routine/edit",o]);break;case"clone":this.cloneAndEditRoutine(o);break}this.activeRoutineIdActions.set(null)}}activeRoutineIdActions=we(null);toggleActions(t,e){e.stopPropagation(),this.activeRoutineIdActions.update(o=>o===t?null:t)}areActionsVisible(t){return this.activeRoutineIdActions()===t}onCloseActionMenu(){this.activeRoutineIdActions.set(null)}cloneAndEditRoutine(t,e){return j(this,null,function*(){let o=this.routine;if(!o){this.toastService.error("Routine not found for cloning",0,"Error");return}let n=er(Ht({},structuredClone(o)),{name:o.name+" (Copy)",createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()});try{this.spinnerService.show(),n=yield this.workoutService.addRoutine(n),this.toastService.success(`Routine "${n.name}" cloned successfully.`,3e3,"Routine Cloned"),this.router.navigate(["/workout/routine/edit",n.id])}catch(i){console.error("Error during routine cloning:",i),this.toastService.error("Failed to clone routine",0,"Clone Failed")}finally{this.spinnerService.hide()}})}checkIfTimedExercise(t){let e=t?.getRawValue();return e?.sets.some(o=>o.targetDuration)||e?.sets.some(o=>o.duration)}checkIfWeightedExercise(t){let e=t?.getRawValue();return e?.sets.some(o=>o.targetWeight)||e?.sets.some(o=>o.weight)}getSetReps(t){return t?.getRawValue()?.sets.map(o=>o.reps).join(" - ")}getSetWeightsUsed(t){return t?.getRawValue()?.sets.map(o=>o.weight).join(" - ")}getSetDurationPerformed(t){return t?.getRawValue()?.sets.map(o=>o.duration).join(" - ")}getIconPath(t){if(!t)return tn(this.exerciseService.getIconPath("default-exercise"));let e=this.routine?.exercises.find(o=>o.exerciseId===t);return e?this.exerciseService.getExerciseById(e.exerciseId).pipe(_n(o=>{if(o){let n=this.exerciseService.determineExerciseIcon(o,o.name);return this.exerciseService.getIconPath(n)}else return this.exerciseService.getIconPath("default-exercise")})):tn(this.exerciseService.getIconPath("default-exercise"))}checkTextClass(t,e){if(!t)return"text-gray-700 dark:text-gray-300";let o=0,n=0;return e==="reps"?(o=t.repsAchieved??0,n=t.targetReps??0):e==="duration"?(o=t.durationPerformed??0,n=t.targetDuration??0):e==="weight"&&(o=t.weightUsed??0,n=t.targetWeight??0),o>n?"text-green-500 dark:text-green-400":o<n?"text-red-500 dark:text-red-400":"text-gray-800 dark:text-white"}notesModalsData=we(null);showNotesModal(t){this.notesModalsData.set(t)}shouldShowExpandedExercise(t){return this.isCompactView?!1:this.isAllExpandedInViewMode()?!0:this.expandedSetPath()?.exerciseIndex===t}isExerciseDetailModalOpen=we(!1);isSimpleModalOpen=we(!1);exerciseDetailsId="";exerciseDetailsName="";openModal(t){this.exerciseDetailsId=t.exerciseId,this.exerciseDetailsName=t.exerciseName||"Exercise details",this.isSimpleModalOpen.set(!0)}static \u0275fac=function(e){return new(e||r)};static \u0275cmp=vo({type:r,selectors:[["app-workout-builder"]],viewQuery:function(e,o){if(e&1&&(Do(eL,5),Do(tL,5)),e&2){let n;Fo(n=Oo())&&(o.setRepsInputs=n),Fo(n=Oo())&&(o.expandedSetElements=n)}},features:[Nd([on])],decls:20,vars:12,consts:[["expandedSetElement",""],["class","my-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded-md dark:bg-red-900/30 dark:border-red-600 dark:text-red-300",4,"ngIf"],[1,"container","mx-auto","p-2","sm:p-4"],[1,"flex","items-center","justify-between","p-2"],[1,"flex","justify-between","items-center"],[1,"text-gray-600","dark:text-gray-300","hover:text-primary","dark:hover:text-primary-light","p-2","-ml-1",3,"routerLink"],["fill","none","stroke","currentColor","viewBox","0 0 24 24","xmlns","http://www.w3.org/2000/svg",1,"w-6","h-6"],["stroke-linecap","round","stroke-linejoin","round","stroke-width","2","d","M15 19l-7-7 7-7"],[1,"w-10","h-10"],[1,"flex","items-center","space-x-2","flex-shrink-0"],["class","",4,"ngIf"],[1,"space-y-6","mb-6","p-1","bg-white","dark:bg-gray-700","rounded-md","shadow-xl","overflow-hidden",3,"ngSubmit","formGroup"],[1,"space-y-4","p-2","rounded-md","shadow-sm","dark:shadow-none"],[4,"ngIf"],["class","pt-4 px-2",4,"ngIf"],["class","p-4 bg-blue-50 dark:bg-blue-900/30 rounded-md text-center",4,"ngIf"],["class","py-2 px-1 flex justify-end space-x-3",4,"ngIf"],["class","fixed inset-0 bg-gray-700 bg-opacity-75 transition-opacity overflow-y-auto h-full w-full z-[70] flex items-center justify-center p-4",3,"click",4,"ngIf"],[3,"isOpen","modalTitle","isOpenChange",4,"ngIf"],[1,"my-4","p-3","bg-red-100","border","border-red-400","text-red-700","rounded-md","dark:bg-red-900/30","dark:border-red-600","dark:text-red-300"],[1,""],[1,"relative"],[1,"p-1.5","text-gray-500","dark:text-gray-400","hover:bg-gray-200","dark:hover:bg-gray-700","rounded-full","focus:outline-none",3,"click"],["xmlns","http://www.w3.org/2000/svg","fill","none","viewBox","0 0 24 24","stroke","currentColor","stroke-width","2",1,"h-5","w-5"],["stroke-linecap","round","stroke-linejoin","round","d","M12 5v.01M12 12v.01M12 19v.01M12 6a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2z"],["displayMode","dropdown",3,"items","isVisible","itemClick","closeMenu",4,"ngIf"],["displayMode","dropdown",3,"itemClick","closeMenu","items","isVisible"],["class","text-m text-gray-500 dark:text-gray-300",4,"ngIf"],[1,"block","text-xl","font-black","text-gray-700","dark:text-gray-300"],["for","routineName",1,"block","text-m","font-medium","text-gray-700","dark:text-gray-300"],["type","text","id","routineName","formControlName","name","placeholder","Routine name",1,"mt-1","block","w-full","p-2","border","rounded-md","shadow-sm","focus:ring-primary","focus:border-primary","dark:bg-gray-600","dark:border-gray-500","dark:text-gray-200",3,"ngClass"],["class","text-red-500 dark:text-red-400 text-xs mt-1",4,"ngIf"],[1,"text-red-500","dark:text-red-400","text-xs","mt-1"],[1,"mt-1","block","w-full","shadow-sm","dark:shadow-none","dark:text-gray-200",3,"innerHTML"],["for","description",1,"block","text-m","font-medium","text-gray-700","dark:text-gray-300"],["id","description","formControlName","description","rows","3","placeholder","Description (optional)",1,"mt-1","block","w-full","p-2","border","border-gray-300","dark:border-gray-500","rounded-md","shadow-sm","dark:bg-gray-600","dark:text-gray-200"],[1,"block","text-m","text-gray-700","dark:text-gray-300"],[1,"font-medium"],["id","goal","formControlName","goal",1,"mt-1","block","w-full","p-2","border","border-gray-300","dark:border-gray-500","rounded-md","shadow-sm","dark:bg-gray-600","dark:text-gray-200"],["value",""],[3,"value",4,"ngFor","ngForOf"],[3,"value"],[1,"text-m","text-gray-500","dark:text-gray-300"],[1,"grid","grid-cols-1","md:grid-cols-3","gap-4"],["for","workoutDate",1,"block","text-sm","font-medium","text-gray-700","dark:text-gray-300"],["type","date","id","workoutDate","formControlName","workoutDate",1,"mt-1","block","w-full","p-2","border","rounded-md","shadow-sm","dark:bg-gray-600","dark:border-gray-500","dark:text-gray-200",3,"ngClass"],["for","startTime",1,"block","text-sm","font-medium","text-gray-700","dark:text-gray-300"],["type","time","id","startTime","formControlName","startTime",1,"mt-1","block","w-full","p-2","border","rounded-md","shadow-sm","dark:bg-gray-600","dark:border-gray-500","dark:text-gray-200",3,"ngClass"],["for","durationMinutes",1,"block","text-sm","font-medium","text-gray-700","dark:text-gray-300"],["type","number","id","durationMinutes","formControlName","durationMinutes",1,"mt-1","block","w-full","p-2","border","rounded-md","shadow-sm","dark:bg-gray-600","dark:border-gray-500","dark:text-gray-200",3,"ngClass"],["for","logWorkoutName",1,"block","text-sm","font-medium","text-gray-700","dark:text-gray-300"],["type","text","id","logWorkoutName","formControlName","name","placeholder","e.g., Morning Chest Session",1,"mt-1","block","w-full","p-2","border","border-gray-300","dark:border-gray-500","rounded-md","shadow-sm","dark:bg-gray-600","dark:text-gray-200"],["for","routineIdForLog",1,"block","text-sm","font-medium","text-gray-700","dark:text-gray-300"],["id","routineIdForLog","formControlName","routineIdForLog",1,"mt-1","block","w-full","p-2","border","border-gray-300","dark:border-gray-500","rounded-md","shadow-sm","dark:bg-gray-600","dark:text-gray-200"],["for","programIdForLog",1,"block","text-sm","font-medium","text-gray-700","dark:text-gray-300"],["id","programIdForLog","formControlName","programIdForLog",1,"mt-1","block","w-full","p-2","border","border-gray-300","dark:border-gray-500","rounded-md","shadow-sm","dark:bg-gray-600","dark:text-gray-200"],["for","overallNotesLog",1,"block","text-sm","font-medium","text-gray-700","dark:text-gray-300"],["id","overallNotesLog","formControlName","overallNotesLog","rows","2",1,"mt-1","block","w-full","p-2","border","border-gray-300","dark:border-gray-500","rounded-md","shadow-sm","dark:bg-gray-600","dark:text-gray-200"],[1,"pt-4","px-2"],[1,"flex","justify-between","items-center","mb-4"],[1,"text-xl","font-semibold","text-gray-700","dark:text-gray-300"],["type","button","class","bg-green-500 hover:enabled:bg-green-600 text-white text-m font-medium py-2 px-3 rounded-md transition-all duration-150 ease-in-out disabled:opacity-50 disabled:cursor-not-allowed",3,"click",4,"ngIf"],["cdkDropList","","formArrayName","exercises","class","exercise-list-container space-y-4",3,"cdkDropListData","cdkDropListDisabled","cdkDropListDropped",4,"ngIf"],["class","text-center py-6 text-gray-500 dark:text-gray-400 border border-dashed dark:border-gray-700 rounded-md mt-4",4,"ngIf"],["class","text-center py-4 text-gray-500 dark:text-gray-400",4,"ngIf"],["class","mt-6 text-center",4,"ngIf"],["type","button",1,"bg-green-500","hover:enabled:bg-green-600","text-white","text-m","font-medium","py-2","px-3","rounded-md","transition-all","duration-150","ease-in-out","disabled:opacity-50","disabled:cursor-not-allowed",3,"click"],["cdkDropList","","formArrayName","exercises",1,"exercise-list-container","space-y-4",3,"cdkDropListDropped","cdkDropListData","cdkDropListDisabled"],[4,"ngFor","ngForOf"],["appClickOutside","",1,"relative","group","exercise-card-wrapper",3,"click","clickOutside","title","ngClass"],["class","absolute left-1/2 -translate-x-1/2 z-20","style","top: -1.25rem;",4,"ngIf"],["cdkDrag","","appLongPressDrag","","longPressClass","is-long-pressing",1,"exercise-item","relative","transition-all","cursor-grab",3,"cdkDragDisabled","longPressEnabled","longPressDelay","cdkDragData","formGroupName","cdkDragStartDelay","ngClass"],[1,"flex","items-center","space-x-1"],["class","p-1 text-gray-400 hover:text-gray-600 dark:text-gray-500 dark:hover:text-gray-300 flex-shrink-0 top-1 right-1 sm:static","title","Drag to reorder",3,"ngClass",4,"ngIf"],["type","checkbox","title","Select the exercise for the Superset","class","h-4 w-4 text-orange-600 border-gray-300 dark:border-gray-600 rounded focus:ring-orange-500 flex-shrink-0 disabled:opacity-50",3,"id","checked","disabled","change",4,"ngIf"],["class","flex-grow min-w-0 py-2 px-0",4,"ngIf"],["class","flex-shrink-0 ml-auto",4,"ngIf"],["class","p-2",4,"ngIf"],[1,"absolute","left-1/2","-translate-x-1/2","z-20",2,"top","-1.25rem"],["type","button","class","bg-orange-600 hover:bg-orange-700 text-white text-xs font-semibold py-1.5 px-3 rounded-full shadow-lg",3,"disabled","click",4,"ngIf"],["type","button","class","bg-violet-600 hover:bg-violet-700 text-white text-xs font-semibold py-1.5 px-3 rounded-full shadow-lg",3,"disabled","click",4,"ngIf"],["type","button",1,"bg-orange-600","hover:bg-orange-700","text-white","text-xs","font-semibold","py-1.5","px-3","rounded-full","shadow-lg",3,"click","disabled"],["type","button",1,"bg-violet-600","hover:bg-violet-700","text-white","text-xs","font-semibold","py-1.5","px-3","rounded-full","shadow-lg",3,"click","disabled"],["title","Drag to reorder",1,"p-1","text-gray-400","hover:text-gray-600","dark:text-gray-500","dark:hover:text-gray-300","flex-shrink-0","top-1","right-1","sm:static",3,"ngClass"],["xmlns","http://www.w3.org/2000/svg","viewBox","0 0 24 24",1,"w-5","h-5"],["d","M 7 17 L 7 3 M 4 6 L 7 3 L 10 6 M 17 7 L 17 21 M 14 18 L 17 21 L 20 18","fill","none","stroke","currentColor","stroke-width","2","stroke-linecap","round","stroke-linejoin","round"],["type","checkbox","title","Select the exercise for the Superset",1,"h-4","w-4","text-orange-600","border-gray-300","dark:border-gray-600","rounded","focus:ring-orange-500","flex-shrink-0","disabled:opacity-50",3,"change","id","checked","disabled"],[1,"flex-grow","min-w-0","py-2","px-0"],["class","text-xs text-orange-600 dark:text-orange-400 mt-0.5",4,"ngIf"],["class","flex items-center text-s text-gray-500 dark:text-gray-400 mt-0.5 gap-4 pl-2",4,"ngIf"],[1,"text-xs","text-orange-600","dark:text-orange-400","mt-0.5"],[1,"flex","items-center","text-s","text-gray-500","dark:text-gray-400","mt-0.5","gap-4","pl-2"],["alt","Exercise Icon",1,"w-6","h-6","sm:w-8","sm:h-8","object-contain",3,"src"],[1,"min-w-0"],[1,"flex"],[1,"font-semibold","text-gray-800","dark:text-gray-100","truncate",3,"title"],["class","ml-2 cursor-pointer dark:text-white","title","Exercise details","width","20","height","20","viewBox","0 0 20 20","xmlns","http://www.w3.org/2000/svg",3,"click",4,"ngIf"],[1,"text-xs","text-gray-500","dark:text-gray-400","truncate"],["title","Exercise details","width","20","height","20","viewBox","0 0 20 20","xmlns","http://www.w3.org/2000/svg",1,"ml-2","cursor-pointer","dark:text-white",3,"click"],["cx","10","cy","10","r","9","stroke","currentColor","stroke-width","2","fill","none"],["cx","10","cy","6","r","1.5","fill","currentColor"],["x","9","y","9","width","2","height","7","fill","currentColor"],[1,"flex-shrink-0","ml-auto"],["type","button","title","Remove Exercise",1,"p-1","text-red-500","hover:text-red-700","dark:text-red-400","dark:hover:text-red-300","rounded-full","hover:bg-red-100","dark:hover:bg-red-900/30","disabled:opacity-50",3,"click"],["xmlns","http://www.w3.org/2000/svg","viewBox","0 0 16 16",1,"w-4","h-4"],["width","16","height","16","rx","3","ry","3","fill","red"],["fill","#ffffff","fill-rule","evenodd","clip-rule","evenodd","d","M4.22 4.22a.75.75 0 0 1 1.06 0L8 7.94l2.72-2.72a.75.75 0 1 1 1.06 1.06L9.06 9l2.72 2.72a.75.75 0 1 1-1.06 1.06L8 10.06 5.28 12.78a.75.75 0 0 1-1.06-1.06L6.94 9 4.22 6.28a.75.75 0 0 1 0-1.06z"],[1,"p-2"],[1,"flex","flex-col","sm:flex-row","justify-between","items-start","sm:items-center","pb-2","pt-1","sm:pt-0"],[1,"flex-grow"],["class","text-xs text-orange-600 dark:text-orange-400 font-normal block mb-1",4,"ngIf"],[1,"flex","items-center"],["alt","Exercise Icon",1,"w-6","h-6","sm:w-8","sm:h-8","object-contain","mr-3","flex-shrink-0",3,"src"],[1,"text-lg","font-semibold","text-gray-800","dark:text-gray-100"],[1,"flex","flex-col","items-start","sm:items-end","space-y-1","flex-shrink-0","w-full","sm:w-auto","mt-2","sm:mt-0"],["class","flex items-center space-x-1",4,"ngIf"],["type","button","class","flex items-center text-xs text-red-600 bg-red-200 hover:text-red-700 dark:text-red-400 dark:hover:text-red-300 font-medium py-1 px-2 rounded-md hover:enabled:bg-red-100 dark:enabled:hover:bg-red-900/50 disabled:opacity-50",3,"click",4,"ngIf"],["type","button","class","flex bg-violet-200 items-center text-xs text-violet-600 hover:text-violet-700 dark:text-violet-400 dark:hover:text-violet-300 font-medium py-1 px-2 rounded-md hover:bg-violet-100 dark:hover:bg-violet-900/50 disabled:opacity-50",3,"disabled","click",4,"ngIf"],["class","grid gap-x-4 gap-y-2 px-2 py-2 bg-white rounded-md dark:bg-gray-800 text-gray-900 dark:text-white",3,"ngClass",4,"ngIf"],["class","space-y-1",4,"ngIf"],[1,"text-xs","text-orange-600","dark:text-orange-400","font-normal","block","mb-1"],[1,"text-xs","font-medium","text-gray-600","dark:text-gray-400","whitespace-nowrap",3,"for"],["type","number","formControlName","rounds","min","1",1,"w-16","p-1","text-m","border-gray-300","dark:border-gray-500","border-2","rounded-md","focus:ring-primary","focus:border-primary","dark:bg-gray-600","dark:text-gray-200","disabled:opacity-50","disabled:bg-gray-300","dark:disabled:bg-gray-500",3,"change","id","readonly"],["type","button",1,"flex","items-center","text-xs","text-red-600","bg-red-200","hover:text-red-700","dark:text-red-400","dark:hover:text-red-300","font-medium","py-1","px-2","rounded-md","hover:enabled:bg-red-100","dark:enabled:hover:bg-red-900/50","disabled:opacity-50",3,"click"],["xmlns","http://www.w3.org/2000/svg","viewBox","0 0 16 16",1,"w-4","h-4","mr-2"],["type","button",1,"flex","bg-violet-200","items-center","text-xs","text-violet-600","hover:text-violet-700","dark:text-violet-400","dark:hover:text-violet-300","font-medium","py-1","px-2","rounded-md","hover:bg-violet-100","dark:hover:bg-violet-900/50","disabled:opacity-50",3,"click","disabled"],["xmlns","http://www.w3.org/2000/svg","fill","none","viewBox","0 0 24 24","stroke-width","1.5","stroke","currentColor",1,"w-4","h-4","mr-1"],["stroke-linecap","round","stroke-linejoin","round","d","M3.75 3.75v4.5m0-4.5h4.5m-4.5 0L9 9M3.75 20.25v-4.5m0 4.5h4.5m-4.5 0L9 15M20.25 3.75v4.5m0-4.5h-4.5m4.5 0L15 9m5.25 11.25v-4.5m0 4.5h-4.5m4.5 0L15 15"],[1,"block","text-s","font-medium","text-gray-600","dark:text-gray-400","mb-0.5",3,"for"],["formControlName","notes","rows","1","appAutoGrow","",1,"mt-0.5","block","w-full","p-1.5","text-sm","border-gray-300","dark:border-gray-500","rounded-md","shadow-sm","dark:bg-gray-600","dark:text-gray-200",3,"id","readonly"],[1,"grid","gap-x-4","gap-y-2","px-2","py-2","bg-white","rounded-md","dark:bg-gray-800","text-gray-900","dark:text-white",3,"ngClass"],[1,"font-bold","text-xs","uppercase","text-gray-500","dark:text-gray-400"],["class","font-bold text-xs uppercase text-gray-500 dark:text-gray-400",4,"ngIf"],[1,"cursor-pointer"],["xmlns","http://www.w3.org/2000/svg","class","h-8 w-8 text-gray-500 dark:text-white","fill","none","viewBox","0 0 24 24","stroke","currentColor","stroke-width","2",3,"click",4,"ngIf"],["class","text-gray-500 dark:text-white",4,"ngIf"],["class","col-span-full h-px bg-gray-200 dark:bg-gray-700",4,"ngIf"],["xmlns","http://www.w3.org/2000/svg","fill","none","viewBox","0 0 24 24","stroke","currentColor","stroke-width","2",1,"h-8","w-8","text-gray-500","dark:text-white",3,"click"],["stroke-linecap","round","stroke-linejoin","round","d","M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-3 7h3m-3 4h3m-6-4h.01M9 16h.01"],[1,"text-gray-500","dark:text-white"],[1,"col-span-full","h-px","bg-gray-200","dark:bg-gray-700"],[1,"space-y-1"],[1,"flex","justify-between","items-center","py-1"],[1,"text-m","font-semibold","text-gray-700","dark:text-gray-300"],["type","button","class","text-xs bg-blue-200 text-blue-600 hover:text-blue-700 dark:text-blue-400 dark:hover:text-blue-300 font-medium py-0.5 px-1.5 rounded-md hover:enabled:bg-blue-100 dark:hover:bg-blue-900/50",3,"click",4,"ngIf"],["formArrayName","sets",1,"space-y-1.5"],["class","grid grid-cols-12 gap-x-1 py-1 px-1.5 text-xs font-medium text-gray-500 dark:text-gray-400 border-b dark:border-gray-600",4,"ngIf"],[3,"formGroupName",4,"ngFor","ngForOf"],["type","button",1,"text-xs","bg-blue-200","text-blue-600","hover:text-blue-700","dark:text-blue-400","dark:hover:text-blue-300","font-medium","py-0.5","px-1.5","rounded-md","hover:enabled:bg-blue-100","dark:hover:bg-blue-900/50",3,"click"],[1,"grid","grid-cols-12","gap-x-1","py-1","px-1.5","text-xs","font-medium","text-gray-500","dark:text-gray-400","border-b","dark:border-gray-600"],[1,"col-span-1","text-center"],[1,"col-span-2","text-center","truncate"],[1,"col-span-2","text-center"],[1,"col-span-1"],[3,"formGroupName"],["class","grid grid-cols-12 gap-x-1 items-center py-1.5 px-1.5 rounded-md hover:bg-gray-100 dark:hover:bg-gray-800/60 cursor-pointer border dark:border-gray-700 dark:text-white",3,"ngClass","click",4,"ngIf"],["class","p-1 rounded-md shadow-inner space-y-2",3,"ngClass",4,"ngIf"],[1,"grid","grid-cols-12","gap-x-1","items-center","py-1.5","px-1.5","rounded-md","hover:bg-gray-100","dark:hover:bg-gray-800/60","cursor-pointer","border","dark:border-gray-700","dark:text-white",3,"click","ngClass"],[1,"col-span-1","text-s","text-center","font-medium"],[1,"col-span-2","text-xs","text-center","truncate",3,"title"],[1,"col-span-2","text-s","text-center"],[1,"col-span-1","text-s","text-center"],[1,"col-span-2","text-s","text-center","truncate",3,"title"],[1,"col-span-1","text-s","text-center","truncate",3,"title"],["class","col-span-1 flex items-center justify-end",4,"ngIf"],["class","col-span-1",4,"ngIf"],[1,"col-span-1","flex","items-center","justify-end"],["type","button","title","Remove Set",1,"flex","items-center","text-red-500","hover:text-red-600","dark:text-red-400","dark:hover:text-red-300","p-0.5","rounded-full","hover:bg-red-100","dark:hover:bg-red-900/30","disabled:opacity-50",3,"click"],[1,"p-1","rounded-md","shadow-inner","space-y-2",3,"ngClass"],[1,"grid","grid-cols-2","sm:grid-cols-3","gap-x-3","gap-y-2","items-end"],[1,"col-span-full","sm:col-span-1"],[1,"block","text-s","font-medium","text-gray-600","dark:text-gray-400",3,"for"],["formControlName","type",1,"mt-0.5","w-full","p-1.5","text-m","border-gray-300","dark:border-gray-500","rounded-md","dark:bg-gray-600","dark:text-gray-200","disabled:opacity-70","disabled:cursor-not-allowed",3,"id","disabled"],["type","number","placeholder","Reps",1,"mt-0.5","w-full","p-1.5","text-m","border-gray-300","dark:border-gray-500","rounded-md","dark:bg-gray-600","dark:text-gray-200","disabled:opacity-70","disabled:cursor-not-allowed",3,"id","formControlName","readonly"],["type","number","placeholder","Weight",1,"mt-0.5","w-full","p-1.5","text-m","border-gray-300","dark:border-gray-500","rounded-md","dark:bg-gray-600","dark:text-gray-200","disabled:opacity-70","disabled:cursor-not-allowed",3,"id","formControlName","readonly"],["type","number","placeholder","Secs",1,"mt-0.5","w-full","p-1.5","text-m","border-gray-300","dark:border-gray-500","rounded-md","dark:bg-gray-600","dark:text-gray-200","disabled:opacity-70","disabled:cursor-not-allowed",3,"id","formControlName","readonly"],["class","col-span-full",4,"ngIf"],[1,"mt-2","text-right"],["type","button","title","Collapse set",1,"bg-blue-200","text-xs","text-blue-600","hover:text-blue-700","dark:text-blue-400","dark:hover:text-blue-300","font-medium","py-1","px-2","rounded-md",3,"click"],["xmlns","http://www.w3.org/2000/svg","viewBox","0 0 24 24","width","24","height","24"],["d","M 12 5 L 12 10 M 9 7 L 12 10 L 15 7 M 12 19 L 12 14 M 9 17 L 12 14 L 15 17","fill","none","stroke","currentColor","stroke-width","1.5","stroke-linecap","round","stroke-linejoin","round"],["type","text","formControlName","tempo","placeholder","e.g. 2010",1,"mt-0.5","w-full","p-1.5","text-m","border-gray-300","dark:border-gray-500","rounded-md","dark:bg-gray-600","dark:text-gray-200","disabled:opacity-70","disabled:cursor-not-allowed",3,"id","readonly"],["type","number","formControlName","restAfterSet","placeholder","Rest",1,"mt-0.5","w-full","p-1.5","text-m","border-gray-300","dark:border-gray-500","rounded-md","dark:bg-gray-600","dark:text-gray-200","disabled:opacity-70","disabled:cursor-not-allowed",3,"id","readonly"],[1,"col-span-full"],["type","text","formControlName","notes","placeholder","e.g. Good form",1,"mt-0.5","w-full","p-1.5","text-m","border-gray-300","dark:border-gray-500","rounded-md","dark:bg-gray-600","dark:text-gray-200","disabled:opacity-70","disabled:cursor-not-allowed",3,"id","readonly"],[1,"text-center","py-6","text-gray-500","dark:text-gray-400","border","border-dashed","dark:border-gray-700","rounded-md","mt-4"],[1,"mb-2"],["type","button",1,"bg-green-500","hover:bg-green-600","text-white","text-m","font-medium","py-2","px-3","rounded-md",3,"click"],[1,"text-center","py-4","text-gray-500","dark:text-gray-400"],[1,"mt-6","text-center"],["type","button",1,"bg-green-500","hover:bg-green-600","text-white","font-semibold","py-2","px-6","rounded-md","shadow-md","hover:shadow-lg","transition-all","duration-300","focus:outline-none","focus:ring-2","focus:ring-green-400","focus:ring-opacity-75",3,"click"],["xmlns","http://www.w3.org/2000/svg","viewBox","0 0 20 20","fill","currentColor",1,"w-5","h-5","mr-2","inline-block"],["d","M10.75 4.75a.75.75 0 0 0-1.5 0v4.5h-4.5a.75.75 0 0 0 0 1.5h4.5v4.5a.75.75 0 0 0 1.5 0v-4.5h4.5a.75.75 0 0 0 0-1.5h-4.5v-4.5Z"],[1,"p-4","bg-blue-50","dark:bg-blue-900/30","rounded-md","text-center"],[1,"text-m","text-blue-700","dark:text-blue-300"],[1,"py-2","px-1","flex","justify-end","space-x-3"],["type","button",1,"px-4","py-2","border","border-gray-300","dark:border-gray-600","rounded-md","shadow-sm","text-m","font-medium","text-gray-700","dark:text-gray-200","hover:bg-gray-50","dark:hover:bg-gray-500",3,"routerLink"],["type","submit",1,"px-4","py-2","border","border-transparent","rounded-md","shadow-sm","text-sm","font-medium","text-white","bg-primary","hover:bg-primary-dark","focus:outline-none","focus:ring-2","focus:ring-offset-2","focus:ring-primary-dark","disabled:opacity-50",3,"disabled"],[1,"fixed","inset-0","bg-gray-700","bg-opacity-75","transition-opacity","overflow-y-auto","h-full","w-full","z-[70]","flex","items-center","justify-center","p-4",3,"click"],[1,"relative","transform","overflow-hidden","rounded-md","bg-white","dark:bg-gray-700","text-left","shadow-xl","transition-all","sm:my-8","sm:w-full","sm:max-w-lg",3,"click"],[1,"bg-white","dark:bg-gray-700","px-4","pt-5","pb-4","sm:p-6","sm:pb-4"],[1,"flex","justify-between","items-center","pb-3"],[1,"text-xl","font-semibold","text-gray-900","dark:text-gray-100"],["type","button",1,"p-1","rounded-full","text-gray-400","hover:text-gray-600",3,"click"],["xmlns","http://www.w3.org/2000/svg","fill","none","viewBox","0 0 24 24","stroke-width","1.5","stroke","currentColor",1,"w-6","h-6"],["stroke-linecap","round","stroke-linejoin","round","d","M6 18 18 6M6 6l12 12"],[1,"my-4"],["type","text","placeholder","Search exercises...",1,"w-full","p-2","border","border-gray-300","dark:border-gray-600","rounded-md","dark:bg-gray-700","dark:text-gray-200",3,"ngModelChange","ngModel"],[1,"mt-2","max-h-80","overflow-y-auto"],["class","p-3 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-md cursor-pointer flex justify-between items-center",3,"click",4,"ngFor","ngForOf"],["class","text-gray-500 dark:text-gray-400 text-center p-4",4,"ngIf"],[1,"mt-4","pt-4","border-t","border-gray-200","dark:border-gray-600","text-center"],["type","button",1,"text-sm","text-primary","dark:text-primary-light","hover:underline",3,"click"],[1,"bg-gray-50","dark:bg-gray-700","px-4","py-3","sm:flex","sm:flex-row-reverse","sm:px-6"],["type","button",1,"mt-3","inline-flex","w-full","justify-center","rounded-md","bg-white","dark:bg-gray-700","px-3","py-2","text-sm","font-semibold","text-gray-900","dark:text-gray-200","shadow-sm","ring-1","ring-inset","ring-gray-300","dark:ring-gray-500","hover:bg-gray-50","dark:hover:bg-gray-500","sm:mt-0","sm:w-auto",3,"click"],[1,"p-3","hover:bg-gray-100","dark:hover:bg-gray-700","rounded-md","cursor-pointer","flex","justify-between","items-center",3,"click"],[1,"font-medium","text-gray-800","dark:text-gray-200"],[1,"block","text-xs","text-gray-500","dark:text-gray-400"],["xmlns","http://www.w3.org/2000/svg","viewBox","0 0 20 20","fill","currentColor",1,"w-5","h-5","text-primary","dark:text-primary-light"],["fill-rule","evenodd","d","M8.22 5.22a.75.75 0 0 1 1.06 0l4.25 4.25a.75.75 0 0 1 0 1.06l-4.25 4.25a.75.75 0 0 1-1.06-1.06L11.94 10 8.22 6.28a.75.75 0 0 1 0-1.06Z","clip-rule","evenodd"],[1,"text-gray-500","dark:text-gray-400","text-center","p-4"],[3,"isOpenChange","isOpen","modalTitle"],[1,"flex","flex-col","p-4","text-left","text-gray-700","dark:text-gray-200"],["name","","id","",1,"font-semibold","pb-2","dark:border-gray-600","dark:bg-gray-800",3,"disabled"],[1,"px-4","py-2","bg-primary","text-white","rounded-md","hover:bg-primary-dark","focus:outline-none","focus:ring-2","focus:ring-primary-light",3,"click"],[3,"id","isModal"]],template:function(e,o){if(e&1&&(ne(0,aL,2,1,"div",1),_(1,"div",2)(2,"header",3)(3,"div",4)(4,"button",5),_e(),_(5,"svg",6),le(6,"path",7),I()(),He(),le(7,"div",8),I(),_(8,"div",9),ne(9,uL,6,1,"div",10),I()(),_(10,"form",11),oe("ngSubmit",function(){return o.onSubmit()}),_(11,"section",12),ne(12,bL,9,7,"ng-container",13)(13,NL,39,17,"ng-container",13),I(),ne(14,kM,10,7,"section",14)(15,IM,3,0,"section",15)(16,TM,5,3,"div",16),I(),ne(17,RM,21,3,"div",17),I(),ne(18,$M,6,4,"app-modal",18)(19,PM,2,4,"app-modal",18)),e&2){let n,i;F("ngIf",o.errorMessage()),N(4),F("routerLink",o.mode==="routineBuilder"?"/workout":"/history/list"),N(5),F("ngIf",o.routine),N(),F("formGroup",o.builderForm),N(2),F("ngIf",o.mode==="routineBuilder"),N(),F("ngIf",o.mode==="manualLogEntry"),N(),F("ngIf",o.mode==="manualLogEntry"||((n=o.builderForm.get("goal"))==null?null:n.value)!=="rest"),N(),F("ngIf",o.mode==="routineBuilder"&&((i=o.builderForm.get("goal"))==null?null:i.value)==="rest"),N(),F("ngIf",!o.isViewMode),N(),F("ngIf",o.isExerciseModalOpen),N(),F("ngIf",o.notesModalsData()),N(),F("ngIf",o.exerciseDetailsId)}},dependencies:[_o,oi,rn,wo,Rd,Ca,Ud,Fd,Vd,Wd,Ad,Od,Bd,Na,Dd,DS,Ld,Md,PS,AS,ii,$a,Ra,WS,VS,BS,Oa,Qd,Zd,qd,zS,jd,Jd,Xd],styles:[".exercise-list-container[_ngcontent-%COMP%]{min-height:60px}.exercise-item[_ngcontent-%COMP%]{transition:transform .2s ease-out,box-shadow .2s ease-out}.is-long-pressing[_ngcontent-%COMP%]{transform:scale(1.03);box-shadow:0 5px 15px #00000040;border-color:#e0460d;border-width:2px;z-index:1000}.cdk-drag-placeholder[_ngcontent-%COMP%]{opacity:.4;background:#ccc;border:dotted 2px #999;min-height:100px;transition:transform .25s cubic-bezier(0,0,.2,1);display:block;margin-bottom:.5rem}.cdk-drag-preview[_ngcontent-%COMP%]{box-shadow:0 5px 5px -3px #0003,0 8px 10px 1px #00000024,0 3px 14px 2px #0000001f;border-radius:.5rem;background-color:var(--card-background-color, white)}body.dark[_ngcontent-%COMP%]   .cdk-drag-preview[_ngcontent-%COMP%]{background-color:var(--dark-card-background-color, #1f2937)}.cdk-drop-list-dragging[_ngcontent-%COMP%]   .exercise-item[_ngcontent-%COMP%]:not(.cdk-drag-placeholder){transition:transform .25s cubic-bezier(0,0,.2,1)}.cdk-drag-handle[_ngcontent-%COMP%]{cursor:grab;padding:.25rem;color:#9ca3af;position:relative;top:.25rem;right:.25rem}.cdk-drag-handle[_ngcontent-%COMP%]:hover{color:#4b5563}.dark[_ngcontent-%COMP%]   .cdk-drag-handle[_ngcontent-%COMP%]{color:#6b7280}.dark[_ngcontent-%COMP%]   .cdk-drag-handle[_ngcontent-%COMP%]:hover{color:#d1d5db}@media (min-width: 640px){.cdk-drag-handle[_ngcontent-%COMP%]{position:static}}.superset-spacing[_ngcontent-%COMP%]{margin-top:0!important}"]})};var AM=["progressCircleSvg"];function DM(r,t){if(r&1&&(_(0,"div",13),L(1),I()),r&2){let e=O(2);N(),xe(" Prepare for: ",e.nextUpText," ")}}function FM(r,t){if(r&1){let e=me();_(0,"div",2)(1,"div",3),_e(),_(2,"svg",4,0),le(4,"circle",5)(5,"circle",6),I(),He(),_(6,"div",7)(7,"div",8),L(8),_(9,"span",9),L(10),I()(),_(11,"div",10),L(12),I()()(),_(13,"button",11),oe("click",function(){Q(e);let n=O();return Z(n.skipTimer())}),L(14," Skip "),I(),ne(15,DM,2,1,"div",12),I()}if(r&2){let e=O();bo("opacity-100",e.isVisible)("opacity-0",!e.isVisible),N(4),lp("r",e.getCircleRadius()),N(),lp("r",e.getCircleRadius())("stroke-dasharray",e.getCircleCircumference())("stroke-dashoffset",e.strokeDashoffset()),N(3),xe(" ",e.displayTime()),N(2),Le(e.displayTentsTime()),N(2),xe(" ",e.mainText," "),N(3),F("ngIf",e.nextUpText)}}var tm=class r{isVisible=!1;durationSeconds=60;mainText="RESTING";nextUpText=null;timerFinished=new Ao;timerSkipped=new Ao;progressCircleSvg;timerIntervalId;circleRadius=90;circumference=2*Math.PI*this.circleRadius;timerUpdateIntervalMs=100;remainingTime=we(0);initialDuration=we(0);strokeDashoffset=Nt(()=>{let t=this.initialDuration();if(t<=0)return this.circumference;let e=Math.max(0,this.remainingTime())/t;return this.circumference*(1-e)});displayTime=Nt(()=>{let t=Math.max(0,this.remainingTime()),e=Math.floor(t/60),o=Math.floor(t%60);return e>0?`${e}:${o.toString().padStart(2,"0")}`:`${o}`});displayTentsTime=Nt(()=>`.${Math.floor(Math.max(0,this.remainingTime())*10)%10}`);ngOnChanges(t){t.isVisible&&(this.isVisible?this.startTimer():this.stopTimer()),t.durationSeconds&&this.isVisible?this.startTimer():t.durationSeconds&&!this.isVisible&&(this.initialDuration.set(this.durationSeconds),this.remainingTime.set(this.durationSeconds))}ngAfterViewInit(){}startTimer(){if(this.stopTimer(),this.initialDuration.set(this.durationSeconds),this.remainingTime.set(this.durationSeconds),this.durationSeconds<=0){this.timerFinished.emit();return}let t=this.timerUpdateIntervalMs/1e3;this.timerIntervalId=setInterval(()=>{this.remainingTime.update(e=>{let o=e-t;return o<=0?(this.stopTimer(),this.timerFinished.emit(),0):o})},this.timerUpdateIntervalMs)}stopTimer(){this.timerIntervalId&&(clearInterval(this.timerIntervalId),this.timerIntervalId=null)}skipTimer(){this.stopTimer(),this.timerSkipped.emit(this.remainingTime())}ngOnDestroy(){this.stopTimer()}getCircleCircumference(){return this.circumference}getCircleRadius(){return this.circleRadius}static \u0275fac=function(e){return new(e||r)};static \u0275cmp=vo({type:r,selectors:[["app-full-screen-rest-timer"]],viewQuery:function(e,o){if(e&1&&Do(AM,5),e&2){let n;Fo(n=Oo())&&(o.progressCircleSvg=n.first)}},inputs:{isVisible:"isVisible",durationSeconds:"durationSeconds",mainText:"mainText",nextUpText:"nextUpText"},outputs:{timerFinished:"timerFinished",timerSkipped:"timerSkipped"},features:[wS],decls:1,vars:1,consts:[["progressCircleSvg",""],["class","fixed inset-0 z-50 flex flex-col items-center justify-center bg-black/70 backdrop-blur-sm transition-opacity duration-300 ease-in-out",3,"opacity-100","opacity-0",4,"ngIf"],[1,"fixed","inset-0","z-50","flex","flex-col","items-center","justify-center","bg-black/70","backdrop-blur-sm","transition-opacity","duration-300","ease-in-out"],[1,"relative","flex","flex-col","items-center","justify-center","text-white"],["viewBox","0 0 200 200",1,"w-64","h-64","md:w-80","md:h-80","transform","-rotate-90"],["cx","100","cy","100","fill","transparent","stroke","rgba(255, 255, 255, 0.2)","stroke-width","16"],["cx","100","cy","100","fill","transparent","stroke","currentColor","stroke-width","18","stroke-linecap","round",1,"text-primary"],[1,"absolute","inset-0","flex","flex-col","items-center","justify-center","text-center"],[1,"text-6xl","md:text-7xl","font-bold","tabular-nums"],[1,"text-4xl","md:text-5xl","font-bold","tabular-nums"],[1,"mt-2","text-xl","md:text-2xl","font-medium","uppercase","tracking-wider"],[1,"mt-12","py-3","px-8","bg-yellow-500","hover:bg-yellow-800","text-white","font-semibold","rounded-full","shadow-md","transition-colors","duration-150","text-lg",3,"click"],["class","mt-5 text-center text-m md:text-base text-gray-300",4,"ngIf"],[1,"mt-5","text-center","text-m","md:text-base","text-gray-300"]],template:function(e,o){e&1&&ne(0,FM,16,12,"div",1),e&2&&F("ngIf",o.isVisible)},dependencies:[_o,wo],encapsulation:2,changeDetection:0})};var rm=class r{transform(t,e="auto",o=!1){let n=Number(t);if(t==null||isNaN(n))return o||e===!0?"00:00:00":"00:00";let i=Math.max(0,Math.abs(n)),s=Math.floor(i/3600),a=Math.floor(i%3600/60),l=Math.floor(i%60),u=String(a).padStart(2,"0"),c=String(l).padStart(2,"0"),p=o;if(e==="auto"&&!o)p=s>0;else if(e===!0)p=!0;else if(e===!1){let d=Math.floor(i/60),m=Math.floor(i%60);return`${String(d).padStart(2,"0")}:${String(m).padStart(2,"0")}`}if(p)return`${String(s).padStart(2,"0")}:${u}:${c}`;{let d=Math.floor(i/60);return`${String(d).padStart(2,"0")}:${c}`}}static \u0275fac=function(e){return new(e||r)};static \u0275pipe=Ed({name:"formatSeconds",type:r,pure:!0})};var OM=["exerciseSearchFied"],LM=["intervalListItem"],MM=(r,t,e)=>({"tabata-work-bg":r,"tabata-rest-bg":t,"tabata-prepare-bg":e}),BM=(r,t)=>({"bg-white/90 text-black font-bold shadow-2xl -translate-y-px":r,"text-white/60 opacity-80":t}),VM=r=>({"filter dark:invert":r}),WM=(r,t,e,o)=>({"text-red-500":r,"animate-pulse":t,"text-green-500 dark:text-green-400":e,"text-gray-800 dark:text-gray-100":o}),zM=(r,t)=>({"bg-green-500 hover:bg-green-600":r,"bg-yellow-500 hover:bg-yellow-600 text-black":t}),UM=(r,t,e,o)=>({"bg-primary hover:bg-primary-dark active:bg-primary-dark focus:outline-none focus:ring-0":r,"bg-green-500 hover:bg-green-600 focus:ring-green-400":t,"bg-blue-500 hover:bg-blue-600 focus:ring-blue-400":e,"bg-gray-400 dark:bg-gray-600 text-gray-800 dark:text-gray-200 cursor-not-allowed":o}),qS=r=>({"rotate-180":r});function GM(r,t){r&1&&(_e(),_(0,"svg",37),le(1,"path",38),I())}function HM(r,t){r&1&&(_e(),_(0,"svg",37),le(1,"path",39),I())}function KM(r,t){if(r&1&&(_(0,"div",40),L(1),I()),r&2){let e=O(4);N(),Ft(" Round ",e.currentBlockRound()," / ",e.totalBlockRounds()," ")}}function qM(r,t){if(r&1&&(_(0,"span",46),L(1),I()),r&2){let e=O().$implicit;N(),Le(e.exerciseName)}}function jM(r,t){if(r&1&&(_(0,"li",41,2)(2,"div",42)(3,"span",43),L(4),I(),_(5,"span",44),L(6),I(),ne(7,qM,2,1,"span",45),I()()),r&2){let e=t.$implicit,o=t.index,n=O(4);N(2),F("ngClass",So(5,BM,o===n.currentTabataIntervalIndex(),o!==n.currentTabataIntervalIndex())),N(2),xe("",e.currentIntervalNumber,"."),N(2),Ft("",e.type,": ",e.duration,"s"),N(),F("ngIf",e.type==="work")}}function XM(r,t){if(r&1){let e=me();so(0),le(1,"div",17),_(2,"div",18)(3,"header",19)(4,"div",20),L(5),I(),_(6,"div",21)(7,"button",22),oe("click",function(){Q(e);let n=O(3);return Z(n.toggleTabataPause())}),ne(8,GM,2,0,"svg",23)(9,HM,2,0,"svg",23),I()()(),_(10,"main",24),ne(11,KM,2,2,"div",25),_(12,"h1",26),L(13),qe(14,"number"),I(),_(15,"p",27),L(16),I()(),_(17,"div",28)(18,"ul",29),ne(19,jM,8,8,"li",30),I()(),_(20,"footer",31)(21,"button",32),oe("click",function(){Q(e);let n=O(3);return Z(n.previousTabataInterval())}),_e(),_(22,"svg",33),le(23,"path",34),I()(),He(),_(24,"div",35),L(25),I(),_(26,"button",32),oe("click",function(){Q(e);let n=O(3);return Z(n.nextTabataInterval())}),_e(),_(27,"svg",33),le(28,"path",36),I()()()(),ao()}if(r&2){let e=t.ngIf,o=O(3);N(),F("ngClass",IS(17,MM,e.type==="work",e.type==="rest",e.type==="prepare")),N(4),xe(" Total: ",o.sessionTimerDisplay()," "),N(3),F("ngIf",o.sessionState()==="playing"),N(),F("ngIf",o.sessionState()==="paused"),N(2),F("ngIf",o.totalBlockRounds()>1),N(),bo("animate-pulse",o.tabataTimeRemaining()<=3&&o.tabataTimeRemaining()>0),N(),xe(" ",o.tabataTimeRemaining()>=0?lo(14,14,o.tabataTimeRemaining(),"2.0-0"):"00"," "),N(3),xe(" ",e.exerciseName||e.type," "),N(3),F("ngForOf",o.tabataIntervals()),N(2),F("disabled",o.currentTabataIntervalIndex()===0),N(4),Ft(" ",e.currentIntervalNumber," / ",e.totalIntervals," "),N(),F("disabled",o.currentTabataIntervalIndex()===o.tabataIntervals().length-1)}}function YM(r,t){if(r&1&&(_(0,"div",15),ne(1,XM,29,21,"ng-container",16),I()),r&2){let e=O(2);N(),F("ngIf",e.currentTabataInterval())}}function QM(r,t){if(r&1){let e=me();_(0,"div",63)(1,"h2",64),L(2,"Session Paused"),I(),_(3,"p",65),L(4),I(),_(5,"button",66),oe("click",function(){Q(e);let n=O(4);return Z(n.resumeSession())}),L(6," Resume Workout "),I(),_(7,"button",67),oe("click",function(){Q(e);let n=O(4);return Z(n.quitWorkout())}),L(8," Quit Workout (No Save) "),I()()}if(r&2){let e=O(4);N(4),xe("Elapsed Time: ",e.sessionTimerDisplay())}}function ZM(r,t){if(r&1&&le(0,"img",84),r&2){let e=O().ngIf,o=O(5);F("src",o.getIconPath(e.iconName),ds)("alt",e.name+" icon")("ngClass",ri(3,VM,e.iconName!=="default-exercise"&&e.iconName!==""&&e.iconName!==null))}}function JM(r,t){if(r&1&&(_(0,"div",82),ne(1,ZM,1,5,"img",83),I()),r&2){let e=t.ngIf;N(),F("ngIf",e.iconName)}}function eB(r,t){r&1&&le(0,"div",85)}function tB(r,t){if(r&1&&(_(0,"p",86)(1,"span",56),L(2),I(),_(3,"span",56),L(4),I(),_(5,"span",56),L(6),I()()),r&2){let e=O().ngIf;N(2),Le(e.exerciseData.id),N(2),Le(e.exerciseData.exerciseId),N(2),Le(e.exerciseData.exerciseName)}}function rB(r,t){if(r&1&&(_(0,"span"),L(1),I()),r&2){let e=O(6);N(),xe("/",e.getTotalWarmupSetsForCurrentExercise())}}function oB(r,t){if(r&1&&(_(0,"span",87),L(1),ne(2,rB,2,1,"span",16),I()),r&2){let e=O(5);N(),xe(" Warm-up Set ",e.getCurrentWarmupSetNumber()," "),N(),F("ngIf",e.getTotalWarmupSetsForCurrentExercise()>0)}}function nB(r,t){if(r&1&&(_(0,"span"),L(1),I()),r&2){let e=O(5);N(),Ft(" Set ",e.getCurrentWorkingSetNumber(),"/",e.getWorkingSetCountForCurrentExercise()," ")}}function iB(r,t){if(r&1&&(_(0,"span",88),L(1),I()),r&2){let e=O(5);N(),Ft(" (Round ",e.currentBlockRound(),"/",e.totalBlockRounds(),") ")}}function sB(r,t){if(r&1&&(_(0,"span",89),L(1),I()),r&2){let e=O().ngIf;N(),Ft(" (Superset ",(e.exerciseData.supersetOrder??0)+1,"/",e.exerciseData.supersetSize??"?",") ")}}function aB(r,t){r&1&&(_(0,"span",93),L(1,"Marked as Skipped"),I())}function lB(r,t){r&1&&(_(0,"span",94),L(1,"Marked for Later"),I())}function uB(r,t){if(r&1&&(_(0,"div",90),ne(1,aB,2,0,"span",91)(2,lB,2,0,"span",92),I()),r&2){let e=O().ngIf;N(),F("ngIf",e.exerciseData.sessionStatus==="skipped"),N(),F("ngIf",e.exerciseData.sessionStatus==="do_later")}}function cB(r,t){if(r&1){let e=me();_(0,"div",95)(1,"h3",96),L(2,"Get Ready!"),I(),_(3,"p",97),L(4),I(),_(5,"p",98),L(6),qe(7,"weightUnit"),I(),_(8,"button",99),oe("click",function(){Q(e);let n=O(5);return Z(n.skipPresetTimer())}),L(9," Skip Countdown & Start Set "),I()()}if(r&2){let e=O().ngIf,o=O(4);N(4),xe("",o.presetTimerCountdownDisplay(),"s"),N(2),kS(" Upcoming: ",e.setData.reps?e.setData.reps+" reps":""," ",e.setData.reps&&e.setData.weight?" at ":""," ",e.setData.weight?ft(7,5,e.setData.weight):""," ",e.setData.duration?e.setData.duration+"s":""," ")}}function pB(r,t){if(r&1){let e=me();_(0,"div")(1,"label",103),L(2),I(),_(3,"div",104)(4,"button",105),oe("shortPress",function(){Q(e);let n=O(6);return Z(n.onShortPressWeightDecrement())})("longPress",function(){Q(e);let n=O(6);return Z(n.onLongPressWeightDecrement())})("pressRelease",function(){Q(e);let n=O(6);return Z(n.onPressRelease())}),_e(),_(5,"svg",106),le(6,"path",107),I()(),He(),_(7,"div",108),oe("click",function(){Q(e);let n=O(6);return Z(n.editWeightWithPrompt())}),L(8),qe(9,"number"),I(),le(10,"input",109),_(11,"button",110),oe("shortPress",function(){Q(e);let n=O(6);return Z(n.onShortPressWeightIncrement())})("longPress",function(){Q(e);let n=O(6);return Z(n.onLongPressWeightIncrement())})("pressRelease",function(){Q(e);let n=O(6);return Z(n.onPressRelease())}),_e(),_(12,"svg",106),le(13,"path",111),I()()()()}if(r&2){let e=O(6);N(2),xe("Weight (",e.weightUnitDisplaySymbol,")"),N(2),F("disabled",e.getDisabled()),N(4),xe(" ",lo(9,4,e.csf.actualWeight.value,"1.0-2")??"0"," "),N(3),F("disabled",e.getDisabled())}}function dB(r,t){if(r&1){let e=me();_(0,"div")(1,"label",103),L(2,"Reps"),I(),_(3,"div",104)(4,"button",105),oe("shortPress",function(){Q(e);let n=O(6);return Z(n.onShortPressRepsDecrement())})("longPress",function(){Q(e);let n=O(6);return Z(n.onLongPressRepsDecrement())})("pressRelease",function(){Q(e);let n=O(6);return Z(n.onPressRelease())}),_e(),_(5,"svg",106),le(6,"path",107),I()(),He(),_(7,"input",112),oe("click",function(){Q(e);let n=O(6);return Z(n.editRepsWithPrompt())}),I(),_(8,"button",110),oe("shortPress",function(){Q(e);let n=O(6);return Z(n.onShortPressRepsIncrement())})("longPress",function(){Q(e);let n=O(6);return Z(n.onLongPressRepsIncrement())})("pressRelease",function(){Q(e);let n=O(6);return Z(n.onPressRelease())}),_e(),_(9,"svg",106),le(10,"path",111),I()()()()}if(r&2){let e=O(6);N(4),F("disabled",e.getDisabled()),N(4),F("disabled",e.getDisabled())}}function mB(r,t){if(r&1&&(_(0,"span"),L(1),qe(2,"date"),I()),r&2){let e=O(3).ngIf;N(),xe("(Target: ",TS(2,1,e.setData.duration*1e3,"mm:ss","UTC"),")")}}function fB(r,t){r&1&&(_(0,"span"),L(1,"START TIMER"),I())}function hB(r,t){r&1&&(_(0,"span"),L(1,"PAUSE TIMER"),I())}function gB(r,t){r&1&&(_(0,"span"),L(1,"RESUME TIMER"),I())}function xB(r,t){if(r&1){let e=me();_(0,"button",119),oe("click",function(){Q(e);let n=O(7);return Z(n.resetTimedSet())}),L(1," RESET "),I()}}function yB(r,t){if(r&1){let e=me();_(0,"div")(1,"label",113),L(2," Time "),ne(3,mB,3,5,"span",16),I(),_(4,"div",114),L(5),qe(6,"formatSeconds"),I(),le(7,"input",115),_(8,"div",116)(9,"button",117),oe("click",function(){Q(e);let n=O(6);return Z(n.toggleTimedSetTimer())}),ne(10,fB,2,0,"span",16)(11,hB,2,0,"span",16)(12,gB,2,0,"span",16),I(),ne(13,xB,2,0,"button",118),I()()}if(r&2){let e,o=O(2).ngIf,n=O(4);N(3),F("ngIf",o.setData.duration>0),N(),F("ngClass",iy(10,WM,n.isTimedSetOvertime(),n.isTimedSetOvertime()&&n.timedSetTimerState()==="running",!n.isTimedSetOvertime()&&n.timedSetTimerState()==="running"&&(((e=n.activeSetInfo())==null||e.setData==null?null:e.setData.duration)??0)>0&&n.timedSetElapsedSeconds()>0,n.timedSetTimerState()==="idle"||n.timedSetTimerState()==="paused")),N(),xe(" ",ft(6,8,n.timedSetDisplay())," "),N(4),F("ngClass",So(15,zM,n.timedSetTimerState()==="idle"||n.timedSetTimerState()==="paused",n.timedSetTimerState()==="running")),N(),F("ngIf",n.timedSetTimerState()==="idle"),N(),F("ngIf",n.timedSetTimerState()==="running"),N(),F("ngIf",n.timedSetTimerState()==="paused"),N(),F("ngIf",n.timedSetTimerState()!=="idle")}}function vB(r,t){if(r&1){let e=me();_(0,"div",120)(1,"label",121),oe("click",function(){Q(e);let n=O(6);return Z(n.showNotes.set(!n.showNotes()))}),L(2,"Set Notes (Optional)"),I(),le(3,"textarea",122),I()}if(r&2){let e=O(6);N(3),F("disabled",e.getDisabled())}}function bB(r,t){if(r&1){let e=me();_(0,"div",123),oe("click",function(){Q(e);let n=O(6);return Z(n.showNotes.set(!n.showNotes()))}),_(1,"div",124),_e(),_(2,"svg",125),le(3,"path",126),I(),L(4," Notes "),I()()}r&2&&(N(3),lp("d","M12 6.042A8.967 8.967 0 006 3.75c-1.052 0-2.062.18-3 .512v14.25A8.987 8.987 0 016 18c2.305 0 4.408.867 6 2.292m0-14.25a8.966 8.966 0 016-2.292c1.052 0 2.062.18 3 .512v14.25A8.987 8.987 0 0018 18a8.967 8.967 0 00-6 2.292m0-14.25v14.25"))}function SB(r,t){if(r&1&&(_(0,"div")(1,"form",100),ne(2,pB,14,7,"div",16)(3,dB,11,2,"div",16)(4,yB,14,18,"div",16)(5,vB,4,1,"div",101)(6,bB,5,1,"div",102),I()()),r&2){let e=O().ngIf,o=O(4);N(),F("formGroup",o.currentSetForm),N(),F("ngIf",o.csf.actualWeight),N(),F("ngIf",o.csf.actualReps&&e.setData.reps!==void 0),N(),F("ngIf",e.setData.duration),N(),F("ngIf",o.showNotes()),N(),F("ngIf",!o.showNotes())}}function wB(r,t){if(r&1){let e=me();_(0,"div",127)(1,"div",128)(2,"button",129),oe("click",function(){Q(e);let n=O(5);return Z(n.handleMainAction())}),L(3),I()()()}if(r&2){let e=O(5);N(2),F("disabled",e.sessionState()==="paused"||e.playerSubState()===e.PlayerSubState.PresetCountdown&&e.presetTimerCountdownDisplay()!=="0"&&e.presetTimerCountdownDisplay()!==null||e.playerSubState()===e.PlayerSubState.Resting&&e.isRestTimerVisible())("ngClass",iy(3,UM,e.playerSubState()===e.PlayerSubState.PerformingSet&&!e.checkIfLatestOfEverything(),e.playerSubState()===e.PlayerSubState.PerformingSet&&e.checkIfLatestOfEverything(),e.playerSubState()===e.PlayerSubState.PresetCountdown,e.playerSubState()===e.PlayerSubState.Resting&&e.isRestTimerVisible())),N(),xe(" ",e.mainActionButtonLabel()," ")}}function _B(r,t){if(r&1&&(_(0,"div",130)(1,"span",131),L(2,"Next up: "),I(),_(3,"span"),L(4),I()()),r&2){let e=O(5);F("title",e.getNextUpText(e.activeSetInfo(),e.routine()??null)||"Next Exercise"),N(4),Le(e.getNextUpText(e.activeSetInfo(),e.routine()??null)||"Next Exercise")}}function CB(r,t){if(r&1){let e=me();_(0,"div",68)(1,"div",69),oe("click",function(){let n=Q(e).ngIf,i=O(4);return Z(i.openModal(n.exerciseData))}),ne(2,JM,2,1,"div",70)(3,eB,1,0,"ng-template",null,5,Mo),_(5,"h2",71),L(6),I()(),_(7,"div",72),ne(8,tB,7,3,"p",73),_(9,"p",74),ne(10,oB,3,2,"span",75)(11,nB,2,2,"span",16)(12,iB,2,2,"span",76)(13,sB,2,2,"span",77),I()(),ne(14,uB,3,2,"div",78)(15,cB,10,7,"div",79)(16,SB,7,6,"div",16)(17,wB,4,8,"div",80)(18,_B,5,2,"div",81),I()}if(r&2){let e=t.ngIf,o=Lo(4),n=O(4);N(),F("title","Click/tap for more info about the exercise"),N(),F("ngIf",n.currentBaseExercise())("ngIfElse",o),N(3),F("title",e.exerciseData.exerciseName),N(),xe(" ",e.exerciseData.exerciseName||"Loading Exercise..."," "),N(2),F("ngIf",!1),N(2),F("ngIf",e.type==="warmup"),N(),F("ngIf",e.type!=="warmup"),N(),F("ngIf",n.totalBlockRounds()>1&&n.currentBlockRound()>0),N(),F("ngIf",e.exerciseData.supersetId),N(),F("ngIf",e.exerciseData.sessionStatus&&e.exerciseData.sessionStatus!=="pending"),N(),F("ngIf",n.playerSubState()===n.PlayerSubState.PresetCountdown),N(),F("ngIf",n.playerSubState()===n.PlayerSubState.PerformingSet),N(),F("ngIf",n.routine()&&n.sessionState()==="playing"&&n.activeSetInfo()),N(),F("ngIf",n.getNextUpText(n.activeSetInfo(),n.routine()??null))}}function kB(r,t){if(r&1&&(_(0,"p",139),L(1),I()),r&2){let e=O(5);N(),xe(" ",e.currentWorkoutLogExercises().length===0?"No sets logged yet":"All planned sets are done. Well done!"," ")}}function IB(r,t){if(r&1){let e=me();_(0,"button",140),oe("click",function(){Q(e);let n=O(5);return Z(n.finishWorkoutAndReportStatus())}),L(1," Confirm & Save Workout "),I()}}function TB(r,t){r&1&&(_(0,"button",141),L(1," Back to Workouts "),I())}function EB(r,t){if(r&1){let e=me();_(0,"div",132)(1,"h2",133),L(2),I(),ne(3,kB,2,1,"p",134)(4,IB,2,0,"button",135),_(5,"div",136),ne(6,TB,2,0,"button",137),_(7,"button",138),oe("click",function(){Q(e);let n=O(4);return Z(n.addExerciseDuringSession())}),L(8," + Add Exercise to Session "),I()()()}if(r&2){let e=O(4);N(2),xe(" ",e.sessionState()==="error"?"Error Loading Workout":e.currentWorkoutLogExercises().length===0?e.routineId==="-1"?"Workout to be started":"Workout Ended":"Workout Complete!"," "),N(),F("ngIf",e.sessionState()!=="error"),N(),F("ngIf",e.sessionState()!=="error"&&e.currentWorkoutLogExercises().length>0),N(2),F("ngIf",e.sessionState()!=="error"&&e.currentWorkoutLogExercises().length===0),N(),F("disabled",e.sessionState()==="paused")}}function NB(r,t){if(r&1){let e=me();_(0,"div")(1,"div",144),L(2,"UP NEXT"),I(),_(3,"div",145),L(4),I(),_(5,"div",146),L(6),qe(7,"number"),_(8,"button",147),oe("click",function(){Q(e);let n=O(5);return Z(n.skipRest())}),L(9,"(Skip)"),I()()()}if(r&2){let e=O(5);N(3),F("title",e.restTimerNextUpText()),N(),xe(" ",e.restTimerNextUpText()||"Next Exercise"," "),N(2),xe(" Rest: ",e.restTimerDisplay()||lo(7,3,e.restDuration(),"1.0-0")+"s"," ")}}function RB(r,t){if(r&1){let e=me();_(0,"div")(1,"div",145),L(2),I(),_(3,"div",148),L(4),I(),_(5,"button",149),oe("click",function(){Q(e);let n=O(5);return Z(n.skipPresetTimer())}),L(6,"(Skip Countdown)"),I()()}if(r&2){let e=O(5);N(),F("title",e.restTimerMainText()),N(),xe(" ",e.restTimerMainText()," "),N(2),xe(" ",e.presetTimerCountdownDisplay(),"s ")}}function $B(r,t){if(r&1&&(_(0,"footer",142)(1,"div",143),ne(2,NB,10,6,"div",16)(3,RB,7,3,"div",16),I()()),r&2){let e=O(4);N(2),F("ngIf",e.playerSubState()===e.PlayerSubState.Resting&&!e.isRestTimerVisible()),N(),F("ngIf",e.playerSubState()===e.PlayerSubState.PresetCountdown)}}function PB(r,t){if(r&1){let e=me();_(0,"div",150)(1,"button",151),oe("click",function(){Q(e);let n=O(4);return Z(n.goBack())}),_e(),_(2,"svg",52),le(3,"path",53),I()(),He(),_(4,"div",152)(5,"h1",153),L(6,"Error"),I()(),le(7,"div",154),I(),_(8,"div",155)(9,"h2",156),L(10,"Routine Not Found"),I(),_(11,"p",157),L(12,"The selected routine could not be loaded."),I(),_(13,"button",158),_e(),_(14,"svg",52),le(15,"path",53),I()()()}}function AB(r,t){if(r&1){let e=me();_(0,"div",48),ne(1,QM,9,1,"div",49),_(2,"header",50)(3,"button",51),oe("click",function(){Q(e);let n=O(3);return Z(n.goBack())}),_e(),_(4,"svg",52),le(5,"path",53),I()(),He(),_(6,"div",54),oe("click",function(){Q(e);let n=O(3);return Z(n.jumpToExercise("Session overview"))}),_(7,"h1",55),L(8),I(),_(9,"div",56),L(10),I()(),_(11,"button",57),oe("click",function(){Q(e);let n=O(3);return Z(n.toggleWorkoutMenu())}),_e(),_(12,"svg",58),le(13,"path",59),I()()(),He(),_(14,"main",60),ne(15,CB,19,15,"div",61)(16,EB,9,5,"ng-template",null,3,Mo),I(),ne(18,$B,4,2,"footer",62)(19,PB,16,0,"ng-template",null,4,Mo),I()}if(r&2){let e=Lo(17),o=O(2).ngIf,n=O();N(),F("ngIf",n.sessionState()==="paused"),N(5),F("title","Click for session overview"),N(2),xe(" ",o.name||"Workout"," "),N(2),Le(n.sessionTimerDisplay()),N(),F("disabled",n.sessionState()==="loading"||n.sessionState()==="error"||n.sessionState()==="paused"&&!n.isWorkoutMenuVisible()),N(4),F("ngIf",n.activeSetInfo())("ngIfElse",e),N(3),F("ngIf",n.routine()&&n.sessionState()==="playing"&&n.activeSetInfo()&&(n.playerSubState()===n.PlayerSubState.Resting&&!n.isRestTimerVisible()||n.playerSubState()===n.PlayerSubState.PresetCountdown))}}function DB(r,t){if(r&1&&ne(0,AB,21,8,"div",47),r&2){let e=O(2),o=Lo(6);F("ngIf",e.routine()!==void 0)("ngIfElse",o)}}function FB(r,t){if(r&1&&(so(0,13),ne(1,YM,2,1,"div",14)(2,DB,1,2,"ng-template",null,1,Mo),ao()),r&2){let e=Lo(3),o=O();N(),F("ngIf",o.isTabataMode())("ngIfElse",e)}}function OB(r,t){r&1&&(_(0,"p"),L(1,"Can't do that in the middle of a superset"),I())}function LB(r,t){if(r&1){let e=me();_(0,"button",184),oe("click",function(){Q(e);let n=O(2);return Z(n.jumpToExercise())}),_e(),_(1,"svg",185),le(2,"path",186),I(),L(3," JUMP TO EXERCISE "),ne(4,OB,2,0,"p",16),I()}if(r&2){let e,o=O(2);F("disabled",o.sessionState()==="paused"||!(!((e=o.routine())==null||e.exercises==null)&&e.exercises.length)),N(4),F("ngIf",o.checkIfSuperSetIsStarted())}}function MB(r,t){r&1&&(_(0,"span",189),L(1,"(already started main sets)"),I())}function BB(r,t){if(r&1){let e=me();_(0,"button",187),oe("click",function(){Q(e);let n=O(2);return Z(n.addWarmupSet())}),_(1,"p"),L(2,"+ ADD WARM-UP SET"),I(),ne(3,MB,2,0,"span",188),I()}if(r&2){let e=O(2);F("disabled",!e.canAddWarmupSet()||e.sessionState()==="paused"||!e.activeSetInfo()),N(3),F("ngIf",!e.canAddWarmupSet())}}function VB(r,t){if(r&1){let e=me();_(0,"button",190),oe("click",function(){Q(e);let n=O(2);return Z(n.skipCurrentSet())}),L(1," SKIP CURRENT SET "),I()}if(r&2){let e=O(2);F("disabled",!e.activeSetInfo()||e.sessionState()==="paused")}}function WB(r,t){if(r&1){let e=me();_(0,"button",191),oe("click",function(){Q(e);let n=O(2);return Z(n.skipCurrentExercise())}),L(1," MARK EXERCISE AS SKIPPED "),I()}if(r&2){let e=O(2);F("disabled",!e.activeSetInfo()||e.sessionState()==="paused")}}function zB(r,t){if(r&1){let e=me();_(0,"button",192),oe("click",function(){Q(e);let n=O(2);return Z(n.markCurrentExerciseDoLater())}),L(1," MARK EXERCISE FOR LATER "),I()}if(r&2){let e=O(2);F("disabled",!e.activeSetInfo()||e.sessionState()==="paused")}}function UB(r,t){if(r&1){let e=me();_(0,"button",193),oe("click",function(){Q(e);let n=O(2);return Z(n.finishWorkoutEarly())}),L(1," FINISH WORKOUT EARLY "),I()}if(r&2){let e=O(2);F("disabled",e.sessionState()==="paused"||e.currentWorkoutLogExercises().length===0)}}function GB(r,t){if(r&1){let e=me();_(0,"div",159)(1,"div",160),le(2,"div"),_(3,"button",161),oe("click",function(){Q(e);let n=O();return Z(n.closeWorkoutMenu())}),_e(),_(4,"svg",162),le(5,"path",163),I()(),He(),le(6,"div"),I(),_(7,"h2",164),L(8,"Workout Menu"),I(),_(9,"button",165),oe("click",function(){Q(e);let n=O();return Z(n.pauseSession())}),_e(),_(10,"svg",166),le(11,"circle",167)(12,"rect",168)(13,"rect",169),I(),L(14," PAUSE WORKOUT "),I(),ne(15,LB,5,2,"button",170),He(),_(16,"button",171),oe("click",function(){Q(e);let n=O();return Z(n.openPerformanceInsightsFromMenu())}),_e(),_(17,"svg",172),le(18,"path",173),I(),L(19," PERFORMANCE INSIGHTS "),I(),ne(20,BB,4,2,"button",174),He(),_(21,"button",175),oe("click",function(){Q(e);let n=O();return Z(n.addExerciseDuringSession())}),_e(),_(22,"svg",176)(23,"g")(24,"g"),le(25,"path",177)(26,"path",178),I()()(),L(27," ADD EXERCISE TO SESSION "),I(),ne(28,VB,2,1,"button",179)(29,WB,2,1,"button",180)(30,zB,2,1,"button",181)(31,UB,2,1,"button",182),He(),_(32,"button",183),oe("click",function(){Q(e);let n=O();return Z(n.quitWorkout())}),L(33," QUIT WORKOUT (NO SAVE) "),I()()}if(r&2){let e=O();N(9),F("disabled",e.sessionState()!=="playing"),N(6),F("ngIf",!e.checkIfSuperSetIsStarted()),N(),F("disabled",e.sessionState()==="paused"||!e.activeSetInfo()),N(4),F("ngIf",!e.checkIfSuperSetIsStarted()),N(),F("disabled",e.sessionState()==="paused"),N(7),F("ngIf",!e.checkIfSetIsPartOfRounds()),N(),F("ngIf",!e.checkIfSetIsPartOfRounds()),N(),F("ngIf",!e.checkIfSetIsPartOfRounds()),N(),F("ngIf",e.currentWorkoutLogExercises().length>0)}}function HB(r,t){r&1&&(_(0,"span",233),L(1,"(Warm-up) "),I())}function KB(r,t){if(r&1&&(_(0,"span"),L(1,"Reps: "),_(2,"strong",234),L(3),I()()),r&2){let e=O().$implicit;N(3),Le(e.repsAchieved)}}function qB(r,t){if(r&1&&(_(0,"span"),L(1,"Weight: "),_(2,"strong",234),L(3),qe(4,"weightUnit"),I()()),r&2){let e=O().$implicit;N(3),Le(ft(4,1,e.weightUsed))}}function jB(r,t){if(r&1&&(_(0,"span",235),L(1,"Time: "),_(2,"strong",234),L(3),I()()),r&2){let e=O().$implicit;N(3),xe("",e.durationPerformed,"s")}}function XB(r,t){if(r&1&&(_(0,"p",236),L(1),I()),r&2){let e=O().$implicit;N(),xe(" ",e.notes," ")}}function YB(r,t){if(r&1&&(_(0,"div",227)(1,"p",228),ne(2,HB,2,0,"span",229),L(3),I(),_(4,"div",230),ne(5,KB,4,1,"span",16)(6,qB,5,3,"span",16)(7,jB,4,1,"span",231),I(),ne(8,XB,2,1,"p",232),I()),r&2){let e=t.$implicit,o=t.index;N(2),F("ngIf",e.type==="warmup"),N(),xe(" Set #",o+1,": "),N(2),F("ngIf",e.repsAchieved!==void 0),N(),F("ngIf",e.weightUsed!==void 0&&e.weightUsed!==null),N(),F("ngIf",e.durationPerformed!==void 0),N(),F("ngIf",e.notes)}}function QB(r,t){if(r&1&&(_(0,"div",225),ne(1,YB,9,6,"div",226),I()),r&2){let e=O(3);N(),F("ngForOf",e.allPreviousLoggedSetsForCurrentExercise())}}function ZB(r,t){r&1&&(_(0,"div",237),L(1," No sets completed yet for this exercise in this workout. "),I())}function JB(r,t){r&1&&(_(0,"span",233),L(1," (Warm-up)"),I())}function eV(r,t){if(r&1&&(_(0,"span"),L(1,"Reps: "),_(2,"strong",234),L(3),I()()),r&2){let e=O().$implicit;N(3),Le(e.repsAchieved)}}function tV(r,t){if(r&1&&(_(0,"span"),L(1,"Weight: "),_(2,"strong",234),L(3),qe(4,"weightUnit"),I()()),r&2){let e=O().$implicit;N(3),Le(ft(4,1,e.weightUsed))}}function rV(r,t){if(r&1&&(_(0,"span",235),L(1,"Time: "),_(2,"strong",234),L(3),I()()),r&2){let e=O().$implicit;N(3),xe("",e.durationPerformed,"s")}}function oV(r,t){if(r&1&&(_(0,"p",236),L(1),I()),r&2){let e=O().$implicit;N(),xe(" ",e.notes," ")}}function nV(r,t){if(r&1&&(_(0,"div",227)(1,"p",228)(2,"span",239),L(3),I(),ne(4,JB,2,0,"span",229),L(5),I(),_(6,"div",230),ne(7,eV,4,1,"span",16)(8,tV,5,3,"span",16)(9,rV,4,1,"span",231),I(),ne(10,oV,2,1,"p",232),I()),r&2){let e=t.$implicit;N(3),xe("",e.exerciseName||"Exercise",":"),N(),F("ngIf",e.type==="warmup"),N(),xe(" Set #",e.plannedSetId,": "),N(2),F("ngIf",e.repsAchieved!==void 0),N(),F("ngIf",e.weightUsed!==void 0&&e.weightUsed!==null),N(),F("ngIf",e.durationPerformed!==void 0),N(),F("ngIf",e.notes)}}function iV(r,t){if(r&1&&(_(0,"div",238),ne(1,nV,11,7,"div",226),I()),r&2){let e=O(3);N(),F("ngForOf",e.allPreviousLoggedSetsForCurrentSession())}}function sV(r,t){r&1&&(_(0,"div",237),L(1," No sets logged today for any exercise yet. "),I())}function aV(r,t){if(r&1&&(_(0,"li",248)(1,"span",249),L(2,"Reps:"),I(),_(3,"strong",250),L(4),I()()),r&2){let e=O().ngIf;N(4),Le(e.repsAchieved)}}function lV(r,t){if(r&1&&(_(0,"li",248)(1,"span",249),L(2,"Weight:"),I(),_(3,"strong",250),L(4),qe(5,"weightUnit"),I()()),r&2){let e=O().ngIf;N(4),Le(ft(5,1,e.weightUsed))}}function uV(r,t){if(r&1&&(_(0,"li",248)(1,"span",249),L(2,"Time:"),I(),_(3,"strong",250),L(4),I()()),r&2){let e=O().ngIf;N(4),xe("",e.durationPerformed,"s")}}function cV(r,t){if(r&1&&(_(0,"li",251),L(1),I()),r&2){let e=O().ngIf;N(),xe("Notes: ",e.notes)}}function pV(r,t){if(r&1&&(_(0,"div",240)(1,"p",241)(2,"span",242),_e(),_(3,"svg",243),le(4,"path",244),I(),L(5),qe(6,"date"),I()(),He(),_(7,"ul",245),ne(8,aV,5,1,"li",246)(9,lV,6,3,"li",246)(10,uV,5,1,"li",246)(11,cV,2,1,"li",247),I()()),r&2){let e=t.ngIf,o=O(3);N(5),xe(" Last time (",lo(6,5,o.lastPerformanceForCurrentExercise==null?null:o.lastPerformanceForCurrentExercise.lastPerformedDate,"dd/MM/yy"),"): "),N(3),F("ngIf",e.repsAchieved!==void 0),N(),F("ngIf",e.weightUsed!==void 0&&e.weightUsed!==null),N(),F("ngIf",e.durationPerformed!==void 0),N(),F("ngIf",e.notes)}}function dV(r,t){r&1&&(_(0,"div",252),L(1," No previous performance recorded for this exercise yet. "),I())}function mV(r,t){if(r&1&&(_(0,"div")(1,"span"),L(2),I(),_(3,"strong",260),L(4),I(),_(5,"em",261),L(6),qe(7,"date"),I()()),r&2){let e=t.$implicit,o=O(5);N(2),xe("",e.pbType,": "),N(2),Le(o.formatPbValue(e)),N(2),xe(" (",lo(7,3,e.timestamp,"shortDate"),")")}}function fV(r,t){if(r&1&&(_(0,"div",258),ne(1,mV,8,6,"div",259),I()),r&2){let e=O(4);N(),F("ngForOf",e.exercisePBs())}}function hV(r,t){if(r&1&&(_(0,"div",262),L(1),I()),r&2){let e,o=O(4);N(),xe(" No personal bests recorded yet for ",(e=o.currentBaseExercise())==null?null:e.name,". ")}}function gV(r,t){if(r&1&&(_(0,"div",253)(1,"p",254)(2,"span",242),_e(),_(3,"svg",243),le(4,"path",255),I(),L(5),I()(),ne(6,fV,2,1,"div",256)(7,hV,2,1,"div",257),I()),r&2){let e,o,n=O(3);N(5),xe(" Personal Bests for ",((e=n.currentBaseExercise())==null?null:e.name)||"this exercise",": "),N(),F("ngIf",n.exercisePBs().length>0),N(),F("ngIf",n.currentBaseExercise()&&n.exercisePBs().length===0&&!(!((o=n.currentBaseExercise())==null||o.id==null)&&o.id.startsWith("custom-")))}}function xV(r,t){if(r&1){let e=me();_(0,"div",267),oe("click",function(){Q(e);let n=O(4);return Z(n.startEditTarget("reps"))}),L(1),I()}if(r&2){let e=O(2).ngIf;N(),xe(" ",e.setData.reps," ")}}function yV(r,t){if(r&1){let e=me();_(0,"div",21)(1,"input",268),In("ngModelChange",function(n){Q(e);let i=O(4);return kn(i.editingTargetValue,n)||(i.editingTargetValue=n),Z(n)}),oe("keyup.enter",function(){Q(e);let n=O(4);return Z(n.confirmEditTarget())})("keyup.escape",function(){Q(e);let n=O(4);return Z(n.cancelEditTarget())}),I(),_(2,"button",269),oe("click",function(){Q(e);let n=O(4);return Z(n.confirmEditTarget())}),_e(),_(3,"svg",270),le(4,"path",271),I()(),He(),_(5,"button",272),oe("click",function(){Q(e);let n=O(4);return Z(n.cancelEditTarget())}),_e(),_(6,"svg",270),le(7,"path",273),I()()()}if(r&2){let e=O(4);N(),Cn("ngModel",e.editingTargetValue)}}function vV(r,t){if(r&1&&(_(0,"div",263)(1,"label",264),L(2,"Target Reps"),I(),ne(3,xV,2,1,"div",265)(4,yV,8,1,"div",266),I()),r&2){let e=O(3);N(3),F("ngIf",e.editingTarget!=="reps"),N(),F("ngIf",e.editingTarget==="reps")}}function bV(r,t){if(r&1){let e=me();_(0,"div",267),oe("click",function(){Q(e);let n=O(4);return Z(n.startEditTarget("weight"))}),L(1),qe(2,"weightUnit"),I()}if(r&2){let e=O(2).ngIf;N(),xe(" ",ft(2,1,e.setData.weight)," ")}}function SV(r,t){if(r&1){let e=me();_(0,"div",21)(1,"input",268),In("ngModelChange",function(n){Q(e);let i=O(4);return kn(i.editingTargetValue,n)||(i.editingTargetValue=n),Z(n)}),oe("keyup.enter",function(){Q(e);let n=O(4);return Z(n.confirmEditTarget())})("keyup.escape",function(){Q(e);let n=O(4);return Z(n.cancelEditTarget())}),I(),_(2,"button",269),oe("click",function(){Q(e);let n=O(4);return Z(n.confirmEditTarget())}),_e(),_(3,"svg",270),le(4,"path",271),I()(),He(),_(5,"button",272),oe("click",function(){Q(e);let n=O(4);return Z(n.cancelEditTarget())}),_e(),_(6,"svg",270),le(7,"path",273),I()()()}if(r&2){let e=O(4);N(),Cn("ngModel",e.editingTargetValue)}}function wV(r,t){if(r&1&&(_(0,"div",263)(1,"label",264),L(2,"Target Weight"),I(),ne(3,bV,3,3,"div",265)(4,SV,8,1,"div",266),I()),r&2){let e=O(3);N(3),F("ngIf",e.editingTarget!=="weight"),N(),F("ngIf",e.editingTarget==="weight")}}function _V(r,t){if(r&1){let e=me();_(0,"div",267),oe("click",function(){Q(e);let n=O(4);return Z(n.startEditTarget("duration"))}),L(1),_(2,"span",274),L(3,"s"),I()()}if(r&2){let e=O(2).ngIf;N(),xe(" ",e.setData.duration)}}function CV(r,t){if(r&1){let e=me();_(0,"div",21)(1,"input",268),In("ngModelChange",function(n){Q(e);let i=O(4);return kn(i.editingTargetValue,n)||(i.editingTargetValue=n),Z(n)}),oe("keyup.enter",function(){Q(e);let n=O(4);return Z(n.confirmEditTarget())})("keyup.escape",function(){Q(e);let n=O(4);return Z(n.cancelEditTarget())}),I(),_(2,"button",269),oe("click",function(){Q(e);let n=O(4);return Z(n.confirmEditTarget())}),_e(),_(3,"svg",270),le(4,"path",271),I()(),He(),_(5,"button",272),oe("click",function(){Q(e);let n=O(4);return Z(n.cancelEditTarget())}),_e(),_(6,"svg",270),le(7,"path",273),I()()()}if(r&2){let e=O(4);N(),Cn("ngModel",e.editingTargetValue)}}function kV(r,t){if(r&1&&(_(0,"div",263)(1,"label",264),L(2,"Target Time"),I(),ne(3,_V,4,1,"div",265)(4,CV,8,1,"div",266),I()),r&2){let e=O(3);N(3),F("ngIf",e.editingTarget!=="duration"),N(),F("ngIf",e.editingTarget==="duration")}}function IV(r,t){if(r&1&&(_(0,"div",263)(1,"label",264),L(2,"Target Tempo"),I(),_(3,"span",275),L(4),I()()),r&2){let e=O().ngIf;N(4),Le(e.setData.tempo)}}function TV(r,t){if(r&1&&(_(0,"div",276)(1,"p",277)(2,"span",242),_e(),_(3,"svg",243),le(4,"path",278),I(),L(5," Planned Notes for this Set: "),I()(),He(),_(6,"p",279),L(7),I()()),r&2){let e=O().ngIf;N(7),Le(e.setData.notes)}}function EV(r,t){if(r&1){let e=me();_(0,"div",206)(1,"div",207)(2,"button",208),oe("click",function(){Q(e);let n=O(2);return Z(n.toggleCompletedSetsForExerciseInfo())}),_(3,"span",209),_e(),_(4,"svg",210),le(5,"path",173),I(),L(6),I(),_(7,"svg",211),le(8,"path",212),I()(),ne(9,QB,2,1,"div",213)(10,ZB,2,0,"div",214),I(),He(),_(11,"div",207)(12,"button",208),oe("click",function(){Q(e);let n=O(2);return Z(n.toggleCompletedSetsForDayInfo())}),_(13,"span",209),_e(),_(14,"svg",210),le(15,"path",215),I(),L(16),I(),_(17,"svg",211),le(18,"path",212),I()(),ne(19,iV,2,1,"div",216)(20,sV,2,0,"div",214),I(),ne(21,pV,12,8,"div",217)(22,dV,2,0,"div",218)(23,gV,8,3,"div",219),He(),_(24,"div",220)(25,"h4",221),L(26,"Set Targets:"),I(),_(27,"div",222),ne(28,vV,5,2,"div",223)(29,wV,5,2,"div",223)(30,kV,5,2,"div",223)(31,IV,5,1,"div",223),I()(),ne(32,TV,8,1,"div",224),I()}if(r&2){let e,o,n,i=t.ngIf,s=O(2);N(6),Ft(" This Exercise (",((e=s.currentBaseExercise())==null?null:e.name)||"Current",") - Completed Sets (",s.allPreviousLoggedSetsForCurrentExercise().length,") "),N(),F("ngClass",ri(17,qS,s.showCompletedSetsForExerciseInfo())),N(2),F("ngIf",s.allPreviousLoggedSetsForCurrentExercise().length>0&&s.showCompletedSetsForExerciseInfo()),N(),F("ngIf",s.allPreviousLoggedSetsForCurrentExercise().length===0&&s.showCompletedSetsForExerciseInfo()),N(6),xe(" Today's Logged Sets (All Exercises) (",s.allPreviousLoggedSetsForCurrentSession().length,") "),N(),F("ngClass",ri(19,qS,s.showCompletedSetsForDayInfo())),N(2),F("ngIf",s.allPreviousLoggedSetsForCurrentSession().length>0&&s.showCompletedSetsForDayInfo()),N(),F("ngIf",s.allPreviousLoggedSetsForCurrentSession().length===0&&s.showCompletedSetsForDayInfo()),N(),F("ngIf",s.trackingService.findPreviousSetPerformance(s.lastPerformanceForCurrentExercise,i.setData,i.setIndex)),N(),F("ngIf",!s.lastPerformanceForCurrentExercise&&s.activeSetInfo()&&!(!((o=s.activeSetInfo())==null||o.exerciseData==null||o.exerciseData.exerciseId==null)&&o.exerciseData.exerciseId.startsWith("custom-"))),N(),F("ngIf",s.exercisePBs().length>0||s.currentBaseExercise()&&!(!((n=s.currentBaseExercise())==null||n.id==null)&&n.id.startsWith("custom-"))),N(5),F("ngIf",i.setData.reps!==void 0),N(),F("ngIf",i.setData.weight!==void 0&&i.setData.weight!==null),N(),F("ngIf",i.setData.duration!==void 0),N(),F("ngIf",i.setData.tempo),N(),F("ngIf",i.setData.notes)}}function NV(r,t){if(r&1){let e=me();_(0,"div",194)(1,"div",195)(2,"header",196)(3,"div",197),_e(),_(4,"svg",198),le(5,"path",199),I(),He(),_(6,"h3",200),L(7,"Performance Insights & Targets"),I()(),_(8,"button",161),oe("click",function(){Q(e);let n=O();return Z(n.closePerformanceInsights())}),_e(),_(9,"svg",201),le(10,"path",202),I()()(),ne(11,EV,33,21,"div",203),He(),_(12,"footer",204)(13,"button",205),oe("click",function(){Q(e);let n=O();return Z(n.closePerformanceInsights())}),L(14," Done "),I()()()()}if(r&2){let e=O();N(11),F("ngIf",e.activeSetInfo())}}function RV(r,t){if(r&1&&(_(0,"span",303),L(1),qe(2,"titlecase"),qe(3,"titlecase"),I()),r&2){let e=O().$implicit;N(),Ft("",ft(2,2,e.category)," ",e.primaryMuscleGroup?ft(3,4," - "+e.primaryMuscleGroup):"")}}function $V(r,t){if(r&1){let e=me();_(0,"li",298),oe("click",function(){let n=Q(e).$implicit,i=O(2);return Z(i.selectExerciseToAddFromModal(n))}),_(1,"div")(2,"span",299),L(3),I(),ne(4,RV,4,6,"span",300),I(),_e(),_(5,"svg",301),le(6,"path",302),I()()}if(r&2){let e=t.$implicit;N(3),Le(e.name),N(),F("ngIf",e.category)}}function PV(r,t){r&1&&(_(0,"li",304),L(1,"No exercises match your search."),I())}function AV(r,t){r&1&&(_(0,"li",304),L(1,"Exercise library is empty or still loading."),I())}function DV(r,t){if(r&1){let e=me();_(0,"div",280),oe("click",function(){Q(e);let n=O();return Z(n.closeExerciseSelectionModal())}),_(1,"div",281),oe("click",function(n){return Q(e),Z(n.stopPropagation())}),_(2,"div",282)(3,"div",283)(4,"h3",284),L(5,"Add Exercise to Session"),I(),_(6,"button",285),oe("click",function(){Q(e);let n=O();return Z(n.closeExerciseSelectionModal())}),_e(),_(7,"svg",286),le(8,"path",287),I()()(),He(),_(9,"div",288)(10,"input",289,6),oe("ngModelChange",function(n){Q(e);let i=O();return Z(i.modalSearchTerm.set(n))}),I()(),_(12,"div",290)(13,"ul",291),ne(14,$V,7,2,"li",292)(15,PV,2,0,"li",293)(16,AV,2,0,"li",293),I()(),_(17,"div",294)(18,"button",295),oe("click",function(){Q(e);let n=O();return Z(n.handleTrulyCustomExerciseEntry())}),L(19," Or, create a new custom exercise entry... "),I()()(),_(20,"div",296)(21,"button",297),oe("click",function(){Q(e);let n=O();return Z(n.closeExerciseSelectionModal())}),L(22," Cancel "),I()()()()}if(r&2){let e=O();N(10),F("ngModel",e.modalSearchTerm()),N(4),F("ngForOf",e.filteredAvailableExercises()),N(),F("ngIf",e.filteredAvailableExercises().length===0&&e.availableExercises.length>0),N(),F("ngIf",e.availableExercises.length===0)}}function FV(r,t){r&1&&(_(0,"div",305)(1,"p",306),L(2,"Loading workout player..."),I()())}function OV(r,t){if(r&1){let e=me();_(0,"app-modal",307),In("isOpenChange",function(n){Q(e);let i=O();return kn(i.isSimpleModalOpen,n)||(i.isSimpleModalOpen=n),Z(n)}),le(1,"app-exercise-detail",308),I()}if(r&2){let e=O();Cn("isOpen",e.isSimpleModalOpen),F("modalTitle",e.exerciseDetailsName),N(),F("id",e.exerciseDetailsId)("isModal",!0)}}var jS=(o=>(o.PerformingSet="performing_set",o.PresetCountdown="preset_countdown",o.Resting="resting",o))(jS||{}),mp=class r{route=Ae(Ia);router=Ae(ni);workoutService=Ae(Da);exerciseService=Ae(li);trackingService=Ae(ai);alertService=Ae(Pa);toastService=Ae(Aa);fb=Ae(zd);storageService=Ae(Gd);cdr=Ae(_a);unitService=Ae(ui);appSettingsService=Ae(US);platformId=Ae(wa);routine=we(void 0);program=we(void 0);sessionState=we("loading");PlayerSubState=jS;playerSubState=we("performing_set");currentExerciseIndex=we(0);currentSetIndex=we(0);currentBlockRound=we(1);totalBlockRounds=we(1);myExerciseInput;showNotes=we(!1);sessionTimerDisplay=we("00:00:00");workoutStartTime=0;sessionTimerElapsedSecondsBeforePause=0;timerSub;timedSetTimerState=we("idle");timedSetElapsedSeconds=we(0);timedSetIntervalSub;soundPlayedForThisCountdownSegment=!1;presetTimerCountdownDisplay=we(null);presetTimerDuration=we(0);presetTimerSub;isRestTimerVisible=we(!1);restDuration=we(0);restTimerDisplay=we(null);restTimerMainText=we("RESTING");restTimerNextUpText=we(null);nextActionButtonLabel=Nt(()=>{switch(this.playerSubState()){case"preset_countdown":return"GETTING READY...";case"resting":return"RESTING...";case"performing_set":default:return"SET DONE"}});currentSetForm;lastPerformanceForCurrentExercise=null;editingTarget=null;editingTargetValue="";routineId=null;isExerciseModalOpen=we(!1);availableExercises=[];modalSearchTerm=we("");filteredAvailableExercises=Nt(()=>{let t=this.modalSearchTerm().toLowerCase();return t?this.availableExercises.filter(e=>e.name.toLowerCase().includes(t)||e.category.toLowerCase().includes(t)||e.primaryMuscleGroup&&e.primaryMuscleGroup.toLowerCase().includes(t)):this.availableExercises});PAUSED_WORKOUT_KEY="fitTrackPro_pausedWorkoutState";PAUSED_STATE_VERSION="1.2";originalRoutineSnapshot=[];currentWorkoutLogExercises=we([]);wasRestTimerVisibleOnPause=!1;restTimerRemainingSecondsOnPause=0;restTimerInitialDurationOnPause=0;restTimerMainTextOnPause="RESTING";restTimerNextUpTextOnPause=null;wasTimedSetRunningOnPause=!1;autoSaveSub;AUTO_SAVE_INTERVAL_MS=8e3;isSessionConcluded=!1;routerEventsSub;isInitialLoadComplete=!1;exercisesProposedThisCycle={doLater:!1,skipped:!1};intervalListItems;isTabataMode=we(!1);tabataIntervals=we([]);currentTabataIntervalIndex=we(0);tabataTimeRemaining=we(0);currentTabataInterval=Nt(()=>{let t=this.tabataIntervals(),e=this.currentTabataIntervalIndex();return t[e]||null});tabataIntervalMap=[];tabataTimerSub;HEADER_OVERVIEW_STRING="JUMP TO EXERCISE";headerOverviewString="JUMP TO EXERCISE";shouldStartWithPresetTimer=Nt(()=>{let t=this.activeSetInfo();if(!t)return!1;let e=this.appSettingsService.enablePresetTimer(),o=this.appSettingsService.presetTimerDurationSeconds();if(!e||o<=0)return!1;let n=this.routine(),i=t.exerciseIndex,s=t.setIndex;if(!n||!n.exercises[i]||!n.exercises[i].sets[s])return!1;let a=i===0&&s===0&&this.currentBlockRound()===1,l=1/0;if(s>0)l=n.exercises[i].sets[s-1].restAfterSet;else if(i>0){let u=n.exercises[i-1];l=u.sets[u.sets.length-1].restAfterSet}return a||l===0});checkIfLatestOfEverything(){let t=this.checkIfLatestSetOfExercise(),e=this.checkIfLatestSetOfRound(),o=this.checkIfLatestRoundOfRounds();return this.checkIfLatestSetOfWorkoutConsideringPending()&&o&&t&&e}checkIfSuperSetIsStarted(){let t=this.routine()?.exercises,e=this.activeSetInfo()?.exerciseIndex,o=t&&e!==void 0?t[e]:void 0;return this.checkIfSetIsPartOfRounds()&&(e??0)>0}mainActionButtonLabel=Nt(()=>{let t=this.activeSetInfo(),e=this.routine();switch(this.playerSubState()){case"preset_countdown":return`PREPARING... ${this.presetTimerCountdownDisplay()}s`;case"resting":return`RESTING: ${this.restTimerDisplay()}`;case"performing_set":if(!t)return"SET DONE";let o=this.checkIfLatestSetOfExercise(),n=this.checkIfLatestSetOfRound(),i=this.checkIfSetIsPartOfRounds(),s=this.checkIfLatestRoundOfRounds();return this.checkIfLatestSetOfWorkoutConsideringPending()&&s&&o&&n?"FINISH WORKOUT":i?n?s?"COMPLETE EXERCISE":"COMPLETE ROUND":"SET DONE":o?"COMPLETE EXERCISE":"SET DONE";default:return"SET DONE"}});destroy$=new fS;routeSub;rpeValue=we(null);rpeOptions=Array.from({length:10},(t,e)=>e+1);showRpeSlider=we(!1);timedSetDisplay=Nt(()=>{let t=this.timedSetTimerState(),e=this.timedSetElapsedSeconds(),n=this.activeSetInfo()?.setData?.duration;return t==="idle"?(n!==void 0&&n>0?n:this.csf?.actualDuration?.value??0).toString():n!==void 0&&n>0?(n-e).toString():e.toString()});isTimedSetOvertime=Nt(()=>{if(this.timedSetTimerState()==="idle")return!1;let e=this.timedSetElapsedSeconds(),o=this.activeSetInfo()?.setData?.duration;return o!==void 0&&o>0&&e>o});unloadNotification(t){this.closeWorkoutMenu(),this.sessionState()==="playing"&&this.routine()&&this.currentWorkoutLogExercises().length>0&&this.captureAndSaveStateForUnload()}get weightUnitDisplaySymbol(){return this.unitService.getUnitLabel()}getWorkingSetCountForCurrentExercise=Nt(()=>{let t=this.routine(),e=this.currentExerciseIndex();return t&&t.exercises[e]?t.exercises[e].sets.filter(o=>o.type!=="warmup").length:0});getCurrentWorkingSetNumber=Nt(()=>{let t=this.activeSetInfo(),e=this.routine();if(!t||!e||t.type==="warmup")return 0;let o=e.exercises[t.exerciseIndex],n=0;for(let i=0;i<=t.setIndex;i++)o.sets[i].type!=="warmup"&&n++;return n});getCurrentWarmupSetNumber=Nt(()=>{let t=this.activeSetInfo(),e=this.routine();if(!t||!e||t.type!=="warmup")return 0;let o=e.exercises[t.exerciseIndex],n=0;for(let i=0;i<=t.setIndex;i++)o.sets[i].type==="warmup"&&n++;return n});getWorkingSets(t){return t.sets?t.sets.filter(e=>e.type!=="warmup").length:1}activeSetInfo=Nt(()=>{let t=this.routine(),e=this.currentExerciseIndex(),o=this.currentSetIndex();if(t&&t.exercises[e]&&t.exercises[e].sets[o]){let n=t.exercises[e],i=t.exercises[e].sets[o],a=this.currentWorkoutLogExercises().find(l=>l.exerciseId===n.exerciseId)?.sets.find(l=>l.plannedSetId===i.id);return{exerciseIndex:e,setIndex:o,exerciseData:n,setData:i,type:i.type??"standard",baseExerciseInfo:void 0,isCompleted:!!a,actualReps:a?.repsAchieved,actualWeight:a?.weightUsed,actualDuration:a?.durationPerformed,notes:a?.notes||i?.notes}}return null});currentBaseExercise=we(void 0);exercisePBs=we([]);allPreviousLoggedSetsForCurrentExercise=Nt(()=>{let t=this.activeSetInfo();if(!t||t.setIndex===0)return[];let e=this.currentWorkoutLogExercises().find(o=>o.exerciseId===t.exerciseData.exerciseId);if(e&&e.sets.length>0){let o=[];for(let n=0;n<t.setIndex;n++){let i=t.exerciseData.sets[n]?.id;if(i){let s=e.sets.find(a=>a.plannedSetId===i);s&&o.push(s)}}return o}return[]});allPreviousLoggedSetsForCurrentSession=Nt(()=>{let t=this.activeSetInfo();if(!t)return[];let e=[];for(let o of this.currentWorkoutLogExercises())for(let n of o.sets){let i=this.routine();if(!i)continue;let s=i.exercises.findIndex(c=>c.exerciseId===o.exerciseId),a=i.exercises.find(c=>c.exerciseId===o.exerciseId),l=a?.sets.find(c=>c.id===n.plannedSetId),u=l?a?.sets.findIndex(c=>c.id===l.id):-1;if(u!==void 0&&u>=0&&(n.plannedSetId=u+1+" of "+a?.sets.length),!(s<0)){if(s<t.exerciseIndex)e.push(n);else if(s===t.exerciseIndex){let c=i.exercises[s].sets.findIndex(p=>p.id===n.plannedSetId);c>-1&&c<t.setIndex&&e.push(n)}}}return e});isWorkoutMenuVisible=we(!1);isPerformanceInsightsVisible=we(!1);showCompletedSetsInfo=we(!1);isPerformingDeferredExercise=!1;lastActivatedDeferredExerciseId=null;constructor(){this.initializeCurrentSetForm(),ES(()=>{let t=this.currentTabataIntervalIndex();this.intervalListItems&&this.intervalListItems.length>t&&this.intervalListItems.toArray()[t].nativeElement.scrollIntoView({behavior:"smooth",block:"start"})})}resetAndPatchCurrentSetForm(){this.currentSetForm.reset({rpe:null,setNotes:""}),this.rpeValue.set(null),this.showRpeSlider.set(!1),this.resetTimedSet(),this.patchActualsFormBasedOnSessionTargets()}startSessionTimer(){this.sessionState()!=="paused"&&(this.timerSub&&this.timerSub.unsubscribe(),this.timerSub=sp(0,1e3).pipe(Jn(this.destroy$)).subscribe(()=>{if(this.sessionState()==="playing"){let t=Math.floor((Date.now()-this.workoutStartTime)/1e3),e=this.sessionTimerElapsedSecondsBeforePause+t,o=Math.floor(e/3600),n=Math.floor(e%3600/60),i=e%60;this.sessionTimerDisplay.set(`${String(o).padStart(2,"0")}:${String(n).padStart(2,"0")}:${String(i).padStart(2,"0")}`)}}))}updateRestTimerDisplay(t){let e=Math.floor(t/60),o=t%60;this.restTimerDisplay.set(`${String(e).padStart(2,"0")}:${String(o).padStart(2,"0")}`)}addLoggedSetToCurrentLog(t,e){let o=this.currentWorkoutLogExercises(),n=this.routine()?.exercises.findIndex(a=>a.id===t.id),i,s=-1;for(let a=0;a<o.length;a++){let l=o[a],u=this.routine()?.exercises.find(c=>c.id===t.id);if(l.exerciseId===t.exerciseId&&u&&u.id===t.id&&u.id===l.id){i=l,s=a;break}}if(i){let a=i.sets.findIndex(l=>l.plannedSetId===e.plannedSetId);a>-1?i.sets[a]=e:i.sets.push(e)}else{let a=this.currentBaseExercise()?.name||t.exerciseName||"Unknown Exercise",l={id:t.id,exerciseId:t.exerciseId,exerciseName:a,sets:[e],rounds:t.rounds||0,type:e.type||"standard"};t.rounds&&t.rounds>0&&(l.supersetId=t.supersetId?t.supersetId:null,l.supersetOrder=t.supersetOrder!==null?t.supersetOrder:null,l.supersetSize=t.supersetSize!==null?t.supersetSize:null,l.supersetRounds=t.rounds!==null?t.rounds:null),typeof n=="number"&&n>=0&&n<=o.length?o.splice(n,0,l):o.push(l)}this.currentWorkoutLogExercises.set([...o])}finishWorkout(){return j(this,null,function*(){yield this.finishWorkoutAndReportStatus()})}comparePerformedToOriginal(t,e){let o=[],n=!1,i=e.filter(c=>t.some(p=>p.exerciseId===c.exerciseId)),s=new Set(e.map(c=>c.exerciseId)),a=new Set(e.map(c=>c.exerciseName)),l=[],u=[];for(let c of t)s.has(c.exerciseId)||a.has(c.exerciseName)?l.push(c):u.push(c);if((l.length!==e.length||u.length>0)&&(o.push(`Number of exercises or their content changed [Original number exercises: ${e.length}, performed number exercises: ${l.length}].`),n=!0),u.length>0)for(let c of u)o.push(`${c.exerciseName} exercise added.`);for(let c of e){let p=t.find(d=>d.exerciseId===c.exerciseId);if(!p){o.push(`Exercise "${c.exerciseName||c.exerciseId}" was in the plan but not performed.`),n=!0;continue}if(p.sets.length!==c.sets.length&&p.rounds!==c.rounds)o.push(`Set count for "${p.exerciseName||p.exerciseId}" changed (was ${c.sets.length}, now ${p.sets.length}).`),n=!0;else for(let d=0;d<p.sets.length;d++){let m=c.sets[d]?.type==="warmup",f=p.sets[d]?.type==="warmup";if(m!==f){o.push(`Warm-up status for set ${d+1} of "${p.exerciseName}" changed.`),n=!0;break}}}return{majorDifference:n,details:o}}convertLoggedToWorkoutExercises(t){let e=this.routine();return t.map(o=>{let n=e?.exercises.find(s=>s.exerciseId===o.exerciseId);return{id:Bt(),exerciseId:o.exerciseId,exerciseName:o.exerciseName,supersetId:n?.supersetId||null,supersetOrder:n?.supersetOrder??null,supersetSize:n?.supersetSize??null,rounds:n?.rounds??1,notes:n?.notes,sets:o.sets.map(s=>{let a=n?.sets.find(l=>l.id===s.plannedSetId);return{id:Bt(),reps:s.targetReps??s.repsAchieved,weight:s.targetWeight??s.weightUsed,duration:s.targetDuration??s.durationPerformed,tempo:s.targetTempo||a?.tempo,restAfterSet:a?.restAfterSet||60,notes:s.notes,type:s.type}}),type:(n?.supersetSize??0)>=1?"superset":"standard"}})}get csf(){return this.currentSetForm.controls}toggleTimedSetTimer(){if(this.sessionState()==="paused"){this.toastService.warning("Session is paused. Please resume to use the timer",3e3,"Paused");return}let t=this.timedSetTimerState();t==="idle"||t==="paused"?this.startOrResumeTimedSet():t==="running"&&this.pauseTimedSet()}startOrResumeTimedSet(){if(this.timedSetTimerState()==="idle"){this.timedSetElapsedSeconds.set(0);let t=this.activeSetInfo()?.setData?.duration;t!==void 0&&t>0&&this.currentSetForm.get("actualDuration")?.setValue(t,{emitEvent:!1}),this.soundPlayedForThisCountdownSegment=!1}this.timedSetTimerState.set("running"),this.timedSetIntervalSub&&this.timedSetIntervalSub.unsubscribe(),this.timedSetIntervalSub=sp(0,1e3).pipe(Jn(this.destroy$)).subscribe(()=>{if(this.timedSetTimerState()==="running"){this.timedSetElapsedSeconds.update(s=>s+1);let t=this.timedSetElapsedSeconds();this.currentSetForm.get("actualDuration")?.setValue(t,{emitEvent:!1});let o=this.activeSetInfo()?.setData?.duration,n=this.appSettingsService.enableTimerCountdownSound(),i=this.appSettingsService.countdownSoundSeconds();if(n&&o&&o>20&&t>0){let s=o-t;s<=i&&s>=0&&(s===0?(this.playClientGong(),this.soundPlayedForThisCountdownSegment=!0):this.playClientBeep())}}else this.timedSetIntervalSub&&this.timedSetIntervalSub.unsubscribe()})}pauseTimedSet(){this.timedSetIntervalSub&&(this.timedSetIntervalSub.unsubscribe(),this.timedSetIntervalSub=void 0),this.timedSetTimerState.set("paused")}resetTimedSet(){this.timedSetIntervalSub&&(this.timedSetIntervalSub.unsubscribe(),this.timedSetIntervalSub=void 0),this.timedSetTimerState.set("idle"),this.timedSetElapsedSeconds.set(0);let t=this.activeSetInfo()?.setData?.duration;this.currentSetForm.get("actualDuration")?.setValue(t??0,{emitEvent:!1}),this.soundPlayedForThisCountdownSegment=!1}stopAndLogTimedSet(){(this.timedSetTimerState()==="running"||this.timedSetTimerState()==="paused")&&this.pauseTimedSet()}checkIfLatestSetOfExercise(){let t=this.activeSetInfo(),e=this.routine();if(!t||!e)return!1;if(t.exerciseData.sessionStatus&&t.exerciseData.sessionStatus!=="pending")return!0;let o=e.exercises[t.exerciseIndex];if(t.setIndex===o.sets.length-1)return!0;for(let n=t.setIndex+1;n<o.sets.length;n++)if(o.sets[n].type!=="warmup")return!1;return!0}checkIfLatestSetOfRound(){let t=this.activeSetInfo(),e=this.routine();if(!t||!e)return!1;let o=e.exercises[t.exerciseIndex];if(!o.supersetId&&(!o.rounds||o.rounds<=1))return this.checkIfLatestSetOfExercise();let n=t.exerciseIndex,i=t.exerciseIndex;return o.supersetId&&o.supersetOrder!==null&&(n=t.exerciseIndex-o.supersetOrder,i=n+(o.supersetSize?o.supersetSize-1:0)),t.exerciseIndex===i&&t.setIndex===e.exercises[i].sets.length-1}checkIfLatestRoundOfRounds(){let t=this.routine(),e=this.activeSetInfo();if(!t||!e)return!1;let o=t.exercises[e.exerciseIndex];if(!o)return!1;let n=o.rounds??1;return o.supersetId&&o.supersetOrder!==null&&(n=t.exercises.find(s=>s.supersetId===o.supersetId&&s.supersetOrder===0)?.rounds??1),this.currentBlockRound()===n}checkIfSetIsPartOfRounds(){let t=this.activeSetInfo(),e=this.routine();if(!t||!e)return!1;let o=e.exercises[t.exerciseIndex];if(!o)return!1;let n=1;return o.supersetId?n=e.exercises.find(s=>s.supersetId===o.supersetId&&s.supersetOrder===0)?.rounds??1:n=o.rounds??1,n>1}checkIfLatestSetOfWorkout(){return this.checkIfLatestSetOfWorkoutConsideringPending()}checkIfLatestSetOfWorkoutConsideringPending(){let t=this.activeSetInfo(),e=this.routine();if(!t||!e||!this.checkIfLatestSetOfExercise()||this.checkIfSetIsPartOfRounds()&&!this.checkIfLatestRoundOfRounds())return!1;let o=t.exerciseData,n=t.exerciseIndex;o.supersetId&&o.supersetOrder!==null&&o.supersetSize&&(n=t.exerciseIndex-o.supersetOrder+(o.supersetSize-1));for(let s=n+1;s<e.exercises.length;s++){let a=e.exercises[s];if(a.sessionStatus==="pending"&&(a.sets?.length??0)>0)return!1}return!e.exercises.some(s=>(s.sessionStatus==="do_later"||s.sessionStatus==="skipped")&&!this.isExerciseFullyLogged(s))}getUnfinishedOrDeferredExercises(t){let e=t.exercises[this.currentExerciseIndex()],o=this.getUnfinishedExercises().filter(a=>a.id!==e.id),n=t.exercises.map((a,l)=>er(Ht({},a),{originalIndex:l})).filter((a,l)=>(a.sessionStatus==="do_later"||a.sessionStatus==="skipped")&&!this.isExerciseFullyLogged(a)).sort((a,l)=>a.sessionStatus==="do_later"&&l.sessionStatus==="skipped"?-1:a.sessionStatus==="skipped"&&l.sessionStatus==="do_later"?1:a.originalIndex-l.originalIndex),i=o.map((a,l)=>er(Ht({},a),{originalIndex:t.exercises.findIndex(u=>u.id===a.id)})),s=[...n,...i].filter((a,l,u)=>u.findIndex(c=>c.id===a.id)===l);return s.sort((a,l)=>{let u=t.exercises.findIndex(p=>p.id===a.id),c=t.exercises.findIndex(p=>p.id===l.id);return u-c}),s}tryProceedToDeferredExercisesOrFinish(t){return j(this,null,function*(){let e=this.getUnfinishedOrDeferredExercises(t);if(e.length>0){let n=!1,i,s=!1,a=!1;if(e.length===1){let l=e[0],u=yield this.alertService.showConfirmationDialog(`Unfinished: ${l.exerciseName}`,`You have "${l.exerciseName}" (${l.sessionStatus==="do_later"?"Do Later":"Skipped"}) remaining. Complete it now?`,[{text:"Complete It",role:"confirm",data:l.originalIndex,cssClass:"bg-blue-500 hover:bg-blue-600 text-white"},{text:"Finish Workout",role:"destructive",data:"finish_now",cssClass:"bg-green-500 hover:bg-green-600 text-white"}]);u&&typeof u.data=="number"?(n=!0,i=u.data):u&&u.data==="finish_now"?s=!0:a=!0}else{let u=[...e.map(p=>{let d=this.getExerciseStatusIndicator(p),m=this.getExerciseButtonCssClass(p,p.sessionStatus);return{text:`${p.exerciseName} ${d}`,role:"confirm",data:p.originalIndex,cssClass:m}}),{text:"Finish Workout Now",role:"destructive",data:"finish_now",cssClass:"bg-green-500 hover:bg-green-600 text-white mt-4"}],c=yield this.alertService.showConfirmationDialog("Unfinished Exercises","You have unfinished exercises. Would you like to complete any of them now, or finish the workout?",u);c&&typeof c.data=="number"?(n=!0,i=c.data):c&&c.data==="finish_now"?s=!0:a=!0}if(s){yield this.finishWorkoutAndReportStatus();return}if(a){e.forEach(l=>{l.sessionStatus==="do_later"&&(this.exercisesProposedThisCycle.doLater=!0),l.sessionStatus==="skipped"&&(this.exercisesProposedThisCycle.skipped=!0)}),this.cdr.detectChanges();return}if(n&&i!==void 0){let l=t.exercises[i];this.isPerformingDeferredExercise=!0,this.lastActivatedDeferredExerciseId=l.id;let u=JSON.parse(JSON.stringify(t));u.exercises[i].sessionStatus="pending",this.routine.set(u),this.currentExerciseIndex.set(i),this.currentSetIndex.set(this.findFirstUnloggedSetIndex(l.id,l.sets.map(p=>p.id))||0),this.currentBlockRound.set(1);let c=u.exercises[i];if(!c.supersetId||c.supersetOrder===0)this.totalBlockRounds.set(c.rounds??1);else{let p=u.exercises.find(d=>d.supersetId===c.supersetId&&d.supersetOrder===0);this.totalBlockRounds.set(p?.rounds??1)}this.lastPerformanceForCurrentExercise=null,this.playerSubState.set("performing_set"),yield this.prepareCurrentSet();return}}let o=yield this.alertService.showConfirmationDialog("Continue or End","The current session is finished! Would you like to add a new exercise or complete it?",[{text:"Add exercise",role:"add_exercise",data:"add_exercise",cssClass:"bg-primary hover:bg-primary-dark text-white"},{text:"End session",role:"end_session",data:"end_session",cssClass:"bg-blue-500 hover:bg-blue-600 text-white"}]);o&&o.role==="end_session"?yield this.finishWorkoutAndReportStatus():(this.isEndReached.set(!0),this.openExerciseSelectionModal())})}getNumberOfLoggedSets(t,e){let o=this.currentWorkoutLogExercises().find(n=>n.id===t);return o?e?o.sets?o.sets.filter(n=>n.type!==e).length:1:o.sets?.length||0:0}isExercisePartiallyLogged(t){let e=this.routine();if(!e)return!1;let o=e.exercises.find(a=>a.exerciseId===t.exerciseId&&a.id===t.id);if(!o)return!1;let n=this.currentWorkoutLogExercises().find(a=>a.exerciseId===t.exerciseId&&o.exerciseId===a.exerciseId&&a.id===t.id);if(!n||n.sets.length===0)return!1;let i=o.rounds??1;o.supersetId&&o.supersetOrder!==null&&(i=e.exercises.find(l=>l.supersetId===o.supersetId&&l.supersetOrder===0)?.rounds??1);let s=(o.sets?.length??0)*i;return n.sets.length<s}isExerciseFullyLogged(t){let e=this.routine();if(!e)return!1;let o=e.exercises.find(a=>a.id===t.id);if(!o)return!1;let n=this.currentWorkoutLogExercises().find(a=>a.id===t.id&&o.exerciseId===a.exerciseId);if(!n)return!1;let i=o.rounds??1;o.supersetId&&o.supersetOrder!==null&&(i=e.exercises.find(l=>l.supersetId===o.supersetId&&l.supersetOrder===0)?.rounds??1);let s=(o.sets?.length??0)*i;return n.sets.length>=s}findFirstUnloggedSetIndex(t,e){let o=this.currentWorkoutLogExercises().find(i=>i.id===t);if(!o)return 0;let n=new Set(o.sets.map(i=>i.plannedSetId));for(let i=0;i<e.length;i++)if(!n.has(e[i]))return i;return null}fetchLastPerformanceAndPatchForm(){return j(this,null,function*(){yield this.prepareCurrentSet()})}patchCurrentSetFormWithData(t){this.patchActualsFormBasedOnSessionTargets()}startEditTarget(t){let e=this.activeSetInfo();if(e)switch(this.editingTarget=t,t){case"reps":this.editingTargetValue=e.setData.reps??"";break;case"weight":this.editingTargetValue=e.setData.weight??"";break;case"duration":this.editingTargetValue=e.setData.duration??"";break}}cancelEditTarget(){this.editingTarget=null,this.editingTargetValue=""}formatPbValue(t){let e="";return t.weightUsed!==void 0&&t.weightUsed!==null?(e+=`${t.weightUsed}${this.unitService.getUnitSuffix()}`,t.repsAchieved>1&&!t.pbType.includes("RM (Actual)")&&(e+=` x ${t.repsAchieved}`)):t.repsAchieved>0&&t.pbType.includes("Max Reps")?e=`${t.repsAchieved} reps`:t.durationPerformed&&t.durationPerformed>0&&t.pbType.includes("Max Duration")&&(e=`${t.durationPerformed}s`),e||"N/A"}initializeCurrentSetForm(){this.currentSetForm=this.fb.group({actualReps:[null,[ut.min(0)]],actualWeight:[null,[ut.min(0)]],actualDuration:[null,[ut.min(0)]],setNotes:[""],rpe:[null,[ut.min(1),ut.max(10)]]})}isEntireWorkoutFullyLogged(t,e){return t.exercises.length!==e.length?!1:t.exercises.every(o=>{let n=e.find(s=>s.id===o.id);if(!n)return!1;let i=(o.sets?.length??0)*(o.rounds??1);return n.sets.length>=i})}prepareCurrentSet(){return j(this,null,function*(){if(this.showNotes.set(!1),console.log("prepareCurrentSet: START"),this.sessionState()==="paused"){console.log("prepareCurrentSet: Session is paused, deferring preparation");return}let t=this.routine();if(!t||t.exercises.length===0){console.warn("prepareCurrentSet: No sessionRoutine or no exercises in routine. Current routine:",t),this.sessionState.set("error"),this.toastService.error("Cannot prepare set: Routine data is missing or empty",0,"Error");return}let e=this.currentExerciseIndex(),o=this.currentSetIndex();if(console.log(`prepareCurrentSet: Initial target - exIndex: ${e}, sIndex: ${o}, sessionStatus: ${t.exercises[e]?.sessionStatus}`),t.exercises[e]?.sessionStatus!=="pending"){console.log(`prepareCurrentSet: Initial target Ex ${e} (name: ${t.exercises[e]?.exerciseName}) is ${t.exercises[e]?.sessionStatus}. Finding first 'pending'.`);let b=this.findFirstPendingExerciseAndSet(t);if(b)e=b.exerciseIndex,o=b.setIndex,this.currentExerciseIndex.set(e),this.currentSetIndex.set(o),this.isPerformingDeferredExercise=!1,console.log(`prepareCurrentSet: Found first pending - exIndex: ${e} (name: ${t.exercises[e]?.exerciseName}), sIndex: ${o}`);else{console.log("prepareCurrentSet: No 'pending' exercises found in the entire routine. Proceeding to deferred/finish evaluation"),this.exercisesProposedThisCycle={doLater:!1,skipped:!1},yield this.tryProceedToDeferredExercisesOrFinish(t);return}}if(e>=t.exercises.length||!t.exercises[e]||o>=t.exercises[e].sets.length||!t.exercises[e].sets[o]){console.warn(`prepareCurrentSet: Indices [ex: ${e}, set: ${o}] are out of bounds. This is expected for a completed session. Transitioning to finish flow.`),this.currentSetForm.reset({rpe:null,setNotes:""}),this.resetTimedSet(),this.currentBaseExercise.set(null),this.exercisePBs.set([]),this.lastPerformanceForCurrentExercise=null,this.rpeValue.set(null),this.showRpeSlider.set(!1),yield this.tryProceedToDeferredExercisesOrFinish(t);return}let n=!1;t.exercises.length===this.currentWorkoutLogExercises().length&&(n=!0),t.exercises.forEach(b=>{let T=this.currentWorkoutLogExercises().find(R=>R.id===b.id);!n&&T&&b.sets.length===T.sets.length&&(n=!0)});let i=t.exercises[e],s=i.sets[o];console.log(`prepareCurrentSet: Preparing for Ex: "${i.exerciseName}", Set: ${o+1}, Type: ${s.type}`);let l=(this.originalRoutineSnapshot.find(b=>b.exerciseId===i.exerciseId)||i)?.sets[o]||s;this.loadBaseExerciseAndPBs(i.exerciseId),(!this.lastPerformanceForCurrentExercise||this.lastPerformanceForCurrentExercise.sets[0]?.exerciseId!==i.exerciseId)&&(this.lastPerformanceForCurrentExercise=yield ba(this.trackingService.getLastPerformanceForExercise(i.exerciseId).pipe(hr(1))));let u=this.trackingService.findPreviousSetPerformance(this.lastPerformanceForCurrentExercise,l,o),c;l.type==="warmup"?c=Ht({},l):c=this.workoutService.suggestNextSetParameters(u,l,t.goal),c.id=s.id,c.type=s.type,c.notes=s.notes||c.notes;let p=JSON.parse(JSON.stringify(t));p.exercises[e].sets?.some(b=>b.duration)||(p.exercises[e].sets[o]=c),this.routine.set(p),this.patchActualsFormBasedOnSessionTargets();let d=this.appSettingsService.enablePresetTimer(),m=this.appSettingsService.enablePresetTimerAfterRest(),f=this.appSettingsService.presetTimerDurationSeconds(),g=this.currentWorkoutLogExercises().length===0&&this.currentBlockRound()===1&&e===this.findFirstPendingExerciseAndSet(t)?.exerciseIndex&&o===this.findFirstPendingExerciseAndSet(t)?.setIndex,x=1/0;if(o>0)x=i.sets[o-1].restAfterSet;else if(e>0){let b=e-1,T=!1;for(;b>=0;){if(this.isExerciseFullyLogged(t.exercises[b])||t.exercises[b].sessionStatus==="pending"&&this.currentWorkoutLogExercises().some(R=>R.exerciseId===t.exercises[b].exerciseId)){let R=t.exercises[b];R.sets.length>0&&(x=R.sets[R.sets.length-1].restAfterSet,T=!0);break}b--}T||(x=1/0)}if(d&&f>0&&(this.playerSubState()!=="resting"&&(g||x===0)||m)){console.log("prepareCurrentSet: Starting pre-set timer for:",i.exerciseName,"Set:",o+1),this.playerSubState.set("preset_countdown");let b=this.activeSetInfo();b?this.startPresetTimer(f,b):(console.error("prepareCurrentSet: ActiveSetInfo is null before starting preset timer. Aborting preset"),this.playerSubState.set("performing_set"))}else console.log("prepareCurrentSet: No pre-set timer, setting to PerformingSet for:",i.exerciseName,"Set:",o+1),this.playerSubState.set("performing_set");this.sessionState()!=="playing"&&this.sessionState()!=="paused"&&(console.log("prepareCurrentSet: Setting sessionState to Playing"),this.sessionState.set("playing")),console.log("prepareCurrentSet: END")})}findFirstPendingExerciseAndSet(t){if(!t||!t.exercises)return null;for(let e=0;e<t.exercises.length;e++){let o=t.exercises[e];if(o.sessionStatus==="pending"&&o.sets&&o.sets.length>0){let n=this.findFirstUnloggedSetIndex(o.id,o.sets.map(i=>i.id))??0;if(n<o.sets.length)return{exerciseIndex:e,setIndex:n};console.warn(`Exercise ${o.exerciseName} is pending, but all sets appear logged or index is invalid.`)}}return null}patchActualsFormBasedOnSessionTargets(){if(this.sessionState()==="paused"){console.log("patchActualsFormBasedOnSessionTargets: Session is paused, deferring preparation");return}this.currentSetForm.patchValue({rpe:null},{emitEvent:!1}),this.rpeValue.set(null),this.showRpeSlider.set(!1),this.resetTimedSet();let t=this.activeSetInfo();if(!t)return;let o=this.currentWorkoutLogExercises().find(s=>s.exerciseId===t.exerciseData.exerciseId)?.sets.find(s=>s.plannedSetId===t.setData.id),n=t.setData.duration??null;o&&o.durationPerformed!==void 0&&(n=o.durationPerformed);let i=t.setData.weight;if(i==null){let a=(this.currentWorkoutLogExercises().find(l=>l.exerciseId===t.exerciseData.exerciseId)?.sets||[]).filter(l=>{let u=t.exerciseData.sets.find(c=>c.id===l.plannedSetId);return u&&t.exerciseData.sets.indexOf(u)<t.setIndex}).sort((l,u)=>t.exerciseData.sets.findIndex(c=>c.id===l.plannedSetId)-t.exerciseData.sets.findIndex(c=>c.id===u.plannedSetId));if(a.length>0){let l=a[a.length-1];l.weightUsed!==null&&l.weightUsed!==void 0&&(i=l.weightUsed,t.type)}else t.type==="warmup"&&(t.setData.weight===null||t.setData.weight===void 0)&&(i=t.setData.weight??null)}o?(this.currentSetForm.patchValue({actualReps:o.repsAchieved,actualWeight:o.weightUsed,actualDuration:n,setNotes:o.notes??"",rpe:o.rpe},{emitEvent:!1}),o.rpe&&this.rpeValue.set(o.rpe)):this.currentSetForm.patchValue({actualReps:t.setData.reps??(t.type==="warmup"?8:null),actualWeight:i??null,actualDuration:n,setNotes:t.setData.notes||(t.type==="warmup"?"Warm-up":""),rpe:null},{emitEvent:!1})}editRepsWithPrompt(){return j(this,null,function*(){if(this.getDisabled()||this.playerSubState()!=="performing_set"){this.toastService.warning("Cannot edit reps now",2e3);return}if(!this.activeSetInfo())return;let e=this.csf.actualReps.value,o=yield this.alertService.showPromptDialog("Enter Reps","",[{name:"newReps",type:"number",placeholder:`Current: ${e??"0"}`,value:e??void 0,autofocus:!0,attributes:{step:.5,min:"0",inputmode:"decimal"}}],"Set Reps");if(o&&o.newReps!==void 0&&o.newReps!==null){let n=parseFloat(String(o.newReps));!isNaN(n)&&n>=0?this.currentSetForm.patchValue({actualReps:n}):this.toastService.error("Invalid reps entered.",3e3,"Error")}})}editWeightWithPrompt(){return j(this,null,function*(){if(this.getDisabled()||this.playerSubState()!=="performing_set"){this.toastService.warning("Cannot edit weight now",2e3);return}if(!this.activeSetInfo())return;let e=this.csf.actualWeight.value,o=yield this.alertService.showPromptDialog("Enter Weight","",[{name:"newWeight",type:"number",autofocus:!0,placeholder:`Current: ${e??"0"} ${this.weightUnitDisplaySymbol}`,value:e??void 0,attributes:{step:.5,min:"0",inputmode:"decimal"}}],"Set Weight");if(o&&o.newWeight!==void 0&&o.newWeight!==null){let n=parseFloat(String(o.newWeight));!isNaN(n)&&n>=0?this.currentSetForm.patchValue({actualWeight:n}):this.toastService.error("Invalid weight entered.",3e3,"Error")}})}loadBaseExerciseAndPBs(t){if(t.startsWith("custom-exercise-")){this.currentBaseExercise.set({id:t,name:this.activeSetInfo()?.exerciseData.exerciseName||"Custom Exercise",category:"custom",description:"",iconName:"custom-exercise",muscleGroups:[],primaryMuscleGroup:"",equipment:"",imageUrls:[]}),this.exercisePBs.set([]);return}this.currentBaseExercise.set(void 0),this.exercisePBs.set([]),this.exerciseService.getExerciseById(t).subscribe(e=>{this.currentBaseExercise.set(e?er(Ht({},e),{iconName:this.exerciseService.determineExerciseIcon(e,e?.name)}):null)}),this.trackingService.getAllPersonalBestsForExercise(t).pipe(hr(1)).subscribe(e=>this.exercisePBs.set(e))}confirmEditTarget(){let t=this.activeSetInfo();if(!t||this.editingTarget===null)return;let e=parseFloat(this.editingTargetValue);if(isNaN(e)||e<0){this.toastService.error(`Invalid value for ${this.editingTarget}. Must be non-negative.`,3e3,"Input Error");return}let o=this.routine,n=o();if(!n)return;let i=JSON.parse(JSON.stringify(n)),a=i.exercises[t.exerciseIndex].sets[t.setIndex];switch(this.editingTarget){case"reps":a.reps=e;break;case"weight":a.weight=e;break;case"duration":a.duration=e;break}o.set(i),this.toastService.success(`Target ${this.editingTarget} updated to ${e}.`,3e3,"Target Updated"),this.cancelEditTarget(),this.patchActualsFormBasedOnSessionTargets()}completeAndLogCurrentSet(){let t=this.activeSetInfo(),e=this.routine();if(!t||!e){this.toastService.error("Cannot log set: data unavailable",0);return}if(t.setData.duration&&t.setData.duration>0&&(this.timedSetTimerState()==="running"||this.timedSetTimerState()==="paused")&&this.stopAndLogTimedSet(),this.soundPlayedForThisCountdownSegment=!1,this.currentSetForm.invalid){this.currentSetForm.markAllAsTouched();let s="";for(let a of Object.keys(this.currentSetForm.controls))if(this.currentSetForm.controls[a].invalid){s=a;break}this.toastService.error(`Please correct input: ${s?s+" is invalid.":"form invalid."}`,0,"Validation Error");return}let o=this.currentSetForm.value,n=o.actualDuration;t.setData.duration&&t.setData.duration>0&&this.timedSetElapsedSeconds()>0?n=this.timedSetElapsedSeconds():o.actualDuration===null&&t.setData.duration&&(n=t.setData.duration);let i={id:Bt(),exerciseName:t.exerciseData.exerciseName,plannedSetId:this.isTabataMode()?`${t.setData.id}-round-${this.getIndexedCurrentBlock()}`:t.setData.id,exerciseId:t.exerciseData.exerciseId,type:t.setData.type,repsAchieved:o.actualReps??(t.setData.type==="warmup"?0:t.setData.reps??0),weightUsed:o.actualWeight??(t.setData.type==="warmup"?null:t.setData.weight),durationPerformed:n,rpe:o.rpe??void 0,targetReps:t.setData.reps,targetWeight:t.setData.weight,targetDuration:t.setData.duration,targetTempo:t.setData.tempo,targetRestAfterSet:t.setData.restAfterSet,notes:o.setNotes?.trim()||void 0,timestamp:new Date().toISOString(),supersetCurrentRound:this.checkIfSetIsPartOfRounds()||this.isTabataMode()?this.getIndexedCurrentBlock():0};this.addLoggedSetToCurrentLog(t.exerciseData,i),this.sessionState()==="playing"&&this.captureAndSaveStateForUnload(),this.rpeValue.set(null),this.showRpeSlider.set(!1),this.editingTarget=null,this.currentSetForm.patchValue({setNotes:""},{emitEvent:!1}),this.isTabataMode()||this.navigateToNextStepInWorkout(t,e)}getIndexedCurrentBlock(){return(this.currentBlockRound()??1)-1}setPlayerStateFromTabataIndex(t){this.currentTabataIntervalIndex.set(t);let e=this.tabataIntervalMap[t];if(e){let[o,n,i]=e;this.currentExerciseIndex.set(o),this.currentSetIndex.set(n),this.currentBlockRound.set(i),this.routine()&&this.totalBlockRounds.set(this.getRoundsForExerciseBlock(o,this.routine())),console.log(`Tabata Sync: Interval ${t} maps to Ex ${o}, Set ${n}, Round ${i}`)}else{let o=this.tabataIntervalMap[this.tabataIntervalMap.length-1];if(o){let[n,i,s]=o;this.currentExerciseIndex.set(n),this.currentSetIndex.set(i),this.currentBlockRound.set(s),this.routine()&&this.totalBlockRounds.set(this.getRoundsForExerciseBlock(n,this.routine()))}}}findNextExerciseBlockStartIndex(t,e){for(let o=t+1;o<e.exercises.length;o++){let n=e.exercises[o];if(n.sessionStatus==="pending"&&(!n.supersetId||n.supersetOrder===0))return o}return-1}getRoundInfo(t){let e=t.rounds??1;return t.supersetId&&t.supersetOrder!==null&&(e=this.routine()?.exercises.find(i=>i.supersetId===t.supersetId&&i.supersetOrder===0)?.rounds??1),{round:this.currentBlockRound?this.currentBlockRound():1,totalRounds:e}}getNextUpText(t,e){if(!t||!e)return"Next Set/Exercise";let o=e.exercises,n=t.exerciseIndex,i=t.setIndex,s=(m,f)=>{let g=this.currentWorkoutLogExercises().find(b=>b.exerciseId===m.exerciseId&&e.exercises[f].id===m.id),x=(m.sets?.length??0)*(m.rounds??1),y=g?.sets?.length??0;return m.sessionStatus==="pending"&&y<x},a=o[n];if(a){if(i+1<a.sets.length){let m=a.sets[i+1],f=1;m.type==="warmup"?f=a.sets.slice(0,i+2).filter(T=>T.type==="warmup").length:f=a.sets.slice(0,i+2).filter(T=>T.type!=="warmup").length;let g=m.type==="warmup"?"Warm-up":"Set",{round:x,totalRounds:y}=this.getRoundInfo(a),b=y>1?` (Round ${x}/${y})`:"";return`${g} ${f}/${a.sets.length} of ${a.exerciseName}${b}`}for(let m=n+1;m<o.length;m++){let f=o[m];if(s(f,m)){let x=f.sets[0].type==="warmup"?"Warm-up":"Set",y=1,{round:b,totalRounds:T}=this.getRoundInfo(f),R=T>1?` (Round ${b}/${T})`:"";return`${x} ${y} of ${f.exerciseName}${R}`}}}if(o.some(m=>m.sessionStatus==="do_later"&&!this.exercisesProposedThisCycle.doLater))return"Do Later Exercises";if(o.some(m=>m.sessionStatus==="skipped"&&!this.exercisesProposedThisCycle.skipped))return"Skipped Exercises";let{round:c,totalRounds:p}=this.getRoundInfo(a);if(p>1&&c<p){let m="";if(a.supersetId&&a.supersetOrder!==null){let f=o.filter(x=>x.supersetId===a.supersetId),g=a.supersetOrder??0;g+1<f.length?m=f[g+1].exerciseName||"":m=f[0].exerciseName||""}else m=a.exerciseName||"";return`Complete Round ${c}/${p}${m?` [Next exercise: ${m}]`:""}${a.sets?.length?` (${a.sets.length} sets)`:""}`}let d=this.getUnfinishedOrDeferredExercises(e);if(d.length>0){let m=t.exerciseIndex,f=d.slice().sort((x,y)=>x.originalIndex-y.originalIndex),g=f.find(x=>x.originalIndex>m)??f[0];if(g){let x="";switch(g.sessionStatus){case"do_later":x="Do Later";break;case"skipped":x="Skipped";break;case"pending":x="Pending";break;default:x=g.sessionStatus||""}return`Next: ${g.exerciseName} (${x})`}}return p>=1?"":"Complete"}skipRest(){if(this.sessionState()==="paused"){this.toastService.warning("Session is paused. Resume to skip rest",3e3,"Paused");return}(this.isRestTimerVisible()||this.playerSubState()==="resting")&&this.handleRestTimerSkipped(null)}pauseSession(){return j(this,null,function*(){this.sessionState()==="playing"&&(this.isPerformanceInsightsVisible.set(!1),this.closeWorkoutMenu(),this.sessionTimerElapsedSecondsBeforePause+=Math.floor((Date.now()-this.workoutStartTime)/1e3),this.timerSub&&this.timerSub.unsubscribe(),this.wasTimedSetRunningOnPause=this.timedSetTimerState()==="running",this.timedSetTimerState()==="running"&&this.pauseTimedSet(),this.wasRestTimerVisibleOnPause=this.isRestTimerVisible(),this.wasRestTimerVisibleOnPause&&(this.restTimerRemainingSecondsOnPause=this.restDuration(),this.restTimerInitialDurationOnPause=this.restDuration(),this.restTimerMainTextOnPause=this.restTimerMainText(),this.restTimerNextUpTextOnPause=this.restTimerNextUpText(),this.isRestTimerVisible.set(!1)),this.stopAutoSave(),this.sessionState.set("paused"),this.savePausedSessionState(),this.toastService.info("Workout Paused",3e3))})}loadStateFromPausedSession(t){return j(this,null,function*(){if(this.routineId=t.routineId,this.routine.set(t.sessionRoutine),this.currentWorkoutLogExercises.set(t.currentWorkoutLogExercises),this.isEntireWorkoutFullyLogged(t.sessionRoutine,t.currentWorkoutLogExercises)){console.log("Paused session is already fully logged. Transitioning directly to finish flow"),this.sessionState.set("end"),yield this.tryProceedToDeferredExercisesOrFinish(t.sessionRoutine);return}if(t.isTabataMode){console.log("Resuming a paused Tabata session"),this.sessionState.set("playing"),this.workoutStartTime=Date.now(),this.sessionTimerElapsedSecondsBeforePause=t.sessionTimerElapsedSecondsBeforePause,this.setupTabataMode(t.sessionRoutine,t.tabataCurrentIntervalIndex,t.tabataTimeRemainingOnPause),this.startSessionTimer(),this.toastService.success("Tabata session resumed.",3e3,"Resumed");return}this.originalRoutineSnapshot=t.originalRoutineSnapshot?JSON.parse(JSON.stringify(t.originalRoutineSnapshot)):[],this.currentExerciseIndex.set(t.currentExerciseIndex),this.currentSetIndex.set(t.currentSetIndex),this.workoutStartTime=Date.now(),this.sessionTimerElapsedSecondsBeforePause=t.sessionTimerElapsedSecondsBeforePause,this.currentBlockRound.set(t.currentBlockRound),this.totalBlockRounds.set(t.totalBlockRounds),this.timedSetTimerState.set(t.timedSetTimerState),this.timedSetElapsedSeconds.set(t.timedSetElapsedSeconds),this.wasTimedSetRunningOnPause=t.timedSetTimerState==="running"||t.timedSetTimerState==="paused",this.lastPerformanceForCurrentExercise=t.lastPerformanceForCurrentExercise,this.wasRestTimerVisibleOnPause=t.isRestTimerVisibleOnPause,this.restTimerRemainingSecondsOnPause=t.restTimerRemainingSecondsOnPause,this.restTimerInitialDurationOnPause=t.restTimerInitialDurationOnPause,this.restTimerMainTextOnPause=t.restTimerMainTextOnPause,this.restTimerNextUpTextOnPause=t.restTimerNextUpTextOnPause,this.exercisesProposedThisCycle={doLater:!1,skipped:!1},this.isPerformingDeferredExercise=!1,this.lastActivatedDeferredExerciseId=null,yield this.prepareCurrentSet(),this.sessionState()!=="error"&&this.routine()&&(this.sessionState.set("playing"),this.startSessionTimer(),this.startAutoSave()),(t.timedSetTimerState==="running"||t.timedSetTimerState==="paused")&&(this.startOrResumeTimedSet(),t.timedSetTimerState==="paused"&&this.pauseTimedSet()),this.wasRestTimerVisibleOnPause&&this.restTimerRemainingSecondsOnPause>0&&this.startRestPeriod(this.restTimerRemainingSecondsOnPause,!0),this.cdr.detectChanges(),this.toastService.success("Workout session resumed.",3e3,"Resumed")})}savePausedSessionState(){if(this.sessionState()==="end"){this.stopAllActivity();return}let t=this.routine();if(!t){console.warn("Cannot save paused state: routine data is not available");return}let e=this.sessionTimerElapsedSecondsBeforePause;this.sessionState()==="playing"&&this.workoutStartTime>0&&(e+=Math.floor((Date.now()-this.workoutStartTime)/1e3));let o,n=this.currentWorkoutLogExercises()[0]?.sets[0]?.timestamp,i=n?new Date(n):this.workoutStartTime>0?new Date(this.workoutStartTime-this.sessionTimerElapsedSecondsBeforePause*1e3):new Date;o=xr(i,"yyyy-MM-dd");let s={version:this.PAUSED_STATE_VERSION,routineId:this.routineId,sessionRoutine:JSON.parse(JSON.stringify(t)),originalRoutineSnapshot:JSON.parse(JSON.stringify(this.originalRoutineSnapshot)),currentExerciseIndex:this.currentExerciseIndex(),currentSetIndex:this.currentSetIndex(),currentWorkoutLogExercises:JSON.parse(JSON.stringify(this.currentWorkoutLogExercises())),workoutStartTimeOriginal:this.workoutStartTime,sessionTimerElapsedSecondsBeforePause:e,currentBlockRound:this.currentBlockRound(),totalBlockRounds:this.totalBlockRounds(),timedSetTimerState:this.timedSetTimerState(),timedSetElapsedSeconds:this.timedSetElapsedSeconds(),isResting:this.isRestTimerVisible(),isRestTimerVisibleOnPause:this.playerSubState()==="resting",restTimerRemainingSecondsOnPause:this.restDuration(),restTimerInitialDurationOnPause:this.restTimerInitialDurationOnPause,restTimerMainTextOnPause:this.restTimerMainText(),restTimerNextUpTextOnPause:this.restTimerNextUpText(),lastPerformanceForCurrentExercise:this.lastPerformanceForCurrentExercise?JSON.parse(JSON.stringify(this.lastPerformanceForCurrentExercise)):null,workoutDate:o,isTabataMode:this.isTabataMode()};this.isTabataMode()&&(s.tabataCurrentIntervalIndex=this.currentTabataIntervalIndex(),s.tabataTimeRemainingOnPause=this.tabataTimeRemaining()),this.storageService.setItem(this.PAUSED_WORKOUT_KEY,s),console.log("Paused session state saved.",s)}captureAndSaveStateForUnload(){let t=this.sessionTimerElapsedSecondsBeforePause;this.sessionState()==="playing"&&this.workoutStartTime>0&&(t+=Math.floor((Date.now()-this.workoutStartTime)/1e3));let e=this.sessionTimerElapsedSecondsBeforePause;this.sessionTimerElapsedSecondsBeforePause=t,this.savePausedSessionState(),this.sessionTimerElapsedSecondsBeforePause=e,console.log("Session state attempt saved via beforeunload.")}addWarmupSet(){return j(this,null,function*(){if(this.sessionState()==="paused"){this.toastService.warning("Session is paused. Resume to add warm-up",3e3,"Paused");return}let t=this.routine(),e=this.activeSetInfo();if(!t||!e){this.toastService.error("Cannot add warm-up: data unavailable",0,"Error");return}let o=t.exercises[e.exerciseIndex],n=o.sets.findIndex(c=>c.type!=="warmup"),i=o.supersetId&&o.supersetOrder!==null,s=e.setIndex===n&&n!==-1;if(i&&s){let c={id:`warmup-${Bt()}`,type:"warmup",reps:8,weight:0,duration:void 0,restAfterSet:30,notes:"Warm-up set"},p=JSON.parse(JSON.stringify(t)),d=e.exerciseIndex-(o.supersetOrder??0);d<0&&(d=0);let m={id:`warmup-ex-${Bt()}`,exerciseId:o.exerciseId,exerciseName:`${o.exerciseName} (Warm-up)`,sets:[c],rounds:1,supersetId:null,supersetOrder:null,supersetSize:null,sessionStatus:"pending",type:"standard"};this.addExerciseToCurrentRoutine(m,d),this.toastService.success("Warm-up set added as a separate exercise before superset",4e3,"Warm-up Added"),this.closeWorkoutMenu(),this.closePerformanceInsights();return}if(e.setIndex>0&&e.setIndex>n&&n!==-1){let c=yield this.alertService.showConfirm("Add Warm-up Set","You are past the first working set. Adding a warm-up set now will insert it before the current set. Continue?");if(!c||!c.data)return}let a={id:`warmup-${Bt()}`,type:"warmup",reps:8,weight:0,duration:void 0,restAfterSet:30,notes:"Warm-up set"},l=JSON.parse(JSON.stringify(t));l.exercises[e.exerciseIndex].sets.splice(e.setIndex,0,a),this.routine.set(l),this.toastService.success("Warm-up set added. Fill details & complete",4e3,"Warm-up Added"),yield this.prepareCurrentSet(),this.closeWorkoutMenu(),this.closePerformanceInsights()})}getSets(){let t=this.activeSetInfo(),e=t?.exerciseData.sets||[];return t?.setData.type==="warmup"?e.filter(o=>o.type!=="warmup"):e}getWarmUpSets(){let t=this.activeSetInfo(),e=t?.exerciseData.sets||[];return t?.setData.type==="warmup"?e.filter(o=>o.type==="warmup"):[]}getTotalWarmupSetsForCurrentExercise=Nt(()=>{let t=this.routine(),e=this.currentExerciseIndex();return t&&t.exercises[e]?t.exercises[e].sets.filter(o=>o.type==="warmup").length:0});canAddWarmupSet=Nt(()=>{let t=this.activeSetInfo(),e=this.routine();if(!t||!e||this.sessionState()==="paused")return!1;let o=e.exercises[t.exerciseIndex].sets;return!(this.currentWorkoutLogExercises().find(i=>i.exerciseId===t.exerciseData.exerciseId)?.sets.some(i=>i.plannedSetId===t.setData.id)&&t.type!=="warmup")});getIconPath(t){return this.exerciseService.getIconPath(t)}toggleWorkoutMenu(){this.sessionState()==="paused"&&!this.isWorkoutMenuVisible()||(this.isWorkoutMenuVisible.update(t=>!t),this.isWorkoutMenuVisible()&&this.isPerformanceInsightsVisible.set(!1))}closeWorkoutMenu(){this.isWorkoutMenuVisible.set(!1),window.scrollTo(0,0)}skipCurrentSet(){return j(this,null,function*(){if(this.sessionState()==="paused"){this.toastService.warning("Session is paused. Resume to skip set",3e3,"Paused");return}let t=this.activeSetInfo(),e=this.routine();if(!t||!e){this.toastService.error("Cannot skip set: No active set information",0,"Error");return}if(t.setIndex===t.exerciseData.sets.length-1&&t.exerciseData.sessionStatus==="pending"){let o=yield this.alertService.showConfirmationDialog("Last Set",`This is the last set of "${t.exerciseData.exerciseName}". Skip the entire exercise instead?`,[{text:"Skip Set Only",role:"cancel",data:"skip_set"},{text:"Skip Exercise",role:"confirm",data:"skip_exercise",cssClass:"bg-orange-500"}]);if(o&&o.data==="skip_exercise"){yield this.markCurrentExerciseStatus("skipped"),this.closeWorkoutMenu();return}else if(!o||o.role==="cancel"&&o.data!=="skip_set")return}else{let o=yield this.alertService.showConfirm("Skip Current Set",`Skip current ${t.type==="warmup"?"warm-up":"set "+this.getCurrentWorkingSetNumber()} of "${t.exerciseData.exerciseName}"? It won't be logged.`);if(!o||!o.data)return}this.soundPlayedForThisCountdownSegment=!1,this.toastService.info(`Skipped set of ${t.exerciseData.exerciseName}.`,2e3),this.resetTimedSet(),this.navigateToNextStepInWorkout(t,e),this.closeWorkoutMenu(),this.closePerformanceInsights()})}skipCurrentExercise(){return j(this,null,function*(){yield this.markCurrentExerciseStatus("skipped")})}markCurrentExerciseDoLater(){return j(this,null,function*(){yield this.markCurrentExerciseStatus("do_later")})}markCurrentExerciseStatus(t){return j(this,null,function*(){if(this.sessionState()==="paused"){this.toastService.warning("Session is paused. Resume to mark exercise.",3e3,"Paused");return}let e=this.routine(),o=this.activeSetInfo();if(!e||!o){this.toastService.error("Cannot update exercise status: data unavailable",0,"Error");return}let n=o.exerciseData.exerciseName,i=t==="skipped"?"Skip":"Mark for Later",s=JSON.parse(JSON.stringify(e)),a=s.exercises.find(l=>l.id===o.exerciseData.id);if(a){let l=a.sessionStatus;a.sessionStatus=t;let u=t.replace(/(^\w)/g,c=>c[0].toUpperCase()).replace(/([-_]\w)/g,c=>" "+c[1].toUpperCase()).trim();this.routine.set(s),this.toastService.info(`"${n}" marked as ${u}.`,2e3),this.resetTimedSet(),this.isPerformingDeferredExercise&&o.exerciseData.id===this.lastActivatedDeferredExerciseId?(console.log(`markCurrentExerciseStatus: Re-marking a deferred exercise (${n}) as ${t}. Re-evaluating all deferred.`),this.isPerformingDeferredExercise=!1,this.lastActivatedDeferredExerciseId=null,this.exercisesProposedThisCycle={doLater:!1,skipped:!1},yield this.tryProceedToDeferredExercisesOrFinish(s)):(console.log(`markCurrentExerciseStatus: Marking main sequence exercise (${n}) as ${t}. Advancing.`),yield this.navigateToNextStepInWorkout(o,s,!0))}this.closeWorkoutMenu(),this.closePerformanceInsights()})}addExerciseDuringSession(){return j(this,null,function*(){if(this.sessionState()==="paused"){this.toastService.warning("Session is paused. Resume to add exercise",3e3,"Paused"),this.closeWorkoutMenu();return}this.openExerciseSelectionModal()})}selectExerciseToAddFromModal(t){return j(this,null,function*(){if(this.closeExerciseSelectionModal(),!this.routine()){this.toastService.error("Cannot add exercise: routine data unavailable",0,"Error");return}let o=this.unitService.currentUnit()==="kg"?10:22.2,n=0,i=60,s=10,a=3,l=yield this.alertService.showPromptDialog(`Add ${t.name}`,"",[{label:"Exercise name",name:"name",type:"string",placeholder:"Exercise name",value:t.name,attributes:{required:!0}},{label:"Number of Reps",name:"numReps",type:"number",placeholder:"Number of Reps (e.g., 10)",value:10,attributes:{min:0,required:!0}},{label:"Number of Sets",name:"numSets",type:"number",placeholder:"Number of Sets (e.g., 3)",value:3,attributes:{min:1,required:!0}},{label:"Target weight",name:"weight",type:"number",placeholder:"e.g., 10",value:o,attributes:{min:0,required:!0}},{label:"Target duration",name:"duration",type:"number",placeholder:"e.g., 30 secs",value:n,attributes:{min:0,required:!1}},{label:"Rest between sets",name:"rest",type:"number",placeholder:"e.g., 60",value:"60",attributes:{min:"1",required:!0}}]);if(l){let u=l.name,c=isNaN(parseInt(String(l.numSets)))?a:parseInt(String(l.numSets)),p=isNaN(parseInt(String(l.numReps)))?s:parseInt(String(l.numReps)),d=isNaN(parseInt(String(l.weight)))?o:parseInt(String(l.weight)),m=isNaN(parseInt(String(l.duration)))?n:parseInt(String(l.duration)),f=isNaN(parseInt(String(l.rest)))?i:parseInt(String(l.rest));if(!u||c==null||isNaN(c)||p==null||isNaN(p)||m==null||isNaN(m)||d==null||isNaN(d)||f==null||isNaN(f)){this.toastService.info("Exercise addition cancelled or invalid parameter",2e3),this.selectExerciseToAddFromModal(t);return}let g=[];for(let b=0;b<c;b++)g.push({id:`custom-set-${Bt()}`,reps:p,weight:d,duration:m,restAfterSet:f,type:"standard",notes:""});let x={id:`custom-exercise-${Bt()}`,exerciseId:t.id,exerciseName:t.name,sets:g,rounds:1,supersetId:null,supersetOrder:null,supersetSize:null,sessionStatus:"pending",type:"standard"},y=this.exerciseService.mapWorkoutExerciseToExercise(x,t);this.exerciseService.addExercise(y),this.addExerciseToCurrentRoutine(x)}})}handleTrulyCustomExerciseEntry(){return j(this,null,function*(){if(this.closeExerciseSelectionModal(),!this.routine())return;let e={id:`custom-adhoc-ex-${Bt()}`,name:"Custom exercise",description:"",category:"bodyweight/calisthenics",muscleGroups:[],primaryMuscleGroup:"",imageUrls:[]};this.selectExerciseToAddFromModal(e)})}addExerciseToCurrentRoutine(t,e){return j(this,null,function*(){let o=this.routine();if(!o)return;let n=e!=null,i=JSON.parse(JSON.stringify(o)),s=e??this.currentExerciseIndex()+1,a=this.activeSetInfo();if(!n&&a&&a.exerciseData.supersetId&&a.exerciseData.supersetOrder!==null&&a.exerciseData.supersetSize&&(s=a.exerciseIndex-a.exerciseData.supersetOrder+a.exerciseData.supersetSize),i.exercises.splice(s,0,t),this.routine.set(i),n)this.currentExerciseIndex.set(s),this.currentSetIndex.set(0),this.currentBlockRound.set(1),this.totalBlockRounds.set(t.rounds??1),this.lastPerformanceForCurrentExercise=null,this.isPerformingDeferredExercise=!0,this.playerSubState.set("performing_set"),yield this.prepareCurrentSet();else{let l;this.routineId==="-1"&&this.routine()?.exercises?.length===1?(l={data:!0},this.sessionState.set("playing"),this.startSessionTimer(),this.startAutoSave()):this.isEndReached()&&(yield this.alertService.showAlert("Exercise Added",`"${t.exerciseName}" added`),l={data:!0},this.isEndReached.set(!1)),l&&l.data||this.routineId==="-1"?(this.currentExerciseIndex.set(s),this.currentSetIndex.set(0),this.currentBlockRound.set(1),this.totalBlockRounds.set(t.rounds??1),this.lastPerformanceForCurrentExercise=null,this.isPerformingDeferredExercise=!0,this.lastActivatedDeferredExerciseId=t.id,this.playerSubState.set("performing_set"),yield this.prepareCurrentSet()):this.toastService.success(`"${t.exerciseName}" added to the queue.`,3e3,"Exercise Added")}})}finishWorkoutEarly(){return j(this,null,function*(){if(this.sessionState()==="paused"){this.toastService.warning("Please resume before finishing early",3e3,"Paused");return}let t=yield this.alertService.showConfirm("Finish Workout Early","Finish workout now? Current progress will be saved");t&&t.data&&(this.closeWorkoutMenu(),this.closePerformanceInsights(),(yield this.finishWorkoutAndReportStatus())||(this.toastService.info("Workout finished early. Paused session cleared",4e3),this.storageService.removeItem(this.PAUSED_WORKOUT_KEY),this.router.url.includes("/play")&&this.router.navigate(["/workout"])))})}mapWorkoutExerciseToLoggedWorkoutExercise(t){return{id:t.id,exerciseId:t.exerciseId,exerciseName:t.exerciseName||"",sets:t.sets.map(e=>({id:Bt(),exerciseName:t.exerciseName,plannedSetId:e.id,exerciseId:t.exerciseId,type:t.type,repsAchieved:0,weightUsed:void 0,durationPerformed:void 0,rpe:void 0,targetReps:e.reps,targetWeight:e.weight,targetDuration:e.duration,targetTempo:e.tempo,notes:e.notes,timestamp:new Date().toISOString()})),rounds:t.rounds??1,type:(t.sets&&t.sets[0]&&t.sets[0].type||t.type)??"standard"}}finishWorkoutAndReportStatus(){return j(this,null,function*(){if(this.stopAutoSave(),this.sessionState()==="paused")return this.toastService.warning("Please resume workout before finishing",3e3,"Session Paused"),!1;if(this.sessionState()==="loading")return this.toastService.info("Workout is still loading",3e3,"Loading"),!1;let t=this.currentWorkoutLogExercises().filter(y=>y.sets.length>0);if(t===void 0||t.length===0)return!1;if(t.length===0)return this.toastService.info("No sets logged. Workout not saved",3e3,"Empty Workout"),this.storageService.removeItem(this.PAUSED_WORKOUT_KEY),this.router.url.includes("/play")&&this.router.navigate(["/workout"]),!1;this.timerSub&&this.timerSub.unsubscribe();let e=this.routine(),o=this.program(),n=!0,i=!1,s=!1,a=e?.name?`${e.name} - ${xr(new Date,"MMM d")}`:`Ad-hoc Workout - ${xr(new Date,"MMM d, HH:mm")}`,l=this.originalRoutineSnapshot.filter(y=>e?.exercises.find(b=>b.id===y.id&&b.sessionStatus==="pending")||t.some(b=>b.exerciseId===y.exerciseId));if(this.routineId&&this.originalRoutineSnapshot&&this.originalRoutineSnapshot.length>0&&e){let y=this.comparePerformedToOriginal(t,l);if(y.majorDifference){console.log("Major differences",y.details);let b=yield this.alertService.showConfirmationDialog("Routine Structure Changed","You made some changes to the routine structure. Would you like to save this as a new routine, update the original, or cancel?",[{text:"Simply log",role:"log",data:"log",cssClass:"bg-purple-600"},{text:"Update Original Routine and log",role:"destructive",data:"update",cssClass:"bg-blue-600"},{text:"Save as New Routine",role:"confirm",data:"new",cssClass:"bg-green-600"}],{listItems:y.details});if(b&&b.data==="new"){let T=yield this.alertService.showPromptDialog("New Routine Name","Enter a name for your new routine:",[{name:"newRoutineName",type:"text",placeholder:a,value:a,attributes:{required:!0}}],"Save Routine");T&&String(T.newRoutineName).trim()?(a=String(T.newRoutineName).trim(),i=!0):n=!1}else b&&b.data==="update"?s=!0:b&&b.data==="log"?(s=!1,n=!0):n=!1}}else if(!this.routineId&&t.length>0){i=!0;let y=yield this.alertService.showPromptDialog("Save as New Routine","Enter a name for your new routine:",[{name:"newRoutineName",type:"text",placeholder:a,value:a,attributes:{required:!0}}],"Save Routine");y&&String(y.newRoutineName).trim()?a=String(y.newRoutineName).trim():y||(n=!1)}if(!n)return this.toastService.info("Finish workout cancelled. Session remains active/paused",3e3,"Cancelled"),this.sessionState()==="playing"&&this.startAutoSave(),!1;let u=Date.now(),c=this.workoutStartTime-this.sessionTimerElapsedSecondsBeforePause*1e3,p=Math.round((u-c)/(1e3*60)),d=Math.round((u-c)/1e3),m=this.routineId||void 0,f=e?.name||"Ad-hoc Workout";if(i){let y={name:a,description:e?.description||"Workout performed on "+xr(new Date,"MMM d, yyyy"),goal:e?.goal||"custom",exercises:this.convertLoggedToWorkoutExercises(t)},b=this.workoutService.addRoutine(y);m=b.id,f=b.name,this.toastService.success(`New routine "${b.name}" created.`,4e3)}let g={routineId:m,routineName:f,date:xr(new Date(c),"yyyy-MM-dd"),startTime:c,endTime:u,durationMinutes:p,durationSeconds:d,exercises:t,notes:e?.notes,programId:o},x=this.trackingService.addWorkoutLog(g);if(this.isTabataMode()?this.toastService.success("Tabata Workout Complete!",5e3,"Workout Finished"):this.toastService.success("Congrats! Workout completed!",5e3,"Workout Finished"),m){let y=yield ba(this.workoutService.getRoutineById(m).pipe(hr(1)));if(y){let b=er(Ht({},y),{lastPerformed:new Date(c).toISOString()});s&&!i&&this.routineId===m&&(b.exercises=this.convertLoggedToWorkoutExercises(t)),this.workoutService.updateRoutine(b)}}return this.stopAllActivity(),this.storageService.removeItem(this.PAUSED_WORKOUT_KEY),this.router.navigate(["/workout/summary",x.id]),!0})}quitWorkout(){return j(this,null,function*(){let t=yield this.alertService.showConfirm("Quit Workout","Quit workout? Unsaved progress (if not paused) will be lost.");t&&t.data&&(this.stopAllActivity(),this.isSessionConcluded=!0,this.storageService.removeItem(this.PAUSED_WORKOUT_KEY),this.closeWorkoutMenu(),this.closePerformanceInsights(),this.router.navigate(["/workout"]),this.toastService.info("Workout quit. No progress saved for this session",4e3))})}toggleCompletedSetsInfo(){this.showCompletedSetsInfo.update(t=>!t)}openPerformanceInsights(){if(this.sessionState()==="paused"){this.toastService.warning("Session is paused. Resume to view insights",3e3,"Paused");return}this.isPerformanceInsightsVisible.set(!0),this.isWorkoutMenuVisible.set(!1)}closePerformanceInsights(){this.isPerformanceInsightsVisible.set(!1),this.editingTarget&&this.cancelEditTarget()}openPerformanceInsightsFromMenu(){this.closeWorkoutMenu(),this.openPerformanceInsights()}goBack(){this.currentWorkoutLogExercises().length>0&&this.sessionState()==="playing"?this.alertService.showConfirm("Exit Workout?","You have an active workout. Are you sure you want to exit? Your progress might be lost unless you pause first").then(t=>{t&&t.data&&this.router.navigate(["/workout"])}):this.router.navigate(["/workout"])}incrementWeight(t=.5){let e=this.appSettingsService.getSettings().weightStep||t,o=this.csf.actualWeight.value??0;this.currentSetForm.patchValue({actualWeight:parseFloat((o+e).toFixed(2))})}decrementWeight(t=.5){let e=this.appSettingsService.getSettings().weightStep||t,o=this.csf.actualWeight.value??0,n=parseFloat((o-e).toFixed(2))>=0?parseFloat((o-e).toFixed(2)):0;this.currentSetForm.patchValue({actualWeight:n})}pressStartTime=null;weightIncrementIntervalId=null;weightDecrementIntervalId=null;intervalId=null;onShortPressWeightIncrement(){this.incrementWeight()}onLongPressWeightIncrement(){this.intervalId=setInterval(()=>this.incrementWeight(),200)}onPressRelease(){this.intervalId&&(clearInterval(this.intervalId),this.intervalId=null)}onShortPressWeightDecrement(){this.decrementWeight()}onLongPressWeightDecrement(){this.intervalId=setInterval(()=>this.decrementWeight(),200)}onShortPressRepsIncrement(){this.incrementReps()}onLongPressRepsIncrement(){this.intervalId=setInterval(()=>this.incrementReps(),200)}onShortPressRepsDecrement(){this.decrementReps()}onLongPressRepsDecrement(){this.intervalId=setInterval(()=>this.decrementReps(),200)}incrementReps(t=1){let e=t,o=this.csf.actualReps.value??0;this.currentSetForm.patchValue({actualReps:o+e})}decrementReps(t=1){let e=t,o=this.csf.actualReps.value??0;this.currentSetForm.patchValue({actualReps:Math.max(0,o-e)})}toggleRpeInput(){this.showRpeSlider.update(t=>!t)}updateRpe(t){let e=typeof t=="string"?parseInt(t,10):t;e!==null&&!isNaN(e)&&e>=1&&e<=10?(this.rpeValue.set(e),this.currentSetForm.patchValue({rpe:e})):e===null&&(this.rpeValue.set(null),this.currentSetForm.patchValue({rpe:null}))}startAutoSave(){gr(this.platformId)&&(this.autoSaveSub&&this.autoSaveSub.unsubscribe(),this.autoSaveSub=yS(this.AUTO_SAVE_INTERVAL_MS).pipe(Jn(this.destroy$)).subscribe(()=>{this.sessionState()==="playing"&&this.routine()&&(console.log("Auto-saving workout state..."),this.savePausedSessionState())}))}stopAutoSave(){this.autoSaveSub&&(this.autoSaveSub.unsubscribe(),this.autoSaveSub=void 0)}ngOnInit(){return j(this,null,function*(){gr(this.platformId)&&window.scrollTo(0,0);let t=this.storageService.getItem(this.PAUSED_WORKOUT_KEY);(yield this.checkForPausedSession(!1))?this.isInitialLoadComplete=!0:this.loadNewWorkoutFromRoute(),gr(this.platformId)&&(this.routerEventsSub=this.router.events.pipe(kd(o=>o instanceof RS),ps(o=>j(this,null,function*(){let n=this.route.snapshot,i=o.urlAfterRedirects.startsWith("/workout/play/"),s=n.paramMap.get("routineId"),a=n.queryParamMap.get("programId");i&&(this.routineId===s&&this.isInitialLoadComplete&&this.sessionState()!=="playing"?!(yield this.checkForPausedSession(!0))&&this.sessionState()!=="playing"&&this.loadNewWorkoutFromRoute():this.routineId)})),Jn(this.destroy$)).subscribe()),this.loadAvailableExercises()})}loadNewWorkoutFromRoute(){return j(this,null,function*(){console.log("loadNewWorkoutFromRoute - START"),this.isInitialLoadComplete=!1,this.sessionState.set("loading"),this.exercisesProposedThisCycle={doLater:!1,skipped:!1},this.isPerformingDeferredExercise=!1,this.lastActivatedDeferredExerciseId=null,this.stopAllActivity(),this.workoutStartTime=Date.now(),this.sessionTimerElapsedSecondsBeforePause=0,this.originalRoutineSnapshot=[],this.currentWorkoutLogExercises.set([]),this.currentSetIndex.set(0),this.currentBlockRound.set(1),this.routine.set(void 0),this.program.set(void 0),this.routeSub&&this.routeSub.unsubscribe(),this.routeSub=gS([this.route.paramMap,this.route.queryParamMap]).pipe(_n(([t,e])=>({routineId:t.get("routineId"),programId:e.get("programId")})),Sa(t=>{let{routineId:e,programId:o}=t;return console.log("loadNewWorkoutFromRoute - paramMap emitted, newRoutineId:",e),console.log("loadNewWorkoutFromRoute - queryParamMap emitted, programId:",o),o&&this.program.set(o),(!e||e==="-1")&&e!=="-1"?(this.toastService.error("No routine specified to play",0,"Error"),this.router.navigate(["/workout"]),this.sessionState.set("error"),tn(null)):(this.routineId=e,this.workoutService.getRoutineById(this.routineId).pipe(_n(n=>{if(n){console.log("loadNewWorkoutFromRoute: Fetched original routine -",n.name),this.originalRoutineSnapshot=JSON.parse(JSON.stringify(n.exercises));let i=JSON.parse(JSON.stringify(n));return i.exercises.forEach(s=>{s.sessionStatus="pending",s.id||(s.id=Bt()),s.sets.forEach(a=>{a.id||(a.id=Bt()),a.type||(a.type="standard")})}),{sessionRoutineCopy:i,programId:o}}return console.warn("loadNewWorkoutFromRoute: No original routine found for ID:",this.routineId),null})))}),ps(t=>j(this,null,function*(){if(!t){if(this.routineId==="-1"){let i={name:"New session",createdAt:new Date().toISOString(),goal:"custom",exercises:[]};this.routine.set(i),this.openExerciseSelectionModal()}else this.routineId&&(console.error("loadNewWorkoutFromRoute - tap: Failed to load routine for ID or routine was null:",this.routineId),this.routine.set(null),this.sessionState.set("error"),this.toastService.error("Failed to load workout routine",0,"Load Error"),gr(this.platformId)&&this.router.navigate(["/workout"]),this.stopAutoSave());this.isInitialLoadComplete=!0;return}let{sessionRoutineCopy:e,programId:o}=t;if(console.log("loadNewWorkoutFromRoute - tap operator. Session routine copy:",e.name),console.log("loadNewWorkoutFromRoute - tap operator. Program ID:",o),e.goal==="tabata"){this.setupTabataMode(e),this.startSessionTimer(),this.isInitialLoadComplete=!0;return}if(this.sessionState()==="paused"){console.log("loadNewWorkoutFromRoute - tap: Session is paused, skipping setup."),this.isInitialLoadComplete=!0;return}this.exercisesProposedThisCycle={doLater:!1,skipped:!1},this.isPerformingDeferredExercise=!1,this.lastActivatedDeferredExerciseId=null,this.routine.set(e);let n=this.findFirstPendingExerciseAndSet(e);if(n){this.currentExerciseIndex.set(n.exerciseIndex),this.currentSetIndex.set(n.setIndex),console.log(`loadNewWorkoutFromRoute - Initial pending set to Ex: ${n.exerciseIndex}, Set: ${n.setIndex}`);let i=e.exercises[n.exerciseIndex];if(!i.supersetId||i.supersetOrder===0)this.totalBlockRounds.set(i.rounds??1);else{let s=e.exercises.find(a=>a.supersetId===i.supersetId&&a.supersetOrder===0);this.totalBlockRounds.set(s?.rounds??1)}}else{console.log("loadNewWorkoutFromRoute: Routine loaded but no initial pending exercises. Will try deferred/finish"),this.currentExerciseIndex.set(0),this.currentSetIndex.set(0),this.totalBlockRounds.set(1),this.exercisesProposedThisCycle={doLater:!1,skipped:!1},yield this.tryProceedToDeferredExercisesOrFinish(e),this.isInitialLoadComplete=!0;return}this.currentBlockRound.set(1),this.currentWorkoutLogExercises.set([]),yield this.prepareCurrentSet(),this.sessionState()!=="error"&&this.sessionState()!=="paused"&&(this.startSessionTimer(),this.startAutoSave()),this.isInitialLoadComplete=!0,console.log("loadNewWorkoutFromRoute - END tap operator. Final sessionState:",this.sessionState())})),Jn(this.destroy$)).subscribe({error:t=>{console.error("loadNewWorkoutFromRoute - Error in observable pipeline:",t),this.routine.set(null),this.sessionState.set("error"),this.toastService.error("Critical error loading workout",0,"Load Error"),gr(this.platformId)&&this.router.navigate(["/workout"]),this.isInitialLoadComplete=!0}})})}checkForPausedSession(t=!1){return j(this,null,function*(){let e=this.storageService.getItem(this.PAUSED_WORKOUT_KEY),o=this.route.snapshot.paramMap.get("routineId"),n=this.route.snapshot.queryParamMap.get("resume")==="true";if(console.log("WorkoutPlayer.checkForPausedSession ...",!!e),e&&e.version===this.PAUSED_STATE_VERSION){if(o&&e.routineId===null)return console.log("WorkoutPlayer.checkForPausedSession - Current route is for a specific routine, but paused session was ad-hoc. Discarding paused session."),this.storageService.removeItem(this.PAUSED_WORKOUT_KEY),!1;if(!o&&e.routineId!==null)return console.log("WorkoutPlayer.checkForPausedSession - Current route is ad-hoc, but paused session was for a specific routine. Discarding paused session."),this.storageService.removeItem(this.PAUSED_WORKOUT_KEY),!1;if(o&&e.routineId&&o!==e.routineId)return console.log("WorkoutPlayer.checkForPausedSession - Paused session routine ID does not match current route routine ID. Discarding paused session."),this.storageService.removeItem(this.PAUSED_WORKOUT_KEY),!1;let i=!1;if(n)i=!0,this.router.navigate([],{relativeTo:this.route,queryParams:{resume:null},queryParamsHandling:"merge",replaceUrl:!0});else if(t)i=!0;else{let s=yield this.alertService.showConfirmationDialog("Resume Paused Workout?","You have a paused workout session. Would you like to resume it?",[{text:"Resume",role:"confirm",data:!0,cssClass:"bg-green-600"},{text:"Discard",role:"cancel",data:!1,cssClass:"bg-red-600"}]);i=!!(s&&s.data===!0)}return i?(this.stopAllActivity(),this.routeSub&&this.routeSub.unsubscribe(),yield this.loadStateFromPausedSession(e),this.isInitialLoadComplete=!0,!0):(this.storageService.removeItem(this.PAUSED_WORKOUT_KEY),this.toastService.info("Paused session discarded.",3e3),!1)}return!1})}stopAllActivity(){this.isSessionConcluded=!0,console.log("stopAllActivity - Stopping timers and auto-save."),this.stopAutoSave(),this.timerSub&&this.timerSub.unsubscribe(),this.timedSetIntervalSub&&this.timedSetIntervalSub.unsubscribe(),this.tabataTimerSub&&this.tabataTimerSub.unsubscribe(),this.isRestTimerVisible.set(!1),this.sessionState.set("end")}resumeSession(){return j(this,null,function*(){this.sessionState()==="paused"?(console.log("resumeSession button clicked - transitioning from Paused to Playing"),this.workoutStartTime=Date.now(),this.sessionState.set("playing"),this.startSessionTimer(),this.startAutoSave(),this.wasTimedSetRunningOnPause&&this.timedSetTimerState()==="paused"&&this.startOrResumeTimedSet(),this.wasTimedSetRunningOnPause=!1,this.wasRestTimerVisibleOnPause&&this.restTimerRemainingSecondsOnPause>0&&this.startRestPeriod(this.restTimerRemainingSecondsOnPause,!0),this.wasRestTimerVisibleOnPause=!1,this.closeWorkoutMenu(),this.closePerformanceInsights(),this.toastService.info("Workout session resumed.",3e3)):!(yield this.checkForPausedSession(!0))&&this.sessionState()!=="playing"&&this.routineId&&this.loadNewWorkoutFromRoute()})}ngOnDestroy(){this.destroy$.next(),this.destroy$.complete(),this.stopAllActivity(),this.isRestTimerVisible.set(!1),gr(this.platformId)&&!this.isSessionConcluded&&(this.sessionState()==="playing"||this.sessionState()==="paused")&&this.routine()&&this.currentWorkoutLogExercises().length>0&&(console.log("WorkoutPlayer ngOnDestroy - Saving state..."),this.savePausedSessionState())}playClientBeep(t=800,e=150){if(gr(this.platformId))try{let o=window.AudioContext||window.webkitAudioContext;if(!o){console.warn("Web Audio API not supported in this browser.");return}let n=new o,i=n.createOscillator();i.type="sine",i.frequency.setValueAtTime(t,n.currentTime),i.connect(n.destination),i.start(),i.stop(n.currentTime+e/1e3),setTimeout(()=>{n.state!=="closed"&&n.close()},e+50)}catch(o){console.error("Error playing beep sound:",o)}}playClientGong(t=440,e=700){if(gr(this.platformId))try{let o=window.AudioContext||window.webkitAudioContext;if(!o){console.warn("Web Audio API not supported in this browser.");return}let n=new o,i=n.createOscillator(),s=n.createGain();i.type="triangle",i.frequency.setValueAtTime(200,n.currentTime),s.gain.setValueAtTime(1,n.currentTime),s.gain.exponentialRampToValueAtTime(.001,n.currentTime+2),i.connect(s),s.connect(n.destination),i.start(),i.stop(n.currentTime+2)}catch(o){console.error("Error playing gong sound:",o)}}startPresetTimer(t,e){this.playerSubState.set("preset_countdown"),this.presetTimerDuration.set(t);let o=t;this.presetTimerCountdownDisplay.set(String(o)),this.restTimerMainText.set(`GET READY: ${e.exerciseData.exerciseName}`);let n=e.type==="warmup"?`Warm-up ${this.getWarmupSetNumberForDisplay(e.exerciseData,e.setIndex)}/${this.getTotalWarmupSetsForExercise(e.exerciseData)}`:`Set ${this.getWorkingSetNumberForDisplay(e.exerciseData,e.setIndex)}/${this.getWorkingSetCountForExercise(e.exerciseData)}`;this.restTimerNextUpText.set(n),this.presetTimerSub&&this.presetTimerSub.unsubscribe(),this.presetTimerSub=sp(0,1e3).pipe(Jn(this.destroy$),hr(t+1)).subscribe({next:()=>{this.presetTimerCountdownDisplay.set(String(o)),o<=this.appSettingsService.countdownSoundSeconds()&&o>0&&this.appSettingsService.enableTimerCountdownSound()&&t>5&&this.playClientBeep(600,150),o--},complete:()=>{this.playerSubState()==="preset_countdown"&&(this.playClientBeep(1e3,250),this.handlePresetTimerFinished())}})}handlePresetTimerFinished(){this.presetTimerSub&&(this.presetTimerSub.unsubscribe(),this.presetTimerSub=void 0),this.presetTimerCountdownDisplay.set(null),this.playerSubState.set("performing_set"),this.cdr.detectChanges(),console.log("Pre-set timer finished. Player state set to PerformingSet.")}skipPresetTimer(){this.playerSubState()==="preset_countdown"&&(this.presetTimerSub&&(this.presetTimerSub.unsubscribe(),this.presetTimerSub=void 0),this.handlePresetTimerFinished())}getWarmupSetNumberForDisplay(t,e){let o=0;for(let n=0;n<=e;n++)t.sets[n].type==="warmup"&&o++;return o}getTotalWarmupSetsForExercise(t){return t.sets.filter(e=>e.type==="warmup").length}getWorkingSetNumberForDisplay(t,e){let o=0;for(let n=0;n<=e;n++)t.sets[n].type!=="warmup"&&o++;return o}getWorkingSetCountForExercise(t){return t.sets.filter(e=>e.type!=="warmup").length}findNextPlayableItemIndices(t,e,o,n=!1){let i=t,s=e,a=!1,l=!1,u=!1,c=o.exercises[t];if(n||s>=c.sets.length-1){if(s=0,!n&&c.supersetId&&c.supersetOrder!==null&&c.supersetOrder<(c.supersetSize||1)-1){let m=t+1;for(;m<o.exercises.length&&(o.exercises[m].supersetId!==c.supersetId||o.exercises[m].sessionStatus!=="pending");)m++;if(m<o.exercises.length&&o.exercises[m].supersetId===c.supersetId)return i=m,{nextExIdx:i,nextSetIdx:s,blockChanged:a,isEndOfAllPending:l,roundIncremented:u}}let p=this.totalBlockRounds();if(!n&&this.currentBlockRound()<p){this.currentBlockRound.update(x=>x+1),u=!0;let m=t;c.supersetId&&c.supersetOrder!==null&&(m=t-c.supersetOrder);let f=m,g=!1;for(;f<o.exercises.length&&(c.supersetId?o.exercises[f].supersetId===c.supersetId:f===m);){if(o.exercises[f].sessionStatus==="pending"){i=f,g=!0;break}f++}if(!g)this.currentBlockRound.set(p),u=!1;else return{nextExIdx:i,nextSetIdx:s,blockChanged:a,isEndOfAllPending:l,roundIncremented:u}}a=!0,this.currentBlockRound.set(1),u=!1;let d=t+1;c.supersetId&&c.supersetOrder!==null&&(d=t-c.supersetOrder+(c.supersetSize||1)),i=-1;for(let m=d;m<o.exercises.length;m++){let f=o.exercises[m];if(f.sessionStatus==="pending"){if(!f.supersetId||f.supersetOrder===0){i=m,this.getNumberOfLoggedSets(f.id)&&(s=this.getNumberOfLoggedSets(f.id));break}let g=m-(f.supersetOrder||0);if(g>=0&&o.exercises[g].sessionStatus==="pending"&&o.exercises[g].supersetId===f.supersetId){i=g;break}}}}else s++;return(i===-1||i>=o.exercises.length||i!==-1&&o.exercises[i].sessionStatus!=="pending")&&(l=!0,i=-1),{nextExIdx:i,nextSetIdx:s,blockChanged:a,isEndOfAllPending:l,roundIncremented:u}}getUnfinishedExercises(){let t=this.routine();return t?t.exercises.filter((e,o)=>!this.isExerciseFullyLogged(e)):[]}getFinishedExercises(){let t=this.routine(),e=this.currentWorkoutLogExercises();return t?t.exercises.filter((o,n)=>{let i=e.find(s=>s.exerciseId===o.exerciseId&&t.exercises[n].id===o.id);return i&&i.sets.length>=o.sets.length}):[]}navigateToNextStepInWorkout(t,e,o=!1){return j(this,null,function*(){let n=t.exerciseData,i=this.isExerciseFullyLogged(n);if(this.isPerformingDeferredExercise&&n.id===this.lastActivatedDeferredExerciseId&&i){console.log("navigateToNextStepInWorkout: Completed a deferred exercise. Re-evaluating all remaining"),this.isPerformingDeferredExercise=!1,this.lastActivatedDeferredExerciseId=null,this.exercisesProposedThisCycle={doLater:!1,skipped:!1},yield this.tryProceedToDeferredExercisesOrFinish(e);return}let{nextExIdx:s,nextSetIdx:a,blockChanged:l,isEndOfAllPending:u,roundIncremented:c}=this.findNextPlayableItemIndices(t.exerciseIndex,t.setIndex,e,o);if(u){console.log("navigateToNextStepInWorkout: No more 'pending' exercises. Proceeding to finish"),this.isPerformingDeferredExercise=!1,this.lastActivatedDeferredExerciseId=null,this.exercisesProposedThisCycle={doLater:!1,skipped:!1},t.exerciseData.sessionStatus="completed",this.savePausedSessionState(),yield this.tryProceedToDeferredExercisesOrFinish(e);return}if(s===-1||!e.exercises[s]||!e.exercises[s].sets[a]){console.error("navigateToNextStepInWorkout: findNextPlayableItemIndices returned an invalid index, but did not signal end of workout. Fallback to finish flow",{nextExIdx:s,nextSetIdx:a}),yield this.tryProceedToDeferredExercisesOrFinish(e);return}if(this.currentExerciseIndex.set(s),this.currentSetIndex.set(a),t.exerciseIndex!==s&&e.exercises[s].id!==this.lastActivatedDeferredExerciseId&&(this.isPerformingDeferredExercise=!1,this.lastActivatedDeferredExerciseId=null),(l||c||o||t.exerciseIndex!==s)&&(this.lastPerformanceForCurrentExercise=null),l){let d=e.exercises[s];if(!d.supersetId||d.supersetOrder===0)this.totalBlockRounds.set(d.rounds??1);else{let m=e.exercises.find(f=>f.supersetId===d.supersetId&&f.supersetOrder===0);this.totalBlockRounds.set(m?.rounds??1)}}let p=t.setData.restAfterSet;p>0&&!o?this.startRestPeriod(p):(this.playerSubState.set("performing_set"),yield this.prepareCurrentSet())})}_findNextPendingBlock(t,e){for(let o=t+1;o<e.exercises.length;o++){let n=e.exercises[o];if(n.sessionStatus==="pending"&&(n.sets?.length??0)>0){let i=this.findFirstUnloggedSetIndex(n.id,n.sets.map(s=>s.id))??0;return{exerciseIndex:o,setIndex:i}}}for(let o=0;o<=t;o++){let n=e.exercises[o];if(n.sessionStatus==="pending"&&(n.sets?.length??0)>0&&!this.isExerciseFullyLogged(n)){let i=this.findFirstUnloggedSetIndex(n.id,n.sets.map(s=>s.id))??0;return{exerciseIndex:o,setIndex:i}}}return null}startRestPeriod(t,e=!1){if(!this.isTabataMode())if(this.playerSubState.set("resting"),this.restDuration.set(t),gr(this.platformId)&&t>0){let o=this.routine();if(e)this.restTimerMainText.set(this.restTimerMainTextOnPause),this.restTimerNextUpText.set(this.restTimerNextUpTextOnPause);else{this.restTimerMainText.set("RESTING");let n=this.peekNextSetInfo(),i="Next Exercise";if(n&&n.exerciseData&&n.exerciseData.sets){let s=n.type==="warmup",a=s?this.getWarmupSetNumberForDisplay(n.exerciseData,n.setIndex):this.getWorkingSetNumberForDisplay(n.exerciseData,n.setIndex),l=s?this.getTotalWarmupSetsForExercise(n.exerciseData):this.getWorkingSetCountForExercise(n.exerciseData),u=n.exerciseData.exerciseName||"Exercise",c="";if(o){let p=n.exerciseData,d=p.rounds??0;if(p.supersetId&&p.supersetOrder!==null){let m=o.exercises.find(f=>f.supersetId===p.supersetId&&f.supersetOrder===0);m&&(d=m.rounds??1)}d>=1&&p.supersetSize!==void 0&&p.supersetSize!==null&&p.supersetSize>0&&(c=` (Round ${this.currentBlockRound()}/${d})`)}i=`${s?"Warm-up ":""}Set ${a}/${l} of ${u}${c}`}this.restTimerNextUpText.set(i)}this.playerSubState.set("resting"),this.restDuration.set(t),this.isRestTimerVisible.set(!0),this.updateRestTimerDisplay(t)}else this.isRestTimerVisible.set(!1),this.playerSubState.set("performing_set"),this.prepareCurrentSet()}getLatestLoggedExercise(){if(this.currentWorkoutLogExercises())return this.currentWorkoutLogExercises().find((t,e)=>e===this.currentWorkoutLogExercises().length-1)}peekNextSetInfo(){let t=this.routine(),e=this.currentExerciseIndex(),o=this.currentSetIndex();if(t&&t.exercises[e]&&t.exercises[e].sets[o]){let n=t.exercises[e],i=t.exercises[e].sets[o];return{exerciseIndex:e,setIndex:o,exerciseData:n,setData:i,type:i.type??"standard",isCompleted:!1}}return null}handleRestTimerFinished(){this.addActualRestAfterSet(null),console.log("Rest timer finished."),this.isRestTimerVisible.set(!1),this.prepareCurrentSet()}addActualRestAfterSet(t){let e=this.getLatestLoggedExercise();if(e){let o=e?.sets.find((n,i)=>i===e.sets.length-1);if(o){let n=this.routine()?.exercises.find(i=>i.id===e.id)?.sets.find(i=>i.id===o.plannedSetId);if(t&&this.restDuration()){let i=Math.ceil(this.restDuration()-t);o.restAfterSetUsed=i}else{let i=n?.restAfterSet??60;o.restAfterSetUsed=i}}}}handleRestTimerSkipped(t){this.addActualRestAfterSet(t),console.log("Rest timer skipped."),this.isRestTimerVisible.set(!1),this.toastService.clearAll(),this.toastService.info("Rest skipped",2e3),this.playerSubState.set("performing_set"),this.prepareCurrentSet()}getDisabled(){return this.timedSetTimerState()==="running"||this.sessionState()==="paused"||this.playerSubState()==="preset_countdown"||this.playerSubState()==="resting"}handleMainAction(){if(this.sessionState()==="paused"){this.toastService.warning("Session is paused. Please resume to continue",3e3,"Paused");return}switch(this.playerSubState()){case"performing_set":{this.completeAndLogCurrentSet();break}case"preset_countdown":this.skipPresetTimer();break;case"resting":this.skipRest();break}}shouldRunPresetTimerForCurrentSet=Nt(()=>{let t=this.appSettingsService.enablePresetTimer(),e=this.appSettingsService.presetTimerDurationSeconds();if(!t||e<=0)return!1;let o=this.routine(),n=this.currentExerciseIndex(),i=this.currentSetIndex();if(!o||!o.exercises[n]||!o.exercises[n].sets[i])return!1;let s=n===0&&i===0&&this.currentBlockRound()===1,a=1/0;if(i>0)a=o.exercises[n].sets[i-1].restAfterSet;else if(n>0){let l=o.exercises[n-1];a=l.sets[l.sets.length-1].restAfterSet}return s||a===0});getIncompleteExercises(){let t=this.routine(),e=this.currentWorkoutLogExercises();return t?t.exercises.filter(o=>{if(o.sessionStatus!=="pending")return!1;let n=e.find(i=>i.exerciseId===o.exerciseId);return n?n.sets.length<o.sets.length:!0}):[]}getExerciseStatus(t){let e=this.routine();if(!e)return"pending";let o=e.exercises?.find(n=>t.id===n.id);return!o||!o.sessionStatus?"pending":o.sessionStatus}isExerciseSkipped(t){let e=this.routine();if(!e)return!1;let o=e.exercises?.find(n=>t.id===n.id);return!o||!o.sessionStatus?!1:o.sessionStatus==="skipped"}isExerciseDoLater(t){let e=this.routine();if(!e)return!1;let o=e.exercises?.find(n=>t.id===n.id);return!o||!o.sessionStatus?!1:o.sessionStatus==="do_later"}getExerciseStatusIndicator(t){let e=t.id===this.activeSetInfo()?.exerciseData.id;if(this.isExerciseFullyLogged(t))return t.sessionStatus="completed"," - Completed";if(this.isExercisePartiallyLogged(t)){t.sessionStatus=this.getExerciseStatus(t)||"started";let o=this.getNumberOfLoggedSets(t.id,"warmup"),n=e?"Current":"Started";return this.isExerciseSkipped(t)&&(n="Started (Skipped)"),this.isExerciseDoLater(t)&&(n="Started (Do Later)"),` - ${n}: ${o} of ${this.getWorkingSets(t)} done`}if(e)return t.sessionStatus="started"," - Current";switch(t.sessionStatus){case"skipped":return" - Skipped";case"do_later":return" - Do Later";default:return" - Pending"}}getExerciseButtonCssClass(t,e){let o=e.includes("Current"),n=!!t.supersetId,i="";switch(t.sessionStatus){case"started":i="bg-yellow-500 text-white";break;case"pending":i="bg-violet-500 text-white";break;case"do_later":i="bg-orange-500 text-white";break;case"skipped":i="bg-red-500 text-white";break;case"completed":i="bg-green-600 text-white";break;default:i="bg-gray-500 dark:bg-gray-700";break}return o&&(i="bg-blue-600 text-white"),`${i} ${n?"border-2 border-primary":""}`}getSupersetIndicatorText(t,e){if(!t.supersetId)return"";let n=e.exercises.filter(i=>i.supersetId===t.supersetId).findIndex(i=>i.id===t.id);return n!==-1?` [Superset #${n+1}]`:""}jumpToExercise(t=""){return j(this,null,function*(){if(t?this.headerOverviewString=t:this.headerOverviewString=this.HEADER_OVERVIEW_STRING,this.sessionState()==="paused"){this.toastService.warning("Session is paused. Resume to jump to an exercise",3e3,"Paused"),this.closeWorkoutMenu();return}let e=this.routine();if(!e||!e.exercises||e.exercises.length===0){this.toastService.error("No exercises available to jump to",0,"Error"),this.closeWorkoutMenu();return}let n=e.exercises.map((s,a)=>er(Ht({},s),{originalIndex:a,isFullyLogged:this.isExerciseFullyLogged(s),isPartiallyLogged:this.isExercisePartiallyLogged(s)})).map(s=>{let a=this.getExerciseStatusIndicator(s),l=this.getSupersetIndicatorText(s,e),u=this.getExerciseButtonCssClass(s,a);return{text:`${s.exerciseName}${a}${l}`,role:s.isFullyLogged?"restart":"confirm",data:s.originalIndex,cssClass:u}});n.push({text:"Cancel",role:"cancel",data:"cancel_jump"}),this.closeWorkoutMenu();let i=yield this.alertService.showConfirmationDialog(this.headerOverviewString,"Select an exercise to start, continue, or restart:",n);if(i&&i.data!=="cancel_jump"&&typeof i.data=="number"){let s=i.data,a=e.exercises[s];if(!a){this.toastService.error("Selected exercise not found",0,"Error");return}if(i.role==="restart"){if((yield this.alertService.showConfirmationDialog(`Restart ${a.exerciseName}`,"Are you sure you want to restart the selected exercise? By doing so the previous logged sets will be removed",[{text:"Cancel",role:"cancel",data:"cancel"},{text:"OK",role:"confirm",data:"confirm"}]))?.data!=="confirm")return;console.log(`Restarting exercise: ${a.exerciseName}. Removing its previous log entry.`),this.currentWorkoutLogExercises.update(f=>f.filter(g=>g.id!==a.id)),this.toastService.info(`Restarting ${a.exerciseName}.`,2e3,"Restarting")}console.log(`Jumping to exercise: ${a.exerciseName} at index ${s}`),this.stopOngoingTimers();let l=JSON.parse(JSON.stringify(e)),u=l.exercises[s],c=u.sessionStatus==="do_later"||u.sessionStatus==="skipped";u.sessionStatus="pending",this.routine.set(l),this.currentExerciseIndex.set(s);let p=this.findFirstUnloggedSetIndex(a.id,a.sets.map(m=>m.id))||0,d=i.role==="restart"?0:p;if(this.currentSetIndex.set(d),this.currentBlockRound.set(1),!a.supersetId||a.supersetOrder===0)this.totalBlockRounds.set(a.rounds??1);else{let m=l.exercises.find(f=>f.supersetId===a.supersetId&&f.supersetOrder===0);this.totalBlockRounds.set(m?.rounds??1)}this.lastPerformanceForCurrentExercise=null,this.isPerformingDeferredExercise=c,this.lastActivatedDeferredExerciseId=c?a.id:null,this.playerSubState.set("performing_set"),yield this.prepareCurrentSet(),i.role!=="restart"&&this.toastService.info(`Jumped to ${a.exerciseName}, set ${d+1} of ${a.sets?.length}.`,2500)}})}stopOngoingTimers(){this.isRestTimerVisible()&&this.isRestTimerVisible.set(!1),this.playerSubState(),this.playerSubState()==="preset_countdown"&&this.presetTimerSub&&(this.presetTimerSub.unsubscribe(),this.presetTimerSub=void 0,this.presetTimerCountdownDisplay.set(null)),this.timedSetTimerState()!=="idle"&&this.timedSetIntervalSub&&this.resetTimedSet()}loadAvailableExercises(){this.exerciseService.getExercises().pipe(hr(1)).subscribe(t=>{this.availableExercises=t})}isEndReached=we(!1);openExerciseSelectionModal(){if(this.sessionState()==="paused"){this.toastService.warning("Session is paused. Resume to add exercise",3e3,"Paused");return}this.availableExercises.length===0&&this.loadAvailableExercises(),this.modalSearchTerm.set(""),this.isExerciseModalOpen.set(!0),this.closeWorkoutMenu(),setTimeout(()=>this.myExerciseInput.nativeElement?.focus())}closeExerciseSelectionModal(){this.isExerciseModalOpen.set(!1)}onModalSearchTermChange(t){let e=t.target;this.modalSearchTerm.set(e.value)}isExerciseDetailModalOpen=we(!1);isSimpleModalOpen=we(!1);exerciseDetailsId="";exerciseDetailsName="";performAction(){console.log("Action performed from modal footer!"),this.isExerciseDetailModalOpen.set(!1)}openModal(t){this.exerciseDetailsId=t.exerciseId,this.exerciseDetailsName=t.exerciseName||"Exercise details",this.isSimpleModalOpen.set(!0)}showCompletedSetsForExerciseInfo=we(!0);toggleCompletedSetsForExerciseInfo(){this.showCompletedSetsForExerciseInfo.update(t=>!t)}showCompletedSetsForDayInfo=we(!1);toggleCompletedSetsForDayInfo(){this.showCompletedSetsForDayInfo.update(t=>!t)}getRoundsForExerciseBlock(t,e){let o=e.exercises[t];return o?o.supersetId?e.exercises.find(i=>i.supersetId===o.supersetId&&i.supersetOrder===0)?.rounds??1:o.rounds??1:1}setupTabataMode(t,e=0,o){let n=[];this.tabataIntervalMap=[],n.push({type:"prepare",duration:10,exerciseName:"Get Ready"}),this.tabataIntervalMap.push([0,0,1]);let i=0;for(;i<t.exercises.length;){let l=t.exercises[i],u=this.getRoundsForExerciseBlock(i,t),p=!!l.supersetId?l.supersetSize??1:1;for(let d=1;d<=u;d++)for(let m=0;m<p;m++){let f=i+m,g=t.exercises[f];if(!g)continue;let x=d===u;g.sets.forEach((y,b)=>{n.push({type:"work",duration:y.duration||5,exerciseName:g.exerciseName}),this.tabataIntervalMap.push([f,b,d]);let T=f===t.exercises.length-1,R=b===g.sets.length-1;x&&T&&R||y.restAfterSet>0&&(n.push({type:"rest",duration:y.restAfterSet||20,exerciseName:"Rest"}),this.tabataIntervalMap.push([f,b,d]))})}i+=p}let s=n.length,a=n.map((l,u)=>er(Ht({},l),{totalIntervals:s,currentIntervalNumber:u+1}));this.tabataIntervals.set(a),this.sessionState.set("playing"),this.routine.set(t),this.isTabataMode.set(!0),this.setPlayerStateFromTabataIndex(e),o!==void 0&&o>0?this.startCurrentTabataInterval(o):this.startCurrentTabataInterval()}startCurrentTabataInterval(t){if(this.tabataTimerSub&&this.tabataTimerSub.unsubscribe(),this.sessionState()==="paused")return;let e=this.currentTabataInterval();if(!e){this.sessionState.set("end"),this.finishWorkoutAndReportStatus();return}let o=t!==void 0?t:e.duration;this.tabataTimeRemaining.set(o),this.tabataTimerSub=sp(0,1e3).pipe(hr(e.duration+1),Jn(this.destroy$)).subscribe({next:()=>{this.tabataTimeRemaining.update(n=>n-1)},complete:()=>{this.sessionState()==="playing"&&this.nextTabataInterval()}})}nextTabataInterval(){this.currentTabataInterval()?.type==="work"&&this.completeAndLogCurrentSet();let t=this.currentTabataIntervalIndex()+1;t<this.tabataIntervals().length?(this.setPlayerStateFromTabataIndex(t),this.startCurrentTabataInterval()):(this.tabataTimeRemaining.set(0),this.tabataTimerSub&&this.tabataTimerSub.unsubscribe(),this.sessionState.set("end"),this.finishWorkoutAndReportStatus())}previousTabataInterval(){let t=this.currentTabataIntervalIndex()-1;t>=0&&(this.currentTabataIntervalIndex.set(t),this.startCurrentTabataInterval())}toggleTabataPause(){this.sessionState()==="playing"?(this.sessionState.set("paused"),this.tabataTimerSub&&this.tabataTimerSub.unsubscribe(),this.timerSub&&this.timerSub.unsubscribe(),this.sessionTimerElapsedSecondsBeforePause+=Math.floor((Date.now()-this.workoutStartTime)/1e3)):this.sessionState()==="paused"&&(this.sessionState.set("playing"),this.workoutStartTime=Date.now(),this.startSessionTimer(),this.startCurrentTabataInterval())}getCurrentSetInfo(){let t=this.routine(),e=this.currentExerciseIndex(),o=this.currentSetIndex();if(t&&t.exercises[e]&&t.exercises[e].sets[o]){let n=t.exercises[e],i=t.exercises[e].sets[o],a=this.currentWorkoutLogExercises().find(l=>l.exerciseId===n.exerciseId)?.sets.find(l=>l.plannedSetId===i.id);return{exerciseIndex:e,setIndex:o,exerciseData:n,setData:i,type:i.type??"standard",baseExerciseInfo:void 0,isCompleted:!!a,actualReps:a?.repsAchieved,actualWeight:a?.weightUsed,actualDuration:a?.durationPerformed,notes:a?.notes}}return null}static \u0275fac=function(e){return new(e||r)};static \u0275cmp=vo({type:r,selectors:[["app-workout-player"]],viewQuery:function(e,o){if(e&1&&(Do(OM,5),Do(LM,5)),e&2){let n;Fo(n=Oo())&&(o.myExerciseInput=n.first),Fo(n=Oo())&&(o.intervalListItems=n)}},hostBindings:function(e,o){e&1&&oe("beforeunload",function(i){return o.unloadNotification(i)},Td)},features:[Nd([on])],decls:8,vars:10,consts:[["loadingOrError",""],["standardPlayer",""],["intervalListItem",""],["workoutCompleteOrError",""],["routineNotFound",""],["loadingBaseExIcon",""],["exerciseSearchFied",""],["style","height: 60px; position: fixed; top: 0; left: 0; right: 0; z-index: 50;",4,"ngIf","ngIfElse"],[3,"timerFinished","timerSkipped","isVisible","durationSeconds","mainText","nextUpText"],["class","fixed inset-0 z-50 bg-black/70 backdrop-blur-md flex flex-col items-center justify-center p-4 space-y-2 sm:space-y-3","style","padding-top: env(safe-area-inset-top); padding-bottom: env(safe-area-inset-bottom);",4,"ngIf"],["style","z-index: 100","class","fixed inset-0 bg-gray-900/70 dark:bg-black/80 backdrop-blur-md flex items-center justify-center p-4 transition-opacity duration-300 ease-in-out",4,"ngIf"],["class","fixed inset-0 bg-gray-700 bg-opacity-75 transition-opacity overflow-y-auto h-full w-full z-[70] flex items-center justify-center p-4 backdrop-blur-sm",3,"click",4,"ngIf"],[3,"isOpen","modalTitle","isOpenChange",4,"ngIf"],[2,"height","60px","position","fixed","top","0","left","0","right","0","z-index","50"],["class","tabata-player",4,"ngIf","ngIfElse"],[1,"tabata-player"],[4,"ngIf"],[1,"fixed","inset-0","transition-all","duration-700","ease-in-out",3,"ngClass"],[1,"relative","z-10","flex","flex-col","h-screen","text-white","p-4","font-sans"],[1,"flex","justify-between","items-center","w-full","px-4","flex-shrink-0","mt-2"],[1,"text-sm","font-medium","bg-black/20","px-3","py-1","rounded-full"],[1,"flex","items-center","space-x-2"],[1,"bg-black/20","rounded-full","hover:bg-black/40","transition",3,"click"],["xmlns","http://www.w3.org/2000/svg","class","h-12 w-12","fill","none","viewBox","0 0 24 24","stroke","currentColor",4,"ngIf"],[1,"flex","flex-col","items-center","justify-center","text-center"],["class","text-2xl md:text-3xl font-semibold mb-2 text-shadow-md bg-black/20 px-4 py-1 rounded-full",4,"ngIf"],[1,"text-[250px]","md:text-[450px]","font-bold","tabular-nums","leading-none","tracking-tighter","text-shadow-lg"],[1,"text-2xl","md:text-3xl","font-semibold","capitalize","mt-2","text-shadow"],[1,"flex-shrink-0","max-h-48","overflow-y-auto","mb-2","scrollbar-hide","px-2"],[1,"space-y-0"],["class","text-lg px-2 py-0 transition-all duration-300 ease-in-out",4,"ngFor","ngForOf"],[1,"flex-shrink-0","flex","justify-between","items-center","w-full"],[1,"p-2","disabled:opacity-30","hover:scale-110","active:scale-95","transition-transform",3,"click","disabled"],["xmlns","http://www.w3.org/2000/svg","fill","none","viewBox","0 0 24 24","stroke","currentColor",1,"h-10","w-10"],["stroke-linecap","round","stroke-linejoin","round","stroke-width","2","d","M11 19l-7-7 7-7m8 14l-7-7 7-7"],[1,"text-2xl","font-semibold","bg-black/20","px-4","py-2","rounded-full","tabular-nums"],["stroke-linecap","round","stroke-linejoin","round","stroke-width","2","d","M13 5l7 7-7 7M5 5l7 7-7 7"],["xmlns","http://www.w3.org/2000/svg","fill","none","viewBox","0 0 24 24","stroke","currentColor",1,"h-12","w-12"],["stroke-linecap","round","stroke-linejoin","round","stroke-width","2","d","M10 9v6m4-6v6"],["stroke-linecap","round","stroke-linejoin","round","stroke-width","2","d","M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z"],[1,"text-2xl","md:text-3xl","font-semibold","mb-2","text-shadow-md","bg-black/20","px-4","py-1","rounded-full"],[1,"text-lg","px-2","py-0","transition-all","duration-300","ease-in-out"],[1,"rounded-md","flex","items-center","p-2","transition-all","duration-200","ease-in-out",3,"ngClass"],[1,"font-mono","w-8","text-right","mr-2"],[1,"capitalize","font-medium"],["class","ml-2 font-light truncate",4,"ngIf"],[1,"ml-2","font-light","truncate"],["class","workout-player-container bg-gray-50 dark:bg-gray-950 flex flex-col",4,"ngIf","ngIfElse"],[1,"workout-player-container","bg-gray-50","dark:bg-gray-950","flex","flex-col"],["class","fixed inset-0 z-[60] bg-black/70 backdrop-blur-sm flex flex-col items-center justify-center space-y-6 p-4",4,"ngIf"],[1,"fixed","top-0","left-0","right-0","z-30","bg-gray-50","dark:bg-gray-950","border-b","border-gray-200","dark:border-gray-800","p-2","flex","items-center","justify-between","h-12"],[1,"text-gray-600","dark:text-gray-300","hover:text-primary","dark:hover:text-primary-light","p-2","-ml-1",3,"click"],["fill","none","stroke","currentColor","viewBox","0 0 24 24","xmlns","http://www.w3.org/2000/svg",1,"w-6","h-6"],["stroke-linecap","round","stroke-linejoin","round","stroke-width","2","d","M15 19l-7-7 7-7"],[1,"text-center","cursor-pointer",3,"click","title"],[1,"text-m","font-semibold","text-gray-700","dark:text-gray-300","uppercase","tracking-wider","truncate","max-w-[calc(100vw-120px)]"],[1,"text-xs","text-gray-500","dark:text-gray-400"],[1,"text-gray-600","dark:text-gray-300","hover:text-primary","dark:hover:text-primary-light","p-2","-mr-1","disabled:opacity-50",3,"click","disabled"],["xmlns","http://www.w3.org/2000/svg","fill","none","viewBox","0 0 24 24","stroke","currentColor","stroke-width","2",1,"h-6","w-6"],["stroke-linecap","round","stroke-linejoin","round","d","M12 5v.01M12 12v.01M12 19v.01M12 6a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2z"],[1,"flex-grow","overflow-y-auto","pt-11","your-main-container"],["class","px-4 max-w-md mx-auto",4,"ngIf","ngIfElse"],["class","fixed bottom-[76px] left-0 right-0 z-10 bg-gray-100 dark:bg-gray-900 border-t border-gray-200 dark:border-gray-700 p-2 text-center h-auto min-h-[60px] flex flex-col justify-center shadow-[0_-1px_3px_rgba(0,0,0,0.07)]",4,"ngIf"],[1,"fixed","inset-0","z-[60]","bg-black/70","backdrop-blur-sm","flex","flex-col","items-center","justify-center","space-y-6","p-4"],[1,"text-4xl","font-bold","text-white"],[1,"text-lg","text-gray-200"],[1,"bg-green-500","hover:bg-green-600","text-white","font-bold","py-3","px-8","rounded-md","text-xl","shadow-lg","w-full","max-w-xs",3,"click"],[1,"text-m","text-red-300","hover:text-red-100","font-medium","py-2","px-4","rounded-md","border","border-red-300","hover:bg-red-700/30","w-full","max-w-xs","mt-2",3,"click"],[1,"px-4","max-w-md","mx-auto"],[1,"flex","text-center","justify-center","items-center","mb-1","hover:cursor-pointer",3,"click","title"],["class","mr-2 h-8 w-8 flex-shrink-0",4,"ngIf","ngIfElse"],[1,"text-2xl","font-bold","text-gray-800","dark:text-gray-100","truncate",3,"title"],[1,"text-center","mb-2"],["class","flex flex-col",4,"ngIf"],[1,"text-m","text-gray-500","dark:text-gray-400"],["class","text-blue-500 dark:text-blue-400",4,"ngIf"],["class","ml-2",4,"ngIf"],["class","ml-2 text-purple-500 dark:text-purple-400 italic",4,"ngIf"],["class","text-center mb-3",4,"ngIf"],["class","text-center mb-6 animate-fadeIn",4,"ngIf"],["class","left-0 right-0 z-20 p-3",4,"ngIf"],["class","text-wrap text-sm text-center text-gray-800 dark:text-gray-100 px-2 text-s",3,"title",4,"ngIf"],[1,"mr-2","h-8","w-8","flex-shrink-0"],["class","w-full h-full object-contain",3,"src","alt","ngClass",4,"ngIf"],[1,"w-full","h-full","object-contain",3,"src","alt","ngClass"],[1,"w-8","h-8","bg-gray-200","dark:bg-gray-700","rounded-md","animate-pulse","mr-2","flex-shrink-0"],[1,"flex","flex-col"],[1,"text-blue-500","dark:text-blue-400"],[1,"ml-2"],[1,"ml-2","text-purple-500","dark:text-purple-400","italic"],[1,"text-center","mb-3"],["class","px-2 py-0.5 text-xs font-semibold text-red-700 bg-red-100 dark:bg-red-900 dark:text-red-200 rounded-full",4,"ngIf"],["class","px-2 py-0.5 text-xs font-semibold text-yellow-700 bg-yellow-100 dark:bg-yellow-800 dark:text-yellow-200 rounded-full",4,"ngIf"],[1,"px-2","py-0.5","text-xs","font-semibold","text-red-700","bg-red-100","dark:bg-red-900","dark:text-red-200","rounded-full"],[1,"px-2","py-0.5","text-xs","font-semibold","text-yellow-700","bg-yellow-100","dark:bg-yellow-800","dark:text-yellow-200","rounded-full"],[1,"text-center","mb-6","animate-fadeIn"],[1,"text-xl","font-semibold","text-blue-600","dark:text-blue-400"],[1,"text-4xl","sm:text-5xl","font-bold","text-blue-500","dark:text-blue-300","my-3"],[1,"text-m","text-gray-600","dark:text-gray-400"],[1,"mt-4","text-xs","text-primary","dark:text-primary-light","hover:underline",3,"click"],[1,"space-y-2","mb-2",3,"formGroup"],["class","mt-3",4,"ngIf"],["class","flex justify-center  cursor-pointer",3,"click",4,"ngIf"],[1,"block","text-xs","font-medium","text-gray-500","dark:text-gray-400","uppercase","tracking-wider","text-center","mb-1"],[1,"flex","items-center","justify-center","space-x-2"],["type","button","appPress","",1,"px-3","py-4","bg-gray-200","dark:bg-gray-700","text-gray-700","dark:text-gray-200","hover:bg-gray-300","dark:hover:bg-gray-600","disabled:opacity-50","rounded-r-sm","rounded-l-2xl",3,"shortPress","longPress","pressRelease","disabled"],["fill","none","stroke","currentColor","viewBox","0 0 24 24",1,"w-5","h-5"],["stroke-linecap","round","stroke-linejoin","round","stroke-width","2","d","M20 12H4"],[1,"w-20","text-center","text-3xl","font-bold","bg-transparent","p-0","text-gray-800","dark:text-gray-100","cursor-pointer","hover:bg-gray-100","dark:hover:bg-gray-800","py-1",3,"click"],["type","number","formControlName","actualWeight",1,"hidden"],["type","button","appPress","",1,"px-3","py-4","bg-gray-200","dark:bg-gray-700","text-gray-700","dark:text-gray-200","hover:bg-gray-300","dark:hover:bg-gray-600","disabled:opacity-50","rounded-l-sm","rounded-r-2xl",3,"shortPress","longPress","pressRelease","disabled"],["stroke-linecap","round","stroke-linejoin","round","stroke-width","2","d","M12 4v16m8-8H4"],["type","number","formControlName","actualReps","readonly","","placeholder","0",1,"w-20","text-center","text-3xl","font-bold","bg-transparent","border-none","p-0","focus:ring-0","text-gray-800","dark:text-gray-100",3,"click"],["for","timedSetDisplay",1,"block","text-xs","font-medium","text-gray-500","dark:text-gray-400","uppercase","tracking-wider","text-center","mb-2"],["id","timedSetDisplay",1,"block","w-full","px-3","py-1","border-none","text-5xl","font-bold","text-center","bg-transparent","focus:ring-0",3,"ngClass"],["type","number","formControlName","actualDuration",1,"hidden"],[1,"flex","space-x-2","mt-2","justify-center"],["type","button",1,"flex-grow","max-w-[150px]","text-white","font-medium","p-3","rounded-full","transition-colors","text-m","disabled:opacity-50",3,"click","ngClass"],["type","button","class","flex-grow max-w-[150px] bg-gray-300 hover:bg-gray-400 dark:bg-gray-700 dark:hover:bg-gray-500 text-gray-800 dark:text-gray-200 font-medium py-2 px-3  rounded-full transition-colors text-m disabled:opacity-50",3,"click",4,"ngIf"],["type","button",1,"flex-grow","max-w-[150px]","bg-gray-300","hover:bg-gray-400","dark:bg-gray-700","dark:hover:bg-gray-500","text-gray-800","dark:text-gray-200","font-medium","py-2","px-3","rounded-full","transition-colors","text-m","disabled:opacity-50",3,"click"],[1,"mt-3"],["for","setNotes",1,"block","text-xs","font-medium","text-gray-500","dark:text-gray-400","uppercase","tracking-wider","text-center","mb-1",3,"click"],["id","setNotes","formControlName","setNotes","rows","1","placeholder","e.g., felt good, struggled on last rep...",1,"w-full","p-2","border","border-gray-300","dark:border-gray-600","rounded-md","shadow-sm","focus:ring-primary","focus:border-primary","dark:bg-gray-800","dark:text-gray-200","text-m","disabled:opacity-60",3,"disabled"],[1,"flex","justify-center","cursor-pointer",3,"click"],[1,"inline-flex","items-center","space-x-2","bg-blue-400","text-white","rounded-full","px-4","py-1"],["xmlns","http://www.w3.org/2000/svg","fill","none","viewBox","0 0 24 24","stroke-width","1.5","stroke","currentColor",1,"w-6","h-6","transition-all","mr-2"],["stroke-linecap","round","stroke-linejoin","round"],[1,"left-0","right-0","z-20","p-3"],[1,"max-w-md","mx-auto"],[1,"w-full","font-bold","py-3.5","px-4","rounded-full","shadow-md","text-lg","transition-colors","focus:outline-none","focus:ring-2","disabled:opacity-70","text-white","transition-colors","duration-150",3,"click","disabled","ngClass"],[1,"text-wrap","text-sm","text-center","text-gray-800","dark:text-gray-100","px-2","text-s",3,"title"],[1,"font-medium"],[1,"text-center","py-10","pt-16"],[1,"text-2xl","font-semibold","text-gray-700","dark:text-gray-200"],["class","text-gray-600 dark:text-gray-400 mt-2",4,"ngIf"],["class","mt-6 bg-primary hover:bg-primary-dark text-white font-bold py-3 px-6 rounded-md shadow-md text-lg transition-colors",3,"click",4,"ngIf"],[1,"flex","justify-center","items-center","gap-3","flex-col"],["routerLink","/workout","class","mt-1 w-full max-w-xs bg-gray-500 hover:bg-gray-600 text-white font-semibold py-2 px-6 rounded-md text-md shadow-md disabled:opacity-60 disabled:cursor-not-allowed",4,"ngIf"],[1,"w-full","max-w-xs","bg-purple-500","hover:bg-purple-600","text-white","font-semibold","py-2","px-6","rounded-md","text-md","shadow-md","disabled:opacity-60","disabled:cursor-not-allowed","mt-1",3,"click","disabled"],[1,"text-gray-600","dark:text-gray-400","mt-2"],[1,"mt-6","bg-primary","hover:bg-primary-dark","text-white","font-bold","py-3","px-6","rounded-md","shadow-md","text-lg","transition-colors",3,"click"],["routerLink","/workout",1,"mt-1","w-full","max-w-xs","bg-gray-500","hover:bg-gray-600","text-white","font-semibold","py-2","px-6","rounded-md","text-md","shadow-md","disabled:opacity-60","disabled:cursor-not-allowed"],[1,"fixed","bottom-[76px]","left-0","right-0","z-10","bg-gray-100","dark:bg-gray-900","border-t","border-gray-200","dark:border-gray-700","p-2","text-center","h-auto","min-h-[60px]","flex","flex-col","justify-center","shadow-[0_-1px_3px_rgba(0,0,0,0.07)]"],[1,"max-w-md","mx-auto","w-full"],[1,"text-xs","font-semibold","text-gray-500","dark:text-gray-400","uppercase","tracking-wider"],[1,"text-base","font-medium","text-gray-800","dark:text-gray-100","truncate","px-4",3,"title"],[1,"text-m","text-gray-600","dark:text-gray-300"],[1,"ml-2","text-xs","text-primary","dark:text-primary-light","hover:underline",3,"click"],[1,"text-xl","font-bold","text-blue-600","dark:text-blue-300"],[1,"mt-0.5","text-xs","text-primary","dark:text-primary-light","hover:underline",3,"click"],[1,"fixed","top-0","left-0","right-0","z-30","bg-gray-50","dark:bg-gray-950","border-b","border-gray-200","dark:border-gray-800","p-4","flex","items-center","justify-between","h-16"],[1,"text-gray-600","dark:text-gray-300","hover:text-primary","dark:hover:text-primary-light","p-2","-ml-2",3,"click"],[1,"text-center"],[1,"text-m","font-semibold","text-gray-700","dark:text-gray-300","uppercase","tracking-wider"],[1,"w-6"],[1,"text-center","py-20","pt-24"],[1,"text-2xl","font-semibold","text-red-600","dark:text-red-400","mb-4"],[1,"text-gray-600","dark:text-gray-400"],["routerLink","/workout",1,"text-gray-600","dark:text-gray-300","hover:text-primary","dark:hover:text-primary-light","p-2","-ml-1"],[1,"fixed","inset-0","z-50","bg-black/70","backdrop-blur-md","flex","flex-col","items-center","justify-center","p-4","space-y-2","sm:space-y-3",2,"padding-top","env(safe-area-inset-top)","padding-bottom","env(safe-area-inset-bottom)"],[1,"flex","columns-3"],[1,"p-1.5","rounded-full","text-gray-500","hover:text-gray-700","dark:text-gray-400","dark:hover:text-gray-200","hover:bg-gray-100","dark:hover:bg-gray-700/70","focus:outline-none","transition-colors",3,"click"],["_ngcontent-ng-c2442506092","","xmlns","http://www.w3.org/2000/svg","fill","none","viewBox","0 0 24 24","stroke","currentColor","stroke-width","2.5",1,"h-6","w-6"],["_ngcontent-ng-c2442506092","","stroke-linecap","round","stroke-linejoin","round","d","M6 18L18 6M6 6l12 12"],[1,"text-2xl","sm:text-3xl","font-bold","text-white","mb-2"],[1,"flex","justify-center","items-center","w-full","max-w-xs","bg-yellow-500","hover:bg-yellow-600","text-white","font-bold","py-2.5","px-6","rounded-md","text-lg","shadow-lg","disabled:opacity-60","disabled:cursor-not-allowed",3,"click","disabled"],["viewBox","0 0 20 20","xmlns","http://www.w3.org/2000/svg",1,"h-8","w-8","text-white","mr-2"],["cx","10","cy","10","r","8","fill","none","stroke","currentColor","stroke-width","2"],["x","7","y","6","width","2","height","9","rx","4","ry","4","fill","currentColor"],["x","11","y","6","width","2","height","9","rx","4","ry","4","fill","currentColor"],["class","flex justify-center items-center w-full max-w-xs bg-fuchsia-500 hover:bg-fuchsia-600 text-white font-semibold py-2 px-6 rounded-md text-md shadow-md disabled:opacity-60 disabled:cursor-not-allowed",3,"disabled","click",4,"ngIf"],[1,"flex","items-center","justify-center","align-center","w-full","max-w-xs","bg-cyan-500","hover:bg-cyan-600","text-white","font-semibold","py-2","px-6","rounded-md","text-md","shadow-md","disabled:opacity-60","disabled:cursor-not-allowed",3,"click","disabled"],["xmlns","http://www.w3.org/2000/svg","fill","none","viewBox","0 0 24 24","stroke","white","stroke-width","2",1,"h-8","w-8","text-gray-500","dark:text-gray-400"],["stroke-linecap","round","stroke-linejoin","round","d","M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-3 7h3m-3 4h3m-6-4h.01M9 16h.01"],["class","w-full items-center max-w-xs bg-sky-500 hover:bg-sky-600 text-white font-semibold py-2 px-6 rounded-md text-md shadow-md disabled:opacity-60 disabled:cursor-not-allowed",3,"disabled","click",4,"ngIf"],[1,"flex","items-center","justify-center","align-center","w-full","max-w-xs","bg-purple-500","hover:bg-purple-600","text-white","font-semibold","py-2","px-6","rounded-md","text-md","shadow-md","disabled:opacity-60","disabled:cursor-not-allowed",3,"click","disabled"],["version","1.1","id","Capa_1","xmlns","http://www.w3.org/2000/svg","stroke","currentColor","stroke-width","1.5",0,"xmlns","xlink","http://www.w3.org/1999/xlink","viewBox","-3 0 60 60",0,"xml","space","preserve",1,"w-8","h-8","transition-all",2,"enable-background","new 0 0 49.495 49.495"],["d",`M1.434,28.084c1.527,0.188,3.644,0.847,3.644,1.587c0,0.207,0.128,0.393,0.321,0.467c0.189,0.073,0.412,0.021,0.551-0.133
			c0.026-0.027,2.688-2.917,7.878-2.917c5.405,0,8.5,2.556,8.5,3.25c0,0.241,0.172,0.447,0.408,0.491
			c0.24,0.044,0.471-0.087,0.559-0.312c0.019-0.051,1.904-4.85,4.922-4.85c0.01,0,0.021,0,0.027,0
			c1.557,0.018,4.362,0.042,6.073,2.143c0.193,0.269,0.318,0.438,0.354,0.486c0.16,0.223,0.467,0.271,0.688,0.116
			s0.281-0.456,0.136-0.686c-0.118-0.184-0.243-0.354-0.372-0.518c-1.658-2.314-8.548-12.151-8.548-15.794
			c0-0.194-0.112-0.371-0.288-0.453c-0.175-0.083-0.382-0.056-0.531,0.068c-0.058,0.047-5.736,4.688-10.149,1.041
			c-0.052-0.056-1.274-1.379-0.466-2.437c0.094-0.123,0.124-0.282,0.085-0.432s-0.146-0.272-0.289-0.333
			c-0.008-0.003-0.812-0.354-1.062-1.093c-0.164-0.483-0.062-1.055,0.304-1.7c1.356-2.392,3.701-4.431,3.779-4.506
			c0.012-0.014,1.186-1.341,3.882,0.116c0.351,0.189,0.768,0.409,1.236,0.656c3.612,1.901,10.334,5.439,12.925,9.109
			c0.548,0.773,1.248,1.658,2.062,2.682c3.635,4.578,9.113,11.486,9.43,19.683c-0.25,0.541-1.715,3.412-5.574,5.773
			c-3.948,2.418-11.291,4.786-23.824,2.332c-0.13-0.025-0.272,0.002-0.385,0.082c-0.113,0.079-0.187,0.2-0.206,0.338
			c-0.006,0.039-0.591,3.967-2.71,6.318c-0.185,0.205-0.168,0.521,0.037,0.706c0.096,0.086,0.216,0.128,0.335,0.128
			c0.137,0,0.272-0.056,0.372-0.166c1.867-2.074,2.626-5.123,2.865-6.331c3.566,0.67,6.729,0.956,9.533,0.956
			c16.356-0.001,20.479-9.74,20.523-9.854c0.026-0.064,0.038-0.135,0.036-0.203c-0.276-8.578-5.917-15.683-9.646-20.385
			c-0.806-1.012-1.496-1.887-2.025-2.638c-2.729-3.866-9.592-7.477-13.278-9.417c-0.465-0.245-0.879-0.463-1.228-0.651
			c-3.397-1.837-5.051,0.036-5.063,0.062c-0.102,0.087-2.499,2.169-3.941,4.715c-0.515,0.908-0.643,1.758-0.378,2.525
			c0.237,0.689,0.741,1.144,1.126,1.405c-0.558,1.27,0.255,2.644,0.868,3.285c4.082,3.376,8.941,0.736,10.749-0.476
			c0.651,3.412,4.48,9.436,6.937,13.036c-1.628-0.668-3.354-0.686-4.443-0.695c-2.725-0.035-4.565,2.925-5.363,4.513
			c-1.268-1.495-4.704-3.096-8.974-3.096c-4.277,0-6.947,1.781-8.048,2.708c-0.904-1.229-3.599-1.627-4.225-1.704
			c-0.268-0.035-0.522,0.161-0.557,0.437C0.965,27.799,1.16,28.05,1.434,28.084z`],["d",`M30.738,39.531c1.036,0,2.114-0.15,3.146-0.551c1.934-0.75,3.356-2.25,4.239-4.457c0.104-0.256-0.021-0.547-0.276-0.65
			c-0.256-0.103-0.547,0.021-0.647,0.279c-0.771,1.938-2.013,3.248-3.671,3.895c-3.604,1.402-8.104-0.721-8.146-0.743
			c-0.25-0.119-0.549-0.015-0.668,0.233c-0.12,0.249-0.016,0.547,0.233,0.667C25.093,38.275,27.739,39.531,30.738,39.531z`],["class","w-full max-w-xs bg-blue-500 hover:bg-blue-600 text-white font-semibold py-2 px-6 rounded-md text-md shadow-md disabled:opacity-60 disabled:cursor-not-allowed",3,"disabled","click",4,"ngIf"],["class","w-full max-w-xs bg-indigo-500 hover:bg-indigo-600 text-white font-semibold py-2 px-6 rounded-md text-md shadow-md disabled:opacity-60 disabled:cursor-not-allowed",3,"disabled","click",4,"ngIf"],["class","w-full max-w-xs bg-orange-500 hover:bg-orange-600 text-white font-semibold py-2 px-6 rounded-md text-md shadow-md disabled:opacity-60 disabled:cursor-not-allowed",3,"disabled","click",4,"ngIf"],["class","w-full max-w-xs bg-teal-500 hover:bg-teal-600 text-white font-semibold py-2 px-6 rounded-md text-md shadow-md disabled:opacity-60 disabled:cursor-not-allowed",3,"disabled","click",4,"ngIf"],[1,"w-full","max-w-xs","text-red-300","hover:text-red-100","font-medium","py-2","px-6","rounded-md","border","border-red-400","hover:bg-red-700/50","text-md",3,"click"],[1,"flex","justify-center","items-center","w-full","max-w-xs","bg-fuchsia-500","hover:bg-fuchsia-600","text-white","font-semibold","py-2","px-6","rounded-md","text-md","shadow-md","disabled:opacity-60","disabled:cursor-not-allowed",3,"click","disabled"],["xmlns","http://www.w3.org/2000/svg","viewBox","0 0 400 500","width","55","height","20","fill","white"],["d","M96 64c0-17.7 14.3-32 32-32l32 0c17.7 0 32 14.3 32 32l0 160 0 64 0 160c0 17.7-14.3 32-32 32l-32 0c-17.7 0-32-14.3-32-32l0-64-32 0c-17.7 0-32-14.3-32-32l0-64c-17.7 0-32-14.3-32-32s14.3-32 32-32l0-64c0-17.7 14.3-32 32-32l32 0 0-64zm448 0l0 64 32 0c17.7 0 32 14.3 32 32l0 64c17.7 0 32 14.3 32 32s-14.3 32-32 32l0 64c0 17.7-14.3 32-32 32l-32 0 0 64c0 17.7-14.3 32-32 32l-32 0c-17.7 0-32-14.3-32-32l0-160 0-64 0-160c0-17.7 14.3-32 32-32l32 0c17.7 0 32 14.3 32 32zM416 224l0 64-192 0 0-64 192 0z"],[1,"w-full","items-center","max-w-xs","bg-sky-500","hover:bg-sky-600","text-white","font-semibold","py-2","px-6","rounded-md","text-md","shadow-md","disabled:opacity-60","disabled:cursor-not-allowed",3,"click","disabled"],["class","text-xs text-white ml-2",4,"ngIf"],[1,"text-xs","text-white","ml-2"],[1,"w-full","max-w-xs","bg-blue-500","hover:bg-blue-600","text-white","font-semibold","py-2","px-6","rounded-md","text-md","shadow-md","disabled:opacity-60","disabled:cursor-not-allowed",3,"click","disabled"],[1,"w-full","max-w-xs","bg-indigo-500","hover:bg-indigo-600","text-white","font-semibold","py-2","px-6","rounded-md","text-md","shadow-md","disabled:opacity-60","disabled:cursor-not-allowed",3,"click","disabled"],[1,"w-full","max-w-xs","bg-orange-500","hover:bg-orange-600","text-white","font-semibold","py-2","px-6","rounded-md","text-md","shadow-md","disabled:opacity-60","disabled:cursor-not-allowed",3,"click","disabled"],[1,"w-full","max-w-xs","bg-teal-500","hover:bg-teal-600","text-white","font-semibold","py-2","px-6","rounded-md","text-md","shadow-md","disabled:opacity-60","disabled:cursor-not-allowed",3,"click","disabled"],[1,"fixed","inset-0","bg-gray-900/70","dark:bg-black/80","backdrop-blur-md","flex","items-center","justify-center","p-4","transition-opacity","duration-300","ease-in-out",2,"z-index","100"],[1,"bg-white","dark:bg-gray-800","rounded-xl","shadow-2xl","w-full","max-w-xl","max-h-[90vh]","flex","flex-col","overflow-hidden","transform","transition-all","duration-300","ease-in-out","scale-95","opacity-0","animate-modal-appear"],[1,"p-5","border-b","border-gray-200","dark:border-gray-700","flex","justify-between","items-center"],[1,"flex","items-center","gap-3"],["xmlns","http://www.w3.org/2000/svg","fill","none","viewBox","0 0 24 24","stroke","currentColor","stroke-width","2",1,"h-7","w-7","text-primary","dark:text-primary-light"],["stroke-linecap","round","stroke-linejoin","round","d","M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"],[1,"text-xl","font-semibold","text-gray-800","dark:text-gray-100"],["xmlns","http://www.w3.org/2000/svg","fill","none","viewBox","0 0 24 24","stroke","currentColor","stroke-width","2.5",1,"h-6","w-6"],["stroke-linecap","round","stroke-linejoin","round","d","M6 18L18 6M6 6l12 12"],["class","p-5 overflow-y-auto space-y-6 flex-grow custom-scrollbar",4,"ngIf"],[1,"p-4","bg-gray-50","dark:bg-gray-800","border-t","border-gray-200","dark:border-gray-700","text-right"],[1,"bg-primary","hover:bg-primary-dark","focus:ring-4","focus:ring-primary-focus","text-white","font-semibold","py-2.5","px-6","rounded-md","text-sm","transition-colors","shadow-md","hover:shadow-lg",3,"click"],[1,"p-5","overflow-y-auto","space-y-6","flex-grow","custom-scrollbar"],[1,"rounded-md","border","border-gray-200","dark:border-gray-700/80"],[1,"w-full","flex","items-center","justify-between","p-3","text-left","text-sm","font-medium","text-gray-700","dark:text-gray-300","hover:bg-gray-50","dark:hover:bg-gray-700/50","transition-colors","rounded-t-lg",3,"click"],[1,"flex","items-center","gap-2"],["xmlns","http://www.w3.org/2000/svg","fill","none","viewBox","0 0 24 24","stroke","currentColor","stroke-width","2",1,"h-5","w-5","text-gray-500","dark:text-gray-400"],["xmlns","http://www.w3.org/2000/svg","fill","none","viewBox","0 0 24 24","stroke","currentColor","stroke-width","2",1,"h-5","w-5","transform","transition-transform","duration-200",3,"ngClass"],["stroke-linecap","round","stroke-linejoin","round","d","M19 9l-7 7-7-7"],["class","bg-gray-50 dark:bg-gray-700/30 p-3 border-t border-gray-200 dark:border-gray-700/80 space-y-3 max-h-40 overflow-y-auto custom-scrollbar rounded-b-lg",4,"ngIf"],["class","p-3 text-xs text-center text-gray-500 dark:text-gray-400 border-t border-gray-200 dark:border-gray-700/80 rounded-b-lg",4,"ngIf"],["stroke-linecap","round","stroke-linejoin","round","d","M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"],["class","bg-gray-50 dark:bg-gray-700/30 p-3 border-t border-gray-200 dark:border-gray-700/80 space-y-3 max-h-48 overflow-y-auto custom-scrollbar rounded-b-lg",4,"ngIf"],["class","p-3 bg-blue-50 dark:bg-blue-900/30 border border-blue-200 dark:border-blue-700 rounded-md text-xs",4,"ngIf"],["class","p-3 bg-gray-50 dark:bg-gray-700/50 border border-gray-200 dark:border-gray-600 rounded-md text-xs text-center text-gray-500 dark:text-gray-400 italic",4,"ngIf"],["class","p-3 bg-yellow-50 dark:bg-yellow-900/30 border border-yellow-200 dark:border-yellow-700 rounded-md text-xs",4,"ngIf"],[1,"space-y-4","pt-4","border-t","border-gray-200","dark:border-gray-700"],[1,"text-sm","font-semibold","text-gray-700","dark:text-gray-200"],[1,"grid","grid-cols-1","sm:grid-cols-2","gap-4"],["class","p-3 bg-gray-50 dark:bg-gray-700/80 rounded-md shadow",4,"ngIf"],["class","mt-4 p-3 bg-gray-100 dark:bg-gray-700/60 rounded-md text-xs",4,"ngIf"],[1,"bg-gray-50","dark:bg-gray-700/30","p-3","border-t","border-gray-200","dark:border-gray-700/80","space-y-3","max-h-40","overflow-y-auto","custom-scrollbar","rounded-b-lg"],["class","text-xs p-2 bg-white dark:bg-gray-700 rounded-md shadow-sm border border-gray-200 dark:border-gray-600",4,"ngFor","ngForOf"],[1,"text-xs","p-2","bg-white","dark:bg-gray-700","rounded-md","shadow-sm","border","border-gray-200","dark:border-gray-600"],[1,"font-semibold","text-gray-700","dark:text-gray-200","mb-1"],["class","text-blue-600 dark:text-blue-400 font-normal",4,"ngIf"],[1,"grid","grid-cols-2","gap-x-2","gap-y-1","text-gray-600","dark:text-gray-300"],["class","col-span-2",4,"ngIf"],["class","mt-1.5 text-gray-500 dark:text-gray-400 italic text-2xs border-t border-gray-100 dark:border-gray-600 pt-1.5",4,"ngIf"],[1,"text-blue-600","dark:text-blue-400","font-normal"],[1,"dark:text-gray-100"],[1,"col-span-2"],[1,"mt-1.5","text-gray-500","dark:text-gray-400","italic","text-2xs","border-t","border-gray-100","dark:border-gray-600","pt-1.5"],[1,"p-3","text-xs","text-center","text-gray-500","dark:text-gray-400","border-t","border-gray-200","dark:border-gray-700/80","rounded-b-lg"],[1,"bg-gray-50","dark:bg-gray-700/30","p-3","border-t","border-gray-200","dark:border-gray-700/80","space-y-3","max-h-48","overflow-y-auto","custom-scrollbar","rounded-b-lg"],[1,"text-sm","text-primary","dark:text-primary-light"],[1,"p-3","bg-blue-50","dark:bg-blue-900/30","border","border-blue-200","dark:border-blue-700","rounded-md","text-xs"],[1,"font-medium","text-blue-700","dark:text-blue-300","mb-1"],[1,"flex","items-center","gap-1.5"],["xmlns","http://www.w3.org/2000/svg","fill","none","viewBox","0 0 24 24","stroke","currentColor","stroke-width","2",1,"h-4","w-4"],["stroke-linecap","round","stroke-linejoin","round","d","M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"],[1,"list-none","space-y-0.5","ml-1","text-blue-600","dark:text-blue-400"],["class","flex items-center",4,"ngIf"],["class","mt-1 italic border-t border-blue-200 dark:border-blue-600 pt-1",4,"ngIf"],[1,"flex","items-center"],[1,"w-16"],[1,"dark:text-blue-200"],[1,"mt-1","italic","border-t","border-blue-200","dark:border-blue-600","pt-1"],[1,"p-3","bg-gray-50","dark:bg-gray-700/50","border","border-gray-200","dark:border-gray-600","rounded-md","text-xs","text-center","text-gray-500","dark:text-gray-400","italic"],[1,"p-3","bg-yellow-50","dark:bg-yellow-900/30","border","border-yellow-200","dark:border-yellow-700","rounded-md","text-xs"],[1,"font-medium","text-yellow-700","dark:text-yellow-300","mb-2"],["stroke-linecap","round","stroke-linejoin","round","d","M5 3v4M3 5h4M6 17v4m-2-2h4m5-12v4m-2-2h4m5 10v4m-2-2h4M5 3a2 2 0 00-2 2v1c0 1.1.9 2 2 2h4a2 2 0 002-2V6a2 2 0 00-2-2H5zm14 0a2 2 0 00-2 2v1c0 1.1.9 2 2 2h4a2 2 0 002-2V6a2 2 0 00-2-2h-4zM5 17a2 2 0 00-2 2v1c0 1.1.9 2 2 2h4a2 2 0 002-2v-1a2 2 0 00-2-2H5zm14 0a2 2 0 00-2 2v1c0 1.1.9 2 2 2h4a2 2 0 002-2v-1a2 2 0 00-2-2h-4z"],["class","grid grid-cols-1 sm:grid-cols-2 gap-x-4 gap-y-1 text-yellow-600 dark:text-yellow-400",4,"ngIf"],["class","italic text-yellow-600 dark:text-yellow-400",4,"ngIf"],[1,"grid","grid-cols-1","sm:grid-cols-2","gap-x-4","gap-y-1","text-yellow-600","dark:text-yellow-400"],[4,"ngFor","ngForOf"],[1,"dark:text-yellow-200"],[1,"text-yellow-500","dark:text-yellow-500","text-2xs","ml-1"],[1,"italic","text-yellow-600","dark:text-yellow-400"],[1,"p-3","bg-gray-50","dark:bg-gray-700/80","rounded-md","shadow"],[1,"block","text-xs","font-medium","text-gray-500","dark:text-gray-400","mb-1"],["class","text-3xl font-bold text-primary dark:text-primary-light cursor-pointer hover:opacity-80 p-1.5 rounded-md min-h-[48px] flex items-center",3,"click",4,"ngIf"],["class","flex items-center space-x-2",4,"ngIf"],[1,"text-3xl","font-bold","text-primary","dark:text-primary-light","cursor-pointer","hover:opacity-80","p-1.5","rounded-md","min-h-[48px]","flex","items-center",3,"click"],["type","number","autofocus","",1,"w-24","p-2","text-2xl","border-gray-300","dark:border-gray-600","rounded-md","focus:ring-primary-focus","focus:border-primary-focus","dark:bg-gray-600","dark:text-gray-100","shadow-sm",3,"ngModelChange","keyup.enter","keyup.escape","ngModel"],[1,"p-2","text-green-600","hover:text-green-500","dark:text-green-400","dark:hover:text-green-300","rounded-full","hover:bg-green-100","dark:hover:bg-green-700/50",3,"click"],["fill","currentColor","viewBox","0 0 20 20",1,"w-5","h-5"],["fill-rule","evenodd","d","M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z","clip-rule","evenodd"],[1,"p-2","text-red-600","hover:text-red-500","dark:text-red-400","dark:hover:text-red-300","rounded-full","hover:bg-red-100","dark:hover:bg-red-700/50",3,"click"],["fill-rule","evenodd","d","M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z","clip-rule","evenodd"],[1,"text-xl","ml-0.5"],[1,"text-xl","font-semibold","text-gray-700","dark:text-gray-100","p-1.5","block","min-h-[48px]","flex","items-center"],[1,"mt-4","p-3","bg-gray-100","dark:bg-gray-700/60","rounded-md","text-xs"],[1,"font-medium","text-gray-600","dark:text-gray-300","mb-1"],["stroke-linecap","round","stroke-linejoin","round","d","M7 8h10M7 12h4m1 8l-4-4H5a2 2 0 01-2-2V6a2 2 0 012-2h14a2 2 0 012 2v8a2 2 0 01-2 2h-3l-4 4z"],[1,"text-gray-700","dark:text-gray-200","italic"],[1,"fixed","inset-0","bg-gray-700","bg-opacity-75","transition-opacity","overflow-y-auto","h-full","w-full","z-[70]","flex","items-center","justify-center","p-4","backdrop-blur-sm",3,"click"],[1,"relative","transform","overflow-hidden","rounded-md","bg-white","dark:bg-gray-700","text-left","shadow-xl","transition-all","sm:my-8","sm:w-full","sm:max-w-lg",3,"click"],[1,"bg-white","dark:bg-gray-700","px-4","pt-5","pb-4","sm:p-6","sm:pb-4"],[1,"flex","justify-between","items-center","pb-3"],[1,"text-xl","font-semibold","text-gray-900","dark:text-gray-100"],["type","button",1,"p-1","rounded-full","text-gray-400","hover:text-gray-600","dark:hover:text-gray-300","focus:outline-none",3,"click"],["xmlns","http://www.w3.org/2000/svg","fill","none","viewBox","0 0 24 24","stroke-width","1.5","stroke","currentColor",1,"w-6","h-6"],["stroke-linecap","round","stroke-linejoin","round","d","M6 18 18 6M6 6l12 12"],[1,"my-4"],["type","text","placeholder","Search exercises...",1,"w-full","p-2","border","border-gray-300","dark:border-gray-600","rounded-md","dark:bg-gray-700","dark:text-gray-200",3,"ngModelChange","ngModel"],[1,"mt-2","max-h-60","sm:max-h-80","overflow-y-auto","pr-2"],[1,"space-y-1"],["class","p-3 hover:bg-gray-100 dark:hover:bg-gray-800 rounded-md cursor-pointer transition-all duration-150 ease-in-out flex justify-between items-center",3,"click",4,"ngFor","ngForOf"],["class","text-gray-500 dark:text-gray-400 text-center p-4",4,"ngIf"],[1,"mt-4","pt-4","border-t","border-gray-200","dark:border-gray-600","text-center"],["type","button",1,"text-sm","text-primary","dark:text-primary-light","hover:underline",3,"click"],[1,"bg-gray-50","dark:bg-gray-800","px-4","py-3","sm:flex","sm:flex-row-reverse","sm:px-6"],["type","button",1,"mt-3","inline-flex","w-full","justify-center","rounded-md","bg-white","dark:bg-gray-600","px-3","py-2","text-sm","font-semibold","text-gray-900","dark:text-gray-200","shadow-sm","ring-1","ring-inset","ring-gray-300","dark:ring-gray-500","hover:bg-gray-50","dark:hover:bg-gray-500","sm:mt-0","sm:w-auto",3,"click"],[1,"p-3","hover:bg-gray-100","dark:hover:bg-gray-800","rounded-md","cursor-pointer","transition-all","duration-150","ease-in-out","flex","justify-between","items-center",3,"click"],[1,"font-medium","text-gray-800","dark:text-gray-200"],["class","block text-xs text-gray-500 dark:text-gray-400",4,"ngIf"],["xmlns","http://www.w3.org/2000/svg","viewBox","0 0 20 20","fill","currentColor",1,"w-5","h-5","text-primary","dark:text-primary-light"],["fill-rule","evenodd","d","M10.75 4.75a.75.75 0 0 0-1.5 0v4.5h-4.5a.75.75 0 0 0 0 1.5h4.5v4.5a.75.75 0 0 0 1.5 0v-4.5h4.5a.75.75 0 0 0 0-1.5h-4.5V4.75Z","clip-rule","evenodd"],[1,"block","text-xs","text-gray-500","dark:text-gray-400"],[1,"text-gray-500","dark:text-gray-400","text-center","p-4"],[1,"text-center","py-20"],[1,"text-xl","text-gray-600","dark:text-gray-400"],[3,"isOpenChange","isOpen","modalTitle"],[3,"id","isModal"]],template:function(e,o){if(e&1){let n=me();ne(0,FB,4,2,"ng-container",7),_(1,"app-full-screen-rest-timer",8),oe("timerFinished",function(){return Q(n),Z(o.handleRestTimerFinished())})("timerSkipped",function(s){return Q(n),Z(o.handleRestTimerSkipped(s))}),I(),ne(2,GB,34,9,"div",9)(3,NV,15,1,"div",10)(4,DV,23,4,"div",11)(5,FV,3,0,"ng-template",null,0,Mo)(7,OV,2,4,"app-modal",12)}if(e&2){let n=Lo(6);F("ngIf",o.routine())("ngIfElse",n),N(),F("isVisible",o.playerSubState()===o.PlayerSubState.Resting&&o.isRestTimerVisible())("durationSeconds",o.restDuration())("mainText",o.restTimerMainText())("nextUpText",o.restTimerNextUpText()),N(),F("ngIf",o.isWorkoutMenuVisible()),N(),F("ngIf",o.isPerformanceInsightsVisible()),N(),F("ngIf",o.isExerciseModalOpen()),N(3),F("ngIf",o.exerciseDetailsId)}},dependencies:[_o,oi,rn,wo,on,Ca,ka,ii,Ud,Fd,Ad,Od,Na,Dd,Ld,Md,rm,$a,Ra,Oa,tm,Fa,jd,Xd],styles:["@keyframes _ngcontent-%COMP%_modal-appear-animation{0%{opacity:0;transform:scale(.95) translateY(10px)}to{opacity:1;transform:scale(1) translateY(0)}}.animate-modal-appear[_ngcontent-%COMP%]{animation:_ngcontent-%COMP%_modal-appear-animation .3s ease-out forwards}.custom-scrollbar[_ngcontent-%COMP%]::-webkit-scrollbar{width:6px;height:6px}.custom-scrollbar[_ngcontent-%COMP%]::-webkit-scrollbar-track{background:transparent;border-radius:3px}.custom-scrollbar[_ngcontent-%COMP%]::-webkit-scrollbar-thumb{background-color:#0003;border-radius:3px}.dark[_ngcontent-%COMP%]   .custom-scrollbar[_ngcontent-%COMP%]::-webkit-scrollbar-thumb{background-color:#fff3}.custom-scrollbar[_ngcontent-%COMP%]::-webkit-scrollbar-thumb:hover{background-color:#0000004d}.dark[_ngcontent-%COMP%]   .custom-scrollbar[_ngcontent-%COMP%]::-webkit-scrollbar-thumb:hover{background-color:#ffffff4d}.tabata-work-bg[_ngcontent-%COMP%]{background-image:linear-gradient(to bottom right,var(--tw-gradient-stops));--tw-gradient-from: #ef4444 var(--tw-gradient-from-position);--tw-gradient-to: rgb(239 68 68 / 0) var(--tw-gradient-to-position);--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);--tw-gradient-to: #b91c1c var(--tw-gradient-to-position)}.tabata-rest-bg[_ngcontent-%COMP%]{background-image:linear-gradient(to bottom right,var(--tw-gradient-stops));--tw-gradient-from: #22c55e var(--tw-gradient-from-position);--tw-gradient-to: rgb(34 197 94 / 0) var(--tw-gradient-to-position);--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);--tw-gradient-to: #15803d var(--tw-gradient-to-position)}.tabata-prepare-bg[_ngcontent-%COMP%]{background-image:linear-gradient(to bottom right,var(--tw-gradient-stops));--tw-gradient-from: #3b82f6 var(--tw-gradient-from-position);--tw-gradient-to: rgb(59 130 246 / 0) var(--tw-gradient-to-position);--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);--tw-gradient-to: #1d4ed8 var(--tw-gradient-to-position)}.text-shadow[_ngcontent-%COMP%]{text-shadow:0 2px 4px rgba(0,0,0,.2)}.text-shadow-lg[_ngcontent-%COMP%]{text-shadow:0 4px 10px rgba(0,0,0,.25)}.scrollbar-hide[_ngcontent-%COMP%]::-webkit-scrollbar{display:none}.scrollbar-hide[_ngcontent-%COMP%]{-ms-overflow-style:none;scrollbar-width:none}.your-main-container[_ngcontent-%COMP%]{height:calc(100vh - 90px);top:70px}"]})};function LV(r,t){if(r&1&&(_(0,"div",17)(1,"span",18),L(2,"Total Volume:"),I(),_(3,"span",19),L(4),qe(5,"number"),I()()),r&2){let e=O(2);N(4),Ft("",lo(5,2,e.sessionTotalVolume(),"1.0-0")," ",e.unitsService.getUnitLabel())}}function MV(r,t){if(r&1&&(_(0,"li",29)(1,"p",30),L(2),I(),_(3,"p",31),L(4),I()()),r&2){let e=t.$implicit;N(2),Ft("",e.exerciseName," - ",e.pbType," "),N(2),Le(e.value)}}function BV(r,t){if(r&1&&(_(0,"div",25)(1,"h2",26),L(2," \u{1F389} New Personal Bests! \u{1F389} "),I(),_(3,"ul",27),ne(4,MV,5,3,"li",28),I()()),r&2){let e=O(2);N(4),F("ngForOf",e.sessionPBs())}}function VV(r,t){if(r&1&&(_(0,"div",32)(1,"h3",33),L(2,"Your Notes for this Session:"),I(),_(3,"p",34),L(4),I()()),r&2){let e=O().ngIf;N(4),Le(e.notes)}}function WV(r,t){if(r&1){let e=me();so(0),_(1,"div",3)(2,"button",4),_e(),_(3,"svg",5),le(4,"path",6),I()(),He(),_(5,"div",7)(6,"div",8),_e(),_(7,"svg",9)(8,"defs")(9,"mask",10),le(10,"rect",11)(11,"path",12),I()(),le(12,"circle",13),I()(),He(),_(13,"h1",14),L(14,"Workout Complete!"),I(),_(15,"p",15),L(16,"Great job on finishing your session"),I()(),_(17,"div",16)(18,"div",17)(19,"span",18),L(20,"Routine:"),I(),_(21,"span",19),L(22),I()(),_(23,"div",17)(24,"span",18),L(25,"Date:"),I(),_(26,"span",19),L(27),qe(28,"date"),I()(),_(29,"div",17)(30,"span",18),L(31,"Duration:"),I(),_(32,"span",19),L(33),I()(),ne(34,LV,6,5,"div",20),I(),ne(35,BV,5,1,"div",21)(36,VV,5,1,"div",22),_(37,"div",23)(38,"button",24),oe("click",function(){Q(e);let n=O();return Z(n.viewFullLog())}),L(39," VIEW FULL LOG DETAILS "),I()()(),ao()}if(r&2){let e=t.ngIf,o=O();N(2),F("routerLink","/history/log/"+o.logId),N(20),Le(e.routineName||"Ad-hoc Workout"),N(5),Le(lo(28,7,e.startTime,"fullDate")),N(6),xe("",e.durationMinutes," minutes"),N(),F("ngIf",o.sessionTotalVolume()>0),N(),F("ngIf",o.sessionPBs().length>0),N(),F("ngIf",e.notes)}}function zV(r,t){r&1&&(_(0,"div",35)(1,"p",36),L(2,"Loading workout summary..."),I()())}var om=class r{route=Ae(Ia);router=Ae(ni);trackingService=Ae(ai);exerciseService=Ae(li);statsService=Ae(GS);unitsService=Ae(ui);workoutLog=we(void 0);displayExercisesSummary=we([]);sessionPBs=we([]);sessionTotalVolume=we(0);logId;ngOnInit(){(this.logId?tn(this.logId):this.route.paramMap.pipe(_n(e=>e.get("logId")))).pipe(Sa(e=>e?this.trackingService.getWorkoutLogById(e):tn(null)),ps(e=>{e?(this.workoutLog.set(e),this.sessionTotalVolume.set(this.statsService.calculateWorkoutVolume(e)),this.prepareDisplayExercisesSummary(e.exercises),this.identifySessionPBs(e)):(this.workoutLog.set(null),this.displayExercisesSummary.set([]),this.sessionPBs.set([]))})).subscribe()}prepareDisplayExercisesSummary(t){if(!t||t.length===0){this.displayExercisesSummary.set([]);return}let e=t.map(o=>this.exerciseService.getExerciseById(o.exerciseId).pipe(_n(n=>{let i=0;return o.sets.forEach(s=>{i+=(s.repsAchieved||0)*(s.weightUsed||0)}),er(Ht({},o),{baseExercise:n||null,sessionVolume:i})})));xS(e).subscribe({next:o=>this.displayExercisesSummary.set(o),error:o=>{console.error("Error fetching exercise details for summary:",o),this.displayExercisesSummary.set(t.map(n=>er(Ht({},n),{baseExercise:null,sessionVolume:0})))}})}identifySessionPBs(t){let e=[];this.trackingService.personalBests$.pipe(hr(1)).subscribe(o=>{t.exercises.forEach(i=>{let s=o[i.exerciseId];s&&i.sets.forEach(a=>{s.forEach(l=>{l.id===a.id&&l.timestamp===a.timestamp&&a.weightUsed===l.weightUsed&&a.repsAchieved===l.repsAchieved&&e.push({exerciseName:i.exerciseName,pbType:l.pbType,value:this.formatPbValueForSummary(l),isNewOrImproved:!0})})})});let n=Array.from(new Map(e.map(i=>[`${i.exerciseName}-${i.pbType}`,i])).values());this.sessionPBs.set(n)})}formatPbValueForSummary(t){let e="";return t.weightUsed!==void 0&&t.weightUsed!==null&&t.weightUsed!==0?(e+=`${t.weightUsed}kg`,t.repsAchieved>0&&(t.pbType.includes("Heaviest")||t.repsAchieved>1&&!t.pbType.includes("RM"))&&(e+=` x ${t.repsAchieved}`)):t.repsAchieved>0&&t.pbType.includes("Max Reps")?e=`${t.repsAchieved} reps`:t.durationPerformed&&t.durationPerformed>0&&t.pbType.includes("Max Duration")&&(e=`${t.durationPerformed}s`),e||"N/A"}viewFullLog(){this.workoutLog()&&this.router.navigate(["/history/log",this.workoutLog().id])}navigateToRoutines(){this.router.navigate(["/workout"])}startNewWorkout(){this.router.navigate(["/workout"])}static \u0275fac=function(e){return new(e||r)};static \u0275cmp=vo({type:r,selectors:[["app-workout-summary"]],inputs:{logId:"logId"},decls:4,vars:2,consts:[["loadingOrNotFoundSummary",""],[1,"container","mx-auto","p-2"],[4,"ngIf","ngIfElse"],[1,"bg-white","dark:bg-gray-700","rounded-xl","shadow-2xl","p-6","md:p-8","max-w-2xl","mx-auto"],[1,"text-gray-600","dark:text-gray-300","hover:text-primary","dark:hover:text-primary-light","p-2","-ml-1",3,"routerLink"],["fill","none","stroke","currentColor","viewBox","0 0 24 24","xmlns","http://www.w3.org/2000/svg",1,"w-6","h-6"],["stroke-linecap","round","stroke-linejoin","round","stroke-width","2","d","M15 19l-7-7 7-7"],[1,"text-center","mb-8"],[1,"flex","justify-center","text-center"],["width","36","height","36","viewBox","0 0 24 24","fill","none","xmlns","http://www.w3.org/2000/svg",1,"w-16","h-16","text-green-500","mx-auto","mb-3"],["id","tickCutoutMask"],["x","0","y","0","width","24","height","24","fill","white"],["d","M7.5 12.5L10.5 15.5L16.5 9.5","stroke","black","stroke-width","2.5","stroke-linecap","round","stroke-linejoin","round","fill","none"],["cx","12","cy","12","r","10","fill","#2fd636","mask","url(#tickCutoutMask)"],[1,"text-4xl","font-bold","text-gray-800","dark:text-gray-100"],[1,"text-lg","text-gray-600","dark:text-gray-400","mt-1"],[1,"space-y-4","mb-8"],[1,"flex","justify-between","items-baseline","p-3","bg-gray-50","dark:bg-gray-700","rounded-md"],[1,"text-m","font-medium","text-gray-600","dark:text-gray-300"],[1,"text-md","font-semibold","text-gray-800","dark:text-gray-100"],["class","flex justify-between items-baseline p-3 bg-gray-50 dark:bg-gray-700 rounded-md",4,"ngIf"],["class","mb-8",4,"ngIf"],["class","mb-8 p-3 bg-yellow-50 dark:bg-yellow-900/30 rounded-md",4,"ngIf"],[1,"mt-8","pt-6","border-t","border-gray-200","dark:border-gray-700","space-y-3","md:space-y-0","md:flex","md:justify-center","md:space-x-4"],[1,"w-full","md:w-auto","flex","items-center","justify-center","px-6","py-3","border","border-transparent","rounded-md","shadow-sm","text-base","font-medium","text-white","bg-primary","hover:bg-primary-dark","focus:outline-none","focus:ring-2","focus:ring-offset-2","focus:ring-primary-dark",3,"click"],[1,"mb-8"],[1,"text-xl","font-semibold","text-gray-700","dark:text-gray-300","mb-3","text-center","border-b","pb-2","dark:border-gray-700"],[1,"space-y-2","mt-3"],["class","p-2 bg-green-50 dark:bg-green-900/30 rounded-md text-center",4,"ngFor","ngForOf"],[1,"p-2","bg-green-50","dark:bg-green-900/30","rounded-md","text-center"],[1,"text-m","font-medium","text-green-700","dark:text-green-300"],[1,"text-lg","font-bold","text-green-600","dark:text-green-200"],[1,"mb-8","p-3","bg-yellow-50","dark:bg-yellow-900/30","rounded-md"],[1,"text-m","font-medium","text-yellow-800","dark:text-yellow-300","mb-1"],[1,"text-m","text-yellow-700","dark:text-yellow-200","italic","whitespace-pre-line"],[1,"text-center","py-20"],[1,"text-xl","text-gray-600","dark:text-gray-400"]],template:function(e,o){if(e&1&&(_(0,"div",1),ne(1,WV,40,10,"ng-container",2)(2,zV,3,0,"ng-template",null,0,Mo),I()),e&2){let n=Lo(3);N(),F("ngIf",o.workoutLog())("ngIfElse",n)}},dependencies:[_o,rn,wo,on,ka,ii],encapsulation:2})};var FR=ry(YS());var fs=class{constructor(t,e){this.backend=t,this.dataMover=e,this.data=new WeakMap,this.dataIdsCount=0}get(t){return this.data.has(t)||this.dataMover.moveData(this.backend,t),this.data.get(t)}set(t,e){this.dataIdsCount++,this.data.set(t,e)}has(t){return this.data.has(t)}delete(t){return this.dataIdsCount--,this.data.delete(t)}numDataIds(){return this.dataIdsCount}},En=class{refCount(t){return Wr("refCount")}incRef(t){return Wr("incRef")}timerAvailable(){return!0}time(t){return Wr("time")}read(t){return Wr("read")}readSync(t){return Wr("readSync")}readToGPU(t,e){return Wr("readToGPU")}numDataIds(){return Wr("numDataIds")}disposeData(t,e){return Wr("disposeData")}write(t,e,o){return Wr("write")}move(t,e,o,n,i){return Wr("move")}createTensorFromGPUData(t,e,o){return Wr("createTensorFromGPUData")}memory(){return Wr("memory")}floatPrecision(){return Wr("floatPrecision")}epsilon(){return this.floatPrecision()===32?1e-7:1e-4}dispose(){return Wr("dispose")}};function Wr(r){throw new Error(`'${r}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function QS(r){let t=r.length,e=0;for(;t>0;)e=Math.random()*t|0,t--,nm(r,t,e)}function UV(r,t){if(r.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${r.length}Second array length was ${t.length}`);let e=r.length,o=0;for(;e>0;)o=Math.random()*e|0,e--,nm(r,e,o),nm(t,e,o)}function La(r,t,e){return Math.max(r,Math.min(t,e))}function GV(r){return r%2===0?r:r+1}function nm(r,t,e){let o=r[t];r[t]=r[e],r[e]=o}function HV(r){let t=0;for(let e=0;e<r.length;e++)t+=r[e];return t}function KV(r,t){let e=Math.random();return t*e+(1-e)*r}function qV(r,t){let e=0;for(let o=0;o<r.length;o++){let n=Number(r[o])-Number(t[o]);e+=n*n}return e}function D(r,t){if(!r)throw new Error(typeof t=="string"?t:t())}function Rt(r,t,e=""){D(zr(r,t),()=>e+` Shapes ${r} and ${t} must match`)}function uo(r){D(r!=null,()=>"The input to the tensor constructor must be a non-null value.")}function Ke(r){if(r.length===0)return 1;let t=r[0];for(let e=1;e<r.length;e++)t*=r[e];return t}function jV(r){return r.length===0}function ay(r,t){if(r===t)return!0;if(r==null||t==null||r.length!==t.length)return!1;for(let e=0;e<r.length;e++)if(r[e]!==null&&t[e]!==null&&r[e]!==t[e])return!1;return!0}function zr(r,t){if(r===t)return!0;if(r==null||t==null||r.length!==t.length)return!1;for(let e=0;e<r.length;e++)if(r[e]!==t[e])return!1;return!0}function Nn(r){return r%1===0}function XV(r){if(Math.tanh!=null)return Math.tanh(r);if(r===1/0)return 1;if(r===-1/0)return-1;{let t=Math.exp(2*r);return(t-1)/(t+1)}}function YV(r){let t=Math.ceil(Math.sqrt(r));return[t,Math.ceil(r/t)]}function QV(r){let t=new Uint32Array(r);for(let e=0;e<r;++e)t[e]=e;return QS(t),t}function gs(r,t){return t<=r.length?r:r+" ".repeat(t-r.length)}function ZV(r,t=n=>0,e,o){return new Promise((n,i)=>{let s=0,a=()=>{if(r()){n();return}s++;let l=t(s);if(e!=null&&s>=e){i();return}o!=null?o(a,l):setTimeout(a,l)};a()})}function JV(r,t){let e=1,o=-1;for(let i=0;i<r.length;++i)if(r[i]>=0)e*=r[i];else if(r[i]===-1){if(o!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${o} and dim ${i}`);o=i}else if(r[i]<0)throw Error(`Shapes can not be < 0. Found ${r[i]} at dim ${i}`);if(o===-1){if(t>0&&t!==e)throw Error(`Size(${t}) must match the product of shape ${r}`);return r}if(e===0)throw Error(`Cannot infer the missing size in [${r}] when there are 0 elements`);if(t%e!==0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${e}`);let n=r.slice();return n[o]=t/e,n}function ci(r,t){let e=t.length;return r=r==null?t.map((o,n)=>n):[].concat(r),D(r.every(o=>o>=-e&&o<e),()=>`All values in axis param must be in range [-${e}, ${e}) but got axis ${r}`),D(r.every(o=>Nn(o)),()=>`All values in axis param must be integers but got axis ${r}`),r.map(o=>o<0?e+o:o)}function ly(r,t){let e=[],o=[],n=t!=null&&Array.isArray(t)&&t.length===0,i=t==null||n?null:ci(t,r).sort(),s=0;for(let a=0;a<r.length;++a){if(i!=null){if(i[s]===a&&r[a]!==1)throw new Error(`Can't squeeze axis ${a} since its dim '${r[a]}' is not 1`);(i[s]==null||i[s]>a)&&r[a]===1&&(e.push(r[a]),o.push(a)),i[s]<=a&&s++}r[a]!==1&&(e.push(r[a]),o.push(a))}return{newShape:e,keptDims:o}}function uy(r,t){return im(r,t)}function im(r,t){let e=null;if(r==null||r==="float32")e=new Float32Array(t);else if(r==="int32")e=new Int32Array(t);else if(r==="bool")e=new Uint8Array(t);else if(r==="string")e=new Array(t);else throw new Error(`Unknown data type ${r}`);return e}function cy(r,t){for(let e=0;e<r.length;e++){let o=r[e];if(isNaN(o)||!isFinite(o))throw Error(`A tensor of type ${t} being uploaded contains ${o}.`)}}function py(r){return r==="bool"||r==="complex64"||r==="float32"||r==="int32"||r==="string"}function e5(r,t){return!(t==="complex64"||t==="float32"&&r!=="complex64"||t==="int32"&&r!=="float32"&&r!=="complex64"||t==="bool"&&r==="bool")}function Ma(r){if(r==="float32"||r==="int32")return 4;if(r==="complex64")return 8;if(r==="bool")return 1;throw new Error(`Unknown dtype ${r}`)}function dy(r){if(r==null)return 0;let t=0;return r.forEach(e=>t+=e.length),t}function Ba(r){return typeof r=="string"||r instanceof String}function ZS(r){return typeof r=="boolean"}function JS(r){return typeof r=="number"}function pi(r){return Array.isArray(r)?pi(r[0]):r instanceof Float32Array?"float32":r instanceof Int32Array||r instanceof Uint8Array||r instanceof Uint8ClampedArray?"int32":JS(r)?"float32":Ba(r)?"string":ZS(r)?"bool":"float32"}function Va(r){return!!(r&&r.constructor&&r.call&&r.apply)}function Wa(r,t){for(let e=t;e<r;++e)if(r%e===0)return e;return r}function nn(r){let t=r.length;if(t<2)return[];let e=new Array(t-1);e[t-2]=r[t-1];for(let o=t-3;o>=0;--o)e[o]=e[o+1]*r[o+1];return e}function e2(r,t,e,o=!1){let n=new Array;if(t.length===1){let i=t[0]*(o?2:1);for(let s=0;s<i;s++)n[s]=e[r+s]}else{let i=t[0],s=t.slice(1),a=s.reduce((l,u)=>l*u)*(o?2:1);for(let l=0;l<i;l++)n[l]=e2(r+l*a,s,e,o)}return n}function hs(r,t,e=!1){if(r.length===0)return t[0];let o=r.reduce((n,i)=>n*i)*(e?2:1);if(o===0)return[];if(o!==t.length)throw new Error(`[${r}] does not match the input size ${t.length}${e?" for a complex tensor":""}.`);return e2(0,r,t,e)}function t5(r,t){if(Array.isArray(r))return r;if(t==="float32")return r instanceof Float32Array?r:new Float32Array(r);if(t==="int32")return r instanceof Int32Array?r:new Int32Array(r);if(t==="bool"||t==="string")return Uint8Array.from(new Int32Array(r));throw new Error(`Unknown dtype ${t}`)}function fp(r,t){let e=za(r,t);for(let o=0;o<e.length;o++)e[o]=1;return e}function za(r,t){if(t==null||t==="float32"||t==="complex64")return new Float32Array(r);if(t==="int32")return new Int32Array(r);if(t==="bool")return new Uint8Array(r);throw new Error(`Unknown data type ${t}`)}function r5(r,t){let e=r.reduce((o,n)=>o*n,1);if(t==null||t==="float32")return hs(r,new Float32Array(e));if(t==="int32")return hs(r,new Int32Array(e));if(t==="bool")return hs(r,new Uint8Array(e));throw new Error(`Unknown data type ${t}`)}function bt(r){r.forEach(t=>{D(Number.isInteger(t)&&t>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${r}].`)})}function o5(r,t,e){if(t===0)return 0;if(t===1)return r[0];let o=r[r.length-1];for(let n=0;n<r.length-1;++n)o+=e[n]*r[n];return o}function n5(r,t,e){if(t===0)return[];if(t===1)return[r];let o=new Array(t);for(let n=0;n<o.length-1;++n)o[n]=Math.floor(r/e[n]),r-=o[n]*e[n];return o[o.length-1]=r,o}function xs(r){return r&&r.then&&typeof r.then=="function"}var t2="tfjsflags",hp=class{constructor(t){this.global=t,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=s5,this.populateURLFlags()}setPlatform(t,e){this.platform!=null&&(G().getBool("IS_TEST")||G().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`)),this.platformName=t,this.platform=e}registerFlag(t,e,o){if(this.flagRegistry[t]={evaluationFn:e,setHook:o},this.urlFlags[t]!=null){let n=this.urlFlags[t];G().getBool("IS_TEST")||G().getBool("PROD")||console.warn(`Setting feature override from URL ${t}: ${n}.`),this.set(t,n)}}getAsync(t){return j(this,null,function*(){return t in this.flags?this.flags[t]:(this.flags[t]=yield this.evaluateFlag(t),this.flags[t])})}get(t){if(t in this.flags)return this.flags[t];let e=this.evaluateFlag(t);if(xs(e))throw new Error(`Flag ${t} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[t]=e,this.flags[t]}getNumber(t){return this.get(t)}getBool(t){return this.get(t)}getString(t){return this.get(t)}getFlags(){return this.flags}get features(){return this.flags}set(t,e){if(this.flagRegistry[t]==null)throw new Error(`Cannot set flag ${t} as it has not been registered.`);this.flags[t]=e,this.flagRegistry[t].setHook!=null&&this.flagRegistry[t].setHook(e)}evaluateFlag(t){if(this.flagRegistry[t]==null)throw new Error(`Cannot evaluate flag '${t}': no evaluation function found.`);return this.flagRegistry[t].evaluationFn()}setFlags(t){this.flags=Object.assign({},t)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global>"u"||typeof this.global.location>"u"||typeof this.global.location.search>"u")return;let t=this.getQueryParams(this.global.location.search);t2 in t&&t[t2].split(",").forEach(o=>{let[n,i]=o.split(":");this.urlFlags[n]=l5(n,i)})}};function s5(r){let t={};return r.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(e,...o)=>(a5(t,o[0],o[1]),o.join("="))),t}function a5(r,t,e){r[decodeURIComponent(t)]=decodeURIComponent(e||"")}function l5(r,t){let e=t.toLowerCase();return e==="true"||e==="false"?e==="true":`${+e}`===e?+e:t}function G(){return my}var my=null;function r2(r){my=r}var fy;function hy(){if(fy==null){let r;if(typeof window<"u")r=window;else if(typeof global<"u")r=global;else if(typeof process<"u")r=process;else if(typeof self<"u")r=self;else throw new Error("Could not find a global object");fy=r}return fy}function u5(){let r=hy();return r._tfGlobals==null&&(r._tfGlobals=new Map),r._tfGlobals}function gp(r,t){let e=u5();if(e.has(r))return e.get(r);{let o=t();return e.set(r,o),e.get(r)}}var ys="Abs",Ua="Acos",Ga="Acosh",sn="Add",Ha="AddN",Ka="All",qa="Any",ja="ArgMax",Xa="ArgMin",Ya="Asin",Qa="Asinh",Za="Atan",Ja="Atanh",el="Atan2",tl="AvgPool",sm="AvgPoolGrad",rl="AvgPool3D",am="AvgPool3DGrad",ol="BatchMatMul",nl="BatchToSpaceND",il="Bincount",sl="BitwiseAnd";var al="BroadcastArgs",Rn="Cast",di="Ceil",ll="ClipByValue",vs="Complex",ul="ComplexAbs",cl="Concat",pl="Conv2D",dl="Conv2DBackpropFilter",ml="Conv2DBackpropInput",fl="Conv3D",lm="Conv3DBackpropFilterV2",hl="Conv3DBackpropInputV2",gl="Cos",xl="Cosh",yl="Cumprod",vl="Cumsum",bl="CropAndResize",Sl="DenseBincount",wl="DepthToSpace",_l="DepthwiseConv2dNative",Cl="DepthwiseConv2dNativeBackpropFilter",kl="DepthwiseConv2dNativeBackpropInput",Il="Diag",Tl="Dilation2D",o2="Dilation2DBackpropInput",n2="Dilation2DBackpropFilter",xp="Draw",El="RealDiv",Nl="Einsum",Rl="Elu",um="EluGrad",$l="Erf",mi="Equal",fi="Exp",Pl="ExpandDims",hi="Expm1",Al="FFT",Dl="Fill",Fl="FlipLeftRight",gi="Floor",xi="FloorDiv",Ol="FusedBatchNorm",Ll="GatherV2",Ml="GatherNd",yi="Greater",vi="GreaterEqual",$n="Identity",Bl="IFFT",Vl="Imag",Wl="IsFinite",zl="IsInf",Ul="IsNan",Gl="LeakyRelu",bi="Less",Si="LessEqual",Hl="LinSpace",wi="Log",Kl="Log1p",ql="LogicalAnd",jl="LogicalNot",Xl="LogicalOr";var Yl="LRN",cm="LRNGrad";var Ql="Max",_i="Maximum",Zl="MaxPool",pm="MaxPoolGrad",Jl="MaxPool3D",dm="MaxPool3DGrad",eu="MaxPoolWithArgmax",tu="Mean",ru="Min",Ci="Minimum",ou="MirrorPad",nu="Mod",iu="Multinomial",ki="Multiply",bs="Neg",Ii="NotEqual",su="NonMaxSuppressionV3",mm="NonMaxSuppressionV4",au="NonMaxSuppressionV5",lu="OnesLike",uu="OneHot",cu="Pack",pu="PadV2";var du="Pow",mu="Prelu",Ss="Prod",fm="RaggedGather",hm="RaggedRange",gm="RaggedTensorToTensor",fu="Range",ws="Real",hu="Reciprocal",gu="Relu",xu="Reshape",yu="ResizeNearestNeighbor",xm="ResizeNearestNeighborGrad",vu="ResizeBilinear",ym="ResizeBilinearGrad",bu="Relu6",Su="Reverse",wu="Round",Ti="Rsqrt",_u="ScatterNd",Cu="TensorScatterUpdate",ku="SearchSorted",Iu="Select",Tu="Selu",_s="Slice",Eu="Sin",Nu="Sinh",Ru="Sign",Ei="Sigmoid",$u="Softplus",Ni="Sqrt",Pu="Sum",Au="SpaceToBatchND",Du="SplitV",Fu="Softmax",vm="SparseFillEmptyRows",bm="SparseReshape",Ou="SparseSegmentMean",Lu="SparseSegmentSum",Mu="SparseToDense",Ri="SquaredDifference",Sm="Square",Bu="StaticRegexReplace",Vu="StridedSlice",Wu="StringNGrams",wm="StringSplit",_m="StringToHashBucketFast",$i="Sub",zu="Tan",Uu="Tanh",Pi="Tile",Gu="TopK",Hu="Transform",Ai="Transpose",Cm="Unique",Ku="Unpack",qu="UnsortedSegmentSum";var ju="ZerosLike",Xu="Step",Cs="FromPixels",Yu="RotateWithOffset",ks="_FusedMatMul",Is="FusedConv2D",Ts="FusedDepthwiseConv2D";function Pn(...r){G().getBool("IS_TEST")||G().getBool("PROD")||console.warn(...r)}function c5(...r){G().getBool("IS_TEST")||G().getBool("PROD")||console.log(...r)}var km=gp("kernelRegistry",()=>new Map),p5=gp("gradRegistry",()=>new Map);function Qu(r,t){let e=s2(r,t);return km.get(e)}function gy(r){return p5.get(r)}function xy(r){let t=km.entries(),e=[];for(;;){let{done:o,value:n}=t.next();if(o)break;let[i,s]=n,[a]=i.split("_");a===r&&e.push(s)}return e}function Im(r){let{kernelName:t,backendName:e}=r,o=s2(t,e);km.has(o)&&Pn(`The kernel '${t}' for backend '${e}' is already registered`),km.set(o,r)}function s2(r,t){return`${t}_${r}`}var S={};dt(S,{arraysEqual:()=>zr,arraysEqualWithNull:()=>ay,assert:()=>D,assertNonNegativeIntegerDimensions:()=>bt,assertNonNull:()=>uo,assertShapesMatch:()=>Rt,bytesFromStringArray:()=>dy,bytesPerElement:()=>Ma,checkConversionForErrors:()=>cy,clamp:()=>La,computeStrides:()=>nn,convertBackendValuesAndArrayBuffer:()=>t5,createScalarValue:()=>y5,createShuffledIndices:()=>QV,decodeString:()=>rc,distSquared:()=>qV,encodeString:()=>tc,fetch:()=>b5,fingerPrint64:()=>x5,flatten:()=>Fi,getArrayFromDType:()=>im,getTypedArrayFromDType:()=>uy,hasEncodingLoss:()=>e5,hexToLong:()=>yp,indexToLoc:()=>n5,inferDtype:()=>pi,inferFromImplicitShape:()=>JV,isBoolean:()=>ZS,isFunction:()=>Va,isInt:()=>Nn,isNumber:()=>JS,isPromise:()=>xs,isScalarShape:()=>jV,isString:()=>Ba,isTypedArray:()=>ur,isValidDtype:()=>py,locToIndex:()=>o5,makeOnesTypedArray:()=>fp,makeZerosNestedTypedArray:()=>r5,makeZerosTypedArray:()=>za,nearestDivisor:()=>Wa,nearestLargerEven:()=>GV,now:()=>Ps,parseAxisParam:()=>ci,randUniform:()=>KV,repeatedTry:()=>ZV,rightPad:()=>gs,shuffle:()=>QS,shuffleCombo:()=>UV,sizeFromShape:()=>Ke,sizeToSquarishShape:()=>YV,squeezeShape:()=>ly,sum:()=>HV,swap:()=>nm,tanh:()=>XV,toNestedArray:()=>hs,toTypedArray:()=>ec});function Tm(r){return r instanceof Float32Array||r instanceof Int32Array||r instanceof Uint8Array||r instanceof Uint8ClampedArray}var Sy=ry(x2());var $s=Sy.default||Sy;function yp(r){return $s.fromString(r,!0,16)}var v2=yp("c3a5c85c97cb3127"),Rs=yp("b492b66fbe98f273"),yr=yp("9ae16a3b2f90404f");function by(r){return r.xor(r.shru(47))}function b2(r,t,e){let o=r.slice(t,t+e);return $s.fromBytes(Array.from(o),!0,!0)}function St(r,t){return b2(r,t,8)}function y2(r,t){return b2(r,t,4)}function Yt(r,t){return t===0?r:r.shru(t).or(r.shl(64-t))}function Di(r,t,e=yp("9ddfea08eb382d69")){let o=r.xor(t).mul(e);o=o.xor(o.shru(47));let n=t.xor(o).mul(e);return n=n.xor(n.shru(47)),n=n.mul(e),n}function m5(r,t,e,o,n,i){n=n.add(r),i=Yt(i.add(n).add(o),21);let s=n;return n=n.add(t),n=n.add(e),i=i.add(Yt(n,44)),[n.add(o),i.add(s)]}function Nm(r,t,e,o){return m5(St(r,t),St(r,t+8),St(r,t+16),St(r,t+24),e,o)}function f5(r,t=r.length){if(t>=8){let e=yr.add(t*2),o=St(r,0).add(yr),n=St(r,t-8),i=Yt(n,37).mul(e).add(o),s=Yt(o,25).add(n).mul(e);return Di(i,s,e)}if(t>=4){let e=yr.add(t*2),o=y2(r,0);return Di(o.shl(3).add(t),y2(r,t-4),e)}if(t>0){let e=r[0],o=r[t>>1],n=r[t-1],i=e+(o<<8),s=t+(n<<2);return by(yr.mul(i).xor(v2.mul(s))).mul(yr)}return yr}function h5(r,t=r.length){let e=yr.add(t*2),o=St(r,0).mul(Rs),n=St(r,8),i=St(r,t-8).mul(e),s=St(r,t-16).mul(yr);return Di(Yt(o.add(n),43).add(Yt(i,30)).add(s),o.add(Yt(n.add(yr),18)).add(i),e)}function g5(r,t=r.length){let e=yr.add(t*2),o=St(r,0).mul(yr),n=St(r,8),i=St(r,t-8).mul(e),s=St(r,t-16).mul(yr),a=Yt(o.add(n),43).add(Yt(i,30)).add(s),l=Di(a,o.add(Yt(n.add(yr),18)).add(i),e),u=St(r,16).mul(e),c=St(r,24),p=a.add(St(r,t-32)).mul(e),d=l.add(St(r,t-24)).mul(e);return Di(Yt(u.add(c),43).add(Yt(p,30)).add(d),u.add(Yt(c.add(o),18)).add(p),e)}function x5(r,t=r.length){let e=$s.fromNumber(81,!0);if(t<=32)return t<=16?f5(r,t):h5(r,t);if(t<=64)return g5(r,t);let o=e,n=e.mul(Rs).add(113),i=by(n.mul(yr).add(113)).mul(yr),s=[$s.UZERO,$s.UZERO],a=[$s.UZERO,$s.UZERO];o=o.mul(yr).add(St(r,0));let l=0,u=(t-1>>6)*64,c=u+(t-1&63)-63;do o=Yt(o.add(n).add(s[0]).add(St(r,l+8)),37).mul(Rs),n=Yt(n.add(s[1]).add(St(r,l+48)),42).mul(Rs),o=o.xor(a[1]),n=n.add(s[0]).add(St(r,l+40)),i=Yt(i.add(a[0]),33).mul(Rs),s=Nm(r,l,s[1].mul(Rs),o.add(a[0])),a=Nm(r,l+32,i.add(a[1]),n.add(St(r,l+16))),[i,o]=[o,i],l+=64;while(l!==u);let p=Rs.add(i.and(255).shl(1));return l=c,a[0]=a[0].add(t-1&63),s[0]=s[0].add(a[0]),a[0]=a[0].add(s[0]),o=Yt(o.add(n).add(s[0]).add(St(r,l+8)),37).mul(p),n=Yt(n.add(s[1]).add(St(r,l+48)),42).mul(p),o=o.xor(a[1].mul(9)),n=n.add(s[0].mul(9).add(St(r,l+40))),i=Yt(i.add(a[0]),33).mul(p),s=Nm(r,l,s[1].mul(p),o.add(a[0])),a=Nm(r,l+32,i.add(a[1]),n.add(St(r,l+16))),[i,o]=[o,i],Di(Di(s[0],a[0],p).add(by(n).mul(v2)).add(i),Di(s[1],a[1],p).add(o),p)}function y5(r,t){return t==="string"?tc(r):ec([r],t)}function v5(r,t){return r instanceof Float32Array&&t==="float32"||r instanceof Int32Array&&t==="int32"||r instanceof Uint8Array&&t==="bool"}function ec(r,t){if(t==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(r)&&(r=Fi(r)),G().getBool("DEBUG")&&cy(r,t),v5(r,t))return r;if(t==null||t==="float32"||t==="complex64")return new Float32Array(r);if(t==="int32")return new Int32Array(r);if(t==="bool"){let e=new Uint8Array(r.length);for(let o=0;o<e.length;++o)Math.round(r[o])!==0&&(e[o]=1);return e}else throw new Error(`Unknown data type ${t}`)}function Ps(){return G().platform.now()}function b5(r,t){return G().platform.fetch(r,t)}function tc(r,t="utf-8"){return t=t||"utf-8",G().platform.encode(r,t)}function rc(r,t="utf-8"){return t=t||"utf-8",G().platform.decode(r,t)}function ur(r){return G().platform.isTypedArray!=null?G().platform.isTypedArray(r):Tm(r)}function Fi(r,t=[],e=!1){if(t==null&&(t=[]),typeof r=="boolean"||typeof r=="number"||typeof r=="string"||xs(r)||r==null||ur(r)&&e)t.push(r);else if(Array.isArray(r)||ur(r))for(let o=0;o<r.length;++o)Fi(r[o],t,e);else{let o=-1;for(let n of Object.keys(r))/^([1-9]+[0-9]*|0)$/.test(n)&&(o=Math.max(o,Number(n)));for(let n=0;n<=o;n++)Fi(r[n],t,e)}return t}var Rm=class{constructor(t,e){this.backendTimer=t,this.logger=e,e==null&&(this.logger=new wy)}profileKernel(t,e,o){let n,i=()=>{n=o()},s,a=Ps();if(this.backendTimer.timerAvailable())s=this.backendTimer.time(i);else{i();for(let u of n)u.dataSync();s=Promise.resolve({kernelMs:Ps()-a})}if(G().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let u=0;u<n.length;u++){let c=n[u];c.data().then(p=>{S5(p,c.dtype,t)})}return{kernelName:t,outputs:n,inputs:e,timeMs:s.then(u=>u.kernelMs),extraInfo:s.then(u=>u.getExtraProfileInfo!=null?u.getExtraProfileInfo():"")}}logKernelProfile(t){let{kernelName:e,outputs:o,timeMs:n,inputs:i,extraInfo:s}=t;o.forEach(a=>{Promise.all([a.data(),n,s]).then(l=>{this.logger.logKernelProfile(e,a,l[0],l[1],i,l[2])})})}};function S5(r,t,e){if(t!=="float32")return!1;for(let o=0;o<r.length;o++){let n=r[o];if(isNaN(n)||!isFinite(n))return console.warn(`Found ${n} in the result of '${e}'`),!0}return!1}var wy=class{logKernelProfile(t,e,o,n,i,s){let a=typeof n=="number"?gs(`${n}ms`,9):n.error,l=gs(t,25),u=e.rank,c=e.size,p=gs(e.shape.toString(),14),d="";for(let m in i){let f=i[m];if(f!=null){let g=f.shape||e.shape,x=g.length;d+=`${m}: ${x}D ${x>0?g:""} `}}console.log(`%c${l}	%c${a}	%c${u}D ${p}	%c${c}	%c${d}	%c${s}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}};function S2(r,t,e){let o={},n={};for(let l=0;l<t.length;l++)o[t[l].id]=!0;for(let l=0;l<r.length;l++){let u=r[l],c=u.inputs;for(let p in c){let d=c[p],m=!1;for(let f=0;f<t.length;f++)if(o[d.id]){u.outputs.forEach(g=>o[g.id]=!0),m=!0,n[u.id]=!0;break}if(m)break}}let i={};i[e.id]=!0;let s={};for(let l=r.length-1;l>=0;l--){let u=r[l],c=u.inputs;for(let p=0;p<u.outputs.length;p++)if(i[u.outputs[p].id]){for(let d in c)i[c[d].id]=!0,s[u.id]=!0;break}}let a=[];for(let l=0;l<r.length;l++){let u=r[l];if(n[u.id]&&s[u.id]){let c={};for(let d in u.inputs){let m=u.inputs[d];o[m.id]&&(c[d]=m)}let p=Object.assign({},u);p.inputs=c,p.outputs=u.outputs,a.push(p)}}return a}function w2(r,t,e,o){for(let n=t.length-1;n>=0;n--){let i=t[n],s=[];if(i.outputs.forEach(l=>{let u=r[l.id];u!=null?s.push(u):s.push(null)}),i.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${i.kernelName}.`);let a=i.gradient(s);for(let l in i.inputs){if(!(l in a))throw new Error(`Cannot backprop through input ${l}. Available gradients found: ${Object.keys(a)}.`);let u=e(()=>a[l]());if(u.dtype!=="float32")throw new Error(`Error in gradient for op ${i.kernelName}. The gradient of input ${l} must have 'float32' dtype, but has '${u.dtype}'`);let c=i.inputs[l];if(!zr(u.shape,c.shape))throw new Error(`Error in gradient for op ${i.kernelName}. The gradient of input '${l}' has shape '${u.shape}', which does not match the shape of the input '${c.shape}'`);if(r[c.id]==null)r[c.id]=u;else{let p=r[c.id];r[c.id]=o(p,u),p.dispose()}}}}var _2=20,vp=3,_y=7;function C2(r,t,e,o){let n=nn(t),i=w5(r,t,e,n),s=t.length,a=$m(r,t,e,n,i),l=["Tensor"];return o&&(l.push(`  dtype: ${e}`),l.push(`  rank: ${s}`),l.push(`  shape: [${t}]`),l.push("  values:")),l.push(a.map(u=>"    "+u).join(`
`)),l.join(`
`)}function w5(r,t,e,o){let n=Ke(t),i=o[o.length-1],s=new Array(i).fill(0),a=t.length,l=e==="complex64"?Sp(r):r;if(a>1)for(let u=0;u<n/i;u++){let c=u*i;for(let p=0;p<i;p++)s[p]=Math.max(s[p],bp(l[c+p],0,e).length)}return s}function bp(r,t,e){let o;return Array.isArray(r)?o=`${parseFloat(r[0].toFixed(_y))} + ${parseFloat(r[1].toFixed(_y))}j`:Ba(r)?o=`'${r}'`:e==="bool"?o=k2(r):o=parseFloat(r.toFixed(_y)).toString(),gs(o,t)}function k2(r){return r===0?"false":"true"}function $m(r,t,e,o,n,i=!0){let s=e==="complex64"?2:1,a=t[0],l=t.length;if(l===0){if(e==="complex64"){let g=Sp(r);return[bp(g[0],0,e)]}return e==="bool"?[k2(r[0])]:[r[0].toString()]}if(l===1){if(a>_2){let x=vp*s,y=Array.from(r.slice(0,x)),b=Array.from(r.slice((a-vp)*s,a*s));return e==="complex64"&&(y=Sp(y),b=Sp(b)),["["+y.map((T,R)=>bp(T,n[R],e)).join(", ")+", ..., "+b.map((T,R)=>bp(T,n[a-vp+R],e)).join(", ")+"]"]}return["["+(e==="complex64"?Sp(r):Array.from(r)).map((x,y)=>bp(x,n[y],e)).join(", ")+"]"]}let u=t.slice(1),c=o.slice(1),p=o[0]*s,d=[];if(a>_2){for(let g=0;g<vp;g++){let x=g*p,y=x+p;d.push(...$m(r.slice(x,y),u,e,c,n,!1))}d.push("...");for(let g=a-vp;g<a;g++){let x=g*p,y=x+p;d.push(...$m(r.slice(x,y),u,e,c,n,g===a-1))}}else for(let g=0;g<a;g++){let x=g*p,y=x+p;d.push(...$m(r.slice(x,y),u,e,c,n,g===a-1))}let m=l===2?",":"";d[0]="["+(a>0?d[0]+m:"");for(let g=1;g<d.length-1;g++)d[g]=" "+d[g]+m;let f=`,
`;for(let g=2;g<l;g++)f+=`
`;return d[d.length-1]=" "+d[d.length-1]+"]"+(i?"":f),d}function Sp(r){let t=[];for(let e=0;e<r.length;e+=2)t.push([r[e],r[e+1]]);return t}var co=class{constructor(t,e,o){if(this.dtype=e,this.shape=t.slice(),this.size=Ke(t),o!=null){let n=o.length;D(n===this.size,()=>`Length of values '${n}' does not match the size inferred by the shape '${this.size}'.`)}if(e==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=o||im(e,this.size),this.strides=nn(t)}set(t,...e){e.length===0&&(e=[0]),D(e.length===this.rank,()=>`The number of provided coordinates (${e.length}) must match the rank (${this.rank})`);let o=this.locToIndex(e);this.values[o]=t}get(...t){t.length===0&&(t=[0]);let e=0;for(let n of t){if(n<0||n>=this.shape[e]){let i=`Requested out of range element at ${t}.   Buffer shape=${this.shape}`;throw new Error(i)}e++}let o=t[t.length-1];for(let n=0;n<t.length-1;++n)o+=this.strides[n]*t[n];return this.values[o]}locToIndex(t){if(this.rank===0)return 0;if(this.rank===1)return t[0];let e=t[t.length-1];for(let o=0;o<t.length-1;++o)e+=this.strides[o]*t[o];return e}indexToLoc(t){if(this.rank===0)return[];if(this.rank===1)return[t];let e=new Array(this.shape.length);for(let o=0;o<e.length-1;++o)e[o]=Math.floor(t/this.strides[o]),t-=e[o]*this.strides[o];return e[e.length-1]=t,e}get rank(){return this.shape.length}toTensor(){return Wo().makeTensor(this.values,this.shape,this.dtype)}},Wo=null,oc=null,_5=null;function I2(r){Wo=r}function T2(r){oc=r}function E2(r){_5=r}var at=class{constructor(t,e,o,n){this.kept=!1,this.isDisposedInternal=!1,this.shape=t.slice(),this.dtype=e||"float32",this.size=Ke(t),this.strides=nn(t),this.dataId=o,this.id=n,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}buffer(){return j(this,null,function*(){let t=yield this.data();return oc.buffer(this.shape,this.dtype,t)})}bufferSync(){return oc.buffer(this.shape,this.dtype,this.dataSync())}array(){return j(this,null,function*(){let t=yield this.data();return hs(this.shape,t,this.dtype==="complex64")})}arraySync(){return hs(this.shape,this.dataSync(),this.dtype==="complex64")}data(){return j(this,null,function*(){this.throwIfDisposed();let t=Wo().read(this.dataId);if(this.dtype==="string"){let e=yield t;try{return e.map(o=>rc(o))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return t})}dataToGPU(t){return this.throwIfDisposed(),Wo().readToGPU(this.dataId,t)}dataSync(){this.throwIfDisposed();let t=Wo().readSync(this.dataId);if(this.dtype==="string")try{return t.map(e=>rc(e))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return t}bytes(){return j(this,null,function*(){this.throwIfDisposed();let t=yield Wo().read(this.dataId);return this.dtype==="string"?t:new Uint8Array(t.buffer)})}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),Wo().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(t=!1){return oc.print(this,t)}clone(){return this.throwIfDisposed(),oc.clone(this)}toString(t=!1){let e=this.dataSync();return C2(e,this.shape,this.dtype,t)}cast(t){return this.throwIfDisposed(),oc.cast(this,t)}variable(t=!0,e,o){return this.throwIfDisposed(),Wo().makeVariable(this,t,e,o)}};Object.defineProperty(at,Symbol.hasInstance,{value:r=>!!r&&r.data!=null&&r.dataSync!=null&&r.throwIfDisposed!=null});function Cy(){return gp("Tensor",()=>at)}Cy();var An=class extends at{constructor(t,e,o,n){super(t.shape,t.dtype,t.dataId,n),this.trainable=e,this.name=o}assign(t){if(t.dtype!==this.dtype)throw new Error(`dtype of the new value (${t.dtype}) and previous value (${this.dtype}) must match`);if(!zr(t.shape,this.shape))throw new Error(`shape of the new value (${t.shape}) and previous value (${this.shape}) must match`);Wo().disposeTensor(this),this.dataId=t.dataId,Wo().incRef(this,null)}dispose(){Wo().disposeVariable(this),this.isDisposedInternal=!0}};Object.defineProperty(An,Symbol.hasInstance,{value:r=>r instanceof at&&r.assign!=null&&r.assign instanceof Function});var N2=function(r){return r.float32="float32",r.int32="int32",r.bool="int32",r.complex64="complex64",r}(N2||{}),R2=function(r){return r.float32="float32",r.int32="int32",r.bool="bool",r.complex64="complex64",r}(R2||{}),$2=function(r){return r.float32="float32",r.int32="float32",r.bool="float32",r.complex64="complex64",r}($2||{}),P2=function(r){return r.float32="complex64",r.int32="complex64",r.bool="complex64",r.complex64="complex64",r}(P2||{}),C5={float32:$2,int32:N2,bool:R2,complex64:P2};function Tt(r,t){if(r==="string"||t==="string"){if(r==="string"&&t==="string")return"string";throw new Error(`Can not upcast ${r} with ${t}`)}return C5[r][t]}function Dn(r){return Tt(r,"int32")}function Pm(r){return r!=null&&typeof r=="object"&&"texture"in r&&r.texture instanceof WebGLTexture}function Am(r){return typeof GPUBuffer<"u"&&r!=null&&typeof r=="object"&&"buffer"in r&&r.buffer instanceof GPUBuffer}function Ge(r,t){if(r.dtype===t.dtype)return[r,t];let e=Tt(r.dtype,t.dtype);return[r.cast(e),t.cast(e)]}function A2(r,t){D(r.dtype===t.dtype,()=>`The dtypes of the first(${r.dtype}) and second(${t.dtype}) input must match`)}function Dm(r){let t=[];return D2(r,t,new Set),t}function D2(r,t,e){if(r==null)return;if(r instanceof at){t.push(r);return}if(!k5(r))return;let o=r;for(let n in o){let i=o[n];e.has(i)||(e.add(i),D2(i,t,e))}}function k5(r){return Array.isArray(r)||typeof r=="object"}function ky(r){return r.kernelName!=null}var Fm=class{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(t=>t.name)))}}}dispose(){for(let t in this.registeredVariables)this.registeredVariables[t].dispose()}},I5=(()=>{class r{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new Fm}ready(){return j(this,null,function*(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;let e=this.getSortedBackends();for(let o=0;o<e.length;o++){let n=e[o];if(yield this.initializeBackend(n).success){yield this.setBackend(n);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")})}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){let{name:e,asyncInit:o}=this.initializeBackendsAndReturnBest();if(o)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry))if(e in this.registryFactory){let{asyncInit:o}=this.initializeBackend(e);if(o)return null}else return null;return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,o,n=1){return e in this.registryFactory?(Pn(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:o,priority:n},!0)}setBackend(e){return j(this,null,function*(){if(this.registryFactory[e]==null)throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,this.registry[e]==null){this.backendInstance=null;let{success:o,asyncInit:n}=this.initializeBackend(e);if(!(n?yield o:o))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new Rm(this.backendInstance),!0})}setupRegisteredKernels(){xy(this.backendName).forEach(o=>{o.setupFunc!=null&&o.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){xy(e).forEach(n=>{n.disposeFunc!=null&&n.disposeFunc(this.registry[e])})}initializeBackend(e){let o=this.registryFactory[e];if(o==null)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{let n=o.factory();if(n&&!(n instanceof En)&&typeof n.then=="function"){let i=++this.pendingBackendInitId,s=n.then(a=>i<this.pendingBackendInitId?!1:(this.registry[e]=a,this.pendingBackendInit=null,!0)).catch(a=>(i<this.pendingBackendInitId||(this.pendingBackendInit=null,Pn(`Initialization of backend ${e} failed`),Pn(a.stack||a.message)),!1));return this.pendingBackendInit=s,{success:s,asyncInit:!0}}else return this.registry[e]=n,{success:!0,asyncInit:!1}}catch(n){return Pn(`Initialization of backend ${e} failed`),Pn(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,o)=>this.registryFactory[o].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){let e=this.getSortedBackends();for(let o=0;o<e.length;o++){let n=e[o],{success:i,asyncInit:s}=this.initializeBackend(n);if(s||i)return{name:n,asyncInit:s}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,o){let n=this.state.tensorInfo.get(o),i=n.backend,s=this.readSync(o),a=i.refCount(o);i.disposeData(o,!0),n.backend=e,e.move(o,s,n.shape,n.dtype,a),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,o){let n=null;if(o==null){if(typeof e!="function")throw new Error("Please provide a function to tidy()");o=e}else{if(typeof e!="string"&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof o!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");n=e}let i;return this.scopedRun(()=>this.startScope(n),()=>this.endScope(i),()=>(i=o(),i instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),i))}scopedRun(e,o,n){e();try{let i=n();return o(),i}catch(i){throw o(),i}}nextTensorId(){return r.nextTensorId++}nextVariableId(){return r.nextVariableId++}clone(e){let o=A.runKernel($n,{x:e}),n={x:e},i=a=>({x:()=>{let l="float32",u={x:a},c={dtype:l};return A.runKernel(Rn,u,c)}}),s=[];return this.addTapeNode(this.state.activeScope.name,n,[o],i,s,{}),o}runKernel(e,o,n){if(this.backendName==null&&this.backend,!(Qu(e,this.backendName)!=null))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:o,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,o,n){let i=this.backend.numDataIds(),s=0;n.forEach(u=>{s+=u.dtype==="complex64"?3:1});let a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],l=i-o-s-a;if(l>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${l} data ids) after running '${e}'`)}runKernelFunc(e){let o,n=[],i=this.isTapeOn(),s=this.state.numBytes,a=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let l;this.backendName==null&&this.backend;let u,c=ky(e)?e.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(ky(e)){let{kernelName:g,inputs:x,attrs:y}=e;this.backendName==null&&this.backend;let b=Qu(g,this.backendName);D(b!=null,()=>`Cannot find registered kernel '${g}' for backend '${this.backendName}'`),l=()=>{let T=this.backend.numDataIds();u=b.kernelFunc({inputs:x,attrs:y,backend:this.backend});let R=Array.isArray(u)?u:[u];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(g,T,R);let M=R.map(V=>V.rank!=null?V:this.makeTensorFromTensorInfo(V));if(i){let V=this.getTensorsForGradient(g,x,M);n=this.saveTensorsForBackwardMode(V)}return M}}else{let{forwardFunc:g}=e,x=y=>{i&&(n=y.map(b=>this.keep(this.clone(b))))};l=()=>{let y=this.backend.numDataIds();u=this.tidy(()=>g(this.backend,x));let b=Array.isArray(u)?u:[u];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(c,y,b),b}}let{inputs:p,attrs:d}=e,m=ky(e)?null:e.backwardsFunc,f;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?o=l():(f=this.profiler.profileKernel(c,p,()=>l()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(f),o=f.outputs)}),i&&this.addTapeNode(c,p,o,m,n,d),this.state.profiling&&this.state.activeProfile.kernels.push({name:c,bytesAdded:this.state.numBytes-s,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-a,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(p).map(g=>p[g]!=null?p[g].shape:null),outputShapes:o.map(g=>g.shape),kernelTimeMs:f.timeMs,extraInfo:f.extraInfo}),Array.isArray(u)?o:o[0]}saveTensorsForBackwardMode(e){return e.map(n=>this.keep(this.clone(n)))}getTensorsForGradient(e,o,n){let i=gy(e);if(i!=null){let s=i.inputsToSave||[],a=i.outputsToSave||[],l;i.saveAllInputs?(D(Array.isArray(o),()=>"saveAllInputs is true, expected inputs to be an array."),l=Object.keys(o).map(c=>o[c])):l=s.map(c=>o[c]);let u=n.filter((c,p)=>a[p]);return l.concat(u)}return[]}makeTensor(e,o,n,i){if(e==null)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",i=i||this.backend;let s=e;n==="string"&&Ba(e[0])&&(s=e.map(u=>tc(u)));let a=i.write(s,o,n),l=new at(o,n,a,this.nextTensorId());if(this.trackTensor(l,i),n==="string"){let u=this.state.tensorInfo.get(a),c=dy(s);this.state.numBytes+=c-u.bytes,u.bytes=c}return l}makeTensorFromDataId(e,o,n,i){n=n||"float32";let s={dataId:e,shape:o,dtype:n};return this.makeTensorFromTensorInfo(s,i)}makeTensorFromTensorInfo(e,o){let{dataId:n,shape:i,dtype:s}=e,a=new at(i,s,n,this.nextTensorId());return this.trackTensor(a,o),a}makeVariable(e,o=!0,n,i){n=n||this.nextVariableId().toString(),i!=null&&i!==e.dtype&&(e=e.cast(i));let s=new An(e,o,n,this.nextTensorId());if(this.state.registeredVariables[s.name]!=null)throw new Error(`Variable with name ${s.name} was already registered`);return this.state.registeredVariables[s.name]=s,this.incRef(s,this.backend),s}trackTensor(e,o){this.state.numTensors++,e.dtype==="string"&&this.state.numStringTensors++;let n=0;e.dtype!=="complex64"&&e.dtype!=="string"&&(n=e.size*Ma(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:o||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof An||this.track(e)}incRef(e,o){this.trackTensor(e,o),this.backend.incRef(e.dataId)}removeDataId(e,o){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===o&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;let o=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,e.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=o.bytes),e.dtype!=="complex64"&&e.dtype!=="string"){let n=e.size*Ma(e.dtype);this.state.numBytes-=n}o.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,o.backend)}disposeVariables(){for(let e in this.state.registeredVariables){let o=this.state.registeredVariables[e];this.disposeVariable(o)}}disposeVariable(e){this.disposeTensor(e),this.state.registeredVariables[e.name]!=null&&delete this.state.registeredVariables[e.name]}memory(){let e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,e.reasons==null&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}profile(e){return j(this,null,function*(){this.state.profiling=!0;let o=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=yield e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(i=>i.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-o,this.state.activeProfile.newTensors=this.state.numTensors-n;for(let i of this.state.activeProfile.kernels)i.kernelTimeMs=yield i.kernelTimeMs,i.extraInfo=yield i.extraInfo;return this.state.activeProfile})}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(e,o,n,i,s,a){let l={id:this.state.nextTapeNodeId++,kernelName:e,inputs:o,outputs:n,saved:s},u=gy(e);u!=null&&(i=u.gradFunc),i!=null&&(l.gradient=c=>(c=c.map((p,d)=>{if(p==null){let m=n[d],f=za(m.size,m.dtype);return this.makeTensor(f,m.shape,m.dtype)}return p}),i(c.length>1?c:c[0],s,a))),this.state.activeTape.push(l)}keep(e){return e.kept=!0,e}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){let o={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(o.name=e),this.state.scopeStack.push(o),this.state.activeScope=o}endScope(e){let o=Dm(e),n=new Set(o.map(s=>s.id));for(let s=0;s<this.state.activeScope.track.length;s++){let a=this.state.activeScope.track[s];!a.kept&&!n.has(a.id)&&a.dispose()}let i=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],o.forEach(s=>{!s.kept&&s.scopeId===i.id&&this.track(s)})}gradients(e,o,n,i=!1){if(D(o.length>0,()=>"gradients() received an empty list of xs."),n!=null&&n.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);let s=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));D(s instanceof at,()=>"The result y returned by f() must be a tensor.");let a=S2(this.state.activeTape,o,s);if(!i&&a.length===0&&o.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{let l={};l[s.id]=n??T5(s.shape),w2(l,a,c=>this.tidy(c),E5);let u=o.map(c=>l[c.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(c=>{for(let p of c.saved)p.dispose()}),this.state.activeTape=null),{value:s,grads:u}})}customGrad(e){return D(Va(e),()=>"The f passed in customGrad(f) must be a function."),(...o)=>{D(o.every(l=>l instanceof at),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let n,i={};o.forEach((l,u)=>{i[u]=l});let s=(l,u)=>(n=e(...o,u),D(n.value instanceof at,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),D(Va(n.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),n.value),a=(l,u)=>{let c=n.gradFunc(l,u),p=Array.isArray(c)?c:[c];D(p.length===o.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),D(p.every(m=>m instanceof at),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");let d={};return p.forEach((m,f)=>{d[f]=()=>m}),d};return this.runKernelFunc({forwardFunc:s,backwardsFunc:a,inputs:i})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,o){return this.state.tensorInfo.get(e).backend.readToGPU(e,o)}time(e){return j(this,null,function*(){let o=Ps(),n=yield this.backend.time(e);return n.wallMs=Ps()-o,n})}track(e){return this.state.activeScope!=null&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new Fm;for(let e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}return r.nextTensorId=0,r.nextVariableId=0,r})();function T5(r){let t=fp(Ke(r),"float32");return A.makeTensor(t,r,"float32")}function Iy(){let r=hy();if(r._tfengine==null){let t=new hp(r);r._tfengine=new I5(t)}return r2(r._tfengine.ENV),I2(()=>r._tfengine),r._tfengine}var A=Iy();function E5(r,t){let e={a:r,b:t};return A.runKernel(sn,e)}var Oi={};dt(Oi,{isBrowser:()=>Ey,isMobile:()=>$5,mockIsMobile:()=>R5});function N5(){return typeof navigator<"u"&&navigator!=null}var Ty;function R5(r){Ty=r}function $5(r){if(Ty!==void 0)return Ty;if(r||N5()){if(r||(r=navigator),r.product==="ReactNative")return!0;let t=r.userAgent||r.vendor||(typeof window<"u"?window.opera:"");if(!t){let e=r;return e.userAgentData&&e.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function Ey(){return typeof window<"u"&&window.document!=null||typeof WorkerGlobalScope<"u"}var Tr=G();Tr.registerFlag("DEBUG",()=>!1,r=>{r&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});Tr.registerFlag("IS_BROWSER",()=>Ey());Tr.registerFlag("IS_NODE",()=>typeof process<"u"&&typeof process.versions<"u"&&typeof process.versions.node<"u");Tr.registerFlag("IS_CHROME",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));Tr.registerFlag("IS_SAFARI",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor));Tr.registerFlag("PROD",()=>!1);Tr.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>Tr.getBool("DEBUG"));Tr.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);Tr.registerFlag("IS_TEST",()=>!1);Tr.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>Tr.getBool("DEBUG"));Tr.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);Tr.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1);Tr.registerFlag("USE_SETTIMEOUTCUSTOM",()=>!1);function Er(r,t){let e=r;if(ur(r))return t==="string"?[]:[r.length];if(Pm(r)){let n=r.channels||"RGBA";return[r.height,r.width*n.length]}else if(Am(r))return[r.buffer.size/(t==null?4:Ma(t))];if(!Array.isArray(r))return[];let o=[];for(;Array.isArray(e)||ur(e)&&t!=="string";)o.push(e.length),e=e[0];return Array.isArray(r)&&G().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&O2(r,o,[]),o}function O2(r,t,e){if(e=e||[],!Array.isArray(r)&&!ur(r)){D(t.length===0,()=>`Element arr[${e.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`);return}D(t.length>0,()=>`Element arr[${e.join("][")}] should be a primitive, but is an array of ${r.length} elements`),D(r.length===t[0],()=>`Element arr[${e.join("][")}] should have ${t[0]} elements, but has ${r.length} elements`);let o=t.slice(1);for(let n=0;n<r.length;++n)O2(r[n],o,e.concat(n))}function F2(r,t,e,o){if(r!=="string_or_numeric"){if(r==null)throw new Error("Expected dtype cannot be null.");if(r!=="numeric"&&r!==t||r==="numeric"&&t==="string")throw new Error(`Argument '${e}' passed to '${o}' must be ${r} tensor, but got ${t} tensor`)}}function C(r,t,e,o="numeric"){if(r instanceof Cy())return F2(o,r.dtype,t,e),r;let n=pi(r);if(n!=="string"&&["bool","int32","float32"].indexOf(o)>=0&&(n=o),F2(o,n,t,e),r==null||!ur(r)&&!Array.isArray(r)&&typeof r!="number"&&typeof r!="boolean"&&typeof r!="string"){let l=r==null?"null":r.constructor.name;throw new Error(`Argument '${t}' passed to '${e}' must be a Tensor or TensorLike, but got '${l}'`)}let i=Er(r,n);!ur(r)&&!Array.isArray(r)&&(r=[r]);let a=n!=="string"?ec(r,n):Fi(r,[],!0);return A.makeTensor(a,i,n)}function As(r,t,e,o="numeric"){if(!Array.isArray(r))throw new Error(`Argument ${t} passed to ${e} must be a \`Tensor[]\` or \`TensorLike[]\``);return r.map((i,s)=>C(i,`${t}[${s}]`,e,o))}var Ny="__op";function E(r){let t=Object.keys(r);if(t.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let e=t[0],o=r[e];e.endsWith("_")&&(e=e.substring(0,e.length-1)),e=e+Ny;let n=(...i)=>{A.startScope(e);try{let s=o(...i);return xs(s)&&console.error("Cannot return a Promise inside of tidy."),A.endScope(s),s}catch(s){throw A.endScope(null),s}};return Object.defineProperty(n,"name",{value:e,configurable:!0}),n}function P5(r,t){let e=C(r,"real","complex"),o=C(t,"imag","complex");Rt(e.shape,o.shape,`real and imag shapes, ${e.shape} and ${o.shape}, must match in call to tf.complex().`);let n={real:e,imag:o};return A.runKernel(vs,n)}var Nr=E({complex_:P5});function vr(r,t,e,o){if(o==null)o=pi(r);else if(o==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(Am(r)||Pm(r)){if(o!=="float32"&&o!=="int32")throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${o}.`);return A.backend.createTensorFromGPUData(r,t||e,o)}if(!ur(r)&&!Array.isArray(r)&&typeof r!="number"&&typeof r!="boolean"&&typeof r!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(t!=null){bt(t);let n=Ke(t),i=Ke(e);D(n===i,()=>`Based on the provided shape, [${t}], the tensor should have ${n} values but has ${i}`);for(let s=0;s<e.length;++s){let a=e[s],l=s===e.length-1?a!==Ke(t.slice(s)):!0;D(e[s]===t[s]||!l,()=>`Error creating a new Tensor. Inferred shape (${e}) does not match the provided shape (${t}). `)}}return!ur(r)&&!Array.isArray(r)&&(r=[r]),t=t||e,r=o!=="string"?ec(r,o):Fi(r,[],!0),A.makeTensor(r,t,o)}function br(r,t,e){let o=Er(r,e);return vr(r,t,o,e)}var Fn={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};var tr=class r{static join(t){return new r(t).slice()}constructor(t){if(this.shards=[],this.previousShardIndex=0,t==null||(t instanceof Array||(t=[t]),t=t.map(o=>ur(o)?o.buffer:o),t.length===0))return;this.bufferUniformSize=t[0].byteLength;let e=0;for(let o=0;o<t.length;o++){let n=t[o];o!==t.length-1&&n.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);let i=e+n.byteLength;this.shards.push({buffer:n,start:e,end:i}),e=i}this.shards.length===0&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(t=0,e=this.byteLength){if(this.shards.length===0)return new ArrayBuffer(0);if(t=isNaN(Number(t))?0:t,e=isNaN(Number(e))?0:e,t=Math.max(0,t),e=Math.min(this.byteLength,e),e<=t)return new ArrayBuffer(0);let o=this.findShardForByte(t);if(o===-1)throw new Error(`Could not find start shard for byte ${t}`);let n=e-t,i=new ArrayBuffer(n),s=new Uint8Array(i),a=0;for(let l=o;l<this.shards.length;l++){let u=this.shards[l],p=t+a-u.start,d=a,f=Math.min(e,u.end)-u.start,g=new Uint8Array(u.buffer,p,f-p);if(s.set(g,d),a+=g.length,e<u.end)break}return i}findShardForByte(t){if(this.shards.length===0||t<0||t>=this.byteLength)return-1;if(this.bufferUniformSize!=null)return this.previousShardIndex=Math.floor(t/this.bufferUniformSize),this.previousShardIndex;function e(n){return t<n.start?-1:t>=n.end?1:0}if(e(this.shards[this.previousShardIndex])===0)return this.previousShardIndex;let o=A5(this.shards,e);return o===-1?-1:(this.previousShardIndex=o,this.previousShardIndex)}};function A5(r,t){let e=0,o=r.length;for(;e<=o;){let n=Math.floor((o-e)/2)+e,i=t(r[n]);if(i===0)return n;i<0?o=n:e=n+1}return-1}function D5(r){G().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(r+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}E2(D5);function cr(){return A}function Ne(r,t){return A.tidy(r,t)}function Ye(r){Dm(r).forEach(e=>e.dispose())}function Rr(r){return A.keep(r)}function Ry(r){return A.setBackend(r)}function $y(){return A.ready()}function an(){return A.backendName}function Om(r,t,e=1){return A.registerBackend(r,t,e)}function Li(){return A.backend}var Mi=4;function B2(r,t){return j(this,null,function*(){let e=[],o=[],n=Array.isArray(r)?r.map(s=>s.name):Object.keys(r);for(let s=0;s<n.length;++s){let a=n[s],l=Array.isArray(r)?r[s].tensor:r[a];if(l.dtype!=="float32"&&l.dtype!=="int32"&&l.dtype!=="bool"&&l.dtype!=="string"&&l.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${a}': ${l.dtype}`);let u={name:a,shape:l.shape,dtype:l.dtype};if(l.dtype==="string"){let c=new Promise(p=>j(null,null,function*(){let d=yield l.bytes(),m=d.reduce((x,y)=>x+y.length,0)+Mi*d.length,f=new Uint8Array(m),g=0;for(let x=0;x<d.length;x++){let y=d[x],b=new Uint8Array(new Uint32Array([y.length]).buffer);f.set(b,g),g+=Mi,f.set(y,g),g+=y.length}p(f)}));o.push(c)}else o.push(l.data());t!=null&&(u.group=t),e.push(u)}let i=yield Promise.all(o);return{data:L5(i),specs:e}})}function Lm(r,t){let e=new tr(r),o={},n=0;for(let i of t){let s=F5(i,(a,l)=>e.slice(n+a,n+l));o[i.name]=V2(i,e.slice(n,n+s)),n+=s}return o}function F5(r,t){let e=Ke(r.shape),o;if("quantization"in r){let n=r.quantization;o=Fn[n.dtype]}else if(r.dtype==="string"){let n=0;for(let i=0;i<e;i++)n+=Mi+new Uint32Array(t(n,n+Mi))[0];return n}else o=Fn[r.dtype];return e*o}function O5(r,t){return j(this,null,function*(){let e=Ke(r.shape),o;if("quantization"in r){let n=r.quantization;o=Fn[n.dtype]}else if(r.dtype==="string"){let n=0;for(let i=0;i<e;i++)n+=Mi+new Uint32Array(yield t(n,n+Mi))[0];return n}else o=Fn[r.dtype];return e*o})}function V2(r,t){let e=r.name,o=r.dtype,n=r.shape,i=Ke(n),s,a=0;if("quantization"in r){let l=r.quantization;if(l.dtype==="uint8"||l.dtype==="uint16"){if(!("min"in l&&"scale"in l))throw new Error(`Weight ${r.name} with quantization ${l.dtype} doesn't have corresponding metadata min and scale.`)}else if(l.dtype==="float16"){if(o!=="float32")throw new Error(`Weight ${r.name} is quantized with ${l.dtype} which only supports weights of type float32 not ${o}.`)}else throw new Error(`Weight ${r.name} has unknown quantization dtype ${l.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);let u=Fn[l.dtype],c=l.dtype==="uint8"?new Uint8Array(t):new Uint16Array(t);if(o==="float32")if(l.dtype==="uint8"||l.dtype==="uint16"){s=new Float32Array(c.length);for(let p=0;p<c.length;p++){let d=c[p];s[p]=d*l.scale+l.min}}else if(l.dtype==="float16")s=W5()(c);else throw new Error(`Unsupported quantization type ${l.dtype} for weight type float32.`);else if(o==="int32"){if(l.dtype!=="uint8"&&l.dtype!=="uint16")throw new Error(`Unsupported quantization type ${l.dtype} for weight type int32.`);s=new Int32Array(c.length);for(let p=0;p<c.length;p++){let d=c[p];s[p]=Math.round(d*l.scale+l.min)}}else throw new Error(`Unsupported dtype in weight '${e}': ${o}`);a+=i*u}else if(o==="string"){let l=Ke(r.shape);s=[];for(let u=0;u<l;u++){let c=new Uint32Array(t.slice(a,a+Mi))[0];a+=Mi;let p=new Uint8Array(t.slice(a,a+c));s.push(p),a+=c}}else{let l=Fn[o];if(o==="float32")s=new Float32Array(t);else if(o==="int32")s=new Int32Array(t);else if(o==="bool")s=new Uint8Array(t);else if(o==="complex64"){s=new Float32Array(t);let u=new Float32Array(s.length/2),c=new Float32Array(s.length/2);for(let f=0;f<u.length;f++)u[f]=s[f*2],c[f]=s[f*2+1];let p=br(u,n,"float32"),d=br(c,n,"float32"),m=Nr(p,d);return p.dispose(),d.dispose(),m}else throw new Error(`Unsupported dtype in weight '${e}': ${o}`);a+=i*l}return br(s,n,o)}function L2(r,t,e){return j(this,null,function*(){let o=new Uint8Array(t);for(;o.byteLength<e;){let{done:n,value:i}=yield r.read();if(n&&i==null){let a=e-o.byteLength;throw new Error(`Reader is done but ${a} bytes are still expected`)}let s=new Uint8Array(o.length+i.byteLength);s.set(o,0),s.set(new Uint8Array(i),o.length),o=s}return o.buffer})}function Mm(r,t){return j(this,null,function*(){let e={},o=r.getReader(),n=new ArrayBuffer(0);for(let i of t){let s=yield O5(i,(u,c)=>j(null,null,function*(){return n=yield L2(o,n,c),n.slice(u,c)}));n=yield L2(o,n,s);let a=n.slice(0,s);n=n.slice(s);let l=V2(i,a);if(e[i.name]=l,an()==="webgpu"){let u=Li();"uploadToGPU"in u&&Ke(l.shape)>=G().get("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD")&&u.uploadToGPU(l.dataId)}}return e})}function L5(r){if(r===null)throw new Error(`Invalid input value: ${JSON.stringify(r)}`);let t=0,e=[];r.forEach(i=>{if(t+=i.byteLength,e.push(i.byteLength===i.buffer.byteLength?i:new i.constructor(i)),!(i instanceof Float32Array||i instanceof Int32Array||i instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${i.constructor.name}`)});let o=new Uint8Array(t),n=0;return e.forEach(i=>{o.set(new Uint8Array(i.buffer),n),n+=i.byteLength}),o.buffer}var Py=typeof Buffer<"u"&&(typeof Blob>"u"||typeof atob>"u"||typeof btoa>"u");function M2(r){return Py?Buffer.byteLength(r,"utf8"):new Blob([r]).size}function W2(r){if(Py)return Buffer.from(r).toString("base64");let t=new Uint8Array(r),e="";for(let o=0,n=t.length;o<n;o++)e+=String.fromCharCode(t[o]);return btoa(e)}function z2(r){if(Py){let o=Buffer.from(r,"base64");return o.buffer.slice(o.byteOffset,o.byteOffset+o.byteLength)}let t=atob(r),e=new Uint8Array(t.length);for(let o=0;o<t.length;++o)e.set([t.charCodeAt(o)],o);return e.buffer}function U2(r){return tr.join(r)}function Ay(r){let t="/";for(r=r.trim();r.endsWith(t);)r=r.slice(0,r.length-1);let e=r.split(t);return e[e.length-1]}function Bm(r,t){let e={modelTopology:r.modelTopology,format:r.format,generatedBy:r.generatedBy,convertedBy:r.convertedBy,weightsManifest:t};return r.signature!=null&&(e.signature=r.signature),r.userDefinedMetadata!=null&&(e.userDefinedMetadata=r.userDefinedMetadata),r.modelInitializer!=null&&(e.modelInitializer=r.modelInitializer),r.initializerSignature!=null&&(e.initializerSignature=r.initializerSignature),r.trainingConfig!=null&&(e.trainingConfig=r.trainingConfig),e}function Dy(r,t,e){let o={modelTopology:r.modelTopology,format:r.format,generatedBy:r.generatedBy,convertedBy:r.convertedBy};if(r.trainingConfig!=null&&(o.trainingConfig=r.trainingConfig),r.weightsManifest!=null){if(!t)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!e)throw new Error("modelJSON has weightsManifest but weightData is null");o.weightSpecs=t,o.weightData=e}return r.signature!=null&&(o.signature=r.signature),r.userDefinedMetadata!=null&&(o.userDefinedMetadata=r.userDefinedMetadata),r.modelInitializer!=null&&(o.modelInitializer=r.modelInitializer),r.initializerSignature!=null&&(o.initializerSignature=r.initializerSignature),o}function nc(r,t){return j(this,null,function*(){let e,o;return r.weightsManifest!=null&&([e,o]=yield t(r.weightsManifest)),Dy(r,e,o)})}function ln(r){if(r.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:r.modelTopology==null?0:M2(JSON.stringify(r.modelTopology)),weightSpecsBytes:r.weightSpecs==null?0:M2(JSON.stringify(r.weightSpecs)),weightDataBytes:r.weightData==null?0:new tr(r.weightData).byteLength}}function wp(r){let t=[];for(let e of r)t.push(...e.weights);return t}function M5(){let r=e=>{let o=e<<13,n=0;for(;(o&8388608)===0;)n-=8388608,o<<=1;return o&=-8388609,n+=947912704,o|n},t=new Uint32Array(2048);t[0]=0;for(let e=1;e<1024;e++)t[e]=r(e);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}function B5(){let r=new Uint32Array(64);r[0]=0,r[31]=1199570944,r[32]=2147483648,r[63]=3347054592;for(let t=1;t<31;t++)r[t]=t<<23;for(let t=33;t<63;t++)r[t]=2147483648+(t-32<<23);return r}function V5(){let r=new Uint32Array(64);for(let t=0;t<64;t++)r[t]=1024;return r[0]=r[32]=0,r}function W5(){let r=M5(),t=B5(),e=V5();return o=>{let n=new ArrayBuffer(4*o.length),i=new Uint32Array(n);for(let s=0;s<o.length;s++){let a=o[s],l=r[e[a>>10]+(a&1023)]+t[a>>10];i[s]=l}return new Float32Array(n)}}var Kt=class r{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return r.instance==null&&(r.instance=new r),r.instance}static registerSaveRouter(t){r.getInstance().saveRouters.push(t)}static registerLoadRouter(t){r.getInstance().loadRouters.push(t)}static getSaveHandlers(t){return r.getHandlers(t,"save")}static getLoadHandlers(t,e){return r.getHandlers(t,"load",e)}static getHandlers(t,e,o){let n=[];return(e==="load"?r.getInstance().loadRouters:r.getInstance().saveRouters).forEach(s=>{let a=s(t,o);a!==null&&n.push(a)}),n}},G2=r=>Kt.registerSaveRouter(r),H2=r=>Kt.registerLoadRouter(r),K2=r=>Kt.getSaveHandlers(r),q2=(r,t)=>Kt.getLoadHandlers(r,t);var Fy="tensorflowjs",Oy=1,Ds="models_store",Bi="model_info_store";function j2(){if(!G().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");let r=typeof window>"u"?self:window,t=r.indexedDB||r.mozIndexedDB||r.webkitIndexedDB||r.msIndexedDB||r.shimIndexedDB;if(t==null)throw new Error("The current browser does not appear to support IndexedDB.");return t}function Ly(r){let t=r.result;t.createObjectStore(Ds,{keyPath:"modelPath"}),t.createObjectStore(Bi,{keyPath:"modelPath"})}var Fs=(()=>{class r{constructor(e){if(this.indexedDB=j2(),e==null||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}save(e){return j(this,null,function*(){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)})}load(){return j(this,null,function*(){return this.databaseAction(this.modelPath)})}databaseAction(e,o){return new Promise((n,i)=>{let s=this.indexedDB.open(Fy,Oy);s.onupgradeneeded=()=>Ly(s),s.onsuccess=()=>{let a=s.result;if(o==null){let l=a.transaction(Ds,"readonly"),c=l.objectStore(Ds).get(this.modelPath);c.onsuccess=()=>{if(c.result==null)return a.close(),i(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));n(c.result.modelArtifacts)},c.onerror=p=>(a.close(),i(c.error)),l.oncomplete=()=>a.close()}else{o.weightData=tr.join(o.weightData);let l=ln(o),u=a.transaction(Bi,"readwrite"),c=u.objectStore(Bi),p;try{p=c.put({modelPath:this.modelPath,modelArtifactsInfo:l})}catch(m){return i(m)}let d;p.onsuccess=()=>{d=a.transaction(Ds,"readwrite");let m=d.objectStore(Ds),f;try{f=m.put({modelPath:this.modelPath,modelArtifacts:o,modelArtifactsInfo:l})}catch(g){return i(g)}f.onsuccess=()=>n({modelArtifactsInfo:l}),f.onerror=g=>{c=u.objectStore(Bi);let x=c.delete(this.modelPath);x.onsuccess=()=>(a.close(),i(f.error)),x.onerror=y=>(a.close(),i(f.error))}},p.onerror=m=>(a.close(),i(p.error)),u.oncomplete=()=>{d==null?a.close():d.oncomplete=()=>a.close()}}},s.onerror=a=>i(s.error)})}}return r.URL_SCHEME="indexeddb://",r})();var X2=r=>G().getBool("IS_BROWSER")&&!Array.isArray(r)&&r.startsWith(Fs.URL_SCHEME)?z5(r.slice(Fs.URL_SCHEME.length)):null;Kt.registerSaveRouter(X2);Kt.registerLoadRouter(X2);function z5(r){return new Fs(r)}function U5(r){return r.startsWith(Fs.URL_SCHEME)?r.slice(Fs.URL_SCHEME.length):r}var Vm=class{constructor(){this.indexedDB=j2()}listModels(){return j(this,null,function*(){return new Promise((t,e)=>{let o=this.indexedDB.open(Fy,Oy);o.onupgradeneeded=()=>Ly(o),o.onsuccess=()=>{let n=o.result,i=n.transaction(Bi,"readonly"),a=i.objectStore(Bi).getAll();a.onsuccess=()=>{let l={};for(let u of a.result)l[u.modelPath]=u.modelArtifactsInfo;t(l)},a.onerror=l=>(n.close(),e(a.error)),i.oncomplete=()=>n.close()},o.onerror=n=>e(o.error)})})}removeModel(t){return j(this,null,function*(){return t=U5(t),new Promise((e,o)=>{let n=this.indexedDB.open(Fy,Oy);n.onupgradeneeded=()=>Ly(n),n.onsuccess=()=>{let i=n.result,s=i.transaction(Bi,"readwrite"),a=s.objectStore(Bi),l=a.get(t),u;l.onsuccess=()=>{if(l.result==null)return i.close(),o(new Error(`Cannot find model with path '${t}' in IndexedDB.`));{let c=a.delete(t),p=()=>{u=i.transaction(Ds,"readwrite");let m=u.objectStore(Ds).delete(t);m.onsuccess=()=>e(l.result.modelArtifactsInfo),m.onerror=f=>o(l.error)};c.onsuccess=p,c.onerror=d=>(p(),i.close(),o(l.error))}},l.onerror=c=>(i.close(),o(l.error)),s.oncomplete=()=>{u==null?i.close():u.oncomplete=()=>i.close()}},n.onerror=i=>o(n.error)})})}};var On="/",ic="tensorflowjs_models",Y2="info",G5="model_topology",H5="weight_specs",K5="weight_data",q5="model_metadata";function Q2(r){return{info:[ic,r,Y2].join(On),topology:[ic,r,G5].join(On),weightSpecs:[ic,r,H5].join(On),weightData:[ic,r,K5].join(On),modelMetadata:[ic,r,q5].join(On)}}function Z2(r){for(let t of Object.values(r))window.localStorage.removeItem(t)}function j5(r){let t=r.split(On);if(t.length<3)throw new Error(`Invalid key format: ${r}`);return t.slice(1,t.length-1).join(On)}function X5(r){return r.startsWith(Os.URL_SCHEME)?r.slice(Os.URL_SCHEME.length):r}var Os=(()=>{class r{constructor(e){if(!G().getBool("IS_BROWSER")||typeof window>"u"||typeof window.localStorage>"u")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,e==null||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=Q2(this.modelPath)}save(e){return j(this,null,function*(){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{let o=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),i=ln(e),s=tr.join(e.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(i)),this.LS.setItem(this.keys.topology,o),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,W2(s));let a={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:e.signature!=null?e.signature:void 0,userDefinedMetadata:e.userDefinedMetadata!=null?e.userDefinedMetadata:void 0,modelInitializer:e.modelInitializer!=null?e.modelInitializer:void 0,initializerSignature:e.initializerSignature!=null?e.initializerSignature:void 0,trainingConfig:e.trainingConfig!=null?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(a)),{modelArtifactsInfo:i}}catch{throw Z2(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${i.modelTopologyBytes}, weightSpecsBytes=${i.weightSpecsBytes}, weightDataBytes=${i.weightDataBytes}.`)}}})}load(){return j(this,null,function*(){let e=JSON.parse(this.LS.getItem(this.keys.info));if(e==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(e.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");let o={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(n==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);o.modelTopology=n;let i=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(i==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);o.weightSpecs=i;let s=this.LS.getItem(this.keys.modelMetadata);if(s!=null){let l=JSON.parse(s);o.format=l.format,o.generatedBy=l.generatedBy,o.convertedBy=l.convertedBy,l.signature!=null&&(o.signature=l.signature),l.userDefinedMetadata!=null&&(o.userDefinedMetadata=l.userDefinedMetadata),l.modelInitializer!=null&&(o.modelInitializer=l.modelInitializer),l.initializerSignature!=null&&(o.initializerSignature=l.initializerSignature),l.trainingConfig!=null&&(o.trainingConfig=l.trainingConfig)}let a=this.LS.getItem(this.keys.weightData);if(a==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return o.weightData=z2(a),o})}}return r.URL_SCHEME="localstorage://",r})();var J2=r=>G().getBool("IS_BROWSER")&&!Array.isArray(r)&&r.startsWith(Os.URL_SCHEME)?Y5(r.slice(Os.URL_SCHEME.length)):null;Kt.registerSaveRouter(J2);Kt.registerLoadRouter(J2);function Y5(r){return new Os(r)}var Wm=class{constructor(){D(G().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),D(typeof window>"u"||typeof window.localStorage<"u",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}listModels(){return j(this,null,function*(){let t={},e=ic+On,o=On+Y2;for(let n=0;n<this.LS.length;++n){let i=this.LS.key(n);if(i.startsWith(e)&&i.endsWith(o)){let s=j5(i);t[s]=JSON.parse(this.LS.getItem(i))}}return t})}removeModel(t){return j(this,null,function*(){t=X5(t);let e=Q2(t);if(this.LS.getItem(e.info)==null)throw new Error(`Cannot find model at path '${t}'`);let o=JSON.parse(this.LS.getItem(e.info));return Z2(e),o})}};var sc="://",zo=class r{constructor(){this.managers={}}static getInstance(){return r.instance==null&&(r.instance=new r),r.instance}static registerManager(t,e){D(t!=null,()=>"scheme must not be undefined or null."),t.endsWith(sc)&&(t=t.slice(0,t.indexOf(sc))),D(t.length>0,()=>"scheme must not be an empty string.");let o=r.getInstance();D(o.managers[t]==null,()=>`A model store manager is already registered for scheme '${t}'.`),o.managers[t]=e}static getManager(t){let e=r.getInstance().managers[t];if(e==null)throw new Error(`Cannot find model manager for scheme '${t}'`);return e}static getSchemes(){return Object.keys(r.getInstance().managers)}};function zm(r){if(r.indexOf(sc)===-1)throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${zo.getSchemes().join(",")}`);return{scheme:r.split(sc)[0],path:r.split(sc)[1]}}function ew(r,t,e=!1){return j(this,null,function*(){D(r!==t,()=>`Old path and new path are the same: '${r}'`);let o=Kt.getLoadHandlers(r);D(o.length>0,()=>`Copying failed because no load handler is found for source URL ${r}.`),D(o.length<2,()=>`Copying failed because more than one (${o.length}) load handlers for source URL ${r}.`);let n=o[0],i=Kt.getSaveHandlers(t);D(i.length>0,()=>`Copying failed because no save handler is found for destination URL ${t}.`),D(i.length<2,()=>`Copying failed because more than one (${o.length}) save handlers for destination URL ${t}.`);let s=i[0],a=zm(r).scheme,l=zm(r).path,u=a===zm(r).scheme,c=yield n.load();e&&u&&(yield zo.getManager(a).removeModel(l));let p=yield s.save(c);return e&&!u&&(yield zo.getManager(a).removeModel(l)),p.modelArtifactsInfo})}function tw(){return j(this,null,function*(){let r=zo.getSchemes(),t={};for(let e of r){let o=yield zo.getManager(e).listModels();for(let n in o){let i=e+sc+n;t[i]=o[n]}}return t})}function rw(r){return j(this,null,function*(){let t=zm(r);return zo.getManager(t.scheme).removeModel(t.path)})}function ow(r,t){return j(this,null,function*(){return ew(r,t,!1)})}function nw(r,t){return j(this,null,function*(){return ew(r,t,!0)})}var My=class{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(t,e){return fetch(t,e)}now(){return performance.now()}encode(t,e){if(e!=="utf-8"&&e!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${e}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(t)}decode(t,e){return new TextDecoder(e).decode(t)}setTimeoutCustom(t,e){if(typeof window>"u"||!G().getBool("USE_SETTIMEOUTCUSTOM")){setTimeout(t,e);return}this.functionRefs.push(t),setTimeout(()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")},e),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",o=>{if(o.source===window&&o.data.name===this.messageName){o.stopPropagation();let n=this.functionRefs[o.data.index];n(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}},!0))}isTypedArray(t){return Tm(t)}};if(G().get("IS_BROWSER")){G().setPlatform("browser",new My);try{zo.registerManager(Os.URL_SCHEME,new Wm)}catch{}try{zo.registerManager(Fs.URL_SCHEME,new Vm)}catch{}}var Z5={importFetch:()=>sw()},By;var Vy=class{constructor(){this.util=aw(),this.textEncoder=new this.util.TextEncoder}fetch(t,e){return G().global.fetch!=null?G().global.fetch(t,e):(By==null&&(By=Z5.importFetch()),By(t,e))}now(){let t=process.hrtime();return t[0]*1e3+t[1]/1e6}encode(t,e){if(e!=="utf-8"&&e!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${e}`);return this.textEncoder.encode(t)}decode(t,e){return t.length===0?"":new this.util.TextDecoder(e).decode(t)}isTypedArray(t){return this.util.types.isFloat32Array(t)||this.util.types.isInt32Array(t)||this.util.types.isUint8Array(t)||this.util.types.isUint8ClampedArray(t)}};G().get("IS_NODE")&&!G().get("IS_BROWSER")&&G().setPlatform("node",new Vy);function Me(r,t="float32",e){return t=t||"float32",bt(r),new co(r,t,e)}function J5(r,t){let e=C(r,"x","cast");if(!py(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if(t==="string"&&e.dtype!=="string"||t!=="string"&&e.dtype==="string")throw new Error("Only strings can be casted to strings");let o={x:e},n={dtype:t};return A.runKernel(Rn,o,n)}var Ue=E({cast_:J5});function eW(r){let e={x:C(r,"x","clone","string_or_numeric")};return A.runKernel($n,e)}var Hr=E({clone_:eW});function Um(r,t=!1){console.log(r.toString(t))}Iy();var tW={buffer:Me,cast:Ue,clone:Hr,print:Um};T2(tW);function rW(r,t){let e=C(r,"a","add"),o=C(t,"b","add");[e,o]=Ge(e,o);let n={a:e,b:o};return A.runKernel(sn,n)}var he=E({add_:rW});function oW(r,t){let e=C(r,"a","floorDiv"),o=C(t,"b","floorDiv");[e,o]=Ge(e,o);let n={a:e,b:o};return A.runKernel(xi,n)}var Gm=E({floorDiv_:oW});function nW(r,t){let e=C(r,"a","div"),o=C(t,"b","div");if([e,o]=Ge(e,o),e.dtype==="int32"&&o.dtype==="int32")return Gm(e,o);let n={a:e,b:o},i={};return A.runKernel(El,n,i)}var Fe=E({div_:nW});function iW(r,t){let e=C(r,"a","mul"),o=C(t,"b","mul");[e,o]=Ge(e,o);let n={a:e,b:o};return A.runKernel(ki,n)}var ae=E({mul_:iW});function sW(r){let t=C(r,"x","abs");if(t.dtype==="complex64"){let e={x:t};return A.runKernel(ul,e)}else{let e={x:t};return A.runKernel(ys,e)}}var Qt=E({abs_:sW});function aW(r){let e={x:C(r,"x","acos")};return A.runKernel(Ua,e)}var lw=E({acos_:aW});function lW(r){let e={x:C(r,"x","acosh")};return A.runKernel(Ga,e)}var uw=E({acosh_:lW});function uW(r){D(Array.isArray(r),()=>"The argument passed to tf.addN() must be a list of tensors"),D(r.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${r.length}`);let t=r.map((n,i)=>C(n,`tensors${i}`,"addN")),e=t[0];t.forEach(n=>{if(n.dtype!==e.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),t.forEach(n=>{if(!zr(n.shape,e.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});let o=t;return A.runKernel(Ha,o)}var cw=E({addN_:uW});function cW(r,t=null,e=!1){let n={x:C(r,"x","all","bool")},i={axis:t,keepDims:e};return A.runKernel(Ka,n,i)}var pw=E({all_:cW});function pW(r,t=null,e=!1){let n={x:C(r,"x","any","bool")},i={axis:t,keepDims:e};return A.runKernel(qa,n,i)}var dw=E({any_:pW});function dW(r,t=0){let o={x:C(r,"x","argMax")},n={axis:t};return A.runKernel(ja,o,n)}var Hm=E({argMax_:dW});function mW(r,t=0){let o={x:C(r,"x","argMin")},n={axis:t};return A.runKernel(Xa,o,n)}var mw=E({argMin_:mW});function fW(r){let e={x:C(r,"x","asin")};return A.runKernel(Ya,e)}var fw=E({asin_:fW});function hW(r){let e={x:C(r,"x","asinh")};return A.runKernel(Qa,e)}var hw=E({asinh_:hW});function gW(r){let e={x:C(r,"x","atan")};return A.runKernel(Za,e)}var gw=E({atan_:gW});function xW(r,t){let e=C(r,"a","atan2"),o=C(t,"b","atan2");[e,o]=Ge(e,o);let n={a:e,b:o};return A.runKernel(el,n)}var xw=E({atan2_:xW});function yW(r){let e={x:C(r,"x","atanh")};return A.runKernel(Ja,e)}var yw=E({atanh_:yW});function vW(r,t,e,o,n="NHWC",i){let s=r[3],a=[...t,s],l=bw(n);return Bs(r,a,e,i,o,null,null,l)}function zy(r,t,e,o,n,i,s="channelsLast"){let[a,l]=_p(t),u;if(s==="channelsLast")u=[a,l,r[3],r[3]];else if(s==="channelsFirst")u=[a,l,r[1],r[1]];else throw new Error(`Unknown dataFormat ${s}`);return Bs(r,u,e,o,n,i,!1,s)}function bW(r,t,e,o,n,i,s="NDHWC"){let[a,l,u]=Wy(t),c,p;if(s==="NDHWC")p="channelsLast",c=[a,l,u,r[4],r[4]];else if(s==="NCDHW")p="channelsFirst",c=[a,l,u,r[1],r[1]];else throw new Error(`Unknown dataFormat ${s}`);return vw(r,c,e,o,n,!1,p,i)}function Bs(r,t,e,o,n,i,s=!1,a="channelsLast"){let[l,u,c,p]=[-1,-1,-1,-1];if(a==="channelsLast")[l,u,c,p]=r;else if(a==="channelsFirst")[l,p,u,c]=r;else throw new Error(`Unknown dataFormat ${a}`);let[d,m,,f]=t,[g,x]=_p(e),[y,b]=_p(o),T=lc(d,y),R=lc(m,b),{padInfo:M,outHeight:V,outWidth:z}=_W(n,u,c,g,x,T,R,i,a),H=s?f*p:f,K;return a==="channelsFirst"?K=[l,H,V,z]:a==="channelsLast"&&(K=[l,V,z,H]),{batchSize:l,dataFormat:a,inHeight:u,inWidth:c,inChannels:p,outHeight:V,outWidth:z,outChannels:H,padInfo:M,strideHeight:g,strideWidth:x,filterHeight:d,filterWidth:m,effectiveFilterHeight:T,effectiveFilterWidth:R,dilationHeight:y,dilationWidth:b,inShape:r,outShape:K,filterShape:t}}function vw(r,t,e,o,n,i=!1,s="channelsLast",a){let[l,u,c,p,d]=[-1,-1,-1,-1,-1];if(s==="channelsLast")[l,u,c,p,d]=r;else if(s==="channelsFirst")[l,d,u,c,p]=r;else throw new Error(`Unknown dataFormat ${s}`);let[m,f,g,,x]=t,[y,b,T]=Wy(e),[R,M,V]=Wy(o),z=lc(m,R),H=lc(f,M),K=lc(g,V),{padInfo:X,outDepth:te,outHeight:ce,outWidth:pe}=CW(n,u,c,p,y,b,T,z,H,K,a),ve=i?x*d:x,Se;return s==="channelsFirst"?Se=[l,ve,te,ce,pe]:s==="channelsLast"&&(Se=[l,te,ce,pe,ve]),{batchSize:l,dataFormat:s,inDepth:u,inHeight:c,inWidth:p,inChannels:d,outDepth:te,outHeight:ce,outWidth:pe,outChannels:ve,padInfo:X,strideDepth:y,strideHeight:b,strideWidth:T,filterDepth:m,filterHeight:f,filterWidth:g,effectiveFilterDepth:z,effectiveFilterHeight:H,effectiveFilterWidth:K,dilationDepth:R,dilationHeight:M,dilationWidth:V,inShape:r,outShape:Se,filterShape:t}}function SW(r,t,e,o,n){o==null&&(o=Uy(r,t,e));let i=r[0],s=r[1],a=Cp((i-t+2*o)/e+1,n),l=Cp((s-t+2*o)/e+1,n);return[a,l]}function wW(r,t,e,o,n,i){n==null&&(n=Uy(r,t[0],o[0]));let s=[0,0,0,e];for(let a=0;a<3;a++)r[a]+2*n>=t[a]&&(s[a]=Cp((r[a]-t[a]+2*n)/o[a]+1,i));return s}function Uy(r,t,e,o=1){let n=lc(t,o);return Math.floor((r[0]*(e-1)-e+n)/2)}function _p(r){return typeof r=="number"?[r,r,r]:r.length===2?[r[0],r[1],1]:r}function Wy(r){return typeof r=="number"?[r,r,r]:r}function lc(r,t){return t<=1?r:r+(r-1)*(t-1)}function _W(r,t,e,o,n,i,s,a,l){let u,c,p;if(typeof r=="number"){u={top:r,bottom:r,left:r,right:r,type:r===0?"VALID":"NUMBER"};let m=SW([t,e],i,o,r,a);c=m[0],p=m[1]}else if(r==="same"){c=Math.ceil(t/o),p=Math.ceil(e/n);let d=Math.max(0,(c-1)*o+i-t),m=Math.max(0,(p-1)*n+s-e),f=Math.floor(d/2),g=d-f,x=Math.floor(m/2),y=m-x;u={top:f,bottom:g,left:x,right:y,type:"SAME"}}else if(r==="valid")u={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((t-i+1)/o),p=Math.ceil((e-s+1)/n);else if(typeof r=="object"){let d=l==="channelsLast"?r[1][0]:r[2][0],m=l==="channelsLast"?r[1][1]:r[2][1],f=l==="channelsLast"?r[2][0]:r[3][0],g=l==="channelsLast"?r[2][1]:r[3][1];u={top:d,bottom:m,left:f,right:g,type:d===0&&m===0&&f===0&&g===0?"VALID":"EXPLICIT"},c=Cp((t-i+d+m)/o+1,a),p=Cp((e-s+f+g)/n+1,a)}else throw Error(`Unknown padding parameter: ${r}`);return{padInfo:u,outHeight:c,outWidth:p}}function CW(r,t,e,o,n,i,s,a,l,u,c){let p,d,m,f;if(r==="valid"&&(r=0),typeof r=="number"){p={top:r,bottom:r,left:r,right:r,front:r,back:r,type:r===0?"VALID":"NUMBER"};let x=wW([t,e,o,1],[a,l,u],1,[n,i,s],r,c);d=x[0],m=x[1],f=x[2]}else if(r==="same"){d=Math.ceil(t/n),m=Math.ceil(e/i),f=Math.ceil(o/s);let g=(d-1)*n+a-t,x=(m-1)*i+l-e,y=(f-1)*s+u-o,b=Math.floor(g/2),T=g-b,R=Math.floor(x/2),M=x-R,V=Math.floor(y/2),z=y-V;p={top:R,bottom:M,left:V,right:z,front:b,back:T,type:"SAME"}}else throw Error(`Unknown padding parameter: ${r}`);return{padInfo:p,outDepth:d,outHeight:m,outWidth:f}}function Cp(r,t){if(!t)return Math.trunc(r);switch(t){case"round":return Math.round(r);case"ceil":return Math.ceil(r);case"floor":return Math.floor(r);default:throw new Error(`Unknown roundingMode ${t}`)}}function Ms(r){let[t,e,o]=_p(r);return t===1&&e===1&&o===1}function pr(r,t){return Ms(r)||Ms(t)}function un(r){return _p(r).every(t=>t>0)}function bw(r){if(r==="NHWC")return"channelsLast";if(r==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${r}`)}function Ot(r,t,e){if(e!=null){if(typeof t=="string")throw Error(`Error in ${r}: pad must be an integer when using dimRoundingMode ${e} but got pad ${t}.`);if(typeof t=="number")D(Nn(t),()=>`Error in ${r}: pad must be an integer when using dimRoundingMode ${e} but got pad ${t}.`);else if(typeof t=="object")t.forEach(o=>{o.forEach(n=>{D(Nn(n),()=>`Error in ${r}: pad must be an integer when using dimRoundingMode ${e} but got pad ${n}.`)})});else throw Error(`Error in ${r}: Unknown padding parameter: ${t}`)}}function kW(r,t){let o={x:C(r,"x","reshape","string_or_numeric")},n={shape:t};return A.runKernel(xu,o,n)}var Y=E({reshape_:kW});function IW(r,t,e,o,n){let i=C(r,"x","avgPool","float32"),s=1;D(pr(e,s),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${e} and dilations '${s}'`);let a=i,l=!1;i.rank===3&&(l=!0,a=Y(i,[1,i.shape[0],i.shape[1],i.shape[2]])),D(a.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${a.rank}.`),Ot("avgPool",o,n);let u={x:a},c={filterSize:t,strides:e,pad:o,dimRoundingMode:n},p=A.runKernel(tl,u,c);return p=Ue(p,i.dtype),l?Y(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var Km=E({avgPool_:IW});function TW(r,t,e,o,n,i="NDHWC"){let s=C(r,"x","avgPool3d","float32"),a=s,l=!1;s.rank===4&&(l=!0,a=Y(s,[1,s.shape[0],s.shape[1],s.shape[2],s.shape[3]])),D(a.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${a.rank}.`),D(i==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${i}`),D(typeof e=="number"&&e>0||Array.isArray(e)&&e[0]>0&&e[1]>0&&e[2]>0,()=>`Error in avgPool3d: Stride must be > 0, but got '${e}'`),Ot("avgPool3d",o,n);let u={x:a},c={filterSize:t,strides:e,pad:o,dimRoundingMode:n,dataFormat:i},p=A.runKernel(rl,u,c);return p=Ue(p,a.dtype),l?Y(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}var Sw=E({avgPool3d_:TW});function EW(r,t=0){D(r.length>=1,()=>"Pass at least one tensor to concat");let e=As(r,"tensors","concat","string_or_numeric");if(e[0].dtype==="complex64"&&e.forEach(i=>{if(i.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${i.dtype}. `)}),e.length===1)return Hr(e[0]);let o=e,n={axis:t};return A.runKernel(cl,o,n)}var mt=E({concat_:EW});function NW(r,t,e=!1,o=!1){let n=C(r,"a","matMul"),i=C(t,"b","matMul");[n,i]=Ge(n,i);let s={a:n,b:i},a={transposeA:e,transposeB:o};return A.runKernel(ol,s,a)}var tt=E({matMul_:NW});function RW(r){let e={x:C(r,"x","sigmoid","float32")};return A.runKernel(Ei,e)}var Kr=E({sigmoid_:RW});function $W(r,t,e){let o=C(r,"x","slice","string_or_numeric");if(o.rank===0)throw new Error("Slicing scalar is not possible");let n={x:o},i={begin:t,size:e};return A.runKernel(_s,n,i)}var Oe=E({slice_:$W});function PW(r){let e={x:C(r,"x","tanh","float32")};return A.runKernel(Uu,e)}var kp=E({tanh_:PW});function AW(r,t,e,o,n,i){let s=C(r,"forgetBias","basicLSTMCell"),a=C(t,"lstmKernel","basicLSTMCell"),l=C(e,"lstmBias","basicLSTMCell"),u=C(o,"data","basicLSTMCell"),c=C(n,"c","basicLSTMCell"),p=C(i,"h","basicLSTMCell"),d=mt([u,p],1),m=tt(d,a),f=he(m,l),g=f.shape[0],x=f.shape[1]/4,y=[g,x],b=Oe(f,[0,0],y),T=Oe(f,[0,x],y),R=Oe(f,[0,x*2],y),M=Oe(f,[0,x*3],y),V=he(ae(Kr(b),kp(T)),ae(c,Kr(he(s,R)))),z=ae(kp(V),Kr(M));return[V,z]}var ww=E({basicLSTMCell_:AW});function DW(r,t,e){let o=C(r,"x","batchToSpaceND"),n=t.reduce((a,l)=>a*l);D(o.rank>=1+t.length,()=>`input rank is ${o.rank} but should be > than blockShape.length ${t.length}`),D(e.length===t.length,()=>`crops.length is ${e.length} but should be equal to blockShape.length  ${t.length}`),D(o.shape[0]%n===0,()=>`input tensor batch is ${o.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${n}`);let i={x:o},s={blockShape:t,crops:e};return A.runKernel(nl,i,s)}var qm=E({batchToSpaceND_:DW});function _w(r){let t;return r.rank===0||r.rank===1?t=Y(r,[1,1,1,r.size]):r.rank===2?t=Y(r,[1,1,r.shape[0],r.shape[1]]):r.rank===3?t=Y(r,[1,r.shape[0],r.shape[1],r.shape[2]]):t=r,t}function FW(r,t,e,o,n,i){i==null&&(i=.001);let s=C(r,"x","batchNorm"),a=C(t,"mean","batchNorm"),l=C(e,"variance","batchNorm"),u;n!=null&&(u=C(n,"scale","batchNorm"));let c;o!=null&&(c=C(o,"offset","batchNorm")),D(a.rank===l.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),D(c==null||a.rank===c.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),D(u==null||a.rank===u.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let d={x:_w(s),scale:u,offset:c,mean:a,variance:l},m={varianceEpsilon:i},f=A.runKernel(Ol,d,m);return Y(f,s.shape)}var Vi=E({batchNorm_:FW});function OW(r,t,e,o,n,i){let s=C(r,"x","batchNorm"),a=C(t,"mean","batchNorm"),l=C(e,"variance","batchNorm"),u;n!=null&&(u=C(n,"scale","batchNorm"));let c;return o!=null&&(c=C(o,"offset","batchNorm")),D(s.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${s.rank}.`),D(a.rank===2||a.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${a.rank}.`),D(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`),u!=null&&D(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`),c!=null&&D(c.rank===2||c.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`),Vi(s,a,l,c,u,i)}var Cw=E({batchNorm2d_:OW});function LW(r,t,e,o,n,i){let s=C(r,"x","batchNorm"),a=C(t,"mean","batchNorm"),l=C(e,"variance","batchNorm"),u;n!=null&&(u=C(n,"scale","batchNorm"));let c;return o!=null&&(c=C(o,"offset","batchNorm")),D(s.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${s.rank}.`),D(a.rank===3||a.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${a.rank}.`),D(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`),u!=null&&D(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`),c!=null&&D(c.rank===3||c.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`),Vi(s,a,l,c,u,i)}var kw=E({batchNorm3d_:LW});function MW(r,t,e,o,n,i){let s=C(r,"x","batchNorm"),a=C(t,"mean","batchNorm"),l=C(e,"variance","batchNorm"),u;n!=null&&(u=C(n,"scale","batchNorm"));let c;return o!=null&&(c=C(o,"offset","batchNorm")),D(s.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${s.rank}.`),D(a.rank===4||a.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${a.rank}.`),D(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`),u!=null&&D(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`),c!=null&&D(c.rank===4||c.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`),Vi(s,a,l,c,u,i)}var Iw=E({batchNorm4d_:MW});function BW(r,t,e){let o=C(r,"x","bincount"),n=C(t,"weights","bincount");D(o.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${o.dtype}`),D(e>=0,()=>`size must be non-negative, but got ${e}.`),D(n.size===o.size||n.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${o.shape}, weights shape: ${n.shape}.`);let i={x:o,weights:n},s={size:e};return A.runKernel(il,i,s)}var jm=E({bincount_:BW});function VW(r,t){let e=C(r,"x","bitwiseAnd"),o=C(t,"y","bitwiseAnd");if(!zr(e.shape,o.shape))throw new Error(`BitwiseAnd: Tensors must have the same shape. x: ${e.shape}, y: ${o.shape}`);if(e.dtype!=="int32"||o.dtype!=="int32")throw new Error(`BitwiseAnd: Only supports 'int32' values in tensor, found type of x: ${e.dtype} and type of y: ${o.dtype}`);let n={a:e,b:o};return A.runKernel(sl,n)}var Tw=E({bitwiseAnd_:VW});function WW(r,t){let e=C(r,"s0","broadcastArgs","int32"),o=C(t,"s1","broadcastArgs","int32");if(e.rank!==1)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${e.rank}`);if(o.rank!==1)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${o.rank}`);let n={s0:e,s1:o};return A.runKernel(al,n)}var Ew=E({broadcastArgs_:WW});function zW(r,t){let e=C(r,"broadcastTo","x"),o=e.shape;if(bt(t),t.length<e.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${e.rank}.`);if(t.length>e.rank){let u=e.shape.slice();for(;u.length<t.length;)u.unshift(1);e=Y(e,u)}let n=e.shape,i=Array.from(t);for(let u=t.length-1;u>=0;u--)if(n[u]===t[u])i[u]=1;else if(e.shape[u]!==1)throw new Error(`broadcastTo(): [${o}] cannot be broadcast to [${t}].`);if(i.map((u,c)=>u>1?c:-1).filter(u=>u>=0).length===0)return Hr(e);let a={x:e},l={reps:i};return A.runKernel(Pi,a,l)}var Wi=E({broadcastTo_:zW});function UW(r){let e={x:C(r,"x","ceil","float32")};return A.runKernel(di,e)}var Nw=E({ceil_:UW});function pn(r,t,e){bt(r),e=e||pi(t);let o={shape:r,value:t,dtype:e};return A.runKernel(Dl,{},o)}function GW(r,t,e){let o=C(r,"x","clipByValue");if(D(t<=e,()=>`Error in clip: min (${t}) must be less than or equal to max (${e}).`),t===e)return pn(o.shape,t,o.dtype);let n={x:o},i={clipValueMin:t,clipValueMax:e};return A.runKernel(ll,n,i)}var Xm=E({clipByValue_:GW});function HW(r){return mt(r,0)}var Rw=E({concat1d_:HW});function KW(r,t){return mt(r,t)}var $w=E({concat2d_:KW});function qW(r,t){return mt(r,t)}var Pw=E({concat3d_:qW});function jW(r,t){return mt(r,t)}var Aw=E({concat4d_:jW});function XW(r,t,e,o,n="NHWC",i=[1,1],s){let a=C(r,"x","conv2d","float32"),l=C(t,"filter","conv2d","float32"),u=a,c=!1;a.rank===3&&(c=!0,u=Y(a,[1,a.shape[0],a.shape[1],a.shape[2]])),D(u.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`),D(l.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`),Ot("conv2d",o,s);let p=n==="NHWC"?u.shape[3]:u.shape[1];D(p===l.shape[2],()=>`Error in conv2d: depth of input (${p}) must match input depth for filter ${l.shape[2]}.`),D(pr(e,i),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${e} and dilations '${i}'`),D(un(i),()=>"Error in conv2D: Dilated rates should be larger than 0."),D(un(e),()=>"Error in conv2D: Strides should be larger than 0.");let d={x:u,filter:l},m={strides:e,pad:o,dataFormat:n,dilations:i,dimRoundingMode:s},f=A.runKernel(pl,d,m);return c?Y(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var zi=E({conv2d_:XW});function YW(r,t,e,o,n="NWC",i=1,s){let a=C(r,"x","conv1d"),l=C(t,"filter","conv1d"),u=a,c=!1;a.rank===2&&(c=!0,u=Y(a,[1,a.shape[0],a.shape[1]])),D(u.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`),D(l.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`),Ot("conv1d",o,s),D(u.shape[2]===l.shape[1],()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`),D(pr(e,i),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${e} and dilation '${i}'`),D(un(i),()=>"Error in conv1D: Dilated rates should be larger than 0."),D(un(e),()=>"Error in conv1D: Stride should be larger than 0."),D(n==="NWC",()=>`Error in conv1d: got dataFormat of ${n} but only NWC is currently supported.`);let p=Y(l,[1,l.shape[0],l.shape[1],l.shape[2]]),d=Y(u,[u.shape[0],1,u.shape[1],u.shape[2]]),x=zi(d,p,[1,e],o,"NHWC",[1,i],s);return c?Y(x,[x.shape[2],x.shape[3]]):Y(x,[x.shape[0],x.shape[2],x.shape[3]])}var Dw=E({conv1d_:YW});function QW(r,t,e,o,n,i="NHWC",s){D(r.length===t.rank,()=>`Length of inShape (${r.length}) and rank of dy (${t.rank}) must match`);let a=r,l=t,u=!1;t.rank===3&&(u=!0,l=Y(t,[1,t.shape[0],t.shape[1],t.shape[2]]),a=[1,r[0],r[1],r[2]]),D(a.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${a.length}.`),D(l.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`),D(e.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${e.rank}`);let c=i==="NHWC"?a[3]:a[1],p=i==="NHWC"?l.shape[3]:l.shape[1];D(c===e.shape[2],()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${e.shape[2]}.`),D(p===e.shape[3],()=>`Error in conv2dDerInput: depth of output (${p}) must match output depth for filter ${e.shape[3]}.`),Ot("conv2dDerInput",n,s);let d={dy:l,filter:e},m={strides:o,pad:n,dataFormat:i,dimRoundingMode:s,inputShape:a},f=A.runKernel(ml,d,m);return u?Y(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var Ym=E({conv2DBackpropInput_:QW});function ZW(r,t,e,o,n,i){let s=C(r,"x","conv2dTranspose"),a=C(t,"filter","conv2dTranspose");return Ym(e,s,a,o,n,"NHWC",i)}var Fw=E({conv2dTranspose_:ZW});function JW(r,t,e,o,n="NDHWC",i=[1,1,1]){let s=C(r,"x","conv3d"),a=C(t,"filter","conv3d"),l=s,u=!1;s.rank===4&&(u=!0,l=Y(s,[1,s.shape[0],s.shape[1],s.shape[2],s.shape[3]])),D(l.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`),D(a.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${a.rank}.`),D(l.shape[4]===a.shape[3],()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${a.shape[3]}.`),D(pr(e,i),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${e} and dilations '${i}'`),D(n==="NDHWC",()=>`Error in conv3d: got dataFormat of ${n} but only NDHWC is currently supported.`),D(un(i),()=>"Error in conv3D: Dilated rates should be larger than 0."),D(un(e),()=>"Error in conv3D: Strides should be larger than 0.");let c={x:l,filter:a},p={strides:e,pad:o,dataFormat:n,dilations:i},d=A.runKernel(fl,c,p);return u?Y(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}var Ow=E({conv3d_:JW});function e6(r,t,e,o,n){D(r.length===t.rank,()=>`Length of inShape (${r.length}) and rank of dy (${t.rank}) must match`);let i=r,s=t,a=!1;t.rank===4&&(a=!0,s=Y(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),i=[1,r[0],r[1],r[2],r[3]]);let l=i[4],u=s.shape[4];D(i.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${i.length}.`),D(s.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${s.rank}`),D(e.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${e.rank}`),D(l===e.shape[3],()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${e.shape[3]}.`),D(u===e.shape[4],()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${e.shape[4]}.`);let c={dy:s,filter:e},p={pad:n,strides:o,inputShape:i},d=A.runKernel(hl,c,p);return a?Y(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}var Lw=E({conv3DBackpropInput_:e6});function t6(r,t,e,o,n){let i=C(r,"x","conv3dTranspose"),s=C(t,"filter","conv3dTranspose");return Lw(e,i,s,o,n)}var Mw=E({conv3dTranspose_:t6});function r6(r){let e={x:C(r,"x","cos","float32")};return A.runKernel(gl,e)}var Bw=E({cos_:r6});function o6(r){let e={x:C(r,"x","cosh","float32")};return A.runKernel(xl,e)}var Vw=E({cosh_:o6});function n6(r,t=0,e=!1,o=!1){let i={x:C(r,"x","cumprod")},s={axis:t,exclusive:e,reverse:o};return A.runKernel(yl,i,s)}var Ww=E({cumprod_:n6});function i6(r,t=0,e=!1,o=!1){let i={x:C(r,"x","cumsum")},s={axis:t,exclusive:e,reverse:o};return A.runKernel(vl,i,s)}var zw=E({cumsum_:i6});function s6(r,t,e,o=!1){let n=C(r,"x","denseBincount"),i=C(t,"weights","denseBincount");D(n.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${n.dtype}`),D(n.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${n.rank}.`),D(e>=0,()=>`size must be non-negative, but got ${e}.`),D(i.size===n.size||i.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${n.shape}, weights shape: ${i.shape}.`);let s={x:n,weights:i},a={size:e,binaryOutput:o};return A.runKernel(Sl,s,a)}var Uw=E({denseBincount_:s6});function a6(r,t,e="NHWC"){let o=C(r,"x","depthToSpace","float32"),n=e==="NHWC"?o.shape[1]:o.shape[2],i=e==="NHWC"?o.shape[2]:o.shape[3],s=e==="NHWC"?o.shape[3]:o.shape[1];D(t>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`),D(n*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${n} and ${t}  for depthToSpace with input shape
    ${o.shape}`),D(i*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${i} and ${t} for depthToSpace with input shape
        ${o.shape}`),D(s%(t*t)===0,()=>`Dimension size must be evenly divisible by ${t*t} but is ${s} for depthToSpace with input shape ${o.shape}`);let a={x:o},l={blockSize:t,dataFormat:e};return A.runKernel(wl,a,l)}var Gw=E({depthToSpace_:a6});function l6(r,t,e,o,n="NHWC",i=[1,1],s){let a=C(r,"x","depthwiseConv2d","float32"),l=C(t,"filter","depthwiseConv2d","float32"),u=a,c=!1;a.rank===3&&(c=!0,u=Y(a,[1,a.shape[0],a.shape[1],a.shape[2]])),D(u.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`),D(l.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`);let p=n==="NHWC"?u.shape[3]:u.shape[1];D(p===l.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${p}) must match the inChannels dimension in filter ${l.shape[2]}.`),Ot("depthwiseConv2d",o,s);let d={x:u,filter:l},m={strides:e,pad:o,dataFormat:n,dilations:i,dimRoundingMode:s},f=A.runKernel(_l,d,m);return c?Y(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var uc=E({depthwiseConv2d_:l6});function u6(r){let e={x:C(r,"x","diag")};return A.runKernel(Il,e)}var Hw=E({diag_:u6});function c6(r,t,e,o,n=[1,1],i="NHWC"){let s=C(r,"x","dilation2d"),a=C(t,"filter","dilation2d");D(s.rank===3||s.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${s.rank}.`),D(a.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${a.rank}.`),D(i==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${i}`);let l=s,u=!1;s.rank===3&&(l=Y(s,[1,s.shape[0],s.shape[1],s.shape[2]]),u=!0),D(l.shape[3]===a.shape[2],()=>`Error in dilation2d:  input and filter must have the same depth: ${l.shape[3]} vs ${a.shape[2]}`);let c={x:l,filter:a},p={strides:e,pad:o,dilations:n},d=A.runKernel(Tl,c,p);return u?Y(d,[d.shape[1],d.shape[2],d.shape[3]]):d}var Kw=E({dilation2d_:c6});var dn={};dt(dn,{assertAndGetBroadcastShape:()=>et,getBroadcastDims:()=>qw,getReductionAxes:()=>Qm});function qw(r,t){let e=r.length,o=[];for(let n=0;n<e;n++){let i=e-1-n,s=r[i]||1;(t[t.length-1-n]||1)>1&&s===1&&o.unshift(i)}return o}function Qm(r,t){let e=[];for(let o=0;o<t.length;o++){let n=r[r.length-o-1],i=t.length-o-1,s=t[i];(n==null||n===1&&s>1)&&e.unshift(i)}return e}function et(r,t){let e=Math.max(r.length,t.length),o=new Array(e);for(let n=0;n<e;n++){let i=r[r.length-n-1];i==null&&(i=1);let s=t[t.length-n-1];if(s==null&&(s=1),i===1)o[e-n-1]=s;else if(s===1)o[e-n-1]=i;else if(i!==s){let a=`Operands could not be broadcast together with shapes ${r} and ${t}.`;throw Error(a)}else o[e-n-1]=i}return o}function p6(r,t){let e=C(r,"a","equal","string_or_numeric"),o=C(t,"b","equal","string_or_numeric");[e,o]=Ge(e,o),et(e.shape,o.shape);let n={a:e,b:o};return A.runKernel(mi,n)}var Zm=E({equal_:p6});function d6(r,t,e){let o=C(t,"a","where"),n=C(e,"b","where"),i=C(r,"condition","where","bool"),s=et(et(i.shape,o.shape),n.shape),a=Wi(i,s),l=Wi(o,s),u=Wi(n,s),c={condition:a,t:l,e:u};return A.runKernel(Iu,c)}var po=E({where_:d6});function m6(r){let e={x:C(r,"x","zerosLike")};return A.runKernel(ju,e)}var zt=E({zerosLike_:m6});function f6(r,t){let e=C(r,"a","div"),o=C(t,"b","div");[e,o]=Ge(e,o);let n=Fe(e,o),i=zt(n),s=Zm(o,i);return po(s,i,n)}var jw=E({divNoNan_:f6});function h6(r,t){let e=C(r,"t1","dot"),o=C(t,"t2","dot");D((e.rank===1||e.rank===2)&&(o.rank===1||o.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${e.rank} and ${o.rank}.`);let n=e.rank===1?e.size:e.shape[1],i=o.rank===1?o.size:o.shape[0];if(D(n===i,()=>`Error in dot: inner dimensions of inputs must match, but got ${n} and ${i}.`),e.rank===1&&o.rank===1){let s=Y(e,[1,-1]),a=Y(o,[-1,1]),l=tt(s,a);return Y(l,[])}else if(e.rank===1&&o.rank===2){let s=Y(e,[1,-1]),a=Y(o,[o.shape[0],o.shape[1]]),l=tt(s,a);return Y(l,[l.size])}else if(e.rank===2&&o.rank===1){let s=Y(o,[-1,1]),a=tt(e,s);return Y(a,[a.size])}else{let s=Y(o,[o.shape[0],o.shape[1]]);return tt(e,s)}}var Xw=E({dot_:h6});function g6(r,...t){let e=t.map((n,i)=>C(n,`tensors${i}`,"einsum")),o={equation:r};return A.runKernel(Nl,e,o)}var Ui=E({einsum_:g6});function x6(r){let e={x:C(r,"x","elu","float32")};return A.runKernel(Rl,e)}var Jm=E({elu_:x6});function y6(r,t){let e=C(r,"x","ensureShape","string_or_numeric");if(!ay(e.shape,t))throw new Error(`EnsureShape: Shape of tensor ${e.shape} is not compatible with expected shape ${t}`);return r}var Yw=E({ensureShape_:y6});function v6(r){let t=C(r,"x","erf");D(t.dtype==="int32"||t.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),t.dtype==="int32"&&(t=Ue(t,"float32"));let e={x:t};return A.runKernel($l,e)}var Qw=E({erf_:v6});function Gy(r,t){for(let e=0;e<r.length;++e)if(r[r.length-e-1]!==t-1-e)return!1;return!0}function Zw(r,t,e){let o=r.length+t.length,n=[],i=0,s=0;for(let a=0;a<o;a++)e.indexOf(a)===-1?n.push(r[i++]):n.push(t[s++]);return n}function b6(r,t){let e=[],o=r.length;for(let i=0;i<o;i++)t.indexOf(i)===-1&&e.push(r[i]);let n=t.map(i=>r[i]);return[e,n]}function Ln(r,t){let e=t.map(o=>1);return Zw(r,e,t)}function S6(r,t,e){D(Gy(t,e),()=>`${r} supports only inner-most axes for now. Got axes ${t} and rank-${e} input.`)}function w6(r,t){if(Gy(r,t))return null;let e=[];for(let o=0;o<t;++o)r.indexOf(o)===-1&&e.push(o);return r.forEach(o=>e.push(o)),e}function _6(r){return r.map((t,e)=>[e,t]).sort((t,e)=>t[1]-e[1]).map(t=>t[0])}function C6(r,t){let e=[];for(let o=t-r;o<t;++o)e.push(o);return e}function I6(r,t=null,e=!1){let n={x:C(r,"x","max")},i={reductionIndices:t,keepDims:e};return A.runKernel(Ql,n,i)}var mn=E({max_:I6});function T6(r,t=null,e=!1){let n={x:C(r,"x","min")},i={axis:t,keepDims:e};return A.runKernel(ru,n,i)}var Ip=E({min_:T6});function E6(r,t){let e=C(r,"base","pow"),o=C(t,"exp","pow");[e,o]=Ge(e,o);let n={a:e,b:o};return A.runKernel(du,n)}var Mn=E({pow_:E6});function Re(r,t){if((ur(r)&&t!=="string"||Array.isArray(r))&&t!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(t==="string"&&ur(r)&&!(r instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return vr(r,[],[],t)}function N6(r){let e={x:C(r,"x","sqrt","float32")};return A.runKernel(Ni,e)}var $r=E({sqrt_:N6});function R6(r){let t=C(r,"x","square"),e={};return A.runKernel("Square",{x:t},e)}var Ut=E({square_:R6});function $6(r,t=null,e=!1){let o=C(r,"x","sum");o.dtype==="bool"&&(o=Ue(o,"int32"));let n={x:o},i={axis:t,keepDims:e};return A.runKernel(Pu,n,i)}var rt=E({sum_:$6});function P6(r,t="euclidean",e=null,o=!1){r=C(r,"x","norm");let n=Jw(r,t,e),i=n.shape;if(o){let s=ci(e,r.shape);i=Ln(n.shape,s)}return Y(n,i)}function Jw(r,t,e=null){if(r.rank===0)return Qt(r);if(r.rank!==1&&e===null)return Jw(Y(r,[-1]),t,e);if(r.rank===1||typeof e=="number"||Array.isArray(e)&&e.length===1){if(t===1)return rt(Qt(r),e);if(t===1/0)return mn(Qt(r),e);if(t===-1/0)return Ip(Qt(r),e);if(t==="euclidean"||t===2)return $r(rt(Mn(Qt(r),Re(2,"int32")),e));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(e)&&e.length===2){if(t===1)return mn(rt(Qt(r),e[0]),e[1]-1);if(t===1/0)return mn(rt(Qt(r),e[1]),e[0]);if(t===-1/0)return Ip(rt(Qt(r),e[1]),e[0]);if(t==="fro"||t==="euclidean")return $r(rt(Ut(r),e));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${e}`)}var Vs=E({norm_:P6});function A6(r,t=null,e=!1){return Vs(r,"euclidean",t,e)}var e_=E({euclideanNorm_:A6});function D6(r){let e={x:C(r,"x","exp")};return A.runKernel(fi,e)}var Pr=E({exp_:D6});function F6(r,t=0){let e=C(r,"x","expandDims","string_or_numeric");D(t<=e.rank,()=>"Axis must be <= rank of the tensor");let o={input:e},n={dim:t};return A.runKernel(Pl,o,n)}var dr=E({expandDims_:F6});function O6(r){let e={x:C(r,"x","expm1")};return A.runKernel(hi,e)}var t_=E({expm1_:O6});function L6(r,t){let e=C(r,"x","tile","string_or_numeric");D(e.rank===t.length,()=>`Error in transpose: rank of input ${e.rank} must match length of reps ${t}.`);let o={x:e},n={reps:t};return A.runKernel(Pi,o,n)}var Gi=E({tile_:L6});function M6(r,t,e,o="float32"){t==null&&(t=r);let n=Me([r,t],o),i=r<=t?r:t;for(let a=0;a<i;++a)n.set(1,a,a);let s=Y(n.toTensor(),[r,t]);if(e==null)return s;if(e.length===1)return Gi(dr(s,0),[e[0],1,1]);if(e.length===2)return Gi(dr(dr(s,0),0),[e[0],e[1],1,1]);if(e.length===3)return Gi(dr(dr(dr(s,0),0),0),[e[0],e[1],e[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${e.length}D.`)}var ef=E({eye_:M6});function B6(r){let e={x:C(r,"x","floor","float32")};return A.runKernel(gi,e)}var tf=E({floor_:B6});function V6(r,t,e=0,o=0){let n=C(r,"x","gather"),i=C(t,"indices","gather","int32"),s={x:n,indices:i},a={axis:e,batchDims:o};return A.runKernel(Ll,s,a)}var rf=E({gather_:V6});function W6(r,t){let e=C(r,"a","greater","string_or_numeric"),o=C(t,"b","greater","string_or_numeric");[e,o]=Ge(e,o),et(e.shape,o.shape);let n={a:e,b:o};return A.runKernel(yi,n)}var Ws=E({greater_:W6});function z6(r,t){let e=C(r,"a","greaterEqual","string_or_numeric"),o=C(t,"b","greaterEqual","string_or_numeric");[e,o]=Ge(e,o),et(e.shape,o.shape);let n={a:e,b:o};return A.runKernel(vi,n)}var of=E({greaterEqual_:z6});function U6(r){let e={input:C(r,"input","imag")};return A.runKernel(Vl,e)}var Hi=E({imag_:U6});function G6(r){let e={x:C(r,"x","isFinite")};return A.runKernel(Wl,e)}var r_=E({isFinite_:G6});function H6(r){let e={x:C(r,"x","isInf")};return A.runKernel(zl,e)}var o_=E({isInf_:H6});function K6(r){let e={x:C(r,"x","isNaN")};return A.runKernel(Ul,e)}var n_=E({isNaN_:K6});function q6(r,t=.2){let o={x:C(r,"x","leakyRelu")},n={alpha:t};return A.runKernel(Gl,o,n)}var nf=E({leakyRelu_:q6});function j6(r,t){let e=C(r,"a","less","string_or_numeric"),o=C(t,"b","less","string_or_numeric");[e,o]=Ge(e,o),et(e.shape,o.shape);let n={a:e,b:o};return A.runKernel(bi,n)}var Tp=E({less_:j6});function X6(r,t){let e=C(r,"a","lessEqual","string_or_numeric"),o=C(t,"b","lessEqual","string_or_numeric");[e,o]=Ge(e,o),et(e.shape,o.shape);let n={a:e,b:o};return A.runKernel(Si,n)}var cc=E({lessEqual_:X6});function i_(r,t,e){if(e<=0)throw new Error("The number of values should be positive.");let o={start:r,stop:t,num:e};return A.runKernel(Hl,{},o)}function Y6(r,t=5,e=1,o=1,n=.5){let i=C(r,"x","localResponseNormalization");D(i.rank===4||i.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${i.rank}.`),D(Nn(t),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`);let s=i,a=!1;i.rank===3&&(a=!0,s=Y(i,[1,i.shape[0],i.shape[1],i.shape[2]]));let l={x:s},u={depthRadius:t,bias:e,alpha:o,beta:n},c=A.runKernel(Yl,l,u);return a?Y(c,[c.shape[1],c.shape[2],c.shape[3]]):c}var s_=E({localResponseNormalization_:Y6});function Q6(r){let e={x:C(r,"x","log","float32")};return A.runKernel(wi,e)}var Bn=E({log_:Q6});function Z6(r){let e={x:C(r,"x","log1p")};return A.runKernel(Kl,e)}var sf=E({log1p_:Z6});function a_(r,t){D(Va(r),()=>"The f passed in variableGrads(f) must be a function"),D(t==null||Array.isArray(t)&&t.every(u=>u instanceof An),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");let e=t!=null;if(!e){t=[];for(let u in A.registeredVariables)t.push(A.registeredVariables[u])}let o=e?t.filter(u=>!u.trainable):null,n=t.length;t=t.filter(u=>u.trainable),D(t.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${n} variables is trainable.`);let i=!0,{value:s,grads:a}=A.gradients(r,t,null,i);D(a.some(u=>u!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),D(s.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${s.rank} tensor`);let l={};return t.forEach((u,c)=>{a[c]!=null&&(l[u.name]=a[c])}),o?.forEach(u=>l[u.name]=null),{value:s,grads:l}}function Ar(r){return A.customGrad(r)}function J6(r){let e={x:C(r,"x","neg")};return A.runKernel(bs,e)}var rr=E({neg_:J6});function ez(r){let e={x:C(r,"x","softplus")};return A.runKernel($u,e)}var af=E({softplus_:ez});function tz(r){let t=C(r,"x","logSigmoid");return Ar(o=>({value:rr(af(rr(o))),gradFunc:s=>ae(s,Kr(rr(o)))}))(t)}var l_=E({logSigmoid_:tz});function rz(r,t){let e=C(r,"a","sub"),o=C(t,"b","sub");[e,o]=Ge(e,o);let n={a:e,b:o};return A.runKernel($i,n)}var $e=E({sub_:rz});function oz(r,t=-1){let e=C(r,"logits","logSoftmax");if(t===-1&&(t=e.rank-1),t!==e.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${e.rank} and axis was ${t}`);return Ar((n,i)=>{let a=mn(n,t,!0),l=$e(n,a),u=$e(Ue(l,"float32"),Bn(rt(Pr(l),t,!0)));return i([u]),{value:u,gradFunc:(p,d)=>{let[m]=d,f=!0,g=Pr(m);return $e(p,ae(rt(p,t,f),g))}}})(e)}var u_=E({logSoftmax_:oz});function nz(r,t=null,e=!1){let o=C(r,"x","logSumExp"),n=ci(t,o.shape),i=mn(o,n,!0),s=$e(o,i),a=Pr(s),l=rt(a,n),u=Bn(l),c=he(Y(i,u.shape),u);if(e){let p=Ln(c.shape,n);return Y(c,p)}return c}var lf=E({logSumExp_:nz});function iz(r,t){let e=C(r,"a","logicalAnd","bool"),o=C(t,"b","logicalAnd","bool");et(e.shape,o.shape);let n={a:e,b:o};return A.runKernel(ql,n)}var zs=E({logicalAnd_:iz});function sz(r){let e={x:C(r,"x","logicalNot","bool")};return A.runKernel(jl,e)}var uf=E({logicalNot_:sz});function az(r,t){let e=C(r,"a","logicalOr","bool"),o=C(t,"b","logicalOr","bool");et(e.shape,o.shape);let n={a:e,b:o};return A.runKernel(Xl,n)}var cf=E({logicalOr_:az});function lz(r,t){let e=C(r,"a","logicalXor","bool"),o=C(t,"b","logicalXor","bool");return et(e.shape,o.shape),zs(cf(r,t),uf(zs(r,t)))}var c_=E({logicalXor_:lz});var pf=2147483648;function uz(r,t,e="left"){let o=C(r,"sortedSequence","searchSorted"),n=C(t,"values","searchSorted"),i=o.shape[o.shape.length-1],s=n.shape[n.shape.length-1],a=Y(o,[-1,i]),l=Y(n,[-1,s]);if(a.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(a.shape[0]!==l.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(Ke(l.shape)>=pf)throw new Error(`values tensor size must less than ${pf}`);if(a.shape[1]>=pf)throw new Error(`trailing dim_size must less than ${pf} for int32 output type, was ${a.shape[1]}`);let u={sortedSequence:a,values:l},c={side:e};return A.runKernel(ku,u,c)}var Ep=E({searchSorted_:uz});function p_(r,t){return Ep(r,t,"left")}function cz(r,t,e,o,n){let i=C(r,"x","maxPool"),s=1,a=i,l=!1;i.rank===3&&(l=!0,a=Y(i,[1,i.shape[0],i.shape[1],i.shape[2]])),D(a.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${a.rank}.`),D(pr(e,s),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${e} and dilations '${s}'`),Ot("maxPool",o,n);let u={x:a},c={filterSize:t,strides:e,pad:o,dimRoundingMode:n},p=A.runKernel(Zl,u,c);return l?Y(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var df=E({maxPool_:cz});function pz(r,t=[1,1,1],e,o,n,i="NDHWC"){let s=C(r,"x","maxPool3d"),a=s,l=!1;s.rank===4&&(l=!0,a=Y(s,[1,s.shape[0],s.shape[1],s.shape[2],s.shape[3]])),D(a.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${a.rank}.`),D(i==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${i}`),Ot("maxPool3d",o,n);let u={x:a},c={filterSize:t,strides:e,pad:o,dimRoundingMode:n,dataFormat:i},p=A.runKernel(Jl,u,c);return l?Y(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}var d_=E({maxPool3d_:pz});function dz(r,t,e,o,n=!1){let s={x:C(r,"x","maxPoolWithArgmax")},a={filterSize:t,strides:e,pad:o,includeBatchInIndex:n},l=A.runKernel(eu,s,a);return{result:l[0],indexes:l[1]}}var m_=E({maxPoolWithArgmax_:dz});function mz(r,t){let e=C(r,"a","maximum"),o=C(t,"b","maximum");[e,o]=Ge(e,o),e.dtype==="bool"&&(e=Ue(e,"int32"),o=Ue(o,"int32")),et(e.shape,o.shape);let n={a:e,b:o};return A.runKernel(_i,n)}var mf=E({maximum_:mz});function fz(r,t=null,e=!1){let n={x:C(r,"x","mean")},i={axis:t,keepDims:e};return A.runKernel(tu,n,i)}var Us=E({mean_:fz});function Sr(r,t="float32"){if(bt(r),t==="complex64"){let o=Sr(r,"float32"),n=Sr(r,"float32");return Nr(o,n)}let e=za(Ke(r),t);return A.makeTensor(e,r,t)}function fn(r,t="float32"){if(bt(r),t==="complex64"){let o=fn(r,"float32"),n=Sr(r,"float32");return Nr(o,n)}let e=fp(Ke(r),t);return A.makeTensor(e,r,t)}function f_(r,t,{indexing:e="xy"}={}){if(e!=="xy"&&e!=="ij")throw new TypeError(`${e} is not a valid third argument to meshgrid`);if(r===void 0)return[];let o=C(r,"x","meshgrid",r instanceof at?r.dtype:"float32");if(t===void 0)return[o];let n=C(t,"y","meshgrid",t instanceof at?t.dtype:"float32"),i=Ke(o.shape),s=Ke(n.shape);return e==="xy"?(o=Y(o,[1,-1]),n=Y(n,[-1,1]),[tt(fn([s,1],o.dtype),o),tt(n,fn([1,i],n.dtype))]):(o=Y(o,[-1,1]),n=Y(n,[1,-1]),[tt(o,fn([1,s],o.dtype)),tt(fn([i,1],n.dtype),n)])}function hz(r,t){let e=C(r,"a","minimum"),o=C(t,"b","minimum");[e,o]=Ge(e,o),e.dtype==="bool"&&(e=Ue(e,"int32"),o=Ue(o,"int32")),et(e.shape,o.shape);let n={a:e,b:o};return A.runKernel(Ci,n)}var Vn=E({minimum_:hz});function gz(r,t,e){D(e==="reflect"||e==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${e}.`);let o=C(r,"x","mirrorPad");if(o.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");D(t.length===o.rank,()=>`Padding doesn't match input. Must be ${o.rank}. Got ${t.length}.`);let n=e==="reflect"?1:0;for(let a=0;a<o.rank;a++)D(t[a].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),D(t[a][0]>=0&&t[a][0]<=o.shape[a]-n&&t[a][1]>=0&&t[a][1]<=o.shape[a]-n,()=>`Padding in dimension ${a} cannot be greater than or equal to ${o.shape[a]-n} or less than 0 for input of shape ${o.shape}`);let i={paddings:t,mode:e},s={x:o};return A.runKernel(ou,s,i)}var ff=E({mirrorPad_:gz});function xz(r,t){let e=C(r,"a","mod"),o=C(t,"b","mod");[e,o]=Ge(e,o);let n={a:e,b:o};return A.runKernel(nu,n)}var h_=E({mod_:xz});function yz(r,t=null,e=!1){r=C(r,"x","moments");let o=ci(t,r.shape),n=Us(r,o,e),i=n.shape;e||(i=Ln(n.shape,o));let s=Ut($e(Ue(r,"float32"),Y(n,i))),a=Us(s,o,e);return{mean:n,variance:a}}var g_=E({moments_:yz});function vz(r,t,e,o){let n=C(t,"data","multiRNNCell"),i=As(e,"c","multiRNNCell"),s=As(o,"h","multiRNNCell"),a=n,l=[];for(let p=0;p<r.length;p++){let d=r[p](a,i[p],s[p]);l.push(d[0]),l.push(d[1]),a=d[1]}let u=[],c=[];for(let p=0;p<l.length;p+=2)u.push(l[p]),c.push(l[p+1]);return[u,c]}var x_=E({multiRNNCell_:vz});function bz(r,t,e,o=!1){let n=C(r,"logits","multinomial"),i=n.size,s=n.rank;if(i<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${i}.`);if(s>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${s}`);e=e||Math.random();let l={logits:s===1?Y(n,[1,-1]):n},u={numSamples:t,seed:e,normalized:o},c=A.runKernel(iu,l,u);return s===1?Y(c,[c.size]):c}var y_=E({multinomial_:bz});function Sz(r,t){let e=C(r,"a","notEqual","string_or_numeric"),o=C(t,"b","notEqual","string_or_numeric");[e,o]=Ge(e,o),et(e.shape,o.shape);let n={a:e,b:o};return A.runKernel(Ii,n)}var hf=E({notEqual_:Sz});function wz(r,t,e=1,o=0,n="int32"){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);let s={indices:C(r,"indices","oneHot","int32")},a={dtype:n,depth:t,onValue:e,offValue:o};return A.runKernel(uu,s,a)}var v_=E({oneHot_:wz});function _z(r){let e={x:C(r,"x","onesLike")};return A.runKernel(lu,e)}var b_=E({onesLike_:_z});function Cz(r,t){let e=C(r,"v1","outerProduct"),o=C(t,"v2","outerProduct");D(e.rank===1&&o.rank===1,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${e.rank} and ${o.rank}.`);let n=Y(e,[-1,1]),i=Y(o,[1,-1]);return tt(n,i)}var S_=E({outerProduct_:Cz});function kz(r,t,e=0){let o=C(r,"x","pad");if(o.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");let n={paddings:t,constantValue:e},i={x:o};return A.runKernel(pu,i,n)}var qr=E({pad_:kz});function Iz(r,t,e=0){return D(t.length===2,()=>"Invalid number of paddings. Must be length of 2."),qr(r,[t],e)}var w_=E({pad1d_:Iz});function Tz(r,t,e=0){return D(t.length===2&&t[0].length===2&&t[1].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),qr(r,t,e)}var __=E({pad2d_:Tz});function Ez(r,t,e=0){return D(t.length===3&&t[0].length===2&&t[1].length===2&&t[2].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),qr(r,t,e)}var C_=E({pad3d_:Ez});function Nz(r,t,e=0){return D(t.length===4&&t[0].length===2&&t[1].length===2&&t[2].length===2&&t[3].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),qr(r,t,e)}var k_=E({pad4d_:Nz});function Rz(r,t,e){let o=C(r,"x","spaceToBatchND");D(o.rank>=1+t.length,()=>`input rank ${o.rank} should be > than [blockShape] ${t.length}`),D(e.length===t.length,()=>`paddings.shape[0] ${e.length} must be equal to [blockShape] ${t.length}`),D(o.shape.reduce((s,a,l)=>l>0&&l<=t.length?s&&(a+e[l-1][0]+e[l-1][1])%t[l-1]===0:s,!0),()=>`input spatial dimensions ${o.shape.slice(1)} with paddings ${e.toString()} must be divisible by blockShapes ${t.toString()}`);let n={x:o},i={blockShape:t,paddings:e};return A.runKernel(Au,n,i)}var gf=E({spaceToBatchND_:Rz});function $z(r,t,e,o,n,i,s){n==null&&(n=[1,1]),i==null&&(i=1),o===0&&(o="valid");let a=C(r,"x","maxPool"),l=a,u=!1;a.rank===3&&(u=!0,l=Y(a,[1,a.shape[0],a.shape[1],a.shape[2]])),D(pr(i,n),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${i} and dilations '${n}'`);let c=zy(l.shape,t,i,n,o),p=[c.dilationHeight,c.dilationWidth],d;o==="same"?d=Az([c.filterHeight,c.filterWidth],p):d=[[0,0],[0,0]];let m=p[0]===1&&p[1]===1,[f,g]=Pz([c.inHeight,c.inWidth],p,d),x=m?o:"valid",y=m?l:gf(l,p,f),T=(e==="avg"?()=>Km(y,t,i,x,s):()=>df(y,t,i,x,s))(),R=m?T:qm(T,p,g);return u?Y(R,[R.shape[1],R.shape[2],R.shape[3]]):R}function Pz(r,t,e){let o=e.map(c=>c[0]),n=e.map(c=>c[1]),i=r.concat(o,n),s=t.map((c,p)=>(c-i[p]%c)%c),a=n.map((c,p)=>c+s[p]),l=t.map((c,p)=>[o[p],a[p]]),u=t.map((c,p)=>[0,s[p]]);return[l,u]}function Az(r,t){let o=r.map((s,a)=>s+(s-1)*(t[a]-1)).map(s=>s-1),n=o.map(s=>Math.floor(s/2)),i=o.map((s,a)=>s-n[a]);return o.map((s,a)=>[n[a],i[a]])}var I_=E({pool_:$z});function Dz(r,t){let e=C(r,"x","prelu"),o=C(t,"alpha","prelu"),n={x:e,alpha:o};return A.runKernel(mu,n)}var xf=E({prelu_:Dz});function Fz(r,t=null,e=!1){let o=C(r,"x","prod");o.dtype==="bool"&&(o=Ue(o,"int32"));let n={x:o},i={axis:t,keepDims:e};return A.runKernel(Ss,n,i)}var T_=E({prod_:Fz});function Oz(r,t,e,o){let n=r.map((c,p)=>C(c,`tensors${p}`,"raggedGather","int32")),i=C(t,"paramsDenseValues","raggedGather"),s=C(e,"indices","raggedGather","int32"),a={paramsNestedSplits:n,paramsDenseValues:i,indices:s},l={outputRaggedRank:o},u=A.runKernel(fm,a,l);return{outputNestedSplits:u.slice(0,u.length-1),outputDenseValues:u[u.length-1]}}var E_=E({raggedGather_:Oz});function Lz(r,t,e){let o=C(r,"starts","raggedRange"),n=C(t,"limits","raggedRange",o.dtype),i=C(e,"deltas","raggedRange",o.dtype),s={starts:o,limits:n,deltas:i},a=A.runKernel(hm,s);return{rtNestedSplits:a[0],rtDenseValues:a[1]}}var N_=E({raggedRange_:Lz});function Mz(r,t,e,o,n){let i=C(r,"shape","raggedTensorToTensor","int32"),s=C(t,"values","raggedTensorToTensor"),a=C(e,"defaultValue","raggedTensorToTensor",s.dtype),l=o.map((p,d)=>C(p,`tensors${d}`,"raggedTensorToTensor","int32")),u={shape:i,values:s,defaultValue:a,rowPartitionTensors:l},c={rowPartitionTypes:n};return A.runKernel(gm,u,c)}var R_=E({raggedTensorToTensor_:Mz});function Bz(r,t,e){bt(r);let o=Ke(r),n=null;if(e==null||e==="float32")n=new Float32Array(o);else if(e==="int32")n=new Int32Array(o);else if(e==="bool")n=new Uint8Array(o);else throw new Error(`Unknown data type ${e}`);for(let i=0;i<o;i++)n[i]=t();return A.makeTensor(n,r,e)}var $_=E({rand_:Bz});var Sf=ry(j_());var Hs=class{constructor(t,e,o,n,i){this.mean=t,this.stdDev=e,this.dtype=o,this.nextVal=NaN,this.truncated=n,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);let s=i||Math.random();this.random=Sf.alea(s.toString())}nextValue(){if(!isNaN(this.nextVal)){let n=this.nextVal;return this.nextVal=NaN,n}let t,e,o=!1;for(;!o;){let n,i,s;do n=2*this.random()-1,i=2*this.random()-1,s=n*n+i*i;while(s>=1||s===0);let a=Math.sqrt(-2*Math.log(s)/s);t=this.mean+this.stdDev*n*a,e=this.mean+this.stdDev*i*a,(!this.truncated||this.isValidTruncated(t))&&(o=!0)}return(!this.truncated||this.isValidTruncated(e))&&(this.nextVal=this.convertValue(e)),this.convertValue(t)}convertValue(t){return this.dtype==null||this.dtype==="float32"?t:Math.round(t)}isValidTruncated(t){return t<=this.upper&&t>=this.lower}},vf=class{constructor(t,e,o,n){this.alpha=t,this.beta=1/e,this.dtype=o;let i=n||Math.random();this.randu=Sf.alea(i.toString()),this.randn=new Hs(0,1,o,!1,this.randu()),t<1?this.d=t+2/3:this.d=t-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let t,e,o,n,i,s;for(;;){do n=this.randn.nextValue(),s=1+this.c*n;while(s<=0);if(s*=s*s,t=n*n,e=1-.331*t*t,o=.5*t+this.d*(1-s+Math.log(s)),i=this.randu(),i<e||Math.log(i)<o)break}return s=1/this.beta*this.d*s,this.alpha<1&&(s*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(s)}convertValue(t){return this.dtype==="float32"?t:Math.round(t)}},bf=class{constructor(t=0,e=1,o,n){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=t,this.range=e-t,this.dtype=o,n==null&&(n=Math.random()),typeof n=="number"&&(n=n.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${t} - ${e} <= 1 and dtype is not float`);this.random=Sf.alea(n)}convertValue(t){return this.canReturnFloat()?t:Math.round(t)}nextValue(){return this.convertValue(this.min+this.range*this.random())}};function Kz(r,t,e=1,o="float32",n){if(bt(r),e==null&&(e=1),o==null&&(o="float32"),o!=="float32"&&o!=="int32")throw new Error(`Unsupported data type ${o}`);let i=new vf(t,e,o,n),s=Me(r,o);for(let a=0;a<s.values.length;a++)s.values[a]=i.nextValue();return s.toTensor()}var X_=E({randomGamma_:Kz});function qz(r,t=0,e=1,o,n){if(bt(r),o!=null&&o==="bool")throw new Error(`Unsupported data type ${o}`);let i=new Hs(t,e,o,!1,n),s=Me(r,o);for(let a=0;a<s.values.length;a++)s.values[a]=i.nextValue();return s.toTensor()}var wf=E({randomNormal_:qz});function jz(r,t,e){if(t!=null&&t==="bool")throw new Error(`Unsupported data type ${t}`);return wf(r,0,1,t,e)}var Y_=E({randomStandardNormal_:jz});function Xz(r,t=0,e=1,o="float32",n){bt(r);let i=Me(r,o),s=new bf(t,e,null,n);for(let a=0;a<i.values.length;a++)i.values[a]=s.nextValue();return i.toTensor()}var pc=E({randomUniform_:Xz});function Yz(r,t,e,o){return pc(r,t,e,"int32",o)}var Q_=E({randomUniformInt_:Yz});function Ki(r,t,e=1,o="float32"){if(e===0)throw new Error("Cannot have a step of zero");let n={start:r,stop:t,step:e,dtype:o};return A.runKernel(fu,{},n)}function Qz(r){let e={input:C(r,"input","real")};return A.runKernel(ws,e)}var Wn=E({real_:Qz});function Zz(r){let e={x:C(r,"x","reciprocal")};return A.runKernel(hu,e)}var Z_=E({reciprocal_:Zz});function Jz(r){let e={x:C(r,"x","relu")};return A.runKernel(gu,e)}var qi=E({relu_:Jz});function eU(r){let e={x:C(r,"x","relu6")};return A.runKernel(bu,e)}var _f=E({relu6_:eU});function tU(r,t){let o={x:C(r,"x","reverse")},n={dims:t};return A.runKernel(Su,o,n)}var mo=E({reverse_:tU});function rU(r){let t=C(r,"x","reverse");return D(t.rank===1,()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`),mo(t,0)}var J_=E({reverse1d_:rU});function oU(r,t){let e=C(r,"x","reverse");return D(e.rank===2,()=>`Error in reverse2D: x must be rank 2 but got rank ${e.rank}.`),mo(e,t)}var eC=E({reverse2d_:oU});function nU(r,t){let e=C(r,"x","reverse");return D(e.rank===3,()=>`Error in reverse3D: x must be rank 3 but got rank ${e.rank}.`),mo(e,t)}var tC=E({reverse3d_:nU});function iU(r,t){let e=C(r,"x","reverse");return D(e.rank===4,()=>`Error in reverse4D: x must be rank 4 but got rank ${e.rank}.`),mo(e,t)}var rC=E({reverse4d_:iU});function sU(r){let e={x:C(r,"x","round")};return A.runKernel(wu,e)}var Cf=E({round_:sU});function aU(r){let e={x:C(r,"x","rsqrt","float32")};return A.runKernel(Ti,e)}var oC=E({rsqrt_:aU});function lU(r){let e={x:C(r,"x","selu")};return A.runKernel(Tu,e)}var nC=E({selu_:lU});function uU(r,t,e,o,n,i=[1,1],s="NHWC"){let a=C(r,"x","separableConv2d"),l=C(t,"depthwiseFilter","separableConv2d"),u=C(e,"pointwiseFilter","separableConv2d"),c=a,p=!1;if(a.rank===3&&(p=!0,c=Y(a,[1,a.shape[0],a.shape[1],a.shape[2]])),s==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");D(c.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`),D(l.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`),D(u.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`),D(u.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`),D(u.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`);let d=l.shape[2],m=l.shape[3];D(u.shape[2]===d*m,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*m}, but got ${u.shape[2]}.`);let f=uc(c,l,o,n,s,i),x=zi(f,u,1,"valid",s);return p?Y(x,[x.shape[1],x.shape[2],x.shape[3]]):x}var iC=E({separableConv2d_:uU});function cU(r,t){return j(this,null,function*(){let e=C(r,"x","setdiff1d"),o=C(t,"y","setdiff1d");D(e.dtype===o.dtype,()=>`x and y should have the same dtype, but got x (${e.dtype}) and y (${o.dtype}).`),D(e.rank===1,()=>`x should be 1D tensor, but got x (${e.shape}).`),D(o.rank===1,()=>`y should be 1D tensor, but got y (${o.shape}).`);let n=yield e.data(),i=yield o.data(),s=new Set(i),a=0;for(let c=0;c<n.length;c++)s.has(n[c])||a++;let l=new co([a],e.dtype),u=new co([a],"int32");for(let c=0,p=0;c<n.length;c++)s.has(n[c])||(l.values[p]=n[c],u.values[p]=c,p++);return[l.toTensor(),u.toTensor()]})}var sC=cU;function pU(r){let e={x:C(r,"x","sign")};return A.runKernel(Ru,e)}var aC=E({sign_:pU});function dU(r){let e={x:C(r,"x","sin","float32")};return A.runKernel(Eu,e)}var lC=E({sin_:dU});function mU(r){let e={x:C(r,"x","sinh")};return A.runKernel(Nu,e)}var uC=E({sinh_:mU});function fU(r,t,e){let o=C(r,"x","slice1d");return D(o.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${o.rank} tensor`),Oe(o,[t],[e])}var cC=E({slice1d_:fU});function hU(r,t,e){let o=C(r,"x","slice2d");return D(o.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${o.rank} tensor`),Oe(o,t,e)}var pC=E({slice2d_:hU});function gU(r,t,e){let o=C(r,"x","slice3d");return D(o.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${o.rank} tensor`),Oe(o,t,e)}var dC=E({slice3d_:gU});function xU(r,t,e){let o=C(r,"x","slice4d");return D(o.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${o.rank} tensor`),Oe(o,t,e)}var mC=E({slice4d_:xU});function yU(r,t=-1){let e=C(r,"logits","softmax","float32");if(t===-1&&(t=e.rank-1),t!==e.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${e.rank} and dim was ${t}`);let o={logits:e},n={dim:t};return A.runKernel(Fu,o,n)}var fC=E({softmax_:yU});function vU(r){D(r.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${r.dtype}.`);let t={input:r};return A.runKernel(Al,t)}var dc=E({fft_:vU});function bU(r){D(r.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${r.dtype}.`);let t={input:r};return A.runKernel(Bl,t)}var Ks=E({ifft_:bU});function SU(r){let t=r.shape[r.shape.length-1],e=r.size/t,o;if(t<=2){let n=Y(r,[e,t]);o=Ks(n)}else{let n=[e,2*(t-1)],i=Y(Wn(r),[e,t]),s=Y(Hi(r),[e,t]),a=mo(Oe(i,[0,1],[e,t-2]),1),l=ae(mo(Oe(s,[0,1],[e,t-2]),1),Re(-1)),u=mt([i,a],1),c=mt([s,l],1),p=Y(Nr(u,c),[n[0],n[1]]);o=Ks(p)}if(o=Wn(o),r.rank===3&&r.shape[0]!==0){let n=o,i=r.shape[0];o=Y(o,[i,o.shape[0]/i,o.shape[1]]),n.dispose()}return o}var kf=E({irfft_:SU});function wU(r,t,e=0){let n={x:C(r,"x","split")},i={numOrSizeSplits:t,axis:e};return A.runKernel(Du,n,i)}var zn=E({split_:wU});function _U(r,t){D(r.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${r.dtype}`);let e=r.shape[r.shape.length-1],o=r.size/e,n;if(t!=null&&t<e){let f=r.shape.map(x=>0),g=r.shape.map(x=>x);g[r.shape.length-1]=t,n=Oe(r,f,g),e=t}else if(t!=null&&t>e){let f=r.shape.map(g=>g);f[r.shape.length-1]=t-e,n=mt([r,Sr(f)],r.shape.length-1),e=t}else n=r;let i=zt(n),s=Y(Nr(n,i),[o,e]),a=dc(s),l=Math.floor(e/2)+1,u=Wn(a),c=Hi(a),p=zn(u,[l,e-l],u.shape.length-1),d=zn(c,[l,e-l],c.shape.length-1),m=n.shape.slice();return m[n.shape.length-1]=l,Y(Nr(p[0],d[0]),m)}var mc=E({rfft_:_U});function CU(r,t){let e=C(r,"a","squaredDifference"),o=C(t,"b","squaredDifference");[e,o]=Ge(e,o),et(e.shape,o.shape);let n={a:e,b:o},i={};return A.runKernel(Ri,n,i)}var If=E({squaredDifference_:CU});function kU(r,t){let e=C(r,"x","squeeze","string_or_numeric");return Y(e,ly(e.shape,t).newShape)}var ct=E({squeeze_:kU});function IU(r,t=0){let e=As(r,"tensors","stack","string_or_numeric");D(e.length>=1,()=>"Pass at least one tensor to tf.stack"),e.length>0&&D(t<=e[0].rank,()=>"Axis must be <= rank of the tensor");let o=e,n={axis:t};return A.runKernel(cu,o,n)}var wr=E({stack_:IU});function TU(r,t=0){let o={x:C(r,"x","step")},n={alpha:t};return A.runKernel(Xu,o,n)}var Tf=E({step_:TU});function EU(r,t,e,o,n=0,i=0,s=0,a=0,l=0){let c={x:C(r,"x","stridedSlice","string_or_numeric")},p={begin:t,end:e,strides:o,beginMask:n,endMask:i,ellipsisMask:s,newAxisMask:a,shrinkAxisMask:l};return A.runKernel(Vu,c,p)}var hC=E({stridedSlice_:EU});function NU(r){let e={x:C(r,"x","tan","float32")};return A.runKernel(zu,e)}var gC=E({tan_:NU});function $t(r,t){uo(r);let e=Er(r,t);if(e.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return vr(r,null,e,t)}function _r(r,t,e){if(uo(r),t!=null&&t.length!==2)throw new Error("tensor2d() requires shape to have two numbers");let o=Er(r,e);if(o.length!==2&&o.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(o.length===1&&t==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return vr(r,t,o,e)}function Ef(r,t,e){if(uo(r),t!=null&&t.length!==3)throw new Error("tensor3d() requires shape to have three numbers");let o=Er(r,e);if(o.length!==3&&o.length!==1)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(o.length===1&&t==null)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return vr(r,t,o,e)}function xC(r,t,e){if(uo(r),t!=null&&t.length!==4)throw new Error("tensor4d() requires shape to have four numbers");let o=Er(r,e);if(o.length!==4&&o.length!==1)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(o.length===1&&t==null)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return vr(r,t,o,e)}function yC(r,t,e){if(uo(r),t!=null&&t.length!==5)throw new Error("tensor5d() requires shape to have five numbers");let o=Er(r,e);if(o.length!==5&&o.length!==1)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(o.length===1&&t==null)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return vr(r,t,o,e)}function vC(r,t,e){if(uo(r),t!=null&&t.length!==6)throw new Error("tensor6d() requires shape to have six numbers");let o=Er(r,e);if(o.length!==6&&o.length!==1)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(o.length===1&&t==null)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return t=t||o,vr(r,t,o,e)}function bC(r,t,e){let o=t.rank>1?t.shape[t.rank-1]:1,n=t.rank>1?t.rank-1:1,i=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${e.shape}, indices.shape: ${t.shape}, shape: ${r}, sliceDim: ${o}, and batchDim: ${n}.`;if(e.rank<n)throw new Error(i+` update.rank < ${n}. `);if(r.length<o+(e.rank-n))throw new Error(i+` Output shape length < ${o+(e.rank-n)}`);if(e.rank!==n+r.length-o)throw new Error(i+` update.rank != ${n+r.length-o}`);for(let s=0;s<n;++s)if(e.shape[s]!==t.shape[s])throw new Error(i+` updates.shape[${s}] (${e.shape[s]}) != indices.shape[${s}] (${t.shape[s]}).`);for(let s=0;s<e.rank-n;++s)if(e.shape[s+n]!==r[s+o])throw new Error(i+` updates.shape[${s+n}] (${e.shape[s+n]}) != shape[${s+n}] (${r[s+n]})`)}function Np(r,t,e){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(r.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${r.rank}.`);if(t.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(e.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${e}`);if(e.length===0){if(t.size===0)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(r.size===0)throw new Error(`Updates specified for empty output. updates shape: ${r.shape}`)}bC(e,t,r)}function RU(r,t,e){let o=t.shape.length,n=o>1?t.shape[o-1]:1,i=e.length,s=1;for(let p=n;p<i;++p)s*=e[p];let a=n<1?1:n,l=Ke(t.shape)/a,u=[...nn(e.slice(0,n)),1],c=Ke(e);return{sliceRank:n,numUpdates:l,sliceSize:s,strides:u,outputSize:c}}function $U(r,t,e){let o=C(r,"tensor","tensorScatterupdate"),n=C(t,"indices","tensorScatterupdate","int32"),i=C(e,"updates","tensorScatterupdate");if(Np(i,n,o.shape),o.dtype!==i.dtype)throw new Error(`tensor and updates must have the same dtype, instead they are ${o.dtype} and ${i.dtype}.`);let s={tensor:o,indices:n,updates:i},a={};return A.runKernel(Cu,s,a)}var wC=E({tensorScatterUpdate_:$U});function PU(r,t=1,e=!0){let o=C(r,"x","topk");if(o.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");let n=o.shape[o.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>n)throw new Error(`'k' passed to topk() must be <= the last dimension (${n}) but got ${t}`);let i={x:o},s={k:t,sorted:e},[a,l]=A.runKernel(Gu,i,s);return{values:a,indices:l}}var _C=E({topk_:PU});function AU(r,t=0,e=1,o,n){if(bt(r),o!=null&&o==="bool")throw new Error("Unsupported data type $ { dtype }");let i=new Hs(t,e,o,!0,n),s=Me(r,o);for(let a=0;a<s.values.length;a++)s.values[a]=i.nextValue();return s.toTensor()}var CC=E({truncatedNormal_:AU});function DU(r,t=0){let e=C(r,"x","unique","string_or_numeric");D(e.rank>0,()=>"The input tensor must be at least 1D");let o={x:e},n={axis:t},[i,s]=A.runKernel(Cm,o,n);return{values:i,indices:s}}var kC=E({unique_:DU});function FU(r,t,e){let o=C(r,"x","unsortedSegmentSum"),n=C(t,"segmentIds","unsortedSegmentSum","int32");D(Nn(e),()=>"numSegments must be of dtype int");let i={x:o,segmentIds:n},s={numSegments:e};return A.runKernel(qu,i,s)}var IC=E({unsortedSegmentSum_:FU});function OU(r,t=0){let e=C(r,"x","unstack","string_or_numeric");D(t>=-e.shape.length&&t<e.shape.length,()=>`Axis = ${t} is not in [-${e.shape.length}, ${e.shape.length})`);let o={value:e},n={axis:t};return A.runKernel(Ku,o,n)}var fo=E({unstack_:OU});function TC(r,t){return Ep(r,t,"right")}function EC(r,t=!0,e,o){return A.makeVariable(r,t,e,o)}function Nf(r,t){let e=[];for(let i=0;i<t.length;i++)t[i]&&e.push(i);let o=Me(r,"int32"),n=Me([e.length,r.length],"int32");for(let i=0;i<e.length;i++){let s=o.indexToLoc(e[i]),a=i*r.length;n.values.set(s,a)}return n.toTensor()}function LU(r){return j(this,null,function*(){let t=C(r,"condition","whereAsync","bool"),e=yield t.data(),o=Nf(t.shape,e);return r!==t&&t.dispose(),o})}var Rf=LU;function MU(r,t,e){return j(this,null,function*(){let o=C(r,"tensor","boolMask"),n=C(t,"mask","boolMask","bool"),i=e??0,s=n.rank,a=o.shape;D(s>0,()=>"mask cannot be scalar"),Rt(a.slice(i,i+s),n.shape,"mask's shape must match the first K dimensions of tensor's shape,");let l=1;for(let g=i;g<i+s;g++)l*=a[g];let u=a.slice(0,i).concat([l],a.slice(i+s)),c=Y(o,u),p=Y(n,[-1]),d=yield Rf(p),m=ct(d,[1]),f=rf(c,m,i);return r!==o&&o.dispose(),t!==n&&n.dispose(),m.dispose(),c.dispose(),p.dispose(),d.dispose(),f})}var BU=MU;function VU(r,t,e){let o=C(r,"x","transpose");if(t==null&&(t=o.shape.map((s,a)=>a).reverse()),D(o.rank===t.length,()=>`Error in transpose: rank of input ${o.rank} must match length of perm ${t}.`),t.forEach(s=>{D(s>=0&&s<o.rank,()=>`All entries in 'perm' must be between 0 and ${o.rank-1} but got ${t}`)}),o.rank<=1)return o.clone();let n={x:o},i={perm:t};return o.dtype==="complex64"?Ne(()=>{let s=Wn(o),a=Hi(o);return s=A.runKernel(Ai,{x:s},i),a=A.runKernel(Ai,{x:a},i),e&&(a=rr(a)),Nr(s,a)}):A.runKernel(Ai,n,i)}var $f=E({transpose_:VU});function WU(r,t,e,o,n=!0){let i=C(r,"v","movingAverage"),s=C(t,"x","movingAverage"),a=C(e,"decay","movingAverage");A2(i,s),D(zr(i.shape,s.shape),()=>"Shape mismatch in v and x");let l=Re(1),u=$e(l,a),c=ae($e(s,i),u);if(n){D(o!=null,()=>"When using zeroDebias: true, step is required.");let p=C(o,"step","movingAverage");c=Fe(c,$e(l,Mn(a,p)))}return he(i,c)}var zU=E({movingAverage_:WU});function UU(r,t,e){bt(e);let o=C(r,"indices","scatterND","int32"),n=C(t,"updates","scatterND");Np(n,o,e);let i={indices:o,updates:n},s={shape:e};return A.runKernel(_u,i,s)}var GU=E({scatterND_:UU});function NC(r,t,e,o){if(r.dtype!=="int32")throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${r.dtype}.`);if(r.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${r.shape}.`);let n=r.rank>0?r.shape[0]:1,i=r.rank>1?r.shape[1]:1;if(e.length!==i)throw new Error(`outputShape has incorrect number of elements:, ${e.length}, should be: ${i}.`);let s=t.size;if(!(t.rank===0||t.rank===1&&s===n))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${n}]`);if(t.dtype!==o.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}function KU(r,t,e,o=0){bt(e);let n=C(r,"sparseIndices","sparseToDense","int32"),i=C(t,"sparseValues","sparseToDense","string_or_numeric"),s=C(o,"defaultValue","sparseToDense",i.dtype);NC(n,i,e,s);let a={sparseIndices:n,sparseValues:i,defaultValue:s},l={outputShape:e};return A.runKernel(Mu,a,l)}var qU=E({sparseToDense_:KU});function jU(r,t){let e=C(t,"indices","gatherND","int32"),n={params:C(r,"x","gatherND","string_or_numeric"),indices:e};return A.runKernel(Ml,n)}var XU=E({gatherND_:jU});function RC(r,t){if(t==null)return r.shape.slice();if(zr(r.shape,t))return t;if(r.shape.length===t.length){let e=[];for(let o=0;o<r.shape.length;o++)t[o]==null&&r.shape[o]!=null?e.push(r.shape[o]):e.push(t[o]);return e}return t}function YU(r,t,e,o){let n=C(r,"x","dropout");if(D(n.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${n.dtype} tensor instead.`),D(t>=0&&t<1,()=>`rate must be a float in the range [0, 1), but got ${t}.`),t===0)return r instanceof at?n.clone():n;let i=RC(n,e),s=1-t,a=Fe(tf(he(pc(i,0,1,"float32",o),s)),s);return ae(n,a)}var QU=E({dropout_:YU});function Qy(r){return Math.floor(Math.pow(2,Math.ceil(Math.log(r)/Math.log(2))))}function Rp(r,t,e){let o=1-r%2,n=new Float32Array(r);for(let i=0;i<r;++i){let s=2*Math.PI*i/(r+o-1);n[i]=t-e*Math.cos(s)}return $t(n,"float32")}function ZU(r,t,e=1){return j(this,null,function*(){let o=C(r,"predictions","inTopK"),n=C(t,"targets","inTopK");D(o.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${o.rank}`),D(o.rank-1===n.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${o.rank} and targets rank ${n.rank}`),Rt(o.shape.slice(0,o.shape.length-1),n.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");let i=o.shape[o.shape.length-1];D(e>0&&e<=i,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${i}), but got ${e}`);let s=yield o.data(),a=yield n.data(),[l,u]=[s.length/i,i],c=uy("bool",l);for(let p=0;p<l;p++){let d=p*u,m=s.subarray(d,d+u),f=[];for(let g=0;g<m.length;g++)f.push({value:m[g],index:g});f.sort((g,x)=>x.value-g.value),c[p]=0;for(let g=0;g<e;g++)if(f[g].index===a[p]){c[p]=1;break}}return r!==o&&o.dispose(),t!==n&&n.dispose(),br(c,n.shape,"bool")})}var JU=ZU;var Zy={};dt(Zy,{conv2d:()=>PC,depthwiseConv2d:()=>FC,matMul:()=>OC});function eG(r,t,e,o,n,i="NHWC",s){let a=r;r.rank===3&&(a=Y(r,[1,r.shape[0],r.shape[1],r.shape[2]]));let l=t;l.rank===3&&(l=Y(t,[1,t.shape[0],t.shape[1],t.shape[2]])),D(a.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${a.shape}.`),D(l.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`),D(e.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${e}.`);let u=i==="NHWC"?a.shape[3]:a.shape[1],c=i==="NHWC"?l.shape[3]:l.shape[1];D(u===e[2],()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${e[2]}.`),D(c===e[3],()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${e[3]}).`),Ot("conv2dDerFilter",n,s);let p={x:a,dy:l},d={strides:o,pad:n,dataFormat:i,dimRoundingMode:s,filterShape:e};return A.runKernel(dl,p,d)}var $C=E({conv2DBackpropFilter_:eG});function qs(r,t,e){if(e==null||e==="linear")return r;if(e==="relu")return ae(r,Tf(t));throw new Error(`Cannot compute gradient for fused activation ${e}.`)}function js(r,t){let e=t,o=Qm(r.shape,t.shape);return o.length>0&&(e=rt(e,o)),Y(e,r.shape)}function Xs(r,t,e,o){if(t==="linear")return r;if(t==="relu")return qi(r);if(t==="elu")return Jm(r);if(t==="relu6")return _f(r);if(t==="prelu")return xf(r,e);if(t==="leakyrelu")return nf(r,o);if(t==="sigmoid")return Kr(r);throw new Error(`Unknown fused activation ${t}.`)}var Ys=(r,t)=>!(r>0)||t==="linear";function tG({x:r,filter:t,strides:e,pad:o,dataFormat:n="NHWC",dilations:i=[1,1],dimRoundingMode:s,bias:a,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(l=l||"linear",Ys(A.state.gradientDepth,l)===!1){D(n==="NHWC",()=>`Error in fused conv2d: got dataFormat of ${n} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let V=zi(r,t,e,o,n,i,s);return a!=null&&(V=he(V,a)),Xs(V,l,u,c)}let p=C(r,"x","conv2d","float32"),d=C(t,"filter","conv2d","float32"),m=p,f=!1;p.rank===3&&(f=!0,m=Y(p,[1,p.shape[0],p.shape[1],p.shape[2]])),D(m.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${m.rank}.`),D(d.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${d.rank}.`),Ot("fused conv2d",o,s);let g=n==="NHWC"?m.shape[3]:m.shape[1];D(d.shape[2]===g,()=>`Error in conv2d: depth of input (${g}) must match input depth for filter ${d.shape[2]}.`),D(pr(e,i),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${e} and dilations '${i}'`);let x=Bs(m.shape,d.shape,e,i,o,s),y;a!=null&&(y=C(a,"bias","fused conv2d"),[y]=Ge(y,p),n==="NHWC"?et(x.outShape,y.shape):(D(y.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${y.shape.length}.`),D(y.shape.length===0||y.shape[0]===x.outChannels||y.shape[0]===1,()=>`Error in fused conv2d: bias shape (${y.shape}) is not compatible with the number of output channels (${x.outChannels})`)));let b;if(u!=null){let V=u.shape;if(D(V.length<=1||V.length===3,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${V.length}.`),V.length===1)D(V[0]===1||V[0]===x.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${V}) is not compatible with the number of output channels (${x.outChannels}).`);else if(V.length===3)try{et(V,x.outShape)}catch{let H=`Error in fused conv2d: PReLU activation weights (${V}) is not compatible with the output shape of the conv2d (${x.outShape}).`;throw Error(H)}b=C(u,"prelu weights","fused conv2d")}let T=(V,z)=>{D(n==="NHWC",()=>`Error in gradient of fused conv2D: got dataFormat of ${n} but only NHWC is currently supported.`);let[H,K,X,te]=z,ce=qs(V,X,l);D(Ms(i),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${i}'`);let pe=Ym(K.shape,ce,H,e,o),ve=$C(K,ce,H.shape,e,o),Se=[pe,ve];if(te!=null){let Ee=js(te,ce);Se.push(Ee)}return Se},R={x:m,filter:d,bias:y,preluActivationWeights:b},M={strides:e,pad:o,dataFormat:n,dilations:i,dimRoundingMode:s,activation:l,leakyreluAlpha:c};return a==null?Ar((z,H,K)=>{let X=A.runKernel(Is,R,M);return K([H,z,X]),f&&(X=Y(X,[X.shape[1],X.shape[2],X.shape[3]])),{value:X,gradFunc:T}})(m,d):Ar((z,H,K,X)=>{let te=A.runKernel(Is,R,M);return X([H,z,te,K]),f&&(te=Y(te,[te.shape[1],te.shape[2],te.shape[3]])),{value:te,gradFunc:T}})(m,d,y)}var PC=E({fusedConv2d_:tG});function rG(r,t,e,o,n,i=[1,1],s){let a=r;r.rank===3&&(a=Y(r,[1,r.shape[0],r.shape[1],r.shape[2]]));let l=t;l.rank===3&&(l=Y(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let u={x:a,dy:l},c={strides:o,pad:n,dimRoundingMode:s,dilations:i,filterShape:e};return A.runKernel(Cl,u,c)}var AC=E({depthwiseConv2dNativeBackpropFilter_:rG});function oG(r,t,e,o,n,i=[1,1],s){let a=t,l=!1;t.rank===3&&(l=!0,a=Y(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let u={dy:a,filter:e},c={strides:o,pad:n,dimRoundingMode:s,dilations:i,inputShape:r},p=A.runKernel(kl,u,c);return l?Y(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var DC=E({depthwiseConv2dNativeBackpropInput_:oG});function nG({x:r,filter:t,strides:e,pad:o,dataFormat:n="NHWC",dilations:i=[1,1],dimRoundingMode:s,bias:a,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(Ys(A.state.gradientDepth,l)===!1){let M=uc(r,t,e,o,n,i,s);return a!=null&&(M=he(M,a)),Xs(M,l,u,c)}let p=C(r,"x","depthwiseConv2d","float32"),d=C(t,"filter","depthwiseConv2d","float32"),m=p,f=!1;p.rank===3&&(f=!0,m=Y(p,[1,p.shape[0],p.shape[1],p.shape[2]])),D(m.rank===4,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${m.rank}.`),D(d.rank===4,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${d.rank}.`),D(m.shape[3]===d.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${m.shape[3]}) must match the inChannels dimension in filter ${d.shape[2]}.`),i==null&&(i=[1,1]),D(pr(e,i),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${e} and dilations '${i}'`),Ot("fused depthwiseConv2d",o,s);let g=Bs(m.shape,d.shape,e,i,o,s,!0),x;a!=null&&(x=C(a,"bias","fused conv2d"),[x]=Ge(x,p),et(g.outShape,x.shape));let y;u!=null&&(y=C(u,"prelu weights","fused depthwiseConv2d"));let b=(M,V)=>{D(Ms(i),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${i}'`);let[z,H,K,X]=V,te=qs(M,K,l),ce=DC(H.shape,te,z,e,o,i,s),pe=AC(H,te,z.shape,e,o,i,s);if(X!=null){let ve=js(x,te);return[ce,pe,ve]}return[ce,pe]},T={x:m,filter:d,bias:x,preluActivationWeights:y},R={strides:e,pad:o,dataFormat:n,dilations:i,dimRoundingMode:s,activation:l,leakyreluAlpha:c};return a==null?Ar((V,z,H)=>{let K=A.runKernel(Ts,T,R);return H([z,V,K]),f&&(K=Y(K,[K.shape[1],K.shape[2],K.shape[3]])),{value:K,gradFunc:b}})(m,d):Ar((V,z,H,K)=>{let X=A.runKernel(Ts,T,R);return K([z,V,X,H]),f&&(X=Y(X,[X.shape[1],X.shape[2],X.shape[3]])),{value:X,gradFunc:b}})(m,d,x)}var FC=E({fusedDepthwiseConv2d_:nG});function iG({a:r,b:t,transposeA:e=!1,transposeB:o=!1,bias:n,activation:i="linear",preluActivationWeights:s,leakyreluAlpha:a=.2}){if(Ys(A.state.gradientDepth,i)===!1){let te=tt(r,t,e,o);return n!=null&&(te=he(te,n)),Xs(te,i,s,a)}let l=C(r,"a","fused matMul"),u=C(t,"b","fused matMul");[l,u]=Ge(l,u);let c=e?l.shape[l.rank-2]:l.shape[l.rank-1],p=o?u.shape[u.rank-1]:u.shape[u.rank-2],d=e?l.shape[l.rank-1]:l.shape[l.rank-2],m=o?u.shape[u.rank-2]:u.shape[u.rank-1],f=l.shape.slice(0,-2),g=u.shape.slice(0,-2),x=Ke(f),y=Ke(g);D(c===p,()=>`Error in fused matMul: inner shapes (${c}) and (${p}) of Tensors with shapes ${l.shape} and ${u.shape} and transposeA=${e} and transposeB=${o} must match.`);let T=et(l.shape.slice(0,-2),u.shape.slice(0,-2)).concat([d,m]),R=e?Y(l,[x,c,d]):Y(l,[x,d,c]),M=o?Y(u,[y,m,p]):Y(u,[y,p,m]),V;n!=null&&(V=C(n,"bias","fused matMul"),[V]=Ge(V,l),et(T,V.shape));let z;s!=null&&(z=C(s,"prelu weights","fused matMul"));let H=(te,ce)=>{let[pe,ve,Se,Ee]=ce,je=qs(Y(te,Se.shape),Se,i),Xe,st;if(!e&&!o?(Xe=tt(je,ve,!1,!0),st=tt(pe,je,!0,!1)):!e&&o?(Xe=tt(je,ve,!1,!1),st=tt(je,pe,!0,!1)):e&&!o?(Xe=tt(ve,je,!1,!0),st=tt(pe,je,!1,!1)):(Xe=tt(ve,je,!0,!0),st=tt(je,pe,!0,!0)),n!=null){let jt=js(Ee,je);return[Xe,st,jt]}else return[Xe,st]},K={a:R,b:M,bias:V,preluActivationWeights:z},X={transposeA:e,transposeB:o,activation:i,leakyreluAlpha:a};return n==null?Ar((ce,pe,ve)=>{let Se=A.runKernel(ks,K,X);return ve([ce,pe,Se]),{value:Y(Se,T),gradFunc:H}})(R,M):Ar((ce,pe,ve,Se)=>{let Ee=A.runKernel(ks,K,X);return Se([ce,pe,Ee,ve]),{value:Y(Ee,T),gradFunc:H}})(R,M,V)}var OC=E({fusedMatMul_:iG});function sG(r){return Rp(r,.54,.46)}var LC=E({hammingWindow_:sG});function aG(r){return Rp(r,.5,.5)}var Pf=E({hannWindow_:aG});function lG(r,t,e,o=!1,n=0){let i=0,s=[];for(;i+t<=r.size;)s.push(Oe(r,i,t)),i+=e;if(o)for(;i<r.size;){let a=i+t-r.size,l=mt([Oe(r,i,t-a),pn([a],n)]);s.push(l),i+=e}return s.length===0?_r([],[0,t]):Y(mt(s),[s.length,t])}var Af=E({frame_:lG});function uG(r,t,e,o,n=Pf){o==null&&(o=Qy(t));let i=Af(r,t,e),s=ae(i,n(t));return mc(s,o)}var MC=E({stft_:uG});function cG(r,t,e,o,n="bilinear",i=0){let s=C(r,"image","cropAndResize"),a=C(t,"boxes","cropAndResize","float32"),l=C(e,"boxInd","cropAndResize","int32"),u=a.shape[0];D(s.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${s.rank}.`),D(a.rank===2&&a.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${a.shape}.`),D(l.rank===1&&l.shape[0]===u,()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${a.shape}.`),D(o.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${o.length}.`),D(o[0]>=1&&o[1]>=1,()=>`cropSize must be atleast [1,1], but was ${o}`),D(n==="bilinear"||n==="nearest",()=>`method must be bilinear or nearest, but was ${n}`);let c={image:s,boxes:a,boxInd:l},p={method:n,extrapolationValue:i,cropSize:o};return A.runKernel(bl,c,p)}var BC=E({cropAndResize_:cG});function pG(r){let t=C(r,"image","flipLeftRight","float32");D(t.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`);let e={image:t};return A.runKernel(Fl,e,{})}var VC=E({flipLeftRight_:pG});function dG(r){let t=C(r,"image","grayscaleToRGB"),e=t.rank-1,o=t.shape[e];D(t.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`),D(o===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${o}.`);let n=new Array(t.rank);return n.fill(1,0,e),n[e]=3,Gi(t,n)}var WC=E({grayscaleToRGB_:dG});function mG(r){let t=C(r,"image","RGBToGrayscale"),e=t.rank-1,o=t.shape[e];D(t.rank>=2,()=>`Error in RGBToGrayscale: images must be at least rank 2, but got rank ${t.rank}.`),D(o===3,()=>`Error in RGBToGrayscale: last dimension of an RGB image should be size 3, but got size ${o}.`);let n=t.dtype,i=Ue(t,"float32"),s=$t([.2989,.587,.114]),a;switch(t.rank){case 2:a=Ui("ij,j->i",i,s);break;case 3:a=Ui("ijk,k->ij",i,s);break;case 4:a=Ui("ijkl,l->ijk",i,s);break;case 5:a=Ui("ijklm,m->ijkl",i,s);break;case 6:a=Ui("ijklmn,n->ijklm",i,s);break;default:throw new Error("Not a valid tensor rank.")}return a=dr(a,-1),Ue(a,n)}var zC=E({rgbToGrayscale_:mG});function fG(r,t,e=0,o=.5){let n=C(r,"image","rotateWithOffset","float32");D(n.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${n.rank}.`);let i={image:n},s={radians:t,fillValue:e,center:o};return A.runKernel(Yu,i,s)}var UC=E({rotateWithOffset_:fG});function To(r,t,e,o,n,i){o==null&&(o=.5),n==null&&(n=Number.NEGATIVE_INFINITY),i==null&&(i=0);let s=r.shape[0];return e=Math.min(e,s),D(0<=o&&o<=1,()=>`iouThreshold must be in [0, 1], but was '${o}'`),D(r.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${r.rank}'`),D(r.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${r.shape[1]}`),D(t.rank===1,()=>"scores must be a 1D tensor"),D(t.shape[0]===s,()=>`scores has incompatible shape with boxes. Expected ${s}, but was ${t.shape[0]}`),D(0<=i&&i<=1,()=>`softNmsSigma must be in [0, 1], but was '${i}'`),{maxOutputSize:e,iouThreshold:o,scoreThreshold:n,softNmsSigma:i}}function hG(r,t,e,o=.5,n=Number.NEGATIVE_INFINITY){let i=C(r,"boxes","nonMaxSuppression","float32"),s=C(t,"scores","nonMaxSuppression","float32"),a=To(i,s,e,o,n);e=a.maxOutputSize,o=a.iouThreshold,n=a.scoreThreshold;let l={maxOutputSize:e,iouThreshold:o,scoreThreshold:n};return A.runKernel(su,{boxes:i,scores:s},l)}var GC=E({nonMaxSuppression_:hG});function HC(r,t,e){let o=gG(r,t,e),n=o<0?-(o+1):o;r.splice(n,0,t)}function gG(r,t,e){return yG(r,t,e||xG)}function xG(r,t){return r>t?1:r<t?-1:0}function yG(r,t,e){let o=0,n=r.length,i=0,s=!1;for(;o<n;){i=o+(n-o>>>1);let a=e(t,r[i]);a>0?o=i+1:(n=i,s=!a)}return s?o:-o-1}function Df(r,t,e,o,n){return Jy(r,t,e,o,n,0)}function Ff(r,t,e,o,n,i){return Jy(r,t,e,o,n,0,!1,i,!0)}function Of(r,t,e,o,n,i){return Jy(r,t,e,o,n,i,!0)}function Jy(r,t,e,o,n,i,s=!1,a=!1,l=!1){let u=[];for(let x=0;x<t.length;x++)t[x]>n&&u.push({score:t[x],boxIndex:x,suppressBeginIndex:0});u.sort(KC);let c=i>0?-.5/i:0,p=[],d=[];for(;p.length<e&&u.length>0;){let x=u.pop(),{score:y,boxIndex:b,suppressBeginIndex:T}=x;if(y<n)break;let R=!1;for(let M=p.length-1;M>=T;--M){let V=vG(r,b,p[M]);if(V>=o){R=!0;break}if(x.score=x.score*bG(o,c,V),x.score<=n)break}x.suppressBeginIndex=p.length,R||(x.score===y?(p.push(b),d.push(x.score)):x.score>n&&HC(u,x,KC))}let m=p.length,f=e-m;a&&f>0&&(p.push(...new Array(f).fill(0)),d.push(...new Array(f).fill(0)));let g={selectedIndices:p};return s&&(g.selectedScores=d),l&&(g.validOutputs=m),g}function vG(r,t,e){let o=r.subarray(t*4,t*4+4),n=r.subarray(e*4,e*4+4),i=Math.min(o[0],o[2]),s=Math.min(o[1],o[3]),a=Math.max(o[0],o[2]),l=Math.max(o[1],o[3]),u=Math.min(n[0],n[2]),c=Math.min(n[1],n[3]),p=Math.max(n[0],n[2]),d=Math.max(n[1],n[3]),m=(a-i)*(l-s),f=(p-u)*(d-c);if(m<=0||f<=0)return 0;let g=Math.max(i,u),x=Math.max(s,c),y=Math.min(a,p),b=Math.min(l,d),T=Math.max(y-g,0)*Math.max(b-x,0);return T/(m+f-T)}function bG(r,t,e){let o=Math.exp(t*e*e);return e<=r?o:0}function KC(r,t){return r.score-t.score||r.score===t.score&&t.boxIndex-r.boxIndex}function SG(i,s,a){return j(this,arguments,function*(r,t,e,o=.5,n=Number.NEGATIVE_INFINITY){let l=C(r,"boxes","nonMaxSuppressionAsync"),u=C(t,"scores","nonMaxSuppressionAsync"),c=To(l,u,e,o,n);e=c.maxOutputSize,o=c.iouThreshold,n=c.scoreThreshold;let p=yield Promise.all([l.data(),u.data()]),d=p[0],m=p[1],{selectedIndices:f}=Df(d,m,e,o,n);return l!==r&&l.dispose(),u!==t&&u.dispose(),$t(f,"int32")})}var qC=SG;function wG(r,t,e,o=.5,n=Number.NEGATIVE_INFINITY,i=0){let s=C(r,"boxes","nonMaxSuppression"),a=C(t,"scores","nonMaxSuppression"),l=To(s,a,e,o,n,i);e=l.maxOutputSize,o=l.iouThreshold,n=l.scoreThreshold,i=l.softNmsSigma;let u={boxes:s,scores:a},c={maxOutputSize:e,iouThreshold:o,scoreThreshold:n,softNmsSigma:i},p=A.runKernel(au,u,c);return{selectedIndices:p[0],selectedScores:p[1]}}var jC=E({nonMaxSuppressionWithScore_:wG});function _G(s,a,l){return j(this,arguments,function*(r,t,e,o=.5,n=Number.NEGATIVE_INFINITY,i=0){let u=C(r,"boxes","nonMaxSuppressionAsync"),c=C(t,"scores","nonMaxSuppressionAsync"),p=To(u,c,e,o,n,i);e=p.maxOutputSize,o=p.iouThreshold,n=p.scoreThreshold,i=p.softNmsSigma;let d=yield Promise.all([u.data(),c.data()]),m=d[0],f=d[1],{selectedIndices:g,selectedScores:x}=Of(m,f,e,o,n,i);return u!==r&&u.dispose(),c!==t&&c.dispose(),{selectedIndices:$t(g,"int32"),selectedScores:$t(x)}})}var XC=_G;function CG(r,t,e,o=.5,n=Number.NEGATIVE_INFINITY,i=!1){let s=C(r,"boxes","nonMaxSuppression"),a=C(t,"scores","nonMaxSuppression"),l=To(s,a,e,o,n,null),u=l.maxOutputSize,c=l.iouThreshold,p=l.scoreThreshold,d={boxes:s,scores:a},m={maxOutputSize:u,iouThreshold:c,scoreThreshold:p,padToMaxOutputSize:i},f=A.runKernel(mm,d,m);return{selectedIndices:f[0],validOutputs:f[1]}}var YC=E({nonMaxSuppressionPadded_:CG});function kG(s,a,l){return j(this,arguments,function*(r,t,e,o=.5,n=Number.NEGATIVE_INFINITY,i=!1){let u=C(r,"boxes","nonMaxSuppressionAsync"),c=C(t,"scores","nonMaxSuppressionAsync"),p=To(u,c,e,o,n,null),d=p.maxOutputSize,m=p.iouThreshold,f=p.scoreThreshold,[g,x]=yield Promise.all([u.data(),c.data()]),{selectedIndices:y,validOutputs:b}=Ff(g,x,d,m,f,i);return u!==r&&u.dispose(),c!==t&&c.dispose(),{selectedIndices:$t(y,"int32"),validOutputs:Re(b,"int32")}})}var QC=kG;function IG(r,t,e=!1,o=!1){let n=C(r,"images","resizeBilinear");D(n.rank===3||n.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${n.rank}.`),D(t.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`),D(o===!1||e===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let i=n,s=!1;n.rank===3&&(s=!0,i=Y(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let[]=t,a={images:i},l={alignCorners:e,halfPixelCenters:o,size:t},u=A.runKernel(vu,a,l);return s?Y(u,[u.shape[1],u.shape[2],u.shape[3]]):u}var ZC=E({resizeBilinear_:IG});function TG(r,t,e=!1,o=!1){let n=C(r,"images","resizeNearestNeighbor");D(n.rank===3||n.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${n.rank}.`),D(t.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`),D(n.dtype==="float32"||n.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),D(o===!1||e===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let i=n,s=!1;n.rank===3&&(s=!0,i=Y(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let[]=t,a={images:i},l={alignCorners:e,halfPixelCenters:o,size:t},u=A.runKernel(yu,a,l);return s?Y(u,[u.shape[1],u.shape[2],u.shape[3]]):u}var JC=E({resizeNearestNeighbor_:TG});function EG(r,t="binary",e=!1,o=.5){let n=C(r,"image","threshold"),i=.2989,s=.587,a=.114,l=n.shape[0]*n.shape[1],u=ae($t([o]),255),c,p,d,m;if(D(n.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${n.rank}.`),D(n.shape[2]===3||n.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${n.shape[2]}.`),D(n.dtype==="int32"||n.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${n.dtype}.`),D(t==="otsu"||t==="binary",()=>`Method must be binary or otsu, but was ${t}`),n.shape[2]===3){[c,p,d]=zn(n,[1,1,1],-1);let x=ae(c,i),y=ae(p,s),b=ae(d,a);m=he(he(x,y),b)}else m=r;if(t==="otsu"){let x=jm(Ue(Cf(m),"int32"),br([]),256);u=NG(x,l)}let f=e?cc(m,u):Ws(m,u);return Ue(ae(f,255),"int32")}function NG(r,t){let e=$t([-1]),o=$t([0]),n=$t([0]),i,s,a,l,u,c;for(let p=0;p<r.size-1;p++){i=Oe(r,0,p+1),s=Oe(r,p+1),u=Fe(rt(i),t),c=Fe(rt(s),t);let d=rt(ae(i,Ki(0,i.size)));a=Fe(d,rt(i));let m=pn(s.shape,i.size),f=he(Ki(0,s.size),m),g=ae(s,f);l=Fe(rt(g),rt(s));let x=$e(a,l),y=$e(a,l),b=ae(u,c);n=ae(ae(b,x),y);let T=Ws(n,o);o=po(T,n,o),e=po(T,$t([p]),e)}return e}var ek=E({threshold_:EG});function RG(r,t,e="nearest",o="constant",n=0,i){let s=C(r,"image","transform","float32"),a=C(t,"transforms","transform","float32");D(s.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${s.rank}.`),D(a.rank===2&&(a.shape[0]===s.shape[0]||a.shape[0]===1)&&a.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),D(i==null||i.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${i}.`);let l={image:s,transforms:a},u={interpolation:e,fillMode:o,fillValue:n,outputShape:i};return A.runKernel(Hu,l,u)}var tk=E({transform_:RG});function $G(r,t,e){let o=C(r,"a","bandPart");D(o.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${o.rank}.`);let n=o.shape,[i,s]=o.shape.slice(-2),a,l;typeof t=="number"?(D(t%1===0,()=>`bandPart(): numLower must be an integer, got ${t}.`),D(t<=i,()=>`bandPart(): numLower (${t}) must not be greater than the number of rows (${i}).`),a=C(t<0?i:t,"numLower","bandPart")):(D(t.dtype==="int32",()=>"bandPart(): numLower's dtype must be an int32."),a=po(Tp(t,0),i,Vn(t,i))),typeof e=="number"?(D(e%1===0,()=>`bandPart(): numUpper must be an integer, got ${e}.`),D(e<=s,()=>`bandPart(): numUpper (${e}) must not be greater than the number of columns (${s}).`),l=C(e<0?s:e,"numUpper","bandPart")):(D(e.dtype==="int32",()=>"bandPart(): numUpper's dtype must be an int32."),l=po(Tp(e,0),s,Vn(e,s)));let u=Y(Ki(0,i,1,"int32"),[-1,1]),c=Ki(0,s,1,"int32"),p=$e(u,c),d=zs(cc(p,a),of(p,rr(l))),m=Sr([i,s],o.dtype);return Y(wr(fo(Y(o,[-1,i,s])).map(f=>po(d,f,m))),n)}var rk=E({bandPart_:$G});function PG(r){let t;if(Array.isArray(r)){t=!1,D(r!=null&&r.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");let n=r[0].shape[0];for(let i=1;i<r.length;++i)D(r[i].shape[0]===n,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${r[i].shape[0]} vs. ${n})`)}else t=!0,r=zn(r,r.shape[0],0).map(n=>ct(n,[0]));D(r.length<=r[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${r.length}) exceeds number of dimensions (${r[0].shape[0]}).`);let e=[],o=r;for(let n=0;n<r.length;++n)e.push(A.tidy(()=>{let i=o[n];if(n>0)for(let s=0;s<n;++s){let a=ae(rt(ae(e[s],i)),e[s]);i=$e(i,a)}return Fe(i,Vs(i,"euclidean"))}));return t?wr(e,0):e}var ok=E({gramSchmidt_:PG});function AG(r,t=!1){if(D(r.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${r.rank}`),r.rank===2)return nk(r,t);{let e=r.shape.slice(0,r.shape.length-2).reduce((l,u)=>l*u),o=fo(Y(r,[e,r.shape[r.shape.length-2],r.shape[r.shape.length-1]]),0),n=[],i=[];o.forEach(l=>{let[u,c]=nk(l,t);n.push(u),i.push(c)});let s=Y(wr(n,0),r.shape),a=Y(wr(i,0),r.shape);return[s,a]}}function nk(r,t=!1){return A.tidy(()=>{D(r.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${r.shape.length}D Tensor.`);let e=r.shape[0],o=r.shape[1],n=ef(e),i=Hr(r),s=_r([[1]],[1,1]),a=Hr(s),l=e>=o?o:e;for(let u=0;u<l;++u){let c=i,p=a,d=n;[a,i,n]=A.tidy(()=>{let m=Oe(i,[u,u],[e-u,1]),f=Vs(m),g=Oe(i,[u,u],[1,1]),x=po(Ws(g,0),_r([[-1]]),_r([[1]])),y=$e(g,ae(x,f)),b=Fe(m,y);b.shape[0]===1?a=Hr(s):a=mt([s,Oe(b,[1,0],[b.shape[0]-1,b.shape[1]])],0);let T=rr(Fe(tt(x,y),f)),R=Oe(i,[u,0],[e-u,o]),M=ae(T,a),V=$f(a);if(u===0)i=$e(R,tt(M,tt(V,R)));else{let K=$e(R,tt(M,tt(V,R)));i=mt([Oe(i,[0,0],[u,o]),K],0)}let z=$f(M),H=Oe(n,[0,u],[e,n.shape[1]-u]);if(u===0)n=$e(H,tt(tt(H,a),z));else{let K=$e(H,tt(tt(H,a),z));n=mt([Oe(n,[0,0],[e,u]),K],1)}return[a,i,n]}),Ye([c,p,d])}return!t&&e>o&&(n=Oe(n,[0,0],[e,o]),i=Oe(i,[0,0],[o,o])),[n,i]})}var ik=E({qr_:AG});var Lt=function(r){return r[r.NONE=0]="NONE",r[r.MEAN=1]="MEAN",r[r.SUM=2]="SUM",r[r.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS",r}(Lt||{});function DG(r,t,e=Lt.SUM_BY_NONZERO_WEIGHTS){let o=C(r,"losses","computeWeightedLoss"),n=null;t!=null&&(n=C(t,"weights","computeWeightedLoss"));let i=n==null?o:ae(o,n);if(e===Lt.NONE)return i;if(e===Lt.SUM)return rt(i);if(e===Lt.MEAN){if(n==null)return Us(i);{let s=o.size/n.size,a=Fe(rt(i),rt(n));return s>1?Fe(a,Re(s)):a}}if(e===Lt.SUM_BY_NONZERO_WEIGHTS){if(n==null)return Fe(rt(i),Re(o.size));{let s=ae(n,fn(o.shape)),a=Ue(rt(hf(s,Re(0))),"float32");return Fe(rt(i),a)}}throw Error(`Unknown reduction: ${e}`)}var or=E({computeWeightedLoss_:DG});function FG(r,t,e,o=Lt.SUM_BY_NONZERO_WEIGHTS){let n=C(r,"labels","absoluteDifference"),i=C(t,"predictions","absoluteDifference"),s=null;e!=null&&(s=C(e,"weights","absoluteDifference")),Rt(n.shape,i.shape,"Error in absoluteDifference: ");let a=Qt($e(n,i));return or(a,s,o)}var sk=E({absoluteDifference_:FG});function OG(r,t,e,o,n=Lt.SUM_BY_NONZERO_WEIGHTS){let i=C(r,"labels","cosineDistance"),s=C(t,"predictions","cosineDistance"),a=null;o!=null&&(a=C(o,"weights","cosineDistance")),Rt(i.shape,s.shape,"Error in cosineDistance: ");let l=Re(1),u=$e(l,rt(ae(i,s),e,!0));return or(u,a,n)}var ak=E({cosineDistance_:OG});function LG(r,t,e,o=Lt.SUM_BY_NONZERO_WEIGHTS){let n=C(r,"labels","hingeLoss"),i=C(t,"predictions","hingeLoss"),s=null;e!=null&&(s=C(e,"weights","hingeLoss")),Rt(n.shape,i.shape,"Error in hingeLoss: ");let a=Re(1);n=$e(ae(Re(2),n),a);let l=qi($e(a,ae(n,i)));return or(l,s,o)}var lk=E({hingeLoss_:LG});function MG(r,t,e,o=1,n=Lt.SUM_BY_NONZERO_WEIGHTS){let i=C(r,"labels","huberLoss"),s=C(t,"predictions","huberLoss"),a=null;e!=null&&(a=C(e,"weights","huberLoss")),Rt(i.shape,s.shape,"Error in huberLoss: ");let l=Re(o),u=Qt($e(s,i)),c=Vn(u,l),p=$e(u,c),d=he(ae(Re(.5),Ut(c)),ae(l,p));return or(d,a,n)}var uk=E({huberLoss_:MG});function BG(r,t,e,o=1e-7,n=Lt.SUM_BY_NONZERO_WEIGHTS){let i=C(r,"labels","logLoss"),s=C(t,"predictions","logLoss"),a=null;e!=null&&(a=C(e,"weights","logLoss")),Rt(i.shape,s.shape,"Error in logLoss: ");let l=Re(1),u=Re(o),c=rr(ae(i,Bn(he(s,u)))),p=ae($e(l,i),Bn(he($e(l,s),u))),d=$e(c,p);return or(d,a,n)}var ck=E({logLoss_:BG});function VG(r,t,e,o=Lt.SUM_BY_NONZERO_WEIGHTS){let n=C(r,"labels","meanSquaredError"),i=C(t,"predictions","meanSquaredError"),s=null;e!=null&&(s=C(e,"weights","meanSquaredError")),Rt(n.shape,i.shape,"Error in meanSquaredError: ");let a=If(n,i);return or(a,s,o)}var pk=E({meanSquaredError_:VG});function WG(r,t){let e=C(r,"labels","sigmoidCrossEntropyWithLogits"),o=C(t,"logits","sigmoidCrossEntropyWithLogits");Rt(e.shape,o.shape,"Error in sigmoidCrossEntropyWithLogits: ");let n=qi(o),i=ae(o,e),s=sf(Pr(rr(Qt(o))));return he($e(n,i),s)}function zG(r,t,e,o=0,n=Lt.SUM_BY_NONZERO_WEIGHTS){let i=C(r,"multiClassLabels","sigmoidCrossEntropy"),s=C(t,"logits","sigmoidCrossEntropy"),a=null;if(e!=null&&(a=C(e,"weights","sigmoidCrossEntropy")),Rt(i.shape,s.shape,"Error in sigmoidCrossEntropy: "),o>0){let u=Re(o),c=Re(1),p=Re(.5);i=he(ae(i,$e(c,u)),ae(p,u))}let l=WG(i,s);return or(l,a,n)}var dk=E({sigmoidCrossEntropy_:zG});function UG(r,t,e=-1){if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${e}`);return Ar((n,i,s)=>{let l=lf(i,[e],!0),u=$e(Ue(i,"float32"),l);s([n,u]);let c=rr(ae(u,n));return{value:rt(c,[e]),gradFunc:(m,f)=>{let[g,x]=f,y=Ln(m.shape,[e]);return[ae(Y(m,y),$e(Ue(g,"float32"),Pr(x))),ae(Y(m,y),$e(Pr(x),Ue(g,"float32")))]}}})(r,t)}function GG(r,t,e,o=0,n=Lt.SUM_BY_NONZERO_WEIGHTS){let i=C(r,"onehotLabels","softmaxCrossEntropy"),s=C(t,"logits","softmaxCrossEntropy"),a=null;if(e!=null&&(a=C(e,"weights","softmaxCrossEntropy")),Rt(i.shape,s.shape,"Error in softmaxCrossEntropy: "),o>0){let u=Re(o),c=Re(1),p=Re(i.shape[1]);i=he(ae(i,$e(c,u)),Fe(u,p))}let l=UG(i,s);return or(l,a,n)}var mk=E({softmaxCrossEntropy_:GG});function HG(r,t,e,o){let n=C(r,"indices","sparseFillEmptyRows","int32"),i=C(t,"values","sparseFillEmptyRows"),s=C(e,"denseShape","sparseFillEmptyRows","int32"),a=C(o,"defaultValue","sparseFillEmptyRows",i.dtype);if(n.rank!==2)throw new Error(`Indices should be Tensor2D but received shape
        ${n.shape}`);if(i.rank!==1)throw new Error(`Values should be Tensor1D but received shape ${i.shape}`);if(s.rank!==1)throw new Error(`Dense shape should be Tensor1D but received shape ${s.shape}`);if(a.rank!==0)throw new Error(`Default value should be a scalar but received shape ${a.shape}`);let l={indices:n,values:i,denseShape:s,defaultValue:a},u=A.runKernel(vm,l);return{outputIndices:u[0],outputValues:u[1],emptyRowIndicator:u[2],reverseIndexMap:u[3]}}var fk=E({sparseFillEmptyRows_:HG});function KG(r,t,e){let o=C(r,"inputIndices","sparseReshape","int32"),n=C(t,"inputShape","sparseReshape","int32"),i=C(e,"newShape","sparseReshape","int32");if(o.rank!==2)throw new Error(`Input indices should be Tensor2D but received shape
        ${o.shape}`);if(n.rank!==1)throw new Error(`Input shape should be Tensor1D but received shape ${n.shape}`);if(i.rank!==1)throw new Error(`New shape should be Tensor1D but received shape ${i.shape}`);let s={inputIndices:o,inputShape:n,newShape:i},a=A.runKernel(bm,s);return{outputIndices:a[0],outputShape:a[1]}}var hk=E({sparseReshape_:KG});function qG(r,t,e){let o=C(r,"data","sparseSegmentMean"),n=C(t,"indices","sparseSegmentMean","int32"),i=C(e,"segmentIds","sparseSegmentMean","int32");if(o.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(n.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
          ${n.shape}`);if(i.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
          ${i.shape}`);let s={data:o,indices:n,segmentIds:i};return A.runKernel(Ou,s)}var gk=E({sparseSegmentMean_:qG});function jG(r,t,e){let o=C(r,"data","sparseSegmentSum"),n=C(t,"indices","sparseSegmentSum","int32"),i=C(e,"segmentIds","sparseSegmentSum","int32");if(o.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(n.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
         ${n.shape}`);if(i.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
         ${i.shape}`);let s={data:o,indices:n,segmentIds:i};return A.runKernel(Lu,s)}var xk=E({sparseSegmentSum_:jG});function XG(r,t,e,o,n,i,s,a){let l=C(r,"data","stringNGrams","string");if(l.dtype!=="string")throw new Error("Data must be of datatype string");if(l.shape.length!==1)throw new Error(`Data must be a vector, saw: ${l.shape}`);let u=C(t,"dataSplits","stringNGrams");if(u.dtype!=="int32")throw new Error("Data splits must be of datatype int32");let c={separator:e,nGramWidths:o,leftPad:n,rightPad:i,padWidth:s,preserveShortSequences:a},p={data:l,dataSplits:u},d=A.runKernel(Wu,p,c);return{nGrams:d[0],nGramsSplits:d[1]}}var yk=E({stringNGrams_:XG});function YG(r,t,e=!0){let o=C(r,"input","stringSplit","string"),n=C(t,"delimiter","stringSplit","string");if(o.rank!==1)throw new Error(`Input should be Tensor1D but received shape ${o.shape}`);if(n.rank!==0)throw new Error(`Delimiter should be a scalar but received shape ${n.shape}`);let i={skipEmpty:e},s={input:o,delimiter:n},a=A.runKernel(wm,s,i);return{indices:a[0],values:a[1],shape:a[2]}}var vk=E({stringSplit_:YG});function QG(r,t){let e=C(r,"input","stringToHashBucketFast","string"),o={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");let n={input:e};return A.runKernel(_m,n,o)}var bk=E({stringToHashBucketFast_:QG});function ZG(r,t,e,o=!0){let n=C(r,"input","staticRegexReplace","string"),i={pattern:t,rewrite:e,replaceGlobal:o};return A.runKernel(Bu,{x:n},i)}var Sk=E({staticRegexReplace_:ZG});var JG={fft:dc,ifft:Ks,rfft:mc,irfft:kf},e8={hammingWindow:LC,hannWindow:Pf,frame:Af,stft:MC},Un={flipLeftRight:VC,grayscaleToRGB:WC,resizeNearestNeighbor:JC,resizeBilinear:ZC,rgbToGrayscale:zC,rotateWithOffset:UC,cropAndResize:BC,nonMaxSuppression:GC,nonMaxSuppressionAsync:qC,nonMaxSuppressionWithScore:jC,nonMaxSuppressionWithScoreAsync:XC,nonMaxSuppressionPadded:YC,nonMaxSuppressionPaddedAsync:QC,threshold:ek,transform:tk},t8={bandPart:rk,gramSchmidt:ok,qr:ik},r8={absoluteDifference:sk,computeWeightedLoss:or,cosineDistance:ak,hingeLoss:lk,huberLoss:uk,logLoss:ck,meanSquaredError:pk,sigmoidCrossEntropy:dk,softmaxCrossEntropy:mk},o8={sparseFillEmptyRows:fk,sparseReshape:hk,sparseSegmentMean:gk,sparseSegmentSum:xk},n8={stringNGrams:yk,stringSplit:vk,stringToHashBucketFast:bk,staticRegexReplace:Sk};var i8=new Map,s8=new Map,Lf=class{getClassName(){return this.constructor.className}static fromConfig(t,e){return new t(e)}},e1=class r{constructor(){this.classNameMap={}}static getMap(){return r.instance==null&&(r.instance=new r),r.instance}static register(t){r.getMap().classNameMap[t.className]=[t,t.fromConfig]}};function wk(r,t,e){D(r.className!=null,()=>"Class being registered does not have the static className property defined."),D(typeof r.className=="string",()=>"className is required to be a string, but got type "+typeof r.className),D(r.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),typeof t>"u"&&(t="Custom"),typeof e>"u"&&(e=r.className);let o=e,n=t+">"+o;return e1.register(r),i8.set(n,r),s8.set(r,n),r}var Dr=class extends Lf{minimize(t,e=!1,o){let{value:n,grads:i}=this.computeGradients(t,o);if(o!=null){let s=o.map(a=>({name:a.name,tensor:i[a.name]}));this.applyGradients(s)}else this.applyGradients(i);return Ye(i),e?n:(n.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(t,e){return a_(t,e)}dispose(){this.iterations_!=null&&Ye(this.iterations_)}saveIterations(){return j(this,null,function*(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:Re(this.iterations_,"int32")}})}getWeights(){return j(this,null,function*(){throw new Error("getWeights() is not implemented for this optimizer yet.")})}setWeights(t){return j(this,null,function*(){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)})}extractIterations(t){return j(this,null,function*(){return this.iterations_=(yield t[0].tensor.data())[0],t.slice(1)})}};Object.defineProperty(Dr,Symbol.hasInstance,{value:r=>r.minimize!=null&&r.computeGradients!=null&&r.applyGradients!=null});var Mf=class extends Dr{static get className(){return"Adadelta"}constructor(t,e,o=null){super(),this.learningRate=t,this.rho=e,this.epsilon=o,this.accumulatedGrads=[],this.accumulatedUpdates=[],o==null&&(this.epsilon=A.backend.epsilon())}applyGradients(t){(Array.isArray(t)?t.map(o=>o.name):Object.keys(t)).forEach((o,n)=>{let i=A.registeredVariables[o],s=!1;this.accumulatedGrads[n]==null&&(this.accumulatedGrads[n]={originalName:`${o}/accum_grad`,variable:Ne(()=>zt(i).variable(s))}),this.accumulatedUpdates[n]==null&&(this.accumulatedUpdates[n]={originalName:`${o}/accum_var`,variable:Ne(()=>zt(i).variable(s))});let a=Array.isArray(t)?t[n].tensor:t[o];if(a==null)return;let l=this.accumulatedGrads[n].variable,u=this.accumulatedUpdates[n].variable;Ne(()=>{let c=he(ae(l,this.rho),ae(Ut(a),1-this.rho)),p=ae(Fe($r(he(u,this.epsilon)),$r(he(l,this.epsilon))),a),d=he(ae(u,this.rho),ae(Ut(p),1-this.rho));l.assign(c),u.assign(d);let m=he(ae(p,-this.learningRate),i);i.assign(m)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(Ye(this.accumulatedGrads.map(t=>t.variable)),Ye(this.accumulatedUpdates.map(t=>t.variable)))}getWeights(){return j(this,null,function*(){let t=[...this.accumulatedGrads,...this.accumulatedUpdates];return[yield this.saveIterations()].concat(t.map(e=>({name:e.originalName,tensor:e.variable})))})}setWeights(t){return j(this,null,function*(){t=yield this.extractIterations(t);let e=t.length/2,o=!1;this.accumulatedGrads=t.slice(0,e).map(n=>({originalName:n.name,variable:n.tensor.variable(o)})),this.accumulatedUpdates=t.slice(e,e*2).map(n=>({originalName:n.name,variable:n.tensor.variable(o)}))})}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.rho,e.epsilon)}};var Bf=class extends Dr{static get className(){return"Adagrad"}constructor(t,e=.1){super(),this.learningRate=t,this.initialAccumulatorValue=e,this.accumulatedGrads=[]}applyGradients(t){(Array.isArray(t)?t.map(o=>o.name):Object.keys(t)).forEach((o,n)=>{let i=A.registeredVariables[o];this.accumulatedGrads[n]==null&&(this.accumulatedGrads[n]={originalName:`${o}/accumulator`,variable:Ne(()=>pn(i.shape,this.initialAccumulatorValue).variable(!1))});let s=Array.isArray(t)?t[n].tensor:t[o];if(s==null)return;let a=this.accumulatedGrads[n].variable;Ne(()=>{let l=he(a,Ut(s));a.assign(l);let u=he(ae(Fe(s,$r(he(l,A.backend.epsilon()))),-this.learningRate),i);i.assign(u)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&Ye(this.accumulatedGrads.map(t=>t.variable))}getWeights(){return j(this,null,function*(){return[yield this.saveIterations()].concat(this.accumulatedGrads.map(t=>({name:t.originalName,tensor:t.variable})))})}setWeights(t){return j(this,null,function*(){t=yield this.extractIterations(t);let e=!1;this.accumulatedGrads=t.map(o=>({originalName:o.name,variable:o.tensor.variable(e)}))})}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(t,e){return new t(e.learningRate,e.initialAccumulatorValue)}};var Vf=class extends Dr{static get className(){return"Adam"}constructor(t,e,o,n=null){super(),this.learningRate=t,this.beta1=e,this.beta2=o,this.epsilon=n,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],Ne(()=>{this.accBeta1=Re(e).variable(),this.accBeta2=Re(o).variable()}),n==null&&(this.epsilon=A.backend.epsilon())}applyGradients(t){let e=Array.isArray(t)?t.map(o=>o.name):Object.keys(t);Ne(()=>{let o=$e(1,this.accBeta1),n=$e(1,this.accBeta2);e.forEach((i,s)=>{let a=A.registeredVariables[i],l=!1;this.accumulatedFirstMoment[s]==null&&(this.accumulatedFirstMoment[s]={originalName:`${i}/m`,variable:Ne(()=>zt(a).variable(l))}),this.accumulatedSecondMoment[s]==null&&(this.accumulatedSecondMoment[s]={originalName:`${i}/v`,variable:Ne(()=>zt(a).variable(l))});let u=Array.isArray(t)?t[s].tensor:t[i];if(u==null)return;let c=this.accumulatedFirstMoment[s].variable,p=this.accumulatedSecondMoment[s].variable,d=he(ae(c,this.beta1),ae(u,1-this.beta1)),m=he(ae(p,this.beta2),ae(Ut(u),1-this.beta2)),f=Fe(d,o),g=Fe(m,n);c.assign(d),p.assign(m);let x=he(ae(Fe(f,he($r(g),this.epsilon)),-this.learningRate),a);a.assign(x)}),this.accBeta1.assign(ae(this.accBeta1,this.beta1)),this.accBeta2.assign(ae(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&Ye(this.accumulatedFirstMoment.map(t=>t.variable)),this.accumulatedSecondMoment!=null&&Ye(this.accumulatedSecondMoment.map(t=>t.variable))}getWeights(){return j(this,null,function*(){let t=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[yield this.saveIterations()].concat(t.map(e=>({name:e.originalName,tensor:e.variable})))})}setWeights(t){return j(this,null,function*(){t=yield this.extractIterations(t),Ne(()=>{this.accBeta1.assign(Mn(this.beta1,this.iterations_+1)),this.accBeta2.assign(Mn(this.beta2,this.iterations_+1))});let e=t.length/2,o=!1;this.accumulatedFirstMoment=t.slice(0,e).map(n=>({originalName:n.name,variable:n.tensor.variable(o)})),this.accumulatedSecondMoment=t.slice(e,e*2).map(n=>({originalName:n.name,variable:n.tensor.variable(o)}))})}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon)}};var Wf=class extends Dr{static get className(){return"Adamax"}constructor(t,e,o,n=null,i=0){super(),this.learningRate=t,this.beta1=e,this.beta2=o,this.epsilon=n,this.decay=i,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],Ne(()=>{this.iteration=Re(0).variable(),this.accBeta1=Re(e).variable()}),n==null&&(this.epsilon=A.backend.epsilon())}applyGradients(t){let e=Array.isArray(t)?t.map(o=>o.name):Object.keys(t);Ne(()=>{let o=$e(1,this.accBeta1),n=Fe(-this.learningRate,he(ae(this.iteration,this.decay),1));e.forEach((i,s)=>{let a=A.registeredVariables[i],l=!1;this.accumulatedFirstMoment[s]==null&&(this.accumulatedFirstMoment[s]={originalName:`${i}/m`,variable:zt(a).variable(l)}),this.accumulatedWeightedInfNorm[s]==null&&(this.accumulatedWeightedInfNorm[s]={originalName:`${i}/v`,variable:zt(a).variable(l)});let u=Array.isArray(t)?t[s].tensor:t[i];if(u==null)return;let c=this.accumulatedFirstMoment[s].variable,p=this.accumulatedWeightedInfNorm[s].variable,d=he(ae(c,this.beta1),ae(u,1-this.beta1)),m=ae(p,this.beta2),f=Qt(u),g=mf(m,f);c.assign(d),p.assign(g);let x=he(ae(Fe(n,o),Fe(d,he(g,this.epsilon))),a);a.assign(x)}),this.iteration.assign(he(this.iteration,1)),this.accBeta1.assign(ae(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&Ye(this.accumulatedFirstMoment.map(t=>t.variable)),this.accumulatedWeightedInfNorm!=null&&Ye(this.accumulatedWeightedInfNorm.map(t=>t.variable))}getWeights(){return j(this,null,function*(){throw new Error("getWeights() is not implemented for Adamax yet.")})}setWeights(t){return j(this,null,function*(){throw new Error("setWeights() is not implemented for Adamax yet.")})}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon,e.decay)}};var fc=class extends Dr{static get className(){return"SGD"}constructor(t){super(),this.learningRate=t,this.setLearningRate(t)}applyGradients(t){(Array.isArray(t)?t.map(o=>o.name):Object.keys(t)).forEach((o,n)=>{let i=Array.isArray(t)?t[n].tensor:t[o];if(i==null)return;let s=A.registeredVariables[o];Ne(()=>{let a=he(ae(this.c,i),s);s.assign(a)})}),this.incrementIterations()}setLearningRate(t){this.learningRate=t,this.c!=null&&this.c.dispose(),this.c=Rr(Re(-t))}dispose(){this.c.dispose()}getWeights(){return j(this,null,function*(){return[yield this.saveIterations()]})}setWeights(t){return j(this,null,function*(){if(t=yield this.extractIterations(t),t.length!==0)throw new Error("SGD optimizer does not have settable weights.")})}getConfig(){return{learningRate:this.learningRate}}static fromConfig(t,e){return new t(e.learningRate)}};var zf=class extends fc{static get className(){return"Momentum"}constructor(t,e,o=!1){super(t),this.learningRate=t,this.momentum=e,this.useNesterov=o,this.accumulations=[],this.m=Re(this.momentum)}applyGradients(t){(Array.isArray(t)?t.map(o=>o.name):Object.keys(t)).forEach((o,n)=>{let i=A.registeredVariables[o];this.accumulations[n]==null&&(this.accumulations[n]={originalName:`${o}/momentum`,variable:Ne(()=>zt(i).variable(!1))});let s=this.accumulations[n].variable,a=Array.isArray(t)?t[n].tensor:t[o];a!=null&&Ne(()=>{let l,u=he(ae(this.m,s),a);this.useNesterov?l=he(ae(this.c,he(a,ae(u,this.m))),i):l=he(ae(this.c,u),i),s.assign(u),i.assign(l)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&Ye(this.accumulations.map(t=>t.variable))}setMomentum(t){this.momentum=t}getWeights(){return j(this,null,function*(){return[yield this.saveIterations()].concat(this.accumulations.map(t=>({name:t.originalName,tensor:t.variable})))})}setWeights(t){return j(this,null,function*(){t=yield this.extractIterations(t);let e=!1;this.accumulations=t.map(o=>({originalName:o.name,variable:o.tensor.variable(e)}))})}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(t,e){return new t(e.learningRate,e.momentum,e.useNesterov)}};var Uf=class extends Dr{static get className(){return"RMSProp"}constructor(t,e=.9,o=0,n=null,i=!1){if(super(),this.learningRate=t,this.decay=e,this.momentum=o,this.epsilon=n,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=i,n==null&&(this.epsilon=A.backend.epsilon()),t==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(t){(Array.isArray(t)?t.map(o=>o.name):Object.keys(t)).forEach((o,n)=>{let i=A.registeredVariables[o],s=!1;this.accumulatedMeanSquares[n]==null&&(this.accumulatedMeanSquares[n]={originalName:`${o}/rms`,variable:Ne(()=>zt(i).variable(s))}),this.accumulatedMoments[n]==null&&(this.accumulatedMoments[n]={originalName:`${o}/momentum`,variable:Ne(()=>zt(i).variable(s))}),this.accumulatedMeanGrads[n]==null&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${o}/mg`,variable:Ne(()=>zt(i).variable(s))});let a=Array.isArray(t)?t[n].tensor:t[o];if(a==null)return;let l=this.accumulatedMeanSquares[n].variable,u=this.accumulatedMoments[n].variable;Ne(()=>{let c=he(ae(l,this.decay),ae(Ut(a),1-this.decay));if(this.centered){let p=this.accumulatedMeanGrads[n].variable,d=he(ae(p,this.decay),ae(a,1-this.decay)),m=Fe(ae(a,this.learningRate),$r($e(c,he(Ut(d),this.epsilon)))),f=he(ae(u,this.momentum),m);l.assign(c),p.assign(d),u.assign(f);let g=$e(i,f);i.assign(g)}else{let p=he(ae(l,this.decay),ae(Ut(a),1-this.decay)),d=he(ae(u,this.momentum),Fe(ae(a,this.learningRate),$r(he(p,this.epsilon))));l.assign(p),u.assign(d);let m=$e(i,d);i.assign(m)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&Ye(this.accumulatedMeanSquares.map(t=>t.variable)),this.accumulatedMeanGrads!=null&&this.centered&&Ye(this.accumulatedMeanGrads.map(t=>t.variable)),this.accumulatedMoments!=null&&Ye(this.accumulatedMoments.map(t=>t.variable))}getWeights(){return j(this,null,function*(){let t=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&t.push(...this.accumulatedMeanGrads),[yield this.saveIterations()].concat(t.map(e=>({name:e.originalName,tensor:e.variable})))})}setWeights(t){return j(this,null,function*(){t=yield this.extractIterations(t);let e=this.centered?t.length/3:t.length/2,o=!1;this.accumulatedMeanSquares=t.slice(0,e).map(n=>({originalName:n.name,variable:n.tensor.variable(o)})),this.accumulatedMoments=t.slice(e,e*2).map(n=>({originalName:n.name,variable:n.tensor.variable(o)})),this.centered&&(this.accumulatedMeanGrads=t.slice(e*2,e*3).map(n=>({originalName:n.name,variable:n.tensor.variable(o)})))})}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(t,e){return new t(e.learningRate,e.decay,e.momentum,e.epsilon,e.centered)}};var a8=[Mf,Bf,Vf,Wf,zf,Uf,fc];function _k(){for(let r of a8)wk(r)}var Pp={};dt(Pp,{CompositeArrayBuffer:()=>tr,browserFiles:()=>kk,browserHTTPRequest:()=>Rk,concatenateArrayBuffers:()=>U2,copyModel:()=>ow,decodeWeights:()=>Lm,decodeWeightsStream:()=>Mm,encodeWeights:()=>B2,fromMemory:()=>$k,fromMemorySync:()=>a1,getLoadHandlers:()=>q2,getModelArtifactsForJSON:()=>nc,getModelArtifactsForJSONSync:()=>Dy,getModelArtifactsInfoForJSON:()=>ln,getSaveHandlers:()=>K2,getWeightSpecs:()=>wp,http:()=>Hf,isHTTPScheme:()=>Gf,listModels:()=>tw,loadWeights:()=>Tk,moveModel:()=>nw,registerLoadRouter:()=>H2,registerSaveRouter:()=>G2,removeModel:()=>rw,weightsLoaderFactory:()=>i1,withSaveHandler:()=>Pk,withSaveHandlerSync:()=>Ak});var l8="model",u8=".json",c8=".weights.bin";function Ck(r){return new Promise(t=>setTimeout(t)).then(r)}var t1=(()=>{class r{constructor(e){if(!G().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(r.URL_SCHEME)&&(e=e.slice(r.URL_SCHEME.length)),(e==null||e.length===0)&&(e=l8),this.modelJsonFileName=e+u8,this.weightDataFileName=e+c8}save(e){return j(this,null,function*(){if(typeof document>"u")throw new Error("Browser downloads are not supported in this environment since `document` is not present");let o=tr.join(e.weightData),n=window.URL.createObjectURL(new Blob([o],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{let i=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],s=Bm(e,i),a=window.URL.createObjectURL(new Blob([JSON.stringify(s)],{type:"application/json"})),l=this.modelJsonAnchor==null?document.createElement("a"):this.modelJsonAnchor;if(l.download=this.modelJsonFileName,l.href=a,yield Ck(()=>l.dispatchEvent(new MouseEvent("click"))),e.weightData!=null){let u=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;u.download=this.weightDataFileName,u.href=n,yield Ck(()=>u.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:ln(e)}}})}}return r.URL_SCHEME="downloads://",r})();var r1=class{constructor(t){if(t==null||t.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${t}`);this.jsonFile=t[0],this.weightsFiles=t.slice(1)}load(){return j(this,null,function*(){return new Promise((t,e)=>{let o=new FileReader;o.onload=n=>{let i=JSON.parse(n.target.result),s=i.modelTopology;if(s==null){e(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));return}if(i.weightsManifest==null){e(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));return}if(this.weightsFiles.length===0){t({modelTopology:s});return}let l=nc(i,u=>this.loadWeights(u));t(l)},o.onerror=n=>e(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),o.readAsText(this.jsonFile)})})}loadWeights(t){let e=[],o=[];for(let s of t)e.push(...s.weights),o.push(...s.paths);let n=this.checkManifestAndWeightFiles(t),i=o.map(s=>this.loadWeightsFile(s,n[s]));return Promise.all(i).then(s=>[e,s])}loadWeightsFile(t,e){return new Promise((o,n)=>{let i=new FileReader;i.onload=s=>{let a=s.target.result;o(a)},i.onerror=s=>n(`Failed to weights data from file of path '${t}'.`),i.readAsArrayBuffer(e)})}checkManifestAndWeightFiles(t){let e=[],o=this.weightsFiles.map(i=>Ay(i.name)),n={};for(let i of t)i.paths.forEach(s=>{let a=Ay(s);if(e.indexOf(a)!==-1)throw new Error(`Duplicate file basename found in weights manifest: '${a}'`);if(e.push(a),o.indexOf(a)===-1)throw new Error(`Weight file with basename '${a}' is not provided.`);n[s]=this.weightsFiles[o.indexOf(a)]});if(e.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${e.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return n}},p8=r=>G().getBool("IS_BROWSER")&&!Array.isArray(r)&&r.startsWith(t1.URL_SCHEME)?d8(r.slice(t1.URL_SCHEME.length)):null;Kt.registerSaveRouter(p8);function d8(r="model"){return new t1(r)}function kk(r){return new r1(r)}function o1(r,t,e,o){s(r),e=e??0,o=o??1,a(e,o);let n=0,i=l=>(l.then(u=>{let c=e+ ++n/r.length*(o-e);return t(c),u}),l);function s(l){D(l!=null&&Array.isArray(l)&&l.length>0,()=>"promises must be a none empty array")}function a(l,u){D(l>=0&&l<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${l}`),D(u>=0&&u<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${u}`),D(u>=l,()=>`startFraction must be no more than endFraction, but got startFraction ${l} and endFraction ${u}`)}return Promise.all(r.map(i))}function n1(r,t){return j(this,null,function*(){t==null&&(t={});let e=t.fetchFunc==null?G().platform.fetch:t.fetchFunc,o=r.map(p=>e(p,t.requestInit,{isBinary:!0})),a=(t.onProgress==null?yield Promise.all(o):yield o1(o,t.onProgress,0,.5)).map(p=>p.arrayBuffer());return t.onProgress==null?yield Promise.all(a):yield o1(a,t.onProgress,.5,1)})}function Ik(r,t){var e;let o=t.fetchFunc==null?G().platform.fetch:t.fetchFunc,n=0,i;return(e=t.onProgress)===null||e===void 0||e.call(t,0),new ReadableStream({pull:s=>j(null,null,function*(){for(var a;n<r.length;){i||(i=(yield o(r[n],t.requestInit,{isBinary:!0})).body.getReader());let{done:l,value:u}=yield i.read();if(l){n++,i=void 0,(a=t.onProgress)===null||a===void 0||a.call(t,n/r.length);continue}s.enqueue(u);return}s.close()})})}function Tk(r,t="",e,o){return j(this,null,function*(){return i1(s=>n1(s,{requestInit:o}))(r,t,e)})}function i1(r){return(t,e="",o)=>j(null,null,function*(){let n=t.map(()=>!1),i={},s=o!=null?o.map(()=>!1):[],a=[];if(t.forEach((m,f)=>{let g=0;m.weights.forEach(x=>{let y="quantization"in x?x.quantization.dtype:x.dtype,b=Fn[y]*Ke(x.shape),T=()=>{n[f]=!0,i[f]==null&&(i[f]=[]),i[f].push({manifestEntry:x,groupOffset:g,sizeBytes:b})};o!=null?o.forEach((R,M)=>{R===x.name&&(T(),s[M]=!0)}):T(),a.push(x.name),g+=b})}),!s.every(m=>m)){let m=o.filter((f,g)=>!s[g]);throw new Error(`Could not find weights in manifest with names: ${m.join(", ")}. 
Manifest JSON has weights with names: ${a.join(", ")}.`)}let l=n.reduce((m,f,g)=>(f&&m.push(g),m),[]),u=[];l.forEach(m=>{t[m].paths.forEach(f=>{let g=e+(e.endsWith("/")?"":"/")+f;u.push(g)})});let c=yield r(u),p={},d=0;return l.forEach(m=>{let f=t[m].paths.length,g=new tr(c.slice(d,d+f));i[m].forEach(y=>{let b=g.slice(y.groupOffset,y.groupOffset+y.sizeBytes),T=Lm(b,[y.manifestEntry]);for(let R in T)p[R]=T[R]}),d+=f}),p})}var m8="application/octet-stream",f8="application/json",Ek=(()=>{class r{constructor(e,o){if(this.DEFAULT_METHOD="POST",o==null&&(o={}),this.weightPathPrefix=o.weightPathPrefix,this.weightUrlConverter=o.weightUrlConverter,o.fetchFunc!=null?(D(typeof o.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=o.fetchFunc):this.fetch=G().platform.fetch,D(e!=null&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&D(e.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,o.requestInit!=null&&o.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=o.requestInit||{},this.loadOptions=o}save(e){return j(this,null,function*(){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");let o=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);o.body=new FormData;let n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],i=Bm(e,n);if(o.body.append("model.json",new Blob([JSON.stringify(i)],{type:f8}),"model.json"),e.weightData!=null){let a=tr.join(e.weightData);o.body.append("model.weights.bin",new Blob([a],{type:m8}),"model.weights.bin")}let s=yield this.fetch(this.path,o);if(s.ok)return{modelArtifactsInfo:ln(e),responses:[s]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${s.status}.`)})}loadModelJSON(){return j(this,null,function*(){let e=yield this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let o;try{o=yield e.json()}catch{let a=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?a+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":a+=" Please make sure the server is serving valid JSON for this request.",new Error(a)}let n=o.modelTopology,i=o.weightsManifest;if(n==null&&i==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return o})}load(){return j(this,null,function*(){if(this.loadOptions.streamWeights)return this.loadStream();let e=yield this.loadModelJSON();return nc(e,o=>this.loadWeights(o))})}loadStream(){return j(this,null,function*(){let e=yield this.loadModelJSON(),o=yield this.getWeightUrls(e.weightsManifest),n=wp(e.weightsManifest),i=()=>Ik(o,this.loadOptions);return Object.assign(Object.assign({},e),{weightSpecs:n,getWeightStream:i})})}getWeightUrls(e){return j(this,null,function*(){let o=Array.isArray(this.path)?this.path[1]:this.path,[n,i]=h8(o),s=this.weightPathPrefix||n,a=[],l=[];for(let u of e)for(let c of u.paths)this.weightUrlConverter!=null?l.push(this.weightUrlConverter(c)):a.push(s+c+i);return this.weightUrlConverter&&a.push(...yield Promise.all(l)),a})}loadWeights(e){return j(this,null,function*(){let o=yield this.getWeightUrls(e),n=wp(e),i=yield n1(o,this.loadOptions);return[n,i]})}}return r.URL_SCHEME_REGEX=/^https?:\/\//,r})();function h8(r){let t=r.lastIndexOf("/"),e=r.lastIndexOf("?"),o=r.substring(0,t),n=e>t?r.substring(e):"";return[o+"/",n]}function Gf(r){return r.match(Ek.URL_SCHEME_REGEX)!=null}var Nk=(r,t)=>{if(typeof fetch>"u"&&(t==null||t.fetchFunc==null))return null;{let e=!0;if(Array.isArray(r)?e=r.every(o=>Gf(o)):e=Gf(r),e)return Hf(r,t)}return null};Kt.registerSaveRouter(Nk);Kt.registerLoadRouter(Nk);function Hf(r,t){return new Ek(r,t)}function Rk(r,t){return Hf(r,t)}var $p=class{constructor(t){this.modelArtifacts=t}load(){return this.modelArtifacts}},Kf=class{constructor(t){this.saveHandler=t}save(t){return this.saveHandler(t)}},s1=class{constructor(t){t.load&&(this.load=()=>Promise.resolve(t.load())),t.save&&(this.save=e=>Promise.resolve(t.save(e)))}};function $k(r,t,e,o){let n=arguments;return new s1(a1(...n))}function a1(r,t,e,o){return arguments.length===1?r.modelTopology!=null||r.weightSpecs!=null?new $p(r):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new $p({modelTopology:r})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new $p({modelTopology:r,weightSpecs:t,weightData:e,trainingConfig:o}))}function Pk(r){return new Kf(r)}function Ak(r){return new Kf(r)}var ji={};dt(ji,{draw:()=>_8,fromPixels:()=>C8,fromPixelsAsync:()=>b8,toPixels:()=>w8});var Qs,Dk=!1;function Fk(r,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(r==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let e=!1,o=!1,n=!1,i=!1,s=!1,a=!1;if(r.data instanceof Uint8Array)e=!0;else if(typeof ImageData<"u"&&r instanceof ImageData)o=!0;else if(typeof HTMLVideoElement<"u"&&r instanceof HTMLVideoElement)n=!0;else if(typeof HTMLImageElement<"u"&&r instanceof HTMLImageElement)i=!0;else if(r.getContext!=null)s=!0;else if(typeof ImageBitmap<"u"&&r instanceof ImageBitmap)a=!0;else throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${r.constructor.name}`);if(Qu(Cs,A.backendName)!=null){let f={pixels:r},g={numChannels:t};return A.runKernel(Cs,f,g)}let[u,c]=n?[r.videoWidth,r.videoHeight]:[r.width,r.height],p;if(s)p=r.getContext("2d").getImageData(0,0,u,c).data;else if(o||e)p=r.data;else if(i||n||a){if(Qs==null)if(typeof document>"u")if(typeof OffscreenCanvas<"u"&&typeof OffscreenCanvasRenderingContext2D<"u")Qs=new OffscreenCanvas(1,1).getContext("2d");else throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");else Qs=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});Qs.canvas.width=u,Qs.canvas.height=c,Qs.drawImage(r,0,0,u,c),p=Qs.getImageData(0,0,u,c).data}let d;if(t===4)d=new Int32Array(p);else{let f=u*c;d=new Int32Array(f*t);for(let g=0;g<f;g++)for(let x=0;x<t;++x)d[g*t+x]=p[g*4+x]}return Ef(d,[c,u,t],"int32")}function g8(r){return r!=null&&r.data instanceof Uint8Array}function x8(){return typeof window<"u"&&typeof ImageBitmap<"u"&&window.hasOwnProperty("createImageBitmap")}function y8(r){return r!=null&&r.width!==0&&r.height!==0}function v8(r){return x8()&&!(r instanceof ImageBitmap)&&y8(r)&&!g8(r)}function b8(r,t=3){return j(this,null,function*(){let e=null;if(G().getBool("WRAP_TO_IMAGEBITMAP")&&v8(r)){let o;try{o=yield createImageBitmap(r,{premultiplyAlpha:"none"})}catch{o=null}o!=null&&o.width===r.width&&o.height===r.height?e=o:e=r}else e=r;return Fk(e,t)})}function Ok(r){if(r.rank!==2&&r.rank!==3)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${r.rank}.`);let t=r.rank===2?1:r.shape[2];if(t>4||t===2)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${t}`);if(r.dtype!=="float32"&&r.dtype!=="int32")throw new Error(`Unsupported type for toPixels: ${r.dtype}. Please use float32 or int32 tensors.`)}function S8(r){let t=r?.alpha||1;if(t>1||t<0)throw new Error(`Alpha value ${t} is suppoed to be in range [0 - 1].`)}function w8(r,t){return j(this,null,function*(){let e=C(r,"img","toPixels");if(!(r instanceof at)){let u=e;e=Ue(u,"int32"),u.dispose()}Ok(e);let[o,n]=e.shape.slice(0,2),i=e.rank===2?1:e.shape[2],s=yield e.data(),a=e.dtype==="float32"?255:1,l=new Uint8ClampedArray(n*o*4);for(let u=0;u<o*n;++u){let c=[0,0,0,255];for(let d=0;d<i;d++){let m=s[u*i+d];if(e.dtype==="float32"){if(m<0||m>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${m}.`)}else if(e.dtype==="int32"&&(m<0||m>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${m}.`);i===1?(c[0]=m*a,c[1]=m*a,c[2]=m*a):c[d]=m*a}let p=u*4;l[p+0]=Math.round(c[0]),l[p+1]=Math.round(c[1]),l[p+2]=Math.round(c[2]),l[p+3]=Math.round(c[3])}if(t!=null){Dk||Qu(xp,A.backendName)!=null&&(console.warn("tf.browser.toPixels is not efficient to draw tensor on canvas. Please try tf.browser.draw instead."),Dk=!0),t.width=n,t.height=o;let u=t.getContext("2d"),c=new ImageData(l,n,o);u.putImageData(c,0,0)}return e!==r&&e.dispose(),l})}function _8(r,t,e){let o=C(r,"img","draw");if(!(r instanceof at)){let s=o;o=Ue(s,"int32"),s.dispose()}Ok(o),S8(e?.imageOptions);let n={image:o},i={canvas:t,options:e};A.runKernel(xp,n,i)}var C8=E({fromPixels_:Fk});function k8(r,t){let e=r.shape.length,o=t.shape.length;if(e<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${e}.`);if(o<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${o}.`);if(t.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[o-1]>e)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[o-1]} vs. ${e}`);if(Ke(r.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${r.shape}.`);let n=t.shape,i=n[n.length-1],s=1;for(let p=0;p<n.length-1;++p)s*=n[p];let a=r.shape,l=n.slice();l.pop();let u=1;for(let p=i;p<e;++p)u*=a[p],l.push(a[p]);let c=[...nn(r.shape).map(p=>p/u),1].slice(0,i);return[l,s,u,c]}var Gt={};dt(Gt,{assertParamsValid:()=>T8,computeFlatOffset:()=>P8,computeOutShape:()=>N8,getNormalizedAxes:()=>R8,isSliceContinous:()=>$8,maskToAxes:()=>E8,parseSliceParams:()=>A8,sliceInfo:()=>D8,startForAxis:()=>Gk,startIndicesWithElidedDims:()=>Wk,stopForAxis:()=>Hk,stopIndicesWithElidedDims:()=>zk,stridesForAxis:()=>Uk,stridesWithElidedDims:()=>Mk});var l1=-2,I8=-1;function T8(r,t,e){let o=r.shape.length;D(o===t.length,()=>`Error in slice${o}D: Length of begin ${t} must match the rank of the array (${o}).`),D(o===e.length,()=>`Error in slice${o}D: Length of size ${e} must match the rank of the array (${o}).`);for(let n=0;n<o;++n)D(t[n]+e[n]<=r.shape[n],()=>`Error in slice${o}D: begin[${n}] + size[${n}] (${t[n]+e[n]}) would overflow input.shape[${n}] (${r.shape[n]})`)}function E8(r){let t=[],e=0;for(;r>0;)r&1&&t.push(e),r/=2,e++;return t}function N8(r,t,e){let o=[];for(let n=0;n<r.length;n++)o[n]=Math.ceil((t[n]-r[n])/e[n]);return o}function Mk(r,t,e,o){let n=[...r];for(let i=n.length;i<o.length;i++)n.push(1);for(let i=0;i<e;i++)i===0?n[t]=1:(n.splice(t,0,1),n.pop());return n}function Bk(r,t,e){return e<=r?e:e-(t-1)}function Vk(r,t){let e=[];for(let o=0;o<r;o++)e.push(t+o);return e}function R8(r,t,e,o,n,i,s,a,l){let u=r.length,c=new Array(u),p=new Array(u),d=new Array(u);if(t.length&&e>0){let m=t[0],f=e+1;c=Wk(s,m,f,o,r),p=zk(a,m,f,n,r),d=Mk(i,m,f,r)}else for(let m=0;m<u;m++)c[m]=Gk(s,o,i,r,m,l),p[m]=Hk(a,n,i,r,m,l),d[m]=Uk(i,m,l);return{begin:c,end:p,strides:d}}function Wk(r,t,e,o,n){let i=[...n],s=Vk(e,t);for(let a=0;a<i.length;a++)if(s.indexOf(a)>-1)i[a]=0;else{let l=Bk(t,e,a),u=o[l];r&1<<l&&(u=0),i[a]=u}return i}function zk(r,t,e,o,n){let i=[...n],s=Vk(e,t);for(let a=0;a<i.length;a++)if(s.indexOf(a)>-1)i[a]=Number.MAX_SAFE_INTEGER;else{let l=Bk(t,e,a),u=o[l];r&1<<l&&(u=Number.MAX_SAFE_INTEGER),i[a]=u}for(let a=0;a<i.length;a++){let l=n[a];i[a]<0&&(i[a]+=l),i[a]=La(0,i[a],n[a])}return i}function Uk(r,t,e){let o=r[t];return(e&1<<t||o==null)&&(o=1),o}function Gk(r,t,e,o,n,i){let s=t[n],a=e[n]||1;(r&1<<n||i&1<<n||s==null)&&(a>0?s=Number.MIN_SAFE_INTEGER:s=Number.MAX_SAFE_INTEGER);let l=o[n];return s<0&&(s+=l),s=La(0,s,l-1),s}function Hk(r,t,e,o,n,i){let s=t[n],a=e[n]||1;(r&1<<n||i&1<<n||s==null)&&(a>0?s=Number.MAX_SAFE_INTEGER:s=Number.MIN_SAFE_INTEGER);let l=o[n];return s<0&&(s+=l),a>0?s=La(0,s,l):s=La(-1,s,l-1),s}function $8(r,t,e){let o=e.length;for(let n=0;n<e.length;n++)if(e[n]>1){o=n;break}for(let n=o+1;n<e.length;n++)if(t[n]>0||e[n]!==r[n])return!1;return!0}function P8(r,t){let e=r.length>0?r[r.length-1]:1;for(let o=0;o<r.length-1;o++)e+=r[o]*t[o];return e}function A8(r,t,e){let o,n=r.shape.length;typeof t=="number"?o=[t,...new Array(n-1).fill(0)]:t.length<n?o=t.concat(new Array(n-t.length).fill(0)):o=t.slice(),o.forEach(s=>{D(s!==-1,()=>"slice() does not support negative begin indexing.")});let i;return e==null?i=new Array(n).fill(-1):typeof e=="number"?i=[e,...new Array(n-1).fill(-1)]:e.length<n?i=e.concat(new Array(n-e.length).fill(-1)):i=e,i=i.map((s,a)=>s>=0?s:(D(s===-1,()=>`Negative size values should be exactly -1 but got ${s} for the slice() size at index ${a}.`),r.shape[a]-o[a])),[o,i]}function D8(r,t,e,o,n,i,s,a,l){let u;if(o==null?(u=new Array(t.length),u.fill(1)):u=o,s!=null&&(s&s-1)!==0)throw new Error("Multiple ellipses in slice is not allowed.");let c=!1,p={dims:u.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:e.slice(),strides:u.slice(),beginMask:n,endMask:i,ellipsisMask:s,newAxisMask:a,shrinkAxisMask:l};for(let T=0;T<p.dims;T++)c&&(1<<T&a)!==0&&p.numAddAxisAfterEllipsis++,1<<T&s&&(c=!0);c||(p.ellipsisMask|=1<<p.dims,p.dims++);let d={dims:r.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};F8(p,d);let m=!0,f=!0,g=!0,x=[],y=[];for(let T=0;T<r.length;++T){if(d.strides[T]===0)throw Error(`strides[${T}] must be non-zero`);let R=!!(d.shrinkAxisMask&1<<T),M=r[T];if(M===-1){x.push(R?1:-1);continue}let V=[d.beginMask&1<<T,d.endMask&1<<T],z=[d.strides[T]>0?0:-1,d.strides[T]>0?M:M-1];if(R&&d.strides[T]<=0)throw Error("only stride 1 allowed on non-range indexing.");g=g&&d.strides[T]===1;let H=!!(d.beginMask&1<<T&&d.endMask&1<<T);if(d.beginValid&&d.endValid){if(R){let ce=d.begin[T]<0?M+d.begin[T]:d.begin[T];if(d.begin[T]=ce,d.end[T]=d.begin[T]+1,ce<0||ce>=M)throw Error(`slice index ${d.begin[T]} of dimension ${T} out of bounds.`)}else d.begin[T]=Lk(d.begin[T],0,d.strides[T],M,V,z),d.end[T]=Lk(d.end[T],1,d.strides[T],M,V,z);let te=d.strides[T]===1&&d.begin[T]===0&&d.end[T]===M;m=m&&te,f=f&&(T===0&&d.strides[T]===1||te)}else m=m&&d.strides[T]===1&&H,f=f&&(T===0&&d.strides[T]===1||H);let K,X=!1;if(d.beginValid&&d.endValid?(K=d.end[T]-d.begin[T],X=!0):R?(K=1,X=!0):H&&M>=0&&(d.strides[T]<0?K=-M:K=M,X=!0),X){let te;K===0||K<0!=d.strides[T]<0?te=0:te=Math.trunc(K/d.strides[T])+(K%d.strides[T]!==0?1:0),x.push(te)}else x.push(-1)}for(let T=0;T<d.finalShapeGatherIndices.length;++T){let R=d.finalShapeGatherIndices[T];R>=0?y.push(x[R]):R===l1&&y.push(1)}return{finalShapeSparse:y.filter((T,R)=>d.finalShapeGatherIndices[R]!==l1),finalShape:y,isIdentity:m,sliceDim0:f,isSimpleSlice:g,begin:d.begin,end:d.end,strides:d.strides}}function F8(r,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let e=0;t.beginValid=r.begin!=null,t.endValid=r.end!=null,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let o=0;o<r.dims;o++)if(1<<o&r.ellipsisMask){let n=Math.min(t.dims-(r.dims-o)+1+r.numAddAxisAfterEllipsis,t.dims);for(;e<n;e++)t.begin[e]=0,t.end[e]=0,t.strides[e]=1,t.beginMask|=1<<e,t.endMask|=1<<e,t.finalShapeGatherIndices.push(e),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[e]=o}else if(1<<o&r.newAxisMask)t.finalShapeGatherIndices.push(l1),t.finalShapeGatherIndicesSparse.push(-1);else{if(e===t.begin.length)throw Error(`Index out of range using input dim ${e}; input has only ${t.dims} dims, ${t.begin.length}.`);r.begin!=null&&(t.begin[e]=r.begin[o]),r.end!=null&&(t.end[e]=r.end[o]),t.strides[e]=r.strides[o],r.beginMask&1<<o&&(t.beginMask|=1<<e),r.endMask&1<<o&&(t.endMask|=1<<e),r.shrinkAxisMask&1<<o?(t.finalShapeGatherIndices.push(I8),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<e):(t.finalShapeGatherIndices.push(e),t.finalShapeGatherIndicesSparse.push(o)),t.inputShapeGatherIndicesSparse[e]=o,e++}}function Lk(r,t,e,o,n,i){if(n[t])return e>0?i[t]:i[t+1&1];{let s=r<0?o+r:r;return s<i[0]?i[0]:s>i[1]?i[1]:s}}var O8=typeof requestAnimationFrame<"u"?requestAnimationFrame:typeof setImmediate<"u"?setImmediate:r=>r();function u1(){return new Promise(r=>O8(()=>r()))}var $={};dt($,{ERF_A1:()=>J8,ERF_A2:()=>e7,ERF_A3:()=>t7,ERF_A4:()=>r7,ERF_A5:()=>o7,ERF_P:()=>Z8,PARALLELIZE_THRESHOLD:()=>qf,RowPartitionType:()=>Gn,SELU_SCALE:()=>Q8,SELU_SCALEALPHA:()=>Y8,applyActivation:()=>Xs,assertAndGetBroadcastShape:()=>et,assertAxesAreInnerMostDims:()=>S6,assertParamsConsistent:()=>L8,assignToTypedArray:()=>u7,axesAreInnerMostDims:()=>Gy,calculateShapes:()=>RU,checkEinsumDimSizes:()=>h7,checkPadOnDimRoundingMode:()=>Ot,combineLocations:()=>Zw,combineRaggedTensorToTensorShapes:()=>B8,complexWithEvenIndex:()=>s7,complexWithOddIndex:()=>a7,computeConv2DInfo:()=>Bs,computeConv3DInfo:()=>vw,computeDefaultPad:()=>Uy,computeDilation2DInfo:()=>vW,computeOptimalWindowSize:()=>U8,computeOutAndReduceShapes:()=>b6,computeOutShape:()=>M8,computePool2DInfo:()=>zy,computePool3DInfo:()=>bW,convertConv2DDataFormat:()=>bw,decodeEinsumEquation:()=>m7,eitherStridesOrDilationsAreOne:()=>pr,expandShapeToKeepDim:()=>Ln,exponent:()=>p7,exponents:()=>c7,fromStringArrayToUint8:()=>O7,fromUint8ToStringArray:()=>F7,getAxesPermutation:()=>w6,getBroadcastDims:()=>qw,getComplexWithIndex:()=>l7,getEinsumComputePath:()=>g7,getEinsumPermutation:()=>f7,getFusedBiasGradient:()=>js,getFusedDyActivation:()=>qs,getImageCenter:()=>G8,getInnerMostAxes:()=>C6,getPermuted:()=>K8,getRaggedRank:()=>W8,getReductionAxes:()=>Qm,getReshaped:()=>H8,getReshapedPermuted:()=>q8,getRowPartitionTypesHelper:()=>V8,getSliceBeginCoords:()=>j8,getSliceSize:()=>X8,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>b7,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>S7,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>w7,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>k7,getSparseReshapeInputOutputMismatchErrorMessage:()=>T7,getSparseReshapeInputOutputMultipleErrorMessage:()=>I7,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>_7,getSparseReshapeNegativeOutputDimErrorMessage:()=>C7,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>$7,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>E7,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>N7,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>R7,getUndoAxesPermutation:()=>_6,isIdentityPermutation:()=>x7,log:()=>c5,mergeRealAndImagArrays:()=>n7,prepareAndValidate:()=>k8,prepareSplitSize:()=>v7,segment_util:()=>p1,shouldFuse:()=>Ys,slice_util:()=>Gt,splitRealAndImagArrays:()=>i7,stridesOrDilationsArePositive:()=>un,tupleValuesAreOne:()=>Ms,upcastType:()=>Tt,validateDefaultValueShape:()=>z8,validateInput:()=>Np,validateUpdateShape:()=>bC,warn:()=>Pn});function L8(r,t){let e=r[0].length;r.forEach((n,i)=>{D(n.length===e,()=>`Error in concat${e}D: rank of tensors[${i}] must be the same as the rank of the rest (${e})`)}),D(t>=0&&t<e,()=>`Error in concat${e}D: axis must be between 0 and ${e-1}.`);let o=r[0];r.forEach((n,i)=>{for(let s=0;s<e;s++)D(s===t||n[s]===o[s],()=>`Error in concat${e}D: Shape of tensors[${i}] (${n}) does not match the shape of the rest (${o}) along the non-concatenated axis ${i}.`)})}function M8(r,t){let e=r[0].slice();for(let o=1;o<r.length;o++)e[t]+=r[o][t];return e}var Gn=function(r){return r[r.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",r[r.VALUE_ROWIDS=1]="VALUE_ROWIDS",r[r.ROW_LENGTHS=2]="ROW_LENGTHS",r[r.ROW_SPLITS=3]="ROW_SPLITS",r[r.ROW_LIMITS=4]="ROW_LIMITS",r[r.ROW_STARTS=5]="ROW_STARTS",r}(Gn||{});function B8(r,t,e){let o=new Array;if(e==null&&t==null)return o;if(t==null)for(;o.length<r+e.length;)o.push(-1);else o=t.slice();if(e==null)return o;if(r+e.length!==o.length)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.rank = ${r+e.length}, but shape.rank = ${o.length}`);for(let n=1;n<e.length;++n){let i=e[n],s=o[o.length-e.length+n],a=o[s];if(i>=0)if(a>=0){if(a!==i)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.shape[${n+r}] = ${i} but shape[${n+r}] = ${a}`)}else o[s]=i}return o}function V8(r){let t={FIRST_DIM_SIZE:Gn.FIRST_DIM_SIZE,VALUE_ROWIDS:Gn.VALUE_ROWIDS,ROW_LENGTHS:Gn.ROW_LENGTHS,ROW_SPLITS:Gn.ROW_SPLITS,ROW_LIMITS:Gn.ROW_LIMITS,ROW_STARTS:Gn.ROW_STARTS},e=[];for(let o of r)if(o in t)e.push(t[o]);else break;return e}function W8(r){return r.length===0?0:r[0]===Gn.FIRST_DIM_SIZE?r.length-1:r.length}function z8(r,t){if(r==null||t==null)return;let e=r.length,o=t.length;if(e>=o)throw new Error(`defaultValue.shape=${r} and ragged tensor flatValues.shape=${t}, are incompatible: defaultValue.rank = ${e} must be less than ragged tensor input flatValues.rank = ${o})`);for(let n=0;n<Math.min(e,o-1);++n){let i=r[n],s=t[n+1];if(i>=0&&s>=0&&i!==1&&i!==s)throw new Error(`defaultValue.shape=${r}, and ragged tensor input flatValues.shape=${t} are incompatible: defaultValue.shape[${n-r.length}] = ${i} but ragged tensor input.flatValues.shape[${n-r.length}] = ${s}`)}}var qf=30;function U8(r){return r<=qf?r:Wa(r,Math.floor(Math.sqrt(r)))}function G8(r,t,e){let o=e*(typeof r=="number"?r:r[0]),n=t*(typeof r=="number"?r:r[1]);return[o,n]}function H8(r,t,e,o=!0){let n=[];if(o)n=n.concat(t.slice(0)),n.push(r[0]/e),n=n.concat(r.slice(1));else{n=n.concat(r[0]);let i=t.length;for(let s=0;s<i;++s)n=n.concat([r[s+1]/t[s],t[s]]);n=n.concat(r.slice(i+1))}return n}function K8(r,t,e=!0){let o=[];if(e){o.push(t);for(let n=t+1;n<r;++n)n<=2*t?(o.push(n),o.push(n-(t+1))):o.push(n)}else{let n=[],i=[];for(let s=1;s<r;++s)s>=t*2+1||s%2===1?i.push(s):n.push(s);o.push(...n),o.push(0),o.push(...i)}return o}function q8(r,t,e,o=!0){let n=[];o?n.push(r[0]/e):n.push(r[0]*e);for(let i=1;i<r.length;++i)i<=t.length?o?n.push(t[i-1]*r[i]):n.push(r[i]/t[i-1]):n.push(r[i]);return n}function j8(r,t){let e=[0];for(let o=0;o<t;++o)e.push(r[o][0]);return e}function X8(r,t,e){let o=r.slice(0,1);for(let n=0;n<e;++n)o.push(r[n+1]-t[n][0]-t[n][1]);return o}var Y8=1.7580993408473768,Q8=1.0507009873554805;var Z8=.3275911,J8=.254829592,e7=-.284496736,t7=1.421413741,r7=-1.453152027,o7=1.061405429;function n7(r,t){if(r.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${r.length}, imag: ${t.length}.`);let e=new Float32Array(r.length*2);for(let o=0;o<e.length;o+=2)e[o]=r[o/2],e[o+1]=t[o/2];return e}function i7(r){let t=new Float32Array(r.length/2),e=new Float32Array(r.length/2);for(let o=0;o<r.length;o+=2)t[o/2]=r[o],e[o/2]=r[o+1];return{real:t,imag:e}}function s7(r){let t=Math.ceil(r.length/4),e=new Float32Array(t),o=new Float32Array(t);for(let n=0;n<r.length;n+=4)e[Math.floor(n/4)]=r[n],o[Math.floor(n/4)]=r[n+1];return{real:e,imag:o}}function a7(r){let t=Math.floor(r.length/4),e=new Float32Array(t),o=new Float32Array(t);for(let n=2;n<r.length;n+=4)e[Math.floor(n/4)]=r[n],o[Math.floor(n/4)]=r[n+1];return{real:e,imag:o}}function l7(r,t){let e=r[t*2],o=r[t*2+1];return{real:e,imag:o}}function u7(r,t,e,o){r[o*2]=t,r[o*2+1]=e}function c7(r,t){let e=new Float32Array(r/2),o=new Float32Array(r/2);for(let n=0;n<Math.ceil(r/2);n++){let i=(t?2:-2)*Math.PI*(n/r);e[n]=Math.cos(i),o[n]=Math.sin(i)}return{real:e,imag:o}}function p7(r,t,e){let o=(e?2:-2)*Math.PI*(r/t),n=Math.cos(o),i=Math.sin(o);return{real:n,imag:i}}var c1="->",d7=/->/g,Kk=",",qk="...";function m7(r,t){r=r.replace(/\s/g,"");let e=(r.length-r.replace(d7,"").length)/c1.length;if(e<1)throw new Error("Equations without an arrow are not supported.");if(e>1)throw new Error(`Equation must contain exactly one arrow ("${c1}").`);let[o,n]=r.split(c1);D(o.indexOf(qk)===-1,()=>`The ellipsis notation ("${qk}") is not supported yet.`);let i=o.split(Kk),s=i.length;if(t!==s)throw new Error(`Expected ${s} input tensors, received ${t}`);if(s>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");let a=[];for(let d=0;d<n.length;++d){let m=n[d];if(!i.some(f=>f.indexOf(m)!==-1))throw new Error(`Output subscripts contain the label ${m} not present in the input subscripts.`);a.indexOf(m)===-1&&a.push(m)}for(let d=0;d<o.length;++d){let m=o[d];a.indexOf(m)===-1&&m!==Kk&&a.push(m)}let l=new Array(i.length);for(let d=0;d<s;++d){if(new Set(i[d].split("")).size!==i[d].length)throw new Error(`Found duplicate axes in input component ${i[d]}. Support for duplicate axes in input is not implemented yet.`);l[d]=[];for(let m=0;m<i[d].length;++m)l[d].push(a.indexOf(i[d][m]))}let u=a.length,c=n.length,p=[];for(let d=c;d<u;++d)p.push(d);return{allDims:a,summedDims:p,idDims:l}}function f7(r,t){let e=new Array(r);e.fill(-1);for(let n=0;n<t.length;++n)e[t[n]]=n;let o=[];for(let n=0;n<r;++n)e[n]===-1&&o.push(n);return e=e.filter(n=>n!==-1),{permutationIndices:e,expandDims:o}}function h7(r,t,e){let o=new Array(r);for(let n=0;n<e.length;++n){let i=e[n].shape;for(let s=0;s<t[n].length;++s)o[t[n][s]]===void 0?o[t[n][s]]=i[s]:D(o[t[n][s]]===i[s],()=>`Expected dimension ${o[t[n][s]]} at axis ${s} of input shaped ${JSON.stringify(i)}, but got dimension ${i[s]}`)}}function g7(r,t){let e=r,o=[],n=0;r.length===0&&e.push(-1),n=r.length+1;for(let s=0;s<n;++s)o.push([]);let i=[];for(let s=0;s<e.length;++s){let a=e[s],l=y7(t,a);for(let u of l)i.indexOf(u)===-1&&(o[s].push(u),i.push(u))}return{path:e,steps:o}}function x7(r){return r.every((t,e)=>t===e)}function y7(r,t){let e=[];for(let o=0;o<r.length;++o)(r[o].length===0||r[o].indexOf(t)!==-1||t===-1)&&e.push(o);return e}function v7(r,t,e=0){let o=[];if(typeof t=="number")D(r.shape[e]%t===0,()=>"Number of splits must evenly divide the axis."),o=new Array(t).fill(r.shape[e]/t);else{let n=t.reduce((s,a)=>(a===-1&&(s+=1),s),0);D(n<=1,()=>"There should be only one negative value in split array.");let i=t.indexOf(-1);if(i!==-1){let s=t.reduce((a,l)=>l>0?a+l:a);t[i]=r.shape[e]-s}D(r.shape[e]===t.reduce((s,a)=>s+a),()=>"The sum of sizes must match the size of the axis dimension."),o=t}return o}function b7(r){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${r}`}function S7(r,t){return`indices(${r}, 0) is invalid: ${t} < 0`}function w7(r,t,e){return`indices(${r}, 0) is invalid: ${t} >= ${e}`}function _7(r,t){return`only one output dimension may be -1, not both ${r} and ${t}`}function C7(r,t){return`size ${r} must be non-negative, not ${t}`}function k7(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function I7(r,t){let e=Ke(r),o=Ke(t);return`Input to reshape is a SparseTensor with ${e}
  dense values, but the requested shape requires a multiple of ${o}. inputShape=${r} outputShape= ${t}`}function T7(r,t){let e=Ke(r),o=Ke(t);return`Input to reshape is a tensor with ${e} dense values, but the requested shape has ${o}. inputShape=${r} outputShape=${t}`}function E7(){return"segment ids must be >= 0"}function N7(){return"segment ids are not increasing"}function R7(r,t){return`Segment id ${r} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function $7(r,t,e){return`Bad: indices[${r}] == ${t} out of range [0, ${e})`}var p1={};dt(p1,{collectGatherOpShapeInfo:()=>D7,computeOutShape:()=>A7,segOpComputeOptimalWindowSize:()=>P7});function P7(r,t){let e=!1,o;for(r<=qf?(o=r,e=!0):o=Wa(r,Math.floor(Math.sqrt(r)));!e;)o>t||o===r?e=!0:o=Wa(r,o+1);return o}function A7(r,t,e){let o=[],n=r.length;for(let i=0;i<n;i++)i!==t?o.push(r[i]):o.push(e);return o}function D7(r,t,e,o){let n=t.shape.length,i=r.shape.length;if(o!==0&&(o<-n||o>n))throw new Error(`Expect batchDims in the range of [-${n}, ${n}], but got ${o}`);if(o<0&&(o+=n),o>i)throw new Error(`batchDims (${o}) must be less than rank(x) (
    ${i}).`);if(e<o)throw new Error(`batchDims (${o}) must be less than or equal to axis (${e}).`);for(let p=0;p<o;++p)if(r.shape[p]!==t.shape[p])throw new Error(`x.shape[${p}]: ${r.shape[p]} should be equal to indices.shape[${p}]: ${t.shape[p]}.`);let s=r.shape[e],a=[],l=1,u=1,c=1;for(let p=0;p<o;++p)a.push(r.shape[p]),l*=r.shape[p];for(let p=o;p<e;p++)a.push(r.shape[p]),u*=r.shape[p];for(let p=o;p<n;p++)a.push(t.shape[p]);for(let p=e+1;p<i;p++)a.push(r.shape[p]),c*=r.shape[p];return{batchSize:l,sliceSize:c,outerSize:u,dimSize:s,outputShape:a}}function F7(r){try{return r.map(t=>rc(t))}catch(t){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${t}`)}}function O7(r){return r.map(t=>tc(t))}var jr={};dt(jr,{nonMaxSuppressionV3Impl:()=>Df,nonMaxSuppressionV4Impl:()=>Ff,nonMaxSuppressionV5Impl:()=>Of,whereImpl:()=>Nf});_k();var L7=G();L7.registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,r=>{r&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")});var Xr=function(r){return r[r.DT_INVALID=0]="DT_INVALID",r[r.DT_FLOAT=1]="DT_FLOAT",r[r.DT_DOUBLE=2]="DT_DOUBLE",r[r.DT_INT32=3]="DT_INT32",r[r.DT_UINT8=4]="DT_UINT8",r[r.DT_INT16=5]="DT_INT16",r[r.DT_INT8=6]="DT_INT8",r[r.DT_STRING=7]="DT_STRING",r[r.DT_COMPLEX64=8]="DT_COMPLEX64",r[r.DT_INT64=9]="DT_INT64",r[r.DT_BOOL=10]="DT_BOOL",r[r.DT_QINT8=11]="DT_QINT8",r[r.DT_QUINT8=12]="DT_QUINT8",r[r.DT_QINT32=13]="DT_QINT32",r[r.DT_BFLOAT16=14]="DT_BFLOAT16",r[r.DT_QINT16=15]="DT_QINT16",r[r.DT_QUINT16=16]="DT_QUINT16",r[r.DT_UINT16=17]="DT_UINT16",r[r.DT_COMPLEX128=18]="DT_COMPLEX128",r[r.DT_HALF=19]="DT_HALF",r[r.DT_RESOURCE=20]="DT_RESOURCE",r[r.DT_VARIANT=21]="DT_VARIANT",r[r.DT_UINT32=22]="DT_UINT32",r[r.DT_UINT64=23]="DT_UINT64",r[r.DT_FLOAT_REF=101]="DT_FLOAT_REF",r[r.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",r[r.DT_INT32_REF=103]="DT_INT32_REF",r[r.DT_UINT8_REF=104]="DT_UINT8_REF",r[r.DT_INT16_REF=105]="DT_INT16_REF",r[r.DT_INT8_REF=106]="DT_INT8_REF",r[r.DT_STRING_REF=107]="DT_STRING_REF",r[r.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",r[r.DT_INT64_REF=109]="DT_INT64_REF",r[r.DT_BOOL_REF=110]="DT_BOOL_REF",r[r.DT_QINT8_REF=111]="DT_QINT8_REF",r[r.DT_QUINT8_REF=112]="DT_QUINT8_REF",r[r.DT_QINT32_REF=113]="DT_QINT32_REF",r[r.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",r[r.DT_QINT16_REF=115]="DT_QINT16_REF",r[r.DT_QUINT16_REF=116]="DT_QUINT16_REF",r[r.DT_UINT16_REF=117]="DT_UINT16_REF",r[r.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",r[r.DT_HALF_REF=119]="DT_HALF_REF",r[r.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",r[r.DT_VARIANT_REF=121]="DT_VARIANT_REF",r[r.DT_UINT32_REF=122]="DT_UINT32_REF",r[r.DT_UINT64_REF=123]="DT_UINT64_REF",r}(Xr||{}),jk;(function(r){let t;(function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"})(t=r.CheckpointFormatVersion||(r.CheckpointFormatVersion={}))})(jk||(jk={}));var B7={};function Xf(r){return B7[r]}function w(r,t,e,o,n){let i=t.inputParams[r];if(i&&i.inputIndexStart!==void 0){let a=i.inputIndexStart,l=i.inputIndexEnd===0?void 0:i.inputIndexEnd===void 0?a+1:i.inputIndexEnd,u=a<0?t.inputNames.length+a:a;if(i.type==="tensor")return Mt(t.inputNames[u],e,o,n);if(i.type==="tensors"){let d=t.inputs.slice(a,l);return t.inputNames.slice(a,l).filter((f,g)=>{var x;return((x=d[g])===null||x===void 0?void 0:x.op)!=="NoOp"}).map(f=>Mt(f,e,o,n))}let c=Mt(t.inputNames[u],e,o,n),p=c.dataSync();return i.type==="number"?p[0]:S.toNestedArray(c.shape,p)}let s=t.attrParams[r];return s&&s.value}function Mt(r,t,e,o){let[n,i]=Cr(r,e);if(o!=null){let a=o.getHashTableHandleByName(n);if(a!=null)return a}let s=e.currentContextIds.find(a=>!!t[Yf(n,a)]);return s!==void 0?t[Yf(n,s)][i]:void 0}function d1(r,t,e){return t[Yf(r,e.currentContextId)]}function Uo(r,t){let[e,o,n]=Cr(r,t);return[Yf(e,t&&t.currentContextId),o,n]}function Yf(r,t){return t?`${r}-${t}`:r}function Cr(r,t){if(r==="")return["",0,void 0];let e=t!=null&&t.parseNodeNameCache!=null;if(e){let i=t.parseNodeNameCache.get(r);if(i!=null)return i}let o=r.split(":"),n;if(o.length===1)n=[r,0,void 0];else{let i=o[0],s=o.length===3?o[1]:void 0,a=Number(o[o.length-1]);n=[i,a,s]}return e&&t.parseNodeNameCache.set(r,n),n}function Ap(r,t,e){let o=w("pad",r,t,e);if(o==="explicit"){o=w("explicitPaddings",r,t,e);let n=[[0,0],[0,0],[0,0],[0,0]];for(let i=0;i<4;i++)n[i][0]=o[i*2],n[i][1]=o[i*2+1];return n}return o}function Go(r){return r.kept?r:Hr(r)}var m1={};dt(m1,{json:()=>V7});var V7=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var f1={};dt(f1,{json:()=>W7});var W7=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsFinite",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsInf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var h1={};dt(h1,{json:()=>z7});var z7=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}];var g1={};dt(g1,{json:()=>U7});var U7=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}];var x1={};dt(x1,{json:()=>G7});var G7=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniformInt",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number"},{tfName:"maxval",name:"maxval",type:"number"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}];var y1={};dt(y1,{json:()=>H7});var H7=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var v1={};dt(v1,{json:()=>K7});var K7=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}];var b1={};dt(b1,{json:()=>q7});var q7=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}];var S1={};dt(S1,{json:()=>j7});var j7=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"InitializeTable",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]},{tfOpName:"InitializeTableV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]}];var w1={};dt(w1,{json:()=>X7});var X7=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}];var _1={};dt(_1,{json:()=>Y7});var Y7=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BitwiseAnd",category:"logical",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}]}];var C1={};dt(C1,{json:()=>Q7});var Q7=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"MatrixBandPart",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"numLower",type:"tensor"},{start:1,name:"numUpper",type:"tensor"}]}];var k1={};dt(k1,{json:()=>Z7});var Z7=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]}];var I1={};dt(I1,{json:()=>J7});var J7=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}];var T1={};dt(T1,{json:()=>eH});var eH=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]},{tfOpName:"TensorScatterUpdate",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"values",type:"tensor"}]}];var E1={};dt(E1,{json:()=>tH});var tH=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}];var N1={};dt(N1,{json:()=>rH});var rH=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}];var R1={};dt(R1,{json:()=>oH});var oH=[{tfOpName:"StaticRegexReplace",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"pattern",name:"pattern",type:"string"},{tfName:"rewrite",name:"rewrite",type:"string"},{tfName:"replace_global",name:"replaceGlobal",type:"bool"}]},{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}];var $1={};dt($1,{json:()=>nH});var nH=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"EnsureShape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}];var Dp=class{static get Instance(){return this._instance||(this._instance=new this)}constructor(){let t=[m1,f1,h1,g1,x1,y1,v1,b1,S1,w1,_1,C1,k1,I1,T1,E1,N1,R1,$1],e=[].concat(...t.map(o=>o.json));this.opMappers=e.reduce((o,n)=>(o[n.tfOpName]=n,o),{})}transformGraph(t,e={}){let o=t.node,n=[],i=[],s=[],a=o.reduce((g,x)=>(g[x.name]=this.mapNode(x),x.op.startsWith("Placeholder")?n.push(g[x.name]):x.op==="Const"?i.push(g[x.name]):(x.input==null||x.input.length===0)&&s.push(g[x.name]),g),{}),l=[],u=[],c={},p={};e!=null&&(c=this.mapSignatureEntries(e.inputs),p=this.mapSignatureEntries(e.outputs));let d=Object.keys(a);d.forEach(g=>{let x=a[g];x.inputNames.forEach((y,b)=>{let[T,,R]=Uo(y),M=a[T];if(M.outputs!=null){let V=M.outputs.indexOf(R);if(V!==-1){let z=`${T}:${V}`;x.inputNames[b]=z}}x.inputs.push(M),M.children.push(x)})}),Object.keys(p).length===0?d.forEach(g=>{let x=a[g];x.children.length===0&&u.push(x)}):Object.keys(p).forEach(g=>{let[x]=Uo(g),y=a[x];y!=null&&(y.signatureKey=p[g],u.push(y))}),Object.keys(c).length>0?Object.keys(c).forEach(g=>{let[x]=Uo(g),y=a[x];y&&(y.signatureKey=c[g],l.push(y))}):l=n;let m={};t.library!=null&&t.library.function!=null&&(m=t.library.function.reduce((g,x)=>(g[x.signature.name]=this.mapFunction(x),g),{}));let f={nodes:a,inputs:l,outputs:u,weights:i,placeholders:n,signature:e,functions:m};return s.length>0&&(f.initNodes=s),f}mapSignatureEntries(t){return Object.keys(t||{}).reduce((e,o)=>(e[t[o].name]=o,e),{})}mapNode(t){let e=Xf(t.op)||this.opMappers[t.op]||{};t.attr==null&&(t.attr={});let o={name:t.name,op:t.op,category:e.category,inputNames:(t.input||[]).map(n=>n.startsWith("^")?n.slice(1):n),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:t.attr,outputs:e.outputs};return e.inputs!=null&&(o.inputParams=e.inputs.reduce((n,i)=>(n[i.name]={type:i.type,inputIndexStart:i.start,inputIndexEnd:i.end},n),{})),e.attrs!=null&&(o.attrParams=e.attrs.reduce((n,i)=>{let s=i.type,a;switch(i.type){case"string":a=Qf(t.attr,i.tfName,i.defaultValue),a===void 0&&i.tfDeprecatedName&&(a=Qf(t.attr,i.tfDeprecatedName,i.defaultValue));break;case"string[]":a=nh(t.attr,i.tfName,i.defaultValue),a===void 0&&i.tfDeprecatedName&&(a=nh(t.attr,i.tfDeprecatedName,i.defaultValue));break;case"number":a=Jf(t.attr,i.tfName,i.defaultValue||0),a===void 0&&i.tfDeprecatedName&&(a=Jf(t.attr,i.tfDeprecatedName,i.defaultValue));break;case"number[]":a=oh(t.attr,i.tfName,i.defaultValue),a===void 0&&i.tfDeprecatedName&&(a=oh(t.attr,i.tfDeprecatedName,i.defaultValue));break;case"bool":a=Zf(t.attr,i.tfName,i.defaultValue),a===void 0&&i.tfDeprecatedName&&(a=Zf(t.attr,i.tfDeprecatedName,i.defaultValue));break;case"bool[]":a=sh(t.attr,i.tfName,i.defaultValue),a===void 0&&i.tfDeprecatedName&&(a=sh(t.attr,i.tfDeprecatedName,i.defaultValue));break;case"shape":a=rh(t.attr,i.tfName,i.defaultValue),a===void 0&&i.tfDeprecatedName&&(a=rh(t.attr,i.tfDeprecatedName,i.defaultValue));break;case"shape[]":a=ih(t.attr,i.tfName,i.defaultValue),a===void 0&&i.tfDeprecatedName&&(a=ih(t.attr,i.tfDeprecatedName,i.defaultValue));break;case"dtype":a=eh(t.attr,i.tfName,i.defaultValue),a===void 0&&i.tfDeprecatedName&&(a=eh(t.attr,i.tfDeprecatedName,i.defaultValue));break;case"dtype[]":a=th(t.attr,i.tfName,i.defaultValue),a===void 0&&i.tfDeprecatedName&&(a=th(t.attr,i.tfDeprecatedName,i.defaultValue));break;case"func":a=Xk(t.attr,i.tfName,i.defaultValue),a===void 0&&i.tfDeprecatedName&&(a=Xk(t.attr,i.tfDeprecatedName,i.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${i.type} for op: ${t.op}`)}return n[i.name]={value:a,type:s},n},{})),o}mapFunction(t){let e=t.nodeDef,o=[],n=[],i={};e!=null&&(i=e.reduce((p,d)=>(p[d.name]=this.mapNode(d),d.op==="Const"&&n.push(p[d.name]),p),{}));let s=[],a=[];t.signature.inputArg.forEach(p=>{let[d]=Uo(p.name),m={name:d,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:P1(p.type),type:"dtype"}},children:[]};m.signatureKey=p.name,s.push(m),i[d]=m}),Object.keys(i).forEach(p=>{let d=i[p];d.inputNames.forEach((m,f)=>{let[g,,x]=Uo(m),y=i[g];if(y.outputs!=null){let b=y.outputs.indexOf(x);if(b!==-1){let T=`${g}:${b}`;d.inputNames[f]=T}}d.inputs.push(y),y.children.push(d)})});let u=t.ret;t.signature.outputArg.forEach(p=>{let[d,m]=Uo(u[p.name]),f=i[d];f!=null&&(f.defaultOutput=m,a.push(f))});let c=this.mapArgsToSignature(t);return{nodes:i,inputs:s,outputs:a,weights:n,placeholders:o,signature:c}}mapArgsToSignature(t){return{methodName:t.signature.name,inputs:t.signature.inputArg.reduce((e,o)=>(e[o.name]=this.mapArgToTensorInfo(o),e),{}),outputs:t.signature.outputArg.reduce((e,o)=>(e[o.name]=this.mapArgToTensorInfo(o,t.ret),e),{})}}mapArgToTensorInfo(t,e){let o=t.name;return e!=null&&(o=e[o]),{name:o,dtype:t.type}}};function iH(r){let t=G().global;if(typeof t.atob<"u")return t.atob(r);if(typeof Buffer<"u")return new Buffer(r,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}function Yk(r,t){let e=Array.isArray(r)?String.fromCharCode.apply(null,r):iH(r);return t?e:e.toLowerCase()}function Qf(r,t,e,o=!1){let n=r[t];return n!=null?Yk(n.s,o):e}function Zf(r,t,e){let o=r[t];return o?o.b:e}function Jf(r,t,e){let o=r[t]||{},n=o.i!=null?o.i:o.f!=null?o.f:e;return typeof n=="number"?n:parseInt(n,10)}function P1(r){switch(typeof r=="string"&&(r=Xr[r]),r){case Xr.DT_FLOAT:case Xr.DT_HALF:return"float32";case Xr.DT_INT32:case Xr.DT_INT64:case Xr.DT_INT8:case Xr.DT_UINT8:return"int32";case Xr.DT_BOOL:return"bool";case Xr.DT_DOUBLE:return"float32";case Xr.DT_STRING:return"string";case Xr.DT_COMPLEX64:case Xr.DT_COMPLEX128:return"complex64";default:return null}}function Xk(r,t,e){let o=r[t];return o&&o.func?o.func.name:e}function eh(r,t,e){let o=r[t];return o&&o.type?P1(o.type):e}function th(r,t,e){let o=r[t];return o&&o.list&&o.list.type?o.list.type.map(n=>P1(n)):e}function Qk(r){if(!r.unknownRank)return r.dim!=null?r.dim.map(t=>typeof t.size=="number"?t.size:parseInt(t.size,10)):[]}function rh(r,t,e){let o=r[t];return o&&o.shape?Qk(o.shape):e}function oh(r,t,e){let o=r[t];return o?((o.list.f&&o.list.f.length?o.list.f:o.list.i)||[]).map(n=>typeof n=="number"?n:parseInt(n,10)):e}function nh(r,t,e,o=!1){let n=r[t];return n&&n.list&&n.list.s?n.list.s.map(i=>Yk(i,o)):e}function ih(r,t,e){let o=r[t];return o&&o.list&&o.list.shape?o.list.shape.map(n=>Qk(n)):e}function sh(r,t,e){let o=r[t];return o&&o.list&&o.list.b?o.list.b:e}var ah=class{constructor(t,e,o){this.node=t,this.tensorMap=e,this.context=o,this.inputs=[],this.attrs={},this.inputs=t.inputNames.map(n=>this.getInput(n)),t.rawAttrs!=null&&(this.attrs=Object.keys(t.rawAttrs).reduce((n,i)=>(n[i]=this.getAttr(i),n),{}))}getInput(t){return Mt(t,this.tensorMap,this.context)}getAttr(t,e){let o=this.node.rawAttrs[t];if(o.tensor!=null)return Mt(t,this.tensorMap,this.context);if(o.i!=null||o.f!=null)return Jf(this.node.rawAttrs,t,e);if(o.s!=null)return Qf(this.node.rawAttrs,t,e);if(o.b!=null)return Zf(this.node.rawAttrs,t,e);if(o.shape!=null)return rh(this.node.rawAttrs,t,e);if(o.type!=null)return eh(this.node.rawAttrs,t,e);if(o.list!=null){if(o.list.i!=null||o.list.f!=null)return oh(this.node.rawAttrs,t,e);if(o.list.s!=null)return nh(this.node.rawAttrs,t,e);if(o.list.shape!=null)return ih(this.node.rawAttrs,t,e);if(o.list.b!=null)return sh(this.node.rawAttrs,t,e);if(o.list.type!=null)return th(this.node.rawAttrs,t,e)}return e}};var Ze={};dt(Ze,{OP_SCOPE_SUFFIX:()=>Ny,abs:()=>Qt,acos:()=>lw,acosh:()=>uw,add:()=>he,addN:()=>cw,all:()=>pw,any:()=>dw,argMax:()=>Hm,argMin:()=>mw,asin:()=>fw,asinh:()=>hw,atan:()=>gw,atan2:()=>xw,atanh:()=>yw,avgPool:()=>Km,avgPool3d:()=>Sw,basicLSTMCell:()=>ww,batchNorm:()=>Vi,batchNorm2d:()=>Cw,batchNorm3d:()=>kw,batchNorm4d:()=>Iw,batchToSpaceND:()=>qm,bincount:()=>jm,bitwiseAnd:()=>Tw,booleanMaskAsync:()=>BU,broadcastArgs:()=>Ew,broadcastTo:()=>Wi,buffer:()=>Me,cast:()=>Ue,ceil:()=>Nw,clipByValue:()=>Xm,clone:()=>Hr,complex:()=>Nr,concat:()=>mt,concat1d:()=>Rw,concat2d:()=>$w,concat3d:()=>Pw,concat4d:()=>Aw,conv1d:()=>Dw,conv2d:()=>zi,conv2dTranspose:()=>Fw,conv3d:()=>Ow,conv3dTranspose:()=>Mw,cos:()=>Bw,cosh:()=>Vw,cosineWindow:()=>Rp,cumprod:()=>Ww,cumsum:()=>zw,denseBincount:()=>Uw,depthToSpace:()=>Gw,depthwiseConv2d:()=>uc,diag:()=>Hw,dilation2d:()=>Kw,div:()=>Fe,divNoNan:()=>jw,dot:()=>Xw,dropout:()=>QU,einsum:()=>Ui,elu:()=>Jm,enclosingPowerOfTwo:()=>Qy,ensureShape:()=>Yw,equal:()=>Zm,erf:()=>Qw,euclideanNorm:()=>e_,exp:()=>Pr,expandDims:()=>dr,expm1:()=>t_,eye:()=>ef,fft:()=>dc,fill:()=>pn,floor:()=>tf,floorDiv:()=>Gm,fused:()=>Zy,gather:()=>rf,gatherND:()=>XU,greater:()=>Ws,greaterEqual:()=>of,ifft:()=>Ks,imag:()=>Hi,image:()=>Un,inTopKAsync:()=>JU,irfft:()=>kf,isFinite:()=>r_,isInf:()=>o_,isNaN:()=>n_,leakyRelu:()=>nf,less:()=>Tp,lessEqual:()=>cc,linalg:()=>t8,linspace:()=>i_,localResponseNormalization:()=>s_,log:()=>Bn,log1p:()=>sf,logSigmoid:()=>l_,logSoftmax:()=>u_,logSumExp:()=>lf,logicalAnd:()=>zs,logicalNot:()=>uf,logicalOr:()=>cf,logicalXor:()=>c_,losses:()=>r8,lowerBound:()=>p_,matMul:()=>tt,max:()=>mn,maxPool:()=>df,maxPool3d:()=>d_,maxPoolWithArgmax:()=>m_,maximum:()=>mf,mean:()=>Us,meshgrid:()=>f_,min:()=>Ip,minimum:()=>Vn,mirrorPad:()=>ff,mod:()=>h_,moments:()=>g_,movingAverage:()=>zU,mul:()=>ae,multiRNNCell:()=>x_,multinomial:()=>y_,neg:()=>rr,norm:()=>Vs,notEqual:()=>hf,oneHot:()=>v_,ones:()=>fn,onesLike:()=>b_,op:()=>E,outerProduct:()=>S_,pad:()=>qr,pad1d:()=>w_,pad2d:()=>__,pad3d:()=>C_,pad4d:()=>k_,pool:()=>I_,pow:()=>Mn,prelu:()=>xf,print:()=>Um,prod:()=>T_,raggedGather:()=>E_,raggedRange:()=>N_,raggedTensorToTensor:()=>R_,rand:()=>$_,randomGamma:()=>X_,randomNormal:()=>wf,randomStandardNormal:()=>Y_,randomUniform:()=>pc,randomUniformInt:()=>Q_,range:()=>Ki,real:()=>Wn,reciprocal:()=>Z_,relu:()=>qi,relu6:()=>_f,reshape:()=>Y,reverse:()=>mo,reverse1d:()=>J_,reverse2d:()=>eC,reverse3d:()=>tC,reverse4d:()=>rC,rfft:()=>mc,round:()=>Cf,rsqrt:()=>oC,scalar:()=>Re,scatterND:()=>GU,searchSorted:()=>Ep,selu:()=>nC,separableConv2d:()=>iC,setdiff1dAsync:()=>sC,sigmoid:()=>Kr,sign:()=>aC,signal:()=>e8,sin:()=>lC,sinh:()=>uC,slice:()=>Oe,slice1d:()=>cC,slice2d:()=>pC,slice3d:()=>dC,slice4d:()=>mC,softmax:()=>fC,softplus:()=>af,spaceToBatchND:()=>gf,sparse:()=>o8,sparseToDense:()=>qU,spectral:()=>JG,split:()=>zn,sqrt:()=>$r,square:()=>Ut,squaredDifference:()=>If,squeeze:()=>ct,stack:()=>wr,step:()=>Tf,stridedSlice:()=>hC,string:()=>n8,sub:()=>$e,sum:()=>rt,tan:()=>gC,tanh:()=>kp,tensor:()=>br,tensor1d:()=>$t,tensor2d:()=>_r,tensor3d:()=>Ef,tensor4d:()=>xC,tensor5d:()=>yC,tensor6d:()=>vC,tensorScatterUpdate:()=>wC,tile:()=>Gi,topk:()=>_C,transpose:()=>$f,truncatedNormal:()=>CC,unique:()=>kC,unsortedSegmentSum:()=>IC,unstack:()=>fo,upperBound:()=>TC,variable:()=>EC,where:()=>po,whereAsync:()=>Rf,zeros:()=>Sr,zerosLike:()=>zt});var Zk=(r,t,e,o=Ze)=>{switch(r.op){case"BiasAdd":case"AddV2":case"Add":return[o.add(w("a",r,t,e),w("b",r,t,e))];case"AddN":return[o.addN(w("tensors",r,t,e))];case"FloorMod":case"Mod":return[o.mod(w("a",r,t,e),w("b",r,t,e))];case"Mul":return[o.mul(w("a",r,t,e),w("b",r,t,e))];case"RealDiv":case"Div":return[o.div(w("a",r,t,e),w("b",r,t,e))];case"DivNoNan":return[o.divNoNan(w("a",r,t,e),w("b",r,t,e))];case"FloorDiv":return[o.floorDiv(w("a",r,t,e),w("b",r,t,e))];case"Sub":return[o.sub(w("a",r,t,e),w("b",r,t,e))];case"Minimum":return[o.minimum(w("a",r,t,e),w("b",r,t,e))];case"Maximum":return[o.maximum(w("a",r,t,e),w("b",r,t,e))];case"Pow":return[o.pow(w("a",r,t,e),w("b",r,t,e))];case"SquaredDifference":return[o.squaredDifference(w("a",r,t,e),w("b",r,t,e))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var Jk=(r,t,e,o=Ze)=>{switch(r.op){case"Abs":case"ComplexAbs":return[o.abs(w("x",r,t,e))];case"Acos":return[o.acos(w("x",r,t,e))];case"Acosh":return[o.acosh(w("x",r,t,e))];case"Asin":return[o.asin(w("x",r,t,e))];case"Asinh":return[o.asinh(w("x",r,t,e))];case"Atan":return[o.atan(w("x",r,t,e))];case"Atan2":return[o.atan2(w("x",r,t,e),w("y",r,t,e))];case"Atanh":return[o.atanh(w("x",r,t,e))];case"Ceil":return[o.ceil(w("x",r,t,e))];case"Complex":return[o.complex(w("real",r,t,e),w("imag",r,t,e))];case"Cos":return[o.cos(w("x",r,t,e))];case"Cosh":return[o.cosh(w("x",r,t,e))];case"Elu":return[o.elu(w("x",r,t,e))];case"Erf":return[o.erf(w("x",r,t,e))];case"Exp":return[o.exp(w("x",r,t,e))];case"Expm1":return[o.expm1(w("x",r,t,e))];case"Floor":return[o.floor(w("x",r,t,e))];case"Log":return[o.log(w("x",r,t,e))];case"Log1p":return[o.log1p(w("x",r,t,e))];case"Imag":return[o.imag(w("x",r,t,e))];case"Neg":return[o.neg(w("x",r,t,e))];case"Reciprocal":return[o.reciprocal(w("x",r,t,e))];case"Real":return[o.real(w("x",r,t,e))];case"Relu":return[o.relu(w("x",r,t,e))];case"Round":return[o.round(w("x",r,t,e))];case"Selu":return[o.selu(w("x",r,t,e))];case"Sigmoid":return[o.sigmoid(w("x",r,t,e))];case"Sin":return[o.sin(w("x",r,t,e))];case"Sign":return[o.sign(w("x",r,t,e))];case"Sinh":return[o.sinh(w("x",r,t,e))];case"Softplus":return[o.softplus(w("x",r,t,e))];case"Sqrt":return[o.sqrt(w("x",r,t,e))];case"Square":return[o.square(w("x",r,t,e))];case"Tanh":return[o.tanh(w("x",r,t,e))];case"Tan":return[o.tan(w("x",r,t,e))];case"ClipByValue":return[o.clipByValue(w("x",r,t,e),w("clipValueMin",r,t,e),w("clipValueMax",r,t,e))];case"Relu6":return[o.relu6(w("x",r,t,e))];case"Rsqrt":return[o.rsqrt(Mt(r.inputNames[0],t,e))];case"LeakyRelu":return[o.leakyRelu(w("x",r,t,e),w("alpha",r,t,e))];case"Prelu":return[o.prelu(w("x",r,t,e),w("alpha",r,t,e))];case"IsNan":return[o.isNaN(Mt(r.inputNames[0],t,e))];case"IsInf":return[o.isInf(Mt(r.inputNames[0],t,e))];case"IsFinite":return[o.isFinite(Mt(r.inputNames[0],t,e))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};function Yr(r,t,e=""){if(!(typeof r=="number"||typeof t=="number")){S.assert(r.length===t.length,()=>e+` Shapes ${r} and ${t} must match`);for(let o=0;o<r.length;o++){let n=r[o],i=t[o];S.assert(n<0||i<0||n===i,()=>e+` Shapes ${r} and ${t} must match`)}}}function eI(r){return!(typeof r=="number"||r.some(t=>t<0))}function hc(r,t,e){let o=lh(r,e),n=!eI(o);if(n&&t.length===0)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${o}`);if(n&&t.forEach(i=>{o=lh(i.shape,o)}),!eI(o))throw new Error(`Non-fully-defined elementShape: ${o}`);return o}function lh(r,t){if(typeof r=="number")return t;if(typeof t=="number")return r;if(r.length!==t.length)throw new Error(`Incompatible ranks during merge: ${r} vs. ${t}`);let e=[];for(let o=0;o<r.length;++o){let n=r[o],i=t[o];if(n>=0&&i>=0&&n!==i)throw new Error(`Incompatible shape during merge: ${r} vs. ${t}`);e[o]=n>=0?n:i}return e}var uh=class{constructor(t,e,o,n,i,s,a){this.name=t,this.dtype=e,this.maxSize=o,this.elementShape=n,this.identicalElementShapes=i,this.dynamicSize=s,this.clearAfterRead=a,this.tensors=[],this.closed_=!1,this.idTensor=Re(0),Rr(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(t){this.tensors.forEach(e=>{(t==null||!t.has(e.tensor.id))&&e.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(t<0||t>=this.size())throw new Error(`Tried to read from index ${t}, but array size is: ${this.size()}`);let e=this.tensors[t];if(e.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${t} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(e.cleared=!0),e.read=!0,e.tensor}readMany(t){return t.map(e=>this.read(e))}write(t,e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(t<0||!this.dynamicSize&&t>=this.maxSize)throw new Error(`Tried to write to index ${t}, but array is not resizeable and size is: ${this.maxSize}`);let o=this.tensors[t]||{};if(e.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t},
          because the value dtype is ${e.dtype}, but TensorArray dtype is ${this.dtype}.`);if(this.size()===0&&(this.elementShape==null||this.elementShape.length===0)&&(this.elementShape=e.shape),Yr(this.elementShape,e.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${t}.`),o.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t}, because it has already been read.`);if(o.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t}, because it has already been written.`);o.tensor=e,Rr(e),o.written=!0,this.tensors[t]=o}writeMany(t,e){if(t.length!==e.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${t.length} is not the same as tensors size: ${e.length}.`);t.forEach((o,n)=>this.write(o,e[n]))}gather(t,e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${e}`);if(t)t=t.slice(0,this.size());else{t=[];for(let n=0;n<this.size();n++)t.push(n)}if(t.length===0)return br([],[0].concat(this.elementShape));let o=this.readMany(t);return Yr(this.elementShape,o[0].shape,"TensorArray shape mismatch: "),wr(o,0)}concat(t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${t}`);if(this.size()===0)return br([],[0].concat(this.elementShape));let e=[];for(let n=0;n<this.size();n++)e.push(n);let o=this.readMany(e);return Yr(this.elementShape,o[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${o[0].shape})`),mt(o,0)}scatter(t,e){if(e.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${e.dtype}`);if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);let o=Math.max(...t);if(!this.dynamicSize&&o>=this.maxSize)throw new Error(`Max index must be < array size (${o}  vs. ${this.maxSize})`);this.writeMany(t,fo(e,0))}split(t,e){if(e.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${e.dtype}`);let o=0,n=t.map(l=>(o+=l,o));if(o!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${o}, and tensor's shape is: ${e.shape}`);if(!this.dynamicSize&&t.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${t.length}), and the TensorArray is not marked as dynamically resizeable`);let i=o===0?0:e.size/o,s=[];Ne(()=>{e=Y(e,[1,o,i]);for(let l=0;l<t.length;++l){let c=[0,l===0?0:n[l-1],0],p=[1,t[l],i];s[l]=Y(Oe(e,c,p),this.elementShape)}return s});let a=[];for(let l=0;l<t.length;l++)a[l]=l;this.writeMany(a,s)}};var gc=class r{get id(){return this.idTensor.id}constructor(t,e,o,n=-1){this.tensors=t,this.elementShape=e,this.elementDtype=o,t?.forEach(i=>{if(o!==i.dtype)throw new Error(`Invalid data types; op elements ${o}, but list elements ${i.dtype}`);Yr(e,i.shape,"TensorList shape mismatch: "),Rr(i)}),this.idTensor=Re(0),this.maxNumElements=n,Rr(this.idTensor)}copy(){return new r([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(t){this.tensors.forEach(e=>{(t==null||!t.has(e.id))&&e.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(t,e,o=-1){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);if(o!==-1&&this.tensors.length!==o)throw new Error(`Operation expected a list with ${o} elements but got a list with ${this.tensors.length} elements.`);Yr(t,this.elementShape,"TensorList shape mismatch: ");let n=hc(this.elementShape,this.tensors,t);return Ne(()=>{let i=this.tensors.map(s=>Y(s,n));return wr(i,0)})}popBack(t,e){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);if(this.size()===0)throw new Error("Trying to pop from an empty list.");let o=hc(this.elementShape,this.tensors,t),n=this.tensors.pop();return n.kept=!1,Yr(n.shape,t,"TensorList shape mismatch: "),Y(n,o)}pushBack(t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(Yr(t.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");Rr(t),this.tensors.push(t)}resize(t){if(t<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${t}`);if(this.maxNumElements!==-1&&t>this.maxNumElements)throw new Error(`TensorListResize input size ${t} is greater maxNumElement ${this.maxNumElements}.`);let e=new r([],this.elementShape,this.elementDtype,this.maxNumElements);e.tensors.length=t;for(let o=0;o<Math.min(this.tensors.length,t);++o)e.tensors[o]=this.tensors[o];return e}getItem(t,e,o){if(o!==this.elementDtype)throw new Error(`Invalid data types; op elements ${o}, but list elements ${this.elementDtype}`);if(t<0||t>this.tensors.length)throw new Error(`Trying to access element ${t} in a list with ${this.tensors.length} elements.`);if(this.tensors[t]==null)throw new Error(`element at index ${t} is null.`);Yr(this.tensors[t].shape,e,"TensorList shape mismatch: ");let n=hc(this.elementShape,this.tensors,e);return Y(this.tensors[t],n)}setItem(t,e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(t<0||this.maxNumElements!==-1&&t>=this.maxNumElements)throw new Error(`Trying to set element ${t} in a list with max ${this.maxNumElements} elements.`);Yr(this.elementShape,e.shape,"TensorList shape mismatch: "),Rr(e),this.tensors[t]!=null&&(this.tensors[t].kept=!1),this.tensors[t]=e}gather(t,e,o){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);Yr(this.elementShape,o,"TensorList shape mismatch: "),t=t.slice(0,this.size());let n=hc(this.elementShape,this.tensors,o);return t.length===0?br([],[0].concat(n)):Ne(()=>{let i=t.map(s=>Y(this.tensors[s],n));return wr(i,0)})}concat(t,e){if(t&&t!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${t}`);Yr(this.elementShape,e,"TensorList shape mismatch: ");let o=hc(this.elementShape,this.tensors,e);return this.size()===0?br([],[0].concat(o)):Ne(()=>{let n=this.tensors.map(i=>Y(i,o));return mt(n,0)})}};function tI(r,t,e){let o=r.dtype;if(r.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${r.shape}`);if(r.dtype!==e)throw new Error(`Invalid data types; op elements ${r.dtype}, but list elements ${e}`);let n=r.shape.slice(1);Yr(n,t,"TensorList shape mismatch: ");let i=fo(r);return new gc(i,t,o)}function rI(r,t,e,o){return new gc([],r,t,o)}function oI(r,t,e,o){if(t.length!==r.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${r.shape[0]}`);let n=Math.max(...t);if(o!=null&&o!==-1&&n>=o)throw new Error(`Max index must be < array size (${n}  vs. ${o})`);let i=new gc([],e,r.dtype,o),s=fo(r,0);return t.forEach((a,l)=>{i.setItem(a,s[l])}),i}function nI(r,t,e){let o=0,n=t.map(c=>(o+=c,o));if(o!==r.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${o}, and tensor's shape is: ${r.shape}`);let i=r.shape.slice(1),s=lh(i,e),a=o===0?0:r.size/o,l=Ne(()=>{let c=[];r=Y(r,[1,o,a]);for(let p=0;p<t.length;++p){let m=[0,p===0?0:n[p-1],0],f=[1,t[p],a];c[p]=Y(Oe(r,m,f),s)}return r.dispose(),c}),u=new gc([],e,r.dtype,t.length);for(let c=0;c<l.length;c++)u.setItem(c,l[c]);return u}var iI=(r,t,e)=>j(null,null,function*(){switch(r.op){case"If":case"StatelessIf":{let o=w("thenBranch",r,t,e),n=w("elseBranch",r,t,e),i=w("cond",r,t,e),s=w("args",r,t,e);return(yield i.data())[0]?e.functionMap[o].executeFunctionAsync(s,e.tensorArrayMap,e.tensorListMap):e.functionMap[n].executeFunctionAsync(s,e.tensorArrayMap,e.tensorListMap)}case"While":case"StatelessWhile":{let o=w("body",r,t,e),n=w("cond",r,t,e),i=w("args",r,t,e),s=yield e.functionMap[n].executeFunctionAsync(i,e.tensorArrayMap,e.tensorListMap),a=i.map(c=>c.id),l=yield s[0].data();s.forEach(c=>{!c.kept&&a.indexOf(c.id)===-1&&c.dispose()});let u=i;for(;l[0];){let c=u;u=yield e.functionMap[o].executeFunctionAsync(u,e.tensorArrayMap,e.tensorListMap);let p=u.map(m=>m.id);c.forEach(m=>{!m.kept&&a.indexOf(m.id)===-1&&p.indexOf(m.id)===-1&&m.dispose()});let d=yield e.functionMap[n].executeFunctionAsync(u,e.tensorArrayMap,e.tensorListMap);l=yield d[0].data(),d.forEach(m=>{!m.kept&&a.indexOf(m.id)===-1&&p.indexOf(m.id)===-1&&m.dispose()})}return u}case"LoopCond":{let o=w("pred",r,t,e);return[Go(o)]}case"Switch":{let o=w("pred",r,t,e),n=w("data",r,t,e);return n.kept||(n=Go(n)),(yield o.data())[0]?[void 0,n]:[n,void 0]}case"Merge":{let o=r.inputNames.find(n=>Mt(n,t,e)!==void 0);if(o){let n=Mt(o,t,e);return[Go(n)]}return}case"Enter":{let o=w("frameName",r,t,e),n=w("tensor",r,t,e);return e.enterFrame(o),[Go(n)]}case"Exit":{let o=w("tensor",r,t,e);return e.exitFrame(),[Go(o)]}case"NextIteration":{let o=w("tensor",r,t,e);return e.nextIteration(),[Go(o)]}case"TensorArrayV3":{let o=w("size",r,t,e),n=w("dtype",r,t,e),i=w("elementShape",r,t,e),s=w("dynamicSize",r,t,e),a=w("clearAfterRead",r,t,e),l=w("identicalElementShapes",r,t,e),u=w("name",r,t,e),c=new uh(u,n,o,i,l,s,a);return e.addTensorArray(c),[c.idTensor,Re(1)]}case"TensorArrayWriteV3":{let o=w("tensorArrayId",r,t,e),n=w("index",r,t,e),i=w("tensor",r,t,e),s=e.getTensorArray(o.id);return s.write(n,i),[s.idTensor]}case"TensorArrayReadV3":{let o=w("tensorArrayId",r,t,e),n=w("index",r,t,e);return[e.getTensorArray(o.id).read(n)]}case"TensorArrayGatherV3":{let o=w("tensorArrayId",r,t,e),n=w("indices",r,t,e),i=w("dtype",r,t,e);return[e.getTensorArray(o.id).gather(n,i)]}case"TensorArrayScatterV3":{let o=w("tensorArrayId",r,t,e),n=w("indices",r,t,e),i=w("tensor",r,t,e),s=e.getTensorArray(o.id);return s.scatter(n,i),[s.idTensor]}case"TensorArrayConcatV3":{let o=w("tensorArrayId",r,t,e),n=e.getTensorArray(o.id),i=w("dtype",r,t,e);return[n.concat(i)]}case"TensorArraySplitV3":{let o=w("tensorArrayId",r,t,e),n=w("tensor",r,t,e),i=w("lengths",r,t,e),s=e.getTensorArray(o.id);return s.split(i,n),[s.idTensor]}case"TensorArraySizeV3":{let o=w("tensorArrayId",r,t,e),n=e.getTensorArray(o.id);return[Re(n.size(),"int32")]}case"TensorArrayCloseV3":{let o=w("tensorArrayId",r,t,e),n=e.getTensorArray(o.id);return n.clearAndClose(),[n.idTensor]}case"TensorListSetItem":{let o=w("tensorListId",r,t,e),n=w("index",r,t,e),i=w("tensor",r,t,e),s=e.getTensorList(o.id);return s.setItem(n,i),[s.idTensor]}case"TensorListGetItem":{let o=w("tensorListId",r,t,e),n=w("index",r,t,e),i=w("elementShape",r,t,e),s=w("elementDType",r,t,e);return[e.getTensorList(o.id).getItem(n,i,s)]}case"TensorListScatterV2":case"TensorListScatter":{let o=w("indices",r,t,e),n=w("tensor",r,t,e),i=w("elementShape",r,t,e),s=w("numElements",r,t,e),a=oI(n,o,i,s);return e.addTensorList(a),[a.idTensor]}case"TensorListReserve":case"EmptyTensorList":{let o=w("elementShape",r,t,e),n=w("elementDType",r,t,e),i;r.op==="TensorListReserve"?i="numElements":i="maxNumElements";let s=w(i,r,t,e),a=r.op==="TensorListReserve"?-1:s,l=rI(o,n,s,a);return e.addTensorList(l),[l.idTensor]}case"TensorListGather":{let o=w("tensorListId",r,t,e),n=w("indices",r,t,e),i=w("elementShape",r,t,e),s=w("elementDType",r,t,e);return[e.getTensorList(o.id).gather(n,s,i)]}case"TensorListStack":{let o=w("tensorListId",r,t,e),n=w("elementShape",r,t,e),i=w("elementDType",r,t,e),s=w("numElements",r,t,e);return[e.getTensorList(o.id).stack(n,i,s)]}case"TensorListFromTensor":{let o=w("tensor",r,t,e),n=w("elementShape",r,t,e),i=w("elementDType",r,t,e),s=tI(o,n,i);return e.addTensorList(s),[s.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{let o=w("tensorListId",r,t,e),n=e.getTensorList(o.id),i=w("dtype",r,t,e),s=w("elementShape",r,t,e);return[n.concat(i,s)]}case"TensorListPushBack":{let o=w("tensorListId",r,t,e),n=w("tensor",r,t,e),i=e.getTensorList(o.id);return i.pushBack(n),[i.idTensor]}case"TensorListPopBack":{let o=w("tensorListId",r,t,e),n=w("elementShape",r,t,e),i=w("elementDType",r,t,e);return[e.getTensorList(o.id).popBack(n,i)]}case"TensorListSplit":{let o=w("tensor",r,t,e),n=w("elementShape",r,t,e),i=w("lengths",r,t,e),s=nI(o,i,n);return e.addTensorList(s),[s.idTensor]}case"TensorListLength":{let o=w("tensorListId",r,t,e),n=e.getTensorList(o.id);return[Re(n.size(),"int32")]}case"TensorListResize":{let o=w("tensorListId",r,t,e),n=w("size",r,t,e),s=e.getTensorList(o.id).resize(n);return e.addTensorList(s),[s.idTensor]}default:throw TypeError(`Node type ${r.op} is not implemented`)}});function sI(r,t,e){let[o,n]=w("fusedOps",r,t,e),i=o==="biasadd",s=!i,a=n==="prelu",l=o==="fusedbatchnorm",u=w("numArgs",r,t,e);if(i){if(a&&u!==2)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!a&&i&&u!==1)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(l)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");let c=w("strides",r,t,e),p=Ap(r,t,e),d=w("dataFormat",r,t,e).toUpperCase(),m=w("dilations",r,t,e),[f,g]=w("args",r,t,e);s&&(g=f,f=void 0);let x=w("leakyreluAlpha",r,t,e);return{stride:c,pad:p,dataFormat:d,dilations:m,biasArg:f,preluArg:g,activationFunc:n,leakyreluAlpha:x}}var aI=(r,t,e,o=Ze)=>{switch(r.op){case"Conv1D":{let n=w("stride",r,t,e),i=w("pad",r,t,e),s=w("dataFormat",r,t,e).toUpperCase(),a=w("dilation",r,t,e);return[o.conv1d(w("x",r,t,e),w("filter",r,t,e),n,i,s,a)]}case"Conv2D":{let n=w("strides",r,t,e),i=Ap(r,t,e),s=w("dataFormat",r,t,e).toUpperCase(),a=w("dilations",r,t,e);return[o.conv2d(w("x",r,t,e),w("filter",r,t,e),[n[1],n[2]],i,s,[a[1],a[2]])]}case"_FusedConv2D":{let{stride:n,pad:i,dataFormat:s,dilations:a,biasArg:l,preluArg:u,activationFunc:c,leakyreluAlpha:p}=sI(r,t,e);return[o.fused.conv2d({x:w("x",r,t,e),filter:w("filter",r,t,e),strides:[n[1],n[2]],pad:i,dataFormat:s,dilations:[a[1],a[2]],bias:l,activation:c,preluActivationWeights:u,leakyreluAlpha:p})]}case"FusedDepthwiseConv2dNative":{let{stride:n,pad:i,dataFormat:s,dilations:a,biasArg:l,preluArg:u,activationFunc:c,leakyreluAlpha:p}=sI(r,t,e);return[o.fused.depthwiseConv2d({x:w("x",r,t,e),filter:w("filter",r,t,e),strides:[n[1],n[2]],pad:i,dataFormat:s,dilations:[a[1],a[2]],bias:l,activation:c,preluActivationWeights:u,leakyreluAlpha:p})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{let n=w("outputShape",r,t,e),i=w("strides",r,t,e),s=Ap(r,t,e);return[o.conv2dTranspose(w("x",r,t,e),w("filter",r,t,e),n,[i[1],i[2]],s)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{let n=w("strides",r,t,e),i=Ap(r,t,e),s=w("dilations",r,t,e),a=w("dataFormat",r,t,e).toUpperCase();return[o.depthwiseConv2d(w("input",r,t,e),w("filter",r,t,e),[n[1],n[2]],i,a,[s[1],s[2]])]}case"Conv3D":{let n=w("strides",r,t,e),i=w("pad",r,t,e),s=w("dataFormat",r,t,e).toUpperCase(),a=w("dilations",r,t,e);return[o.conv3d(w("x",r,t,e),w("filter",r,t,e),[n[1],n[2],n[3]],i,s,[a[1],a[2],a[3]])]}case"AvgPool":{let n=w("strides",r,t,e),i=w("pad",r,t,e),s=w("kernelSize",r,t,e);return[o.avgPool(w("x",r,t,e),[s[1],s[2]],[n[1],n[2]],i)]}case"MaxPool":{let n=w("strides",r,t,e),i=w("pad",r,t,e),s=w("kernelSize",r,t,e);return[o.maxPool(w("x",r,t,e),[s[1],s[2]],[n[1],n[2]],i)]}case"MaxPoolWithArgmax":{let n=w("strides",r,t,e),i=w("pad",r,t,e),s=w("kernelSize",r,t,e),a=w("includeBatchInIndex",r,t,e),{result:l,indexes:u}=o.maxPoolWithArgmax(w("x",r,t,e),[s[1],s[2]],[n[1],n[2]],i,a);return[l,u]}case"AvgPool3D":{let n=w("strides",r,t,e),i=w("pad",r,t,e),s=w("kernelSize",r,t,e);return[o.avgPool3d(w("x",r,t,e),[s[1],s[2],s[3]],[n[1],n[2],n[3]],i)]}case"MaxPool3D":{let n=w("strides",r,t,e),i=w("pad",r,t,e),s=w("kernelSize",r,t,e);return[o.maxPool3d(w("x",r,t,e),[s[1],s[2],s[3]],[n[1],n[2],n[3]],i)]}case"Dilation2D":{let n=w("strides",r,t,e),i=w("pad",r,t,e),s=w("dilations",r,t,e),a=n[1],l=n[2],u=s[1],c=s[2];return[o.dilation2d(w("x",r,t,e),w("filter",r,t,e),[a,l],i,[u,c],"NHWC")]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var lI=(r,t,e,o=Ze)=>{switch(r.op){case"Fill":{let n=w("shape",r,t,e),i=w("dtype",r,t,e),s=w("value",r,t,e);return[o.fill(n,s,i)]}case"LinSpace":{let n=w("start",r,t,e),i=w("stop",r,t,e),s=w("num",r,t,e);return[o.linspace(n,i,s)]}case"Multinomial":{let n=w("logits",r,t,e),i=w("numSamples",r,t,e),s=w("seed",r,t,e);return[o.multinomial(n,i,s)]}case"OneHot":{let n=w("indices",r,t,e),i=w("depth",r,t,e),s=w("onValue",r,t,e),a=w("offValue",r,t,e),l=w("dtype",r,t,e);return[o.oneHot(n,i,s,a,l)]}case"Ones":return[o.ones(w("shape",r,t,e),w("dtype",r,t,e))];case"OnesLike":return[o.onesLike(w("x",r,t,e))];case"RandomStandardNormal":return[o.randomStandardNormal(w("shape",r,t,e),w("dtype",r,t,e),w("seed",r,t,e))];case"RandomUniform":return[o.randomUniform(w("shape",r,t,e),w("minval",r,t,e),w("maxval",r,t,e),w("dtype",r,t,e))];case"RandomUniformInt":return[o.randomUniformInt(w("shape",r,t,e),w("minval",r,t,e),w("maxval",r,t,e),w("seed",r,t,e))];case"Range":{let n=w("start",r,t,e),i=w("stop",r,t,e),s=w("step",r,t,e);return[o.range(n,i,s,w("dtype",r,t,e))]}case"TruncatedNormal":{let n=w("shape",r,t,e),i=w("mean",r,t,e),s=w("stdDev",r,t,e),a=w("seed",r,t,e);return[o.truncatedNormal(n,i,s,w("dtype",r,t,e),a)]}case"Zeros":return[o.zeros(w("shape",r,t,e),w("dtype",r,t,e))];case"ZerosLike":return[o.zerosLike(w("x",r,t,e))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};function A1(r,t,e){let o=w("boxes",r,t,e),n=w("scores",r,t,e),i=w("maxOutputSize",r,t,e),s=w("iouThreshold",r,t,e),a=w("scoreThreshold",r,t,e),l=w("softNmsSigma",r,t,e);return{boxes:o,scores:n,maxOutputSize:i,iouThreshold:s,scoreThreshold:a,softNmsSigma:l}}var uI=(i,s,a,l,...u)=>j(null,[i,s,a,l,...u],function*(r,t,e,o,n=Ze){switch(r.op){case"NonMaxSuppressionV5":{let{boxes:c,scores:p,maxOutputSize:d,iouThreshold:m,scoreThreshold:f,softNmsSigma:g}=A1(r,t,e),x=yield n.image.nonMaxSuppressionWithScoreAsync(c,p,d,m,f,g);return[x.selectedIndices,x.selectedScores]}case"NonMaxSuppressionV4":{let{boxes:c,scores:p,maxOutputSize:d,iouThreshold:m,scoreThreshold:f}=A1(r,t,e),g=w("padToMaxOutputSize",r,t,e),x=yield n.image.nonMaxSuppressionPaddedAsync(c,p,d,m,f,g);return[x.selectedIndices,x.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{let{boxes:c,scores:p,maxOutputSize:d,iouThreshold:m,scoreThreshold:f}=A1(r,t,e);return[yield n.image.nonMaxSuppressionAsync(c,p,d,m,f)]}case"Where":{let c=n.cast(w("condition",r,t,e),"bool"),p=[yield n.whereAsync(c)];return c.dispose(),p}case"ListDiff":return n.setdiff1dAsync(w("x",r,t,e),w("y",r,t,e));default:throw TypeError(`Node type ${r.op} is not implemented`)}});var cI=(r,t,e,o=Ze)=>{switch(r.op){case"LowerBound":{let n=w("sortedSequence",r,t,e),i=w("values",r,t,e);return[o.lowerBound(n,i)]}case"TopKV2":{let n=w("x",r,t,e),i=w("k",r,t,e),s=w("sorted",r,t,e),a=o.topk(n,i,s);return[a.values,a.indices]}case"UpperBound":{let n=w("sortedSequence",r,t,e),i=w("values",r,t,e);return[o.upperBound(n,i)]}case"Unique":{let n=w("x",r,t,e),i=o.unique(n);return[i.values,i.indices]}case"UniqueV2":{let n=w("x",r,t,e),i=w("axis",r,t,e),s=o.unique(n,i);return[s.values,s.indices]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var pI=(r,t,e,o=Ze)=>{switch(r.op){case"Const":return t[r.name];case"PlaceholderWithDefault":let n=w("default",r,t,e);return[Mt(r.name,t,e)||n];case"Placeholder":return[Mt(r.name,t,e)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{let c=w("x",r,t,e);return[Go(c)]}case"IdentityN":return w("x",r,t,e).map(c=>Go(c));case"Snapshot":let i=w("x",r,t,e);return[Go(i)];case"Shape":return[o.tensor1d(w("x",r,t,e).shape,"int32")];case"ShapeN":return w("x",r,t,e).map(c=>o.tensor1d(c.shape));case"Size":return[o.scalar(w("x",r,t,e).size,"int32")];case"Rank":return[o.scalar(w("x",r,t,e).rank,"int32")];case"NoOp":return[o.scalar(1)];case"Print":let s=w("x",r,t,e),a=w("data",r,t,e),l=w("message",r,t,e),u=w("summarize",r,t,e);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(l);for(let c=0;c<a.length;c++)console.log(Array.prototype.slice.call(a[c].dataSync()).slice(0,u));return[s];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var ch=class{get id(){return this.handle.id}constructor(t,e){this.keyDType=t,this.valueDType=e,this.handle=Re(0),this.tensorMap=new Map,Rr(this.handle)}clearAndClose(){this.tensorMap.forEach(t=>t.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return Re(this.size(),"int32")}import(t,e){return j(this,null,function*(){this.checkKeyAndValueTensor(t,e);let o=yield t.data();return this.tensorMap.forEach(n=>n.dispose()),this.tensorMap.clear(),Ne(()=>{let n=fo(e),i=o.length,s=n.length;S.assert(i===s,()=>`The number of elements doesn't match, keys has ${i} elements, the values has ${s} elements.`);for(let a=0;a<i;a++){let l=o[a],u=n[a];Rr(u),this.tensorMap.set(l,u)}return this.handle})})}find(t,e){return j(this,null,function*(){this.checkKeyAndValueTensor(t,e);let o=yield t.data();return Ne(()=>{let n=[];for(let i=0;i<o.length;i++){let s=o[i],a=this.findWithDefault(s,e);n.push(a)}return wr(n)})})}findWithDefault(t,e){let o=this.tensorMap.get(t);return o??e}checkKeyAndValueTensor(t,e){if(t.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${t.dtype}`);if(e.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${e.dtype}`)}};var dI=(r,t,e,o)=>j(null,null,function*(){switch(r.op){case"HashTable":case"HashTableV2":{let n=o.getHashTableHandleByName(r.name);if(n!=null)return[n];{let i=w("keyDType",r,t,e),s=w("valueDType",r,t,e),a=new ch(i,s);return o.addHashTable(r.name,a),[a.handle]}}case"InitializeTable":case"InitializeTableV2":case"LookupTableImport":case"LookupTableImportV2":{let n=w("tableHandle",r,t,e,o),i=w("keys",r,t,e),s=w("values",r,t,e);return[yield o.getHashTableById(n.id).import(i,s)]}case"LookupTableFind":case"LookupTableFindV2":{let n=w("tableHandle",r,t,e,o),i=w("keys",r,t,e),s=w("defaultValue",r,t,e);return[yield o.getHashTableById(n.id).find(i,s)]}case"LookupTableSize":case"LookupTableSizeV2":{let n=w("tableHandle",r,t,e,o);return[o.getHashTableById(n.id).tensorSize()]}default:throw TypeError(`Node type ${r.op} is not implemented`)}});var mI=(r,t,e,o=Ze)=>{switch(r.op){case"ResizeBilinear":{let n=w("images",r,t,e),i=w("size",r,t,e),s=w("alignCorners",r,t,e),a=w("halfPixelCenters",r,t,e);return[o.image.resizeBilinear(n,[i[0],i[1]],s,a)]}case"ResizeNearestNeighbor":{let n=w("images",r,t,e),i=w("size",r,t,e),s=w("alignCorners",r,t,e),a=w("halfPixelCenters",r,t,e);return[o.image.resizeNearestNeighbor(n,[i[0],i[1]],s,a)]}case"CropAndResize":{let n=w("image",r,t,e),i=w("boxes",r,t,e),s=w("boxInd",r,t,e),a=w("cropSize",r,t,e),l=w("method",r,t,e),u=w("extrapolationValue",r,t,e);return[o.image.cropAndResize(n,i,s,a,l,u)]}case"ImageProjectiveTransformV3":{let n=w("images",r,t,e),i=w("transforms",r,t,e),s=w("outputShape",r,t,e),a=w("fillValue",r,t,e),l=w("interpolation",r,t,e),u=w("fillMode",r,t,e);return[o.image.transform(n,i,l.toLowerCase(),u.toLowerCase(),a,s)]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var fI=(r,t,e,o=Ze)=>{switch(r.op){case"Equal":return[o.equal(w("a",r,t,e),w("b",r,t,e))];case"NotEqual":return[o.notEqual(w("a",r,t,e),w("b",r,t,e))];case"Greater":return[o.greater(w("a",r,t,e),w("b",r,t,e))];case"GreaterEqual":return[o.greaterEqual(w("a",r,t,e),w("b",r,t,e))];case"Less":return[o.less(w("a",r,t,e),w("b",r,t,e))];case"LessEqual":return[o.lessEqual(w("a",r,t,e),w("b",r,t,e))];case"LogicalAnd":return[o.logicalAnd(w("a",r,t,e),w("b",r,t,e))];case"LogicalNot":return[o.logicalNot(w("a",r,t,e))];case"LogicalOr":return[o.logicalOr(w("a",r,t,e),w("b",r,t,e))];case"Select":case"SelectV2":return[o.where(w("condition",r,t,e),w("a",r,t,e),w("b",r,t,e))];case"BitwiseAnd":return[o.bitwiseAnd(w("a",r,t,e),w("b",r,t,e))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var hI=(r,t,e,o=Ze)=>{switch(r.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[o.matMul(w("a",r,t,e),w("b",r,t,e),w("transposeA",r,t,e),w("transposeB",r,t,e))];case"Einsum":return[o.einsum(w("equation",r,t,e),...w("tensors",r,t,e))];case"Transpose":return[o.transpose(w("x",r,t,e),w("perm",r,t,e))];case"_FusedMatMul":let[n,i]=w("fusedOps",r,t,e),s=n==="biasadd",a=i==="prelu",l=w("numArgs",r,t,e),u=w("leakyreluAlpha",r,t,e);if(s){if(a&&l!==2)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!a&&l!==1)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}let[c,p]=w("args",r,t,e);return[o.fused.matMul({a:w("a",r,t,e),b:w("b",r,t,e),transposeA:w("transposeA",r,t,e),transposeB:w("transposeB",r,t,e),bias:c,activation:i,preluActivationWeights:p,leakyreluAlpha:u})];case"MatrixBandPart":return[o.linalg.bandPart(w("a",r,t,e),w("numLower",r,t,e),w("numUpper",r,t,e))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var gI=(r,t,e,o=Ze)=>{switch(r.op){case"EuclideanNorm":return[o.euclideanNorm(w("x",r,t,e),w("axis",r,t,e),w("keepDims",r,t,e))];case"FusedBatchNorm":case"FusedBatchNormV2":return[o.batchNorm(w("x",r,t,e),w("mean",r,t,e),w("variance",r,t,e),w("offset",r,t,e),w("scale",r,t,e),w("epsilon",r,t,e))];case"FusedBatchNormV3":return[o.batchNorm(w("x",r,t,e),w("mean",r,t,e),w("variance",r,t,e),w("offset",r,t,e),w("scale",r,t,e),w("epsilon",r,t,e))];case"LRN":return[o.localResponseNormalization(w("x",r,t,e),w("radius",r,t,e),w("bias",r,t,e),w("alpha",r,t,e),w("beta",r,t,e))];case"Softmax":return[o.softmax(w("x",r,t,e))];case"LogSoftmax":return[o.logSoftmax(w("x",r,t,e))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var xI=(r,t,e,o=Ze)=>{switch(r.op){case"RaggedGather":{let{outputNestedSplits:n,outputDenseValues:i}=o.raggedGather(w("paramsNestedSplits",r,t,e),w("paramsDenseValues",r,t,e),w("indices",r,t,e),w("outputRaggedRank",r,t,e));return n.concat(i)}case"RaggedRange":{let{rtNestedSplits:n,rtDenseValues:i}=o.raggedRange(w("starts",r,t,e),w("limits",r,t,e),w("splits",r,t,e));return[n,i]}case"RaggedTensorToTensor":return[o.raggedTensorToTensor(w("shape",r,t,e),w("values",r,t,e),w("defaultValue",r,t,e),w("rowPartitionTensors",r,t,e),w("rowPartitionTypes",r,t,e))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var yI=(r,t,e,o=Ze)=>{switch(r.op){case"Max":{let a=w("axis",r,t,e),l=w("keepDims",r,t,e);return[o.max(w("x",r,t,e),a,l)]}case"Mean":{let a=w("axis",r,t,e),l=w("keepDims",r,t,e);return[o.mean(w("x",r,t,e),a,l)]}case"Min":{let a=w("axis",r,t,e),l=w("keepDims",r,t,e);return[o.min(w("x",r,t,e),a,l)]}case"Sum":{let a=w("axis",r,t,e),l=w("keepDims",r,t,e);return[o.sum(w("x",r,t,e),a,l)]}case"All":{let a=w("axis",r,t,e),l=w("keepDims",r,t,e);return[o.all(w("x",r,t,e),a,l)]}case"Any":{let a=w("axis",r,t,e),l=w("keepDims",r,t,e);return[o.any(w("x",r,t,e),a,l)]}case"ArgMax":{let a=w("axis",r,t,e);return[o.argMax(w("x",r,t,e),a)]}case"ArgMin":{let a=w("axis",r,t,e);return[o.argMin(w("x",r,t,e),a)]}case"Prod":{let a=w("axis",r,t,e),l=w("keepDims",r,t,e);return[o.prod(w("x",r,t,e),a,l)]}case"Cumprod":{let a=w("axis",r,t,e),l=w("exclusive",r,t,e),u=w("reverse",r,t,e);return[o.cumprod(w("x",r,t,e),a,l,u)]}case"Cumsum":{let a=w("axis",r,t,e),l=w("exclusive",r,t,e),u=w("reverse",r,t,e);return[o.cumsum(w("x",r,t,e),a,l,u)]}case"Bincount":let n=w("x",r,t,e),i=w("weights",r,t,e),s=w("size",r,t,e);return[o.bincount(n,i,s)];case"DenseBincount":{let a=w("x",r,t,e),l=w("weights",r,t,e),u=w("size",r,t,e),c=w("binaryOutput",r,t,e);return[o.denseBincount(a,l,u,c)]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var vI=(r,t,e,o=Ze)=>{switch(r.op){case"ConcatV2":case"Concat":{let n=w("n",r,t,e),i=w("axis",r,t,e),s=w("tensors",r,t,e);return s=s.slice(0,n),[o.concat(s,i)]}case"Gather":{let n=w("x",r,t,e),i=w("indices",r,t,e);return[o.gather(n,o.cast(i,"int32"),0)]}case"GatherV2":{let n=w("axis",r,t,e),i=w("batchDims",r,t,e),s=w("x",r,t,e),a=w("indices",r,t,e);return[o.gather(s,o.cast(a,"int32"),n,i)]}case"Reverse":{let n=w("dims",r,t,e),i=[];for(let a=0;a<n.length;a++)n[a]&&i.push(a);let s=w("x",r,t,e);return[o.reverse(s,i)]}case"ReverseV2":{let n=w("axis",r,t,e),i=w("x",r,t,e);return[o.reverse(i,n)]}case"Slice":{let n=w("begin",r,t,e),i=w("size",r,t,e);return[o.slice(w("x",r,t,e),n,i)]}case"StridedSlice":{let n=w("begin",r,t,e),i=w("end",r,t,e),s=w("strides",r,t,e),a=w("beginMask",r,t,e),l=w("endMask",r,t,e),u=w("ellipsisMask",r,t,e),c=w("newAxisMask",r,t,e),p=w("shrinkAxisMask",r,t,e),d=w("x",r,t,e);return[o.stridedSlice(d,n,i,s,a,l,u,c,p)]}case"Pack":return Ne(()=>{let n=w("axis",r,t,e),i=w("tensors",r,t,e),s=i[0].shape,a=o.squeeze(i[0]).shape,l=i.map(u=>{let c=S.arraysEqual(u.shape,s);if(!c&&!S.arraysEqual(o.squeeze(u).shape,a))throw new Error("the input tensors shape does not match");return c?u:o.reshape(u,s)});return[o.stack(l,n)]});case"Unpack":{let n=w("axis",r,t,e),i=w("tensor",r,t,e);return o.unstack(i,n)}case"Tile":{let n=w("reps",r,t,e);return[o.tile(w("x",r,t,e),n)]}case"Split":case"SplitV":{let n=w("axis",r,t,e),i=w("numOrSizeSplits",r,t,e),s=w("x",r,t,e);return o.split(s,i,n)}case"ScatterNd":{let n=w("indices",r,t,e),i=w("values",r,t,e),s=w("shape",r,t,e);return[o.scatterND(n,i,s)]}case"GatherNd":{let n=w("x",r,t,e),i=w("indices",r,t,e);return[o.gatherND(n,i)]}case"SparseToDense":{let n=w("sparseIndices",r,t,e),i=w("outputShape",r,t,e),s=w("sparseValues",r,t,e),a=w("defaultValue",r,t,e);return[o.sparseToDense(n,s,i,s.dtype===a.dtype?a:o.cast(a,s.dtype))]}case"TensorScatterUpdate":{let n=w("indices",r,t,e),i=w("values",r,t,e),s=w("tensor",r,t,e);return[o.tensorScatterUpdate(s,n,i)]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var bI=(r,t,e,o=Ze)=>{switch(r.op){case"SparseFillEmptyRows":{let{outputIndices:n,outputValues:i,emptyRowIndicator:s,reverseIndexMap:a}=o.sparse.sparseFillEmptyRows(w("indices",r,t,e),w("values",r,t,e),w("denseShape",r,t,e),w("defaultValue",r,t,e));return[n,i,s,a]}case"SparseReshape":{let{outputIndices:n,outputShape:i}=o.sparse.sparseReshape(w("inputIndices",r,t,e),w("inputShape",r,t,e),w("newShape",r,t,e));return[n,i]}case"SparseSegmentMean":return[o.sparse.sparseSegmentMean(w("data",r,t,e),w("indices",r,t,e),w("segmentIds",r,t,e))];case"SparseSegmentSum":return[o.sparse.sparseSegmentSum(w("data",r,t,e),w("indices",r,t,e),w("segmentIds",r,t,e))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var SI=(r,t,e,o=Ze)=>{switch(r.op){case"FFT":return[o.fft(w("x",r,t,e))];case"IFFT":return[o.ifft(w("x",r,t,e))];case"RFFT":return[o.rfft(w("x",r,t,e))];case"IRFFT":return[o.irfft(w("x",r,t,e))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var wI=(r,t,e,o=Ze)=>{switch(r.op){case"StaticRegexReplace":return[o.string.staticRegexReplace(w("input",r,t,e),w("pattern",r,t,e),w("rewrite",r,t,e),w("replaceGlobal",r,t,e))];case"StringNGrams":{let{nGrams:n,nGramsSplits:i}=o.string.stringNGrams(w("data",r,t,e),w("dataSplits",r,t,e),w("separator",r,t,e),w("nGramWidths",r,t,e),w("leftPad",r,t,e),w("rightPad",r,t,e),w("padWidth",r,t,e),w("preserveShortSequences",r,t,e));return[n,i]}case"StringSplit":{let{indices:n,values:i,shape:s}=o.string.stringSplit(w("input",r,t,e),w("delimiter",r,t,e),w("skipEmpty",r,t,e));return[n,i,s]}case"StringToHashBucketFast":return[o.string.stringToHashBucketFast(w("input",r,t,e),w("numBuckets",r,t,e))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var _I=(r,t,e,o=Ze)=>{switch(r.op){case"Cast":return[o.cast(w("x",r,t,e),w("dtype",r,t,e))];case"ExpandDims":{let n=w("axis",r,t,e);return[o.expandDims(w("x",r,t,e),n)]}case"Squeeze":{let n=w("axis",r,t,e);return[o.squeeze(w("x",r,t,e),n)]}case"Reshape":return[o.reshape(w("x",r,t,e),w("shape",r,t,e))];case"EnsureShape":return[o.ensureShape(w("x",r,t,e),w("shape",r,t,e))];case"MirrorPad":return[o.mirrorPad(w("x",r,t,e),w("padding",r,t,e),w("mode",r,t,e))];case"PadV2":case"Pad":return[o.pad(w("x",r,t,e),w("padding",r,t,e),w("constantValue",r,t,e))];case"SpaceToBatchND":{let n=w("blockShape",r,t,e),i=w("paddings",r,t,e);return[o.spaceToBatchND(w("x",r,t,e),n,i)]}case"BatchToSpaceND":{let n=w("blockShape",r,t,e),i=w("crops",r,t,e);return[o.batchToSpaceND(w("x",r,t,e),n,i)]}case"DepthToSpace":{let n=w("blockSize",r,t,e),i=w("dataFormat",r,t,e).toUpperCase();return[o.depthToSpace(w("x",r,t,e),n,i)]}case"BroadcastTo":return[o.broadcastTo(w("x",r,t,e),w("shape",r,t,e))];case"BroadcastArgs":return[o.broadcastArgs(w("s0",r,t,e),w("s1",r,t,e))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};function D1(r,t,e,o,n=Ne){let i=((s,a,l)=>{switch(s.category){case"arithmetic":return n(()=>Zk(s,a,l));case"basic_math":return n(()=>Jk(s,a,l));case"control":return iI(s,a,l);case"convolution":return n(()=>aI(s,a,l));case"creation":return n(()=>lI(s,a,l));case"dynamic":return uI(s,a,l);case"evaluation":return n(()=>cI(s,a,l));case"image":return n(()=>mI(s,a,l));case"graph":return n(()=>pI(s,a,l));case"logical":return n(()=>fI(s,a,l));case"matrices":return n(()=>hI(s,a,l));case"normalization":return n(()=>gI(s,a,l));case"ragged":return n(()=>xI(s,a,l));case"reduction":return n(()=>yI(s,a,l));case"slice_join":return n(()=>vI(s,a,l));case"sparse":return n(()=>bI(s,a,l));case"spectral":return n(()=>SI(s,a,l));case"string":return n(()=>wI(s,a,l));case"transformation":return n(()=>_I(s,a,l));case"hash_table":return dI(s,a,l,o);case"custom":let u=Xf(s.op);if(u&&u.customExecutor)return u.customExecutor(new ah(s,a,l));throw TypeError(`Custom op ${s.op} is not registered.`);default:throw TypeError(`Unknown op '${s.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(r,t,e);return S.isPromise(i)?i.then(s=>[].concat(s)):[].concat(i)}var Fp=class{constructor(t={},e={},o={},n={},i){this.weightMap=t,this.tensorArrayMap=e,this.tensorListMap=o,this.functionMap=n,this.parseNodeNameCache=i,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(t,e){return{id:t,frameName:e,iterationId:0}}set currentContext(t){this.contexts!==t&&(this.contexts=t,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){let t=[];for(let e=0;e<this.contexts.length-1;e++){let o=this.contexts.slice(0,this.contexts.length-e);t.push(this.contextIdforContexts(o))}t.push(""),this._currentContextIds=t}contextIdforContexts(t){return t?t.map(e=>e.id===0&&e.iterationId===0?"":`${e.frameName}-${e.iterationId}`).join("/"):""}enterFrame(t){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,t)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(this.contexts&&this.contexts.length>1)this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift();else throw new Error("Cannot exit frame, the context is empty")}nextIteration(){if(this.contexts&&this.contexts.length>0){this.contexts=this.contexts.slice(),this.lastId++;let t=Object.assign({},this.contexts[this.contexts.length-1]);t.iterationId+=1,t.id=this.lastId,this.contexts.splice(-1,1,t),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}else throw new Error("Cannot increase frame iteration, the context is empty")}getWeight(t){return this.weightMap[t]}addTensorArray(t){this.tensorArrayMap[t.id]=t}getTensorArray(t){return this.tensorArrayMap[t]}addTensorList(t){this.tensorListMap[t.id]=t}getTensorList(t){return this.tensorListMap[t]}dispose(t){for(let e in this.tensorArrayMap)this.tensorArrayMap[e].clearAndClose(t);for(let e in this.tensorListMap)this.tensorListMap[e].clearAndClose(t)}};function F1(r,t,e,o){let n=new Set,i=[],s=null,a=null,l=new Set,u=new Set(Object.keys(r).map(d=>Cr(d)[0]));o=o||[];let c=new Set(o.map(d=>Cr(d.name)[0])),p=[...t];for(;p.length>0;){let d=p.pop();if((Xi(d)||$H(d)||PH(d))&&s==null&&(s=d,a=s.children.map(m=>m.name).filter(m=>n.has(m))),n.add(d.name),e[d.name]==null&&!u.has(d.name)&&!c.has(d.name)){if(d.inputs.length===0){i.push(d.name);continue}d.inputs.forEach(m=>{l.has(m.name)||(l.add(m.name),p.push(m))})}}return{inputs:r,outputs:t,usedNodes:n,missingInputs:i,dynamicNode:s,syncInputs:a}}function CI(r,t){let{usedNodes:e,inputs:o}=t,n=Object.keys(o).map(x=>Cr(x)[0]).map(x=>r.nodes[x]),i=r.initNodes||[],s=x=>e.has(typeof x=="string"?x:x.name);function a(x){return[...new Map(x.map(y=>[y.name,y])).values()]}let l=a([...n,...r.weights,...i]).filter(s),u=a([...l,...Object.values(r.nodes)]).filter(s),c=new Map(u.map(x=>[x.name,x])),p={};for(let x of u){p[x.name]=p[x.name]||0;for(let y of x.children)s(y)||(p[y.name]=Number.POSITIVE_INFINITY),p[y.name]=(p[y.name]||0)+1}let d=Object.entries(p).filter(([,x])=>x===0).map(([x])=>x),m=[...d];for(;d.length>0;){let x=d.pop(),y=c.get(x);for(let b of y.children.filter(s))--p[b.name]===0&&(m.push(b.name),d.push(b.name))}let f=m.map(x=>c.get(x)),g=IH(f,l);return TH(g,l),g}function IH(r,t){let e=new Map(r.map(s=>[s.name,s])),o=t.map(s=>s.name),n=new Set(o);for(;o.length>0;){let s=o.pop(),a=e.get(s);for(let l of a.children)!e.has(l.name)||n.has(l.name)||(n.add(l.name),o.push(l.name))}return r.filter(s=>n.has(s.name))}var xc=class extends Error{constructor(t){super(`NodesExecutionOrderError: ${t}`)}};function TH(r,t){let e=new Map(r.map((a,l)=>[a.name,l])),o=new Set(t.map(a=>a.name)),n=a=>o.has(typeof a=="string"?a:a.name),i=new Set(r.map(a=>a.name)),s=a=>i.has(typeof a=="string"?a:a.name);for(let a of r){for(let l of a.children.filter(s)){if(!e.has(l.name))throw new xc(`Child ${l.name} of node ${a.name} is unreachable.`);if(e.get(a.name)>e.get(l.name))throw new xc(`Node ${a.name} is scheduled to run after its child ${l.name}.`)}if(!n(a))for(let l of a.inputs){if(!e.has(l.name))throw new xc(`Input ${l.name} of node ${a.name} is unreachable.`);if(e.get(l.name)>e.get(a.name))throw new xc(`Node ${a.name} is scheduled to run before its input ${l.name}.`)}}}function kI(r){let t=new Map(r.map((a,l)=>[a.name,l])),e=Number.MAX_SAFE_INTEGER,o=r.map((a,l)=>Xi(a)?e:l),n=a=>{let l=o[t.get(a.name)];return l??-1},i=r.map((a,l)=>a.children.map(n).reduce((u,c)=>Math.max(u,c),o[l])),s=new Map;for(let a=0;a<r.length;++a){let l=i[a];if(l===e)continue;let u=r[a],c=r[l];s.has(c.name)||s.set(c.name,[]),s.get(c.name).push(u)}return s}var EH=new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),NH=new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),RH=new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]);function Xi(r){return EH.has(r.op)}function $H(r){return NH.has(r.op)}function PH(r){return RH.has(r.op)}var Op=class r{get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(t){let e=Object.keys(t).map(o=>t[o].map(n=>n.id));this._weightIds=[].concat(...e),this._weightMap=t}set resourceManager(t){this._resourceManager=t}get inputs(){return this._inputs.map(t=>({name:t.name,shape:t.attrParams.shape?t.attrParams.shape.value:void 0,dtype:t.attrParams.dtype?t.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(t=>({name:t.name,shape:t.attrParams.shape?t.attrParams.shape.value:void 0,dtype:t.attrParams.dtype?t.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(t=>t.signatureKey||t.name)}get outputNodes(){return this._outputs.map(t=>{let e=t.signatureKey||t.name;return t.defaultOutput?`${e}:${t.defaultOutput}`:e})}get functions(){return Object.keys(this._functions).reduce((t,e)=>(t[e]=this._functions[e].signature,t),{})}constructor(t,e){this.graph=t,this.parent=e,this.compiledMap=new Map,this.parseNodeNameCache=new Map,this._weightMap={},this.SEPARATOR=",",this._functions={},this._functionExecutorMap={},this.keepIntermediateTensors=!1,this._outputs=t.outputs,this._inputs=t.inputs,this._initNodes=t.initNodes,this._signature=t.signature,this._functions=t.functions,t.functions!=null&&Object.keys(t.functions).forEach(o=>{this._functionExecutorMap[o]=new r(t.functions[o],this)})}getCompilationKey(t,e){let o=t.map(i=>i.name).sort(),n=e.map(i=>i.name).sort();return o.join(this.SEPARATOR)+"--"+n.join(this.SEPARATOR)}compile(t,e){let o=F1(t,e,this.weightMap,this._initNodes),{missingInputs:n,dynamicNode:i,syncInputs:s}=o;if(i!=null)throw new Error(`This execution contains the node '${i.name}', which has the dynamic op '${i.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${s}]`);if(n.length>0){let u=e.map(p=>p.name),c=Object.keys(t);throw new Error(`Cannot compute the outputs [${u}] from the provided inputs [${c}]. Missing the following inputs: [${n}]`)}let a=CI(this.graph,o),l=kI(a);return{orderedNodes:a,nodeLiveUntilMap:l}}cloneAndKeepTensor(t){if(t==null)return null;let e=t.clone();return Rr(e),e}cloneTensorList(t){return t?t.map(o=>this.cloneAndKeepTensor(o)):null}cloneTensorMap(t){return Object.fromEntries(Object.entries(t).map(([e,o])=>[e,this.cloneTensorList(o)]))}execute(t,e){this.disposeIntermediateTensors(),t=this.mapInputs(t);let o=Object.keys(t).sort();this.checkInputs(t),this.checkInputShapeAndType(t),e=this.mapOutputs(e),this.checkOutputs(e);let n=o.map(d=>this.graph.nodes[Cr(d)[0]]),i=e.map(d=>Cr(d)[0]),s=new Set(i),a=i.map(d=>this.graph.nodes[d]);a.length===0&&(a=this._outputs);let l=this.getCompilationKey(n,a),u=this.compiledMap.get(l);u==null&&(u=this.compile(t,a),this.compiledMap.set(l,u));try{this.keepIntermediateTensors=G().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(d){this.keepIntermediateTensors=!1,console.warn(d.message)}let c={},p={};return Ne(()=>{let d=new Fp(this.weightMap,c,p,this.functionExecutorMap,this.parseNodeNameCache),m=Object.assign({},this.weightMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap)),Object.keys(t).forEach(y=>{let[b,T]=Cr(y,d),R=[];R[T]=t[y],m[b]=R,this.keepIntermediateTensors&&(this.clonedTensorsMap[b]=this.cloneTensorList(R))});let f=this.getFrozenTensorIds(m),{orderedNodes:g,nodeLiveUntilMap:x}=u;for(let y of g){if(m[y.name])continue;let b=D1(y,m,d,this._resourceManager);if(S.isPromise(b))throw new Error(`The execution of the op '${y.op}' returned a promise. Please use model.executeAsync() instead.`);m[y.name]=b,this.keepIntermediateTensors&&(this.clonedTensorsMap[y.name]=this.cloneTensorList(b)),this.checkTensorForDisposalWithNodeLiveUntilInfo(y,m,d,f,s,x.get(y.name))}return this.parent==null&&d.dispose(f),e.map(y=>Mt(y,m,d))})}getFrozenTensorIds(t){let e=[].concat.apply([],Object.keys(t).map(o=>t[o]).map(o=>o.map(n=>n.id)));return new Set(e)}checkTensorForDisposal(t,e,o,n,i,s,a){if(!(Xi(e)||s.has(t))){for(let l of o[t])l!=null&&(a[l.id]=(a[l.id]||0)+e.children.length);for(let l of e.inputs){if(Xi(l))continue;let u=d1(l.name,o,n);if(u!=null)for(let c of u){if(!c||c.kept||i.has(c.id))continue;let p=a[c.id];p===1?(c.dispose(),delete a[c.id]):p!=null&&a[c.id]--}}}}checkTensorForDisposalWithNodeLiveUntilInfo(t,e,o,n,i,s){function a(l){return Xi(l)||i.has(l.name)}if(!(Xi(t)||s==null))for(let l of s){if(a(l))continue;let u=d1(l.name,e,o);for(let c of u)!c||c.kept||n.has(c.id)||c.dispose()}}executeAsync(t,e){return j(this,null,function*(){return this._executeAsync(t,e)})}disposeIntermediateTensors(){this.clonedTensorsMap&&(Object.values(this.clonedTensorsMap).forEach(t=>{for(let e of t)e&&!e.isDisposed&&e.dispose()}),this.clonedTensorsMap=null)}getIntermediateTensors(){return this.clonedTensorsMap}_executeAsync(s,a){return j(this,arguments,function*(t,e,o=!1,n={},i={}){this.disposeIntermediateTensors(),o||(t=this.mapInputs(t),this.checkInputs(t),this.checkInputShapeAndType(t),e=this.mapOutputs(e),this.checkOutputs(e));try{this.keepIntermediateTensors=G().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(f){this.keepIntermediateTensors=!1,console.warn(f.message)}let l=new Fp(this.weightMap,n,i,this.functionExecutorMap,this.parseNodeNameCache);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap));let u=yield this.executeWithControlFlow(t,l,e,o),c=e.map(f=>Mt(f,u,l)),p=c.map(f=>f.id),d=Object.keys(t).map(f=>t[f].id),m=new Set([...p,...d,...this.weightIds]);return Object.values(u).forEach(f=>{f.forEach(g=>{g&&!g.isDisposed&&!m.has(g.id)&&g.dispose()})}),this.parent==null&&l.dispose(m),c})}executeFunctionAsync(t,e,o){return j(this,null,function*(){let n=t.reduce((i,s,a)=>(i[this.inputs[a].name]=s,i),{});return this._executeAsync(n,this.outputNodes,!0,e,o)})}executeWithControlFlow(t,e,o,n){return j(this,null,function*(){let i=Object.keys(t),s=i.map(R=>this.graph.nodes[Cr(R)[0]]),a=o.map(R=>Cr(R)[0]),l=new Set(a),u=a.map(R=>this.graph.nodes[R]);u.length===0&&(u=this._outputs);let{usedNodes:c,missingInputs:p,dynamicNode:d,syncInputs:m}=F1(t,u,this.weightMap,this._initNodes),f=[...s,...this.graph.weights,...this._initNodes||[]].map(R=>({node:R,contexts:e.currentContext})),g=Object.assign({},this.weightMap);Object.keys(t).forEach(R=>{let[M,V]=Cr(R),z=[];z[V]=t[R],g[M]=z});let x={},y=this.getFrozenTensorIds(g),b={};for(;f.length>0;){let R=this.processStack(s,f,e,g,b,y,l,x,c);yield Promise.all(R)}d==null&&!n&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");let T=u.filter(R=>!Xi(R)&&!Mt(R.name,g,e)).map(R=>R.name);if(T.length>0){let R="";throw d!=null&&(R=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${m}]`),new Error(`Cannot compute the outputs [${T}] from the provided inputs [${i}]. Consider providing the following inputs: [${p}]. ${R}`)}return g})}processStack(t,e,o,n,i,s,a,l,u){let c=[];for(;e.length>0;){let p=e.pop();o.currentContext=p.contexts;let d="";if(p.node.op==="Enter"&&w("isConstant",p.node,n,o)&&([d]=Uo(p.node.name,o)),n[p.node.name]==null){let m=D1(p.node,n,o,this._resourceManager);d||([d]=Uo(p.node.name,o));let f=o.currentContext;S.isPromise(m)?c.push(m.then(g=>(n[d]=g,this.keepIntermediateTensors&&(this.clonedTensorsMap[d]=this.cloneTensorList(g)),o.currentContext=f,this.checkTensorForDisposal(d,p.node,n,o,s,a,l),this.processChildNodes(p.node,e,o,n,i,u),g))):(n[d]=m,this.keepIntermediateTensors&&(this.clonedTensorsMap[d]=this.cloneTensorList(m)),this.checkTensorForDisposal(d,p.node,n,o,s,a,l),this.processChildNodes(p.node,e,o,n,i,u))}else this.processChildNodes(p.node,e,o,n,i,u)}return c}processChildNodes(t,e,o,n,i,s){t.children.forEach(a=>{let[l]=Uo(a.name,o);i[l]||!s.has(a.name)||(a.op==="Merge"?a.inputNames.some(u=>!!Mt(u,n,o))&&(i[l]=!0,e.push({contexts:o.currentContext,node:a})):a.inputNames.every(u=>!!Mt(u,n,o))&&(i[l]=!0,e.push({contexts:o.currentContext,node:a})))})}dispose(){Object.keys(this.weightMap).forEach(t=>this.weightMap[t].forEach(e=>e.dispose()))}checkInputShapeAndType(t){Object.keys(t).forEach(e=>{let o=t[e],[n]=Cr(e),i=this.graph.nodes[n];if(i.attrParams.shape&&i.attrParams.shape.value){let s=i.attrParams.shape.value,a=s.length===o.shape.length&&o.shape.every((l,u)=>s[u]===-1||s[u]===l);S.assert(a,()=>`The shape of dict['${i.name}'] provided in model.execute(dict) must be [${s}], but was [${o.shape}]`)}i.attrParams.dtype&&i.attrParams.dtype.value&&S.assert(o.dtype===i.attrParams.dtype.value,()=>`The dtype of dict['${i.name}'] provided in model.execute(dict) must be ${i.attrParams.dtype.value}, but was ${o.dtype}`)})}mapInputs(t){var e,o;let n={};for(let i in t){let s=(o=(e=this._signature)===null||e===void 0?void 0:e.inputs)===null||o===void 0?void 0:o[i];s!=null?n[s.name]=t[i]:n[i]=t[i]}return n}checkInputs(t){let e=Object.keys(t).filter(o=>{let[n]=Cr(o);return this.graph.nodes[n]==null});if(e.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${e}] that are not part of graph`)}mapOutputs(t){return t.map(e=>{var o,n;let i=(n=(o=this._signature)===null||o===void 0?void 0:o.outputs)===null||n===void 0?void 0:n[e];return i!=null?i.name:e},{})}checkOutputs(t){t.forEach(e=>{let[o]=Cr(e);if(!this.graph.nodes[o])throw new Error(`The output '${e}' is not found in the graph`)})}};var ph=class{constructor(t={},e={}){this.hashTableNameToHandle=t,this.hashTableMap=e}addHashTable(t,e){this.hashTableNameToHandle[t]=e.handle,this.hashTableMap[e.id]=e}getHashTableHandleByName(t){return this.hashTableNameToHandle[t]}getHashTableById(t){return this.hashTableMap[t]}dispose(){for(let t in this.hashTableMap)this.hashTableMap[t].clearAndClose(),delete this.hashTableMap[t];for(let t in this.hashTableNameToHandle)this.hashTableNameToHandle[t].dispose(),delete this.hashTableNameToHandle[t]}};var AH="?tfjs-format=file",DH="model.json",dh=class{get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}constructor(t,e={},o=Pp){this.modelUrl=t,this.loadOptions=e,this.version="n/a",this.io=o,e==null&&(this.loadOptions={}),this.resourceManager=new ph}findIOHandler(){let t=this.modelUrl;if(t.load!=null)this.handler=t;else if(this.loadOptions.requestInit!=null)this.handler=this.io.browserHTTPRequest(t,this.loadOptions);else{let e=this.io.getLoadHandlers(t,this.loadOptions);if(e.length===0)e.push(this.io.browserHTTPRequest(t,this.loadOptions));else if(e.length>1)throw new Error(`Found more than one (${e.length}) load handlers for URL '${[t]}'`);this.handler=e[0]}}load(){if(this.findIOHandler(),this.handler.load==null)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let t=this.handler.load();return S.isPromise(t)?t.then(e=>e.getWeightStream==null?this.loadSync(e):this.loadStreaming(e)):this.loadSync(t)}loadSync(t){let e=this.io.decodeWeights(t.weightData,t.weightSpecs);return this.loadWithWeightMap(t,e)}loadStreaming(t){return j(this,null,function*(){if(t.getWeightStream==null)throw new Error("Model artifacts missing streamWeights function");let e=yield Mm(t.getWeightStream(),t.weightSpecs);return this.loadWithWeightMap(t,e)})}loadWithWeightMap(t,e){this.artifacts=t;let o=this.artifacts.modelTopology,n=this.artifacts.signature;if(this.artifacts.userDefinedMetadata!=null){let i=this.artifacts.userDefinedMetadata;i.signature!=null&&(n=i.signature),i.structuredOutputKeys!=null&&(this.structuredOutputKeys=i.structuredOutputKeys)}if(this.signature=n,this.version=`${o.versions.producer}.${o.versions.minConsumer}`,this.executor=new Op(Dp.Instance.transformGraph(o,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(e),this.executor.resourceManager=this.resourceManager,t.modelInitializer!=null&&t.modelInitializer.node!=null){let i=Dp.Instance.transformGraph(t.modelInitializer);this.initializer=new Op(i),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializerSignature=t.initializerSignature}return!0}save(t,e){return j(this,null,function*(){if(typeof t=="string"){let o=this.io.getSaveHandlers(t);if(o.length===0)throw new Error(`Cannot find any save handlers for URL '${t}'`);if(o.length>1)throw new Error(`Found more than one (${o.length}) save handlers for URL '${t}'`);t=o[0]}if(t.save==null)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return t.save(this.artifacts)})}addStructuredOutputNames(t){if(this.structuredOutputKeys){let e=t instanceof at?[t]:t,o={};return e.forEach((n,i)=>o[this.structuredOutputKeys[i]]=n),o}return t}predict(t,e){let o=this.execute(t,this.outputNodes);return this.addStructuredOutputNames(o)}predictAsync(t,e){return j(this,null,function*(){let o=yield this.executeAsync(t,this.outputNodes);return this.addStructuredOutputNames(o)})}normalizeInputs(t){var e;if(!(t instanceof at)&&!Array.isArray(t)){let i=(e=this.signature)===null||e===void 0?void 0:e.inputs;if(i!=null)for(let s in i){let a=i[s];a.resourceId!=null&&(t[s]=this.resourceIdToCapturedInput[a.resourceId])}return t}t=Array.isArray(t)?t:[t];let o=Object.keys(this.resourceIdToCapturedInput).length;if(t.length+o!==this.inputNodes.length)throw new Error(`Input tensor count mismatch, the graph model has ${this.inputNodes.length-o} non-resource placeholders, while there are ${t.length} input tensors provided.`);let n=0;return this.inputNodes.reduce((i,s)=>{var a,l,u;let c=(u=(l=(a=this.signature)===null||a===void 0?void 0:a.inputs)===null||l===void 0?void 0:l[s])===null||u===void 0?void 0:u.resourceId;return c!=null?i[s]=this.resourceIdToCapturedInput[c]:i[s]=t[n++],i},{})}normalizeOutputs(t){return t=t||this.outputNodes,Array.isArray(t)?t:[t]}executeInitializerGraph(){return this.initializer==null?[]:this.initializerSignature==null?this.initializer.execute({},[]):this.initializer.execute({},Object.keys(this.initializerSignature.outputs))}executeInitializerGraphAsync(){return j(this,null,function*(){return this.initializer==null?[]:this.initializerSignature==null?this.initializer.executeAsync({},[]):this.initializer.executeAsync({},Object.keys(this.initializerSignature.outputs))})}setResourceIdToCapturedInput(t){if(this.resourceIdToCapturedInput={},this.initializerSignature){let e=this.initializerSignature.outputs,o=Object.keys(e);for(let n=0;n<o.length;n++){let i=o[n],s=e[i];this.resourceIdToCapturedInput[s.resourceId]=t[n]}}}execute(t,e){this.resourceIdToCapturedInput==null&&this.setResourceIdToCapturedInput(this.executeInitializerGraph()),t=this.normalizeInputs(t),e=this.normalizeOutputs(e);let o=this.executor.execute(t,e);return o.length>1?o:o[0]}executeAsync(t,e){return j(this,null,function*(){this.resourceIdToCapturedInput==null&&this.setResourceIdToCapturedInput(yield this.executeInitializerGraphAsync()),t=this.normalizeInputs(t),e=this.normalizeOutputs(e);let o=yield this.executor.executeAsync(t,e);return o.length>1?o:o[0]})}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(t){return Object.keys(t).reduce((e,o)=>(e[o]=[t[o]],e),{})}dispose(){this.executor.dispose(),this.initializer&&(this.initializer.dispose(),this.resourceIdToCapturedInput&&Ye(this.resourceIdToCapturedInput)),this.resourceManager.dispose()}};function Yi(o){return j(this,arguments,function*(r,t={},e=Pp){if(r==null)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");t==null&&(t={}),t.fromTFHub&&typeof r=="string"&&(r=FH(r));let n=new dh(r,t,e);return yield n.load(),n})}function FH(r){return r.endsWith("/")||(r=r+"/"),`${r}${DH}${AH}`}var ho=G();ho.registerFlag("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE",()=>15);ho.registerFlag("WEBGPU_CPU_FORWARD",()=>!0);ho.registerFlag("WEBGPU_MATMUL_PROGRAM_TYPE",()=>-1);ho.registerFlag("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE",()=>!0);ho.registerFlag("WEBGPU_USE_LOW_POWER_GPU",()=>!1);ho.registerFlag("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e3);ho.registerFlag("WEBGPU_USE_PROFILE_TOOL",()=>!1);ho.registerFlag("WEBGPU_IMPORT_EXTERNAL_TEXTURE",()=>!0);ho.registerFlag("WEBGPU_USE_NAIVE_CONV2D_DEBUG",()=>!1);ho.registerFlag("WEBGPU_THRESHOLD_TO_INCREASE_WORKGROUPS_FOR_MATMUL",()=>-1);ho.registerFlag("WEBGPU_CONV_SEPARATE_IM2COL_SHADER",()=>!1);ho.registerFlag("WEBGPU_PRINT_SHADER",()=>"");ho.registerFlag("WEBGPU_ENGINE_COMPILE_ONLY",()=>!1);var mh=class{constructor(t){t&&(this.vendor=t.vendor,this.architecture=t.architecture,this.intelGPUGeneration=this.getIntelGPUGeneration())}getIntelGPUGeneration(){if(this.isIntel()){if(this.architecture.startsWith("gen"))return Number(this.architecture.match(/\d+/));if(this.architecture.startsWith("xe"))return 12}return 0}isIntel(){return this.vendor==="intel"}};var fh=class{constructor(t){this.device=t,this.numUsedBuffers=0,this.numFreeBuffers=0,this.freeBuffers=new Map,this.usedBuffers=new Map,this.numBytesUsed=0,this.numBytesAllocated=0}acquireBuffer(t,e,o=!1,n=!0){let i,s=II(t,e);return n?(this.freeBuffers.has(s)||this.freeBuffers.set(s,[]),this.freeBuffers.get(s).length>0?(i=this.freeBuffers.get(s).pop(),this.numFreeBuffers--):(i=this.device.createBuffer({size:t,usage:e,mappedAtCreation:o}),this.numBytesAllocated+=t)):(i=this.device.createBuffer({size:t,usage:e,mappedAtCreation:o}),this.numBytesAllocated+=t),this.usedBuffers.has(s)||this.usedBuffers.set(s,[]),this.usedBuffers.get(s).push(i),this.numUsedBuffers++,this.numBytesUsed+=t,i}releaseBuffer(t,e=!0){if(this.freeBuffers.size===0)return;let o=t.size,n=t.usage,i=II(o,n),s=this.usedBuffers.get(i),a=s.indexOf(t);if(a<0)throw new Error("Cannot find the buffer in buffer manager");s[a]=s[s.length-1],s.pop(),this.numUsedBuffers--,this.numBytesUsed-=o,e?(this.freeBuffers.get(i).push(t),this.numFreeBuffers++):(t.destroy(),this.numBytesAllocated-=o)}getNumUsedBuffers(){return this.numUsedBuffers}getNumFreeBuffers(){return this.numFreeBuffers}dispose(){this.freeBuffers.forEach((t,e)=>{t.forEach(o=>{o.destroy()})}),this.usedBuffers.forEach((t,e)=>{t.forEach(o=>{o.destroy()})}),this.freeBuffers=new Map,this.usedBuffers=new Map,this.numUsedBuffers=0,this.numFreeBuffers=0,this.numBytesUsed=0,this.numBytesAllocated=0}};function II(r,t){return`${r}_${t}`}var hh=class{constructor(t){this.device=t,this.numUsedTextures=0,this.numFreeTextures=0,this.freeTextures=new Map,this.usedTextures=new Map,this.numBytesUsed=0,this.numBytesAllocated=0}acquireTexture(t,e,o,n){let i=EI(o),s=t*e*i,a=TI(t,e,o,n);if(this.freeTextures.has(a)||this.freeTextures.set(a,[]),this.usedTextures.has(a)||this.usedTextures.set(a,[]),this.numBytesUsed+=s,this.numUsedTextures++,this.freeTextures.get(a).length>0){this.numFreeTextures--;let u=this.freeTextures.get(a).shift();return this.usedTextures.get(a).push(u),u}this.numBytesAllocated+=s;let l=this.device.createTexture({size:[t,e],format:o,usage:n});return this.usedTextures.get(a).push(l),l}releaseTexture(t){if(this.freeTextures.size===0)return;let e=t.width,o=t.height,n=t.format,i=t.usage,s=TI(e,o,n,i);this.freeTextures.has(s)||this.freeTextures.set(s,[]),this.freeTextures.get(s).push(t),this.numFreeTextures++,this.numUsedTextures--;let a=this.usedTextures.get(s),l=a.indexOf(t);if(l<0)throw new Error("Cannot release a texture that was never provided by this texture manager");a.splice(l,1);let u=EI(n),c=e*o*u;this.numBytesUsed-=c}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){this.freeTextures.forEach((t,e)=>{t.forEach(o=>{o.destroy()})}),this.usedTextures.forEach((t,e)=>{t.forEach(o=>{o.destroy()})}),this.freeTextures=new Map,this.usedTextures=new Map,this.numUsedTextures=0,this.numFreeTextures=0,this.numBytesUsed=0,this.numBytesAllocated=0}};function TI(r,t,e,o){return`${r}_${t}_${e}_${o}`}function EI(r){if(r==="rgba8unorm")return 16;throw new Error(`${r} is not supported!`)}function NI(r,t){if(Math.max(...r)>5)throw new Error("Cannot symbolically compute strides for rank > 6 tensor.");let e=r.length,o="xyzwuv",n=r.map(s=>`${t}.${o[s]}`),i=new Array(e-1);i[e-2]=n[e-1];for(let s=e-3;s>=0;--s)i[s]=`(${i[s+1]} * ${n[s+1]})`;return i}var Qr=(r,t,e)=>e==="int32"?`atomicAdd(${r}, bitcast<i32>(${t}));`:`
          {
            var oldValue = 0;
            loop {
              let newValueF32 = bitcast<f32>(oldValue) + (${t});
              let newValue = bitcast<i32>(newValueF32);
              let res = atomicCompareExchangeWeak(${r}, oldValue, newValue);
              if res.exchanged {
                break;
              }
              oldValue = res.old_value;
            }
          }`;var Zi=function(r){return r[r.FROM_PIXELS=0]="FROM_PIXELS",r[r.DRAW=1]="DRAW",r}(Zi||{}),AI=(r,t,e,o,n)=>{let i={dtype:o.dtype,shape:o.shape},s=LH(e,i,t),a=r.createShaderModule({code:s,label:t.constructor.name}),l=G().get("WEBGPU_PRINT_SHADER");if(l!==""){l=l.toLowerCase();let u=l.split(",");(l==="all"||u.some(c=>t.shaderKey.toLowerCase().includes(c)))&&(console.group(t.shaderKey),console.debug(s),console.groupEnd())}return n?r.createComputePipelineAsync({compute:{module:a,entryPoint:"_start"},label:t.constructor.name,layout:"auto"}):r.createComputePipeline({compute:{module:a,entryPoint:"_start"},label:t.constructor.name,layout:"auto"})},ze=(r,t="f32")=>{switch(r){case 1:return`${t}`;case 2:return`vec2<${t}>`;case 3:return`vec3<${t}>`;case 4:return`vec4<${t}>`;default:throw new Error(`${r}-component ${t} is not supported.`)}};function ht(r){if(r<=1)return"i32";if(r===2)return"vec2<i32>";if(r===3)return"vec3<i32>";if(r===4)return"vec4<i32>";if(r===5)return"vec5";if(r===6)return"vec6";throw Error(`GPU for rank ${r} is not yet supported`)}function Eo(r){if(r===0)return"x";if(r===1)return"y";if(r===2)return"z";if(r===3)return"w";if(r===4)return"u";if(r===5)return"v";throw Error(`Index ${r} is not yet supported`)}function J(...r){let t;switch(r.length){case 0:t=`
        fn main()
      `;break;case 1:t=`
        fn main(${r[0]} : i32)
      `;break;default:throw Error("Unreachable")}return t}function RI(r,t){let e;return e=`
     ${OH(t)}
      fn _start(@builtin(local_invocation_id) LocalId : vec3<u32>,
                @builtin(global_invocation_id) GlobalId : vec3<u32>,
                @builtin(local_invocation_index) LocalIndex: u32,
                @builtin(workgroup_id) WorkgroupId : vec3<u32>,
                @builtin(num_workgroups) NumWorkgroups : vec3<u32>) {
        localId = LocalId;
        localIndex = LocalIndex;
        globalId = GlobalId;
        numWorkgroups = NumWorkgroups;
        workgroupId = WorkgroupId;
        ${r?"main(getGlobalIndex());":"main();"};
      }
    `,e}function OH(r){return`
  @compute @workgroup_size(${r.workgroupSize[0]}, ${r.workgroupSize[1]}, ${r.workgroupSize[2]})
`}function LH(r,t,e){let o=[],n=e.workgroupSize[0]*e.workgroupSize[1]*e.workgroupSize[2];if(e.outputComponent=e.outputComponent?e.outputComponent:1,o.push(`

      var<private> localId: vec3<u32>;
      var<private> localIndex: u32;
      var<private> globalId: vec3<u32>;
      var<private> numWorkgroups: vec3<u32>;
      var<private> workgroupId: vec3<u32>;

      // Only used when the y/z dimension of workgroup size is 1.
      fn getGlobalIndex() -> i32 {
        ${FI(e)?"  return i32(globalId.x);":`  return i32((workgroupId.z * numWorkgroups.x * numWorkgroups.y +
                workgroupId.y * numWorkgroups.x + workgroupId.x) * ${n}u +
                localIndex);
        `}
      }
    `),e.pixelsOpType!=null){let f=e.pixelsOpType===Zi.FROM_PIXELS?`@group(0) @binding(0) var<storage, read_write> result: array<${Qi(t.dtype,e.outputComponent)}>;`:`@group(0) @binding(1) var<storage, read> inBuf : array<${Qi(r[0].dtype,e.outputComponent)}>;`,g=t.shape.length===3?"vec2<i32>":"i32";o.push(`
        struct Uniform {
          outShapeStrides : ${g},
          size            : i32,
          numChannels     : i32,
          alpha           : f32,
        };

        ${f}
        @group(0) @binding(2) var<uniform> uniforms: Uniform;
      `);let x=PI(e);return[$I,o.join(`
`),Lp(t.shape),e.getUserCode(),RI(x,e)].join(`
`)}let i,s,a="struct Uniforms { NAN : f32, INFINITY : f32, ";e.variableNames.forEach((f,g)=>{let x=ht(r[g].shape.length);a+=`${f.charAt(0).toLowerCase()+f.slice(1)}Shape : ${x}, `,i=r[g].shape.length-1,s=ht(i),a+=`${f.charAt(0).toLowerCase()+f.slice(1)}ShapeStrides: ${s}, `});let l=ht(t.shape.length);a+=`outShape : ${l}, `,i=t.shape.length-1,s=ht(i),a+=`
         outShapeStrides: ${s}, `,e.size&&(a+="size : i32, "),e.uniforms&&(a+=e.uniforms),a+="};",a=HH(a),o.push(a),e.atomic?o.push(`
      @group(0) @binding(0) var<storage, read_write> result: array<atomic<i32>>;
    `):o.push(`
      @group(0) @binding(0) var<storage, read_write> result: array<${Qi(t.dtype,e.outputComponent)}>;
    `),e.variableNames.forEach((f,g)=>{o.push(`
      @group(0) @binding(${1+g}) var<storage, read> ${f}: array<${e.variableComponents?Qi(r[g].dtype,e.variableComponents[g]):Qi(r[g].dtype,e.outputComponent)}>;
        `)}),a!==""&&o.push(`
      @group(0) @binding(${1+e.variableNames.length}) var<uniform> uniforms: Uniforms;
      `);let u=zH(t.shape,e.dispatchLayout),c=[$I,o.join(`
`)+MH,Lp(t.shape),u,UH(t.shape.length)];e.atomic||c.push(GH(t.shape,t.dtype,e.outputComponent)),e.variableNames.forEach((f,g)=>{c.push(`${Lp(r[g].shape,f)}`)});let p=r.map((f,g)=>WH(f,t.shape,e.variableComponents?e.variableComponents[g]:e.outputComponent,e.dispatchLayout.x.length===t.shape.length)).join(`
`);c.push(p),c.push(e.getUserCode());let d=PI(e);return c.push(RI(d,e)),c.join(`
`)}function DI(r,t,e){let o=r.shaderKey;if(r.pixelsOpType!=null)return o;let n=[],i=[];t.forEach(c=>{n.push(c.shape),i.push(c.dtype)}),n.push(e.shape),i.push(e.dtype);let s=t.map(c=>$.getBroadcastDims(c.shape,e.shape)),a=t.map(c=>S.arraysEqual(c.shape,e.shape)).join("_"),l=s.map(c=>c.join("_")).join(";"),u=FI(r)?"flatDispatch":"";return o+="_"+(r.workgroupSize?r.workgroupSize.join(","):"")+n.map(c=>c.length).join(",")+i.join(",")+r.variableNames.join(",")+l+a+u,o}var $I=`
  struct vec5 {x: i32, y: i32, z: i32, w: i32, u: i32};
  struct vec6 {x: i32, y: i32, z: i32, w: i32, u: i32, v: i32};

  // Checks whether coordinates lie within the bounds of the shape.
  fn coordsInBounds2D(coord : vec2<i32>, shape : vec2<i32>) -> bool {
    return all(coord >= vec2<i32>(0)) && all(coord < shape);
  }
  fn coordsInBounds3D(coord : vec3<i32>, shape : vec3<i32>) -> bool {
    return all(coord >= vec3<i32>(0)) && all(coord < shape);
  }
  fn coordsInBounds4D(coord : vec4<i32>, shape : vec4<i32>) -> bool {
    return all(coord >= vec4<i32>(0)) && all(coord < shape);
  }

  fn getIndexFromCoords1D(coord : i32, shape : i32) -> i32 {
    return coord;
  }
  fn getIndexFromCoords2D(coords : vec2<i32>, shape : vec2<i32>) -> i32 {
    return dot(coords, vec2<i32>(shape.y, 1));
  }
  fn getIndexFromCoords3D(coords : vec3<i32>, shape : vec3<i32>) -> i32 {
    return dot(coords, vec3<i32>(shape.y * shape.z, shape.z, 1));
  }
  fn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {
    return dot(coords, vec4<i32>(
        shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));
  }
  fn getIndexFromCoords5D(coords : vec5, shape : vec5) -> i32 {
    let shapeStrides: vec5 = vec5(shape.y * shape.z * shape.w * shape.u, shape.z * shape.w * shape.u, shape.w * shape.u, shape.u, 1);
    return coords.x*shapeStrides.x + coords.y*shapeStrides.y + coords.z*shapeStrides.z + coords.w*shapeStrides.w + coords.u*shapeStrides.u;
  }
  fn getIndexFromCoords6D(coords : vec6, shape : vec6) -> i32 {
    let shapeStrides: vec6 = vec6(shape.y * shape.z * shape.w * shape.u * shape.v, shape.z * shape.w * shape.u * shape.v, shape.w * shape.u * shape.v, shape.u * shape.v, shape.v, 1);
    return coords.x*shapeStrides.x + coords.y*shapeStrides.y + coords.z*shapeStrides.z + coords.w*shapeStrides.w + coords.u*shapeStrides.u + coords.v*shapeStrides.v;
  }

  // NaN defination in IEEE 754-1985 is :
  //   - sign = either 0 or 1.
  //   - biased exponent = all 1 bits.
  //   - fraction = anything except all 0 bits (since all 0 bits represents infinity).
  // https://en.wikipedia.org/wiki/IEEE_754-1985#Representation_of_non-numbers
  fn isnan(val: f32) -> bool {
    let floatToUint: u32 = bitcast<u32>(val);
    return (floatToUint & 0x7fffffffu) > 0x7f800000u;
  }
  fn isnanVec4(val : vec4<f32>) -> vec4<bool> {
    let floatToUint: vec4<u32> = bitcast<vec4<u32>>(val);
    return (floatToUint & vec4<u32>(0x7fffffffu)) > vec4<u32>(0x7f800000u);
  }
`,MH=`
  fn isinf(val: f32) -> bool {
    return abs(val) == uniforms.INFINITY;
  }
`;function Lp(r,t=""){let e=r.length,o=t!==""?`get${t.charAt(0).toUpperCase()+t.slice(1)}CoordsFromIndex`:"getCoordsFromIndex",n=t!==""?`${t.charAt(0).toLowerCase()+t.slice(1)}ShapeStrides`:"outShapeStrides";if(e<=1)return`fn ${o}(index : i32) -> i32 { return index; }`;let i=S.computeStrides(r),s=ht(e),a=[];for(let u=0;u<e;u++)a.push(`d${u}`);if(i.length===1)return`    fn ${o}(index : i32) -> vec2<i32> {
      let d0 = index / uniforms.${n}; let d1 = index - d0 * uniforms.${n};
      return vec2<i32>(d0, d1);
    }`;let l;return l="var index2 = index;"+i.map((u,c)=>{let p=`let ${a[c]} = index2 / uniforms.${n}.${Eo(c)}`,d=c===i.length-1?`let ${a[c+1]} = index2 - ${a[c]} * uniforms.${n}.${Eo(c)}`:`index2 = index2 - ${a[c]} * uniforms.${n}.${Eo(c)}`;return`${p}; ${d};`}).join(""),`
    fn ${o}(index : i32) -> ${s} {
      ${l}
      return ${s}(${a.join(",")});
    }
  `}function BH(r,t){let e=r.name,o=r.shape.length,n=ht(o),i="get"+e.charAt(0).toUpperCase()+e.slice(1),s=["d0","d1","d2","d3","d4","d5"].slice(0,o),a=s.map(c=>`${c} : i32`).join(", ");if(o<1)return`
      fn ${i}() -> ${ze(t)} {
        return ${ze(t)}(${e}[0]);
      }
    `;let l=`uniforms.${e.charAt(0).toLowerCase()+e.slice(1)}Shape`,u=`${o}D`;return o===0&&(u="1D"),`
    fn ${i}(${a}) -> ${ze(t)} {
      return ${ze(t)}(${e}[getIndexFromCoords${u}(${n}(${s.join(",")}),
        ${l})${t===1?"":` / ${t}`}]);
    }
   `}function VH(r,t,e,o){let n=r.name,i=n.charAt(0).toUpperCase()+n.slice(1),s="get"+i+"ByOutput",a=r.shape.length,l=t.length,u=ht(l);if(S.arraysEqual(r.shape,t)&&o)return`
    fn ${s}Index(globalIndex : i32) -> ${ze(e)} {
      return ${ze(e)}(${n}[globalIndex]);
    }

    fn ${s}Coords(coords : ${u}) -> ${ze(e)} {
      return ${ze(e)}(${n}[${l>1?"getOutputIndexFromCoords(coords)":"coords"}${e===1?"":` / ${e}`}]);
    }
    `;let c=$.getBroadcastDims(r.shape,t),p=l-a,d="";if(a===0)return`
    fn ${s}Index(globalIndex : i32) -> ${ze(e)}{
      return get${i}();
    }

    fn ${s}Coords(coords : ${u}) -> ${ze(e)}{
      return get${i}();
    }
  `;l<2&&c.length>=1?d="coords = 0;":d=c.map(x=>`coords.${Eo(x+p)} = 0;`).join(`
`);let m="";if(l<2&&a>0)m="coords";else if(l>1){let x=ht(a),y=r.shape.map((b,T)=>`coords.${Eo(T+p)}`).join(", ");m=`${x}(${y})`}else m="coords";let f=`uniforms.${n.charAt(0).toLowerCase()+n.slice(1)}Shape`,g=`${a}D`;return`
  fn ${s}Index(globalIndex : i32) -> ${ze(e)} {
    var coords = getCoordsFromIndex(globalIndex);
    ${d}
    return ${ze(e)}(${n}[getIndexFromCoords${g}(${m}, ${f})${e===1?"":` / ${e}`}]);
  }

  fn ${s}Coords(coordsIn : ${u}) -> ${ze(e)} {
    var coords = coordsIn;
    ${d}
    return ${ze(e)}(${n}[getIndexFromCoords${g}(${m}, ${f})${e===1?"":` / ${e}`}]);
  }
`}function WH(r,t,e,o){let n=BH(r,e);return r.shape.length<=t.length&&(n+=VH(r,t,e,o)),n}function zH(r,t){let{x:e,y:o=[],z:n=[]}=t,i=r.length,s=e.length+o.length+n.length;if(s!==i)return"";if(e.length===i)return`fn getOutputCoords() -> ${ht(i)}{
    let globalIndex = getGlobalIndex();
    return getCoordsFromIndex(globalIndex);
  }
  `;let a="",l=[e,o,n];for(let d=0;d<l.length;d++){let m=l[d];if(m.length!==0)if(m.length===1)a+=`let d${m[0]} = i32(globalId[${d}]);`;else{let f=NI(m,"uniforms.outShape");a+=`var index${d} = i32(globalId[${d}]);`;for(let g=0;g<f.length;g++)a+=`let d${m[g]} = index${d} / ${f[g]};`,g===f.length-1?a+=`let d${m[g+1]} = index${d} - d${m[g]} * ${f[g]};`:a+=`index${d} = index${d} - d${m[g]} * ${f[g]};`}}let u=[];for(let d=0;d<s;d++)u.push(`d${d}`);let c=ht(s),p=`fn getOutputCoords() -> ${c} {
  ${a}
`;return u.length===0?p+=`return ${c}(0); }`:p+=`return ${c}(${u.join(",")}); }`,p}function UH(r){let t="";switch(r){case 0:case 1:t+=`
        fn getOutputIndexFromCoords(coords : i32) -> i32 {
          return coords;
        }
        `;break;case 2:t+=`
        fn getOutputIndexFromCoords(coords : vec2<i32>) -> i32 {
          return dot(coords, vec2<i32>(uniforms.outShapeStrides, 1));
        }
        `;break;case 3:t+=`
        fn getOutputIndexFromCoords(coords : vec3<i32>) -> i32 {
          return dot(coords, vec3<i32>(uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, 1));
        }
        `;break;case 4:t+=`
        fn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {
          return dot(coords, vec4<i32>(
            uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, uniforms.outShapeStrides.z, 1));
        }
        `;break;case 5:t+=`
        fn getOutputIndexFromCoords(coords : vec5) -> i32 {
          return coords.x * uniforms.outShapeStrides.x +
              coords.y * uniforms.outShapeStrides.y +
              coords.z * uniforms.outShapeStrides.z +
              coords.w * uniforms.outShapeStrides.w +
              coords.u;
        }
        `;break;case 6:t+=`
        fn getOutputIndexFromCoords(coords : vec6) -> i32 {
          return coords.x * uniforms.outShapeStrides.x +
              coords.y * uniforms.outShapeStrides.y +
              coords.z * uniforms.outShapeStrides.z +
              coords.w * uniforms.outShapeStrides.w +
              coords.u * uniforms.outShapeStrides.u +
              coords.v;
        }
        `;break;default:S.assert(!1,()=>`Unsupported ${r}D shape`);break}return t}function FI(r){return r.dispatch[1]===1&&r.dispatch[2]===1}function Qi(r,t=1){if(r==="float32")return ze(t,"f32");if(r==="int32"||r==="bool")return ze(t,"i32");throw new Error(`type ${r} is not supported.`)}function GH(r,t,e){let o=r.length,n=Qi(t,e),i=`fn setOutputAtIndex(flatIndex : i32, value : ${ze(e)}) {
      result[flatIndex] = ${n}(value);
    }

    fn setOutputAtIndexI32(flatIndex : i32, value : ${ze(e,"i32")}) {
      result[flatIndex] = ${n}(value);
    }
    `;if(o>=2){let s=["d0","d1","d2","d3","d4","d5"].slice(0,o),a=ht(o);i+=`
      fn setOutputAtCoords(${s.map(l=>`${l} : i32`).join(", ")}, value : ${ze(e)}) {
        let flatIndex = getOutputIndexFromCoords(${a}(${s.join(", ")}));
        setOutputAtIndex(flatIndex${e===1?"":` / ${e}`}, value);
      }
      fn setOutputAtCoordsI32(${s.map(l=>`${l} : i32`).join(", ")}, value : ${ze(e,"i32")}) {
        let flatIndex = getOutputIndexFromCoords(${a}(${s.join(", ")}));
        setOutputAtIndexI32(flatIndex${e===1?"":` / ${e}`}, value);
      }
    `}return i}function HH(r){let t=/(\w+)\s*:\s*vec(5|6)/g;r=r.replace(t,o=>"@align(16) "+o);let e=/vec(5|6)\s*,\s*(\w+)/g;return r=r.replace(e,(o,n,i)=>`vec${n}, @align(16) ${i}`),r}function PI(r){return!(r.dispatchLayout.hasOwnProperty("y")&&r.dispatchLayout.y.length!==0||r.dispatchLayout.hasOwnProperty("z")&&r.dispatchLayout.z.length!==0)}var Ji={};dt(Ji,{GPUBytesPerElement:()=>gh,MatMulProgramType:()=>Ho,assertNotComplex:()=>Wp,computeDispatch:()=>ee,computeWorkPerThreadForConv2d:()=>Bp,computeWorkgroupInfoForMatMul:()=>O1,computeWorkgroupSizeForConv2d:()=>Mp,flatDispatchLayout:()=>ie,isWebGPUSupported:()=>Vp,tilesFitEvenlyIntoShape:()=>qH});var Zs=r=>{let t=1;for(let e=0;e<r.length;e++)t*=r[e];return t};function qH(r,t){if(r.length!==t.length)throw new Error(`Cannot compute whether rank ${r.length} tiles fit evenly into rank ${t.length} shape - ranks must match.`);return t.every((e,o)=>e%r[o]===0)}function ee(r,t,e=[1,1,1],o=[1,1,1]){let[n,i,s]=[Math.ceil(Zs(r.x.map(a=>t[a]))/(e[0]*o[0])),r.y?Math.ceil(Zs(r.y.map(a=>t[a]))/(e[1]*o[1])):1,r.z?Math.ceil(Zs(r.z.map(a=>t[a]))/(e[2]*o[2])):1];return[n,i,s]}function O1(r,t,e,o=!1){let n=[8,8,1],i=[4,4,1];return o||(r<=8&&(i[1]=1),t<=16&&e<=16&&(n[0]=4)),{workgroupSize:n,elementsPerThread:i}}function Mp(r,t,e=!1){if(e)return[8,8,1];let o=Zs(r.x.map(i=>t[i])),n=Zs(r.y.map(i=>t[i]));return o<=4?[4,16,1]:n<=4?[16,4,1]:[16,16,1]}function Bp(r,t,e=!1){if(e)return[4,4,1];let o=Zs(r.x.map(i=>t[i])),n=Zs(r.y.map(i=>t[i]));return o<=4?[1,2,1]:n<=4?[2,1,1]:[2,2,1]}function ie(r){return{x:r.map((t,e)=>e)}}function gh(r){if(r==="float32"||r==="int32"||r==="bool"||r==="string")return 4;if(r==="complex64")return 8;throw new Error(`Unknown dtype ${r}`)}function Vp(){return!!(typeof globalThis<"u"&&globalThis.navigator&&globalThis.navigator.gpu)}function Wp(r,t){Array.isArray(r)||(r=[r]),r.forEach(e=>{e!=null&&S.assert(e.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the WebGPU backend.`)})}var Ho=function(r){return r[r.MatMulReduceProgram=0]="MatMulReduceProgram",r[r.MatMulSplitKProgram=1]="MatMulSplitKProgram",r[r.MatMulSmallOutputSizeProgram=2]="MatMulSmallOutputSizeProgram",r[r.MatMulPackedProgram=3]="MatMulPackedProgram",r[r.MatMulMax=4]="MatMulMax",r}(Ho||{});var jH=G().getNumber("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD"),XH=(r,t)=>{let e=r.limits.maxComputeWorkgroupsPerDimension,o=t.dispatchLayout,n=t.dispatch;if(n.every(s=>s<=e))return n;S.assert(n[0]>e&&o.y===void 0&&o.z===void 0,()=>"Dispatch size exceeds WebGPU limits in Y or Z dimension.");let i=Math.ceil(Math.sqrt(n[0]));return i>e?(i=Math.ceil(Math.cbrt(n[0])),S.assert(i<=e,()=>"Total dispatch size exceeds WebGPU maximum."),[i,i,i]):[i,i,1]},yc=(()=>{class r extends En{nextDataId(){return r.nextDataId++}constructor(e,o){if(super(),this.commandQueueOwnedIds=new WeakSet,this.dispatchCountInPass=0,this.disposed=!1,this.downloadWaitMs=0,this.tensorDataPendingDisposal=[],this.queryResolveBuffer=null,this.querySet=null,this.querySetCount=2,this.stagingPendingDisposal=[],this.uniformPendingDisposal=[],this.uploadWaitMs=0,this.hasReadSyncWarned=!1,this.hasTimestampQueryWarned=!1,!Vp())throw new Error("WebGPU is not supported on this device");this.pipelineCache={},this.device=e,this.queue=e.queue,this.commandEncoder=null,this.computePassEncoder=null,this.adapterInfo=new mh(o),this.supportTimestampQuery=this.device.features.has("timestamp-query"),this.thresholdToIncreaseWorkgroups=this.adapterInfo.intelGPUGeneration>=12?16:8,this.bufferManager=new fh(this.device),this.textureManager=new hh(this.device),this.tensorMap=new fs(this,cr()),G().getBool("WEBGPU_USE_PROFILE_TOOL")&&(this.dummyCanvas=document.createElement("canvas"),this.dummyCanvas.width=1,this.dummyCanvas.height=1,this.dummyContext=this.dummyCanvas.getContext("webgpu"),this.dummyContext.configure({device:e,format:"bgra8unorm"}),document.body.appendChild(this.dummyCanvas))}floatPrecision(){return 32}disposeData(e,o=!1){if(!this.tensorMap.has(e))return!0;let n=this.tensorMap.get(e);return o?n.refCount=0:n.refCount--,n.refCount>0?!1:(n.complexTensorInfos!=null&&(this.disposeData(n.complexTensorInfos.real.dataId),this.disposeData(n.complexTensorInfos.imag.dataId)),this.commandQueueOwnedIds.has(e)?(this.tensorDataPendingDisposal.push(e),!0):(this.releaseResource(e),this.tensorMap.delete(e),!0))}memory(){return{numBytesInGPU:this.bufferManager.numBytesUsed,numBytesAllocatedInGPU:this.bufferManager.numBytesAllocated,unreliable:!1}}releaseResource(e){let o=this.tensorMap.get(e);if(!(!o||!o.resource)){if(o.external){o.resource=null;return}o.resource instanceof GPUBuffer?this.bufferManager.releaseBuffer(o.resource):o.resource instanceof GPUTexture&&this.textureManager.releaseTexture(o.resource),o.resource=null}}refCount(e){return this.tensorMap.has(e)?this.tensorMap.get(e).refCount:0}incRef(e){let o=this.tensorMap.get(e);o.refCount++}decRef(e){if(this.tensorMap.has(e)){let o=this.tensorMap.get(e);o.refCount--}}write(e,o,n){if(n==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let i={id:this.nextDataId()};return this.tensorMap.set(i,{dtype:n,shape:o,values:e,refCount:1}),i}move(e,o,n,i,s){if(i==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.tensorMap.set(e,{dtype:i,shape:n,values:o,refCount:s})}submitQueue(){this.queue.submit([this.commandEncoder.finish()]),this.commandEncoder=null,this.dispatchCountInPass=0,this.commandQueueOwnedIds=new WeakSet,this.tensorDataPendingDisposal.forEach(e=>{this.releaseResource(e),this.tensorMap.delete(e)}),this.uniformPendingDisposal.forEach(e=>this.bufferManager.releaseBuffer(e)),this.stagingPendingDisposal.forEach(e=>this.bufferManager.releaseBuffer(e,!1)),this.tensorDataPendingDisposal=[],this.uniformPendingDisposal=[],this.stagingPendingDisposal=[]}ensureCommandEncoderReady(){this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder())}endComputePassEncoder(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}checkCompileCompletionAsync(){return j(this,null,function*(){let e;try{e=yield Promise.all(Object.values(this.pipelineCache))}catch(o){throw new Error(o.message)}Object.keys(this.pipelineCache).map((o,n)=>{this.pipelineCache[o]=e[n]})})}getBufferData(e){return j(this,null,function*(){if(G().getBool("WEBGPU_ENGINE_COMPILE_ONLY"))return console.warn("The data may be invalid since WEBGPU_ENGINE_COMPILE_ONLY is true, this can only be called when WEBGPU_ENGINE_COMPILE_ONLY is false"),null;let o=e.size,n=this.bufferManager.acquireBuffer(o,GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ);this.ensureCommandEncoderReady(),this.endComputePassEncoder(),this.commandEncoder.copyBufferToBuffer(e,0,n,0,o),this.submitQueue(),yield n.mapAsync(GPUMapMode.READ);let i=n.getMappedRange().slice(0);return n.unmap(),n!=null&&this.bufferManager.releaseBuffer(n),G().getBool("WEBGPU_USE_PROFILE_TOOL")&&(S.assert(this.dummyContext!==void 0,()=>"Fail to get context for profiling tool"),this.dummyContext.getCurrentTexture()),i})}convertAndCacheOnCPU(e,o){let n=this.tensorMap.get(e);return n.values=o,n.values}readSync(e){let o=this.tensorMap.get(e),{values:n,complexTensorInfos:i}=o;if(n!=null||o.dtype==="string")return n;if(o.dtype==="complex64"){let x=this.readSync(i.real.dataId),y=this.readSync(i.imag.dataId),b=S.convertBackendValuesAndArrayBuffer($.mergeRealAndImagArrays(x,y).buffer,"float32");return this.convertAndCacheOnCPU(e,b),b}this.hasReadSyncWarned||(this.hasReadSyncWarned=!0,console.warn("The performance of synchronously reading data from GPU to CPU is poor on the webgpu backend, please use asynchronous APIs instead."));let s=["opaque","premultiplied"],a=o.resource,l=a.size;S.assert(l%4===0,()=>"Because there is 4 bytes for one pixel, buffer size must be multiple of 4.");let u=l/4,c=new ArrayBuffer(l),p=256,d=256,m=s.map(x=>new OffscreenCanvas(p,d)),f=new OffscreenCanvas(p,d);this.endComputePassEncoder(),m.map((x,y)=>{let b=x.getContext("webgpu");return b.configure({device:this.device,format:"bgra8unorm",usage:GPUTextureUsage.COPY_DST,alphaMode:s[y]}),b.getCurrentTexture()}).map((x,y)=>{let b=p*4,T=(K,X,te)=>{this.ensureCommandEncoderReady(),this.commandEncoder.copyBufferToTexture({buffer:a,bytesPerRow:b,offset:te},{texture:x},{width:K,height:X}),this.submitQueue();let ce=f.getContext("2d",{willReadFrequently:!0});ce.clearRect(0,0,K,X),ce.drawImage(m[y],0,0);let pe=ce.getImageData(0,0,K,X).data,ve=s[y],Se=new Uint8ClampedArray(c,te,K*X*4);for(let Ee=0;Ee<Se.length;Ee+=4)if(ve==="premultiplied")Se[Ee+3]=pe[Ee+3];else{let je=pe[Ee];Se[Ee]=pe[Ee+2],Se[Ee+1]=pe[Ee+1],Se[Ee+2]=je}},R=Math.floor(u/(p*d)),M=p,V=d,z=0;for(let K=0;K<R;K++)T(M,V,z),z+=p*d*4;let H=u%(p*d);V=Math.floor(H/p),V>0&&(T(M,V,z),z+=V*(p*4)),M=H%p,M>0&&T(M,1,z)});let g=S.convertBackendValuesAndArrayBuffer(c,o.dtype);return this.convertAndCacheOnCPU(e,g),g}read(e){return j(this,null,function*(){if(!this.tensorMap.has(e))throw new Error(`Tensor ${e} was not registered!`);let o=this.tensorMap.get(e),{values:n}=o;if(n!=null)return n;let i;if(o.dtype==="complex64"){let s=yield Promise.all([this.read(o.complexTensorInfos.real.dataId),this.read(o.complexTensorInfos.imag.dataId)]),a=s[0],l=s[1];i=$.mergeRealAndImagArrays(a,l)}else{let s=yield this.getBufferData(o.resource);i=S.convertBackendValuesAndArrayBuffer(s,o.dtype)}return this.convertAndCacheOnCPU(e,i),i})}copyBuffer(e){let o=e.size,n=e.usage,i=this.bufferManager.acquireBuffer(o,n);return this.ensureCommandEncoderReady(),this.endComputePassEncoder(),this.commandEncoder.copyBufferToBuffer(e,0,i,0,o),this.submitQueue(),i}createTensorFromGPUData(e,o,n){let i=e.buffer;if(n==="complex64")throw new Error("Cannot write to a complex64 dtype. ");let s={id:this.nextDataId()};this.tensorMap.set(s,{dtype:n,shape:o,values:null,refCount:1,external:e.zeroCopy});let a=this.tensorMap.get(s),l=gh(a.dtype)*S.sizeFromShape(a.shape);if(e.buffer.size<l)throw new Error(`GPUBuffer size(${e.buffer.size}) is smaller than tensor size(${l})!`);if((e.buffer.usage&(GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC))!==(GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC))throw new Error("GPUBuffer.usage should include GPUBufferUsage.STORAGE | GPUBufferUsage.COPY_SRC!");return e.zeroCopy!==!0&&(i=this.copyBuffer(i)),a.resource=i,cr().makeTensorFromDataId(s,o,n,this)}readToGPU(e){let o=this.tensorMap.get(e),{values:n,dtype:i,shape:s,resource:a}=o;if(i==="complex64")throw new Error("Does not support reading buffer for complex64 dtype.");if(a==null)throw n!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");let l=a,u=l.size,c=l.usage,p=this.bufferManager.acquireBuffer(u,c);this.ensureCommandEncoderReady(),this.endComputePassEncoder(),this.commandEncoder.copyBufferToBuffer(a,0,p,0,u),this.submitQueue();let d=this.makeTensorInfo(s,i),m=cr().makeTensorFromTensorInfo(d),f=this.tensorMap.get(d.dataId);return f.resource=p,{tensorRef:m,buffer:p}}bufferSync(e){let o=this.readSync(e.dataId);if(e.dtype==="string")try{let n=o.map(i=>S.decodeString(i));return Me(e.shape,e.dtype,n)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Me(e.shape,e.dtype,o)}time(e){return j(this,null,function*(){!this.supportTimestampQuery&&!this.hasTimestampQueryWarned&&(console.warn("This device doesn't support timestamp-query extension. Start Chrome browser with flag --enable-dawn-features=allow_unsafe_apis to try it again. Otherwise, zero will be shown for the kernel time when profiling mode is enabled."),this.hasTimestampQueryWarned=!0);let o=this.activeTimers,n=[],i=!1;this.programTimersStack==null?(this.programTimersStack=n,i=!0):this.activeTimers.push(n),this.activeTimers=n,e();let s=S.flatten(this.activeTimers.map(c=>c.query)).filter(c=>c!=null),a=S.flatten(this.activeTimers.map(c=>c.name)).filter(c=>c!=null);this.activeTimers=o,i&&(this.programTimersStack=null);let l={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null},u=yield Promise.all(s);return l.kernelMs=S.sum(u),l.getExtraProfileInfo=()=>u.map((c,p)=>({name:a[p],ms:c})).map(c=>`${c.name}: ${c.ms}`).join(", "),this.uploadWaitMs=0,this.downloadWaitMs=0,l})}makeTensorInfo(e,o,n){return o==="string"&&n!=null&&n.length>0&&S.isString(n[0])&&(n=n.map(s=>S.encodeString(s))),{dataId:this.write(n,e,o),shape:e,dtype:o}}tensorToBinding(e){if(!e)return null;let n=this.tensorMap.get(e.dataId).resource;return n instanceof GPUBuffer?{buffer:n}:n instanceof GPUTexture?n.createView():n}uploadToGPU(e){let o=this.tensorMap.get(e);if(o.resource!=null)return;let n=gh(o.dtype)*S.sizeFromShape(o.shape),i,s=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST;if(o.values){if(i=this.bufferManager.acquireBuffer(n,s,!0),i.mapState==="unmapped"){let a=this.bufferManager.acquireBuffer(n,GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC,!0,!1),l=a.getMappedRange();o.dtype==="int32"||o.dtype==="bool"?new Int32Array(l).set(o.values):new Float32Array(l).set(o.values),a.unmap(),this.ensureCommandEncoderReady(),this.endComputePassEncoder(),this.commandEncoder.copyBufferToBuffer(a,0,i,0,n),this.stagingPendingDisposal.push(a)}else{let a=i.getMappedRange();o.dtype==="int32"||o.dtype==="bool"?new Int32Array(a).set(o.values):new Float32Array(a).set(o.values),i.unmap()}o.values=null}else i=this.bufferManager.acquireBuffer(n,s);o.resource=i}makeUniforms(e){let o=0,n=0,i=[],s=1;e.forEach(u=>{u.data.length===0&&(u.data=[1]);let c;switch(u.data.length){case 1:c=4;break;case 2:c=8;break;case 3:c=16;break;case 4:c=16;break;case 5:c=16;break;case 6:c=16;break;default:S.assert(!1,()=>`Unsupported ${u.data.length}D shape`)}(n===5||n===6)&&(c=16),c>s&&(s=c),o=Math.ceil(o/c)*c,n=u.data.length,i.push(o),o+=u.data.length*4}),o=Math.ceil(o/s)*s;let a=new ArrayBuffer(o);e.forEach((u,c)=>{let p=i[c];u.type==="int32"?new Int32Array(a,p,u.data.length).set(u.data):u.type==="uint32"?new Uint32Array(a,p,u.data.length).set(u.data):new Float32Array(a,p,u.data.length).set(u.data)});let l=this.bufferManager.acquireBuffer(o,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);return this.queue.writeBuffer(l,0,a,0,o),this.uniformPendingDisposal.push(l),{offset:0,size:o,buffer:l}}runWebGPUProgram(e,o,n,i,s){if(s||(s=this.makeTensorInfo(e.outputShape,n)),S.sizeFromShape(s.shape)===0)return this.tensorMap.get(s.dataId).values=S.getTypedArrayFromDType(s.dtype,0),s;this.uploadToGPU(s.dataId),e.dispatch=XH(this.device,e);let a=o.map((u,c)=>{if(u.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");return this.uploadToGPU(u.dataId),{dtype:this.tensorMap.get(u.dataId).dtype,shape:u.shape,name:e.variableNames[c]}});e.shaderKey=DI(e,a,s);let l=G().getBool("WEBGPU_ENGINE_COMPILE_ONLY");return e.shaderKey in this.pipelineCache||(this.pipelineCache[e.shaderKey]=AI(this.device,e,a,s,l)),e.pipeline=this.pipelineCache[e.shaderKey],l||this.recordAndSubmit(e,s,o,i),s}recordAndSubmit(e,o,n,i){if(e.pipeline instanceof Promise)throw new Error("Please call checkCompileCompletionAsync to ensure parallel compilation is done!");let s=[],a=[],l="int32";if(e.pixelsOpType==null){s.push({type:"float32",data:[NaN]},{type:"float32",data:[1/0]}),a=n.concat(o).map(f=>f.shape);let m="int32";a.map(f=>{s.push({type:m,data:f});let g=S.computeStrides(f);s.push({type:m,data:g})})}else{let m=S.computeStrides(o.shape);s.push({type:l,data:m})}if(e.size){let m=S.sizeFromShape(e.outputShape);s.push({type:l,data:[e.outputComponent?m/e.outputComponent:m]})}i&&(s=[...s,...i]);let u=[this.tensorToBinding(o),...n.map(m=>this.tensorToBinding(m)),this.makeUniforms(s)];n.forEach(m=>{this.commandQueueOwnedIds.add(m.dataId)}),this.commandQueueOwnedIds.add(o.dataId);let c=this.device.createBindGroup({layout:e.pipeline.getBindGroupLayout(0),entries:u.map((m,f)=>({binding:f,resource:m}))}),p=this.activeTimers!=null;this.ensureCommandEncoderReady();let d={};p&&this.supportTimestampQuery?(this.endComputePassEncoder(),this.querySet==null&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:this.querySetCount})),d.timestampWrites={querySet:this.querySet,beginningOfPassWriteIndex:0,endOfPassWriteIndex:1},this.computePassEncoder=this.commandEncoder.beginComputePass(d)):this.computePassEncoder||(this.computePassEncoder=this.commandEncoder.beginComputePass(d)),this.computePassEncoder.setPipeline(e.pipeline),this.computePassEncoder.setBindGroup(0,c),this.computePassEncoder.dispatchWorkgroups(e.dispatch[0],e.dispatch[1],e.dispatch[2]),this.dispatchCountInPass++,(p||G().get("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE")<=this.dispatchCountInPass||e.pixelsOpType===Zi.DRAW)&&(this.endComputePassEncoder(),p?this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime()}):this.submitQueue())}getQueryTime(){return j(this,null,function*(){if(!this.supportTimestampQuery)return 0;this.queryResolveBuffer==null&&(this.queryResolveBuffer=this.bufferManager.acquireBuffer(this.querySetCount*8,GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST|GPUBufferUsage.QUERY_RESOLVE)),this.commandEncoder.resolveQuerySet(this.querySet,0,this.querySetCount,this.queryResolveBuffer,0);let e=this.bufferManager.acquireBuffer(this.querySetCount*8,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST);this.commandEncoder.copyBufferToBuffer(this.queryResolveBuffer,0,e,0,this.querySetCount*8),this.submitQueue(),yield e.mapAsync(GPUMapMode.READ);let o=new BigUint64Array(e.getMappedRange()),n=Number(o[1]-o[0])/1e6;return e.unmap(),this.bufferManager.releaseBuffer(e),n})}shouldExecuteOnCPU(e,o=jH){return G().getBool("WEBGPU_CPU_FORWARD")&&e.every(n=>this.tensorMap.get(n.dataId).resource==null&&S.sizeFromShape(n.shape)<o)}numDataIds(){return this.tensorMap.numDataIds()-this.tensorDataPendingDisposal.length}dispose(){this.disposed||(this.querySet!=null&&this.querySet.destroy(),this.bufferManager.dispose(),this.textureManager.dispose(),this.disposed=!0)}}return r.nextDataId=0,r})();Vp()&&Om("webgpu",()=>j(null,null,function*(){let r={powerPreference:G().get("WEBGPU_USE_LOW_POWER_GPU")?"low-power":"high-performance"},t=yield navigator.gpu.requestAdapter(r),e={},o=[];t.features.has("timestamp-query")&&o.push("timestamp-query"),t.features.has("bgra8unorm-storage")&&o.push(["bgra8unorm-storage"]),e.requiredFeatures=o;let n=t.limits;e.requiredLimits={maxComputeWorkgroupStorageSize:n.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:n.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:n.maxStorageBufferBindingSize,maxBufferSize:n.maxBufferSize,maxComputeWorkgroupSizeX:n.maxComputeWorkgroupSizeX,maxComputeInvocationsPerWorkgroup:n.maxComputeInvocationsPerWorkgroup};let i=yield t.requestDevice(e),s="info"in t?t.info:"requestAdapterInfo"in t?yield t.requestAdapterInfo():void 0;return new yc(i,s)}),3);var ke=function(r){return r[r.ADD=0]="ADD",r[r.ATAN2=1]="ATAN2",r[r.COMPLEX_MULTIPLY_IMAG=2]="COMPLEX_MULTIPLY_IMAG",r[r.COMPLEX_MULTIPLY_REAL=3]="COMPLEX_MULTIPLY_REAL",r[r.DIV=4]="DIV",r[r.ELU_DER=5]="ELU_DER",r[r.EQUAL=6]="EQUAL",r[r.FLOOR_DIV=7]="FLOOR_DIV",r[r.GREATER=8]="GREATER",r[r.GREATER_EQUAL=9]="GREATER_EQUAL",r[r.LESS=10]="LESS",r[r.LESS_EQUAL=11]="LESS_EQUAL",r[r.LOGICAL_AND=12]="LOGICAL_AND",r[r.LOGICAL_OR=13]="LOGICAL_OR",r[r.MAX=14]="MAX",r[r.MIN=15]="MIN",r[r.MOD=16]="MOD",r[r.MUL=17]="MUL",r[r.NOT_EQUAL=18]="NOT_EQUAL",r[r.POW=19]="POW",r[r.PRELU=20]="PRELU",r[r.SQUARED_DIFFERENCE=21]="SQUARED_DIFFERENCE",r[r.SUB=22]="SUB",r}(ke||{}),YH="let resultTemp = a + b;",QH="let resultTemp = atan2(a, b);",ZH="let resultTemp = areal * breal - aimag * bimag;",JH="let resultTemp = areal * bimag + aimag * breal;",e9="let resultTemp = a / b;",t9="let resultTemp = select(a * (b + 1.0), a, b >= b - b);",r9=`
  let zero = sign(a) * 0 + 0;
  let one = sign(b) * 0 + 1;
  let resultTemp = select(zero, one, a == b);
`,o9=`
  let remainder =
      select(a % b, round(a % b), (round(a) == a) & (round(b) == b));
  let quotient = (a - remainder) / b;
  let resultTemp =
      round(select(quotient, quotient - 1, sign(remainder) == -sign(b)));
`,n9=`
  let zero = sign(a) * 0 + 0;
  let one = sign(b) * 0 + 1;
  let resultTemp = select(zero, one, a > b);
`,i9=`
  let zero = sign(a) * 0 + 0;
  let one = sign(b) * 0 + 1;
  let resultTemp = select(zero, one, a >= b);
`,s9=`
  let zero = sign(a) * 0 + 0;
  let one = sign(b) * 0 + 1;
  let resultTemp = select(zero, one, a < b);
`,a9=`
  let zero = sign(a) * 0 + 0;
  let one = sign(b) * 0 + 1;
  let resultTemp = select(zero, one, a <= b);
`,l9="return f32(a >= 1.0 && b >= 1.0);",u9=`return (vec4<f32>(a >= vec4<f32>(1.0)) *
  vec4<f32>(b >= vec4<f32>(1.0)));`,c9="return f32(a >= 1.0 || b >= 1.0);",p9=`return min(vec4<f32>(a >= vec4<f32>(1.0)) +
  vec4<f32>(b >= vec4<f32>(1.0)), vec4<f32>(1.0));`,d9="let resultTemp = max(a, b);",m9="let resultTemp = min(a, b);",f9=`
  let isNaN = b == 0.;
  var resultTemp = a % b;
  resultTemp = select((resultTemp + b) % b, resultTemp,
      (a < 0. && b < 0.) || (a >= 0. && b > 0.));
`,h9=`
  let isNaN = !vec4<bool>(b);
  var resultTemp = vec4<f32>(a % b);
  if (!((a[0] < 0. && b[0] < 0.) || (a[0] >= 0. && b[0] > 0.))) {
    resultTemp[0] = (resultTemp[0] + b[0]) % b[0];
  }
  if (!((a[1] < 0. && b[1] < 0.) || (a[1] >= 0. && b[1] > 0.))) {
    resultTemp[1] = (resultTemp[1] + b[1]) % b[1];
  }
  if (!((a[2] < 0. && b[2] < 0.) || (a[2] >= 0. && b[2] > 0.))) {
    resultTemp[2] = (resultTemp[2] + b[2]) % b[2];
  }
  if (!((a[3] < 0. && b[3] < 0.) || (a[3] >= 0. && b[3] > 0.))) {
    resultTemp[3] = (resultTemp[3] + b[3]) % b[3];
  }
`,g9="let resultTemp = a * b;",x9=`
  var resultTemp = f32(a != b);
  let valueForNaN = 1.0;
`,y9=`
  var resultTemp = vec4<f32>(a != b);
  let valueForNaN = 1.0;
`,v9=`
  let isNaN = a < 0.0 && floor(b) < b;
  if (b == 0.0) {
    return 1.0;
  }
  var resultTemp = select(sign(a) * pow(abs(a), b), pow(abs(a), b),
      round(abs(b) % 2.0) != 1.0);
`,b9=`
  let isModRound1Bool = vec4<i32>(round(abs(b) % vec4<f32>(2.0))) == vec4<i32>(1);
  let isModRound1 = vec4<f32>(isModRound1Bool);
  let multiplier = sign(a) * isModRound1 + (vec4<f32>(1.0) - isModRound1);
  var resultTemp = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  let isExpZero = b == vec4<f32>(0.0);
  if (isExpZero.r) {
    resultTemp.r = 1.0;
  }
  if (isExpZero.g) {
    resultTemp.g = 1.0;
  }
  if (isExpZero.b) {
    resultTemp.b = 1.0;
  }
  if (isExpZero.a) {
    resultTemp.a = 1.0;
  }
  let isNaN = (a < vec4<f32>(0.0)) & (floor(b) < b);
`,S9="if (a < 0.0) { return b * a; }  return a;",w9=`
  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));
  return (aLessThanZero * (b * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);
`,_9="let resultTemp = (a - b) * (a - b);",C9="let resultTemp = a - b;";function vc(r,t){let e;do{switch(r){case ke.ATAN2:e=QH;break;case ke.MAX:e=d9;break;case ke.MIN:e=m9;break;case ke.MOD:e=t?h9:f9;break;case ke.NOT_EQUAL:e=t?y9:x9;break;case ke.POW:e=t?b9:v9;break;default:continue}let o,n,i;return t?(o="isnanVec4",n="vec4<f32>",i="vec4<bool>"):(o="isnan",n="f32",i="bool"),`
      let aIsNaN = ${o}(a);
      let aPostLegalization = select(a, ${n}(42), aIsNaN);
      let bIsNaN = ${o}(b);
      let bPostLegalization = select(b, ${n}(42), bIsNaN);
      let isNaN = false;
      let valueForNaN = uniforms.NAN;
      {
        let a = aPostLegalization;
        let b = bPostLegalization;
        ${e}
        return select(
            resultTemp, ${n}(valueForNaN),
            ${i}(isNaN) | aIsNaN | bIsNaN);
      }
    `}while(!1);switch(r){case ke.ADD:e=YH;break;case ke.COMPLEX_MULTIPLY_IMAG:e=JH;break;case ke.COMPLEX_MULTIPLY_REAL:e=ZH;break;case ke.DIV:e=e9;break;case ke.ELU_DER:e=t9;break;case ke.EQUAL:e=r9;break;case ke.FLOOR_DIV:e=o9;break;case ke.GREATER:e=n9;break;case ke.GREATER_EQUAL:e=i9;break;case ke.LESS:e=s9;break;case ke.LESS_EQUAL:e=a9;break;case ke.LOGICAL_AND:return t?u9:l9;case ke.LOGICAL_OR:return t?p9:c9;case ke.MUL:e=g9;break;case ke.PRELU:return t?w9:S9;case ke.SQUARED_DIFFERENCE:e=_9;break;case ke.SUB:e=C9;break;default:}return`
    ${e}
    return resultTemp;
  `}var se=function(r){return r[r.ABS=0]="ABS",r[r.ACOS=1]="ACOS",r[r.ACOSH=2]="ACOSH",r[r.ASIN=3]="ASIN",r[r.ASINH=4]="ASINH",r[r.ATAN=5]="ATAN",r[r.ATANH=6]="ATANH",r[r.CEIL=7]="CEIL",r[r.COS=8]="COS",r[r.COSH=9]="COSH",r[r.ELU=10]="ELU",r[r.ERF=11]="ERF",r[r.EXP=12]="EXP",r[r.EXPM1=13]="EXPM1",r[r.FLOOR=14]="FLOOR",r[r.IS_FINITE=15]="IS_FINITE",r[r.IS_INF=16]="IS_INF",r[r.IS_NAN=17]="IS_NAN",r[r.LINEAR=18]="LINEAR",r[r.LOG=19]="LOG",r[r.LOG1P=20]="LOG1P",r[r.LOGICAL_NOT=21]="LOGICAL_NOT",r[r.NEG=22]="NEG",r[r.RELU=23]="RELU",r[r.RELU6=24]="RELU6",r[r.LEAKYRELU=25]="LEAKYRELU",r[r.RECIPROCAL=26]="RECIPROCAL",r[r.ROUND=27]="ROUND",r[r.RSQRT=28]="RSQRT",r[r.SELU=29]="SELU",r[r.SIGMOID=30]="SIGMOID",r[r.SIGN=31]="SIGN",r[r.SIN=32]="SIN",r[r.SINH=33]="SINH",r[r.SOFTPLUS=34]="SOFTPLUS",r[r.SQRT=35]="SQRT",r[r.SQUARE=36]="SQUARE",r[r.STEP=37]="STEP",r[r.TAN=38]="TAN",r[r.TANH=39]="TANH",r[r.TO_INT=40]="TO_INT",r}(se||{}),k9="return abs(a);",I9=`
  if (abs(a) > 1.) {
    return uniforms.NAN;
  }
  return acos(a);
`,T9=`
  if (a < 1.) {
    return uniforms.NAN;
  }
  return acosh(a);
`,E9=`
  if (abs(a) > 1.) {
    return uniforms.NAN;
  }
  return asin(a);
`,N9="return asinh(a);",R9=`
  if (isnan(a)) {
    return uniforms.NAN;
  }
  return atan(a);
`,$9=`
  if (abs(a) > 1.) {
    return uniforms.NAN;
  }
  if (a == 1.) {
    return uniforms.INFINITY;
  }
  if (a == -1.) {
    return -uniforms.INFINITY;
  }
  return atanh(a);
`,P9="return ceil(a);",A9="return cos(a);",D9=`
  let e2x = exp(-a);
  return (e2x + 1.0 / e2x) / 2.0;
`,F9="return exp(a) - 1.0;",O9="if (a >= 0.0) { return a; }  return (exp(a) - 1.0);",L9=`
  var resFloat = exp(a) - vec4<f32>(1.0);
  if (a.r >= 0.0) {
    resFloat.r = a.r;
  }
  if (a.g >= 0.0) {
    resFloat.g = a.g;
  }
  if (a.b >= 0.0) {
    resFloat.b = a.b;
  }
  if (a.a >= 0.0) {
    resFloat.a = a.a;
  }
  return resFloat;
`,M9=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  let p = ${$.ERF_P};
  let a1 = ${$.ERF_A1};
  let a2 = ${$.ERF_A2};
  let a3 = ${$.ERF_A3};
  let a4 = ${$.ERF_A4};
  let a5 = ${$.ERF_A5};

  let sign = sign(a);
  let absA = abs(a);
  let t = 1.0 / (1.0 + p * absA);
  return sign * (1.0 - (((((a5 * t + a4) * t) + a3) * t + a2) * t + a1) * t * exp(-absA * absA));
`,B9="return exp(a);",V9="return floor(a);",W9="return f32(!isnan(a) && !isinf(a));",z9="return f32(isinf(a));",U9="return f32(isnan(a));",G9="return a;",H9=`if (a < 0.0) { return uniforms.NAN; }
  return log(a);`,K9=`
  if (isnan(a)) { return a; }
  return log(1.0 + a);
`,q9="return f32(!(a >= 1.0));",j9="return -a;",X9="if (a < 0.0) { return uniforms.alpha * a; } return a;",Y9=`
  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));
  return (aLessThanZero * (uniforms.alpha * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);
`,Q9="return 1.0 / a;",Z9="return select(a, 0.0, a < 0.0);",J9="return clamp(a, 0.0, 6.0);",eK="return clamp(a, vec4<f32>(0.0, 0.0, 0.0, 0.0), vec4<f32>(6.0, 6.0, 6.0, 6.0));",tK=`
  return select(a, vec4<f32>(0.0), a < vec4<f32>(0.0));
`,rK="return round(a);",oK="return inverseSqrt(a);",nK=`
  if (a >= 0.0) {
    return ${$.SELU_SCALE} * a;
  } else {
    return ${$.SELU_SCALEALPHA} * (exp(a) - 1.0);
  }
`,iK="return 1.0 / (1.0 + exp(-1.0 * a));",sK="return sign(a);",aK="return sin(a);",lK=`
  let e2x = exp(a);
  return (e2x - 1.0 / e2x) / 2.0;
`,uK=`
  let epsilon = 1.1920928955078125e-7;
  let threshold = log(epsilon) + 2.0;

  let too_large = a > -threshold;
  let too_small = a < threshold;
  let exp_a = exp(a);

  if (too_large) {
    return a;
  } else if (too_small) {
    return exp_a;
  } else {
    return log(exp_a + 1.0);
  }
`,cK="return sqrt(a);",pK="return a * a;",dK=`
  if (isnan(a)) {
    return a;
  }

  return select(uniforms.stepAlpha, 1.0, a > 0.0);
`,mK="return tan(a);",fK=`
  let e2x = exp(-2.0 * abs(a));
  return sign(a) * (1.0 - e2x) / (1.0 + e2x);
`,hK="return f32(i32((a)));";function Hn(r,t){switch(r){case se.ABS:return k9;case se.ACOS:return I9;case se.ACOSH:return T9;case se.ASIN:return E9;case se.ASINH:return N9;case se.ATAN:return R9;case se.ATANH:return $9;case se.COS:return A9;case se.COSH:return D9;case se.CEIL:return P9;case se.ELU:return t?L9:O9;case se.ERF:return M9;case se.EXP:return B9;case se.EXPM1:return F9;case se.FLOOR:return V9;case se.IS_FINITE:return W9;case se.IS_INF:return z9;case se.IS_NAN:return U9;case se.LINEAR:return G9;case se.LOG:return H9;case se.LOG1P:return K9;case se.LOGICAL_NOT:return q9;case se.NEG:return j9;case se.LEAKYRELU:return t?Y9:X9;case se.RECIPROCAL:return Q9;case se.RELU:return t?tK:Z9;case se.RELU6:return t?eK:J9;case se.ROUND:return rK;case se.RSQRT:return oK;case se.SELU:return nK;case se.SIGMOID:return iK;case se.SIGN:return sK;case se.SIN:return aK;case se.SINH:return lK;case se.SOFTPLUS:return uK;case se.SQRT:return cK;case se.SQUARE:return pK;case se.STEP:return dK;case se.TAN:return mK;case se.TANH:return fK;case se.TO_INT:return hK;default:throw new Error(`BinaryType ${r} is not implemented!`)}}function nr(r,t=!1,e=!1,o=3){if(r===null)return"";let n="";if(r==="linear")n=Hn(se.LINEAR);else if(r==="relu")n=Hn(se.RELU,e);else if(r==="elu")n=Hn(se.ELU,e);else if(r==="relu6")n=Hn(se.RELU6,e);else if(r==="prelu")n=vc(ke.PRELU,e);else if(r==="sigmoid")n=Hn(se.SIGMOID,e);else if(r==="leakyrelu")n=Hn(se.LEAKYRELU,e);else throw new Error(`Activation ${r} has not been implemented for the WebGPU backend.`);let s=ze(e?4:1),a="";return t?a=`
      fn activation(a : ${s}, coords : vec${o}<i32>) -> ${s} {
        let b = getPreluActivationWeightsByOutputCoords(coords);
        ${n}
      }`:a=`
      fn activation(a : ${s}, coords : vec${o}<i32>) -> ${s} {
        ${n}
      }`,a}function Zr(r,t){return`
      ${r?"value = value + getBiasByOutputCoords(coords);":""}
      ${t?"value = activation(value, coords);":""}
      `}function L1(r,t,e=!1,o=!1,n=!1,i=1){S.assert(r&&i===1||!r,()=>`transposeA ${r} is not compatible with component size ${i}`);let s=`
      ${r?"value = getA(batch, col, row);":"value = getA(batch, row, col);"}

    `,a=t?"value = getB(batch, col, row);":"value = getB(batch, row, col);";return`
  fn mm_readA(batch: i32, row: i32, col: i32) -> ${ze(i)} {
    var value = ${ze(i)}(0.0);
    ${e&&n?s:`
    ${r?"if(row < uniforms.dimAOuter && col < uniforms.dimInner)":"if(row < uniforms.aShape[1] && col < uniforms.aShape[2])"}
    {
      ${s}
    }
    `}
    return value;
  }

  fn mm_readB(batch: i32, row: i32, col: i32) -> ${ze(i)} {
    var value = ${ze(i)}(0.0);
    ${a}
    return value;
  }
  `}function zp(r,t,e,o,n=!1,i=!1,s=!1,a=1){return`
  ${L1(e,o,n,i,s,a)}
  fn mm_write(batch: i32, row: i32, col: i32, valueIn: ${ze(a)}) {
    ${n&&i?"":"if (row < uniforms.dimAOuter && col < uniforms.dimBOuter)"}
    {
      var value = valueIn;
      let coords = vec3<i32>(batch, row, col);
      ${Zr(r,t)}
      setOutputAtCoords(coords[0], coords[1], coords[2], value);
    }
  }
  `}var gK=(r,t)=>r?`
        mm_Asub[inputRow][inputCol] = mm_readA(batchA,
          kStart + inputRow,
          globalRowStart + inputCol * ${t});
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(batchA,
          globalRow + innerRow,
          kStart + inputCol * ${t});
        `,xK=(r,t,e,o)=>{if(r)return`
      for (var k = 0; k < ${o}; k++) {
        let BCached0 = mm_Bsub[k][tileCol];
        let ACached0 = mm_Asub[k][localRow];
        for (var i = 0; i < ${e}; i++) {
          acc[i] = fma(BCached0, vec4<f32>(ACached0[i]), acc[i]);
        }
      }`;{let n="",i="";for(let s=0;s<t;s++)n+=`let BCached${s} = mm_Bsub[k * ${t} + ${s}][tileCol];`,i+=`acc[i] = fma(BCached${s}, vec4<f32>(ACached[${s}]), acc[i]);`;return`
      for (var k = 0; k < ${o/t}; k++) {
        ${n}
        for (var i = 0; i < ${e}; i++) {
          let ACached = mm_Asub[tileRow + i][k];
          ${i}
        }
      }`}};function Js(r,t,e=!1,o=32,n=!1,i=32,s=!1){let a=t[1]*r[1],l=t[0]*r[0],u=e?a:o,c=e?o:a,p=u/t[0],d=o/t[1],m=r[1],f=r[0];return S.assert((e&&p===4&&r[1]===4||!e&&(p===3||p===4))&&u%t[0]===0&&o%t[1]===0&&r[0]===4,()=>`If transposeA ${e} is true, innerElementSize ${p} and workPerThread[1] ${r[1]} must be 4.
          Otherwise, innerElementSize ${p} must be 3 or 4.
      tileAWidth ${u} must be divisible by workgroupSize[0]${t[0]}. tileInner ${o} must be divisible by workgroupSize[1] ${t[1]}. colPerThread ${r[0]} must be 4.`),`
  var<workgroup> mm_Asub : array<array<vec${p}<f32>, ${u/p}>, ${c}>;
  var<workgroup> mm_Bsub : array<array<vec4<f32>, ${l/r[0]}>, ${o}>;

  ${J()} {
    let localRow = i32(localId.y);
    let tileRow = localRow * ${m};
    let tileCol = i32(localId.x);

    let globalRow = i32(globalId.y) * ${m};
    let globalCol = i32(globalId.x) * ${f};
    let batch = ${n?"0":"i32(globalId.z)"};
    let batchA = ${n||!s?"batch":"batch % uniforms.aShape[0]"};
    let batchB = ${n||!s?"batch":"batch % uniforms.bShape[0]"};
    let globalRowStart = i32(workgroupId.y) * ${a};

    let numTiles = ${n?`${Math.ceil(i/o)}`:`(uniforms.dimInner - 1) / ${o} + 1`};
    var kStart = ${n?`i32(globalId.z) * ${i}`:"0"};

    var acc: array<vec4<f32>, ${m}>;

    // Loop over shared dimension.
    let tileRowB = localRow * ${d};
    for (var t = 0; t < numTiles; t++) {
        // Load one tile of A into local memory.
        for (var innerRow = 0; innerRow < ${m}; innerRow++) {
            let inputRow = tileRow + innerRow;
            let inputCol = tileCol;
            ${gK(e,p)}
        }

        // Load one tile of B into local memory.
        for (var innerRow = 0; innerRow < ${d}; innerRow++) {
            let inputRow = tileRowB + innerRow;
            let inputCol = tileCol;
            mm_Bsub[inputRow][inputCol] = mm_readB(batchB, kStart + inputRow, globalCol);
        }
        kStart = kStart + ${o};
        workgroupBarrier();

        // Compute acc values for a single thread.
        ${xK(e,p,m,o)}
        workgroupBarrier();
    }

    for (var innerRow = 0; innerRow < ${m}; innerRow++) {
        mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);
    }
  }`}var OI=r=>r?`
        mm_Asub[inputRow][inputCol] = mm_readA(batchA,
          kStart + inputRow,
          globalRowStart + inputCol);
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(batchA,
          globalRowStart + inputRow,
          kStart + inputCol);
        `,yK=r=>r?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];";function ea(r,t,e=!1,o=32,n=!1,i=32,s=!1,a=!1){let l=r[1]*t[1],u=r[0]*t[0],c=e?l:o,p=e?o:l;S.assert(p%t[1]===0&&c%t[0]===0&&o%t[1]===0,()=>`tileAHight ${p} must be divisible by workgroupSize[1]${t[1]}, tileAWidth ${c} must be divisible by workgroupSize[0]${t[0]}, tileInner ${o} must be divisible by workgroupSize[1]${t[1]}`);let d=p/t[1],m=c/t[0],f=o/t[1],g=r[1],x=r[0],y=s?`
      let localRow = i32(localId.y);
      let localCol = i32(localId.x);
      let globalRowStart = i32(workgroupId.y) * ${l};
      let globalColStart = i32(workgroupId.x) * ${u};

      // Loop over shared dimension.
      for (var t = 0; t < numTiles; t++) {
        // Load one tile of A into local memory.
        for (var inputRow = localRow; inputRow < ${p}; inputRow = inputRow + ${t[1]}) {
          for (var inputCol = localCol; inputCol < ${c}; inputCol = inputCol + ${t[0]}) {
            ${OI(e)}
          }
        }
        // Load one tile of B into local memory.
        for (var inputRow = localRow; inputRow < ${o}; inputRow = inputRow + ${t[1]}) {
              for (var inputCol = localCol; inputCol < ${u}; inputCol = inputCol + ${t[0]}) {
            mm_Bsub[inputRow][inputCol] = mm_readB(batchB,
              kStart + inputRow,
              globalColStart + inputCol);
          }
        }
        kStart = kStart + ${o};
        workgroupBarrier();

        // Compute acc values for a single thread.
        var BCached : array<f32, ${x}>;
        for (var k = 0; k < ${o}; k++) {
          for (var inner = 0; inner < ${x}; inner++) {
            BCached[inner] = mm_Bsub[k][localCol + inner * ${t[0]}];
          }
          for (var innerRow = 0; innerRow < ${g}; innerRow++) {
            let ACached = ${e?`mm_Asub[k][localRow + innerRow * ${t[1]}];`:`mm_Asub[localRow + innerRow * ${t[1]}][k];`}
            for (var innerCol = 0; innerCol < ${x}; innerCol++) {
              acc[innerRow][innerCol] =
                  fma(ACached, BCached[innerCol], acc[innerRow][innerCol]);
            }
          }
        }
        workgroupBarrier();
      }
      for (var innerRow = 0; innerRow < ${g}; innerRow++) {
        let gRow = globalRowStart + localRow + innerRow * ${t[1]};
        for (var innerCol = 0; innerCol < ${x}; innerCol++) {
          let gCol = globalColStart + localCol + innerCol * ${t[0]};
          mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);
        }
      }
      `:`
  let tileRow = i32(localId.y) * ${g};
  let tileCol = i32(localId.x) * ${x};

  let globalRow = i32(globalId.y) * ${g};
  let globalCol = i32(globalId.x) * ${x};
  let globalRowStart = i32(workgroupId.y) * ${l};

  let tileRowA = i32(localId.y) * ${d};
  let tileColA = i32(localId.x) * ${m};
  let tileRowB = i32(localId.y) * ${f};
  // Loop over shared dimension.
  for (var t = 0; t < numTiles; t++) {
    // Load one tile of A into local memory.
    for (var innerRow = 0; innerRow < ${d}; innerRow++) {
      for (var innerCol = 0; innerCol < ${m}; innerCol++) {
        let inputRow = tileRowA + innerRow;
        let inputCol = tileColA + innerCol;
        ${OI(e)}
      }
    }

    // Load one tile of B into local memory.
    for (var innerRow = 0; innerRow < ${f}; innerRow++) {
      for (var innerCol = 0; innerCol < ${x}; innerCol++) {
        let inputRow = tileRowB + innerRow;
        let inputCol = tileCol + innerCol;
        mm_Bsub[inputRow][inputCol] = mm_readB(batchB,
          kStart + inputRow,
          globalCol + innerCol);
      }
    }
    kStart = kStart + ${o};
    workgroupBarrier();

    // Compute acc values for a single thread.
    var BCached : array<f32, ${x}>;
    for (var k = 0; k < ${o}; k++) {
      for (var inner = 0; inner < ${x}; inner++) {
        BCached[inner] = mm_Bsub[k][tileCol + inner];
      }

      for (var innerRow = 0; innerRow < ${g}; innerRow++) {
        ${yK(e)}
        for (var innerCol = 0; innerCol < ${x}; innerCol++) {
          acc[innerRow][innerCol] =
              fma(ACached, BCached[innerCol], acc[innerRow][innerCol]);
        }
      }
    }

    workgroupBarrier();
  }

  for (var innerRow = 0; innerRow < ${g}; innerRow++) {
    for (var innerCol = 0; innerCol < ${x}; innerCol++) {
      mm_write(batch, globalRow + innerRow, globalCol + innerCol,
          acc[innerRow][innerCol]);
    }
  }
  `;return`
    var<workgroup> mm_Asub : array<array<f32, ${c}>, ${p}>;
    var<workgroup> mm_Bsub : array<array<f32, ${u}>, ${o}>;

    ${J()} {
      let batch = ${n?"0":"i32(globalId.z)"};
      let batchA = ${n||!a?"batch":"batch % uniforms.aShape[0]"};
      let batchB = ${n||!a?"batch":"batch % uniforms.bShape[0]"};
      let numTiles = ${n?`${Math.ceil(i/o)}`:`(uniforms.dimInner - 1) / ${o} + 1`};
      var kStart = ${n?`i32(globalId.z) * ${i}`:"0"};

      var acc : array<array<f32, ${x}>, ${g}>;

      // Without this initialization strange values show up in acc.
      for (var innerRow = 0; innerRow < ${g}; innerRow++) {
        for (var innerCol = 0; innerCol < ${x}; innerCol++) {
          acc[innerRow][innerCol] = 0.0;
        }
      }
      ${y}
    }
  `}var vK=r=>r?`
      mm_readA(batchA, colA, globalRow),
      mm_readA(batchA, colA + 1, globalRow),
      mm_readA(batchA, colA + 2, globalRow),
      mm_readA(batchA, colA + 3, globalRow)
  `:`
      mm_readA(batchA, globalRow, colA),
      mm_readA(batchA, globalRow, colA + 1),
      mm_readA(batchA, globalRow, colA + 2),
      mm_readA(batchA, globalRow, colA + 3)
  `;function bK(r,t=!1){S.assert(r[1]===1&&r[2]===1,()=>`A linear work group size is required. But got ${r}.`);let e=r[0]*4;return`
    var<workgroup> mm_Asub : array<vec4<f32>, ${r[0]}>;

    ${J()} {
      let tileCol = i32(localId.x);
      let globalCol = i32(globalId.x);
      let globalRow = i32(globalId.y);

      let numTiles = (uniforms.dimInner - 1) / ${e} + 1;
      let batch = i32(globalId.z);
      let batchA = batch % uniforms.aShape[0];
      let batchB = batch % uniforms.bShape[0];
      // Without this initialization strange values show up in acc.
      var acc = 0.0;

      // Loop over shared dimension.
      for (var t = 0; t < numTiles; t++) {
        // Load one tile of A into local memory.
        let colA = t * ${e} + tileCol * 4;
        mm_Asub[tileCol] = vec4<f32>(${vK(t)});
        workgroupBarrier();

        // Compute acc values for a single thread.
        for (var k = 0; k < ${e/4}; k++) {
          let rowB = t * ${e} + k * 4;
          let BCached = vec4<f32>(mm_readB(batchB, rowB, globalCol),
                              mm_readB(batchB, rowB + 1, globalCol),
                              mm_readB(batchB, rowB + 2, globalCol),
                              mm_readB(batchB, rowB + 3, globalCol));

          let ACached = mm_Asub[k];
          acc = acc + dot(ACached, BCached);
        }

        workgroupBarrier();
      }

      mm_write(batch, globalRow, globalCol, acc);
    }
  `}var xh=class{constructor(t,e,o=!1,n=!1,i=null,s=null,a=null,l=!1){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.outputShape=e,this.dispatchLayout={x:[2],y:[1],z:[0]};let u=o?t[1]:t[2];if(this.isVec4=(u%4===0&&!o||e[1]%4===0&&o)&&e[2]%4===0&&!n,this.outputComponent=this.isVec4?4:1,this.isVectorA=e[1]===1&&!o,!this.isVec4&&this.isVectorA)this.elementsPerThread=[1,1,1],this.workgroupSize=[32,1,1];else{let d=O1(e[1],u,e[2],o);this.workgroupSize=d.workgroupSize,this.elementsPerThread=d.elementsPerThread}this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize,this.elementsPerThread);let c=i!=null,p=a!=null;c&&this.variableNames.push("bias"),p&&this.variableNames.push("preluActivationWeights"),this.sequentialAccessByThreads=l,this.transposeA=o,this.transposeB=n,this.addBias=c,this.activation=s,this.hasPreluActivationWeights=p,[this.fitAOuter,this.fitBOuter,this.fitInner]=this.getShapeFit(e[1],e[2],u),this.shaderKey=`matMulPacked_${this.elementsPerThread}_${o}_${n}_${this.activation}_${this.fitAOuter}_${this.fitBOuter}_${this.fitInner}_${this.isVec4}_${this.isVectorA}_${this.sequentialAccessByThreads}`}getShapeFit(t,e,o){let n=this.workgroupSize[1]*this.elementsPerThread[1],i=this.workgroupSize[0]*this.elementsPerThread[0];!this.isVec4&&this.isVectorA?this.tileInner=this.workgroupSize[0]*4:this.tileInner=i;let s=t%n===0,a=e%i===0,l=o%this.tileInner===0;return[s,a,l]}getUserCode(){return`
      ${nr(this.activation,this.hasPreluActivationWeights,this.isVec4)}
      ${zp(this.addBias,this.activation,!1,this.transposeB,this.fitAOuter,this.fitBOuter,this.fitInner,this.isVec4?4:1)}
      ${this.isVec4?Js(this.elementsPerThread,this.workgroupSize,this.transposeA,this.tileInner,!1,null,!0):this.isVectorA?bK(this.workgroupSize,this.transposeA):ea(this.elementsPerThread,this.workgroupSize,this.transposeA,this.tileInner,!1,null,this.sequentialAccessByThreads,!0)}
    `}};function SK(r){return`
    var<workgroup> sumValues : array<f32, ${r}>;
    ${J()} {
      let coords = getOutputCoords();
      let batch = coords[0];
      let batchA = batch % uniforms.aShape[0];
      let batchB = batch % uniforms.bShape[0];
      let row = coords[1];
      let col = coords[2];
      var sum = 0.0;
      let Length = uniforms.dimInner;
      for (var k = i32(localId.x); k < Length; k = k + ${r}) {
        let dataA = mm_readA(batchA, row, k);
        let dataB = mm_readB(batchB, k, col);
        sum = sum + dataA * dataB;
      }
      sumValues[localId.x] = sum;
      workgroupBarrier();

      for(var currentSize = ${r/2}u; currentSize > 1u;
          currentSize = currentSize / 2u) {
        if (localId.x < currentSize)
        {
          sumValues[localId.x] = sumValues[localId.x] + sumValues[localId.x + currentSize];
        }
        workgroupBarrier();
      }

      if (localId.x == 0u) {
        sum = sumValues[0] + sumValues[1];
        mm_write(batch, row, col, sum);
      }
    }
  `}var yh=class{constructor(t,e=!1,o=!1,n=null,i=null,s=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workgroupSize=[256,1,1],this.outputShape=t,this.dispatchLayout={x:[],y:[1,2],z:[0]},this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize);let a=n!=null,l=s!=null;a&&this.variableNames.push("bias"),l&&this.variableNames.push("preluActivationWeights"),this.transposeA=e,this.transposeB=o,this.addBias=a,this.activation=i,this.hasPreluActivationWeights=l,this.shaderKey=`matMulReduce_${this.activation}_${e}_${o}`}getUserCode(){return`
      ${nr(this.activation,this.hasPreluActivationWeights)}
      ${zp(this.addBias,this.activation,this.transposeA,this.transposeB)}
      ${SK(this.workgroupSize[0])}
    `}};function wK(r){let t=r[1],e=r[0],o=t>e?t:e;return`
  var<workgroup> mm_Asub : array<array<f32, ${o}>, ${t}>;
  var<workgroup> mm_Bsub : array<array<f32, ${e}>, ${o}>;

  // If the output size is small for matrix multiplication, avoid to use vec4
  // and handle some elements per thread to optimally utilize the ALU.
  // Read data from global memory to registers firstly, then store them into
  // shared memory, so it is instruction-Level parallelism for arithmetic
  // operations and others handle IO operations between barrier api, makes ALU
  // and load/store units work simultaneously, could improves the performance.
  ${J()} {
    let tileRow = i32(localId.y);
    let tileCol = i32(localId.x);
    let globalRow = i32(globalId.y);
    let globalCol = i32(globalId.x);
    let batch = i32(globalId.z);
    let batchA = batch % uniforms.aShape[0];
    let batchB = batch % uniforms.bShape[0];

    // uniforms.dimInner should be greater than 0.
    let numTiles = (uniforms.dimInner - 1) / ${o} + 1;
    var acc = 0.0;

    var globalColA = tileCol;
    var globalRowB = 0;
    var regA = mm_readA(batchA, globalRow, globalColA);
    var regB0 = mm_readB(batchB, globalRowB + 2 * tileRow, globalCol);
    var regB1 = mm_readB(batchB, globalRowB + 2 * tileRow + 1, globalCol);
    globalColA = globalColA + ${o};
    globalRowB = globalRowB + ${o};

    for (var t = 0; t < numTiles; t = t + 1) {
      mm_Asub[tileRow][tileCol] = regA;
      mm_Bsub[2 * tileRow][tileCol] = regB0;
      mm_Bsub[2 * tileRow + 1][tileCol] = regB1;

      workgroupBarrier();

      regA = mm_readA(batchA, globalRow, globalColA);
      regB0 = mm_readB(batchB, globalRowB + 2 * tileRow, globalCol);
      regB1 = mm_readB(batchB, globalRowB + 2 * tileRow + 1, globalCol);
      globalColA = globalColA + ${o};
      globalRowB = globalRowB + ${o};

      for (var k = 0; k < ${o}; k = k + 1) {
        acc = acc + mm_Asub[tileRow][k] * mm_Bsub[k][tileCol];
      }
      workgroupBarrier();
    }

    mm_write(batch, globalRow, globalCol, acc);
  }
  `}var vh=class{constructor(t,e,o,n=!1,i=!1,s=null,a=null,l=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workgroupSize=[16,8,1],this.outputShape=o,this.dispatchLayout={x:[2],y:[1],z:[0]},this.dispatch=[Math.ceil(o[2]/this.workgroupSize[0]),Math.ceil(o[1]/this.workgroupSize[1]),o[0]];let u=s!=null;u&&this.variableNames.push("bias");let c=l!=null;c&&this.variableNames.push("preluActivationWeights"),this.transposeA=n,this.transposeB=i,this.addBias=u,this.activation=a,this.hasPreluActivationWeights=c,this.shaderKey=`matMulSmallOutputSize_${this.activation}_${n}_${i}`}getUserCode(){return`
      ${nr(this.activation,this.hasPreluActivationWeights)}
      ${zp(this.addBias,this.activation,this.transposeA,this.transposeB)}
      ${wK(this.workgroupSize)}
    `}};var bh=class{constructor(t,e,o=!1,n=!1){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workgroupSize=[8,8,1],this.atomic=!0,this.splitedDimInner=128,S.assert(t[0]===1,()=>"MatMulSplitKProgram only supports batch = 1."),this.outputShape=t,this.dispatchLayout={x:[2],y:[1],z:[0,3]};let i=(o&&this.outputShape[1]%4===0||!o&&e%4===0)&&this.outputShape[2]%4===0;this.elementsPerThread=[4,4,this.splitedDimInner],this.outputComponent=i?4:1,i||(this.outputShape[1]<16&&(this.elementsPerThread[1]=1),this.outputShape[2]<16&&(this.elementsPerThread[0]=1)),this.dispatch=ee(this.dispatchLayout,[this.outputShape[0],this.outputShape[1],this.outputShape[2],e],this.workgroupSize,this.elementsPerThread),this.transposeA=o,this.transposeB=n,this.shaderKey=`matMulSplitK_${o}_${n}_${this.elementsPerThread}_${this.outputComponent}`}getUserCode(){let t=this.outputComponent;return`
      ${L1(!1,this.transposeB,!1,!1,!1,t)}
      fn mm_write(batch: i32, row : i32, col : i32, value : ${ze(t)}) {
        if (row < uniforms.dimAOuter && col < uniforms.dimBOuter) {
          let coords = vec3<i32>(batch, row, col);
          let flatIndex = getOutputIndexFromCoords(coords);
          // The problem is that we should initialize output to zero before using.
          // Otherwise, the original value will be added to the result.
          for (var i = 0; i < ${t}; i = i + 1) {
            ${Qr("&result[flatIndex + i]",`${t>1?"value[i]":"value"}`,"float32")}
          }
        }
      }
      ${t===4?Js(this.elementsPerThread,this.workgroupSize,this.transposeA,32,!0,this.splitedDimInner):ea(this.elementsPerThread,this.workgroupSize,this.transposeA,32,!0,this.splitedDimInner)}
    `}},Sh=class{constructor(t,e=null,o=null,n=null){this.uniforms="",this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize),this.addBias=e!=null,this.hasPreluActivationWeights=n!=null,this.activation=o,this.addBias&&this.variableNames.push("bias"),this.hasPreluActivationWeights&&this.variableNames.push("preluActivationWeights"),this.shaderKey=`biasActivation_${o}`}getUserCode(){return`
    ${nr(this.activation,this.hasPreluActivationWeights)}
    ${J("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        var value = getXByOutputIndex(index);
        ${Zr(this.addBias,this.activation)}
        setOutputAtIndex(index, value);
      }
    }
    `}};var wh=class{constructor(t){this.variableNames=[],this.outputShape=[],this.uniforms="value : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="fill"}getUserCode(){return`
    ${J("index")} {
      if (index < uniforms.size) {
        setOutputAtIndex(index, uniforms.value);
      }
    }
  `}};function wt(r){let{backend:t,attrs:e}=r,{shape:o,value:n}=e,{dtype:i}=e;if(i=i||S.inferDtype(n),i==="string"){let s=S.getArrayFromDType(i,S.sizeFromShape(o));return s.fill(n),t.makeTensorInfo(o,i,s)}else{let s=new wh(o),a=[{type:"float32",data:[n]}];return t.runWebGPUProgram(s,[],i,a)}}var LI={kernelName:Dl,backendName:"webgpu",kernelFunc:wt};function fe(r){let{inputs:t,attrs:e}=r,{x:o}=t,{shape:n}=e,i=S.sizeFromShape(o.shape),s=S.inferFromImplicitShape(n,i),a=S.sizeFromShape(s);return S.assert(i===a,()=>`The new shape (${s}) has ${a} elements and the old shape (${o.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`),r.backend.incRef(o.dataId),{dataId:o.dataId,shape:s,dtype:o.dtype}}var MI={kernelName:xu,backendName:"webgpu",kernelFunc:fe};function ta({a:r,b:t,transposeA:e,transposeB:o,backend:n,bias:i=null,preluActivationWeights:s=null,leakyreluAlpha:a=0,activation:l=null}){let u=r.shape.length,c=t.shape.length,p=e?r.shape[u-2]:r.shape[u-1],d=o?t.shape[c-1]:t.shape[c-2],m=e?r.shape[u-1]:r.shape[u-2],f=o?t.shape[c-2]:t.shape[c-1],g=r.shape.slice(0,-2),x=t.shape.slice(0,-2),y=S.sizeFromShape(g),b=S.sizeFromShape(x),R=dn.assertAndGetBroadcastShape(r.shape.slice(0,-2),t.shape.slice(0,-2)).concat([m,f]);S.assert(p===d,()=>`Error in matMul: inner shapes (${p}) and (${d}) of Tensors with shapes ${r.shape} and ${t.shape} and transposeA=${e} and transposeB=${o} must match.`);let M=e?[y,p,m]:[y,m,p],V=o?[b,f,d]:[b,d,f],z=fe({inputs:{x:r},backend:n,attrs:{shape:M}}),H=fe({inputs:{x:t},backend:n,attrs:{shape:V}}),K=[z,H],X=Math.max(y,b),te=[z,H],ce=[{type:"int32",data:[m]},{type:"int32",data:[f]},{type:"int32",data:[p]}],pe,ve,Se=[X,m,f],Ee=G().get("WEBGPU_MATMUL_PROGRAM_TYPE");if(Ee<0){let Xe=G().getNumber("WEBGPU_THRESHOLD_TO_INCREASE_WORKGROUPS_FOR_MATMUL"),st=Xe>0?Xe:n.thresholdToIncreaseWorkgroups,jt=X*Math.ceil(m/32)*Math.ceil(f/32);jt<=st||m<=8&&jt<=st*2?X*m*f<=128?Ee=Ho.MatMulReduceProgram:X===1&&d>=2e3?Ee=Ho.MatMulSplitKProgram:Ee=Ho.MatMulSmallOutputSizeProgram:Ee=Ho.MatMulPackedProgram}switch(Ee){case Ho.MatMulReduceProgram:pe=new yh(Se,e,o,i,l,s);break;case Ho.MatMulSplitKProgram:{if(ve=wt({backend:n,attrs:{shape:Se,value:0,dtype:r.dtype}}),pe=new bh(Se,d,e,o),i||l){ve=n.runWebGPUProgram(pe,te,r.dtype,ce,ve);let st=new Sh(ve.shape,i,l,s),jt=null,Jt=[ve];i&&Jt.push(i),s&&Jt.push(s),l==="leakyrelu"&&(jt=[{type:"float32",data:[a]}],st.uniforms+=" alpha : f32,");let Yo=n.runWebGPUProgram(st,Jt,ve.dtype,jt);K.push(ve);let Sn=fe({inputs:{x:Yo},backend:n,attrs:{shape:R}});K.push(Yo);for(let ga of K)n.disposeData(ga.dataId);return Sn}break}case Ho.MatMulSmallOutputSizeProgram:pe=new vh(M,V,Se,e,o,i,l,s);break;case Ho.MatMulPackedProgram:let Xe=n.adapterInfo.isIntel();pe=new xh(M,Se,e,o,i,l,s,Xe);break;default:throw new Error(`Unsupported MatMulProgramType ${Ee}.`)}i&&te.push(i),s&&te.push(s),l==="leakyrelu"&&(ce.push({type:"float32",data:[a]}),pe.uniforms+=" alpha : f32,"),ve=n.runWebGPUProgram(pe,te,r.dtype,ce,ve);let je=fe({inputs:{x:ve},backend:n,attrs:{shape:R}});K.push(ve);for(let Xe of K)n.disposeData(Xe.dataId);return je}function _K(r){let{inputs:t,backend:e,attrs:o}=r,{a:n,b:i,bias:s,preluActivationWeights:a}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:p}=o;return ta({a:n,b:i,transposeA:l,transposeB:u,backend:e,bias:s,preluActivationWeights:a,leakyreluAlpha:p,activation:c})}var BI={kernelName:ks,backendName:"webgpu",kernelFunc:_K};var Up=class{constructor(t,e,o){this.variableNames=["AReal","AImag","BReal","BImag"],this.workgroupSize=[128,1,1],this.size=!0,this.outputShape=$.assertAndGetBroadcastShape(e,o),this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey=`binaryOpComplex_${t}`,this.op=t}getUserCode(){return`
      fn binaryOpComplex(
          areal : f32, aimag : f32, breal : f32, bimag : f32) -> f32 {
        ${vc(this.op,!1)}
      }

      ${J("index")} {
        if(index < uniforms.size) {
          let areal = getARealByOutputIndex(index);
          let aimag = getAImagByOutputIndex(index);
          let breal = getBRealByOutputIndex(index);
          let bimag = getBImagByOutputIndex(index);
          setOutputAtIndex(index, binaryOpComplex(areal, aimag, breal, bimag));
        }
      }
    `}};var Kn=class{constructor(t,e,o){if(this.size=!0,this.variableNames=["A","B"],this.outputShape=$.assertAndGetBroadcastShape(e,o),this.dispatchLayout=ie(this.outputShape),this.op=t,this.useSharedMemoryWithA=e.length<=1&&o.length>1&&e[0]<128,this.useSharedMemoryWithB=o.length<=1&&e.length>1&&o[0]<128,this.useSharedMemoryWithA||this.useSharedMemoryWithB)this.outputComponent=1,this.variableComponents=[1,1],this.lastDimensionSize=this.useSharedMemoryWithB?o[0]:e[0],this.shaderKey=`binary_${t}_${this.lastDimensionSize}`,this.type="shared",this.workgroupSize=[256,1,1];else{let n=e.length>0&&e[e.length-1]%4===0,i=o.length>0&&o[o.length-1]%4===0;n&&i?(this.outputComponent=4,this.variableComponents=[4,4]):n&&(S.isScalarShape(o)||o[o.length-1]===1)||i&&(S.isScalarShape(e)||e[e.length-1]===1)?(this.outputComponent=4,this.variableComponents=n?[4,1]:[1,4]):(this.outputComponent=1,this.variableComponents=[1,1]),this.type="nonshared",this.shaderKey=`binary_${t}_${this.variableComponents}`,this.workgroupSize=[128,1,1]}this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.outputComponent,1,1])}getUserCode(){let t,e=this.outputComponent===4?"vec4<f32>":"f32",o=`
    fn binaryOperation(a : ${e}, b : ${e}) -> ${e} {
      ${vc(this.op,this.outputComponent===4)}
    };
    `;if(this.type==="shared"){let n=this.lastDimensionSize>1?`coords[${this.outputShape.length-1}]`:"0",i=this.useSharedMemoryWithB?`let a = getAByOutputIndex(index);
          let b = sharedBuf[${n}];`:`let a = sharedBuf[${n}];
          let b = getBByOutputIndex(index);`;t=`
        ${o}
        var<workgroup> sharedBuf : array<f32, ${this.lastDimensionSize}>;
        ${J("index")} {
          // Fill in the shared memory buffer.
          let localIndex = i32(localId.x);
          if(localIndex < ${this.lastDimensionSize}) {
            sharedBuf[localIndex] = f32(${this.useSharedMemoryWithB?"B":"A"}[localIndex]);
          }
          workgroupBarrier();

          if(index < uniforms.size) {
            let coords = getCoordsFromIndex(index);
            ${i}
            setOutputAtIndex(index, binaryOperation(a, b));
          }
        }
        `}else t=`
       ${o}
       ${J("index")} {
         if (index < uniforms.size) {
           let coords = getCoordsFromIndex(index * ${this.outputComponent});
           let a = ${e}(getAByOutputCoords(coords));
           let b = ${e}(getBByOutputCoords(coords));
           setOutputAtIndex(index, binaryOperation(a, b));
         }
       }
       `;return t}};function Pt(r){let{inputs:t}=r,{x:e}=t;return r.backend.incRef(e.dataId),{dataId:e.dataId,shape:e.shape,dtype:e.dtype}}var VI={kernelName:$n,backendName:"webgpu",kernelFunc:Pt};function go(r){let{inputs:t,backend:e}=r,{real:o,imag:n}=t,i=e.makeTensorInfo(o.shape,"complex64"),s=e.tensorMap.get(i.dataId),a=Pt({inputs:{x:o},backend:e}),l=Pt({inputs:{x:n},backend:e});return s.complexTensorInfos={real:a,imag:l},i}var WI={kernelName:vs,backendName:"webgpu",kernelFunc:go};var Jr=class{constructor(t,e,o=""){this.variableNames=["A"],this.size=!0;let n=128;this.workgroupSize=[n,1,1],this.outputShape=t,this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize),this.op=e,o!==""&&(this.uniforms=o),this.shaderKey=`unary_${e}`}getUserCode(){return`
      fn unaryOperation(a : f32) -> f32 {
        ${Hn(this.op,!1)}
      }
      ${J("index")} {
        if (index < uniforms.size) {
          let a = getAByOutputIndex(index);
          setOutputAtIndex(index, unaryOperation(a));
        }
      }
      `}};function Ie({opType:r,cpuKernelImpl:t,dtype:e}){return({inputs:o,backend:n})=>{let{x:i}=o,s=n,a=e||i.dtype;if(s.shouldExecuteOnCPU([i])&&t!=null){let u=s.tensorMap.get(i.dataId),c=t(u.values,a);return s.makeTensorInfo(i.shape,a,c)}let l=new Jr(i.shape,r);return s.runWebGPUProgram(l,[i],a)}}function Je({opType:r,cpuKernelImpl:t,supportsComplex:e=!1,dtype:o}){return({inputs:n,backend:i})=>{let{a:s,b:a}=n,l=i;if(e&&s.dtype==="complex64"){let p=l.tensorMap.get(s.dataId),d=l.tensorMap.get(a.dataId),m,f;if(r!==ke.MUL)[m,f]=[[p.complexTensorInfos.real,d.complexTensorInfos.real],[p.complexTensorInfos.imag,d.complexTensorInfos.imag]].map(x=>{let[y,b]=x,T={dataId:y.dataId,dtype:y.dtype,shape:s.shape},R={dataId:b.dataId,dtype:b.dtype,shape:a.shape},M=new Kn(r,s.shape,a.shape);return l.runWebGPUProgram(M,[T,R],Tt(y.dtype,b.dtype))});else{let x=new Up(ke.COMPLEX_MULTIPLY_REAL,s.shape,a.shape),y=new Up(ke.COMPLEX_MULTIPLY_IMAG,s.shape,a.shape),b=[{dataId:p.complexTensorInfos.real.dataId,dtype:p.complexTensorInfos.real.dtype,shape:s.shape},{dataId:p.complexTensorInfos.imag.dataId,dtype:p.complexTensorInfos.imag.dtype,shape:s.shape},{dataId:d.complexTensorInfos.real.dataId,dtype:d.complexTensorInfos.real.dtype,shape:a.shape},{dataId:d.complexTensorInfos.imag.dataId,dtype:d.complexTensorInfos.imag.dtype,shape:a.shape}];m=l.runWebGPUProgram(x,b,"float32"),f=l.runWebGPUProgram(y,b,"float32")}let g=go({inputs:{real:m,imag:f},backend:l});return l.disposeData(m.dataId),l.disposeData(f.dataId),g}let u=o||Tt(s.dtype,a.dtype);if((s.dtype==="string"||a.dtype==="string"||l.shouldExecuteOnCPU([s,a]))&&t!=null){let p=l.tensorMap.get(s.dataId).values,d=l.tensorMap.get(a.dataId).values,m=s.dtype==="string"?$.fromUint8ToStringArray(p):p,f=s.dtype==="string"?$.fromUint8ToStringArray(d):d,[g,x]=t(s.shape,a.shape,m,f,u);return l.makeTensorInfo(x,u,g)}let c=new Kn(r,s.shape,a.shape);return l.runWebGPUProgram(c,[s,a],u)}}var qp={};dt(qp,{addImpl:()=>V1,bincountImpl:()=>GI,bincountReduceImpl:()=>HI,bitwiseAndImpl:()=>W1,castImpl:()=>B1,ceilImpl:()=>z1,concatImpl:()=>KI,equalImpl:()=>U1,expImpl:()=>G1,expm1Impl:()=>H1,floorDivImpl:()=>q1,floorImpl:()=>K1,gatherNdImpl:()=>qI,gatherV2Impl:()=>jI,greaterEqualImpl:()=>X1,greaterImpl:()=>j1,lessEqualImpl:()=>Q1,lessImpl:()=>Y1,linSpaceImpl:()=>XI,logImpl:()=>Z1,maxImpl:()=>YI,maximumImpl:()=>J1,minimumImpl:()=>ev,multiplyImpl:()=>Hp,negImpl:()=>QI,notEqualImpl:()=>tv,prodImpl:()=>JI,raggedGatherImpl:()=>tT,raggedRangeImpl:()=>oT,raggedTensorToTensorImpl:()=>sT,rangeImpl:()=>aT,rsqrtImpl:()=>ov,scatterImpl:()=>lT,sigmoidImpl:()=>uT,simpleAbsImpl:()=>zI,sliceImpl:()=>cT,sparseFillEmptyRowsImpl:()=>pT,sparseReshapeImpl:()=>dT,sparseSegmentReductionImpl:()=>mT,sqrtImpl:()=>fT,squaredDifferenceImpl:()=>nv,staticRegexReplaceImpl:()=>iv,stridedSliceImpl:()=>hT,stringNGramsImpl:()=>gT,stringSplitImpl:()=>xT,stringToHashBucketFastImpl:()=>yT,subImpl:()=>av,tileImpl:()=>vT,topKImpl:()=>ST,transposeImpl:()=>ZI,uniqueImpl:()=>wT});function _h(r,t){Array.isArray(r)||(r=[r]),r.forEach(e=>{e!=null&&S.assert(e.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the CPU backend.`)})}function zI(r){let t=new Float32Array(r.length);for(let e=0;e<r.length;++e)t[e]=Math.abs(r[e]);return t}function gt(r){return(t,e,o,n,i)=>{let s=$.assertAndGetBroadcastShape(t,e),a=s.length,l=S.computeStrides(s),u=S.sizeFromShape(s),c=S.getTypedArrayFromDType(i,u),p=t.length,d=e.length,m=S.computeStrides(t),f=S.computeStrides(e),g=$.getBroadcastDims(t,s),x=$.getBroadcastDims(e,s);if(g.length+x.length===0)for(let y=0;y<c.length;++y)c[y]=r(o[y%o.length],n[y%n.length]);else for(let y=0;y<c.length;++y){let b=S.indexToLoc(y,a,l),T=b.slice(-p);g.forEach(z=>T[z]=0);let R=S.locToIndex(T,p,m),M=b.slice(-d);x.forEach(z=>M[z]=0);let V=S.locToIndex(M,d,f);c[y]=r(o[R],n[V])}return[c,s]}}function bc(r){let{inputs:t,backend:e}=r,{real:o,imag:n}=t,i=e.data.get(o.dataId).values,s=e.data.get(n.dataId).values,a=e.makeTensorInfo(o.shape,"complex64"),l=e.data.get(a.dataId);return l.complexTensorInfos={real:e.makeTensorInfo(o.shape,"float32",i),imag:e.makeTensorInfo(n.shape,"float32",s)},a}function Ch(r,t,e="float32"){if(e==="complex64"){let n=Ch(r,t,"float32"),i=Ch(r,t,"float32");return bc({inputs:{real:n,imag:i},backend:r})}let o=S.makeZerosTypedArray(S.sizeFromShape(t),e);return r.makeTensorInfo(t,e,o)}function M1(r){let{inputs:t,backend:e}=r,{x:o}=t;return e.incRef(o.dataId),{dataId:o.dataId,shape:o.shape,dtype:o.dtype}}function UI(r){let{inputs:t,backend:e}=r,{input:o}=t,n=e.data.get(o.dataId).complexTensorInfos.real,i=e.data.get(n.dataId).values;return e.makeTensorInfo(n.shape,n.dtype,i)}function B1(r,t,e,o){if(o==="int32"){let n=Int32Array.from(r);return[t,"int32",n]}if(o==="bool"){let n=S.toTypedArray([0],e),[i,s]=gt((a,l)=>a!==l?1:0)(t,[],r,n,"bool");return[s,"bool",i]}throw new Error(`Error in Cast: failed to cast ${e} to ${o}`)}function Gp(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{dtype:i}=o;if(i==="complex64"){if(n.dtype==="complex64")return M1({inputs:{x:n},backend:e});let c=Ch(e,n.shape,n.dtype),p=Gp({inputs:{x:n},backend:e,attrs:{dtype:"float32"}}),d=bc({inputs:{real:p,imag:c},backend:e});return e.disposeIntermediateTensorInfo(c),e.disposeIntermediateTensorInfo(p),d}if(n.dtype==="complex64"){let c=UI({inputs:{input:n},backend:e}),p=Gp({inputs:{x:c},backend:e,attrs:{dtype:i}});return e.disposeIntermediateTensorInfo(c),p}if(!S.hasEncodingLoss(n.dtype,i)){let c=M1({inputs:{x:n},backend:e});return{dataId:c.dataId,shape:c.shape,dtype:i}}let s=e.data.get(n.dataId).values,[a,l,u]=B1(s,n.shape,n.dtype,i);return e.makeTensorInfo(a,l,u)}function xt(r,t,e,o){return e==null?({inputs:n,backend:i})=>{let{a:s,b:a}=n,l=i;_h([s,a],r);let u=l.data.get(s.dataId).values,c=l.data.get(a.dataId).values,p=s.dtype==="string"?$.fromUint8ToStringArray(u):u,d=s.dtype==="string"?$.fromUint8ToStringArray(c):c,m=o||s.dtype,[f,g]=t(s.shape,a.shape,p,d,m);return l.makeTensorInfo(g,m,f)}:({inputs:n,backend:i})=>{let{a:s,b:a}=n,l=i;if(s.dtype==="complex64"||a.dtype==="complex64"){let u=Gp({inputs:{x:s},backend:l,attrs:{dtype:"complex64"}}),c=l.data.get(u.dataId),p=c.complexTensorInfos.real,d=c.complexTensorInfos.imag,m=l.data.get(p.dataId).values,f=l.data.get(d.dataId).values,g=Gp({inputs:{x:a},backend:l,attrs:{dtype:"complex64"}}),x=l.data.get(g.dataId),y=x.complexTensorInfos.real,b=x.complexTensorInfos.imag,T=l.data.get(y.dataId).values,R=l.data.get(b.dataId).values,[M,V,z]=e(s.shape,a.shape,m,f,T,R),H=l.makeTensorInfo(z,"float32",M),K=l.makeTensorInfo(z,"float32",V),X=bc({inputs:{real:H,imag:K},backend:l});return l.disposeIntermediateTensorInfo(u),l.disposeIntermediateTensorInfo(g),l.disposeIntermediateTensorInfo(H),l.disposeIntermediateTensorInfo(K),X}else{let u=l.data.get(s.dataId).values,c=l.data.get(a.dataId).values,p=o||s.dtype,[d,m]=t(s.shape,a.shape,u,c,p);return l.makeTensorInfo(m,p,d)}}}function Sc(r){return(t,e,o,n,i,s)=>{let a=$.assertAndGetBroadcastShape(t,e),l=S.sizeFromShape(a),u=a.length,c=S.computeStrides(a),p=S.getTypedArrayFromDType("float32",l),d=S.getTypedArrayFromDType("float32",l),m=$.getBroadcastDims(t,a),f=$.getBroadcastDims(e,a),g=$.mergeRealAndImagArrays(o,n),x=$.mergeRealAndImagArrays(i,s),y=t.length,b=S.computeStrides(t),T=e.length,R=S.computeStrides(e);if(m.length+f.length===0)for(let M=0;M<p.length;M++){let V=M%g.length,z=M%x.length,H=r(g[V*2],g[V*2+1],x[z*2],x[z*2+1]);p[M]=H.real,d[M]=H.imag}else for(let M=0;M<p.length;M++){let V=S.indexToLoc(M,u,c),z=V.slice(-y);m.forEach(ce=>z[ce]=0);let H=S.locToIndex(z,y,b),K=V.slice(-T);f.forEach(ce=>K[ce]=0);let X=S.locToIndex(K,T,R),te=r(g[H*2],g[H*2+1],x[X*2],x[X*2+1]);p[M]=te.real,d[M]=te.imag}return[p,d,a]}}var V1=gt((r,t)=>r+t),CK=Sc((r,t,e,o)=>({real:r+e,imag:t+o})),e6e=xt(sn,V1,CK);function GI(r,t,e,o,n){let i=S.sizeFromShape(o),s=S.makeZerosTypedArray(n,e);for(let a=0;a<r.length;a++){let l=r[a];if(l<0)throw new Error("Input x must be non-negative!");l>=n||(i>0?s[l]+=t[a]:s[l]+=1)}return s}function HI(r,t,e,o=!1){let n=r.shape[0],i=r.shape[1],s=Me([n,e],t.dtype);for(let a=0;a<n;a++)for(let l=0;l<i;l++){let u=r.get(a,l);if(u<0)throw new Error("Input x must be non-negative!");u>=e||(o?s.set(1,a,u):t.size>0?s.set(s.get(a,u)+t.get(a,l),a,u):s.set(s.get(a,u)+1,a,u))}return s}var W1=gt((r,t)=>r&t),a6e=xt(sl,W1);function qt(r){return(t,e,o)=>{let n=S.getArrayFromDType(e,t.length);for(let i=0;i<t.length;++i)n[i]=r(t[i],o);return n}}function kh(r,t,e){let o=qt(t);return Fr(r,o,e)}function Fr(r,t,e){return({inputs:o,attrs:n,backend:i})=>{let{x:s}=o;_h(s,r);let a=i,l=a.data.get(s.dataId).values,u;if(s.dtype==="string"){if(!Array.isArray(l))throw new Error("String tensor's value was not an instance of Array");u=$.fromUint8ToStringArray(l)}else u=l;let c=e||s.dtype,p=t(u,c,n);return a.makeTensorInfo(s.shape,c,p)}}var z1=qt(r=>Math.ceil(r)),y6e=Fr(di,z1);function KI(r,t,e,o){let n=S.getArrayFromDType(e,S.sizeFromShape(t));if(o&&e!=="string"){let i=0;r.forEach(s=>{let a=S.sizeFromShape(s.shape);n.set(s.vals,i),i+=a})}else{let i=0;r.forEach(s=>{let a=e==="string"?$.fromUint8ToStringArray(s.vals):s.vals,l=0;for(let u=0;u<s.shape[0];++u){let c=u*t[1]+i;for(let p=0;p<s.shape[1];++p)n[c+p]=a[l++]}i+=s.shape[1]})}return n}var U1=gt((r,t)=>r===t?1:0),k6e=xt(mi,U1,null,"bool");var G1=qt(r=>Math.exp(r)),R6e=Fr(fi,G1,"float32");var H1=qt(r=>Math.expm1(r)),F6e=Fr(hi,H1);var K1=qt(r=>Math.floor(r)),V6e=Fr(gi,K1);var q1=gt((r,t)=>Math.floor(r/t)),H6e=xt(xi,q1,null,"int32");function qI(r,t,e,o,n,i,s,a,l){let u=Me([o,i],e);for(let c=0;c<o;c++){let p=[],d=0;for(let m=0;m<n;m++){let f=r[c*n+m];d+=f*s[m],p.push(f)}if(d<0||d>=l/i)throw new Error(`Invalid indices: ${p} does not index into ${a}`);for(let m=0;m<i;m++)u.values[c*i+m]=t.get(...t.indexToLoc(d*i+m))}return u}function jI(r,t,e){let o=Me(e,r.dtype);for(let n=0;n<o.size;++n){let s=o.indexToLoc(n).slice(),a=s[0],l=s[2],u=t.locToIndex([a,l]);s[2]=t.values[u];let c=r.locToIndex(s);0<=c&&c<r.values.length&&(o.values[n]=r.values[c])}return o}var j1=gt((r,t)=>r>t?1:0),eze=xt(yi,j1,null,"bool");var X1=gt((r,t)=>r>=t?1:0),ize=xt(vi,X1,null,"bool");var Y1=gt((r,t)=>r<t?1:0),cze=xt(bi,Y1,null,"bool");var Q1=gt((r,t)=>r<=t?1:0),hze=xt(Si,Q1,null,"bool");function XI(r,t,e){let o=(t-r)/(e-1),n=S.makeZerosTypedArray(e,"float32");n[0]=r;for(let i=1;i<n.length;i++)n[i]=n[i-1]+o;return n}var Z1=qt(r=>Math.log(r)),wze=Fr(wi,Z1);function YI(r,t,e,o){let n=S.getTypedArrayFromDType(o,S.sizeFromShape(e));for(let i=0;i<n.length;++i){let s=i*t,a=r[s];for(let l=0;l<t;++l){let u=r[s+l];(Number.isNaN(u)||u>a)&&(a=u)}n[i]=a}return n}var J1=gt((r,t)=>Math.max(r,t)),Nze=xt(_i,J1);var ev=gt((r,t)=>Math.min(r,t)),Dze=xt(Ci,ev);var Hp=gt((r,t)=>r*t),kK=Sc((r,t,e,o)=>({real:r*e-t*o,imag:r*o+t*e})),Bze=xt(ki,Hp,kK);function QI(r,t,e){let o=S.createScalarValue(-1,e);return Hp([],t,o,r,e)}var tv=gt((r,t)=>r!==t?1:0),qze=xt(Ii,tv,null,"bool");function ZI(r,t,e,o,n){let i=t.length,s=S.sizeFromShape(t),a=S.computeStrides(t),l=S.computeStrides(n),u=S.getTypedArrayFromDType(e,S.sizeFromShape(n));for(let c=0;c<s;++c){let p=S.indexToLoc(c,i,a),d=new Array(p.length);for(let f=0;f<d.length;f++)d[f]=p[o[f]];let m=S.locToIndex(d,i,l);u[m]=r[c]}return u}function JI(r,t,e,o){let[n,i]=$.computeOutAndReduceShapes(r,o),s=Tt(t,"int32"),a=S.makeZerosTypedArray(S.sizeFromShape(n),s),l=S.sizeFromShape(i);for(let u=0;u<a.length;++u){let c=u*l,p=1;for(let d=0;d<l;++d)p*=e[c+d];a[u]=p}return{outVals:a,outShape:n,outDtype:s}}function IK(r,t,e){r.forEach((o,n)=>{if(o<0||o>=e){let i=S.indexToLoc(n,t.length,S.computeStrides(t)).join(",");throw new Error(`indices[${i}] = ${o} is not in [0, ${e})`)}})}function TK(r,t){for(let e=0;e<r.length;++e){let o=r[e],n=e===r.length-1?t:r[e+1].length;if(o.length===0)throw new Error("Ragged splits may not be empty");if(o[0]<0)throw new Error("Ragged splits must be non-negative");if(o[o.length-1]>n)throw new Error("Ragged splits must not point past values");for(let i=1;i<o.length;++i)if(o[i-1]>o[i])throw new Error("Ragged splits must be sorted in ascending order")}}function EK(r,t,e,o){let n=[],i=0,s=t.length-1+e.length,a=new Array(s).fill(null).map(()=>[0]);TK(e,o);let l=1;for(let u=0;u<t.length-1;++u){l*=t[u];let c=t[u+1];for(let p=1;p<l+1;++p)a[u].push(p*c)}for(let u=0;u<r.length;++u){let c=r[u],p=r[u]+1;for(let d=0;d<e.length;++d){let m=e[d],f=d+t.length-1;if(f>=0){let g=a[f],x=g[g.length-1]-m[c];for(let y=c;y<p;++y)a[f].push(m[y+1]+x)}c=m[c],p=m[p]}p!==c&&(n.push([c,p]),i+=p-c)}return{outSplits:a,valueSlices:n,numValues:i}}function NK(r){let t=[];for(let e=0;e<r.length;++e){let o=r[e].length,n=S.getArrayFromDType("int32",o);t.push(n),r[e].forEach((i,s)=>n[s]=i)}return t}function eT(r,t){let e=r.slice(0,t);for(;e.length<t;)e.push(1);for(let o=t;o<r.length;o++)e[t-1]*=r[o];return e}function RK(r,t,e,o,n,i){let s=eT(t,2)[1],a=eT(i,2)[1],l=0;for(let u of e)for(let c=u[0];c<u[1];++c){for(let p=0;p<o;++p)n[l*a+p]=r[c*s+p];++l}}function $K(r,t,e,o,n){let i=t.slice();i[0]=n;let s=S.getArrayFromDType(e,S.sizeFromShape(i)),a=r.length,l=a===0?0:a/t[0];return RK(r,t,o,l,s,i),[s,i]}function tT(r,t,e,o,n,i,s,a){if(r.length===0)throw new Error("paramsNestedSplits must be non empty");if(t[0].length===0)throw new Error("Split tensors must not be scalars");let l=t[0][0]-1;if(IK(i,s,l),o.length===0)throw new Error("params.rank must be nonzero");let u=o[0],{outSplits:c,valueSlices:p,numValues:d}=EK(i,s,r,u),m=NK(c),f=$K(e,o,n,p,d);return[m,f[0],f[1]]}var rT=2147483647;function oT(r,t,e,o,n,i,s){if(t.length>1)throw new Error("starts must be a scalar or vector");if(n.length>1)throw new Error("limits must be a scalar or vector");if(s.length>1)throw new Error("deltas must be a scalar or vector");let a=t.length===0,l=n.length===0,u=s.length===0,c=[];a||c.push(t[0]),l||c.push(n[0]),u||c.push(s[0]);for(let x=1;x<c.length;++x)if(c[x]!==c[x-1])throw new Error("starts, limits, and deltas must have the same shape");let p=c.length===0?1:c[0],d=S.getArrayFromDType("int32",p+1);d[0]=0;for(let x=0;x<p;++x){let y=a?r[0]:r[x],b=l?o[0]:o[x],T=u?i[0]:i[x];if(T===0)throw new Error("Requires delta != 0");let R;if(T>0&&b<y||T<0&&b>y)R=0;else if(R=Math.ceil(Math.abs((b-y)/T)),R>rT)throw new Error(`Requires ((limit - start) / delta) <= ${rT}`);d[x+1]=d[x]+R}let m=d[p],f=S.getArrayFromDType(e,m),g=0;for(let x=0;x<p;++x){let y=d[x+1]-d[x],b=a?r[0]:r[x],T=u?i[0]:i[x];for(let R=0;R<y;++R)f[g++]=b,b+=T}return[d,f]}var No=$.RowPartitionType,rv=class r{constructor(t,e,o,n,i,s,a,l,u,c){this.shape=t,this.shapeShape=e,this.values=o,this.valuesShape=n,this.valuesDType=i,this.defaultValue=s,this.defaultValueShape=a,this.rowPartitionValues=l,this.rowPartitionValuesShapes=u,this.rowPartitionTypes=$.getRowPartitionTypesHelper(c),this.raggedRank=$.getRaggedRank(this.rowPartitionTypes)}getRowPartitionTypeByDimension(t){return this.rowPartitionTypes[0]===No.FIRST_DIM_SIZE?this.rowPartitionTypes[t+1]:this.rowPartitionTypes[t]}getRowPartitionTensor(t){return this.rowPartitionTypes[0]===No.FIRST_DIM_SIZE?this.rowPartitionValues[t+1]:this.rowPartitionValues[t]}getMaxWidth(t){let e=this.getRowPartitionTensor(t-1);switch(this.getRowPartitionTypeByDimension(t-1)){case No.VALUE_ROWIDS:return r.getMaxWidthValueRowID(e);case No.ROW_SPLITS:return r.getMaxWidthRowSplit(e);default:throw new Error(`Cannot handle partition type ${No[this.getRowPartitionTypeByDimension(t-1)]}`)}}static getMaxWidthRowSplit(t){let e=t.length;if(e===0||e===1)return 0;let o=0;for(let n=0;n<e-1;++n){let i=t[n+1]-t[n];i>o&&(o=i)}return o}static getMaxWidthValueRowID(t){let e=t.length;if(e===0)return 0;let o=0,n=t[0],i=0;for(let s=1;s<e;++s){let a=t[s];a!==n&&(n=a,i=Math.max(s-o,i),o=s)}return Math.max(e-o,i)}tensorShapeFromTensor(t,e,o=!0){if(e.length===0){if(t[0]===-1)return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return iT(t,o)}calculateOutputSize(t){let e=this.valuesShape,o=this.defaultValueShape;$.validateDefaultValueShape(o,e);let n=this.tensorShapeFromTensor(this.shape,this.shapeShape),s=$.combineRaggedTensorToTensorShapes(this.raggedRank,n,e);s[0]<0&&(s[0]=t);for(let a=1;a<=this.raggedRank;++a)s[a]<0&&(s[a]=this.getMaxWidth(a));return s}calculateFirstParentOutputIndex(t,e,o){let n=Math.min(t,o),i=[],s=0;for(let a=0;a<n;++a,s+=e)i.push(s);for(let a=n;a<t;++a)i.push(-1);return S.assert(i.length===t,()=>"Final length of result must be equal to firstDimension."),i}calculateOutputIndexRowSplit(t,e,o,n){let i=t.length,s=[];for(let a=0;a<i-1;++a){let l=t[a+1]-t[a],u=Math.min(n,l),c=e[a];c===-1&&(u=0);for(let p=0;p<u;++p)s.push(c),c+=o;for(let p=0;p<l-u;++p)s.push(-1)}if(i>0&&s.length!==t[i-1])throw new Error("Invalid row split size.");return s}calculateOutputIndexValueRowID(t,e,o,n){let i=t.length,s=[];if(i===0)return[];let a=0,l=t[0];if(l>=e.length)throw new Error(`Got currentValueRowId=${l}, which is not less than ${e.length}`);let u=e[l];s.push(u);for(let c=1;c<i;++c){let p=t[c];if(p===l)u>=0&&(++a,a<n?u+=o:u=-1);else{if(a=0,l=p,p>=e.length)throw new Error(`Got nextValueRowId=${p} which is not less than ${e.length}`);u=e[p]}s.push(u)}if(s.length!==t.length)throw new Error("Invalid row ids.");return s}calculateOutputIndex(t,e,o,n){let i=this.getRowPartitionTensor(t),s=this.getRowPartitionTypeByDimension(t);switch(s){case No.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(i,e,o,n);case No.ROW_SPLITS:if(i.length-1>e.length)throw new Error(`Row partition size is greater than output size: ${i.length-1} > ${e.length}`);return this.calculateOutputIndexRowSplit(i,e,o,n);default:throw new Error(`Unsupported partition type: ${No[s]}`)}}getFirstDimensionSize(){let t=this.rowPartitionValues[0];if(this.rowPartitionTypes.length===0)throw new Error("No row_partition_types given.");let e=this.rowPartitionTypes[0];switch(e){case No.FIRST_DIM_SIZE:return t[0];case No.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case No.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${No[e]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");let e=this.getFirstDimensionSize(),o=this.calculateOutputSize(e),n=new Array(this.raggedRank+1);n[n.length-1]=1;for(let l=n.length-2;l>=0;--l)n[l]=n[l+1]*o[l+1];let i=iT(o,!1),s=S.getArrayFromDType(this.valuesDType,S.sizeFromShape(i));if(n[0]*o[0]>0){let l=this.calculateFirstParentOutputIndex(e,n[0],o[0]);for(let u=1;u<=this.raggedRank;++u)l=this.calculateOutputIndex(u-1,l,n[u],o[u]);this.setOutput(this.raggedRank,l,s,i)}return[i,s]}setOutput(t,e,o,n){if(o.length===0)return;let i=this.values,s=o,a=n.slice();a=a.slice(t+1);let l=S.sizeFromShape(a),u=e.length,c=this.defaultValue;if(c.length!==l&&c.length!==1){let f=this.defaultValueShape;Ne(()=>{let g=Y(c,f);c=Wi(g,a).dataSync()})}let p=0,d=0,m=0;for(let f=0;f<=u;++f){let g=f<u?e[f]:-1;if(g===m){++m;continue}if(d<m){let x=i.subarray(p*l),y=s.subarray(d*l),b=(m-d)*l;nT(y,x,b)}if(f>=u){let x=o.length;g=Math.floor(x/l)}if(g>m)if(this.defaultValue.length===1)s.subarray(m*l,g*l).fill(this.defaultValue[0]),m=g;else for(;g>m;){let x=s.slice(m*l);nT(x,c,l),++m}g<0?(p=f+1,d=m):(p=f,d=m,m=d+1)}}};function nT(r,t,e){for(let o=0;o<e;o++)r[o]=t[o]}function iT(r,t){let e=[];for(let o of r){if(o<0){if(!t)throw new Error(`Dimension ${o} must be >= 0`);if(o<-1)throw new Error(`Dimension ${o} must be >= -1`);o=-1}e.push(o)}return e}function sT(r,t,e,o,n,i,s,a,l,u){return new rv(r,t,e,o,n,i,s,a,l,u).compute()}function aT(r,t,e,o){let n=r===t,i=r<t&&e<0,s=t<r&&e>1;if(n||i||s)return S.makeZerosTypedArray(0,o);let a=Math.abs(Math.ceil((t-r)/e)),l=S.makeZerosTypedArray(a,o);t<r&&e===1&&(e=-1),l[0]=r;for(let u=1;u<l.length;u++)l[u]=l[u-1]+e;return l}var ov=qt(r=>1/Math.sqrt(r)),cUe=Fr(Ti,ov);function lT(r,t,e,o,n,i,s,a,l,u){let c=[o/n,n],p=r.values,d=t.values;if(o===0)return Me(e,t.dtype);let m=l instanceof co?l:Me(c,t.dtype);typeof l=="string"||typeof l=="number"?m.values.fill(l):typeof l=="boolean"&&m.values.fill(+l);for(let f=0;f<i;f++){let g=[],x=0;for(let y=0;y<s;y++){let b=p[f*s+y];g.push(b),x+=b*a[y]}if(x<0||x>=o/n)throw new Error(`Invalid indices: ${g} does not index into ${e}`);for(let y=0;y<n;y++)u?m.values[x*n+y]+=d[f*n+y]:m.values[x*n+y]=t.rank===0?d[0]:d[f*n+y]}return m}var uT=qt(r=>1/(1+Math.exp(-r))),xUe=kh(Ei,r=>1/(1+Math.exp(-r)));function cT(r,t,e,o,n){let i=Gt.isSliceContinous(o,t,e),s=S.sizeFromShape(e),a=S.computeStrides(o);if(i){let p=Gt.computeFlatOffset(t,a);return n==="string"?r.slice(p,p+s):r.subarray(p,p+s)}let l=n==="string"?$.fromUint8ToStringArray(r):r,u=Me(o,n,l),c=Me(e,n);for(let p=0;p<c.size;++p){let d=c.indexToLoc(p),m=d.map((f,g)=>f+t[g]);c.set(u.get(...m),...d)}return n==="string"?$.fromStringArrayToUint8(c.values):c.values}function pT(r,t,e,o,n,i,s){let a=t[0],l=i[0],u=new Array(l),c=new Array(a),p=t[1];if(l===0){if(a!==0)throw new Error($.getSparseFillEmptyRowsIndicesDenseShapeMismatch(a));let x=S.getArrayFromDType(e,0),y=S.getArrayFromDType(n,0);return[x,[0,p],y,u,c]}let d=!0,m=0,f=new Array(l).fill(0);for(let x=0;x<a;++x){let y=r[x*p];if(y<0)throw new Error($.getSparseFillEmptyRowsNegativeIndexErrorMessage(x,y));if(y>=l)throw new Error($.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(x,y,l));++f[y],d=d&&y>=m,m=y}let g=!0;for(let x=0;x<l;++x){let y=f[x]===0;u[x]=y,g=g&&!y,f[x]=Math.max(f[x],1),x>0&&(f[x]+=f[x-1])}if(g&&d){let x=r,y=o;for(let b=0;b<a;++b)c[b]=b;return[x,[a,p],y,u,c]}else{let x=f[l-1],y=S.getArrayFromDType(e,x*p),b=S.getArrayFromDType(n,x),T=new Array(l).fill(0);for(let R=0;R<a;++R){let M=r[R*p],V=T[M],z=(M===0?0:f[M-1])+V;T[M]++;for(let H=0;H<p;++H)y[z*p+H]=r[R*p+H];b[z]=o[R],c[R]=z}for(let R=0;R<l;++R)if(T[R]===0){let V=R===0?0:f[R-1];y[V*p+0]=R;for(let z=1;z<p;++z)y[V*p+z]=0;b[V]=s}return[y,[x,p],b,u,c]}}function dT(r,t,e,o,n){let i=S.sizeFromShape(o),s=t[0],a=n.length,l=[],u=1,c=-1;for(let x=0;x<a;++x){let y=n[x];if(y===-1){if(c!==-1)throw new Error($.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(c,x));c=x,l.push(1)}else{if(y<0)throw new Error($.getSparseReshapeNegativeOutputDimErrorMessage(x,y));u*=y,l.push(y)}}if(c!==-1){if(u<=0)throw new Error($.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());let x=Math.trunc(i/u);if(u*x!==i)throw new Error($.getSparseReshapeInputOutputMultipleErrorMessage(o,l));l[c]=x}if(S.sizeFromShape(l)!==i)throw new Error($.getSparseReshapeInputOutputMismatchErrorMessage(o,l));let d=o.length,m=[];if(d>0){m[d-1]=1;for(let x=d-2;x>=0;--x)m[x]=m[x+1]*o[x+1]}let f=[];if(a>0){f[a-1]=1;for(let x=a-2;x>=0;--x)f[x]=f[x+1]*l[x+1]}let g=S.getArrayFromDType(e,s*a);for(let x=0;x<s;++x){let y=0;for(let b=0;b<d;++b)y+=r[x*d+b]*m[b];for(let b=0;b<a;++b)g[x*a+b]=Math.trunc(y/f[b]),y%=f[b]}return[g,[s,a],l]}function mT(r,t,e,o,n,i=!1,s=0){let a=o.length,l=[t[0],r.length/t[0]],u=l[1],p=a>0?n[a-1]+1:0;if(p<0)throw new Error($.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let d=t.slice();d[0]=p;let m=d.reduce((T,R)=>T*R,1),f=S.getArrayFromDType(e,m);if(a===0)return p>0&&f.fill(s),[f,d];if(p<=0)throw new Error($.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let g=0,x=1,y=0,b=n[g];for(;;){let T=0;if(x<a){if(T=n[x],b===T){++x;continue}if(b>=T)throw new Error($.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(b<0||b>=p)throw new Error($.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(b,p));b>y&&f.fill(s,y*u,b*u);for(let R=g;R<x;++R){let M=o[R];if(M<0||M>=l[0])throw new Error($.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(R,o[R],l[0]));for(let V=0;V<u;V++)f[b*u+V]+=r[M*u+V]}if(i)for(let R=0;R<u;R++)f[b*u+R]/=x-g;if(g=x,++x,y=b+1,b=T,x>a)break}return y<p&&f.fill(s,y*u,p*u),[f,d]}var fT=qt(r=>Math.sqrt(r)),RUe=kh(Ni,r=>Math.sqrt(r));var nv=gt((r,t)=>{let e=r-t;return e*e}),FUe=xt(Ri,nv);var iv=qt((r,t)=>{let{pattern:e,replaceGlobal:o,rewrite:n}=t;return r.replace(new RegExp(e,o?"g":""),n)}),VUe=Fr(Bu,iv);function hT(r,t,e,o){let n=Me(r,t.dtype);for(let i=0;i<n.size;i++){let s=n.indexToLoc(i),a=new Array(s.length);for(let l=0;l<a.length;l++)a[l]=s[l]*e[l]+o[l];n.set(t.get(...a),...s)}return n}var sv=class{constructor(t,e,o,n,i,s){this.separator=S.encodeString(t),this.nGramWidths=e,this.leftPad=S.encodeString(o),this.rightPad=S.encodeString(n),this.padWidth=i,this.preserveShort=s}getPadWidth(t){return Math.min(this.padWidth<0?t-1:this.padWidth,t-1)}getNumNGrams(t,e){let o=this.getPadWidth(e);return Math.max(0,t+2*o-e+1)}createNGrams(t,e,o,n,i,s){for(let a=0;a<i;++a){let l=this.getPadWidth(s),u=Math.max(0,l-a),c=Math.max(0,l-(i-(a+1))),p=s-(u+c),d=e+(u>0?0:a-l),m=0;m+=u*this.leftPad.length;for(let b=0;b<p;++b)m+=t[d+b].length;m+=c*this.rightPad.length;let f=u+c+p-1;m+=f*this.separator.length,o[n+a]=new Uint8Array(m);let g=o[n+a],x=0,y=b=>b.forEach(T=>g[x++]=T);for(let b=0;b<u;++b)y(this.leftPad),y(this.separator);for(let b=0;b<p-1;++b)y(t[d+b]),y(this.separator);if(p>0){y(t[d+p-1]);for(let b=0;b<c;++b)y(this.separator),y(this.rightPad)}else{for(let b=0;b<c-1;++b)y(this.rightPad),y(this.separator);y(this.rightPad)}}}compute(t,e){let o=t.length,n=e.length;if(n>0){let l=e[0];if(l!==0)throw new Error(`First split value must be 0, got ${l}`);for(let u=1;u<n;++u){let c=e[u]>=l;if(c=c&&e[u]<=o,!c)throw new Error(`Invalid split value ${e[u]}, must be in [${l}, ${o}]`);l=e[u]}if(l!==o)throw new Error(`Last split value must be data size. Expected ${o}, got ${l}`)}let i=n-1,s=S.getArrayFromDType("int32",n);if(o===0||n===0){let l=new Array(o);for(let u=0;u<=i;++u)s[u]=0;return[l,s]}s[0]=0;for(let l=1;l<=i;++l){let u=e[l]-e[l-1],c=0;this.nGramWidths.forEach(p=>{c+=this.getNumNGrams(u,p)}),this.preserveShort&&u>0&&c===0&&(c=1),s[l]=s[l-1]+c}let a=new Array(s[i]);for(let l=0;l<i;++l){let u=e[l],c=s[l];if(this.nGramWidths.forEach(p=>{let d=e[l+1]-e[l],m=this.getNumNGrams(d,p);this.createNGrams(t,u,a,c,m,p),c+=m}),this.preserveShort&&c===s[l]){let p=e[l+1]-e[l];if(p===0)continue;let d=p+2*this.padWidth;this.createNGrams(t,u,a,c,1,d)}}return[a,s]}};function gT(r,t,e,o,n,i,s,a){return new sv(e,o,n,i,s,a).compute(r,t)}function PK(r,t,e,o){if(!r.length)return;if(t.length===0){for(let i=0;i<r.length;++i)o.push(r.subarray(i,i+1));return}if(t.length===1){let i=t[0],s=r.indexOf(i);for(;s!==-1;){let a=r.subarray(0,s);(!e||a.length!==0)&&o.push(a),r=r.subarray(s+1),s=r.indexOf(i)}(!e||r.length!==0)&&o.push(r);return}let n=0;for(let i=0;i<r.length+1;i++)if(i===r.length||t.indexOf(r[i])!==-1){let s=r.subarray(n,i);(!e||s.length!==0)&&o.push(s),n=i+1}}function xT(r,t,e){let o=r.length,n=[],i=0,s=0,a=new Array(o);for(let d=0;d<o;++d){let m=n.length;PK(r[d],t,e,n);let f=n.length-m;a[d]=f,i+=f,s=Math.max(s,f)}let l=S.getArrayFromDType("int32",i*2),u=new Array(i),c=[o,s],p=0;for(let d=0;d<o;++d)for(let m=0;m<a[d];++m)l[p*2]=d,l[p*2+1]=m,u[p]=n[p],++p;return[l,u,c]}function yT(r,t){let e=S.getArrayFromDType("int32",r.length);for(let o=0;o<r.length;++o)e[o]=S.fingerPrint64(r[o]).modulo(t).getLowBitsUnsigned();return e}var av=gt((r,t)=>r-t),AK=Sc((r,t,e,o)=>({real:r-e,imag:t-o})),JUe=xt($i,av,AK);function vT(r,t){let e=new Array(r.rank);for(let n=0;n<e.length;n++)e[n]=r.shape[n]*t[n];let o=Me(e,r.dtype);for(let n=0;n<o.values.length;++n){let i=o.indexToLoc(n),s=new Array(r.rank);for(let l=0;l<s.length;l++)s[l]=i[l]%r.shape[l];let a=r.locToIndex(s);o.values[n]=r.values[a]}return o}var Kp=(r,t)=>{let e=t.value-r.value;return e===0?r.index-t.index:e};function bT(r,t,e=0,o=r.length-1){for(;o>e;){if(o-e>600){let a=o-e+1,l=t-e+1,u=Math.log(a),c=.5*Math.exp(2*u/3),p=.5*Math.sqrt(u*c*(a-c)/a)*Math.sign(l-a/2),d=Math.max(e,Math.floor(t-l*c/a+p)),m=Math.min(o,Math.floor(t+(a-l)*c/a+p));bT(r,t,d,m)}let n=r[t],i=e,s=o;for(S.swap(r,e,t),Kp(r[o],n)>0&&S.swap(r,e,o);i<s;){for(S.swap(r,i,s),i++,s--;Kp(r[i],n)<0;)i=i+1;for(;Kp(r[s],n)>0;)s=s-1}Kp(r[e],n)===0?S.swap(r,e,s):(s=s+1,S.swap(r,s,o)),s<=t&&(e=s+1),t<=s&&(o=s-1)}}function ST(r,t,e,o,n){let i=t[t.length-1],[s,a]=[r.length/i,i],l=S.getTypedArrayFromDType(e,s*o),u=S.getTypedArrayFromDType("int32",s*o);for(let p=0;p<s;p++){let d=p*a,m=r.subarray(d,d+a),f=new Array(m.length);m.forEach((b,T)=>f[T]={value:b,index:T}),o<f.length&&(bT(f,o),f=f.slice(0,o)),n&&f.sort(Kp);let g=p*o,x=l.subarray(g,g+o),y=u.subarray(g,g+o);for(let b=0;b<o;b++)x[b]=f[b].value,y[b]=f[b].index}let c=t.slice();return c[c.length-1]=o,[Me(c,e,l),Me(c,"int32",u)]}function wT(r,t,e,o){let n=S.parseAxisParam(t,e)[0],i=[1,e[0],1];for(let f=0;f<n;f++)i[0]*=e[f];i[1]=e[n];for(let f=n+1;f<e.length;f++)i[2]*=e[f];let s=new Map,a=new Int32Array(e[n]),l=new co(i,o,r),u=[],c=i[0]===1&&i[2]===1;for(let f=0;f<e[n];f++){let g;if(c)g=r[f].toString();else{let y=[];for(let b=0;b<i[0];b++)for(let T=0;T<i[2];T++)y.push(l.get(b,f,T));g=y.join(",")}let x=s.get(g);if(x!=null)a[f]=x;else{let y=s.size;s.set(g,y),a[f]=y,u.push(f)}}let p=i.slice();p[1]=s.size;let d=new co(p,o);u.forEach((f,g)=>{for(let x=0;x<i[0];x++)for(let y=0;y<i[2];y++)d.set(l.get(x,f,y),x,g,y)});let m=e.slice();return m[n]=p[1],{outputValues:d.values,outputShape:m,indices:a}}var{addImpl:_T,castImpl:CT,ceilImpl:kT,concatImpl:IT,equalImpl:TT,expImpl:ET,expm1Impl:NT,floorImpl:RT,floorDivImpl:$T,gatherNdImpl:PT,gatherV2Impl:AT,greaterEqualImpl:DT,greaterImpl:FT,lessEqualImpl:OT,lessImpl:LT,logImpl:MT,maxImpl:BT,maximumImpl:VT,minimumImpl:WT,multiplyImpl:zT,negImpl:UT,notEqualImpl:GT,prodImpl:HT,rangeImpl:KT,rsqrtImpl:qT,scatterImpl:jT,simpleAbsImpl:XT,sliceImpl:YT,stridedSliceImpl:QT,stringNGramsImpl:ZT,subImpl:JT,tileImpl:eE,topKImpl:tE,transposeImpl:rE,uniqueImpl:o8e}=qp;var DK=Ie({opType:se.ABS,cpuKernelImpl:XT}),oE={kernelName:ys,backendName:"webgpu",kernelFunc:DK};var FK=Ie({opType:se.ACOS}),nE={kernelName:Ua,backendName:"webgpu",kernelFunc:FK};var OK=Ie({opType:se.ACOSH}),iE={kernelName:Ga,backendName:"webgpu",kernelFunc:OK};var LK=Je({opType:ke.ADD,cpuKernelImpl:_T,supportsComplex:!0}),sE={kernelName:sn,backendName:"webgpu",kernelFunc:LK};var Ih=class{constructor(t){this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t[0],this.variableNames=t.map((e,o)=>`T${o}`),this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.shaderKey="addN"}getUserCode(){let t=[];this.variableNames.forEach(n=>{t.push(`let v${n} = get${n}ByOutputCoords(coords);`)});let e=this.variableNames.map(n=>`v${n}`).join(" + ");return`
      ${J("index")} {
        for (var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if (flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndex);
            ${t.join(`
        `)}
            setOutputAtIndex(flatIndex, ${e});
          }
        }
      }
    `}};function MK(r){let{inputs:t,backend:e}=r,o=t;if(o.length===1)return Pt({inputs:{x:o[0]},backend:e});let n=o.map(a=>a.dtype).reduce((a,l)=>Tt(a,l)),i=o.map(a=>a.shape),s=new Ih(i);return e.runWebGPUProgram(s,o,n)}var aE={kernelName:Ha,backendName:"webgpu",kernelFunc:MK};var Th=class{constructor(t,e){this.variableNames=["A"],this.workgroupSize=[16,16,1];let o=new Array(t.length);for(let n=0;n<o.length;n++)o[n]=t[e[n]];this.outputShape=o,this.dispatchLayout={x:[0],y:[1]},this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize,[1,1,1]),this.shaderKey="transposeShared"}getUserCode(){S.assert(this.workgroupSize[0]===this.workgroupSize[1],()=>`Must be a square tile, current tile shape is ${this.workgroupSize[0]} x ${this.workgroupSize[1]}`);let t=this.workgroupSize[0];return`
      var<workgroup> tile : array<array<f32, ${this.workgroupSize[0]+1}>, ${this.workgroupSize[0]}>;
      ${J()} {
        var x = i32(workgroupId.x) * ${t} + i32(localId.x);
        var y = i32(workgroupId.y) * ${t} + i32(localId.y);
        let width = uniforms.outShape[0];
        let height = uniforms.outShape[1];
        if (x < width && y < height) {
          tile[localId.y][localId.x] = f32(A[y * width + x]);
        }
        workgroupBarrier();

        x = i32(workgroupId.y) * ${t} + i32(localId.x);
        y = i32(workgroupId.x) * ${t} + i32(localId.y);
        if (x < height && y < width) {
          setOutputAtIndex((y * height + x), tile[localId.x]
            [localId.y]);
        }
      }
    `}};var Eh=class{constructor(t,e){this.variableNames=["A"],this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0;let o=new Array(t.length);for(let n=0;n<o.length;n++)o[n]=t[e[n]];this.outputShape=o,this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.newDim=e,this.shaderKey=`transpose_${e}`}getUserCode(){let t=ht(this.outputShape.length),e=lv(this.newDim);return`
      ${J("index")} {
        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if(flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndex);
            setOutputAtIndex(flatIndex, A[getIndexFromCoords${this.outputShape.length}D(
              ${t}(${e}), uniforms.aShape)]);
          }
        }
      }
    `}};function lv(r){let t=r.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);let e=new Array(t);for(let o=0;o<r.length;o++)e[r[o]]=`coords.${Eo(o)}`;return e.join()}function mr(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{perm:i}=o,s=e,a=n.shape.length,l=new Array(a);for(let c=0;c<l.length;c++)l[c]=n.shape[i[c]];if(e.shouldExecuteOnCPU([n])){let p=s.tensorMap.get(n.dataId).values,d=rE(p,n.shape,n.dtype,i,l);return e.makeTensorInfo(l,n.dtype,d)}if(n.shape.length===2&&S.arraysEqual(i,[1,0])){let c=new Th(n.shape,i);return s.runWebGPUProgram(c,[n],n.dtype)}let u=new Eh(n.shape,i);return s.runWebGPUProgram(u,[n],n.dtype)}var lE={kernelName:Ai,backendName:"webgpu",kernelFunc:mr};var Nh=class{constructor(t,e,o){this.variableNames=["x"],this.uniforms="reduceSize : i32,",this.size=!0,this.inputShape=[t.batchSize,t.inSize];let[n]=$.computeOutAndReduceShapes(this.inputShape,[1]);this.outputShape=n.length===0?[1]:n,t.inSize>=32768&&o>=512?this.workgroupSize=[512,1,1]:t.inSize>=4096?this.workgroupSize=[256,1,1]:this.workgroupSize=[64,1,1],this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,[1,1,1]),this.reduceType=e,this.shaderKey=`reduce_${e}`}getUserCode(){let t="",e="0.0",o=this.workgroupSize[0];this.reduceType==="min"||this.reduceType==="max"?(t=`
         if (isnan(candidate)) {
          bestValue = uniforms.NAN;
         } else if (!isnan(bestValue) && candidate ${this.reduceType==="min"?"<":">"} bestValue)
           {  bestValue = candidate; }`,e="f32(x[offset])"):this.reduceType==="sum"||this.reduceType==="mean"?t=" bestValue = bestValue + candidate; ":this.reduceType==="prod"?(t=" bestValue = bestValue * candidate; ",e="1.0"):this.reduceType==="all"?(t=" bestValue = f32(bestValue >= 1.0 && candidate >= 1.0); ",e="1.0"):this.reduceType==="any"&&(t=" bestValue = f32(bestValue >= 1.0 || candidate >= 1.0); ",e="0.0");let n=this.reduceType==="mean"?"setOutputAtIndex(outputIndex, bestValue / f32(uniforms.reduceSize));":"setOutputAtIndex(outputIndex, bestValue);";return`
       fn DIV_CEIL(a : u32, b : u32) -> u32 {
        return ((a - 1u) / b + 1u);
       }

       ${`
         var<workgroup> xBestValues : array<f32, ${o}>;
       `}
       fn getOffset(outputIndex : i32) -> i32 {
         let outputCoords = getCoordsFromIndex(outputIndex);
         let offset = ${this.outputShape.length===1?"outputCoords":"outputCoords[0]"} * uniforms.reduceSize;
          return offset;
       }
       ${J("index")} {
         let outputIndex = index / ${o};
         let offset = getOffset(outputIndex);
         var bestValue = ${e};
         let Length = uniforms.reduceSize;
         let WorkPerThread = DIV_CEIL(u32(Length), ${o}u);
         for (var k = i32(localId.x); k < Length && outputIndex < uniforms.size;
             k = k + ${o}) {
           let candidate = f32(x[offset + k]);
           ${t}
         }
         xBestValues[localId.x] = bestValue;
         workgroupBarrier();

         var reduceSize = min(u32(Length), ${o}u);
         for (var currentSize = reduceSize / 2u; reduceSize > 1u;
             currentSize = reduceSize / 2u) {
           let interval = DIV_CEIL(reduceSize, 2u);
           if (localId.x < currentSize) {
            let candidate = xBestValues[localId.x + interval];
            ${t}
            xBestValues[localId.x] = bestValue;
           }
           reduceSize = interval;
           workgroupBarrier();
         }

         if (localId.x == 0u && outputIndex < uniforms.size) {
          ${n}
        }
       }
     `}};var BK={mean:"float32",all:"bool",any:"bool"};function eo(r,t,e,o,n){let i=r.shape.length,s=[],a=S.parseAxisParam(t,r.shape),l=a,u=$.getAxesPermutation(l,i),c=r;u!=null&&(c=mr({inputs:{x:r},attrs:{perm:u},backend:n}),l=$.getInnerMostAxes(l.length,i),s.push(c)),$.assertAxesAreInnerMostDims(o,l,i);let[p,d]=$.computeOutAndReduceShapes(c.shape,l),m=p;e&&(m=$.expandShapeToKeepDim(p,a));let f;if((o==="max"||o==="prod")&&n.shouldExecuteOnCPU([c])){let g=n.tensorMap.get(c.dataId).values;switch(o){case"max":let x=BT(g,S.sizeFromShape(d),m,r.dtype);f=n.makeTensorInfo(m,r.dtype,x);break;case"prod":let{outVals:y,outShape:b,outDtype:T}=HT(c.shape,c.dtype,g,l);f=n.makeTensorInfo(b,T,y);break;default:throw new Error(`${o} CPU implementation is not yet supported.`)}}else{let g=S.sizeFromShape(d),y=S.sizeFromShape(c.shape)/g,b={windowSize:g,inSize:g,batchSize:y,outSize:1},T=BK[o]||Dn(r.dtype),R=[{type:"int32",data:[g]}],M=new Nh(b,o,n.device.limits.maxComputeWorkgroupSizeX),V=n.runWebGPUProgram(M,[c],T,R);s.push(V),f=fe({inputs:{x:V},attrs:{shape:m},backend:n})}return s.forEach(g=>n.disposeData(g.dataId)),f}function VK(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{keepDims:i,axis:s}=o;return eo(n,s,i,"all",e)}var uE={kernelName:Ka,backendName:"webgpu",kernelFunc:VK};function WK(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{keepDims:i,axis:s}=o;return eo(n,s,i,"any",e)}var cE={kernelName:qa,backendName:"webgpu",kernelFunc:WK};var wc=class{constructor(t,e,o){this.workgroupSize=[64,1,1],this.variableNames=["x"],this.uniforms="infinityValue : f32,",this.size=!0;let n=[e];this.op=o==="min"?"<":">";let[i,s]=$.computeOutAndReduceShapes(t,n);this.outputShape=i.length===0?[1]:i,this.dispatchLayout=ie(this.outputShape),S.sizeFromShape(s)<32?(this.type="plain",this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize)):(this.type="shared",this.dispatch=ee(this.dispatchLayout,this.outputShape,[1,1,1])),this.inputShape=t,this.shaderKey=`argMinMax_${this.op}_${this.type}`}getUserCode(){let t=this.workgroupSize[0],e=()=>this.inputShape.length===1?"uniforms.xShape":`uniforms.xShape.${Eo(this.inputShape.length-1)}`,o=()=>{let n="";if(this.outputShape.length===1)this.inputShape.length!==1&&(n+="outputCoords,");else for(let i=0;i<this.outputShape.length;i++)n+=`outputCoords.${Eo(i)},`;return n};return this.type==="shared"?`
      fn DIV_CEIL(a : u32, b : u32) -> u32 {
        return ((a - 1u) / b + 1u);
      }

      ${`
      var<workgroup> xBestIndices : array<i32, ${t}>;
      var<workgroup> xBestValues : array<f32, ${t}>;
    `}

      ${J("index")} {
        let outputIndex = index / ${t};
        let reduceLength = ${e()};

        var bestIndex = i32(localId.x);
        var bestValue = uniforms.infinityValue;
        let outputCoords = getCoordsFromIndex(outputIndex);
        for (var k = i32(localId.x); k < reduceLength && outputIndex < uniforms.size;
            k = k + ${t}) {
          let candidate = getX(${o()} k);
          if (!isnan(candidate) && candidate ${this.op} bestValue) {
            bestValue = candidate;
            bestIndex = k;
          }
        }
        xBestValues[localId.x] = bestValue;
        xBestIndices[localId.x] = bestIndex;
        workgroupBarrier();

        var reduceSize = min(u32(reduceLength), ${t}u);
        for (var currentSize = reduceSize / 2u; reduceSize > 1u;
            currentSize = reduceSize / 2u) {
          let interval = DIV_CEIL(reduceSize, 2u);
          if (localId.x < currentSize) {
            let candidate = xBestValues[localId.x + interval];
            if (candidate ${this.op} bestValue) {
              bestValue = candidate;
              xBestValues[localId.x] = bestValue;
              xBestIndices[localId.x] = xBestIndices[localId.x + interval];
            }
          }
          reduceSize = interval;
          workgroupBarrier();
        }

        if (localId.x == 0u && outputIndex < uniforms.size) {
          setOutputAtIndexI32(outputIndex, xBestIndices[localId.x]);
        }
      }
    `:`
      ${J("index")} {
        if (index < uniforms.size) {
          let outputCoords = getCoordsFromIndex(index);
          var bestIndex = 0;
          var bestValue = getX(${o()} 0);
          let reduceLength = ${e()};
          for (var i = 1; i < reduceLength; i++) {
            let candidate = getX(${o()} i);
            if (candidate ${this.op} bestValue) {
              bestValue = candidate;
              bestIndex = i;
            }
          }
          setOutputAtIndexI32(index, bestIndex);
        }
      }
      `}};function zK(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{axis:i}=o,s=S.parseAxisParam(i,n.shape),a=$.getAxesPermutation(s,n.shape.length),l=n,u=[];a!=null&&(l=mr({inputs:{x:n},backend:e,attrs:{perm:a}}),u.push(l),s=$.getInnerMostAxes(s.length,l.shape.length)),$.assertAxesAreInnerMostDims("argMax",[s[0]],l.shape.length);let c=new wc(l.shape,s[0],"max"),p=[{type:"float32",data:[Number.NEGATIVE_INFINITY]}],d=e.runWebGPUProgram(c,[l],"int32",p);return u.forEach(m=>e.disposeData(m.dataId)),d}var pE={kernelName:ja,backendName:"webgpu",kernelFunc:zK};function UK(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{axis:i}=o,s=S.parseAxisParam(i,n.shape),a=$.getAxesPermutation(s,n.shape.length),l=n,u=[];a!=null&&(l=mr({inputs:{x:n},backend:e,attrs:{perm:a}}),u.push(l),s=$.getInnerMostAxes(s.length,l.shape.length)),$.assertAxesAreInnerMostDims("argMin",[s[0]],l.shape.length);let c=new wc(l.shape,s[0],"min"),p=[{type:"float32",data:[Number.POSITIVE_INFINITY]}],d=e.runWebGPUProgram(c,[l],"int32",p);return u.forEach(m=>e.disposeData(m.dataId)),d}var dE={kernelName:Xa,backendName:"webgpu",kernelFunc:UK};var GK=Ie({opType:se.ASIN}),mE={kernelName:Ya,backendName:"webgpu",kernelFunc:GK};var HK=Ie({opType:se.ASINH}),fE={kernelName:Qa,backendName:"webgpu",kernelFunc:HK};var KK=Ie({opType:se.ATAN}),hE={kernelName:Za,backendName:"webgpu",kernelFunc:KK};var qK=Je({opType:ke.ATAN2}),gE={kernelName:el,backendName:"webgpu",kernelFunc:qK};var jK=Ie({opType:se.ATANH}),xE={kernelName:Ja,backendName:"webgpu",kernelFunc:jK};var Rh=class{constructor(t){this.variableNames=["x"],this.uniforms="strides : vec2<i32>,",this.workgroupSize=[256,1,1],this.size=!0,this.outputShape=t.outShape,this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="poolWithFilterSizeEqualsOne"}getUserCode(){return`
      ${J("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let batch = coords[0];
          let d = coords[3];

          let xRCCorner = coords.yz * uniforms.strides;
          let xRCorner = xRCCorner.x;
          let xCCorner = xRCCorner.y;

          let value = getX(batch, xRCorner, xCCorner, d);
          setOutputAtIndex(index, value);
        }
      }
    `}};var hn=class{constructor(t,e,o=!1,n=!1,i=!1){if(this.variableNames=["x"],this.uniforms="strides : vec2<i32>, pads : vec2<i32>, dilations : vec2<i32>, convDims : vec2<i32>, filterDims : vec2<i32>,",this.workgroupSize=[128,1,1],this.size=!0,e==="avg"&&o)throw new Error("Cannot compute positions for average pool.");this.outputShape=t.outShape,this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize),this.poolType=e,this.computePositions=o,this.flattenPositions=n,this.includeBatchIndex=i,this.shaderKey=`pool2D_${e}_${o}_${n}_${i}`}getUserCode(){let t;this.poolType==="avg"?t="resultValue = resultValue + value; count = count + 1.0;":this.computePositions?t=`let currMaxValue = mix(value, maxValue, maxValueFound);
      if (value >= currMaxValue) {
        maxValue = value;
        maxValueFound = 1.0;
        maxPosition = ${this.flattenPositions?this.includeBatchIndex?"((batch * uniforms.xShape[1] + xR) * uniforms.xShape[2] + xC) * uniforms.xShape[3] + d":"(xR * uniforms.xShape[2] + xC) * uniforms.xShape[3] + d":"wR * uniforms.filterDims.y + wC"};
      }`:t="resultValue = max(value, resultValue);";let e="resultValue";return this.poolType==="avg"&&(e="resultValue / max(count, 1.0)"),`
      ${J("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
          let batch = coords[0];
          let d = coords[3];
          let xRCCorner = vec2<i32>(coords.yz) * uniforms.strides - uniforms.pads;
          let xRCorner = xRCCorner.x;
          let xCCorner = xRCCorner.y;

          ${this.computePositions?`var maxValue = 0.0;
            var maxValueFound = 0.0;
            var maxPosition = 0;`:`var resultValue = ${this.poolType==="avg"?"0.0":"-1.0 / pow(10.0, -20.0)"};`}

          var count = 0.0;
          for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + uniforms.dilations.x) {
            let xR = xRCorner + wR;

            if (xR < 0 || xR >= uniforms.convDims.x) {
              continue;
            }

            for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + uniforms.dilations.y) {
              let xC = xCCorner + wC;
              if (xC < 0 || xC >= uniforms.convDims.y) {
                continue;
              }

              let value = getX(batch, xR, xC, d);
              ${t}
            }
          }

          ${this.computePositions?"setOutputAtIndexI32(index, maxPosition);":`setOutputAtIndex(index, ${e});`}
        }
      }
    `}},es=class{constructor(t,e,o=!1,n=!1,i=!1){if(this.variableNames=["x"],this.uniforms="strides : vec3<i32>, pads : vec3<i32>, convDims : vec3<i32>, filterDims : vec3<i32>,",this.workgroupSize=[128,1,1],this.size=!0,e==="avg"&&o)throw new Error("Cannot compute positions for average pool.");this.outputShape=t.outShape,this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize),this.poolType=e,this.computePositions=o,this.flattenPositions=n,this.includeBatchIndex=i,this.shaderKey=`pool3D_${e}_${o}_${n}_${i}`}getUserCode(){let t;this.poolType==="avg"?t="resultValue += value; count += 1.0;":this.computePositions?t=`let currMaxValue = mix(value, maxValue, maxValueFound);
      if (value >= currMaxValue) {
        maxValue = value;
        maxValueFound = 1.0;
        maxPosition = ${this.flattenPositions?this.includeBatchIndex?"(((batch * uniforms.xShape.y + xD) * uniforms.xShape.z + xR) * uniforms.xShape.w + xC) * uniforms.xShape.u + ch":"((xD * uniforms.xShape.z + xR) * uniforms.xShape.w + xC) * uniforms.xShape.u + ch":"wD * uniforms.filterDims.y * uniforms.filterDims.y + wR * uniforms.filterDims.z + wC"};
      }`:t="resultValue = max(value, resultValue);";let e="resultValue";return this.poolType==="avg"&&(e="resultValue / max(count, 1.0)"),`
      ${J("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let batch = coords.x;
          let ch = coords.u;

          let xCorner = vec3<i32>(coords.y, coords.z, coords.w) * uniforms.strides - uniforms.pads;
          let xDCorner = xCorner.x;
          let xRCorner = xCorner.y;
          let xCCorner = xCorner.z;

          ${this.computePositions?`var maxValue = 0.0;
            var maxValueFound = 0.0;
            var maxPosition = 0;`:`var resultValue = ${this.poolType==="avg"?"0.0":"-1.0 / pow(10.0, -20.0)"};`}

          var count = 0.0;
          for (var wD = 0; wD < uniforms.filterDims.x; wD++) {
            let xD = xDCorner + wD;
            if (xD < 0 || xD >= uniforms.convDims.x) {
              continue;
            }

            for (var wR = 0; wR < uniforms.filterDims.y; wR++) {
              let xR = xRCorner + wR;
              if (xR < 0 || xR >= uniforms.convDims.y) {
                continue;
              }

              for (var wC = 0; wC < uniforms.filterDims.z; wC++) {
                let xC = xCCorner + wC;
                if (xC < 0 || xC >= uniforms.convDims.z) {
                  continue;
                }

                let value = getX(batch, xD, xR, xC, ch);
                ${t}
              }
            }
          }

          ${this.computePositions?"setOutputAtIndexI32(index, maxPosition);":`setOutputAtIndex(index, ${e});`}
        }
      }
    `}};function uv(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{reductionIndices:i,keepDims:s}=o;return eo(n,i,s,"max",e)}var yE={kernelName:Ql,backendName:"webgpu",kernelFunc:uv};function cv(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{keepDims:i,axis:s}=o;return eo(n,s,i,"mean",e)}var vE={kernelName:tu,backendName:"webgpu",kernelFunc:cv};function $h(r,t,e,o){if(t.filterWidth===1&&t.filterHeight===1&&S.arraysEqual(t.inShape,t.outShape))return Pt({inputs:{x:r},backend:o});if(t.filterWidth===t.inWidth&&t.filterHeight===t.inHeight&&t.batchSize===1&&t.padInfo.type==="VALID"){let s=r.shape.length,a=fe({inputs:{x:r},backend:o,attrs:{shape:[r.shape[s-3]*r.shape[s-2],r.shape[s-1]]}}),l;e==="avg"?l=cv({inputs:{x:a},backend:o,attrs:{axis:0,keepDims:!1}}):(S.assert(e==="max",()=>`Invalid pool type ${e}`),l=uv({inputs:{x:a},backend:o,attrs:{reductionIndices:0,keepDims:!1}}));let u=fe({inputs:{x:l},backend:o,attrs:{shape:t.outShape}});return o.disposeData(a.dataId),o.disposeData(l.dataId),u}let n,i=[{type:"int32",data:[t.strideHeight,t.strideWidth]}];return t.filterHeight===1&&t.filterWidth===1?n=new Rh(t):(e==="avg"?n=new hn(t,"avg"):(S.assert(e==="max",()=>`Invalid pool type ${e}`),n=new hn(t,"max")),i.push({type:"int32",data:[t.padInfo.top,t.padInfo.left]},{type:"int32",data:[t.dilationHeight,t.dilationWidth]},{type:"int32",data:[t.inHeight,t.inWidth]},{type:"int32",data:[t.effectiveFilterHeight,t.effectiveFilterWidth]})),o.runWebGPUProgram(n,[r],r.dtype,i)}function XK(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{filterSize:i,strides:s,pad:a,dimRoundingMode:l}=o,c=$.computePool2DInfo(n.shape,i,s,1,a,l);return $h(n,c,"avg",e)}var bE={kernelName:tl,backendName:"webgpu",kernelFunc:XK};function YK(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{filterSize:i,strides:s,pad:a,dataFormat:l,dimRoundingMode:u}=o,c=[1,1,1],p=$.computePool3DInfo(n.shape,i,s,c,a,u,l),d=new es(p,"avg"),m=[{type:"int32",data:[p.strideDepth,p.strideHeight,p.strideWidth]},{type:"int32",data:[p.padInfo.front,p.padInfo.top,p.padInfo.left]},{type:"int32",data:[p.inDepth,p.inHeight,p.inWidth]},{type:"int32",data:[p.effectiveFilterDepth,p.effectiveFilterHeight,p.effectiveFilterWidth]}];return e.runWebGPUProgram(d,[n],n.dtype,m)}var SE={kernelName:rl,backendName:"webgpu",kernelFunc:YK};var Ph=class{constructor(t){this.variableNames=["dy"],this.uniforms=`strides : vec2<i32>, pads : vec2<i32>, dilations : vec2<i32>, filterDims : vec2<i32>,
       outHeight : i32, outWidth : i32, avgMultiplier : f32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t.inShape,this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="avgPool2DBackprop"}getUserCode(){return`
      ${J("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords[0];
        let d = coords[3];

        let dyRCCorner = vec2<i32>(coords.yz) - uniforms.pads;
        let dyRCorner = dyRCCorner.x;
        let dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var wR = 0; wR < uniforms.filterDims[0]; wR = wR + uniforms.dilations[0]) {
          let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[0]);

          if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
            continue;
          }
          let idyR = i32(dyR);

          for (var wC = 0; wC < uniforms.filterDims[1]; wC = wC + uniforms.dilations[1]) {
            let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[1]);

            if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
              continue;
            }
            let idyC = i32(dyC);

            let dyValue = getDy(batch, idyR, idyC, d);

            dotProd = dotProd + dyValue * uniforms.avgMultiplier;
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
    `}},Ah=class{constructor(t){this.variableNames=["dy"],this.uniforms=`strides : vec3<i32>, pads : vec3<i32>, filterDims : vec3<i32>,
       outDepth : i32, outHeight : i32, outWidth : i32, avgMultiplier : f32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t.inShape,this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="avgPool3DBackprop"}getUserCode(){return`
      ${J("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords.x;
        let ch = coords.u;

        let dyCorner = vec3<i32>(coords.y, coords.z, coords.w) - uniforms.pads;
        let dyDCorner = dyCorner.x;
        let dyRCorner = dyCorner.y;
        let dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var wD = 0; wD < uniforms.filterDims[0]; wD++) {
          let dyD = f32(dyDCorner + wD) / f32(uniforms.strides[0]);

          if (dyD < 0.0 || dyD >= f32(uniforms.outDepth) || fract(dyD) > 0.0) {
            continue;
          }
          let idyD = i32(dyD);

          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {
            let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[1]);

            if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
              continue;
            }
            let idyR = i32(dyR);

            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {
              let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[2]);

              if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
                continue;
              }
              let idyC = i32(dyC);

              let dyValue = getDy(batch, idyD, idyR, idyC, ch);
              dotProd += dyValue * uniforms.avgMultiplier;
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
    `}};function QK(r){let{inputs:t,backend:e,attrs:o}=r,{dy:n,input:i}=t,s=i,{filterSize:a,strides:l,pad:u,dimRoundingMode:c}=o,p=$.computePool3DInfo(s.shape,a,l,1,u,c),d=new Ah(p),m=1/(p.filterDepth*p.filterHeight*p.filterWidth),f=[{type:"int32",data:[p.strideDepth,p.strideHeight,p.strideWidth]},{type:"int32",data:[p.effectiveFilterDepth-1-p.padInfo.front,p.effectiveFilterHeight-1-p.padInfo.top,p.effectiveFilterWidth-1-p.padInfo.left]},{type:"int32",data:[p.effectiveFilterDepth,p.effectiveFilterHeight,p.effectiveFilterWidth]},{type:"int32",data:[p.outDepth]},{type:"int32",data:[p.outHeight]},{type:"int32",data:[p.outWidth]},{type:"float32",data:[m]}];return e.runWebGPUProgram(d,[n],s.dtype,f)}var wE={kernelName:am,backendName:"webgpu",kernelFunc:QK};function ZK(r){let{inputs:t,backend:e,attrs:o}=r,{dy:n,input:i}=t,s=i;Wp([n,i],"avgPoolGrad");let{filterSize:a,strides:l,pad:u}=o,c=$.computePool2DInfo(s.shape,a,l,1,u),p=new Ph(c),d=1/(c.filterHeight*c.filterWidth),m=[{type:"int32",data:[c.strideHeight,c.strideWidth]},{type:"int32",data:[c.effectiveFilterHeight-1-c.padInfo.top,c.effectiveFilterWidth-1-c.padInfo.left]},{type:"int32",data:[c.dilationHeight,c.dilationWidth]},{type:"int32",data:[c.effectiveFilterHeight,c.effectiveFilterWidth]},{type:"int32",data:[c.outHeight]},{type:"int32",data:[c.outWidth]},{type:"float32",data:[d]}];return e.runWebGPUProgram(p,[n],s.dtype,m)}var _E={kernelName:sm,backendName:"webgpu",kernelFunc:ZK};function JK(r){let{inputs:t,backend:e,attrs:o}=r,{a:n,b:i}=t,{transposeA:s,transposeB:a}=o;return ta({a:n,b:i,transposeA:s,transposeB:a,backend:e})}var CE={kernelName:ol,backendName:"webgpu",kernelFunc:JK};var Dh=class{constructor(t,e){this.variableNames=["source"],this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.rank=e.length,this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.start=t,this.uniforms=`start : ${ht(t.length)}, `,this.shaderKey="slice"}getUserCode(){let t=ht(this.rank),e=eq(this.rank),o;return this.start.length===1?o=this.outputShape.map((i,s)=>"sourceLoc = uniforms.start + coords;"):o=this.outputShape.map((i,s)=>`sourceLoc.${pv[s]} = uniforms.start.${Eo(s)} + coords.${pv[s]};`),`
      ${J("index")} {
        if (index < uniforms.size) {
          var sourceLoc : ${t};
          let coords = getCoordsFromIndex(index);
          ${o.join(`
`)}
          setOutputAtIndex(index, getSource(${e}));
        }
      }
    `}},pv=["x","y","z","w","u","v"];function eq(r){if(r===1)return"sourceLoc";if(r<=6)return pv.slice(0,r).map(t=>`sourceLoc.${t}`).join(",");throw Error(`Slicing for rank ${r} is not yet supported`)}function Ko(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{begin:i,size:s}=o,[a,l]=Gt.parseSliceParams(n,i,s);if(Gt.assertParamsValid(n,a,l),e.shouldExecuteOnCPU([n])||n.dtype==="string"){let p=e.tensorMap.get(n.dataId),d=YT(p.values,a,l,n.shape,n.dtype);return e.makeTensorInfo(l,n.dtype,d)}if(S.sizeFromShape(l)===0)return e.makeTensorInfo(l,n.dtype,[]);let u=new Dh(a,l),c=[{type:"int32",data:a}];return e.runWebGPUProgram(u,[n],n.dtype,c)}var kE={kernelName:_s,backendName:"webgpu",kernelFunc:Ko};var tq=r=>{let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{blockShape:i,crops:s}=o;S.assert(n.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGPU backend not implemented yet");let a=i.reduce((b,T)=>b*T),l=$.getReshaped(n.shape,i,a),u=$.getPermuted(l.length,i.length),c=$.getReshapedPermuted(n.shape,i,a),p=$.getSliceBeginCoords(s,i.length),d=$.getSliceSize(c,s,i.length),m=[],f=fe({inputs:{x:n},backend:e,attrs:{shape:l}}),g=mr({inputs:{x:f},backend:e,attrs:{perm:u}}),x=fe({inputs:{x:g},backend:e,attrs:{shape:c}}),y=Ko({inputs:{x},backend:e,attrs:{begin:p,size:d}});return m.push(f),m.push(g),m.push(x),m.forEach(b=>e.disposeData(b.dataId)),y},IE={kernelName:nl,backendName:"webgpu",kernelFunc:tq};var rq=`
  fn bincount_write(index: i32, value: f32) {
    ${Qr("&result[index]","value","float32")}
  }
`,oq=`
  fn bincount_write(index: i32, value: f32) {
    atomicStore(&result[index], bitcast<i32>(value));
  }
`,_c=class{constructor(t,e,o=!1){this.outputShape=[],this.variableNames=["x"],this.uniforms="binCountSize : i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.hasWeights=!0,this.binaryOutput=!1,this.outputShape=t,this.rank=t.length,this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize),this.binaryOutput=o,o&&(this.atomic=!1),this.hasWeights=e,this.hasWeights&&this.variableNames.push("w"),this.shaderKey=`bincount_${this.hasWeights}_${this.binaryOutput}_${this.rank}`}getUserCode(){return`
    ${this.binaryOutput?oq:rq}
  ${J("index")} {
    ${this.rank===1?`if (index < uniforms.xShape) {
      let indexVal = i32(getX(index));
      if (indexVal < uniforms.binCountSize) {
        let value = ${this.binaryOutput?1:this.hasWeights?"getW(index)":"1."};
        bincount_write(indexVal, value);
      }
    }`:`let coord = getCoordsFromIndex(index);
    if (coordsInBounds2D(coord, uniforms.xShape)) {
      let indexVal = i32(getX(coord[0], coord[1]));
      if (indexVal < uniforms.binCountSize) {
        let value = ${this.binaryOutput?1:this.hasWeights?"getW(coord[0], coord[1])":"1."};
        bincount_write(coord.x * uniforms.binCountSize + indexVal, value);
      }
    }`}
  }
  `}};function nq(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,weights:i}=t,{size:s}=o,a=S.sizeFromShape(n.shape),u=S.sizeFromShape(i.shape)>0,c=[s],p=i.dtype,d=wt({backend:e,attrs:{shape:c,value:0,dtype:p}}),m=new _c([a],u),f=[{type:"int32",data:[s]}],g=u?[n,i]:[n];return e.runWebGPUProgram(m,g,p,f,d)}var TE={kernelName:il,backendName:"webgpu",kernelFunc:nq};var Fh=class{constructor(t){this.outputShape=[],this.variableNames=["s0","s1"],this.uniforms="s0Size : i32, s1Size : i32, ",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[t],this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="broadcastArgs"}getUserCode(){return`
  ${J("index")} {
    if (index < uniforms.size) {
      var s0 = 1.0;
      var s1 = 1.0;
      let indexS0 = index - uniforms.size + uniforms.s0Size;
      let indexS1 = index - uniforms.size + uniforms.s1Size;
      if (indexS0 >= 0) {
        s0 = getS0(indexS0);
      }
      if (indexS1 >= 0) {
        s1 = getS1(indexS1);
      }

      if (s0 == 1.0) {
        setOutputAtIndex(index, s1);
      } else if (s1 == 1.0) {
        setOutputAtIndex(index, s0);
      } else if (s0 != s1) {
        setOutputAtIndex(index, uniforms.NAN);
      } else {
        setOutputAtIndex(index, s0);
      }
    }
  }
  `}};function iq(r){let{inputs:t,backend:e}=r,{s0:o,s1:n}=t;if(e.shouldExecuteOnCPU([o,n])){let c=e.tensorMap.get(o.dataId),p=e.tensorMap.get(n.dataId),d=c.values,m=p.values,f=$.assertAndGetBroadcastShape(Array.from(d),Array.from(m));return e.makeTensorInfo([f.length],"int32",Int32Array.from(f))}let i=S.sizeFromShape(o.shape),s=S.sizeFromShape(n.shape),a=Math.max(i,s),l=new Fh(a),u=[{type:"int32",data:[i]},{type:"int32",data:[s]}];return e.runWebGPUProgram(l,[o,n],"int32",u)}var EE={kernelName:al,backendName:"webgpu",kernelFunc:iq};var dv=Je({opType:ke.NOT_EQUAL,dtype:"bool",cpuKernelImpl:GT}),NE={kernelName:Ii,backendName:"webgpu",kernelFunc:dv};function qn(r){let{inputs:t,backend:e}=r,{input:o}=t,n=e.tensorMap.get(o.dataId);return Pt({inputs:{x:n.complexTensorInfos.real},backend:e})}var RE={kernelName:ws,backendName:"webgpu",kernelFunc:qn};function $E(r,t){let e=new Jr(r.shape,se.TO_INT),o=t.runWebGPUProgram(e,[r],"int32");return{dataId:o.dataId,shape:o.shape,dtype:o.dtype}}function mv(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{dtype:i}=o;if(i==="complex64"){if(n.dtype==="complex64")return Pt({inputs:{x:n},backend:e});let s=Sr(n.shape),a=mv({inputs:{x:n},backend:e,attrs:{dtype:"float32"}}),l=go({inputs:{real:a,imag:s},backend:e});return s.dispose(),e.disposeData(a.dataId),l}if(n.dtype==="complex64"){let s=qn({inputs:{input:n},backend:e}),a=mv({inputs:{x:s},backend:e,attrs:{dtype:i}});return e.disposeData(s.dataId),a}if(!S.hasEncodingLoss(n.dtype,i)){let s=Pt({inputs:{x:n},backend:e});return{dataId:s.dataId,shape:s.shape,dtype:i}}if(e.shouldExecuteOnCPU([n])){let s=e.tensorMap.get(n.dataId).values,[a,l,u]=CT(s,n.shape,n.dtype,i);return e.makeTensorInfo(a,l,u)}if(i==="int32")return $E(n,e);if(i==="bool"){let s=e.makeTensorInfo([],"bool",S.getTypedArrayFromDType("bool",1)),l=dv({inputs:{a:n,b:s},backend:e});return e.disposeData(s.dataId),l}throw new Error(`Error in Cast: failed to cast ${n.dtype} to ${i}`)}var PE={kernelName:Rn,backendName:"webgpu",kernelFunc:mv};var sq=Ie({opType:se.CEIL,cpuKernelImpl:kT}),AE={kernelName:di,backendName:"webgpu",kernelFunc:sq};var Oh=class{constructor(t){this.variableNames=["A"],this.uniforms="minVal : f32, maxVal : f32,",this.workPerThread=4,this.workgroupSize=[64,1,1],this.outputComponent=4,this.size=!0,this.outputShape=t,this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.shaderKey="clipVec4"}getUserCode(){return`
      ${J("index")} {
        if(index < uniforms.size) {
          let value = getAByOutputIndex(index);
          var clampedValue = clamp(
              value, vec4<f32>(uniforms.minVal), vec4<f32>(uniforms.maxVal));
          clampedValue = select(clampedValue, value, isnanVec4(value));
          setOutputAtIndex(index, clampedValue);
        }
      }
    `}};var Lh=class{constructor(t){this.variableNames=["A"],this.uniforms="minVal : f32, maxVal : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="clip"}getUserCode(){return`
      ${J("index")} {
        if(index < uniforms.size) {
          let value = getAByOutputIndex(index);
          if (isnan(value)) {
            setOutputAtIndex(index, value);
            return;
          }
          setOutputAtIndex(index, clamp(value, uniforms.minVal, uniforms.maxVal));
        }
      }
    `}};function aq(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{clipValueMin:i,clipValueMax:s}=o,a,l=[{type:"float32",data:[i]},{type:"float32",data:[s]}];return S.sizeFromShape(n.shape)%4===0?a=new Oh(n.shape):a=new Lh(n.shape),e.runWebGPUProgram(a,[n],n.dtype,l)}var DE={kernelName:ll,backendName:"webgpu",kernelFunc:aq};var Mh=class{constructor(t){this.outputShape=[],this.variableNames=["real","imag"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="complexAbs"}getUserCode(){return`
    ${J("index")} {
      if (index < uniforms.size) {
        let re = abs(getRealByOutputIndex(index));
        let im = abs(getImagByOutputIndex(index));
        let mx = max(re, im);

        // The length function in wgsl may be not underflow-safe on some GPUs.
        // So the safe solution is to ensure underflow-safety in all cases.
        setOutputAtIndex(index, select(mx * length(vec2<f32>(1, min(re, im)/mx)), 0.0, mx == 0.0));
      }
    }
  `}};function FE(r,t){return{dataId:t.dataId,dtype:t.dtype,shape:r.shape}}function lq(r){let{inputs:t,backend:e}=r,{x:o}=t,n=e.tensorMap.get(o.dataId),i=new Mh(o.shape),s=[FE(o,n.complexTensorInfos.real),FE(o,n.complexTensorInfos.imag)];return e.runWebGPUProgram(i,s,s[0].dtype)}var OE={kernelName:ul,backendName:"webgpu",kernelFunc:lq};var Bh=class{constructor(t){this.uniforms="",this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=$.computeOutShape(t,1),this.variableNames=t.map((e,o)=>`T${o}`),this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.offsetLength=t.length-1;for(let e=0;e<this.offsetLength;e++)this.uniforms+=`offset${e} : i32,`;this.shaderKey="concat"}getUserCode(){let t=[];if(this.offsetLength>0){t.push("if (yC < uniforms.offset0){ setOutputAtCoords(coords.x, coords.y, getT0(yR, yC)); }");for(let i=1;i<this.offsetLength;i++)t.push(`else if (yC < uniforms.offset${[i]}){ setOutputAtCoords(coords.x, coords.y, getT${i}(yR, yC - uniforms.offset${i-1})); }`);let o=this.offsetLength,n=this.offsetLength-1;t.push(`else { setOutputAtCoords(coords.x, coords.y, getT${o}(yR, yC - uniforms.offset${n})); }`)}else t.push("setOutputAtCoords(coords.x, coords.y, getT0(yR, yC));");return`
      ${J("index")} {
        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if(flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndex);
            let yR = coords.x;
            let yC = coords.y;

            ${t.join(`
        `)}
          }
        }
      }
    `}};function ra(r){let{inputs:t,backend:e}=r,{input:o}=t,n=e.tensorMap.get(o.dataId);return Pt({inputs:{x:n.complexTensorInfos.imag},backend:e})}var LE={kernelName:Vl,backendName:"webgpu",kernelFunc:ra};function Cc(r,t,e){let o=r[0].dtype;if(o==="complex64"){let f=r.map(T=>qn({inputs:{input:T},backend:e})),g=r.map(T=>ra({inputs:{input:T},backend:e})),x=Cc(f,t,e),y=Cc(g,t,e),b=go({inputs:{real:x,imag:y},backend:e});return f.forEach(T=>e.disposeData(T.dataId)),g.forEach(T=>e.disposeData(T.dataId)),e.disposeData(x.dataId),e.disposeData(y.dataId),b}let n=e.shouldExecuteOnCPU(r);if(o==="string"&&(n=!0),n){let f=r.map(M=>{let z=[-1,S.sizeFromShape(M.shape.slice(t))];return fe({inputs:{x:M},backend:e,attrs:{shape:z}})}),g=f.map(M=>({vals:e.readSync(M.dataId),shape:M.shape})),x=$.computeOutShape(f.map(M=>M.shape),1),y=f[0].shape[0]===1,b=IT(g,x,o,y),T=$.computeOutShape(r.map(M=>M.shape),t),R=e.makeTensorInfo(T,o,b);return f.forEach(M=>e.disposeData(M.dataId)),R}let i=e.device.limits.maxStorageBuffersPerShaderStage-1;if(r.length>i){let f=[];for(let x=0;x<r.length;x+=i){let y=r.slice(x,x+i);f.push(Cc(y,t,e))}let g=Cc(f,t,e);for(let x of f)e.disposeData(x.dataId);return g}let{tensors2D:s,outShape:a}=uq(r,t,e),l=s.map(f=>f.shape),u=new Bh(l),c=[],p=new Array(l.length-1);if(p.length>0){p[0]=l[0][1],c.push({type:"int32",data:[p[0]]});for(let f=1;f<p.length;f++)p[f]=p[f-1]+l[f][1],c.push({type:"int32",data:[p[f]]})}let d=e.runWebGPUProgram(u,s,s[0].dtype,c);s.forEach(f=>e.disposeData(f.dataId));let m=fe({inputs:{x:d},backend:e,attrs:{shape:a}});return e.disposeData(d.dataId),m}function uq(r,t,e){let o=$.computeOutShape(r.map(i=>i.shape),t);return{tensors2D:r.map(i=>fe({inputs:{x:i},backend:e,attrs:{shape:[S.sizeFromShape(i.shape.slice(0,t)),S.sizeFromShape(i.shape.slice(t))]}})),outShape:o}}function fv(r){let{inputs:t,backend:e,attrs:o}=r,{axis:n}=o,i=S.parseAxisParam(n,t[0].shape)[0],s=t.map(u=>u.shape);$.assertParamsConsistent(s,i);let a=$.computeOutShape(t.map(u=>u.shape),i);if(S.sizeFromShape(a)===0)return e.makeTensorInfo(a,t[0].dtype,[]);let l=t.filter(u=>S.sizeFromShape(u.shape)>0);return l.length===1?Pt({inputs:{x:l[0]},backend:e}):Cc(l,i,e)}var ME={kernelName:cl,backendName:"webgpu",kernelFunc:fv};function cq(r,t,e,o,n=!1,i=null,s=!1,a=4,l=4,u=4){let c=K=>{switch(K){case 1:return"resData = f32(x[xIndex]);";case 3:return"resData = vec3<f32>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);";case 4:return"resData = vec4<f32>(x[xIndex / 4]);";default:throw new Error(`innerElementSize ${K} is not supported.`)}},p=K=>{switch(K){case 1:return"return f32(W[row * uniforms.wShape[3] + col]);";case 4:return"return vec4<f32>(W[(row * uniforms.wShape[3] + col) / 4]);";default:throw new Error(`innerElementSize ${K} is not supported.`)}},d=r?`
      let coord = vec4<i32>(batch, xRow, xCol, xCh);
      `:`
      let coord = vec4<i32>(batch, xCh, xRow, xCol);
      `,m=r?`
      let coords = vec4<i32>(
        batch,
        row / outWidth,
        row % outWidth,
        col);
      `:`
      let coords = vec4<i32>(
        batch,
        row,
        col / outWidth,
        col % outWidth);
      `,f=r?"uniforms.xShape[1]":"uniforms.xShape[2]",g=r?"uniforms.xShape[2]":"uniforms.xShape[3]",x=r?"row":"col",y=r?"col":"row",b=`
      let inChannels = uniforms.wShape[2];
      let outWidth = ${r?"uniforms.outShape[2]":"uniforms.outShape[3]"};
      let outRow = ${x} / outWidth;
      let outCol = ${x} % outWidth;

      let WRow = ${y} / (uniforms.filterDims[1] * inChannels);
      let WCol = ${y} / inChannels % uniforms.filterDims[1];
      let xRow = outRow * uniforms.strides[0] + uniforms.dilations[0] * WRow - uniforms.pads[0];
      let xCol = outCol * uniforms.strides[1] + uniforms.dilations[1] * WCol - uniforms.pads[1];
      let xCh = ${y} % inChannels;
      var resData = ${ze(a)}(0.0);
      // The bounds checking is always needed since we use it to pad zero for
      // the 'same' padding type.
      if (xRow >= 0 && xRow < ${f} && xCol >= 0 && xCol < ${g}) {
        ${d}
        let xIndex = getIndexFromCoords4D(coord, uniforms.xShape);
        ${c(a)}
      }
      return resData;`,T=r?t&&o?`
      ${b}`:`
      if (row < uniforms.dimAOuter && col < uniforms.dimInner) {
        ${b}
      }
      return ${ze(a)}(0.0);`:o&&e?`
      ${b}`:`
      if (row < uniforms.dimInner && col < uniforms.dimBOuter) {
        ${b}
      }
      return ${ze(a)}(0.0);`,R=`${p(l)}`,M=ze(u),V=r?ze(a):ze(l),z=r?ze(l):ze(a);return`
      ${nr(i,s,u===4,4)}
      fn mm_readA(batch: i32, row : i32, col : i32) -> ${V} {
        ${r?T:R}
      }

      fn mm_readB(batch: i32, row : i32, col : i32) -> ${z} {
        ${r?R:T}
      }

      fn mm_write(batch: i32, row : i32, col : i32, valueIn : ${M}) {
        if (row < uniforms.dimAOuter && col < uniforms.dimBOuter)
        {
        var value = valueIn;
        let outWidth = ${r?"uniforms.outShape[2]":"uniforms.outShape[3]"};
        ${m}
        ${Zr(n,i)}
        setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
        }
      }`}var Vh=class{constructor(t,e,o,n,i=!1,s=null,a=!1,l=!1){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, strides : vec2<i32>, dilations : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.outputShape=t.outShape,this.isChannelsLast=t.dataFormat==="channelsLast",this.isVec4=((t.inChannels%4===0||t.inChannels%3===0)&&this.isChannelsLast||t.outWidth%4===0&&!this.isChannelsLast)&&t.outChannels%4===0,this.dispatchLayout=this.isChannelsLast?{x:[3],y:[1,2],z:[0]}:{x:[2,3],y:[1],z:[0]},this.workgroupSize=Mp(this.dispatchLayout,this.outputShape,this.isVec4),this.elementsPerThread=Bp(this.dispatchLayout,this.outputShape,this.isVec4),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize,this.elementsPerThread),this.isVec4?(this.outputComponent=4,this.isChannelsLast&&t.inChannels%4!==0?(this.innerElementSize=3,this.variableComponents=[1,4]):(this.innerElementSize=4,this.variableComponents=[4,4]),i&&(this.variableNames.push("bias"),this.variableComponents.push(4)),a&&(this.variableNames.push("preluActivationWeights"),this.variableComponents.push(4))):(this.innerElementSize=this.elementsPerThread[0],i&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights")),this.sequentialAccessByThreads=l,this.addBias=i,this.activation=s,this.hasPreluActivationWeights=a,this.tileAOuter=this.workgroupSize[1]*this.elementsPerThread[1],this.tileBOuter=this.workgroupSize[0]*this.elementsPerThread[0],this.tileInner=Math.max(this.workgroupSize[0]*this.innerElementSize,this.workgroupSize[1]),this.fitAOuter=e%this.tileAOuter===0,this.fitBOuter=o%this.tileBOuter===0,this.fitInner=n%this.tileInner===0,this.shaderKey=`conv2DMM_${this.elementsPerThread}_${this.activation}}_${this.fitAOuter}_${this.fitBOuter}_${this.fitInner}_${this.isVec4}_${this.innerElementSize}_${this.isChannelsLast}_${this.sequentialAccessByThreads}`}getUserCode(){let t=this.isVec4?Js(this.elementsPerThread,this.workgroupSize,!this.isChannelsLast,this.tileInner):ea(this.elementsPerThread,this.workgroupSize,!this.isChannelsLast,this.tileInner,!1,null,this.sequentialAccessByThreads),e=this.isVec4?[this.innerElementSize,4,4]:[1,1,1];return`
    ${cq(this.isChannelsLast,this.fitAOuter,this.fitBOuter,this.fitInner,this.addBias,this.activation,this.hasPreluActivationWeights,e[0],e[1],e[2])}
    ${t}
  `}};var Wh=class{constructor(t,e=!1,o=null,n=!1){this.variableNames=["x","W"],this.uniforms="filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>,",this.workgroupSize=[4,4,8],this.outputShape=t.outShape,this.isChannelsLast=t.dataFormat==="channelsLast",this.dispatchLayout=this.isChannelsLast?{x:[2],y:[1],z:[0,3]}:{x:[3],y:[2],z:[0,1]},this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize),this.addBias=e,this.activation=o,this.hasPreluActivationWeights=n,e&&this.variableNames.push("bias"),n&&this.variableNames.push("preluActivationWeights"),this.shaderKey=`conv2dnaive_${this.activation}_${this.isChannelsLast}`}getUserCode(){return`
       ${nr(this.activation,this.hasPreluActivationWeights,!1,4)}
       fn readInp(batch : i32, row : i32, col : i32, chan : i32) -> f32{
         let coords = vec4<i32>(batch, row, col, chan);
         if (coordsInBounds4D(coords, uniforms.xShape)) {
           return  getX(batch, row, col, chan);
         } else {
          return 0.0;
         }
       }
       fn readFilt(row : i32, col : i32, xChannel : i32, outChannel : i32) -> f32{
         let coords = vec4<i32>(row, col, xChannel, outChannel);
         if(coordsInBounds4D(coords, uniforms.wShape)) {
           return getW(row, col, xChannel, outChannel);
          } else {
            return 0.0;
          }
       }
       fn writeResult(batch : i32, row : i32, col : i32, chan : i32, valueIn : f32) {
         let coords = ${this.isChannelsLast?"vec4<i32>(batch, row, col, chan);":"vec4<i32>(batch, chan, row, col);"}
         if (coordsInBounds4D(coords, uniforms.outShape)) {
           var value = valueIn;
           ${Zr(this.addBias,this.activation)}
           setOutputAtCoords(coords.x, coords.y, coords.z, coords.w, value);
         }
       }
       ${J("index")} {
         let coords = getOutputCoords();
         let batch = coords[0];
         let outChannel = ${this.isChannelsLast?"coords[3];":"coords[1];"}
         let outRow = ${this.isChannelsLast?"coords[1];":"coords[2];"}
         let outCol = ${this.isChannelsLast?"coords[2];":"coords[3];"}
         var acc : f32 = 0.0;
         for (var row = 0; row < uniforms.filterDims[0]; row = row + 1) {
           for (var col = 0; col < uniforms.filterDims[1]; col = col + 1) {
             let xRow = outRow * uniforms.strides[0] + uniforms.dilations[0] * row - uniforms.pads[0];
             let xCol = outCol * uniforms.strides[1] + uniforms.dilations[1] * col - uniforms.pads[1];
             for (var xChannel = 0; xChannel < ${this.isChannelsLast?"uniforms.xShape[3];":"uniforms.xShape[1];"} xChannel = xChannel + 1) {
               ${this.isChannelsLast?"let v = readInp(batch, xRow, xCol, xChannel);":"let v = readInp(batch, xChannel, xRow, xCol);"}
               let f = readFilt(row, col, xChannel, outChannel);
               acc = acc + v * f;
             }
           }
         }
         writeResult(batch, outRow, outCol, outChannel, acc);
       }
     `}};var zh=class{constructor(t,e){this.variableNames=["x"],this.uniforms=`pads : vec2<i32>, strides : vec2<i32>, dilations : vec2<i32>, outWidth : i32, itemsPerBlockRow : i32,
       inChannels : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize),this.isChannelsLast=e,this.shaderKey=`im2col_${this.isChannelsLast}`}getUserCode(){let t=this.isChannelsLast?1:2,e=this.isChannelsLast?2:3,o=this.isChannelsLast?"coords[1]":"coords[2]",n=this.isChannelsLast?"coords[2]":"coords[1]",i=this.isChannelsLast?"getX(batch, xRow, xCol, ch)":"getX(batch, ch, xRow, xCol)";return`
    ${J("index")} {
      let coords = getCoordsFromIndex(index);
      if(index < uniforms.size) {
        let batch = coords[0];
        let row = ${o};
        let col = ${n};
        let offsetY = (row / uniforms.outWidth) * uniforms.strides[0] - uniforms.pads[0];
        let xRow = offsetY + uniforms.dilations[0] * (col / uniforms.itemsPerBlockRow);
        var value = 0.0;
        if(xRow < uniforms.xShape[${t}] && xRow >= 0) {
          let offsetX = (row % uniforms.outWidth) * uniforms.strides[1] -
              uniforms.pads[1];
          let xCol = offsetX + uniforms.dilations[1] * ((col %
              uniforms.itemsPerBlockRow) / uniforms.inChannels);
          let ch = col % uniforms.inChannels;
          if(xCol < uniforms.xShape[${e}] && xCol >= 0) {
            value = ${i};
          }
        }
        setOutputAtIndex(index, value);
      }
    }
   `}};function Uh(r,t){let e=r.length;return e>=3?t?[...r.slice(0,-3),r[e-3]*r[e-2],r[e-1]]:[...r.slice(0,-3),r[e-3],r[e-2]*r[e-1]]:!t&&e===1&&r[0]>1?[r[0],1]:null}function pq({x:r,filter:t,convInfo:e,backend:o,bias:n=null,preluActivationWeights:i=null,leakyreluAlpha:s=0,activation:a=null}){let l=e.dataFormat==="channelsLast",u=!l,c=!1,p=l&&e.filterHeight===e.inHeight&&e.filterWidth===e.inWidth&&e.padInfo.type==="VALID",d=[],m,f;if(p){let y=e.inHeight*e.inWidth*e.inChannels;m=fe({inputs:{x:r},backend:o,attrs:{shape:[1,e.batchSize,y]}}),f=fe({inputs:{x:t},backend:o,attrs:{shape:[1,y,e.outChannels]}})}else m=fe({inputs:{x:r},backend:o,attrs:{shape:l?[e.batchSize,e.inHeight*e.inWidth,e.inChannels]:[e.batchSize,e.inChannels,e.inHeight*e.inWidth]}}),f=fe({inputs:{x:t},backend:o,attrs:{shape:[1,e.inChannels,e.outChannels]}});if(d.push(m),d.push(f),i!=null){let y=Uh(i.shape,l);y!=null&&(i=fe({inputs:{x:i},backend:o,attrs:{shape:y}}),d.push(i))}if(n!=null){let y=Uh(n.shape,l);y!=null&&(n=fe({inputs:{x:n},backend:o,attrs:{shape:y}}),d.push(n))}let g=ta({a:l?m:f,b:l?f:m,transposeA:u,transposeB:c,backend:o,bias:n,activation:a,preluActivationWeights:i,leakyreluAlpha:s}),x=fe({inputs:{x:g},backend:o,attrs:{shape:e.outShape}});d.push(g);for(let y of d)o.disposeData(y.dataId);return x}function dq({x:r,filter:t,convInfo:e,backend:o,bias:n=null,preluActivationWeights:i=null,leakyreluAlpha:s=0,activation:a=null}){let{filterWidth:l,filterHeight:u,inChannels:c,strideWidth:p,strideHeight:d,padInfo:m,outWidth:f,outHeight:g,dilationWidth:x,dilationHeight:y,dataFormat:b}=e,T=b==="channelsLast",R=l*u*c,M=g*f,V=T?[e.batchSize,M,R]:[e.batchSize,R,M],z=new zh(V,T),H=[{type:"int32",data:[m.top,m.left]},{type:"int32",data:[d,p]},{type:"int32",data:[y,x]},{type:"int32",data:[f]},{type:"int32",data:[c*l]},{type:"int32",data:[c]}],K=o.runWebGPUProgram(z,[r],r.dtype,H),X=[];X.push(K);let te=fe({inputs:{x:t},backend:o,attrs:{shape:[1,R,-1]}});if(X.push(te),i!=null){let Ee=Uh(i.shape,T);Ee!=null&&(i=fe({inputs:{x:i},backend:o,attrs:{shape:Ee}}),X.push(i))}if(n!=null){let Ee=Uh(n.shape,T);Ee!=null&&(n=fe({inputs:{x:n},backend:o,attrs:{shape:Ee}}),X.push(n))}let ve=ta({a:T?K:te,b:T?te:K,transposeA:!T,transposeB:!1,backend:o,bias:n,activation:a,preluActivationWeights:i,leakyreluAlpha:s}),Se=fe({inputs:{x:ve},backend:o,attrs:{shape:e.outShape}});X.push(ve);for(let Ee of X)o.disposeData(Ee.dataId);return Se}function Gh({x:r,filter:t,convInfo:e,backend:o,bias:n=null,preluActivationWeights:i=null,leakyreluAlpha:s=0,activation:a=null}){let l=n!=null,u=i!=null,c=e.dataFormat==="channelsLast",p=c&&e.filterHeight===e.inHeight&&e.filterWidth===e.inWidth&&e.padInfo.type==="VALID",d=G().getBool("WEBGPU_USE_NAIVE_CONV2D_DEBUG");if(!d&&(p||e.filterHeight===1&&e.filterWidth===1&&e.dilationHeight===1&&e.dilationWidth===1&&e.strideHeight===1&&e.strideWidth===1&&(e.padInfo.type==="SAME"||e.padInfo.type==="VALID")))return pq({x:r,filter:t,convInfo:e,backend:o,bias:n,activation:a,preluActivationWeights:i,leakyreluAlpha:s});let m=G().getNumber("WEBGPU_THRESHOLD_TO_INCREASE_WORKGROUPS_FOR_MATMUL"),f=m>-1?m:o.thresholdToIncreaseWorkgroups,g=e.batchSize*Math.ceil(e.outHeight*e.outWidth/32)*Math.ceil(e.outChannels/32);if(G().getBool("WEBGPU_CONV_SEPARATE_IM2COL_SHADER")||g<=f)return dq({x:r,filter:t,convInfo:e,backend:o,bias:n,preluActivationWeights:i,leakyreluAlpha:s,activation:a});let x,y=[e.padInfo.top,e.padInfo.left],b=[{type:"int32",data:[e.filterHeight,e.filterWidth]},{type:"int32",data:[...y]},{type:"int32",data:[e.strideHeight,e.strideWidth]},{type:"int32",data:[e.dilationHeight,e.dilationWidth]}];if(d)x=new Wh(e,l,a,u);else{let V=c?e.outHeight*e.outWidth:e.outChannels,z=c?e.outChannels:e.outHeight*e.outWidth,H=e.filterHeight*e.filterWidth*e.inChannels;b.push({type:"int32",data:[V]},{type:"int32",data:[z]},{type:"int32",data:[H]});let K=o.adapterInfo.isIntel();x=new Vh(e,V,z,H,l,a,u,K)}let T=[],R=[r,t];l&&(!c&&n.shape.length===1&&(n=fe({inputs:{x:n},backend:o,attrs:{shape:[n.shape[0],1,1]}}),T.push(n)),R.push(n)),u&&(!c&&i.shape.length===1&&(i=fe({inputs:{x:i},backend:o,attrs:{shape:[i.shape[0],1,1]}}),T.push(i)),R.push(i)),a==="leakyrelu"&&(b.push({type:"float32",data:[s]}),x.uniforms+=" alpha : f32,");let M=o.runWebGPUProgram(x,R,r.dtype,b);for(let V of T)o.disposeData(V.dataId);return M}function mq(r){let{inputs:t,attrs:e,backend:o}=r,{x:n,filter:i}=t,{strides:s,pad:a,dataFormat:l,dilations:u,dimRoundingMode:c}=e,p=$.convertConv2DDataFormat(l),d=$.computeConv2DInfo(n.shape,i.shape,s,u,a,c,!1,p);return Gh({x:n,filter:i,convInfo:d,backend:o})}var BE={kernelName:pl,backendName:"webgpu",kernelFunc:mq};var Hh=class{constructor(t){this.variableNames=["dy","W"],this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, strides : vec2<i32>, outBackprop : vec4<i32>,",this.workgroupSize=[64,1,1],this.size=!1,this.isVec4=!1,this.workPerThread=1,this.outputShape=t.inShape,this.isChannelsLast=t.dataFormat==="channelsLast",this.isVec4=this.isChannelsLast&&t.outChannels%4===0&&t.inChannels%4===0,this.isVec4?(this.workPerThread=2,this.outputComponent=4,this.workgroupSize=[4,4,4],this.dispatchLayout={x:[3],y:[2],z:[0,1]},this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize,[4,this.workPerThread,1])):(this.size=!0,this.workPerThread=1,this.workgroupSize=[64,1,1],this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize)),this.shaderKey=`conv2DDerInput_${this.isChannelsLast}_${this.isVec4}_${this.workPerThread}`}getUserCode(){let t=this.isChannelsLast?1:2,e=this.isChannelsLast?2:3,o=this.isChannelsLast?3:1,n=`
    ${J()} {
      let batch = i32(globalId.z) / uniforms.outShape[1];
      let r = i32(globalId.z) % uniforms.outShape[1];
      let c = i32(globalId.y) * ${this.workPerThread};
      let d1 = i32(globalId.x) * 4;

      let dyCorner = vec2<i32>(r, c) - uniforms.pads;

      // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
      // ? = to be determined. : = across all values in that axis.
      var dotProd: array<vec4<f32>, ${this.workPerThread}>;
      for (var i = 0; i < ${this.workPerThread}; i++) {
        dotProd[i] = vec4<f32>(0.0);
      }
      for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + 1) {
        let dyR = f32(dyCorner.x + wR) / f32(uniforms.strides.x);
        let wRPerm = uniforms.filterDims.x - 1 - wR;
        if (dyR < 0.0 || dyR >= f32(uniforms.outBackprop[1]) ||
            fract(dyR) > 0.0) {
          continue;
        }
        let idyR = i32(dyR);

        for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + 1) {
          let dyC = f32(dyCorner.y + wC) / f32(uniforms.strides.y);
          let dyC2 = f32(dyCorner.y + 1 + wC) / f32(uniforms.strides.y);
          let wCPerm = uniforms.filterDims.y - 1 - wC;
          var bDyCVal = true;
          var bDyCVal2 = true;
          if (dyC < 0.0 || dyC >= f32(uniforms.outBackprop[2]) ||
              fract(dyC) > 0.0) {
            bDyCVal = false;
          }
          if (dyC2 < 0.0 || dyC2 >= f32(uniforms.outBackprop[2]) ||
              fract(dyC2) > 0.0) {
            bDyCVal2 = false;
          }

          let idyC = i32(dyC);
          let idyC2 = i32(dyC2);
          if (bDyCVal && bDyCVal2) {
            let d2Length = uniforms.outBackprop[3];
            for (var d2 = 0; d2 < d2Length; d2 = d2 + 4) {
              let wValue0 = getW(wRPerm, wCPerm, d1, d2);
              let wValue1 = getW(wRPerm, wCPerm, d1 + 1, d2);
              let wValue2 = getW(wRPerm, wCPerm, d1 + 2, d2);
              let wValue3 = getW(wRPerm, wCPerm, d1 + 3, d2);
              var xValue =  getDy(batch, idyR, idyC, d2);
              let tmpval = vec4<f32>(dot(xValue, wValue0),
                                     dot(xValue, wValue1),
                                     dot(xValue, wValue2),
                                     dot(xValue, wValue3));
              dotProd[0] = dotProd[0] + tmpval;
              xValue = getDy(batch, idyR, idyC2, d2);
              dotProd[1] = dotProd[1] + vec4<f32>(dot(xValue, wValue0),
                                                  dot(xValue, wValue1),
                                                  dot(xValue, wValue2),
                                                  dot(xValue, wValue3));
            }
          } else if (bDyCVal) {
            let d2Length = uniforms.outBackprop[3];
            for (var d2 = 0; d2 < d2Length; d2 = d2 + 4) {
              let wValue0 = getW(wRPerm, wCPerm, d1, d2);
              let wValue1 = getW(wRPerm, wCPerm, d1 + 1, d2);
              let wValue2 = getW(wRPerm, wCPerm, d1 + 2, d2);
              let wValue3 = getW(wRPerm, wCPerm, d1 + 3, d2);
              var xValue =  getDy(batch, idyR, idyC, d2);
              let tmpval = vec4<f32>(dot(xValue, wValue0),
                                     dot(xValue, wValue1),
                                     dot(xValue, wValue2),
                                     dot(xValue, wValue3));
              dotProd[0] = dotProd[0] + tmpval;
            }
          } else if (bDyCVal2) {
            let d2Length = uniforms.outBackprop[3];
            for (var d2 = 0; d2 < d2Length; d2 = d2 + 4) {
              let wValue0 = getW(wRPerm, wCPerm, d1, d2);
              let wValue1 = getW(wRPerm, wCPerm, d1 + 1, d2);
              let wValue2 = getW(wRPerm, wCPerm, d1 + 2, d2);
              let wValue3 = getW(wRPerm, wCPerm, d1 + 3, d2);
              var xValue =  getDy(batch, idyR, idyC2, d2);
              let tmpval = vec4<f32>(dot(xValue, wValue0),
                                     dot(xValue, wValue1),
                                     dot(xValue, wValue2),
                                     dot(xValue, wValue3));
              dotProd[1] = dotProd[1] + tmpval;
            }
          }
        }
      }

      for (var i = 0; i < ${this.workPerThread}; i = i + 1) {
        let coords = vec4<i32>(batch, r, c + i, d1);
        if (coordsInBounds4D(coords, uniforms.outShape)) {
          setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], dotProd[i]);
        }
      }
    }
    `;return this.isVec4?`
    ${n}
    `:`
    ${J("index")} {
      if(index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords[0];
        let d1 = coords[${o}];

        let dyCorner = vec2<i32>(coords[${t}], coords[${e}]) - uniforms.pads;
        let dyRCorner = dyCorner.x;
        let dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + 1) {
          let dyR = (f32(dyRCorner) + f32(wR)) / f32(uniforms.strides.x);
          let wRPerm = uniforms.filterDims.x - 1 - wR;
          if (dyR < 0.0 || dyR >= f32(uniforms.outBackprop[1]) || fract(dyR) > 0.0 ||
              wRPerm < 0) {
            continue;
          }
          let idyR = i32(dyR);

          for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + 1) {
            let dyC = (f32(dyCCorner) + f32(wC)) / f32(uniforms.strides.y);
            let wCPerm = uniforms.filterDims.y - 1 - wC;
            if (dyC < 0.0 || dyC >= f32(uniforms.outBackprop[2]) ||
                fract(dyC) > 0.0 || wCPerm < 0) {
              continue;
            }
            let idyC = i32(dyC);

            for (var d2 = 0; d2 < uniforms.outBackprop[3]; d2 = d2 + 1) {
              let xValue = ${this.isChannelsLast?"getDy(batch, idyR, idyC, d2)":"getDy(batch, d2, idyR, idyC)"};
              let wValue = getW(wRPerm, wCPerm, d1, d2);
              dotProd = dotProd + xValue * wValue;
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
  `}},Kh=class{constructor(t){this.variableNames=["x","dy"],this.uniforms="pads : vec2<i32>, strides : vec2<i32>, batchSize : i32, outHeight : i32, outWidth : i32, inHeight : i32, inWidth : i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t.filterShape,this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize),this.isChannelsLast=t.dataFormat==="channelsLast",this.shaderKey=`conv2DDerFilter_${this.isChannelsLast}`}getUserCode(){return`
    ${J("index")} {
      if(index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let wR = coords[0];
        let wC = coords[1];
        let d1 = coords[2];
        let d2 = coords[3];

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var b = 0; b < uniforms.batchSize; b = b + 1) {
          for (var yR = 0; yR < uniforms.outHeight; yR = yR + 1) {
            let xR = wR + yR * uniforms.strides[0] - uniforms.pads[0];
            if (xR < 0 || xR >= uniforms.inHeight) {
              continue;
            }

            for (var yC = 0; yC < uniforms.outWidth; yC = yC + 1) {
              let xC = wC + yC * uniforms.strides[1] - uniforms.pads[1];

              if (xC < 0 || xC >= uniforms.inWidth) {
                continue;
              }

              if (${this.isChannelsLast}) {
                let dyValue = getDy(b, yR, yC, d2);
                let xValue = getX(b, xR, xC, d1);
                dotProd = dotProd + xValue * dyValue;
              } else {
                let dyValue = getDy(b, d2, yR, yC);
                let xValue = getX(b, d1, xR, xC);
                dotProd = dotProd + xValue * dyValue;
              }
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
  `}},qh=class{constructor(t){this.variableNames=["x","dy"],this.uniforms=`pads : vec3<i32>, strides : vec3<i32>, batchSize : i32, outDepth : i32,
       outHeight : i32, outWidth : i32, inDepth : i32, inHeight : i32, inWidth : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t.filterShape,this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="conv3DDerFilter"}getUserCode(){return`
    ${J("index")} {
      if(index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let wF = coords.x;
        let wR = coords.y;
        let wC = coords.z;
        let d1 = coords.w;
        let d2 = coords.u;

        var dotProd = 0.0;
        for (var b = 0; b < uniforms.batchSize; b++) {
          for (var yF = 0; yF < uniforms.outDepth; yF++) {
            let xF = wF + yF * uniforms.strides[0] - uniforms.pads[0];
            if (xF < 0 || xF >= uniforms.inDepth) {
              continue;
            }

            for (var yR = 0; yR < uniforms.outHeight; yR++) {
              let xR = wR + yR * uniforms.strides[1] - uniforms.pads[1];
              if (xR < 0 || xR >= uniforms.inHeight) {
                continue;
              }

              for (var yC = 0; yC < uniforms.outWidth; yC++) {
                let xC = wC + yC * uniforms.strides[2] - uniforms.pads[2];
                if (xC < 0 || xC >= uniforms.inWidth) {
                  continue;
                }

                let dyValue = getDy(b, yF, yR, yC, d2);
                let xValue = getX(b, xF, xR, xC, d1);
                dotProd += xValue * dyValue;
              }
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
  `}},jh=class{constructor(t){this.variableNames=["dy","W"],this.uniforms=`filterDims : vec3<i32>, pads : vec3<i32>, strides : vec3<i32>,
      outDepth : i32, outHeight : i32, outWidth : i32, outChannels : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t.inShape,this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="conv3DDerInput"}getUserCode(){return`
    ${J("index")} {
      if(index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords.x;
        let d1 = coords.u;

        let dyCorner = vec3<i32>(coords.y, coords.z, coords.w) - uniforms.pads;
        let dyFCorner = dyCorner.x;
        let dyRCorner = dyCorner.y;
        let dyCCorner = dyCorner.z;

        var dotProd = 0.0;
        for (var wF = 0; wF < uniforms.filterDims[0]; wF++) {
          let dyF = f32(dyFCorner + wF) / f32(uniforms.strides[0]);
          if (dyF < 0.0 || dyF >= f32(uniforms.outDepth) || fract(dyF) > 0.0) {
            continue;
          }
          let idyF = i32(dyF);

          let wFPerm = uniforms.filterDims[0] - 1 - wF;

          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {
            let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[1]);

            if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
              continue;
            }
            let idyR = i32(dyR);

            let wRPerm = uniforms.filterDims[1] - 1 - wR;

            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {
              let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[2]);

              if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
                continue;
              }
              let idyC = i32(dyC);

              let wCPerm = uniforms.filterDims[2] - 1 - wC;

              for (var d2 = 0; d2 < uniforms.outChannels; d2++) {
                let xValue = getDy(batch, idyF, idyR, idyC, d2);
                let wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
  `}};function fq(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,dy:i}=t,{strides:s,pad:a,dataFormat:l,dimRoundingMode:u,filterShape:c}=o,p=$.convertConv2DDataFormat(l),d=$.computeConv2DInfo(n.shape,c,s,1,a,u,!1,p),m=new Kh(d),f=[{type:"int32",data:[d.padInfo.top,d.padInfo.left]},{type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.batchSize]},{type:"int32",data:[d.outHeight]},{type:"int32",data:[d.outWidth]},{type:"int32",data:[d.inHeight]},{type:"int32",data:[d.inWidth]}];return e.runWebGPUProgram(m,[n,i],n.dtype,f)}var VE={kernelName:dl,backendName:"webgpu",kernelFunc:fq};function hq(r=4){let t=i=>{switch(i){case 1:return"return W[getIndexFromCoords4D(coord, uniforms.wShape)];";case 4:return`
            let coord1 = vec4<i32>(coordX, coordY, col + 1, rowInner);
            let coord2 = vec4<i32>(coordX, coordY, col + 2, rowInner);
            let coord3 = vec4<i32>(coordX, coordY, col + 3, rowInner);
            let v0 = W[getIndexFromCoords4D(coord, uniforms.wShape)];
            let v1 = W[getIndexFromCoords4D(coord1, uniforms.wShape)];
            let v2 = W[getIndexFromCoords4D(coord2, uniforms.wShape)];
            let v3 = W[getIndexFromCoords4D(coord3, uniforms.wShape)];
            return vec4<f32>(v0, v1, v2, v3);
            `;default:throw new Error(`innerElementSize ${i} is not supported.`)}},o=`if (row < uniforms.dimAOuter && col < uniforms.dimInner) {
        ${`
      let outRow = row / uniforms.outShape[2];
      let outCol = row % uniforms.outShape[2];

      let WRow = col / (uniforms.filterDims[1] * uniforms.outBackprop[3]);
      let WCol = col / uniforms.outBackprop[3] % uniforms.filterDims[1];
      let xR = f32(outRow - uniforms.pads[0] + WRow) / f32(uniforms.strides[0]);
      let xC = f32(outCol - uniforms.pads[1] + WCol) / f32(uniforms.strides[1]);
      if (xR < 0.0 || xR >= f32(uniforms.outBackprop[1]) || fract(xR) > 0.0) {
        return ${ze(r)}(0.0);
      }
      if (xC < 0.0 || xC >= f32(uniforms.outBackprop[2]) || fract(xC) > 0.0) {
        return ${ze(r)}(0.0);
      }
      let coord = vec4<i32>(
          batch,
          i32(xR),
          i32(xC),
          col % uniforms.outBackprop[3]);
      return x[getIndexFromCoords4D(coord, uniforms.xShape)/${r}];`}
      }
      return ${ze(r)}(0.0);`;return`
  fn mm_readA(batch: i32, row : i32, col : i32) -> ${ze(r)} {
    ${o}
  }

  fn mm_readB(batch: i32, row : i32, col : i32) -> ${ze(r)} {
    let coordX = uniforms.filterDims.x - 1 -
        row / (uniforms.filterDims[1] * uniforms.outBackprop[3]);
    let coordY = uniforms.filterDims.y - 1 -
        (row / uniforms.outBackprop[3]) % uniforms.filterDims[1];
    if (row < uniforms.dimInner && col < uniforms.dimBOuter &&
        coordX >= 0 && coordY >= 0) {
      let rowInner = row % uniforms.outBackprop[3];
      let coord = vec4<i32>(coordX, coordY, col, rowInner);
      ${t(r)}
    }
    return ${ze(r)}(0.0);
  }

  fn mm_write(batch: i32, row : i32, col : i32, valueInput : ${ze(r)}) {
    if (row < uniforms.dimAOuter && col < uniforms.dimBOuter) {
      var value = valueInput;
      let outCoord = vec4<i32>(
          batch,
          row / uniforms.outShape[2],
          row % uniforms.outShape[2],
          col);
      result[getIndexFromCoords4D(outCoord, uniforms.outShape)/${r}] = value;
    }
  }`}var Xh=class{constructor(t){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, strides : vec2<i32>, outBackprop : vec4<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.outputShape=t.inShape,S.assert(t.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),this.isVec4=t.inChannels%4===0&&t.outChannels%4===0,this.dispatchLayout={x:[3],y:[1,2],z:[0]},this.workgroupSize=Mp(this.dispatchLayout,this.outputShape,this.isVec4),this.elementsPerThread=Bp(this.dispatchLayout,this.outputShape,this.isVec4),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize,this.elementsPerThread),this.isVec4&&(this.outputComponent=4,this.variableComponents=[4,1]),this.shaderKey=`conv2DDerInputMM_${this.isVec4}_${this.elementsPerThread}`}getUserCode(){let t=this.isVec4?Js(this.elementsPerThread,this.workgroupSize):ea(this.elementsPerThread,this.workgroupSize);return`
    ${hq(this.isVec4?4:1)}
    ${t}
    `}};function gq(r){let{inputs:t,backend:e,attrs:o}=r,{dy:n,filter:i}=t,{inputShape:s,strides:a,pad:l,dataFormat:u,dimRoundingMode:c}=o,p=$.convertConv2DDataFormat(u),d=$.computeConv2DInfo(s,i.shape,a,1,l,c,!1,p),m=[{type:"int32",data:[d.filterHeight,d.filterWidth]},{type:"int32",data:[d.filterHeight-1-d.padInfo.top,d.filterWidth-1-d.padInfo.left]},{type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.batchSize,d.outHeight,d.outWidth,d.outChannels]}],f;if(G().getBool("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE")||d.dataFormat!=="channelsLast")f=new Hh(d);else{f=new Xh(d);let g=d.inHeight*d.inWidth,x=d.inChannels,y=d.filterHeight*d.filterWidth*d.outChannels;m.push({type:"uint32",data:[g]},{type:"uint32",data:[x]},{type:"uint32",data:[y]})}return e.runWebGPUProgram(f,[n,i],"float32",m)}var WE={kernelName:ml,backendName:"webgpu",kernelFunc:gq};var Yh=class{constructor(t){this.variableNames=["x","W"],this.uniforms="filterDims: vec3<i32>, pads: vec3<i32>, strides: vec3<i32>, dilations: vec3<i32>,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t.outShape,this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="conv3dnaive"}getUserCode(){return`
    ${J("index")} {
      if (index < uniforms.size) {
        let coords = getOutputCoords();
        let batch = coords.x;
        let d2 = coords.u;

        let xFRCCorner = vec3<i32>(coords.y, coords.z, coords.w) * uniforms.strides - uniforms.pads;
        let xFCorner = xFRCCorner.x;
        let xRCorner = xFRCCorner.y;
        let xCCorner = xFRCCorner.z;

        let inputDepthNearestVec4 = (uniforms.xShape.u / 4) * 4;
        let inputDepthVec4Remainder = uniforms.xShape.u % 4;

        var dotProd = 0.0;
        for (var wF = 0; wF < uniforms.filterDims[0]; wF++) {
          let xF = xFCorner + wF * uniforms.dilations[0];
          if (xF < 0 || xF >= uniforms.xShape.y) {
            continue;
          }

          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {
            let xR = xRCorner + wR * uniforms.dilations[1];
            if (xR < 0 || xR >= uniforms.xShape.z) {
              continue;
            }

            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {
              let xC = xCCorner + wC * uniforms.dilations[2];
              if (xC < 0 || xC >= uniforms.xShape.w) {
                continue;
              }

              for (var d1 = 0; d1 < inputDepthNearestVec4; d1 += 4) {
                let xValues = vec4<f32>(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                let wValues = vec4<f32>(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (inputDepthVec4Remainder == 1) {
                dotProd += getX(batch, xF, xR, xC, inputDepthNearestVec4) *
                  getW(wF, wR, wC, inputDepthNearestVec4, d2);
              } else if (inputDepthVec4Remainder == 2) {
                let xValues = vec2<f32>(
                  getX(batch, xF, xR, xC, inputDepthNearestVec4),
                  getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1)
                );
                let wValues = vec2<f32>(
                  getW(wF, wR, wC, inputDepthNearestVec4, d2),
                  getW(wF, wR, wC, inputDepthNearestVec4 + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (inputDepthVec4Remainder == 3) {
                let xValues = vec3<f32>(
                  getX(batch, xF, xR, xC, inputDepthNearestVec4),
                  getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1),
                  getX(batch, xF, xR, xC, inputDepthNearestVec4 + 2)
                );
                let wValues = vec3<f32>(
                  getW(wF, wR, wC, inputDepthNearestVec4, d2),
                  getW(wF, wR, wC, inputDepthNearestVec4 + 1, d2),
                  getW(wF, wR, wC, inputDepthNearestVec4 + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }`}};function xq(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,filter:i}=t,{strides:s,pad:a,dilations:l}=o,u=$.computeConv3DInfo(n.shape,i.shape,s,l,a),c=[u.padInfo.front,u.padInfo.top,u.padInfo.left],p=[{type:"int32",data:[u.filterDepth,u.filterHeight,u.filterWidth]},{type:"int32",data:[...c]},{type:"int32",data:[u.strideDepth,u.strideHeight,u.strideWidth]},{type:"int32",data:[u.dilationDepth,u.dilationHeight,u.dilationWidth]}],d=new Yh(u),m=Tt(n.dtype,i.dtype);return e.runWebGPUProgram(d,[n,i],m,p)}var zE={kernelName:fl,backendName:"webgpu",kernelFunc:xq};function yq(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,dy:i}=t,{strides:s,pad:a,filterShape:l}=o,u=$.computeConv3DInfo(n.shape,l,s,1,a),c=new qh(u),p=[{type:"int32",data:[u.padInfo.front,u.padInfo.top,u.padInfo.left]},{type:"int32",data:[u.strideDepth,u.strideHeight,u.strideWidth]},{type:"int32",data:[u.batchSize]},{type:"int32",data:[u.outDepth]},{type:"int32",data:[u.outHeight]},{type:"int32",data:[u.outWidth]},{type:"int32",data:[u.inDepth]},{type:"int32",data:[u.inHeight]},{type:"int32",data:[u.inWidth]}];return e.runWebGPUProgram(c,[n,i],i.dtype,p)}var UE={kernelName:lm,backendName:"webgpu",kernelFunc:yq};function vq(r){let{inputs:t,backend:e,attrs:o}=r,{dy:n,filter:i}=t,{strides:s,pad:a,inputShape:l}=o,u=$.computeConv3DInfo(l,i.shape,s,1,a),c=new jh(u),p=[{type:"int32",data:[u.filterDepth,u.filterHeight,u.filterWidth]},{type:"int32",data:[u.filterDepth-1-u.padInfo.front,u.filterHeight-1-u.padInfo.top,u.filterWidth-1-u.padInfo.left]},{type:"int32",data:[u.strideDepth,u.strideHeight,u.strideWidth]},{type:"int32",data:[u.outDepth]},{type:"int32",data:[u.outHeight]},{type:"int32",data:[u.outWidth]},{type:"int32",data:[u.outChannels]}];return e.runWebGPUProgram(c,[n,i],n.dtype,p)}var GE={kernelName:hl,backendName:"webgpu",kernelFunc:vq};var bq=Ie({opType:se.COS}),HE={kernelName:gl,backendName:"webgpu",kernelFunc:bq};var Sq=Ie({opType:se.COSH}),KE={kernelName:xl,backendName:"webgpu",kernelFunc:Sq};var Qh=class{constructor(t,e,o,n){this.variableNames=["Image","Boxes","BoxInd"],this.uniforms="extrapolationValue : f32,",this.workgroupSize=[64,1,1],this.size=!0;let[i]=e;this.outputShape=[i,o[0],o[1],t],this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize),this.methodId=n==="bilinear"?1:0,this.cropHeightBiggerThan1=this.outputShape[1]>1,this.cropWidthBiggerThan1=this.outputShape[2]>1,this.shaderKey=`cropAndResize_${this.methodId}_${this.cropHeightBiggerThan1}_${this.cropWidthBiggerThan1}`}getUserCode(){let[t,e]=["f32(uniforms.imageShape[1] - 1)","f32(uniforms.imageShape[2] - 1)"],[o,n,i]=this.cropHeightBiggerThan1?[`(${t} / f32(uniforms.outShape[1] - 1))`,"(y2-y1) * height_ratio",`y1*${t} + f32(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${t}`],[s,a,l]=this.cropWidthBiggerThan1?[`(${e} / f32(uniforms.outShape[2] - 1))`,"(x2-x1) * width_ratio",`x1*${e} + f32(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${e}`];return`
    ${J("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let height_ratio = f32(${o});
        let width_ratio = f32(${s});
        let b = coords[0];
        let y = coords[1];
        let x = coords[2];
        let d = coords[3];
        // get box vals
        let y1 = getBoxes(b, 0);
        let x1 = getBoxes(b, 1);
        let y2 = getBoxes(b, 2);
        let x2 = getBoxes(b, 3);
        // get image in batch index
        let bInd = i32(round(getBoxInd(b)));
        if(bInd < 0 || bInd >= uniforms.outShape[0]) {
          return;
        }
        let height_scale = ${n};
        let width_scale = ${a};
        let in_y = ${i};
        if( in_y < 0.0 || in_y > ${t} ) {
          setOutputAtIndex(index, uniforms.extrapolationValue);
          return;
        }
        let in_x = ${l};
        if( in_x < 0.0 || in_x > ${e} ) {
          setOutputAtIndex(index, uniforms.extrapolationValue);
          return;
        }
        let sourceFracIndexCR = vec2<f32>(in_x,in_y);
        if(${this.methodId} == 1) {
          // Compute the four integer indices.
          let sourceFloorCR = vec2<i32>(sourceFracIndexCR);
          let sourceCeilCR = vec2<i32>(ceil(sourceFracIndexCR));
          let topLeft = getImage(bInd, sourceFloorCR.y, sourceFloorCR.x, d);
          let bottomLeft = getImage(bInd, sourceCeilCR.y, sourceFloorCR.x, d);
          let topRight = getImage(bInd, sourceFloorCR.y, sourceCeilCR.x, d);
          let bottomRight = getImage(bInd, sourceCeilCR.y, sourceCeilCR.x, d);
          let fracCR = sourceFracIndexCR - vec2<f32>(sourceFloorCR);
          let top = topLeft + (topRight - topLeft) * fracCR.x;
          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          let newValue = top + (bottom - top) * fracCR.y;
          setOutputAtIndex(index, newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          let sourceNearestCR = vec2<i32>(floor(
            sourceFracIndexCR + vec2<f32>(0.5,0.5)));
          let newValue = getImage(
            bInd, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutputAtIndex(index, newValue);
        }
      }
    }
    `}};var wq=r=>{let{inputs:t,backend:e,attrs:o}=r,{image:n,boxes:i,boxInd:s}=t,{cropSize:a,method:l,extrapolationValue:u}=o,c=new Qh(n.shape[3],i.shape,a,l),p=[{type:"float32",data:[u]}];return e.runWebGPUProgram(c,[n,i,s],"float32",p)},qE={kernelName:bl,backendName:"webgpu",kernelFunc:wq};var kc=function(r){return r.Prod="*",r.Sum="+",r}(kc||{}),jp=class{constructor(t,e,o,n){this.variableNames=["x"],this.uniforms="index : f32,",this.size=!0,this.workgroupSize=[128,1,1],this.outputShape=e,this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize),this.exclusive=o,this.reverse=n,this.op=t,this.shaderKey=`cum_${this.op}_${this.exclusive}_${this.reverse}`}getUserCode(){let t=this.outputShape.length,e=this.op===kc.Prod?"1.0":"0.0",o=this.exclusive?e:`getX(${jE(t,"coords",this.op)})`,n=this.outputShape[this.outputShape.length-1],i="",s="";return this.exclusive?(i=this.reverse?`end != ${n-1}`:"end != 0",s=this.reverse?"end + 1":"end - 1"):(i=this.reverse?`end + pow2 < ${n}`:"end >= pow2",s=this.reverse?"end + pow2":"end - pow2"),`
      ${J("index")} {
       if (index < uniforms.size) {
         var coords = getCoordsFromIndex(index);

         let end = ${XE(t,"coords",this.op)};
         var val = ${o};
         let pow2 = i32(pow(2.0, uniforms.index));
         if (${i}) {
           let idx = ${s};
           ${XE(t,"coords",this.op)} = idx;
           val ${this.op}= getX(${jE(t,"coords",this.op)});
         }
         setOutputAtIndex(index, val);
       }
      }
    `}};function jE(r,t,e){if(r===1)return`${t}`;if(r===2)return`${t}.x, ${t}.y`;if(r===3)return`${t}.x, ${t}.y, ${t}.z`;if(r===4)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative ${e} for rank ${r} is not yet supported`)}function XE(r,t,e){if(r===1)return`${t}`;if(r===2)return`${t}.y`;if(r===3)return`${t}.z`;if(r===4)return`${t}.w`;throw Error(`Cumulative ${e} for rank ${r} is not yet supported`)}function Zh(r,t,e,o,n,i){let s=t.shape.length,a=$.getAxesPermutation([o],s),l=t;a!=null&&(l=mr({inputs:{x:t},backend:e,attrs:{perm:a}}));let u=$.getInnerMostAxes(1,s)[0];if(u!==s-1)throw new Error(`WebGPU cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${o}`);let c=l.shape[u],p=Pt({inputs:{x:l},backend:e});for(let d=0;d<=Math.ceil(Math.log2(c))-1;d++){let m=new jp(r,l.shape,!1,i),f=p,g=[{type:"float32",data:[d]}];p=e.runWebGPUProgram(m,[p],p.dtype,g),e.disposeData(f.dataId)}if(n){let d=new jp(r,l.shape,n,i),m=p,f=[{type:"float32",data:[0]}];p=e.runWebGPUProgram(d,[p],p.dtype,f),e.disposeData(m.dataId)}if(a!=null){let d=$.getUndoAxesPermutation(a),m=mr({inputs:{x:p},backend:e,attrs:{perm:d}});return e.disposeData(p.dataId),e.disposeData(l.dataId),m}return p}function _q(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{axis:i,exclusive:s,reverse:a}=o;return Zh(kc.Prod,n,e,i,s,a)}var YE={kernelName:yl,backendName:"webgpu",kernelFunc:_q};function Cq(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{axis:i,exclusive:s,reverse:a}=o;return Zh(kc.Sum,n,e,i,s,a)}var QE={kernelName:vl,backendName:"webgpu",kernelFunc:Cq};function kq(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,weights:i}=t,{size:s,binaryOutput:a}=o,l=n.shape.length===1,c=S.sizeFromShape(i.shape)>0,p=i.dtype,d=l?[n.shape[0]]:[n.shape[0],n.shape[1]],m=l?[s]:[n.shape[0],s],f=wt({backend:e,attrs:{shape:m,value:0,dtype:p}}),g=new _c(d,c,a),x=[{type:"int32",data:[s]}],y=c?[n,i]:[n];return e.runWebGPUProgram(g,y,p,x,f)}var ZE={kernelName:Sl,backendName:"webgpu",kernelFunc:kq};var Jh=class{constructor(t,e){this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.uniforms="blockSize : i32,",this.outputShape=t,this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey=`depthToSpace_${e}`,this.dataFormat=e}getUserCode(){return`
      ${J("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let h = ${this.getHeightCoordString()};
          let w = ${this.getWidthCoordString()};
          let d = ${this.getDepthCoordString()};

          let in_h = h / uniforms.blockSize;
          let offset_h = h % uniforms.blockSize;
          let in_w = w / uniforms.blockSize;
          let offset_w = w % uniforms.blockSize;
          let offset_d = (offset_h * uniforms.blockSize + offset_w) *
            ${this.getOutputDepthSize()};
          let in_d = d + offset_d;

          let rlt = ${this.getInputSamplingString()};
          setOutputAtIndex(index, rlt);
        }
      }`}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?"uniforms.outShape[3]":"uniforms.outShape[1]"}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};function Iq(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{blockSize:i,dataFormat:s}=o,a=n.shape[0],l=s==="NHWC"?n.shape[1]:n.shape[2],u=s==="NHWC"?n.shape[2]:n.shape[3],c=s==="NHWC"?n.shape[3]:n.shape[1],p=l*i,d=u*i,m=c/(i*i),f=s==="NHWC"?[a,p,d,m]:[a,m,p,d],g=[{type:"int32",data:[i]}],x=new Jh(f,s);return e.runWebGPUProgram(x,[n],n.dtype,g)}var JE={kernelName:wl,backendName:"webgpu",kernelFunc:Iq};var eg=class{constructor(t,e,o,n=!1,i=null,s=!1){this.variableNames=["x","W"],this.uniforms="pads : vec2<i32>, inDims : vec2<i32>,",this.workgroupSize=[16,16,1],this.outputShape=t,this.dispatchLayout={x:[3],y:[2],z:[0,1]},this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize),n&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),this.addBias=n,this.activation=i,this.hasPreluActivation=s,this.filterHeight=e,this.filterWidth=o,this.shaderKey=`depthwiseNCHW_${this.activation}_${this.filterHeight}_${this.filterWidth}`}getUserCode(){let t=this.filterWidth*this.filterHeight,e=this.workgroupSize[0]*this.workgroupSize[1]*this.workgroupSize[2],o=this.workgroupSize[1]+this.filterHeight-1,n=this.workgroupSize[0]+this.filterWidth-1;return`
      ${nr(this.activation,this.hasPreluActivation,!1,4)}

      var<workgroup> mm_Asub : array<array<f32, ${n}>, ${o}>;
      var<workgroup> mm_Bsub : array<array<f32, ${this.filterWidth}>, ${this.filterHeight}>;
      fn readX(batch : i32, channel : i32, row : i32, col : i32) -> f32 {
        var value = 0.0;
        if (row >=0 && row < uniforms.inDims[0] && col >=0 && col < uniforms.inDims[1])
        {
          value = getX(batch, channel, row, col);
        }
        return value;
      }

      ${J()} {
        let coords = getOutputCoords();
        let batch = coords[0];
        let xRCCorner = vec2<i32>(coords.zw) - uniforms.pads;
        let channelMul = uniforms.wShape[3];
        let d1 = coords[1] / channelMul;
        let q = coords[1] % channelMul;

        let inputRowStart = xRCCorner.x;
        let inputColStart = xRCCorner.y;

        let localRow = i32(localId.y);
        let localCol = i32(localId.x);

        // Load one tile of X into local memory.
        for (var inputRow = localRow; inputRow < ${o}; inputRow = inputRow + ${this.workgroupSize[1]}) {
          for (var inputCol = localCol; inputCol < ${n}; inputCol = inputCol + ${this.workgroupSize[0]}) {
            let rowOffset = inputRow - localRow;
            let colOffset = inputCol - localCol;
            mm_Asub[inputRow][inputCol] = readX(batch, d1, inputRowStart + rowOffset, inputColStart + colOffset);
          }
        }

        // Load one tile of W into local memory.
        var wIndex = i32(localIndex);
        ${t<e?`if (wIndex < ${t})`:`for(; wIndex < ${t}; wIndex = wIndex + ${e})`}

        {
          let wRow = wIndex / ${this.filterWidth};
          let wCol = wIndex % ${this.filterWidth};
          mm_Bsub[wRow][wCol] = getW(wRow, wCol, d1, q);
        }

        workgroupBarrier();

        var value = 0.0;
        for (var wR = 0; wR < ${this.filterHeight}; wR = wR + 1) {
          for (var wC = 0; wC < ${this.filterWidth}; wC = wC + 1) {
            let xVal = mm_Asub[localRow + wR][localCol + wC];
            let wVal = mm_Bsub[wR][wC];
            value = fma(xVal, wVal, value);
          }
        }
        ${Zr(this.addBias,this.activation)}
        if (coordsInBounds4D(coords, uniforms.outShape)) {
          setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
        }
      }
    `}};var Ic=class{constructor(t,e=!1,o=null,n=!1){this.variableNames=["x","W"],this.uniforms="pads : vec2<i32>, inDims : vec2<i32>, virtualWidth : i32,",this.workgroupSize=[64,1,1],this.workPerThread=4,this.outputComponent=4,this.outputShape=t.outShape,this.virtualWidth=Math.ceil(this.outputShape[2]/this.workPerThread)*this.workPerThread;let i=[this.outputShape[0],this.outputShape[1],this.virtualWidth,this.outputShape[3]];this.dispatchLayout=ie(i),this.dispatch=ee(this.dispatchLayout,i,this.workgroupSize,[this.outputComponent*this.workPerThread,1,1]),S.assert(t.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),e&&this.variableNames.push("bias"),n&&this.variableNames.push("preluActivationWeights"),this.convInfo=t,this.addBias=e,this.activation=o,this.hasPreluActivation=n,this.shaderKey=`depthwiseVec4_${o}_${this.convInfo.filterHeight}_${this.convInfo.filterWidth}_${this.convInfo.strideHeight}_${this.convInfo.strideWidth}_${this.workPerThread}`}getUserCode(){let t=(this.workPerThread-1)*this.convInfo.strideWidth+this.convInfo.filterWidth,e=this.convInfo.strideHeight,o=this.convInfo.strideWidth;return`
      ${nr(this.activation,this.hasPreluActivation,!0,4)}
      fn readX(batch : i32, row : i32, col : i32, channel : i32) -> vec4<f32> {
        var value = vec4<f32>(0.0);
        if (col >=0 && col < uniforms.inDims[1]) {
          value = getX(batch, row, col, channel);
        }
        return value;
      }

      ${J("index")} {
        let width0 = uniforms.outShape[3] / ${this.outputComponent};
        let d1 = (index % width0) * ${this.outputComponent};
        var index1 = index / width0;
        let width1 = uniforms.virtualWidth / ${this.workPerThread};
        let c = (index1 % width1) * ${this.workPerThread};
        index1 = index1 / width1;
        let r = index1 % uniforms.outShape[1];
        let batch = index1 / uniforms.outShape[1];

        let xRCCorner = vec2<i32>(r, c) * vec2<i32>(${e}, ${o}) - uniforms.pads;

        let xRCorner = xRCCorner.x;
        let xCCorner = xRCCorner.y;
        var xVals : array<vec4<f32>, ${t}>;
        var dotProd : array<vec4<f32>, ${this.workPerThread}>;
        for (var i = 0; i < ${this.workPerThread}; i++) {
          dotProd[i] = vec4<f32>(0.0);
        }

        // Use constant instead of uniform can give better performance.
        for (var wR = 0; wR < ${this.convInfo.filterHeight}; wR = wR + 1) {
          let xR = xRCorner + wR;
          if (xR >=0 && xR < uniforms.inDims[0]) {
            for (var i = 0; i < ${t}; i++) {
              xVals[i] = readX(batch, xR, xCCorner + i, d1);
            }
            for (var wC = 0; wC < ${this.convInfo.filterWidth}; wC = wC + 1) {
              let wValue = getW(wR, wC, d1, 0);
              for (var i = 0; i < ${this.workPerThread}; i++) {
                dotProd[i] = fma(xVals[i * ${o} + wC], wValue, dotProd[i]);
              }
            }
          }
        }

        for (var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let coords = vec4<i32>(batch, r, c + i, d1);
          if (coordsInBounds4D(coords, uniforms.outShape)) {
            var value = dotProd[i];
            ${Zr(this.addBias,this.activation)}
            setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
          }
        }
      }
    `}};var Tc=class{constructor(t,e=!1,o=null,n=!1){this.variableNames=["x","W"],this.uniforms=`pads : vec2<i32>, inDims : vec2<i32>, filterHeight : i32,
      filterWidth : i32, strides : vec2<i32>, dilations : vec2<i32>,`,this.workgroupSize=[256,1,1],this.size=!0,this.outputShape=t.outShape,this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize),this.isChannelsLast=t.dataFormat==="channelsLast",e&&this.variableNames.push("bias"),n&&this.variableNames.push("preluActivationWeights"),this.convInfo=t,this.addBias=e,this.activation=o,this.hasPreluActivation=n,this.shaderKey=`depthwise_${this.activation}_${this.isChannelsLast}`}getUserCode(){let t=this.isChannelsLast?"getX(batch, xR, xC, d1);":"getX(batch, d1, xR, xC);";return`
      ${nr(this.activation,this.hasPreluActivation,!1,4)}

      ${J("index")} {
        if (index < uniforms.size) {
          let coords = getOutputCoords();
          let batch = coords[0];
          let xRCCorner = vec2<i32>(coords.${this.isChannelsLast?"yz":"zw"}) * uniforms.strides - uniforms.pads;
          let d2 = coords[${this.isChannelsLast?3:1}];
          let channelMul = uniforms.wShape[3];
          let d1 = d2 / channelMul;
          let q = d2 % channelMul;

          let inputRowStart = xRCCorner.x;
          let inputColStart = xRCCorner.y;
          let inputRowEnd = inputRowStart + uniforms.filterHeight *
              uniforms.dilations[0];
          let inputColEnd = inputColStart + uniforms.filterWidth *
              uniforms.dilations[1];

          // Convolve x(?, ?, d1)|x(d1, ?, ?) with w(:, :, d1, q) to get
          // y(yR, yC, d2)|y(d2, yR, yC). ? = to be determined. : = across all
          // values in that axis. x(?, ?, d1) and y(yR, yC, d2) is for NHWC.
          // x(d1, ?, ?) and y(d2, yR, yC) is for NCHW.
          var value = 0.0;

          // Extract if checking out of for loop for performance.
          if (inputRowStart >= 0 && inputColStart >= 0 &&
            inputRowEnd < uniforms.inDims[0] &&
                inputColEnd < uniforms.inDims[1]) {
              for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {
                let xR = inputRowStart + wR * uniforms.dilations[0];

                for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {
                  let xC = inputColStart + wC * uniforms.dilations[1];

                  let xVal = ${t};
                  let wVal = getW(wR, wC, d1, q);
                  value = value + xVal * wVal;
                }
              }
            } else {
              for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {
                let xR = inputRowStart + wR * uniforms.dilations[0];

                if (xR < 0 || xR >= uniforms.inDims[0]) {
                  continue;
                }

                for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {
                  let xC = inputColStart + wC * uniforms.dilations[1];

                  if (xC < 0 || xC >= uniforms.inDims[1]) {
                    continue;
                  }

                  let xVal = ${t};
                  let wVal = getW(wR, wC, d1, q);
                  value = value + xVal * wVal;
                }
              }
            }
            ${Zr(this.addBias,this.activation)}
          setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
        }
      }
    `}};function Tq(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,filter:i}=t,{strides:s,pad:a,dataFormat:l,dilations:u,dimRoundingMode:c}=o,p=$.convertConv2DDataFormat(l),d=u;d==null&&(d=[1,1]);let m=$.computeConv2DInfo(n.shape,i.shape,s,d,a,c,!0,p),f=[{type:"int32",data:[m.padInfo.top,m.padInfo.left]},{type:"int32",data:[m.inHeight,m.inWidth]}],g=m.dataFormat==="channelsLast",x;return!g&&m.inHeight>16&&m.inWidth>16&&m.strideHeight===1&&m.strideWidth===1&&m.dilationWidth===1&&m.dilationHeight===1&&m.inChannels===m.outChannels?x=new eg(m.outShape,m.filterHeight,m.filterWidth):g&&m.outHeight>4&&m.outWidth>4&&m.strideWidth<=2&&m.inChannels===m.outChannels&&m.dilationHeight===1&&m.dilationWidth===1&&m.inChannels%4===0?(x=new Ic(m),f.push({type:"int32",data:[x.virtualWidth]})):(x=new Tc(m),f.push({type:"int32",data:[m.filterHeight]},{type:"int32",data:[m.filterWidth]},{type:"int32",data:[m.strideHeight,m.strideWidth]},{type:"int32",data:[m.dilationHeight,m.dilationWidth]})),e.runWebGPUProgram(x,[n,i],n.dtype,f)}var e3={kernelName:_l,backendName:"webgpu",kernelFunc:Tq};var tg=class{constructor(t){this.variableNames=["x","dy"],this.uniforms=`strides : vec2<i32>, pads : vec2<i32>, filterDims : vec2<i32>, outHeight : i32,
      outWidth : i32, inHeight : i32, inWidth : i32, batchSize : i32, channelMul : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t.filterShape,this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="depthwise_conv2d_backprop_filter"}getUserCode(){return`
      ${J("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let wR = coords[0];
        let wC = coords[1];
        let d1 = coords[2];
        let dm = coords[3];
        let d2 = d1 * uniforms.channelMul + dm;

        var dotProd = 0.0;
        for (var b = 0; b < uniforms.batchSize; b++) {
          for (var yR = 0; yR < uniforms.outHeight; yR++) {
            let xR = wR + yR * uniforms.strides[0] - uniforms.pads[0];

            if (xR < 0 || xR >= uniforms.inHeight) {
              continue;
            }

            for (var yC = 0; yC < uniforms.outWidth; yC++) {
              let xC = wC + yC * uniforms.strides[1] - uniforms.pads[1];

              if (xC < 0 || xC >= uniforms.inWidth) {
                continue;
              }

              let dyValue = getDy(b, yR, yC, d2);
              let xValue = getX(b, xR, xC, d1);
              dotProd += xValue * dyValue;
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
    `}},rg=class{constructor(t){this.variableNames=["dy","W"],this.uniforms=`strides : vec2<i32>, pads : vec2<i32>, filterDims : vec2<i32>,
       outHeight : i32, outWidth : i32, channelMul : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t.inShape,this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="depthwise_conv2d_backprop_input"}getUserCode(){return`
      ${J("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords[0];
        let d1 = coords[3];
        let dyCorner = coords.yz - uniforms.pads;
        let dyRCorner = dyCorner.x;
        let dyCCorner = dyCorner.y;

        var dotProd = 0.0;
        for (var wR = 0; wR < uniforms.filterDims[0]; wR++) {
          let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[0]);

          if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
            continue;
          }

          let idyR = i32(dyR);
          let wRPerm = uniforms.filterDims[0] - 1 - wR;

          for (var wC = 0; wC < uniforms.filterDims[1]; wC++) {
            let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[1]);

            if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
              continue;
            }

            let idyC = i32(dyC);
            let wCPerm = uniforms.filterDims[1] - 1 - wC;

            for (var dm = 0; dm < uniforms.channelMul; dm++) {
              let d2 = d1 * uniforms.channelMul + dm;
              let xValue = getDy(batch, idyR, idyC, d2);
              let wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
    `}};function Eq(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,dy:i}=t,{strides:s,dilations:a,pad:l,dimRoundingMode:u,filterShape:c}=o,p=$.computeConv2DInfo(n.shape,c,s,a,l,u,!0),d=new tg(p),m=[{type:"int32",data:[p.strideHeight,p.strideWidth]},{type:"int32",data:[p.padInfo.top,p.padInfo.left]},{type:"int32",data:[p.filterHeight,p.filterWidth]},{type:"int32",data:[p.outHeight]},{type:"int32",data:[p.outWidth]},{type:"int32",data:[p.inHeight]},{type:"int32",data:[p.inWidth]},{type:"int32",data:[p.batchSize]},{type:"int32",data:[p.outChannels/p.inChannels]}];return e.runWebGPUProgram(d,[n,i],"float32",m)}var t3={kernelName:Cl,backendName:"webgpu",kernelFunc:Eq};function Nq(r){let{inputs:t,backend:e,attrs:o}=r,{dy:n,filter:i}=t,{strides:s,dilations:a,pad:l,dimRoundingMode:u,inputShape:c}=o,p=$.computeConv2DInfo(c,i.shape,s,a,l,u,!0),d=new rg(p),m=[{type:"int32",data:[p.strideHeight,p.strideWidth]},{type:"int32",data:[p.filterHeight-1-p.padInfo.top,p.filterWidth-1-p.padInfo.left]},{type:"int32",data:[p.filterHeight,p.filterWidth]},{type:"int32",data:[p.outHeight]},{type:"int32",data:[p.outWidth]},{type:"int32",data:[p.outChannels/p.inChannels]}];return e.runWebGPUProgram(d,[n,i],n.dtype,m)}var r3={kernelName:kl,backendName:"webgpu",kernelFunc:Nq};var og=class{constructor(t){this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[t,t],this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="diag"}getUserCode(){return`
      ${J("index")} {
        if (index < uniforms.size) {
          let coords = getOutputCoords();
          let value = select(0.0, getX(coords[0]), coords[0] == coords[1]);
          setOutputAtIndex(index, value);
        }
      }
    `}};function Rq(r){let{inputs:t,backend:e}=r,{x:o}=t,n=[...o.shape,...o.shape],i=S.sizeFromShape(o.shape),s=fe({inputs:{x:o},backend:e,attrs:{shape:[i]}}),a=new og(i),l=e.runWebGPUProgram(a,[s],s.dtype),u=fe({inputs:{x:l},backend:e,attrs:{shape:n}});return e.disposeData(s.dataId),e.disposeData(l.dataId),u}var o3={kernelName:Il,backendName:"webgpu",kernelFunc:Rq};var ng=class{constructor(t){this.variableNames=["x","w"],this.uniforms="filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t.outShape,this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="dilation2d"}getUserCode(){return`
       ${J("index")} {
         if (index < uniforms.size) {
           let neg_infinity = -3.4e38;
           let coords = getOutputCoords();
           let batch = coords.x;
           let d1 = coords.w;
           let outTopLeftCorner = coords.yz * uniforms.strides - uniforms.pads;
           let hBeg = outTopLeftCorner.x;
           let wBeg = outTopLeftCorner.y;

           var curVal = neg_infinity;
           for (var h = 0; h < uniforms.filterDims[0]; h = h + 1) {
             let hIn = hBeg + h * uniforms.dilations[0];

             if (hIn >= 0 && hIn < uniforms.xShape[1]) {
               for (var w = 0; w < uniforms.filterDims[1]; w = w + 1) {
                 let wIn = wBeg + w * uniforms.dilations[1];

                 if (wIn >= 0 && wIn < uniforms.xShape[2]) {
                   let val = getX(batch, hIn, wIn, d1) + getW(h, w, d1);
                   if (val > curVal) {
                     curVal = val;
                   }
                 }
               }
             }
           }

           setOutputAtIndex(index, curVal);
         }
       }
     `}};function $q(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,filter:i}=t,{strides:s,pad:a,dilations:l}=o,u=$.computeDilation2DInfo(n.shape,i.shape,s,a,"NHWC",l),c=[u.padInfo.top,u.padInfo.left],p=[{type:"int32",data:[u.filterHeight,u.filterWidth]},{type:"int32",data:[...c]},{type:"int32",data:[u.strideHeight,u.strideWidth]},{type:"int32",data:[u.dilationHeight,u.dilationWidth]}],d=new ng(u);return e.runWebGPUProgram(d,[n,i],n.dtype,p)}var n3={kernelName:Tl,backendName:"webgpu",kernelFunc:$q};var ig=class{constructor(t,e){if(this.variableNames=["x","w","dy"],this.uniforms="filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>, dySize: i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=t.inShape,this.dispatchLayout=ie(t.outShape),this.dispatch=ee(this.dispatchLayout,t.outShape,this.workgroupSize),e!=="float32"&&e!=="int32")throw new Error(`Dilation2DBackpropInput only supports float32 and int32
          types, does not support ${e} type.`);this.type=e,this.shaderKey="dilation2DBackpropInput"}getUserCode(){return`
       ${J("index")} {
         if (index < uniforms.dySize) {
           let coords = getDyCoordsFromIndex(index);
           let b = coords[0];
           let r = coords[1];
           let c = coords[2];
           let d = coords[3];

           let dyCorner = vec2<i32>(r, c) * uniforms.strides - uniforms.pads;
           var curVal = -3.4e38;  // neg_infinity
           var xRMax = 0;
           var xCMax = 0;

           // In the case of multiple argmax branches, we only back-propagate
           // along the last branch, i.e., the one with largest value of
           // 'wR * uniforms.filterDims[1] + wC', similarly to the max-pooling
           // backward routines.
           for (var wR = 0; wR < uniforms.filterDims[0]; wR++) {
             let xR = dyCorner.x + wR * uniforms.dilations[0];

             if (xR >= 0 && xR < uniforms.xShape[1]) {
               for (var wC = 0; wC < uniforms.filterDims[1]; wC++) {
                 let xC = dyCorner.y + wC * uniforms.dilations[1];

                 if (xC >= 0 && xC < uniforms.xShape[2]) {
                   let val = getX(b, xR, xC, d) + getW(wR, wC, d);
                   if (val > curVal) {
                     curVal = val;
                     xRMax = xR;
                     xCMax = xC;
                   }
                 }
               }
             }
           }

           let flatIndexIn = d + uniforms.xShape[3] *
               (xCMax + uniforms.xShape[2] * (xRMax + uniforms.xShape[1] * b));
           let value = getDy(b, r, c, d);
           ${Qr("&result[flatIndexIn]","value",this.type)}
         }
       }
     `}},sg=class{constructor(t,e,o){if(this.variableNames=["x","w","dy"],this.uniforms="filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>, dySize: i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=t.filterShape,this.dispatchLayout=ie(t.outShape),this.dispatch=ee(this.dispatchLayout,t.outShape,this.workgroupSize),o!=="float32"&&o!=="int32")throw new Error(`Dilation2DBackpropFilter only supports float32 and int32
          types, does not support ${o} type.`);this.type=o,this.shaderKey="dilation2DBackpropFilter"}getUserCode(){return`
       ${J("index")} {
         if (index < uniforms.dySize) {
           let coords = getDyCoordsFromIndex(index);
           let b = coords[0];
           let r = coords[1];
           let c = coords[2];
           let d = coords[3];

           let dyCorner = vec2<i32>(r, c) * uniforms.strides - uniforms.pads;
           var curVal = -3.4e38;  // neg_infinity
           var wRMax = 0;
           var wCMax = 0;

           // In the case of multiple argmax branches, we only back-propagate
           // along the last branch, i.e., the one with largest value of
           // 'wR * uniforms.filterDims[1] + wC', similarly to the max-pooling
           // backward routines.
           for (var wR = 0; wR < uniforms.filterDims[0]; wR++) {
             let xR = dyCorner.x + wR * uniforms.dilations[0];

             if (xR >= 0 && xR < uniforms.xShape[1]) {
               for (var wC = 0; wC < uniforms.filterDims[1]; wC++) {
                 let xC = dyCorner.y + wC * uniforms.dilations[1];

                 if (xC >= 0 && xC < uniforms.xShape[2]) {
                   let val = getX(b, xR, xC, d) + getW(wR, wC, d);
                   if (val > curVal) {
                     curVal = val;
                     wRMax = wR;
                     wCMax = wC;
                   }
                 }
               }
             }
           }

           let flatIndexIn = d + uniforms.wShape[2] * (wCMax + wRMax * uniforms.wShape[1]);
           let value = getDy(b, r, c, d);
           ${Qr("&result[flatIndexIn]","value",this.type)}
         }
       }
     `}};function Pq(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,filter:i,dy:s}=t,{strides:a,pad:l,dilations:u}=o,c=$.computeDilation2DInfo(n.shape,i.shape,a,l,"NHWC",u),p=i.dtype,d=new sg(c,i.shape,p),m=[{type:"int32",data:[c.filterHeight,c.filterWidth]},{type:"int32",data:[c.padInfo.top,c.padInfo.left]},{type:"int32",data:[c.strideHeight,c.strideWidth]},{type:"int32",data:[c.dilationHeight,c.dilationWidth]},{type:"int32",data:[S.sizeFromShape(c.outShape)]}],f=wt({backend:e,attrs:{shape:i.shape,value:0,dtype:p}});return e.runWebGPUProgram(d,[n,i,s],p,m,f)}var i3={kernelName:n2,backendName:"webgpu",kernelFunc:Pq};function Aq(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,filter:i,dy:s}=t,{strides:a,pad:l,dilations:u}=o,c=$.computeDilation2DInfo(n.shape,i.shape,a,l,"NHWC",u),p=n.dtype,d=new ig(c,p),m=[{type:"int32",data:[c.filterHeight,c.filterWidth]},{type:"int32",data:[c.padInfo.top,c.padInfo.left]},{type:"int32",data:[c.strideHeight,c.strideWidth]},{type:"int32",data:[c.dilationHeight,c.dilationWidth]},{type:"int32",data:[S.sizeFromShape(c.outShape)]}],f=wt({backend:e,attrs:{shape:c.inShape,value:0,dtype:p}});return e.runWebGPUProgram(d,[n,i,s],p,m,f)}var s3={kernelName:o2,backendName:"webgpu",kernelFunc:Aq};var ag=class{constructor(t,e,o){this.variableNames=["Image"],this.uniforms="alpha: f32,",this.workgroupSize=[64,1,1],this.pixelsOpType=Zi.DRAW,this.size=!0,this.outputShape=t,this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize),this.type=e,this.textureFormat=o,this.shaderKey=`draw_${e}_${o}`}getUserCode(){let t,e=this.type==="float32"?"value":"value / 255.0";return t=`
      if (uniforms.numChannels == 1) {
        rgba[0] = ${e};
        rgba[1] = ${e};
        rgba[2] = ${e};
      } else {
        rgba[d] = ${e};
      }`,`
       @group(0) @binding(0) var outImage : texture_storage_2d<${this.textureFormat}, write>;
       ${J("index")} {
         if (index < uniforms.size) {
           var rgba = vec4<f32>(0.0, 0.0, 0.0, uniforms.alpha);
           for (var d = 0; d < uniforms.numChannels; d = d + 1) {
             let value = f32(inBuf[index * uniforms.numChannels + d]);
             ${t}
           }
           rgba.x = rgba.x * rgba.w;
           rgba.y = rgba.y * rgba.w;
           rgba.z = rgba.z * rgba.w;
           let coords = getCoordsFromIndex(index);
           textureStore(outImage, vec2<i32>(coords.yx), rgba);
         }
       }
      `}};function Dq(r){let{inputs:t,backend:e,attrs:o}=r,{image:n}=t,{canvas:i,options:s}=o,[a,l]=n.shape.slice(0,2),{imageOptions:u}=s||{},c=u?.alpha||1,p=e.device.features.has("bgra8unorm-storage")?"bgra8unorm":"rgba8unorm",d=[a,l],m=new ag(d,n.dtype,p);i.width=l,i.height=a;let f="webgpu",g=i.getContext(f),x;g||(x=new OffscreenCanvas(l,a),g=x.getContext(f));let y=n.shape.length===3?n.shape[2]:1;g.configure({device:e.device,format:p,usage:GPUTextureUsage.STORAGE_BINDING,alphaMode:"premultiplied"});let b="int32",T=e.makeTensorInfo(d,b),R=e.tensorMap.get(T.dataId);R.resource=g.getCurrentTexture(),R.external=!0;let M=[{type:"uint32",data:[y]},{type:"float32",data:[c]}];if(e.runWebGPUProgram(m,[n],b,M,T),x){let V=i.getContext("2d");if(!V)throw new Error("Please make sure this canvas has only been used for 2d or webgpu context!");V.drawImage(x,0,0)}return e.disposeData(T.dataId),n}var a3={kernelName:xp,backendName:"webgpu",kernelFunc:Dq};var hv=Je({opType:ke.MUL,cpuKernelImpl:zT,supportsComplex:!0}),l3={kernelName:ki,backendName:"webgpu",kernelFunc:hv};function gv(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{axis:i,keepDims:s}=o;return eo(n,i,s,"sum",e)}var u3={kernelName:Pu,backendName:"webgpu",kernelFunc:gv};function Fq(r){let{inputs:t,backend:e,attrs:o}=r,{equation:n}=o,i=t,{allDims:s,summedDims:a,idDims:l}=$.decodeEinsumEquation(n,i.length);$.checkEinsumDimSizes(s.length,l,i);let{path:u,steps:c}=$.getEinsumComputePath(a,l),p=c.length,d=null,m=s.length,f=[];for(let g=0;g<p;++g){for(let x of c[g]){let{permutationIndices:y,expandDims:b}=$.getEinsumPermutation(m,l[x]),T;$.isIdentityPermutation(y)?T=i[x]:(T=mr({inputs:{x:i[x]},backend:e,attrs:{perm:y}}),f.push(T));let R=T.shape.slice();for(let M=0;M<b.length;++M)R.splice(b[M],0,1);S.arraysEqual(T.shape,R)||(T=fe({inputs:{x:T},backend:e,attrs:{shape:R}}),f.push(T)),d===null?d=T:(d=hv({inputs:{a:T,b:d},backend:e}),f.push(d))}g<p-1&&(u[g]>=0&&(d=gv({inputs:{x:d},backend:e,attrs:{axis:u[g]-(s.length-m),keepDims:!1}}),f.push(d)),m--)}for(let g of f)g!==d&&e.disposeData(g.dataId);return d}var c3={kernelName:Nl,backendName:"webgpu",kernelFunc:Fq};var Oq=Ie({opType:se.ELU}),p3={kernelName:Rl,backendName:"webgpu",kernelFunc:Oq};var Lq=r=>{let{inputs:t,backend:e}=r,{dy:o,y:n}=t,i=new Kn(ke.ELU_DER,o.shape,n.shape);return e.runWebGPUProgram(i,[o,n],o.dtype)},d3={kernelName:um,backendName:"webgpu",kernelFunc:Lq};var Mq=Je({opType:ke.EQUAL,dtype:"bool",cpuKernelImpl:TT}),m3={kernelName:mi,backendName:"webgpu",kernelFunc:Mq};var Bq=Ie({opType:se.ERF}),f3={kernelName:$l,backendName:"webgpu",kernelFunc:Bq};var Vq=Ie({opType:se.EXP,cpuKernelImpl:ET,dtype:"float32"}),h3={kernelName:fi,backendName:"webgpu",kernelFunc:Vq};function lg(r){let{inputs:t,attrs:e,backend:o}=r,{dim:n}=e,{input:i}=t,s=i.shape.length,a=i.shape.slice(),l=n;return n<0&&(S.assert(-(s+1)<=n,()=>`Axis must be in the interval [${-(s+1)}, ${s}]`),l=s+n+1),a.splice(l,0,1),fe({inputs:{x:i},backend:o,attrs:{shape:a}})}var g3={kernelName:Pl,backendName:"webgpu",kernelFunc:lg};var Wq=Ie({opType:se.EXPM1,cpuKernelImpl:NT}),x3={kernelName:hi,backendName:"webgpu",kernelFunc:Wq};var Xp=class{constructor(t,e){this.variableNames=["real","imag"],this.outputShape=[],this.uniforms="exponentMultiplier : f32, denominator: f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize),this.component=t,this.shaderKey=`fft_${t}`}getUserCode(){return`
    fn unaryOpComplex(real: f32, expR: f32, imag: f32, expI: f32) -> f32 {
      ${this.component==="real"?"return real * expR - imag * expI;":"return real * expI + imag * expR;"}
    }

    fn mulMatDFT(batch: i32, index: i32) -> f32 {
      let indexRatio = f32(index) / f32(uniforms.realShape[1]);
      let exponentMultiplierTimesIndexRatio =
          uniforms.exponentMultiplier * indexRatio;

      var result = 0.0;

      for (var i = 0; i < uniforms.realShape[1]; i = i + 1) {
        // x = (-2|2 * PI / N) * index * i;
        let x = exponentMultiplierTimesIndexRatio * f32(i);
        let expR = cos(x);
        let expI = sin(x);
        let real = getReal(batch, i);
        let imag = getImag(batch, i);

        result = result +
            unaryOpComplex(real, expR, imag, expI) / uniforms.denominator;
      }

      return result;
    }

    ${J("index")} {
      if (index < uniforms.size) {
        let coords = getOutputCoords();
        setOutputAtIndex(index, mulMatDFT(coords[0], coords[1]));
      }
    }
  `}};function ug(r,t,e){let o=e.tensorMap.get(r.dataId),n=S.sizeFromShape(r.shape),i=r.shape[r.shape.length-1],s=n/i,a=[],l=fe({inputs:{x:r},backend:e,attrs:{shape:[s,i]}});a.push(l);let u=l.shape,c=new Xp("real",u),p=new Xp("imag",u),d=[{dataId:o.complexTensorInfos.real.dataId,dtype:o.complexTensorInfos.real.dtype,shape:u},{dataId:o.complexTensorInfos.imag.dataId,dtype:o.complexTensorInfos.imag.dtype,shape:u}],m=t?2*Math.PI:-2*Math.PI,f=t?u[1]:1,g=[{type:"float32",data:[m]},{type:"float32",data:[f]}],x=e.runWebGPUProgram(c,d,"float32",g);a.push(x);let y=e.runWebGPUProgram(p,d,"float32",g);a.push(y);let b=go({inputs:{real:x,imag:y},backend:e});a.push(b);let T=fe({inputs:{x:b},backend:e,attrs:{shape:r.shape}});return a.forEach(R=>e.disposeData(R.dataId)),T}function zq(r){let{inputs:t,backend:e}=r,{input:o}=t;return ug(o,!1,e)}var y3={kernelName:Al,backendName:"webgpu",kernelFunc:zq};var cg=class{constructor(t){this.outputShape=[],this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="flipLeftRight"}getUserCode(){return`
      ${J("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let coordX = uniforms.xShape[2] - coords[2] - 1;
          let outputValue = getX(coords[0], coords[1], coordX, coords[3]);
          setOutputAtIndex(index, outputValue);
        }
      }
    `}};var v3={kernelName:Fl,backendName:"webgpu",kernelFunc:({inputs:r,backend:t})=>{let{image:e}=r,o=t,n=new cg(e.shape);return o.runWebGPUProgram(n,[e],e.dtype)}};var Uq=Ie({opType:se.FLOOR,cpuKernelImpl:RT}),b3={kernelName:gi,backendName:"webgpu",kernelFunc:Uq};var Gq=Je({opType:ke.FLOOR_DIV,cpuKernelImpl:$T,dtype:"int32"}),S3={kernelName:xi,backendName:"webgpu",kernelFunc:Gq};var pg=class{constructor(t,e,o=!1){this.pixelsOpType=Zi.FROM_PIXELS,this.outputShape=[0],this.variableNames=[],this.workgroupSize=[256,1,1],this.outputShape=t,this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize,[e,1,1]),this.importVideo=o,this.shaderKey=`fromPixels_${this.importVideo}`}getUserCode(){let t=this.importVideo?"textureLoad(src, vec2<i32>(coords.yx));":"textureLoad(src, vec2<i32>(coords.yx), 0)";return`
      @binding(1) @group(0) var src: ${this.importVideo?"texture_external":"texture_2d<f32>"};
      ${J("index")} {
        let flatIndex = index * uniforms.numChannels;
        if (flatIndex < uniforms.size) {
          let coords = getCoordsFromIndex(flatIndex);
          let values = ${t};
          for (var i = 0; i < uniforms.numChannels; i = i + 1) {
            result[flatIndex + i] = i32(floor(255.0 * values[i]));
          }
        }
      }
  `}};var w3={kernelName:Cs,backendName:"webgpu",kernelFunc:Hq},Ec,xv=G().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");function Hq(r){let{inputs:t,backend:e,attrs:o}=r,{pixels:n}=t,{numChannels:i}=o;if(n==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let s=typeof HTMLVideoElement<"u"&&n instanceof HTMLVideoElement,a=typeof HTMLImageElement<"u"&&n instanceof HTMLImageElement,l=typeof HTMLCanvasElement<"u"&&n instanceof HTMLCanvasElement||typeof OffscreenCanvas<"u"&&n instanceof OffscreenCanvas,u=typeof ImageBitmap<"u"&&n instanceof ImageBitmap,[c,p]=s?[n.videoWidth,n.videoHeight]:[n.width,n.height],d=[p,c,i],m=G().getBool("WEBGPU_IMPORT_EXTERNAL_TEXTURE")&&s,f=s||a;if(u||l||f){let b;if(m)b=e.device.importExternalTexture({source:n});else{if(f){let pe=G().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(Ec==null||pe!==xv)&&(xv=pe,Ec=document.createElement("canvas").getContext("2d",{willReadFrequently:xv})),Ec.canvas.width=c,Ec.canvas.height=p,Ec.drawImage(n,0,0,c,p),n=Ec.canvas}let X=GPUTextureUsage.COPY_DST|GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.TEXTURE_BINDING,ce=e.textureManager.acquireTexture(d[1],d[0],"rgba8unorm",X);e.queue.copyExternalImageToTexture({source:n},{texture:ce},[d[1],d[0]]),b=ce}let T=S.sizeFromShape(d),R=S.computeStrides(d),M=new pg(d,i,m),V=[{type:"uint32",data:[T]},{type:"uint32",data:[i]},{type:"uint32",data:[...R]}],z=e.makeTensorInfo([p,c],"int32"),H=e.tensorMap.get(z.dataId);H.resource=b;let K=e.runWebGPUProgram(M,[z],"int32",V);return e.disposeData(z.dataId),K}let g=n.data,x=g;if(i!=null&&i!==4){x=new Uint8Array(n.width*n.height*i);let b=g.length,T=0;for(let R=0;R<b;R++)R%4<i&&(x[T++]=g[R])}let y=e.makeTensorInfo(d,"int32",new Int32Array(x));return e.uploadToGPU(y.dataId),y}var dg=class{constructor(t,e,o,n,i){this.uniforms="varianceEpsilon : f32,",this.workgroupSize=[128,1,1],this.size=!0,this.variableNames=["x","mean","variance"],$.assertAndGetBroadcastShape(t,e),$.assertAndGetBroadcastShape(t,o),this.outputShape=t,this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize),n!=null&&($.assertAndGetBroadcastShape(t,n),this.variableNames.push("offset")),i!=null&&($.assertAndGetBroadcastShape(t,i),this.variableNames.push("scale")),this.offsetShape=n,this.scaleShape=i,this.shaderKey="batchNorm"}getUserCode(){let t="0.0";this.offsetShape!=null&&(t="getOffsetByOutputIndex(index)");let e="1.0";return this.scaleShape!=null&&(e="getScaleByOutputIndex(index)"),`
      ${J("index")} {
        if (index < uniforms.size)
        {
          let xValue = getXByOutputIndex(index);
          let meanValue = getMeanByOutputIndex(index);
          let varianValue = getVarianceByOutputIndex(index);
          let offsetValue = ${t};
          let scaleValue = ${e};
          let inv = scaleValue * inverseSqrt(varianValue + f32(uniforms.varianceEpsilon));
          setOutputAtIndex(index,dot(vec3<f32>(xValue, -meanValue, offsetValue), vec3<f32>(inv, inv, 1.0)));
        }
      }
  `}};var _3={kernelName:Ol,backendName:"webgpu",kernelFunc:({inputs:r,attrs:t,backend:e})=>{let{x:o,scale:n,offset:i,mean:s,variance:a}=r,{varianceEpsilon:l}=t,u=e,c=[o,s,a],p=null;i!=null&&(p=i.shape,c.push(i));let d=null;n!=null&&(d=n.shape,c.push(n));let m=new dg(o.shape,s.shape,a.shape,p,d),f=[{type:"float32",data:[l]}];return u.runWebGPUProgram(m,c,o.dtype,f)}};function Kq(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,filter:i,bias:s,preluActivationWeights:a}=t,{strides:l,pad:u,dataFormat:c,dilations:p,dimRoundingMode:d,activation:m,leakyreluAlpha:f}=o,g=$.convertConv2DDataFormat(c),x=$.computeConv2DInfo(n.shape,i.shape,l,p,u,d,!1,g);return Gh({x:n,filter:i,convInfo:x,backend:e,bias:s,preluActivationWeights:a,leakyreluAlpha:f,activation:m})}var C3={kernelName:Is,backendName:"webgpu",kernelFunc:Kq};function qq(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,filter:i,bias:s,preluActivationWeights:a}=t,{strides:l,pad:u,dilations:c,dimRoundingMode:p,activation:d,leakyreluAlpha:m}=o,f=c;f==null&&(f=[1,1]),S.assert($.eitherStridesOrDilationsAreOne(l,f),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${f}'`);let g=$.computeConv2DInfo(n.shape,i.shape,l,f,u,p,!0),x=[n,i],y=s!=null,b=a!=null;y&&x.push(s),b&&x.push(a);let T=[{type:"int32",data:[g.padInfo.top,g.padInfo.left]},{type:"int32",data:[g.inHeight,g.inWidth]}],R;return g.outHeight>4&&g.outWidth>4&&g.strideWidth<=2&&g.inChannels===g.outChannels&&g.dilationHeight===1&&g.dilationWidth===1&&g.inChannels%4===0?(R=new Ic(g,y,d,b),T.push({type:"int32",data:[R.virtualWidth]})):(R=new Tc(g,y,d,b),T.push({type:"int32",data:[g.filterHeight]},{type:"int32",data:[g.filterWidth]},{type:"int32",data:[g.strideHeight,g.strideWidth]},{type:"int32",data:[g.dilationHeight,g.dilationWidth]})),d==="leakyrelu"&&(T.push({type:"float32",data:[m]}),R.uniforms+=" alpha : f32,"),e.runWebGPUProgram(R,x,"float32",T)}var k3={kernelName:Ts,backendName:"webgpu",kernelFunc:qq};var mg=class{constructor(t,e){this.variableNames=["A","indices"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey=`gathernd_${t}`,this.sliceDim=t,this.uniforms=`sliceDim : i32, strides : ${ht(t)},`}getUserCode(){let t;return this.sliceDim>1?t="uniforms.strides[j]":t="uniforms.strides",`
      ${J("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          var flattenIndex = 0;
          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
            let indexTemp = i32(round(getIndices(coords[0], j)));
            let strideNum = ${t};
            flattenIndex = flattenIndex + indexTemp * strideNum;
          }

          setOutputAtIndex(index, getA(flattenIndex, coords[1]));
        }
      }
      `}};function jq(r){let{inputs:t,backend:e}=r,{params:o,indices:n}=t,i=n.shape,s=i[i.length-1],a=S.sizeFromShape(o.shape),[l,u,c,p]=$.prepareAndValidate(o,n),d=fe({inputs:{x:n},backend:e,attrs:{shape:[u,s]}}),m=fe({inputs:{x:o},backend:e,attrs:{shape:[S.sizeFromShape(o.shape)/c,c]}});if(e.shouldExecuteOnCPU([o,n])||o.dtype==="string"){let b=e.readSync(n.dataId),T=e.bufferSync(o),R=PT(b,T,o.dtype,u,s,c,p,o.shape,a);return e.makeTensorInfo(l,o.dtype,R.values)}let f=new mg(s,[u,c]),g=[{type:"int32",data:[s]},{type:"int32",data:p}],x=e.runWebGPUProgram(f,[m,d],m.dtype,g),y=fe({inputs:{x},backend:e,attrs:{shape:l}});return e.disposeData(d.dataId),e.disposeData(m.dataId),e.disposeData(x.dataId),y}var I3={kernelName:Ml,backendName:"webgpu",kernelFunc:jq};var fg=class{constructor(t,e){this.variableNames=["A","indices"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t.slice(),this.aShape=t,this.outputShape=e,this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="gather"}getUserCode(){let t=Xq(this.aShape);return`
      ${J("index")} {
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          let indexZ = i32(getIndices(resRC.x, resRC.z));
          let inBounds = select(0.0, 1.0, indexZ >= 0 && indexZ < uniforms.aShape[2]);
          setOutputAtIndex(index, inBounds * getA(${t}));
        }
      }
    `}};function Xq(r){let t=["resRC.x","resRC.y","resRC.z","resRC.w"],e=[];for(let o=0;o<r.length;o++)o===2?e.push("indexZ"):e.push(`${t[o]}`);return e.join()}function yv(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,indices:i}=t,{axis:s,batchDims:a}=o,l=S.parseAxisParam(s,n.shape)[0],u=$.segment_util.collectGatherOpShapeInfo(n,i,l,a),c=S.sizeFromShape(i.shape),p=[],d=fe({inputs:{x:n},backend:e,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),m=fe({inputs:{x:i},backend:e,attrs:{shape:[u.batchSize,c/u.batchSize]}});p.push(d),p.push(m);let f=[u.batchSize,u.outerSize,c/u.batchSize,u.sliceSize];if(e.shouldExecuteOnCPU([n,i])){let T=e.tensorMap.get(m.dataId).values,R=Me(m.shape,m.dtype,T),V=e.tensorMap.get(d.dataId).values,z=Me(d.shape,d.dtype,V),H=AT(z,R,f);return p.forEach(K=>e.disposeData(K.dataId)),e.makeTensorInfo(u.outputShape,H.dtype,H.values)}let g=new fg(d.shape,f),x=e.runWebGPUProgram(g,[d,m],d.dtype);p.push(x);let y=fe({inputs:{x},backend:e,attrs:{shape:u.outputShape}});return p.forEach(b=>e.disposeData(b.dataId)),y}var T3={kernelName:Ll,backendName:"webgpu",kernelFunc:yv};var Yq=Je({opType:ke.GREATER,cpuKernelImpl:FT,dtype:"bool"}),E3={kernelName:yi,backendName:"webgpu",kernelFunc:Yq};var Qq=Je({opType:ke.GREATER_EQUAL,dtype:"bool",cpuKernelImpl:DT}),N3={kernelName:vi,backendName:"webgpu",kernelFunc:Qq};function Zq(r){let{inputs:t,backend:e}=r,{input:o}=t;return ug(o,!0,e)}var R3={kernelName:Bl,backendName:"webgpu",kernelFunc:Zq};var Jq=Ie({opType:se.IS_FINITE,dtype:"bool"}),$3={kernelName:Wl,backendName:"webgpu",kernelFunc:Jq};var ej=Ie({opType:se.IS_INF,dtype:"bool"}),P3={kernelName:zl,backendName:"webgpu",kernelFunc:ej};var tj=Ie({opType:se.IS_NAN,dtype:"bool"}),A3={kernelName:Ul,backendName:"webgpu",kernelFunc:tj};function rj(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{alpha:i}=o,s=[{type:"float32",data:[i]}],a=new Jr(n.shape,se.LEAKYRELU,"alpha : f32,");return e.runWebGPUProgram(a,[n],"float32",s)}var D3={kernelName:Gl,backendName:"webgpu",kernelFunc:rj};var oj=Je({opType:ke.LESS,dtype:"bool",cpuKernelImpl:LT}),F3={kernelName:bi,backendName:"webgpu",kernelFunc:oj};var nj=Je({opType:ke.LESS_EQUAL,dtype:"bool",cpuKernelImpl:OT}),O3={kernelName:Si,backendName:"webgpu",kernelFunc:nj};var hg=class{constructor(t){this.variableNames=[],this.outputShape=[],this.uniforms="start : f32, step : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[t],this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="linSpace"}getUserCode(){return`
      ${J("index")} {
        if (index < uniforms.size) {
          setOutputAtIndex(index, uniforms.start + f32(index) * uniforms.step);
        }
      }
    `}};function ij(r){let{backend:t,attrs:e}=r,{start:o,stop:n,num:i}=e,s=(n-o)/(i-1),a=new hg(i),l=[{type:"float32",data:[o]},{type:"float32",data:[s]}];return t.runWebGPUProgram(a,[],"float32",l)}var L3={kernelName:Hl,backendName:"webgpu",kernelFunc:ij};var sj=Ie({opType:se.LOG,cpuKernelImpl:MT}),M3={kernelName:wi,backendName:"webgpu",kernelFunc:sj};var aj=Ie({opType:se.LOG1P}),B3={kernelName:Kl,backendName:"webgpu",kernelFunc:aj};var lj=Je({opType:ke.LOGICAL_AND,dtype:"bool"}),V3={kernelName:ql,backendName:"webgpu",kernelFunc:lj};var uj=Ie({opType:se.LOGICAL_NOT}),W3={kernelName:jl,backendName:"webgpu",kernelFunc:uj};var cj=Je({opType:ke.LOGICAL_OR}),z3={kernelName:Xl,backendName:"webgpu",kernelFunc:cj};var U3=`
  var powValue = 0.0;
  let basis = uniforms.bias + uniforms.alpha * sum;
  if (uniforms.beta == 0.5) {
    powValue = inverseSqrt(basis);
  } else if (uniforms.beta == 1.0) {
    powValue = 1.0 / basis;
  } else {
    powValue = exp(log(basis) * (-uniforms.beta));
  }
`,gg=class{constructor(t){this.outputShape=[],this.variableNames=["x"],this.uniforms="radius : i32, bias : f32, alpha : f32, beta : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="lrn"}getUserCode(){return`
    ${J("index")} {
      if (index < uniforms.size) {
        let coords = getOutputCoords();
        let b = coords[0];
        let r = coords[1];
        let c = coords[2];
        let d = coords[3];

        let x = getX(b, r, c, d);
        var sum = 0.0;
        for (var i = -uniforms.radius; i <= uniforms.radius; i = i + 1) {
          let idx = d + i;
          if (idx >= 0 && idx < uniforms.xShape[3]) {
            let z = getX(b, r, c, idx);
            sum = sum + z * z;
          }
        }
        ${U3}

        setOutputAtIndex(index, x * powValue);
      }
    }
  `}},xg=class{constructor(t,e){this.outputShape=[],this.variableNames=["x"],this.uniforms="radius : i32, bias : f32, alpha : f32, beta : f32,",this.workgroupSize=[256,1,1],this.maxAllowRadius=16,S.assert(e<=this.maxAllowRadius,()=>`Radius must be less than or equal to ${this.maxAllowRadius}, current radius is ${e}`),this.outputShape=t,this.elementsPerWorkgroup=this.workgroupSize[0]-2*this.maxAllowRadius,this.dispatchLayout={x:[3],y:[2],z:[0,1]},this.dispatch=ee(this.dispatchLayout,this.outputShape,[this.elementsPerWorkgroup,this.workgroupSize[1],this.workgroupSize[2]]),this.shaderKey="lrn_shared"}getUserCode(){return`
    var <workgroup>lrnSub: array<f32, ${this.workgroupSize[0]}>;
    const elementsPerWorkgroup = ${this.elementsPerWorkgroup};
    const maxAllowRadius = ${this.maxAllowRadius};

    ${J()} {
      let localDepth = i32(localId.x);
      let workgroupDepth = i32(workgroupId.x) * elementsPerWorkgroup;
      let xDepth = workgroupDepth + localDepth - maxAllowRadius;
      let b = i32(globalId.z) / uniforms.xShape[1];
      let r = i32(globalId.z) - b * uniforms.xShape[1];
      let c = i32(globalId.y);
      let d = workgroupDepth + localDepth;

      var x = 0.0;
      if (xDepth >= 0 && xDepth < uniforms.xShape[3]) {
        x = getX(b, r, c, xDepth);
      }
      lrnSub[localDepth] = x;
      workgroupBarrier();

      if (localDepth < elementsPerWorkgroup && d < uniforms.outShape[3]) {
        var sum = 0.0;
        let index = localDepth + maxAllowRadius;
        for (var i = -uniforms.radius; i <= uniforms.radius; i = i + 1) {
          let z = lrnSub[index + i];
          sum = sum + z * z;
        }
        ${U3}

        setOutputAtCoords(b, r, c, d, lrnSub[index] * powValue);
      }
    } `}};function pj(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{depthRadius:i,bias:s,alpha:a,beta:l}=o,u;i>16?u=new gg(n.shape):u=new xg(n.shape,i);let c=[{type:"int32",data:[i]},{type:"float32",data:[s]},{type:"float32",data:[a]},{type:"float32",data:[l]}];return e.runWebGPUProgram(u,[n],n.dtype,c)}var G3={kernelName:Yl,backendName:"webgpu",kernelFunc:pj};var yg=class{constructor(t){this.outputShape=[],this.variableNames=["inputImage","outputImage","dy"],this.uniforms="depthRadius : i32, bias : f32, alpha : f32, beta : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="lrn_grad"}getUserCode(){return`
    ${J("index")} {
      if (index < uniforms.size) {
        let coords = getOutputCoords();
        let b = coords[0];
        let r = coords[1];
        let c = coords[2];

        let MIN_DEPTH_BEGIN = 0;
        let MAX_DEPTH_END = uniforms.outShape[3];
        var result = 0.0;
        for (var d = MIN_DEPTH_BEGIN; d < MAX_DEPTH_END; d++) {
          let depthBegin = max(MIN_DEPTH_BEGIN, d - uniforms.depthRadius);
          let depthEnd = min(MAX_DEPTH_END, d + uniforms.depthRadius + 1);

          var norm = 0.0;
          for (var k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; k++) {
            if (k < depthBegin) {
              continue;
            } else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            } else {
              break;
            }
          }

          norm = uniforms.alpha * norm + uniforms.bias;

          for (var k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; k++) {
            if (k < depthBegin) {
              continue;
            } else if (k >= depthBegin && k < depthEnd) {
              var dyi = -2.0 * uniforms.alpha * uniforms.beta
                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d) / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * uniforms.beta);
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            } else {
              break;
            }
          }
        }

        setOutputAtIndex(index, result);
      }
    }
  `}};function dj(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,y:i,dy:s}=t,{depthRadius:a,bias:l,alpha:u,beta:c}=o,p=new yg(n.shape),d=[{type:"int32",data:[a]},{type:"float32",data:[l]},{type:"float32",data:[u]},{type:"float32",data:[c]}];return e.runWebGPUProgram(p,[n,i,s],n.dtype,d)}var H3={kernelName:cm,backendName:"webgpu",kernelFunc:dj};var mj=Je({opType:ke.MAX,cpuKernelImpl:VT}),K3={kernelName:_i,backendName:"webgpu",kernelFunc:mj};function fj(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{filterSize:i,strides:s,pad:a,dimRoundingMode:l}=o,c=$.computePool2DInfo(n.shape,i,s,1,a,l);return $h(n,c,"max",e)}var q3={kernelName:Zl,backendName:"webgpu",kernelFunc:fj};function hj(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{filterSize:i,strides:s,pad:a,dataFormat:l,dimRoundingMode:u}=o,c=[1,1,1],p=$.computePool3DInfo(n.shape,i,s,c,a,u,l),d=new es(p,"max"),m=[{type:"int32",data:[p.strideDepth,p.strideHeight,p.strideWidth]},{type:"int32",data:[p.padInfo.front,p.padInfo.top,p.padInfo.left]},{type:"int32",data:[p.inDepth,p.inHeight,p.inWidth]},{type:"int32",data:[p.effectiveFilterDepth,p.effectiveFilterHeight,p.effectiveFilterWidth]}];return e.runWebGPUProgram(d,[n],n.dtype,m)}var j3={kernelName:Jl,backendName:"webgpu",kernelFunc:hj};var vg=class{constructor(t){this.variableNames=["dy","maxPos"],this.uniforms=`strides : vec2<i32>, pads : vec2<i32>, dilations : vec2<i32>, filterDims : vec2<i32>,
       outHeight : i32, outWidth : i32`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t.inShape,this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="maxPool2DBackprop"}getUserCode(){return`
      ${J("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords[0];
        let d = coords[3];

        let dyRCCorner = vec2<i32>(coords.yz) - uniforms.pads;
        let dyRCorner = dyRCCorner.x;
        let dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        let lastIndex = uniforms.filterDims[0] * uniforms.filterDims[1] - 1;
        for (var wR = 0; wR < uniforms.filterDims[0]; wR += uniforms.dilations[0]) {
          let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[0]);

          if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
            continue;
          }
          let idyR = i32(dyR);

          for (var wC = 0; wC < uniforms.filterDims[1]; wC += uniforms.dilations[1]) {
            let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[1]);

            if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
              continue;
            }
            let idyC = i32(dyC);

            let dyValue = getDy(batch, idyR, idyC, d);
            let maxPosValue = lastIndex - i32(getMaxPos(batch, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            let curPosValue = wR * uniforms.filterDims[1] + wC;
            let mask = select(0.0, 1.0, maxPosValue == curPosValue);
            dotProd += dyValue * mask;
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
    `}},bg=class{constructor(t){this.variableNames=["dy","maxPos"],this.uniforms=`strides : vec3<i32>, pads : vec3<i32>, filterDims : vec3<i32>,
      outDepth : i32, outHeight : i32, outWidth : i32`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t.inShape,this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="maxPool3DBackprop"}getUserCode(){return`
      ${J("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords.x;
        let ch = coords.u;

        let dyCorner = vec3<i32>(coords.y, coords.z, coords.w) - uniforms.pads;
        let dyDCorner = dyCorner.x;
        let dyRCorner = dyCorner.y;
        let dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        let lastIndex = uniforms.filterDims[0] * uniforms.filterDims[1] * uniforms.filterDims[2] - 1;

        for (var wD = 0; wD < uniforms.filterDims[0]; wD++) {
          let dyD = f32(dyDCorner + wD) / f32(uniforms.strides[0]);

          if (dyD < 0.0 || dyD >= f32(uniforms.outDepth) || fract(dyD) > 0.0) {
            continue;
          }
          let idyD = i32(dyD);

          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {
            let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[1]);

            if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
              continue;
            }
            let idyR = i32(dyR);

            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {
              let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[2]);

              if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
                continue;
              }
              let idyC = i32(dyC);

              let dyValue = getDy(batch, idyD, idyR, idyC, ch);
              let maxPosValue = lastIndex - i32(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              let curPosValue = wD * uniforms.filterDims[1] * uniforms.filterDims[2] + wR * uniforms.filterDims[2] + wC;
              let mask = select(0.0, 1.0, maxPosValue == curPosValue);
              dotProd += dyValue * mask;
            }
          }
        }

        setOutputAtIndex(index, dotProd);
      }
    }
    `}};function gj(r){let{inputs:t,backend:e,attrs:o}=r,{dy:n,input:i}=t,s=i,{filterSize:a,strides:l,pad:u,dimRoundingMode:c}=o,p=[1,1,1],d=$.computePool3DInfo(s.shape,a,l,p,u,c),m=new es(d,"max",!0),f=[{type:"int32",data:[d.strideDepth,d.strideHeight,d.strideWidth]},{type:"int32",data:[d.padInfo.front,d.padInfo.top,d.padInfo.left]},{type:"int32",data:[d.inDepth,d.inHeight,d.inWidth]},{type:"int32",data:[d.effectiveFilterDepth,d.effectiveFilterHeight,d.effectiveFilterWidth]}],g=e.runWebGPUProgram(m,[s],"int32",f),x=new bg(d);f=[{type:"int32",data:[d.strideDepth,d.strideHeight,d.strideWidth]},{type:"int32",data:[d.effectiveFilterDepth-1-d.padInfo.front,d.effectiveFilterHeight-1-d.padInfo.top,d.effectiveFilterWidth-1-d.padInfo.left]},{type:"int32",data:[d.effectiveFilterDepth,d.effectiveFilterHeight,d.effectiveFilterWidth]},{type:"int32",data:[d.outDepth]},{type:"int32",data:[d.outHeight]},{type:"int32",data:[d.outWidth]}];let y=e.runWebGPUProgram(x,[n,g],s.dtype,f);return e.disposeData(g.dataId),y}var X3={kernelName:dm,backendName:"webgpu",kernelFunc:gj};function xj(r){let{inputs:t,backend:e,attrs:o}=r,{dy:n,input:i,output:s}=t,a=i;Wp([i,s],"maxPoolGrad");let{filterSize:l,strides:u,pad:c,dimRoundingMode:p}=o,d=$.computePool2DInfo(a.shape,l,u,1,c,p),m=new hn(d,"max",!0),f=[{type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.padInfo.top,d.padInfo.left]},{type:"int32",data:[d.dilationHeight,d.dilationWidth]},{type:"int32",data:[d.inHeight,d.inWidth]},{type:"int32",data:[d.effectiveFilterHeight,d.effectiveFilterWidth]}],g=e.runWebGPUProgram(m,[a],"int32",f),x=new vg(d);f=[{type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.effectiveFilterHeight-1-d.padInfo.top,d.effectiveFilterWidth-1-d.padInfo.left]},{type:"int32",data:[d.dilationHeight,d.dilationWidth]},{type:"int32",data:[d.effectiveFilterHeight,d.effectiveFilterWidth]},{type:"int32",data:[d.outHeight]},{type:"int32",data:[d.outWidth]}];let y=e.runWebGPUProgram(x,[n,g],a.dtype,f);return e.disposeData(g.dataId),y}var Y3={kernelName:pm,backendName:"webgpu",kernelFunc:xj};function yj(r){let{inputs:t,backend:e,attrs:o}=r,{filterSize:n,strides:i,pad:s,includeBatchInIndex:a}=o,{x:l}=t;S.assert(l.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${l.shape.length}.`);let u=[1,1];S.assert($.eitherStridesOrDilationsAreOne(i,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);let c=$.computePool2DInfo(l.shape,n,i,u,s),p=[{type:"int32",data:[c.strideHeight,c.strideWidth]},{type:"int32",data:[c.padInfo.top,c.padInfo.left]},{type:"int32",data:[c.dilationHeight,c.dilationWidth]},{type:"int32",data:[c.inHeight,c.inWidth]},{type:"int32",data:[c.effectiveFilterHeight,c.effectiveFilterWidth]}],d=new hn(c,"max",!1),m=e.runWebGPUProgram(d,[l],l.dtype,p);d=new hn(c,"max",!0,!0,a);let f=e.runWebGPUProgram(d,[l],"int32",p);return[m,f]}var Q3={kernelName:eu,backendName:"webgpu",kernelFunc:yj};function vj(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{axis:i,keepDims:s}=o;return eo(n,i,s,"min",e)}var Z3={kernelName:ru,backendName:"webgpu",kernelFunc:vj};var bj=Je({opType:ke.MIN,cpuKernelImpl:WT}),J3={kernelName:Ci,backendName:"webgpu",kernelFunc:bj};var Sg=class{constructor(t,e,o){this.uniforms="",this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.map((n,i)=>n[0]+t[i]+n[1]),this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize),this.xShape=t,e.map((n,i)=>{this.uniforms+=` pad${i} : vec2<i32>,`}),this.offset=o==="reflect"?0:1,this.shaderKey=`mirrorPad_${o}`}getUserCode(){let t=this.xShape.length,e=this.xShape.map((u,c)=>`uniforms.pad${c}[0]`).join(","),o=this.xShape.map((u,c)=>`uniforms.pad${c}[0] + uniforms.xShape${t>1?`[${c}]`:""}`).join(","),n=t===1?"start":"start[i]",i=t===1?"end":"end[i]",s=t===1?"outC":"outC[i]",a=ht(t),l=t>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,t):"coords";return`
      ${J("index")} {
        if (index < uniforms.size) {
          let start = ${a}(${e});
          let end = ${a}(${o});
          var outC = getCoordsFromIndex(index);
          for (var i = 0; i < ${t}; i = i + 1) {
            if (${s} < ${n}) {
              ${s} = ${n} * 2 - ${s} - ${this.offset};
            } else if(${s} >= ${i}) {
              ${s} = (${i} - 1) * 2 - ${s} + ${this.offset};
            }
          }
          let coords = outC - start;
          setOutputAtIndex(index, getX(${l}));
        }
      }
    `}};var eN={kernelName:ou,backendName:"webgpu",kernelFunc:({inputs:r,attrs:t,backend:e})=>{let{x:o}=r,{paddings:n,mode:i}=t,s=e,a=n.map(c=>({type:"int32",data:[c[0],c[1]]})),l=new Sg(o.shape,n,i);return s.runWebGPUProgram(l,[o],o.dtype,a)}};var Sj=Je({opType:ke.MOD}),tN={kernelName:nu,backendName:"webgpu",kernelFunc:Sj};var wg=class{constructor(t,e){this.variableNames=["probs"],this.outputShape=[],this.uniforms="seed : f32, numOutcomes: i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[t,e],this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="multinomial"}getUserCode(){return`
    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    fn random (seed : f32, resultUV : vec2<f32>) -> f32 {
      let HASHSCALE1 = 443.8975;
      let p = resultUV * seed;
      var p3  = fract(vec3<f32>(p.xyx) * HASHSCALE1);
      p3 = p3 + dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${J("index")} {
      if (index < uniforms.size) {
        let coords = getOutputCoords();
        let batch = coords[0];

        let resUV = vec2<f32>(f32(coords[1]) / f32(uniforms.outShape[1]),
            f32(coords[0]) / f32(uniforms.outShape[0]));
        let r = random(uniforms.seed, resUV);
        var cdf = 0.0;
        for (var i = 0; i < uniforms.numOutcomes - 1; i = i + 1) {
          cdf = cdf + getProbs(batch, i);

          if (r < cdf) {
            setOutputAtIndexI32(index, i);
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutputAtIndexI32(index, uniforms.numOutcomes - 1);
      }
    }
  `}};var _g=class{constructor(t){this.variableNames=["logits"],this.outputShape=t,this.dispatchLayout=ie(this.outputShape),this.dispatch=[this.outputShape[0],1,1],this.outputShape[1]>=4096?this.workgroupSize=[256,1,1]:this.workgroupSize=[64,1,1],this.shaderKey="softmax"}getUserCode(){return`
    var<workgroup> buf : array<f32, ${this.workgroupSize[0]}>;
    var<workgroup> rowMaxShared : f32;
    var<workgroup> rowSumShared : f32;
    const blockSize = ${this.workgroupSize[0]};
    ${J("index")} {
      let row = index / blockSize;
      let tid = i32(localId.x);
      let cols = uniforms.outShape[1];

      var threadMax = -3.402823e+38f;
      for (var col = tid; col < cols; col += blockSize) {
        let value = getLogits(row, col);
        threadMax = max(threadMax, value);
      }
      if (tid < cols) {
        buf[tid] = threadMax;
      }
      workgroupBarrier();

      var reduceSize = min(cols, blockSize);
      for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {
        reduceSize = currSize + (reduceSize & 1);
        if (tid < currSize) {
          buf[tid] = max(buf[tid], buf[tid + reduceSize]);
        }
        workgroupBarrier();
      }

      if (tid == 0) {
        rowMaxShared = buf[0];
      }
      workgroupBarrier();

      var threadSum = 0.0;
      for (var col = tid; col < cols; col += blockSize) {
        let subExp = exp(getLogits(row, col) - rowMaxShared);
        threadSum += subExp;
      }
      buf[tid] = threadSum;
      workgroupBarrier();

      for (var currSize = blockSize >> 1;  currSize > 0; currSize = currSize >> 1) {
        if (tid < currSize) {
          buf[tid] = buf[tid] + buf[tid + currSize];
        }
        workgroupBarrier();
      }

      if (tid == 0) {
        rowSumShared = buf[0];
      }
      workgroupBarrier();

      for (var col = tid; col < cols; col += blockSize) {
        let value = exp(getLogits(row, col) - rowMaxShared) / rowSumShared;
        setOutputAtCoords(row, col, value);
      }
  }
    `}};function vv(r){let{inputs:t,backend:e,attrs:o}=r,{logits:n}=t,{dim:i}=o,s=fe({inputs:{x:n},backend:e,attrs:{shape:[S.sizeFromShape(n.shape)/n.shape[i],n.shape[i]]}}),a=new _g(s.shape),l=e.runWebGPUProgram(a,[s],n.dtype),u=fe({inputs:{x:l},backend:e,attrs:{shape:n.shape}});return e.disposeData(s.dataId),e.disposeData(l.dataId),u}var rN={kernelName:Fu,backendName:"webgpu",kernelFunc:vv};function wj(r){let{inputs:t,backend:e,attrs:o}=r,{logits:n}=t,{numSamples:i,seed:s,normalized:a}=o,l=a?n:vv({inputs:{logits:n},backend:e,attrs:{dim:n.shape.length-1}}),u=l.shape[0],c=l.shape[1],p=new wg(u,i),d=[{type:"float32",data:[s]},{type:"int32",data:[c]}],m=e.runWebGPUProgram(p,[l],"int32",d);return a||e.disposeData(l.dataId),m}var oN={kernelName:iu,backendName:"webgpu",kernelFunc:wj};function _j(r){let{inputs:t,backend:e}=r,{x:o}=t;if(e.shouldExecuteOnCPU([o])){let i=e.tensorMap.get(o.dataId),[s,a]=UT(i.values,o.shape,o.dtype);return e.makeTensorInfo(a,o.dtype,s)}let n=new Jr(o.shape,se.NEG);return e.runWebGPUProgram(n,[o],o.dtype)}var nN={kernelName:bs,backendName:"webgpu",kernelFunc:_j};function Cj(r){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:e,attrs:o}=r,{boxes:n,scores:i}=t,{maxOutputSize:s,iouThreshold:a,scoreThreshold:l}=o,u=e.readSync(n.dataId),c=e.readSync(i.dataId),{selectedIndices:p}=jr.nonMaxSuppressionV3Impl(u,c,s,a,l);return e.makeTensorInfo([p.length],"int32",new Int32Array(p))}var iN={kernelName:su,backendName:"webgpu",kernelFunc:Cj};function kj(r){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:e,attrs:o}=r,{boxes:n,scores:i}=t,{maxOutputSize:s,iouThreshold:a,scoreThreshold:l,softNmsSigma:u}=o,c=e.readSync(n.dataId),p=e.readSync(i.dataId),d=s,m=a,f=l,g=u,{selectedIndices:x,selectedScores:y}=jr.nonMaxSuppressionV5Impl(c,p,d,m,f,g);return[e.makeTensorInfo([x.length],"int32",new Int32Array(x)),e.makeTensorInfo([y.length],"float32",new Float32Array(y))]}var sN={kernelName:au,backendName:"webgpu",kernelFunc:kj};var Cg=class{constructor(t,e){this.variableNames=["x"],this.uniforms="onValue : f32, offValue : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[t,e],this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="onehot"}getUserCode(){return`
      ${J("index")} {
        if(index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          setOutputAtIndex(index, mix(uniforms.offValue, uniforms.onValue,
                                      f32(i32(round(getX(coords.x))) == coords.y)));
        }
      }
    `}};function Ij(r){let{inputs:t,backend:e,attrs:o}=r,{indices:n}=t,{dtype:i,depth:s,onValue:a,offValue:l}=o,u=S.sizeFromShape(n.shape),c=new Cg(u,s),p=fe({inputs:{x:n},backend:e,attrs:{shape:[u]}}),d=[{type:"float32",data:[a]},{type:"float32",data:[l]}],m=e.runWebGPUProgram(c,[p],i,d);e.disposeData(p.dataId);let f=[...n.shape,s],g=fe({inputs:{x:m},backend:e,attrs:{shape:f}});return e.disposeData(m.dataId),g}var aN={kernelName:uu,backendName:"webgpu",kernelFunc:Ij};function Yp(r){let{inputs:t,backend:e}=r,{x:o}=t;if(o.dtype==="complex64"){let n=qn({inputs:{input:o},backend:e}),i=Yp({inputs:{x:n},backend:e}),s=ra({inputs:{input:o},backend:e}),a=Yp({inputs:{x:s},backend:e}),l=go({inputs:{real:i,imag:a},backend:e});return e.disposeData(n.dataId),e.disposeData(i.dataId),e.disposeData(s.dataId),e.disposeData(a.dataId),l}else return wt({attrs:{shape:o.shape,dtype:o.dtype,value:o.dtype==="string"?"":0},backend:e})}var lN={kernelName:ju,backendName:"webgpu",kernelFunc:Yp};function uN(r){let{inputs:t,backend:e}=r,{x:o}=t;if(o.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(o.dtype==="complex64"){let n=qn({inputs:{input:o},backend:e}),i=uN({inputs:{x:n},backend:e}),s=ra({inputs:{input:o},backend:e}),a=Yp({inputs:{x:s},backend:e}),l=go({inputs:{real:i,imag:a},backend:e});return e.disposeData(n.dataId),e.disposeData(i.dataId),e.disposeData(s.dataId),e.disposeData(a.dataId),l}else return wt({attrs:{shape:o.shape,dtype:o.dtype,value:1},backend:e})}var cN={kernelName:lu,backendName:"webgpu",kernelFunc:uN};function Tj(r){let{inputs:t,backend:e,attrs:o}=r,{axis:n}=o;if(t.length===1)return lg({inputs:{input:t[0]},backend:e,attrs:{dim:n}});let i=t[0].shape,s=t[0].dtype;t.forEach(c=>{S.assertShapesMatch(i,c.shape,"All tensors passed to stack must have matching shapes"),S.assert(s===c.dtype,()=>"All tensors passed to stack must have matching dtypes")});let a=[],l=t.map(c=>{let p=lg({inputs:{input:c},backend:e,attrs:{dim:n}});return a.push(p),p}),u=fv({inputs:l,backend:e,attrs:{axis:n}});return a.forEach(c=>e.disposeData(c.dataId)),u}var pN={kernelName:cu,backendName:"webgpu",kernelFunc:Tj};function bv(r,t=!1){let e=r.length,o=ht(e),n=r.map((p,d)=>`uniforms.pad${d}[0]`).join(","),i=r.map((p,d)=>`uniforms.pad${d}[0] + uniforms.xShape${e>1?`[${d}]`:""}`).join(","),s=e>1?`${o}(${n})`:`${n}`,a=e>1?`${o}(${i})`:`${i}`,l=e>1?"any(paddedCoords < start)":"paddedCoords < start",u=e>1?"any(paddedCoords >= end)":"paddedCoords >= end",c=e>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,e):"coords";return`
        let start = ${s};
        let end = ${a};
        if (${l} || ${u}) {
          setOutputAtIndex(index, ${t?0:"uniforms.constantValue"});
        } else {
          let coords = paddedCoords - start;
          setOutputAtIndex(index, getX(${c}));
        }
  `}var kg=class{constructor(t,e){this.variableNames=["x"],this.uniforms="constantValue : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.map((o,n)=>o[0]+t[n]+o[1]),this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize),e.map((o,n)=>{this.uniforms+=` pad${n} : vec2<i32>,`}),this.xShape=t,this.shaderKey="pad"}getUserCode(){return`
      ${J("index")} {
        if (index < uniforms.size) {
          let paddedCoords = getCoordsFromIndex(index);
          ${bv(this.xShape)}
        }
      }
    `}};var Ej=r=>{let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{paddings:i,constantValue:s}=o;if(i.every(u=>S.arraysEqual(u,[0,0])))return Pt({inputs:{x:n},backend:e});if(S.sizeFromShape(n.shape)===0){let u=i.map((c,p)=>c[0]+n.shape[p]+c[1]);return wt({backend:e,attrs:{shape:u,value:s,dtype:n.dtype}})}let a=[{type:"float32",data:[s]}];i.map(u=>a.push({type:"int32",data:[u[0],u[1]]}));let l=new kg(n.shape,i);return e.runWebGPUProgram(l,[n],n.dtype,a)},dN={kernelName:pu,backendName:"webgpu",kernelFunc:Ej};var Nj=Je({opType:ke.POW}),mN={kernelName:du,backendName:"webgpu",kernelFunc:Nj};function Rj(r){let{inputs:t,backend:e}=r,{x:o,alpha:n}=t,i=new Kn(ke.PRELU,o.shape,n.shape);return e.runWebGPUProgram(i,[o,n],"float32")}var fN={kernelName:mu,backendName:"webgpu",kernelFunc:Rj};function $j(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{axis:i,keepDims:s}=o;return eo(n,i,s,"prod",e)}var hN={kernelName:Ss,backendName:"webgpu",kernelFunc:$j};var Pj=r=>{let{backend:t,attrs:e}=r,{start:o,stop:n,step:i,dtype:s}=e,a=KT(o,n,i,s);return t.makeTensorInfo([a.length],s,a)},gN={kernelName:fu,backendName:"webgpu",kernelFunc:Pj};var Aj=Je({opType:ke.DIV}),xN={kernelName:El,backendName:"webgpu",kernelFunc:Aj};var Dj=Ie({opType:se.RECIPROCAL}),yN={kernelName:hu,backendName:"webgpu",kernelFunc:Dj};var Fj=Ie({opType:se.RELU}),vN={kernelName:gu,backendName:"webgpu",kernelFunc:Fj};var Oj=Ie({opType:se.RELU6}),bN={kernelName:bu,backendName:"webgpu",kernelFunc:Oj};var Ig=class{constructor(t,e,o){this.variableNames=["x"],this.uniforms="adjustHeightWidth : vec2<f32>, halfPixelCenters : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[t[0],e,o,t[3]],this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="resizeBilinear"}getUserCode(){return`
      ${J("index")} {
        if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let d = coords[3];
          let rc = coords.yz;

          let effectiveInSize = vec2<f32>(
            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveOutSize = vec2<f32>(
            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveInputOverOutputRatioRC =
              effectiveInSize / effectiveOutSize;

          // Fractional source index
          let sourceFracIndexRC =
            (vec2<f32>(rc) + vec2<f32>(uniforms.halfPixelCenters)) *
            effectiveInputOverOutputRatioRC - vec2<f32>(uniforms.halfPixelCenters);

          // Compute the four integer indices.
          let sourceFloorRC = vec2<i32>(sourceFracIndexRC);
          let sourceCeilRC = vec2<i32>(
            min(vec2<f32>(uniforms.xShape.yz) - vec2<f32>(1.0), ceil(sourceFracIndexRC)));

          let topLeft = getX(b, sourceFloorRC.x, sourceFloorRC.y, d);
          let bottomLeft = getX(b, sourceCeilRC.x, sourceFloorRC.y, d);
          let topRight = getX(b, sourceFloorRC.x, sourceCeilRC.y, d);
          let bottomRight = getX(b, sourceCeilRC.x, sourceCeilRC.y, d);

          let fracRC = sourceFracIndexRC - vec2<f32>(sourceFloorRC);

          let top = topLeft + (topRight - topLeft) * fracRC.y;
          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
          let newValue = top + (bottom - top) * fracRC.x;

          setOutputAtIndex(index, newValue);
        }
      }
    `}};function Lj(r){let{inputs:t,backend:e,attrs:o}=r,{images:n}=t,{alignCorners:i,size:s,halfPixelCenters:a}=o,[l,u]=s,c=i&&l>1?1:0,p=i&&u>1?1:0,m=[{type:"float32",data:[c,p]},{type:"float32",data:[a?.5:0]}],f=new Ig(n.shape,l,u);return e.runWebGPUProgram(f,[n],"float32",m)}var SN={kernelName:vu,backendName:"webgpu",kernelFunc:Lj};var Tg=class{constructor(t,e){this.variableNames=["dy"],this.uniforms=`effectiveXSize : vec2<i32>, effectiveYSize : vec2<i32>, heightScale : f32, widthScale : f32,
       invHeightScale : f32, invWidthScale : f32, winHeight : i32, winWidth : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize),this.alignCorners=e,this.shaderKey=`resizeBilinearBackprop_${e}`}getUserCode(){return`
      ${J("index")} {
        if (index < uniforms.size) {
          let coords = getOutputCoords();
          let b = coords[0];
          let d = coords[3];
          let r = coords[1];
          let c = coords[2];

          var accumulator = 0.0;

          // Compute bounds for where in dy we will look
          let startRLerp = floor(f32(r) * uniforms.invHeightScale);
          let startDyR = i32(startRLerp - f32(uniforms.winHeight / 2));

          let startCLerp = floor(f32(c) * uniforms.invWidthScale);
          let startDyC = i32(startCLerp - f32(uniforms.winWidth / 2));

          // Loop over dy
          for (var dyROffset = 0; dyROffset < uniforms.winHeight; dyROffset++) {
            let dyR = startDyR + dyROffset;

            // Guard against the window exceeding the bounds of dy
            if (dyR < 0 || dyR >= uniforms.dyShape[1]) {
              continue;
            }

            for (var dyCOffset = 0; dyCOffset < uniforms.winWidth; dyCOffset++) {
              let dyC = startDyC + dyCOffset;

              // Guard against the window exceeding the bounds of dy
              if (dyC < 0 || dyC >= uniforms.dyShape[2]) {
                continue;
              }

              let dxR = f32(dyR) * uniforms.heightScale;
              let topDxRIndex = i32(floor(dxR));
              let bottomDxRIndex = i32(min(ceil(dxR), f32(uniforms.outShape[1] - 1)));
              let dxRLerp = dxR - f32(topDxRIndex);
              let inverseDxRLerp = 1.0 - dxRLerp;

              let dxC = f32(dyC) * uniforms.widthScale;
              let leftDxCIndex = i32(floor(dxC));
              let rightDxCIndex = i32(min(ceil(dxC), f32(uniforms.outShape[2] - 1)));
              let dxCLerp = dxC - f32(leftDxCIndex);
              let inverseDxCLerp = 1.0 - dxCLerp;

              if (r == topDxRIndex && c == leftDxCIndex) {
                // topLeft
                accumulator +=
                  getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
              }

              if (r == topDxRIndex && c == rightDxCIndex) {
                // topRight
                accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
              }

              if (r == bottomDxRIndex && c == leftDxCIndex) {
                // bottomLeft
                accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
              }

              if (r == bottomDxRIndex && c == rightDxCIndex) {
                // bottomRight
                accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
              }
            }
          }
          // End loop over dy

          setOutputAtIndex(index, accumulator);
        }
      }
    `}};function Mj(r){let{inputs:t,backend:e,attrs:o}=r,{images:n,dy:i}=t,{alignCorners:s}=o,[,a,l]=n.shape,[,u,c]=i.shape,p=[s&&u>1?a-1:a,s&&c>1?l-1:l],d=[s&&u>1?u-1:u,s&&c>1?c-1:c],m=p[0]/d[0],f=p[1]/d[1],g=1/m,x=1/f,y=Math.ceil(g)*2+2,b=Math.ceil(x)*2+2,T=new Tg(n.shape,s),R=[{type:"int32",data:p},{type:"int32",data:d},{type:"float32",data:[m]},{type:"float32",data:[f]},{type:"float32",data:[g]},{type:"float32",data:[x]},{type:"int32",data:[y]},{type:"int32",data:[b]}];return e.runWebGPUProgram(T,[i],i.dtype,R)}var wN={kernelName:ym,backendName:"webgpu",kernelFunc:Mj};var Eg=class{constructor(t,e,o,n){this.variableNames=["x"],this.uniforms="adjustHeightWidth : vec2<f32>, roundBase : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[t[0],e,o,t[3]],this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize),this.halfPixelCenters=n,this.shaderKey=`resizeNearest_${n}`}getUserCode(){let t;return this.halfPixelCenters?t="max((vec2<f32>(rc) + vec2<f32>(0.5)) * effectiveInputOverOutputRatioRC, vec2<f32>(0.0))":t="vec2<f32>(rc) * effectiveInputOverOutputRatioRC",`
      ${J("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let d = coords[3];
          let rc = coords.yz;

          let effectiveInSize = vec2<f32>(
            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveOutSize = vec2<f32>(
            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveInputOverOutputRatioRC =
              effectiveInSize / effectiveOutSize;

          // Fractional source index
          let sourceFracIndexRC = ${t};

          // Compute the coordinators of nearest neighbor point.
          let inputShapeRC = vec2<f32>(f32(uniforms.xShape.y), f32(uniforms.xShape.z));
          let sourceNearestRC = vec2<i32>(
            min(inputShapeRC - 1.0, floor(sourceFracIndexRC + uniforms.roundBase)));
          let newValue = getX(b, sourceNearestRC.x, sourceNearestRC.y, d);

          setOutputAtIndex(index, newValue);
        }
      }
    `}};function Bj(r){let{inputs:t,backend:e,attrs:o}=r,{images:n}=t,{alignCorners:i,halfPixelCenters:s,size:a}=o,[l,u]=a,c=i&&l>1?1:0,p=i&&u>1?1:0,m=[{type:"float32",data:[c,p]},{type:"float32",data:[i?.5:0]}],f=new Eg(n.shape,l,u,s);return e.runWebGPUProgram(f,[n],n.dtype,m)}var _N={kernelName:yu,backendName:"webgpu",kernelFunc:Bj};var Ng=class{constructor(t,e){this.variableNames=["dy"],this.uniforms=`effectiveXSize : vec2<i32>, effectiveYSize : vec2<i32>, invHeightScale : f32, invWidthScale : f32,
       winHeight : i32, winWidth : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize),this.alignCorners=e,this.shaderKey=`resizeNearestNeigborBackprop_${e}`}getUserCode(){return`
      ${J("index")} {
        if (index < uniforms.size) {
          let coords = getOutputCoords();
          let b = coords[0];
          let d = coords[3];
          let r = coords[1];
          let c = coords[2];

          var accumulator = 0.0;

          // Compute bounds for where in dy we will look
          let startRLerp = floor(f32(r) * uniforms.invHeightScale);
          let startDyR = i32(floor(startRLerp - f32(uniforms.winHeight / 2)));

          let startCLerp = floor(f32(c) * uniforms.invWidthScale);
          let startDyC = i32(floor(startCLerp - f32(uniforms.winWidth / 2)));

          // Loop over dy
          for (var dyROffset = 0; dyROffset < uniforms.winHeight; dyROffset++) {
            let dyR = startDyR + dyROffset;

            // Guard against the window exceeding the bounds of dy
            if (dyR < 0 || dyR >= uniforms.dyShape[1]) {
              continue;
            }

            for (var dyCOffset = 0; dyCOffset < uniforms.winWidth; dyCOffset++) {
              let dyC = startDyC + dyCOffset;

              // Guard against the window exceeding the bounds of dy
              if (dyC < 0 || dyC >= uniforms.dyShape[2]) {
                continue;
              }

              let sourceFracRow = f32(uniforms.effectiveXSize[0]) *
                  (f32(dyR) / f32(uniforms.effectiveYSize[0]));

              let sourceFracCol = f32(uniforms.effectiveXSize[1]) *
                  (f32(dyC) / f32(uniforms.effectiveYSize[1]));

              let sourceNearestRow =
                  i32(min(f32(uniforms.outShape[1] - 1),
                  ${this.alignCorners?"floor(sourceFracRow + 0.5)":"floor(sourceFracRow)"}));

              let sourceNearestCol =
                  i32(min(f32(uniforms.outShape[2] - 1),
                  ${this.alignCorners?"floor(sourceFracCol + 0.5)":"floor(sourceFracCol)"}));

              if (r == sourceNearestRow && c == sourceNearestCol) {
                accumulator += getDy(b, dyR, dyC, d);
              }
            }
          }
          // End loop over dy

          setOutputAtIndex(index, accumulator);
        }
      }
    `}};function Vj(r){let{inputs:t,backend:e,attrs:o}=r,{images:n,dy:i}=t,{alignCorners:s}=o,[,a,l]=n.shape,[,u,c]=i.shape,p=[s&&u>1?a-1:a,s&&c>1?l-1:l],d=[s&&u>1?u-1:u,s&&c>1?c-1:c],m=p[0]/d[0],f=p[1]/d[1],g=1/m,x=1/f,y=Math.ceil(g)*2+2,b=Math.ceil(x)*2+2,T=new Ng(n.shape,s),R=[{type:"int32",data:p},{type:"int32",data:d},{type:"float32",data:[g]},{type:"float32",data:[x]},{type:"int32",data:[y]},{type:"int32",data:[b]}];return e.runWebGPUProgram(T,[i],i.dtype,R)}var CN={kernelName:xm,backendName:"webgpu",kernelFunc:Vj};var Rg=class{constructor(t){this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms=" axis : vec4<i32>,",this.shaderKey="reverse"}getUserCode(){return`
      
      // Using uniform variables as judging conditions, so the function has
      // coherent execution within all threads.
      fn getReverseCoords(coords : vec4<i32>) -> vec4<i32> {
        var reverseCoords = coords;
        if (uniforms.axis[0] == 1) {
          reverseCoords[0] = uniforms.xShape[0] - coords[0] - 1;
        }
        if (uniforms.axis[1] == 1) {
          reverseCoords[1] = uniforms.xShape[1] - coords[1] - 1;
        }
        if (uniforms.axis[2] == 1) {
          reverseCoords[2] = uniforms.xShape[2] - coords[2] - 1;
        }
        if (uniforms.axis[3] == 1) {
          reverseCoords[3] = uniforms.xShape[3] - coords[3] - 1;
        }

        return reverseCoords;
      }
    
      ${J("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let reverseCoords = getReverseCoords(coords);
          setOutputAtIndex(index, getX(reverseCoords[0],
              reverseCoords[1], reverseCoords[2], reverseCoords[3]));
        }
      }
    `}};function Wj(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{dims:i}=o,s=n.shape.length;if(s===0)return Pt({inputs:{x:n},backend:e});let a=n.shape,l=[1,1,1,1];a.forEach((x,y)=>{let b=y+4-s;l[b]=x});let u=S.parseAxisParam(i,n.shape),c=[0,0,0,0];u.forEach(x=>{let y=x+4-s;c[y]=1});let p=[{type:"int32",data:c}],d=fe({inputs:{x:n},backend:e,attrs:{shape:l}}),m=new Rg(l),f=e.runWebGPUProgram(m,[d],d.dtype,p);e.disposeData(d.dataId);let g=fe({inputs:{x:f},backend:e,attrs:{shape:a}});return e.disposeData(f.dataId),g}var kN={kernelName:Su,backendName:"webgpu",kernelFunc:Wj};var $g=class{constructor(t,e){this.outputShape=[],this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms=`centerX : f32, centerY : f32, sinRadians : f32,
          cosRadians : f32,`,this.shaderKey="rotate",this.outputShape=t,typeof e=="number"?(this.uniforms+=" fillValue : f32,",this.fillSnippet="var outputValue = uniforms.fillValue;",this.shaderKey+="_float"):(this.uniforms+=" fillValue : vec3<f32>,",this.fillSnippet="var outputValue = uniforms.fillValue[coords[3]];",this.shaderKey+="_vec3")}getUserCode(){return`
        ${J("index")} {
          if (index < uniforms.size) {
            let coords = getCoordsFromIndex(index);
            let coordXFloat = (f32(coords[2]) - uniforms.centerX) *
                uniforms.cosRadians - (f32(coords[1]) - uniforms.centerY) *
                uniforms.sinRadians;
            let coordYFloat = (f32(coords[2]) - uniforms.centerX) *
                uniforms.sinRadians + (f32(coords[1]) - uniforms.centerY) *
                uniforms.cosRadians;
            let coordX = i32(round(coordXFloat + uniforms.centerX));
            let coordY = i32(round(coordYFloat + uniforms.centerY));
            ${this.fillSnippet}
            if(coordX >= 0 && coordX < uniforms.xShape[2] && coordY >= 0 &&
                coordY < uniforms.xShape[1]) {
              outputValue = getX(coords[0], coordY, coordX, coords[3]);
            }
            setOutputAtIndex(index, outputValue);
          }
        }
      `}};var IN={kernelName:Yu,backendName:"webgpu",kernelFunc:({inputs:r,attrs:t,backend:e})=>{let{image:o}=r,{radians:n,fillValue:i,center:s}=t,a=e,l=new $g(o.shape,i),[u,c]=$.getImageCenter(s,o.shape[1],o.shape[2]),p=[{type:"float32",data:[u]},{type:"float32",data:[c]},{type:"float32",data:[Math.sin(n)]},{type:"float32",data:[Math.cos(n)]}];return typeof i=="number"?p.push({type:"float32",data:[Number.parseFloat(i.toFixed(2))]}):p.push({type:"float32",data:i}),a.runWebGPUProgram(l,[o],o.dtype,p)}};var zj=Ie({opType:se.ROUND}),TN={kernelName:wu,backendName:"webgpu",kernelFunc:zj};var Uj=Ie({opType:se.RSQRT,cpuKernelImpl:qT}),EN={kernelName:Ti,backendName:"webgpu",kernelFunc:Uj};var gn=class{constructor(t,e,o,n,i,s,a,l=!0){this.variableNames=["updates","indices"],this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=s,this.type=a,this.sumDupeIndices=l,this.dispatchLayout=ie(t),this.dispatch=ee(this.dispatchLayout,t,this.workgroupSize),this.sliceDimGreaterThanOne=e>1,this.shaderKey=`scatter_${o}_${n}_${this.sliceDimGreaterThanOne}_${a}_${l}_${i.length}`;let u=ht(i.length);this.uniforms=`sliceDim : i32, strides: ${u}, updatesSize: i32,`,this.updatesRank=n,this.indicesRank=o}getUserCode(){let t="";this.indicesRank===1?t="coords[0]":this.indicesRank===2&&(t="coords[0], j");let e=`getIndices(${t})`,o=this.sliceDimGreaterThanOne?"uniforms.strides[j]":"uniforms.strides",n="",i="";this.dispatchLayout.x.length===1?(n="flattenedIndex",i=`
      fn getUpdatesCoordsFromFlatIndex(index : i32) -> i32 {
        return index;
      }
      `):this.dispatchLayout.x.length===2&&(n="vec2<i32>(flattenedIndex, coords[1])",i=`
      fn getUpdatesCoordsFromFlatIndex(index : i32) -> vec2<i32> {
        // N.B. |updates| could be a scalar tensor, conceptually representing a
        // 2D tensor with all values equal to that. By design, its size must be
        // the same as |outShape[1]| in one dimension, and |indicesShape[0]|
        // gives the other.
        let sliceSize = uniforms.outShape[1];
        let d0 = index / sliceSize;
        let d1 = index - d0 * sliceSize;
        return vec2<i32>(d0, d1);
      }
      `);let a=`getUpdates(${Array.from({length:this.updatesRank},(u,c)=>`coords[${c}]`).join(", ")})`;return`
    ${i}
      ${J("index")} {
        if (index < uniforms.updatesSize) {
          let coords = getUpdatesCoordsFromFlatIndex(index);
          var flattenedIndex = 0;
          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
            let indexInside = i32(round(${e}));
            flattenedIndex = flattenedIndex + indexInside * ${o};
          }
          let updateValue =
              ${Qi(this.type)}(${a});
          let flatIndex = getOutputIndexFromCoords(${n});

          ${this.sumDupeIndices?Qr("&result[flatIndex]","updateValue",this.type):"atomicStore(&result[flatIndex], bitcast<i32>(updateValue));"}
        }
      }`}};function Gj(r){let{inputs:t,backend:e,attrs:o}=r,{indices:n,updates:i}=t,{shape:s}=o,{sliceRank:a,numUpdates:l,sliceSize:u,strides:c,outputSize:p}=$.calculateShapes(i,n,s),d=[p/u,u];if(p===0)return e.makeTensorInfo(s,n.dtype);let m=fe({inputs:{x:n},backend:e,attrs:{shape:[l,a]}}),f=fe({inputs:{x:i},backend:e,attrs:{shape:[l,u]}}),g=f.dtype,x=wt({backend:e,attrs:{shape:d,value:0,dtype:g}}),y=S.sizeFromShape(f.shape),b=[{type:"int32",data:[a]},{type:"int32",data:c},{type:"int32",data:[y]}],T=new gn(f.shape,a,m.shape.length,f.shape.length,c,d,g),R=e.runWebGPUProgram(T,[f,m],g,b,x),M=fe({inputs:{x:R},backend:e,attrs:{shape:s}});return e.disposeData(m.dataId),e.disposeData(f.dataId),e.disposeData(R.dataId),M}var NN={kernelName:_u,backendName:"webgpu",kernelFunc:Gj};var Pg=class{constructor(t,e){this.outputShape=[],this.variableNames=["sortedSequence","values"],this.uniforms="numInputs : i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize),this.side=e,this.shaderKey=`search_sorted_${e}`}getUserCode(){return`
      fn findBound(batch: i32, value: f32) -> i32 {
        var left = i32(0);
        var right = uniforms.numInputs;
        while (left < right) {
          var mid = (left + right) / 2;
          if (getSortedSequence(batch, mid) ${this.side==="left"?"<":"<="} value) {
            left = mid + 1;
          } else {
            right = mid;
          }
        }
        return right;
      }

      ${J("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let value = getValuesByOutputIndex(index);
          setOutputAtIndexI32(index, findBound(coords[0], value));
        }
      }
    `}};function Hj(r){let{inputs:t,backend:e,attrs:o}=r,{sortedSequence:n,values:i}=t,{side:s}=o,a=new Pg([i.shape[0],i.shape[1]],s),l=[{type:"int32",data:[n.shape[1]]}];return e.runWebGPUProgram(a,[n,i],"int32",l)}var RN={kernelName:ku,backendName:"webgpu",kernelFunc:Hj};var Ag=class{constructor(t,e,o){this.variableNames=["c","a","b"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize),this.cRank=t,this.rank=o,this.shaderKey="select"}getUserCode(){let t,e;if(this.rank>4)throw Error(`Where for rank ${this.rank} is not yet supported`);if(this.rank===1)e="resRC",t="resRC";else{let n=["resRC.x","resRC.y","resRC.z","resRC.w"],i=[],s=[];for(let a=0;a<this.outputShape.length;a++)s.push(`${n[a]}`),a<this.cRank&&i.push(`${n[a]}`);t=i.join(),e=s.join()}return`
      ${J("index")} {
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          let cVal = getC(${t});
          if (cVal >= 1.0) {
            setOutputAtIndex(index, getA(${e}));
          } else {
            setOutputAtIndex(index, getB(${e}));
          }
        }
      }
    `}};function Kj(r){let{inputs:t,backend:e}=r,{condition:o,t:n,e:i}=t,s=new Ag(o.shape.length,n.shape,n.shape.length);return e.runWebGPUProgram(s,[o,n,i],Tt(n.dtype,i.dtype))}var $N={kernelName:Iu,backendName:"webgpu",kernelFunc:Kj};var qj=Ie({opType:se.SELU}),PN={kernelName:Tu,backendName:"webgpu",kernelFunc:qj};var jj=Ie({opType:se.SIGMOID}),AN={kernelName:Ei,backendName:"webgpu",kernelFunc:jj};var Xj=Ie({opType:se.SIGN}),DN={kernelName:Ru,backendName:"webgpu",kernelFunc:Xj};var Yj=Ie({opType:se.SIN}),FN={kernelName:Eu,backendName:"webgpu",kernelFunc:Yj};var Qj=Ie({opType:se.SINH}),ON={kernelName:Nu,backendName:"webgpu",kernelFunc:Qj};var Zj=Ie({opType:se.SOFTPLUS}),LN={kernelName:$u,backendName:"webgpu",kernelFunc:Zj};var Dg=class{constructor(t,e,o,n,i,s){this.variableNames=["x"],this.outputShape=[],this.uniforms="",this.workgroupSize=[64,1,1],this.size=!0;let a=new Array(n.length);for(let l=0;l<a.length;l++)a[l]=n[i[l]];this.outputShape=a,this.newDim=i,this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize),this.xShape=t,this.paddedXShape=e,this.uniforms+=`reshapedPaddedXShape : ${ht(n.length)}, paddedXShapeStrides : ${ht(s)}, `,o.map((l,u)=>{this.uniforms+=` pad${u} : vec2<i32>,`}),this.shaderKey=`spaceToBatchND_${i}`}getUserCode(){let t=ht(this.outputShape.length),e=lv(this.newDim);return`
      ${Lp(this.paddedXShape,"PaddedX")}
      ${J("index")} {
        if(index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let switchedIndex = getIndexFromCoords${this.outputShape.length}D(${t}(${e}), uniforms.reshapedPaddedXShape);
          let paddedCoords = getPaddedXCoordsFromIndex(switchedIndex);
          ${bv(this.xShape,!0)}
        }
      }
    `}};var Jj=r=>{let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{blockShape:i,paddings:s}=o;S.assert(n.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGPU backend not implemented yet");let a=i.reduce((b,T)=>b*T),l=[[0,0]];l.push(...s);for(let b=1+i.length;b<n.shape.length;++b)l.push([0,0]);let u=l.map((b,T)=>b[0]+n.shape[T]+b[1]),c=$.getReshaped(u,i,a,!1),p=$.getPermuted(c.length,i.length,!1),d=$.getReshapedPermuted(u,i,a,!1),m=S.computeStrides(u),f=new Dg(n.shape,u,l,c,p,m.length),g=[{type:"int32",data:c},{type:"int32",data:m}];l.map(b=>g.push({type:"int32",data:[b[0],b[1]]}));let x=e.runWebGPUProgram(f,[n],n.dtype,g),y=fe({inputs:{x},backend:e,attrs:{shape:d}});return e.disposeData(x.dataId),y},MN={kernelName:Au,backendName:"webgpu",kernelFunc:Jj};var Fg=class{constructor(t,e,o){this.variableNames=["input","indices","segmentIds"],this.outputShape=[],this.uniforms="segmentSize : i32, sparseSize : i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=t,this.type=o,this.dispatchLayout=ie([e]),this.dispatch=ee(this.dispatchLayout,[e],this.workgroupSize),this.shaderKey="sparseSegmentSum"}getUserCode(){return`
    ${J("index")} {
      if (index < uniforms.sparseSize) {
        let indexInSegmentIds = index / uniforms.segmentSize;
        let indexInSegment = index % uniforms.segmentSize;
        let indexInInput = indices[indexInSegmentIds];
        let segmentId = segmentIds[indexInSegmentIds];

        let value = input[indexInInput * uniforms.segmentSize + indexInSegment];
        let outIndex = segmentId * uniforms.segmentSize + indexInSegment;
        ${Qr("&result[outIndex]","value",this.type)}
      }
    }
  `}},Og=class{constructor(t,e){this.variableNames=["segmentIds"],this.outputShape=[],this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=[t],this.dispatchLayout=ie(e),this.dispatch=ee(this.dispatchLayout,e,this.workgroupSize),this.shaderKey="sparseSegmentIdCountProgram"}getUserCode(){return`
    ${J("index")} {
      if (index < uniforms.segmentIdsShape) {
        let segmentId = segmentIds[index];
        ${Qr("&result[segmentId]","1","int32")}
      }
    }
  `}},Lg=class{constructor(t,e){this.variableNames=["segmentSum","sameSegmentIdCount"],this.outputShape=[],this.uniforms="segmentSize : i32",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.type=e,this.dispatchLayout=ie(t),this.dispatch=ee(this.dispatchLayout,t,this.workgroupSize),this.shaderKey="sparseSegmentMean"}getUserCode(){return`
    ${J("index")} {
      if (index < uniforms.size) {
        let segmentId = index / uniforms.segmentSize;
        let count = sameSegmentIdCount[segmentId];
        if (count != 0) {
          ${this.type==="float32"?"setOutputAtIndex(index, segmentSum[index] / f32(count));":"setOutputAtIndexI32(index, segmentSum[index] / count);"}
        }
      }
    }
  `}};function Mg(r,t,e,o=!1,n){let s=S.sizeFromShape(r.shape)/r.shape[0],a=r.dtype,l=S.sizeFromShape(t.shape),u=n.readSync(e.dataId),p=l>0?u[l-1]+1:0,d,m=r.shape.slice();m[0]=p;let f=l*s,g=wt({backend:n,attrs:{shape:m,value:0,dtype:a}});d=new Fg(m,f,a);let x=[{type:"int32",data:[s]},{type:"int32",data:[f]}],y=n.runWebGPUProgram(d,[r,t,e],a,x,g);if(o)return y;let b=wt({backend:n,attrs:{shape:[p],value:0,dtype:"int32"}});d=new Og(p,e.shape);let T=n.runWebGPUProgram(d,[e],"int32",null,b),R=wt({backend:n,attrs:{shape:m,value:0,dtype:a}});d=new Lg(m,a),x=[{type:"int32",data:[s]}];let M=n.runWebGPUProgram(d,[y,T],a,x,R);return n.disposeData(y.dataId),n.disposeData(T.dataId),M}function eX(r){let{inputs:t,backend:e}=r,{data:o,indices:n,segmentIds:i}=t;return Mg(o,n,i,!1,e)}var BN={kernelName:Ou,backendName:"webgpu",kernelFunc:eX};function tX(r){let{inputs:t,backend:e}=r,{data:o,indices:n,segmentIds:i}=t;return Mg(o,n,i,!0,e)}var VN={kernelName:Lu,backendName:"webgpu",kernelFunc:tX};var Bg=class{constructor(t,e){this.variableNames=["A"],this.workgroupSize=[64,1,1],this.size=!0;let o=new Array(t.length);for(let n=0;n<o.length;n++)o[n]=t[n]*e[n];this.outputShape=o,this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize),this.rank=this.outputShape.length,this.shaderKey="tile"}getUserCode(){let t=rX(this.rank,"uniforms.");return`
      ${J("index")} {
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          setOutputAtIndex(index, getA(${t}));
        }
      }
    `}};function rX(r,t=""){if(r>=5)throw Error(`Tile for rank ${r} is not yet supported`);if(r===1)return`(resRC % ${t}aShape)`;let e=["resRC.x","resRC.y","resRC.z","resRC.w"],o=[];for(let n=0;n<r;n++)o.push(`(${e[n]} % ${t}aShape[${n}])`);return o.join()}function Qp(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{reps:i}=o;if(e.shouldExecuteOnCPU([n])||n.dtype==="string"||n.shape.length>=5){let l=e.readSync(n.dataId),u=n.dtype==="string"?l.map(d=>S.decodeString(d)):l,c=Me(n.shape,n.dtype,u),p=eE(c,i);return e.makeTensorInfo(p.shape,p.dtype,p.values)}let s=new Bg(n.shape,i);return e.runWebGPUProgram(s,[n],n.dtype)}var WN={kernelName:Pi,backendName:"webgpu",kernelFunc:Qp};function oX(r){let{inputs:t,backend:e,attrs:o}=r,{sparseIndices:n,sparseValues:i,defaultValue:s}=t,{outputShape:a}=o,{sliceRank:l,numUpdates:u,sliceSize:c,strides:p,outputSize:d}=$.calculateShapes(i,n,a),m=!1;if(i.dtype==="string"){let H=e.bufferSync(n),K=e.bufferSync(i),X=S.decodeString(e.readSync(s.dataId)[0]),te=jT(H,K,a,d,c,u,l,p,X,m);return e.makeTensorInfo(a,te.dtype,te.values)}let f=[d/c,c],g=fe({inputs:{x:n},backend:e,attrs:{shape:[u,l]}}),x=i.shape.length?fe({inputs:{x:i},backend:e,attrs:{shape:[u,c]}}):Pt({inputs:{x:i},backend:e}),y=x.dtype,b=e.makeTensorInfo([],y,S.makeZerosTypedArray(1,y)),T=fe({inputs:{x:s},backend:e,attrs:{shape:Array(f.length).fill(1)}}),R=Qp({inputs:{x:T},backend:e,attrs:{reps:f}}),M=S.sizeFromShape([u,c]),V=[{type:"int32",data:[l]},{type:"int32",data:p},{type:"int32",data:[M]}];switch(u){case 0:break;case 1:{let H=new gn([u,c],l,g.shape.length,x.shape.length,p,f,y,m);e.runWebGPUProgram(H,[x,g],y,V,R)}break;default:{let H=new gn([u,c],l,g.shape.length,b.shape.length,p,f,y,m);e.runWebGPUProgram(H,[b,g],y,V,R)}{let H=new gn([u,c],l,g.shape.length,x.shape.length,p,f,y);e.runWebGPUProgram(H,[x,g],y,V,R)}}let z=fe({inputs:{x:R},backend:e,attrs:{shape:a}});return e.disposeData(g.dataId),e.disposeData(x.dataId),e.disposeData(T.dataId),e.disposeData(b.dataId),e.disposeData(R.dataId),z}var zN={kernelName:Mu,backendName:"webgpu",kernelFunc:oX};function nX(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{numOrSizeSplits:i,axis:s}=o,a=S.parseAxisParam(s,n.shape)[0],l=$.prepareSplitSize(n,i,a),u=n.shape.length,c=new Array(u).fill(0),p=n.shape.slice();return l.map(d=>{let m=[...p];m[a]=d;let f=Ko({inputs:{x:n},backend:e,attrs:{begin:c,size:m}});return c[a]+=d,f})}var UN={kernelName:Du,backendName:"webgpu",kernelFunc:nX};var iX=Ie({opType:se.SQRT}),GN={kernelName:Ni,backendName:"webgpu",kernelFunc:iX};var HN={kernelName:Sm,backendName:"webgpu",kernelFunc:({inputs:r,backend:t})=>{let{x:e}=r,o=t,n=new Jr(e.shape,se.SQUARE);return o.runWebGPUProgram(n,[e],e.dtype)}};var sX=Je({opType:ke.SQUARED_DIFFERENCE}),KN={kernelName:Ri,backendName:"webgpu",kernelFunc:sX};function aX({inputs:r,attrs:t,backend:e}){let{x:o}=r,n=new Jr(o.shape,se.STEP,"stepAlpha : f32,"),i=[{type:"float32",data:[t.alpha]}];return e.runWebGPUProgram(n,[o],o.dtype,i)}var qN={kernelName:Xu,backendName:"webgpu",kernelFunc:aX};var Vg=class{constructor(t){this.variableNames=["x"],this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]);let e=ht(this.outputShape.length);this.uniforms=`begin : ${e},  strides : ${e}, `,this.shaderKey="stridedSlice"}getUserCode(){let t=this.outputShape.length,e="";if(t===1)e="coords * uniforms.strides + uniforms.begin";else{let n=0;e=this.outputShape.map((i,s)=>(n++,this.outputShape.length===1?`coords * uniforms.strides[${s}] + uniforms.begin[${s}]`:`coords[${n-1}] * uniforms.strides[${s}] + uniforms.begin[${s}]`)).join(",")}return`
       ${J("index")} {
         if (index < uniforms.size) {
           let coords = getCoordsFromIndex(index);
           setOutputAtIndex(index, getX(${e}));
         }
       }
     `}};function lX(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{begin:i,end:s,strides:a,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:p,shrinkAxisMask:d}=o,{finalShapeSparse:m,finalShape:f,isIdentity:g,sliceDim0:x,isSimpleSlice:y,begin:b,end:T,strides:R}=Gt.sliceInfo(n.shape,i,s,a,l,u,c,p,d),M;if(g)M=fe({inputs:{x:n},backend:e,attrs:{shape:f}});else if(x||y){S.assert(n.shape.length>=1,()=>`Input must have rank at least 1, got: ${n.shape.length}`);let V=Gt.computeOutShape(b,T,R),z=Ko({inputs:{x:n},backend:e,attrs:{begin:b,size:V}});M=fe({inputs:{x:z},backend:e,attrs:{shape:f}}),e.disposeData(z.dataId)}else if(e.shouldExecuteOnCPU([n])){let z=e.readSync(n.dataId),H=Me(n.shape,n.dtype,z),K=QT(m,H,R,b);M=e.makeTensorInfo(f,n.dtype,K.values)}else{let z=new Vg(m),H=[{type:"int32",data:b},{type:"int32",data:R}],K=e.runWebGPUProgram(z,[n],n.dtype,H);M=fe({inputs:{x:K},backend:e,attrs:{shape:f}}),e.disposeData(K.dataId)}return M}var jN={kernelName:Vu,backendName:"webgpu",kernelFunc:lX};function uX(r){let{inputs:t,backend:e,attrs:o}=r,{separator:n,nGramWidths:i,leftPad:s,rightPad:a,padWidth:l,preserveShortSequences:u}=o,{data:c,dataSplits:p}=t,d=e.readSync(c.dataId),m=e.readSync(p.dataId),[f,g]=ZT(d,m,n,i,s,a,l,u);return[e.makeTensorInfo([f.length],"string",f),e.makeTensorInfo(p.shape,"int32",g)]}var XN={kernelName:Wu,backendName:"webgpu",kernelFunc:uX};var cX=Je({opType:ke.SUB,cpuKernelImpl:JT,supportsComplex:!0}),YN={kernelName:$i,backendName:"webgpu",kernelFunc:cX};var pX=Ie({opType:se.TAN}),QN={kernelName:zu,backendName:"webgpu",kernelFunc:pX};var dX=Ie({opType:se.TANH}),ZN={kernelName:Uu,backendName:"webgpu",kernelFunc:dX};function mX(r){let{inputs:t,backend:e,attrs:o}=r,{tensor:n,indices:i,updates:s}=t,{}=o,{sliceRank:a,numUpdates:l,sliceSize:u,strides:c,outputSize:p}=$.calculateShapes(s,i,n.shape),d=[p/u,u];if(p===0)return e.makeTensorInfo(n.shape,i.dtype);let m=[],f=fe({inputs:{x:i},backend:e,attrs:{shape:[l,a]}});m.push(f);let g=fe({inputs:{x:s},backend:e,attrs:{shape:[l,u]}});m.push(g);let x=fe({inputs:{x:n},backend:e,attrs:{shape:d}});m.push(x);let y=Qp({inputs:{x},backend:e,attrs:{reps:Array(d.length).fill(1)}}),b=new gn([l,u],a,f.shape.length,g.shape.length,c,d,n.dtype,!1),T=S.sizeFromShape([l,u]),R=[{type:"int32",data:[a]},{type:"int32",data:c},{type:"int32",data:[T]}],M=e.runWebGPUProgram(b,[g,f],x.dtype,R,y);m.push(M);let V=fe({inputs:{x:M},backend:e,attrs:{shape:n.shape}});return m.forEach(z=>e.disposeData(z.dataId)),V}var JN={kernelName:Cu,backendName:"webgpu",kernelFunc:mX};var Wg=class{constructor(t){this.variableNames=["x","indices"],this.workgroupSize=[256,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms=`inputSize : i32, firstPass : i32, negativeInf : f32,
        dir : i32, inc : i32,`,this.shaderKey="swap"}getUserCode(){return`
        ${J("index")} {
          if (index < uniforms.size) {
            let outC = getCoordsFromIndex(index);
            let batch = outC[0];
            let elemIdx = outC[1];
            // We compare elements pair-wise within a group of size 2 * inc.
            // The comparing rule for each group alternates between ascending
            // and descending. Within each group, we compare each pair at
            // positions i and i+inc. To decide whether an element at position i
            // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
            // inc, it is in the first half of the group, we denote it as x0,
            // otherwise we denote it as x1.
            // For example, as shown in the Bitonic top K paper referenced
            // above, Figure5(a) shows that element[1] is in the second half of
            // the group when group size is 2, but it is in the first half of
            // the group when group size is 4.
            let isFirstInPair = elemIdx % (2 * uniforms.inc) < uniforms.inc;
            var i = 0;
            if (isFirstInPair) {
              i = elemIdx;
            } else {
              i = elemIdx - uniforms.inc;
            }

            var i0 = 0;
            if (uniforms.firstPass == 1) {
              i0 = i;
            } else {
              i0 = i32(getIndices(batch, i));
            }

            var i1 = 0;
            if (uniforms.firstPass == 1) {
              i1 = i + uniforms.inc;
            } else {
              i1 = i32(getIndices(batch, i + uniforms.inc));
            }

            var x0 = f32(0.0);
            var x1 = f32(0.0);
            if (i0 < uniforms.inputSize) {
              x0 = getX(batch, i0);
            } else {
              x0 = uniforms.negativeInf;
            }
            if (i1 < uniforms.inputSize) {
              x1 = getX(batch, i1);
            } else {
              x1 = uniforms.negativeInf;
            }

            let reverse = elemIdx % (2 * uniforms.dir) >= uniforms.dir;
            let isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
            if (reverse == isGreater) {
              // Elements in opposite order of direction
              let iTemp = i0;
              i0 = i1;
              i1 = iTemp;
            }
            if (isFirstInPair) {
              setOutputAtIndex(index, f32(i0));
            } else {
              setOutputAtIndex(index, f32(i1));
            }
          }
        }
      `}},zg=class{constructor(t){this.variableNames=["x","indices"],this.workgroupSize=[256,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms="inputSize : i32, firstPass : i32, k : i32,",this.shaderKey="merge"}getUserCode(){return`
        ${J("index")} {
          if (index < uniforms.size) {
            let outC = getCoordsFromIndex(index);
            let batch = outC[0];
            let elemIdx = outC[1];
            // The output size is half of the previous size.
            // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _
            // (k=4), we only need to output the indices at positions |, the
            // indices at positions _ can be thrown away, see Figure5(b) After
            // Phase 2 (Merge phase) in the Bitonic Top K paper referenced
            // above.
            // For example, the paper shows we only need to output the orange
            // bars. The output sequence should look like this | | | | | | | |.
            // Because the sequence is halved, to map the output index back to
            // the previous sequence to find the corresponding value, we need
            // to double the index. When we double the index, we basically
            // interpolate a position, so 2i looks like
            // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k
            // position of each 2k positions by - elemIdx % k. E.g. for output
            // at index 4,5,6,7, we want to get the corresponding element at
            // original index 8,9,10,11, for output at index 8,9,10,11,
            // we want to get the corresponding element at original index
            // 16,17,18,19, so on and so forth.

            var i = 0;
            if (elemIdx < uniforms.k) {
              i = elemIdx;
            } else {
              i = elemIdx * 2 - elemIdx % uniforms.k;
            }
            var i0 = 0;
            if (uniforms.firstPass == 1) {
              i0 = i;
            } else {
              i0 = i32(getIndices(batch, i));
            }
            var i1 = 0;
            if (uniforms.firstPass == 1) {
              i1 = i + uniforms.k;
            } else {
              i1 = i32(getIndices(batch, i + uniforms.k));
            }

            let x0 = getX(batch, i0);
            var x1 = f32(0.0);
            if (i1 < uniforms.inputSize) {
              x1 = getX(batch, i1);
            } else {
              x1 = x0;
            }

            if (x0 >= x1) {
              setOutputAtIndex(index, f32(i0));
            } else {
              setOutputAtIndex(index, f32(i1));
            }
          }
        }
      `}};function Nc(r,t){t!==null&&r.disposeData(t.dataId)}function eR(r){let t=1;for(;t<r;)t*=2;return t}function fX(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{k:i,sorted:s}=o,a=n.shape,l=a[a.length-1];if(e.shouldExecuteOnCPU([n])){let M=e.readSync(n.dataId),[V,z]=tE(M,a,n.dtype,i,s);return[e.makeTensorInfo(V.shape,V.dtype,V.values),e.makeTensorInfo(z.shape,z.dtype,z.values)]}if(i===0)return a[a.length-1]=0,[e.makeTensorInfo(a,n.dtype,[]),e.makeTensorInfo(a,"int32",[])];if(l===1)return[n,wt({attrs:{shape:a,dtype:"int32",value:0},backend:e})];let c=S.sizeFromShape(a)/l,p=fe({inputs:{x:n},attrs:{shape:[c,l]},backend:e}),d=eR(i),m=eR(l),f=null,g=()=>f===null?[p,p]:[p,f],x=(M,V,z)=>{let H=g(),K=new Wg(z),te=[{type:"int32",data:[l]},{type:"int32",data:[f===null?1:0]},{type:"float32",data:[Number.NEGATIVE_INFINITY]},{type:"int32",data:[M]},{type:"int32",data:[V]}],ce=f;f=e.runWebGPUProgram(K,H,"int32",te),Nc(e,ce)};for(let M=1;M<d;M*=2){let V=M*2;for(let z=M;z>=1;z/=2)x(V,z,[c,m])}for(let M=m;M>d;M/=2){let V=g(),z=new zg([c,M/2]),K=[{type:"int32",data:[l]},{type:"int32",data:[f===null?1:0]},{type:"int32",data:[d]}],X=f;f=e.runWebGPUProgram(z,V,"int32",K),Nc(e,X);let te=d/2,ce=te*2;for(let pe=te;pe>=1;pe/=2)x(ce,pe,f.shape)}let y=f;f=Ko({inputs:{x:f},backend:e,attrs:{begin:0,size:[c,i]}}),Nc(e,y);let b=yv({inputs:{x:p,indices:f},backend:e,attrs:{axis:1,batchDims:1}});Nc(e,p);let T=a.slice(0,-1);T.push(i),y=f,f=fe({inputs:{x:f},attrs:{shape:T},backend:e}),Nc(e,y);let R=b;return b=fe({inputs:{x:b},attrs:{shape:T},backend:e}),Nc(e,R),[b,f]}var tR={kernelName:Gu,backendName:"webgpu",kernelFunc:fX};var Ug=class{constructor(t){this.variableNames=["Image","Transforms"],this.uniforms="interpolationModeId : i32, fillModeId : i32, fillValue : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=ie(this.outputShape),this.dispatch=ee(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="transform"}getUserCode(){return`
          fn mapCoord(outCoord : f32, len : f32) -> f32{
            var inCoord = outCoord;
            if(uniforms.fillModeId == 2) {
              if (inCoord < 0.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz2 = 2.0 * len;
                  if (inCoord < sz2) {
                    inCoord = sz2 * f32(i32(f32(-inCoord / sz2))) +
                    inCoord;
                  }
                  if (inCoord < -len) {
                    inCoord = inCoord + sz2;
                  } else {
                    inCoord = -inCoord - 1.0;
                  }
                }
              } else if (inCoord > len - 1.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz2 = 2.0 * len;
                  inCoord = inCoord - sz2 * f32(i32(f32(inCoord / sz2)));
                  if (inCoord >= len) {
                    inCoord = sz2 - inCoord - 1.0;
                  }
                }
              }
              return clamp(inCoord, 0.0, len - 1.0);
            } else if (uniforms.fillModeId == 3) {
              if (inCoord < 0.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz = len - 1.0;
                  inCoord = inCoord + len * (f32(i32(f32(-inCoord / sz))) + 1.0);
                }
              } else if (inCoord > len - 1.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz = len - 1.0;
                  inCoord = inCoord - len * f32(i32(f32(inCoord / sz)));
                }
              }
              return clamp(inCoord, 0.0, len - 1.0);
            } else if (uniforms.fillModeId == 4) {
              return clamp(outCoord, 0.0, len - 1.0);
            }
            return outCoord;
          }
          fn readWithFillValue(batch : i32, coordY : i32, coordX : i32,
            channel : i32) -> f32 {
            var outputValue : f32;
            if (0 <= coordY && coordY < uniforms.imageShape[1] && 0 <= coordX && coordX < uniforms.imageShape[2]) {
                outputValue = getImage(batch, coordY, coordX, channel);
            } else {
              outputValue = uniforms.fillValue;
            }
            return outputValue;
          }

          ${J("index")} {
            if (index < uniforms.size) {
              let coords = getCoordsFromIndex(index);
              var outputValue : f32;
              let batch = coords[0];
              let x = coords[2];
              let y = coords[1];
              let channel = coords[3];
              let xf = f32(x);
              let yf = f32(y);
              let a1 = getTransforms(batch, 0);
              let a2 = getTransforms(batch, 1);
              let a3 = getTransforms(batch, 2);
              let b1 = getTransforms(batch, 3);
              let b2 = getTransforms(batch, 4);
              let b3 = getTransforms(batch, 5);
              let c1 = getTransforms(batch, 6);
              let c2 = getTransforms(batch, 7);
              let projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = uniforms.fillValue;
              } else {
                let inX = (a1 * xf + a2 * yf + a3) / projection;
                let inY = (b1 * xf + b2 * yf + b3) / projection;
                let mapX = mapCoord(inX, f32(uniforms.imageShape[2]));
                let mapY = mapCoord(inY, f32(uniforms.imageShape[1]));

                if (uniforms.interpolationModeId == 1) {
                  let coordY = i32(round(mapY));
                  let coordX = i32(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  let yFloor = floor(mapY);
                  let xFloor = floor(mapX);
                  let yCeil = yFloor + 1.0;
                  let xCeil = xFloor + 1.0;
                  let valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, i32(yFloor), i32(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, i32(yFloor), i32(xCeil), channel);
                  let valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, i32(yCeil), i32(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, i32(yCeil), i32(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutputAtIndex(index, outputValue);
            }
          }
        `}};function hX(r){let{inputs:t,backend:e,attrs:o}=r,{image:n,transforms:i}=t,{interpolation:s,fillMode:a,fillValue:l,outputShape:u}=o,[c,p,d,m]=n.shape,[f,g]=u??[p,d],x=[c,f,g,m],y=new Ug(x),b=s==="nearest"?1:2,T;switch(a){case"constant":T=1;break;case"reflect":T=2;break;case"wrap":T=3;break;case"nearest":T=4;break;default:T=1;break}let R=[{type:"int32",data:[b]},{type:"int32",data:[T]},{type:"float32",data:[l]}];return e.runWebGPUProgram(y,[n,i],"float32",R)}var rR={kernelName:Hu,backendName:"webgpu",kernelFunc:hX};function gX(r){let{inputs:t,backend:e,attrs:o}=r,{value:n}=t,{axis:i}=o;i<0&&(i+=n.shape.length);let s=n,a=s.shape.length,l=n.shape[i],u=new Array(a-1),c=0;for(let g=0;g<a;g++)g!==i&&(u[c++]=s.shape[g]);let p=[],d=new Array(a).fill(0),m=s.shape.slice();m[i]=1;let f=new Array(l);for(let g=0;g<f.length;g++){d[i]=g;let x=Ko({inputs:{x:s},backend:e,attrs:{begin:d,size:m}}),y=fe({inputs:{x},backend:e,attrs:{shape:u}});f[g]=y,p.push(x)}return p.forEach(g=>e.disposeData(g.dataId)),f}var oR={kernelName:Ku,backendName:"webgpu",kernelFunc:gX};var Gg=class{constructor(t,e,o){if(this.outputShape=[],this.variableNames=["x","segmentIds"],this.uniforms="numSegments : i32, xSize: i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=e,this.dispatchLayout=ie(t),this.dispatch=ee(this.dispatchLayout,t,this.workgroupSize),o!=="float32"&&o!=="int32")throw new Error(`UnsortedSegmentSum only supports float32 and int32
              types, does not support ${o} type.`);this.type=o,this.shaderKey="unsortedSegmentSum"}getUserCode(){return`
    ${J("index")} {
      if (index < uniforms.xSize) {
        let coords = getXCoordsFromIndex(index);
        let b = coords[0];
        let inCol = coords[1];

        let segmentId = i32(getSegmentIds(inCol));
        if (segmentId >= 0) {
          let flatIndex = b * uniforms.numSegments + segmentId % uniforms.numSegments;
          let value = getX(b, inCol);

          ${Qr("&result[flatIndex]","value",this.type)}
        }
      }
    }
  `}};function xX(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,segmentIds:i}=t,{numSegments:s}=o,a=n.shape.length,l=[],u=0,c=$.getAxesPermutation([u],a),p=n;c!=null&&(p=mr({inputs:{x:n},backend:e,attrs:{perm:c}}),l.push(p),u=$.getInnerMostAxes(1,a)[0]);let d=$.segment_util.computeOutShape(p.shape,u,s),m=S.sizeFromShape([p.shape[u]]),f=fe({inputs:{x:p},backend:e,attrs:{shape:[-1,m]}});l.push(f);let g=n.dtype,x=[f.shape[0],s],y=wt({backend:e,attrs:{shape:x,value:0,dtype:g}}),b=new Gg(f.shape,x,g),T=[{type:"int32",data:[s]},{type:"int32",data:[S.sizeFromShape(f.shape)]}],R=e.runWebGPUProgram(b,[f,i],g,T,y),M=fe({inputs:{x:R},backend:e,attrs:{shape:d}});l.push(R);let V=M;if(c!=null){l.push(M);let z=$.getUndoAxesPermutation(c);V=mr({inputs:{x:V},backend:e,attrs:{perm:z}})}return l.forEach(z=>e.disposeData(z.dataId)),V}var nR={kernelName:qu,backendName:"webgpu",kernelFunc:xX};var yX=[BI,oE,nE,iE,sE,aE,uE,cE,pE,dE,mE,fE,hE,gE,xE,bE,SE,wE,_E,CE,IE,TE,EE,PE,AE,DE,WI,OE,ME,BE,VE,WE,zE,UE,GE,HE,KE,qE,YE,QE,ZE,JE,t3,r3,e3,o3,n3,i3,s3,a3,c3,p3,d3,m3,f3,h3,g3,x3,y3,LI,v3,w3,b3,S3,_3,C3,k3,I3,T3,E3,N3,VI,R3,LE,$3,P3,A3,D3,F3,O3,L3,B3,M3,V3,W3,z3,G3,H3,yE,K3,q3,Y3,j3,X3,Q3,vE,Z3,J3,eN,tN,oN,l3,nN,iN,sN,NE,aN,cN,pN,dN,mN,fN,hN,gN,RE,xN,yN,vN,bN,MI,SN,wN,_N,CN,kN,IN,TN,EN,NN,RN,$N,PN,AN,DN,FN,ON,kE,qN,jN,XN,rN,LN,MN,BN,VN,zN,UN,GN,HN,KN,YN,u3,QN,ZN,JN,WN,tR,rR,lE,oR,nR,lN];for(let r of yX)Im(r);var OR=function(r,t){return(OR=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,o){e.__proto__=o}||function(e,o){for(var n in o)Object.prototype.hasOwnProperty.call(o,n)&&(e[n]=o[n])})(r,t)};function LR(r,t){if(typeof t!="function"&&t!==null)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");function e(){this.constructor=r}OR(r,t),r.prototype=t===null?Object.create(t):(e.prototype=t.prototype,new e)}var yt=function(){return(yt=Object.assign||function(r){for(var t,e=1,o=arguments.length;e<o;e++)for(var n in t=arguments[e])Object.prototype.hasOwnProperty.call(t,n)&&(r[n]=t[n]);return r}).apply(this,arguments)};function ot(r,t,e,o){return new(e||(e=Promise))(function(n,i){function s(u){try{l(o.next(u))}catch(c){i(c)}}function a(u){try{l(o.throw(u))}catch(c){i(c)}}function l(u){var c;u.done?n(u.value):(c=u.value,c instanceof e?c:new e(function(p){p(c)})).then(s,a)}l((o=o.apply(r,t||[])).next())})}function nt(r,t){var e,o,n,i,s={label:0,sent:function(){if(1&n[0])throw n[1];return n[1]},trys:[],ops:[]};return i={next:a(0),throw:a(1),return:a(2)},typeof Symbol=="function"&&(i[Symbol.iterator]=function(){return this}),i;function a(l){return function(u){return function(c){if(e)throw new TypeError("Generator is already executing.");for(;s;)try{if(e=1,o&&(n=2&c[0]?o.return:c[0]?o.throw||((n=o.return)&&n.call(o),0):o.next)&&!(n=n.call(o,c[1])).done)return n;switch(o=0,n&&(c=[2&c[0],n.value]),c[0]){case 0:case 1:n=c;break;case 4:return s.label++,{value:c[1],done:!1};case 5:s.label++,o=c[1],c=[0];continue;case 7:c=s.ops.pop(),s.trys.pop();continue;default:if(n=s.trys,!((n=n.length>0&&n[n.length-1])||c[0]!==6&&c[0]!==2)){s=0;continue}if(c[0]===3&&(!n||c[1]>n[0]&&c[1]<n[3])){s.label=c[1];break}if(c[0]===6&&s.label<n[1]){s.label=n[1],n=c;break}if(n&&s.label<n[2]){s.label=n[2],s.ops.push(c);break}n[2]&&s.ops.pop(),s.trys.pop();continue}c=t.call(r,s)}catch(p){c=[6,p],o=0}finally{e=n=0}if(5&c[0])throw c[1];return{value:c[0]?c[1]:void 0,done:!0}}([l,u])}}}function oa(r,t,e){if(e||arguments.length===2)for(var o,n=0,i=t.length;n<i;n++)!o&&n in t||(o||(o=Array.prototype.slice.call(t,0,n)),o[n]=t[n]);return r.concat(o||Array.prototype.slice.call(t))}var xn=["nose","left_eye","right_eye","left_ear","right_ear","left_shoulder","right_shoulder","left_elbow","right_elbow","left_wrist","right_wrist","left_hip","right_hip","left_knee","right_knee","left_ankle","right_ankle"],Jp=["nose","left_eye_inner","left_eye","left_eye_outer","right_eye_inner","right_eye","right_eye_outer","left_ear","right_ear","mouth_left","mouth_right","left_shoulder","right_shoulder","left_elbow","right_elbow","left_wrist","right_wrist","left_pinky","right_pinky","left_index","right_index","left_thumb","right_thumb","left_hip","right_hip","left_knee","right_knee","left_ankle","right_ankle","left_heel","right_heel","left_foot_index","right_foot_index"],vX={left:[1,2,3,7,9,11,13,15,17,19,21,23,25,27,29,31],right:[4,5,6,8,10,12,14,16,18,20,22,24,26,28,30,32],middle:[0]},bX={left:[1,3,5,7,9,11,13,15],right:[2,4,6,8,10,12,14,16],middle:[0]},SX=[[0,1],[0,2],[1,3],[2,4],[5,6],[5,7],[5,11],[6,8],[6,12],[7,9],[8,10],[11,12],[11,13],[12,14],[13,15],[14,16]],wX=[[0,1],[0,4],[1,2],[2,3],[3,7],[4,5],[5,6],[6,8],[9,10],[11,12],[11,13],[11,23],[12,14],[14,16],[12,24],[13,15],[15,17],[16,18],[16,20],[15,17],[15,19],[15,21],[16,22],[17,19],[18,20],[23,25],[23,24],[24,26],[25,27],[26,28],[27,29],[28,30],[27,31],[28,32],[29,31],[30,32]];function Hg(r){return r instanceof SVGAnimatedLength?r.baseVal.value:r}function MR(r){return ot(this,void 0,void 0,function(){var t,e;return nt(this,function(o){switch(o.label){case 0:return t=document.createElement("canvas"),r instanceof at?[4,ji.toPixels(r,t)]:[3,2];case 1:return o.sent(),[3,3];case 2:t.width=Hg(r.width),t.height=Hg(r.height),e=t.getContext("2d"),r instanceof ImageData?e.putImageData(r,0,0):e.drawImage(r,0,0),o.label=3;case 3:return[2,t]}})})}function BR(r){return ot(this,void 0,void 0,function(){var t,e,o,n,i,s;return nt(this,function(a){switch(a.label){case 0:return r instanceof at?(t=r.shape.slice(0,2),e=t[0],o=t[1],n=ImageData.bind,[4,ji.toPixels(r)]):[3,2];case 1:return[2,new(n.apply(ImageData,[void 0,a.sent(),o,e]))];case 2:return i=document.createElement("canvas"),s=i.getContext("2d"),i.width=Hg(r.width),i.height=Hg(r.height),s.drawImage(r,0,0),[2,s.getImageData(0,0,i.width,i.height)]}})})}function _X(r){return ot(this,void 0,void 0,function(){var t,e;return nt(this,function(o){switch(o.label){case 0:return r instanceof SVGImageElement||r instanceof OffscreenCanvas?[4,MR(r)]:[3,2];case 1:return e=o.sent(),[3,3];case 2:e=r,o.label=3;case 3:return t=e,[2,ji.fromPixels(t,4)]}})})}function VR(r){if(r<0||r>=256)throw new Error("Mask value must be in range [0, 255] but got ".concat(r));if(!Number.isInteger(r))throw new Error("Mask value must be an integer but got ".concat(r))}var Zp={runtime:"mediapipe",enableSmoothing:!0,enableSegmentation:!1,smoothSegmentation:!0,modelType:"full"},CX=function(){function r(t){this.mask=t}return r.prototype.toCanvasImageSource=function(){return ot(this,void 0,void 0,function(){return nt(this,function(t){return[2,this.mask]})})},r.prototype.toImageData=function(){return ot(this,void 0,void 0,function(){return nt(this,function(t){return[2,BR(this.mask)]})})},r.prototype.toTensor=function(){return ot(this,void 0,void 0,function(){return nt(this,function(t){return[2,_X(this.mask)]})})},r.prototype.getUnderlyingType=function(){return"canvasimagesource"},r}();function kX(r){return VR(r),"person"}var IX=function(){function r(t){var e,o=this;switch(this.width=0,this.height=0,this.selfieMode=!1,this.poseSolution=new FR.Pose({locateFile:function(n,i){if(t.solutionPath){var s=t.solutionPath.replace(/\/+$/,"");return"".concat(s,"/").concat(n)}return"".concat(i,"/").concat(n)}}),t.modelType){case"lite":e=0;break;case"heavy":e=2;break;case"full":default:e=1}this.poseSolution.setOptions({modelComplexity:e,smoothLandmarks:t.enableSmoothing,enableSegmentation:t.enableSegmentation,smoothSegmentation:t.smoothSegmentation,selfieMode:this.selfieMode}),this.poseSolution.onResults(function(n){if(o.height=n.image.height,o.width=n.image.width,n.poseLandmarks==null)o.poses=[];else{var i=o.translateOutput(n.poseLandmarks,n.poseWorldLandmarks);n.segmentationMask&&(i.segmentation={maskValueToLabel:kX,mask:new CX(n.segmentationMask)}),o.poses=[i]}})}return r.prototype.translateOutput=function(t,e){var o=this,n={keypoints:t.map(function(i,s){return{x:i.x*o.width,y:i.y*o.height,z:i.z,score:i.visibility,name:Jp[s]}})};return e!=null&&(n.keypoints3D=e.map(function(i,s){return{x:i.x,y:i.y,z:i.z,score:i.visibility,name:Jp[s]}})),n},r.prototype.estimatePoses=function(t,e,o){return ot(this,void 0,void 0,function(){var n,i;return nt(this,function(s){switch(s.label){case 0:return e&&e.flipHorizontal&&e.flipHorizontal!==this.selfieMode&&(this.selfieMode=e.flipHorizontal,this.poseSolution.setOptions({selfieMode:this.selfieMode})),t instanceof at?(i=ImageData.bind,[4,ji.toPixels(t)]):[3,2];case 1:return n=new(i.apply(ImageData,[void 0,s.sent(),t.shape[1],t.shape[0]])),[3,3];case 2:n=t,s.label=3;case 3:return t=n,[4,this.poseSolution.send({image:t},o)];case 4:return s.sent(),[2,this.poses]}})})},r.prototype.dispose=function(){this.poseSolution.close()},r.prototype.reset=function(){this.poseSolution.reset()},r.prototype.initialize=function(){return this.poseSolution.initialize()},r}();function TX(r){return ot(this,void 0,void 0,function(){var t,e;return nt(this,function(o){switch(o.label){case 0:return t=function(n){if(n==null)return yt({},Zp);var i=yt({},n);return i.runtime="mediapipe",i.enableSegmentation==null&&(i.enableSegmentation=Zp.enableSegmentation),i.enableSmoothing==null&&(i.enableSmoothing=Zp.enableSmoothing),i.smoothSegmentation==null&&(i.smoothSegmentation=Zp.smoothSegmentation),i.modelType==null&&(i.modelType=Zp.modelType),i}(r),[4,(e=new IX(t)).initialize()];case 1:return o.sent(),[2,e]}})})}function $c(r){return r instanceof at?{height:r.shape[0],width:r.shape[1]}:{height:r.height,width:r.width}}function WR(r){return r-2*Math.PI*Math.floor((r+Math.PI)/(2*Math.PI))}function Dv(r){return r instanceof at?r:ji.fromPixels(r)}function zR(r,t,e){return Rv(e,"inputResolution"),[1/e.width*r[0][0]*t.width,1/e.height*r[0][1]*t.width,r[0][3]*t.width,1/e.width*r[1][0]*t.height,1/e.height*r[1][1]*t.height,r[1][3]*t.height,0,0]}function Rv(r,t){S.assert(r.width!==0,function(){return"".concat(t," width cannot be 0.")}),S.assert(r.height!==0,function(){return"".concat(t," height cannot be 0.")})}function Sv(r,t,e){var o=e.rotationVectorStartKeypointIndex,n=e.rotationVectorEndKeypointIndex,i=r.locationData,s=i.relativeKeypoints[o].x*t.width,a=i.relativeKeypoints[o].y*t.height,l=i.relativeKeypoints[n].x*t.width,u=i.relativeKeypoints[n].y*t.height,c=2*Math.sqrt((l-s)*(l-s)+(u-a)*(u-a)),p=function(d,m,f){var g,x=d.locationData,y=f.rotationVectorStartKeypointIndex,b=f.rotationVectorEndKeypointIndex;g=f.rotationVectorTargetAngle?f.rotationVectorTargetAngle:Math.PI*f.rotationVectorTargetAngleDegree/180;var T=x.relativeKeypoints[y].x*m.width,R=x.relativeKeypoints[y].y*m.height,M=x.relativeKeypoints[b].x*m.width,V=x.relativeKeypoints[b].y*m.height;return WR(g-Math.atan2(-(V-R),M-T))}(r,t,e);return{xCenter:s/t.width,yCenter:a/t.height,width:c/t.width,height:c/t.height,rotation:p}}function UR(r){if(r.length!==16)throw new Error("Array length must be 16 but got ".concat(r.length));return[[r[0],r[1],r[2],r[3]],[r[4],r[5],r[6],r[7]],[r[8],r[9],r[10],r[11]],[r[12],r[13],r[14],r[15]]]}function wv(r,t,e,o,n,i,s){return r[t][n]*(r[e][i]*r[o][s]-r[e][s]*r[o][i])}function kr(r,t,e){var o=(t+1)%4,n=(t+2)%4,i=(t+3)%4,s=(e+1)%4,a=(e+2)%4,l=(e+3)%4;return wv(r,o,n,i,s,a,l)+wv(r,n,i,o,s,a,l)+wv(r,i,o,n,s,a,l)}function iR(r,t,e){e===void 0&&(e={ignoreRotation:!1});for(var o=[],n=0,i=r;n<i.length;n++){var s=i[n],a=s.x-.5,l=s.y-.5,u=e.ignoreRotation?0:t.rotation,c=Math.cos(u)*a-Math.sin(u)*l,p=Math.sin(u)*a+Math.cos(u)*l;c=c*t.width+t.xCenter,p=p*t.height+t.yCenter;var d=s.z*t.width,m=yt({},s);m.x=c,m.y=p,m.z=d,o.push(m)}return o}function GR(r,t){var e=function(o,n,i,s){var a=n-o,l=s-i;if(a===0)throw new Error("Original min and max are both ".concat(o,", range cannot be 0."));var u=l/a;return{scale:u,offset:i-o*u}}(0,255,t[0],t[1]);return Ne(function(){return he(ae(r,e.scale),e.offset)})}function $v(r,t,e){var o,n,i,s,a,l,u,c,p,d,m,f,g,x,y=t.outputTensorSize,b=t.keepAspectRatio,T=t.borderMode,R=t.outputTensorFloatRange,M=$c(r),V=function(K,X){return X?{xCenter:X.xCenter*K.width,yCenter:X.yCenter*K.height,width:X.width*K.width,height:X.height*K.height,rotation:X.rotation}:{xCenter:.5*K.width,yCenter:.5*K.height,width:K.width,height:K.height,rotation:0}}(M,e),z=function(K,X,te){if(te===void 0&&(te=!1),!te)return{top:0,left:0,right:0,bottom:0};var ce=X.height,pe=X.width;Rv(X,"targetSize"),Rv(K,"roi");var ve,Se,Ee=ce/pe,je=K.height/K.width,Xe=0,st=0;return Ee>je?(ve=K.width,Se=K.width*Ee,st=(1-je/Ee)/2):(ve=K.height/Ee,Se=K.height,Xe=(1-Ee/je)/2),K.width=ve,K.height=Se,{top:st,left:Xe,right:Xe,bottom:st}}(V,y,b),H=(o=V,n=M.width,i=M.height,s=!1,a=o.width,l=o.height,u=s?-1:1,c=Math.cos(o.rotation),p=Math.sin(o.rotation),d=o.xCenter,m=o.yCenter,f=1/n,g=1/i,(x=new Array(16))[0]=a*c*u*f,x[1]=-l*p*f,x[2]=0,x[3]=(-.5*a*c*u+.5*l*p+d)*f,x[4]=a*p*u*g,x[5]=l*c*g,x[6]=0,x[7]=(-.5*l*c-.5*a*p*u+m)*g,x[8]=0,x[9]=0,x[10]=a*f,x[11]=0,x[12]=0,x[13]=0,x[14]=0,x[15]=1,UR(x));return{imageTensor:Ne(function(){var K=Dv(r),X=_r(zR(H,M,y),[1,8]),te=T==="zero"?"constant":"nearest",ce=Un.transform(dr(Ue(K,"float32")),X,"bilinear",te,0,[y.height,y.width]);return R!=null?GR(ce,R):ce}),padding:z,transformationMatrix:H}}function sR(r,t,e,o){return o===1?.5*(r+t):r+(t-r)*e/(o-1)}function EX(r){return Ne(function(){var t=function(n){return Ne(function(){return[Oe(n,[0,0,0],[1,-1,1]),Oe(n,[0,0,1],[1,-1,-1])]})}(r),e=t[0],o=t[1];return{boxes:ct(o),logits:ct(e)}})}function HR(r){return r!=null&&r.currentTime!=null}function aR(r){for(var t={locationData:{relativeKeypoints:[]}},e=Number.MAX_SAFE_INTEGER,o=Number.MIN_SAFE_INTEGER,n=Number.MAX_SAFE_INTEGER,i=Number.MIN_SAFE_INTEGER,s=0;s<r.length;++s){var a=r[s];e=Math.min(e,a.x),o=Math.max(o,a.x),n=Math.min(n,a.y),i=Math.max(i,a.y),t.locationData.relativeKeypoints.push({x:a.x,y:a.y})}return t.locationData.relativeBoundingBox={xMin:e,yMin:n,xMax:o,yMax:i,width:o-e,height:i-n},t}function NX(r,t,e,o){return ot(this,void 0,void 0,function(){var n,i,s,a,l;return nt(this,function(u){switch(u.label){case 0:return r.sort(function(c,p){return Math.max.apply(Math,p.score)-Math.max.apply(Math,c.score)}),n=_r(r.map(function(c){return[c.locationData.relativeBoundingBox.yMin,c.locationData.relativeBoundingBox.xMin,c.locationData.relativeBoundingBox.yMax,c.locationData.relativeBoundingBox.xMax]})),i=$t(r.map(function(c){return c.score[0]})),[4,Un.nonMaxSuppressionAsync(n,i,t,e)];case 1:return[4,(s=u.sent()).array()];case 2:return a=u.sent(),l=r.filter(function(c,p){return a.indexOf(p)>-1}),Ye([n,i,s]),[2,l]}})})}function KR(r,t){return r.map(function(e){var o=yt(yt({},e),{x:e.x*t.width,y:e.y*t.height});return e.z!=null&&(o.z=e.z*t.width),o})}function RX(r,t,e){return ot(this,void 0,void 0,function(){var o,n,i,s,a,l,u,c,p,d,m,f,g,x,y,b,T,R,M,V,z,H,K,X;return nt(this,function(te){switch(te.label){case 0:if(o=ct(t,[0]),n=o.shape,i=n[0],s=n[1],a=n[2],r.length!==a)throw new Error("Expected heatmap to have same number of channels as the number of landmarks. But got landmarks length: "+"".concat(r.length,", heatmap length: ").concat(a));return l=[],[4,o.buffer()];case 1:for(u=te.sent(),c=0;c<r.length;c++)if(p=r[c],d=yt({},p),l.push(d),m=Math.trunc(d.x*s),f=Math.trunc(d.y*i),!(m<0||m>=s||f<0||m>=i)){for(g=Math.trunc((e.kernelSize-1)/2),x=Math.max(0,m-g),y=Math.min(s,m+g+1),b=Math.max(0,f-g),T=Math.min(i,f+g+1),R=0,M=0,V=0,z=0,H=b;H<T;++H)for(K=x;K<y;++K)X=u.get(H,K,c),R+=X,z=Math.max(z,X),M+=K*X,V+=H*X;z>=e.minConfidenceToRefine&&R>0&&(d.x=M/s/R,d.y=V/i/R)}return o.dispose(),[2,l]}})})}function lR(r,t){var e=t.left,o=t.top,n=t.left+t.right,i=t.top+t.bottom;return r.map(function(s){return yt(yt({},s),{x:(s.x-e)/(1-n),y:(s.y-o)/(1-i),z:s.z/(1-n)})})}function $X(r,t,e){return an()==="webgl"?function(o,n,i){var s=i.combineWithPreviousRatio.toFixed(2),a={variableNames:["prevMask","newMask"],outputShape:o.shape,userCode:`
  void main() {
      ivec2 coords = getOutputCoords();
      int height = coords[0];
      int width = coords[1];

      float prevMaskValue = getPrevMask(height, width);
      float newMaskValue = getNewMask(height, width);

      /*
      * Assume p := newMaskValue
      * H(p) := 1 + (p * log(p) + (1-p) * log(1-p)) / log(2)
      * uncertainty alpha(p) =
      *   Clamp(1 - (1 - H(p)) * (1 - H(p)), 0, 1) [squaring the
      * uncertainty]
      *
      * The following polynomial approximates uncertainty alpha as a
      * function of (p + 0.5):
      */
      const float c1 = 5.68842;
      const float c2 = -0.748699;
      const float c3 = -57.8051;
      const float c4 = 291.309;
      const float c5 = -624.717;
      float t = newMaskValue - 0.5;
      float x = t * t;

      float uncertainty =
        1.0 - min(1.0, x * (c1 + x * (c2 + x * (c3 + x * (c4 + x * c5)))));

      float outputValue = newMaskValue + (prevMaskValue - newMaskValue) *
                             (uncertainty * `.concat(s,`);

      setOutput(outputValue);
    }
`)},l=Li();return Ne(function(){var u=l.compileAndRun(a,[o,n]);return cr().makeTensorFromDataId(u.dataId,u.shape,u.dtype)})}(r,t,e):Ne(function(){var o=$e(t,.5),n=Ut(o),i=$e(1,Vn(1,ae(n,he(5.68842,ae(n,he(-.748699,ae(n,he(-57.8051,ae(n,he(291.309,ae(n,-624.717)))))))))));return he(t,ae($e(r,t),ae(i,e.combineWithPreviousRatio)))})}function PX(r,t,e){return ot(this,void 0,void 0,function(){var o,n,i,s,a;return nt(this,function(l){switch(l.label){case 0:return o=r[0],n=r[1],i=function(u,c,p){return Ne(function(){var d,m,f,g;p.reverseOutputOrder?(m=ct(Oe(u,[0,p.boxCoordOffset+0],[-1,1])),d=ct(Oe(u,[0,p.boxCoordOffset+1],[-1,1])),g=ct(Oe(u,[0,p.boxCoordOffset+2],[-1,1])),f=ct(Oe(u,[0,p.boxCoordOffset+3],[-1,1]))):(d=ct(Oe(u,[0,p.boxCoordOffset+0],[-1,1])),m=ct(Oe(u,[0,p.boxCoordOffset+1],[-1,1])),f=ct(Oe(u,[0,p.boxCoordOffset+2],[-1,1])),g=ct(Oe(u,[0,p.boxCoordOffset+3],[-1,1]))),m=he(ae(Fe(m,p.xScale),c.w),c.x),d=he(ae(Fe(d,p.yScale),c.h),c.y),p.applyExponentialOnBoxSize?(f=ae(Pr(Fe(f,p.hScale)),c.h),g=ae(Pr(Fe(g,p.wScale)),c.w)):(f=ae(Fe(f,p.hScale),c.h),g=ae(Fe(g,p.wScale),c.h));var x=$e(d,Fe(f,2)),y=$e(m,Fe(g,2)),b=he(d,Fe(f,2)),T=he(m,Fe(g,2)),R=mt([Y(x,[p.numBoxes,1]),Y(y,[p.numBoxes,1]),Y(b,[p.numBoxes,1]),Y(T,[p.numBoxes,1])],1);if(p.numKeypoints)for(var M=0;M<p.numKeypoints;++M){var V=p.keypointCoordOffset+M*p.numValuesPerKeypoint,z=void 0,H=void 0;p.reverseOutputOrder?(z=ct(Oe(u,[0,V],[-1,1])),H=ct(Oe(u,[0,V+1],[-1,1]))):(H=ct(Oe(u,[0,V],[-1,1])),z=ct(Oe(u,[0,V+1],[-1,1])));var K=he(ae(Fe(z,p.xScale),c.w),c.x),X=he(ae(Fe(H,p.yScale),c.h),c.y);R=mt([R,Y(K,[p.numBoxes,1]),Y(X,[p.numBoxes,1])],1)}return R})}(n,t,e),s=Ne(function(){var u=o;return e.sigmoidScore?(e.scoreClippingThresh!=null&&(u=Xm(o,-e.scoreClippingThresh,e.scoreClippingThresh)),u=Kr(u)):u}),[4,AX(i,s,e)];case 1:return a=l.sent(),Ye([i,s]),[2,a]}})})}function AX(r,t,e){return ot(this,void 0,void 0,function(){var o,n,i,s,a,l,u,c,p,d,m,f;return nt(this,function(g){switch(g.label){case 0:return o=[],[4,r.data()];case 1:return n=g.sent(),[4,t.data()];case 2:for(i=g.sent(),s=0;s<e.numBoxes;++s)if(!(e.minScoreThresh!=null&&i[s]<e.minScoreThresh||(a=s*e.numCoords,l=DX(n[a+0],n[a+1],n[a+2],n[a+3],i[s],e.flipVertically,s),(u=l.locationData.relativeBoundingBox).width<0||u.height<0))){if(e.numKeypoints>0)for((c=l.locationData).relativeKeypoints=[],p=e.numKeypoints*e.numValuesPerKeypoint,d=0;d<p;d+=e.numValuesPerKeypoint)m=a+e.keypointCoordOffset+d,f={x:n[m+0],y:e.flipVertically?1-n[m+1]:n[m+1]},c.relativeKeypoints.push(f);o.push(l)}return[2,o]}})})}function DX(r,t,e,o,n,i,s){return{score:[n],ind:s,locationData:{relativeBoundingBox:{xMin:t,yMin:i?1-e:r,xMax:o,yMax:i?1-r:e,width:o-t,height:e-r}}}}function FX(r,t){return r==="none"?t:function(e){return 1/(1+Math.exp(-e))}(t)}function uR(r,t,e,o){return ot(this,void 0,void 0,function(){var n,i,s,a,l,u,c,p;return nt(this,function(d){switch(d.label){case 0:return e=e||t.flipHorizontally||!1,o=o||t.flipVertically||!1,n=r.size,i=n/t.numLandmarks,[4,r.data()];case 1:for(s=d.sent(),a=[],l=0;l<t.numLandmarks;++l)u=l*i,(p={x:0,y:0}).x=e?t.inputImageWidth-s[u]:s[u],i>1&&(p.y=o?t.inputImageHeight-s[u+1]:s[u+1]),i>2&&(p.z=s[u+2]),i>3&&(p.score=FX(t.visibilityActivation,s[u+3])),a.push(p);for(c=0;c<a.length;++c)(p=a[c]).x=p.x/t.inputImageWidth,p.y=p.y/t.inputImageHeight,p.z=p.z/t.inputImageWidth/(t.normalizeZ||1);return[2,a]}})})}function cR(r,t,e){var o=r.width,n=r.height,i=r.rotation;if(e.rotation==null&&e.rotationDegree==null||(i=function(c,p){return p.rotation!=null?c+=p.rotation:p.rotationDegree!=null&&(c+=Math.PI*p.rotationDegree/180),WR(c)}(i,e)),i===0)r.xCenter=r.xCenter+o*e.shiftX,r.yCenter=r.yCenter+n*e.shiftY;else{var s=(t.width*o*e.shiftX*Math.cos(i)-t.height*n*e.shiftY*Math.sin(i))/t.width,a=(t.width*o*e.shiftX*Math.sin(i)+t.height*n*e.shiftY*Math.cos(i))/t.height;r.xCenter=r.xCenter+s,r.yCenter=r.yCenter+a}if(e.squareLong){var l=Math.max(o*t.width,n*t.height);o=l/t.width,n=l/t.height}else if(e.squareShort){var u=Math.min(o*t.width,n*t.height);o=u/t.width,n=u/t.height}return r.width=o*e.scaleX,r.height=n*e.scaleY,r}function OX(r,t){return r.map(function(e){var o=yt(yt({},e),{x:e.x/t.width,y:e.y/t.height});return e.z!=null&&(e.z=e.z/t.width),o})}var ts=function(){function r(t){this.alpha=t,this.initialized=!1}return r.prototype.apply=function(t,e){var o;return this.initialized?o=e==null?this.storedValue+this.alpha*(t-this.storedValue):this.storedValue+this.alpha*e*Math.asinh((t-this.storedValue)/e):(o=t,this.initialized=!0),this.rawValue=t,this.storedValue=o,o},r.prototype.applyWithAlpha=function(t,e,o){return this.alpha=e,this.apply(t,o)},r.prototype.hasLastRawValue=function(){return this.initialized},r.prototype.lastRawValue=function(){return this.rawValue},r.prototype.reset=function(){this.initialized=!1},r}(),_v=function(){function r(t){this.frequency=t.frequency,this.minCutOff=t.minCutOff,this.beta=t.beta,this.thresholdCutOff=t.thresholdCutOff,this.thresholdBeta=t.thresholdBeta,this.derivateCutOff=t.derivateCutOff,this.x=new ts(this.getAlpha(this.minCutOff)),this.dx=new ts(this.getAlpha(this.derivateCutOff)),this.lastTimestamp=0}return r.prototype.apply=function(t,e,o){if(t==null)return t;var n=Math.trunc(e);if(this.lastTimestamp>=n)return t;this.lastTimestamp!==0&&n!==0&&(this.frequency=1/(1e-6*(n-this.lastTimestamp))),this.lastTimestamp=n;var i=this.x.hasLastRawValue()?(t-this.x.lastRawValue())*o*this.frequency:0,s=this.dx.applyWithAlpha(i,this.getAlpha(this.derivateCutOff)),a=this.minCutOff+this.beta*Math.abs(s),l=this.thresholdCutOff!=null?this.thresholdCutOff+this.thresholdBeta*Math.abs(s):null;return this.x.applyWithAlpha(t,this.getAlpha(a),l)},r.prototype.getAlpha=function(t){return 1/(1+this.frequency/(2*Math.PI*t))},r}(),Pv=function(){function r(t){this.config=t}return r.prototype.apply=function(t,e,o){var n=this;if(t==null)return this.reset(),null;this.initializeFiltersIfEmpty(t);var i=1;if(!this.config.disableValueScaling){if(o<this.config.minAllowedObjectScale)return oa([],t,!0);i=1/o}return t.map(function(s,a){var l=yt(yt({},s),{x:n.xFilters[a].apply(s.x,e,i),y:n.yFilters[a].apply(s.y,e,i)});return s.z!=null&&(l.z=n.zFilters[a].apply(s.z,e,i)),l})},r.prototype.reset=function(){this.xFilters=null,this.yFilters=null,this.zFilters=null},r.prototype.initializeFiltersIfEmpty=function(t){var e=this;this.xFilters!=null&&this.xFilters.length===t.length||(this.xFilters=t.map(function(o){return new _v(e.config)}),this.yFilters=t.map(function(o){return new _v(e.config)}),this.zFilters=t.map(function(o){return new _v(e.config)}))},r}(),Cv=function(){function r(t){this.config=t,this.window=[],this.lowPassFilter=new ts(1),this.lastValue=0,this.lastValueScale=1,this.lastTimestamp=-1}return r.prototype.apply=function(t,e,o){if(t==null)return t;var n,i=Math.trunc(e);if(this.lastTimestamp>=i)return t;if(this.lastTimestamp===-1)n=1;else{for(var s=t*o-this.lastValue*this.lastValueScale,a=i-this.lastTimestamp,l=s,u=a,c=(1+this.window.length)*(1e6/30),p=0,d=this.window;p<d.length;p++){var m=d[p];if(u+m.duration>c)break;l+=m.distance,u+=m.duration}var f=l/(1e-6*u);n=1-1/(1+this.config.velocityScale*Math.abs(f)),this.window.unshift({distance:s,duration:a}),this.window.length>this.config.windowSize&&this.window.pop()}return this.lastValue=t,this.lastValueScale=o,this.lastTimestamp=i,this.lowPassFilter.applyWithAlpha(t,n)},r}(),LX=function(){function r(t){this.config=t}return r.prototype.apply=function(t,e,o){var n=this;if(t==null)return this.reset(),null;var i=1;if(!this.config.disableValueScaling){if(o<this.config.minAllowedObjectScale)return oa([],t,!0);i=1/o}return this.initializeFiltersIfEmpty(t),t.map(function(s,a){var l=yt(yt({},s),{x:n.xFilters[a].apply(s.x,e,i),y:n.yFilters[a].apply(s.y,e,i)});return s.z!=null&&(l.z=n.zFilters[a].apply(s.z,e,i)),l})},r.prototype.reset=function(){this.xFilters=null,this.yFilters=null,this.zFilters=null},r.prototype.initializeFiltersIfEmpty=function(t){var e=this;this.xFilters!=null&&this.xFilters.length===t.length||(this.xFilters=t.map(function(o){return new Cv(e.config)}),this.yFilters=t.map(function(o){return new Cv(e.config)}),this.zFilters=t.map(function(o){return new Cv(e.config)}))},r}(),kv=function(){function r(t){if(t.velocityFilter!=null)this.keypointsFilter=new LX(t.velocityFilter);else{if(t.oneEuroFilter==null)throw new Error("Either configure velocityFilter or oneEuroFilter, but got "+"".concat(t,"."));this.keypointsFilter=new Pv(t.oneEuroFilter)}}return r.prototype.apply=function(t,e,o,n,i){if(n===void 0&&(n=!1),t==null)return this.keypointsFilter.reset(),null;var s=i!=null?function(u,c){return(u.width*c.width+u.height*c.height)/2}(i,o):1,a=n?KR(t,o):t,l=this.keypointsFilter.apply(a,e,s);return n?OX(l,o):l},r}(),pR=function(){function r(t){this.alpha=t.alpha}return r.prototype.apply=function(t){var e=this;if(t==null)return this.visibilityFilters=null,null;this.visibilityFilters!=null&&this.visibilityFilters.length===t.length||(this.visibilityFilters=t.map(function(a){return new ts(e.alpha)}));for(var o=[],n=0;n<t.length;++n){var i=t[n],s=yt({},i);s.score=this.visibilityFilters[n].apply(i.score),o.push(s)}return o},r}(),MX={reduceBoxesInLowestlayer:!1,interpolatedScaleAspectRatio:1,featureMapHeight:[],featureMapWidth:[],numLayers:5,minScale:.1484375,maxScale:.75,inputSizeHeight:224,inputSizeWidth:224,anchorOffsetX:.5,anchorOffsetY:.5,strides:[8,16,32,32,32],aspectRatios:[1],fixedAnchorSize:!0},Rc={runtime:"tfjs",modelType:"full",enableSmoothing:!0,enableSegmentation:!1,smoothSegmentation:!0,detectorModelUrl:"https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/detector/1",landmarkModelUrl:"https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/landmark/full/2"},BX={maxPoses:1,flipHorizontal:!1},VX={applyExponentialOnBoxSize:!1,flipVertically:!1,ignoreClasses:[],numClasses:1,numBoxes:2254,numCoords:12,boxCoordOffset:0,keypointCoordOffset:4,numKeypoints:4,numValuesPerKeypoint:2,sigmoidScore:!0,scoreClippingThresh:100,reverseOutputOrder:!0,xScale:224,yScale:224,hScale:224,wScale:224,minScoreThresh:.5},WX=.3,dR={shiftX:0,shiftY:0,scaleX:1.25,scaleY:1.25,squareLong:!0},zX={outputTensorSize:{width:224,height:224},keepAspectRatio:!0,outputTensorFloatRange:[-1,1],borderMode:"zero"},UX={outputTensorSize:{width:256,height:256},keepAspectRatio:!0,outputTensorFloatRange:[0,1],borderMode:"zero"},GX={numLandmarks:39,inputImageWidth:256,inputImageHeight:256,visibilityActivation:"sigmoid",flipHorizontally:!1,flipVertically:!1},HX={numLandmarks:39,inputImageWidth:1,inputImageHeight:1,visibilityActivation:"sigmoid",flipHorizontally:!1,flipVertically:!1},KX={kernelSize:7,minConfidenceToRefine:.5},mR={alpha:.1},qX={oneEuroFilter:{frequency:30,minCutOff:.05,beta:80,derivateCutOff:1,minAllowedObjectScale:1e-6}},jX={oneEuroFilter:{frequency:30,minCutOff:.01,beta:10,derivateCutOff:1,minAllowedObjectScale:1e-6}},XX={oneEuroFilter:{frequency:30,minCutOff:.1,beta:40,derivateCutOff:1,minAllowedObjectScale:1e-6,disableValueScaling:!0}},YX={activation:"none"},QX={combineWithPreviousRatio:.7},ZX=function(){function r(t){this.mask=t}return r.prototype.toCanvasImageSource=function(){return ot(this,void 0,void 0,function(){return nt(this,function(t){return[2,MR(this.mask)]})})},r.prototype.toImageData=function(){return ot(this,void 0,void 0,function(){return nt(this,function(t){return[2,BR(this.mask)]})})},r.prototype.toTensor=function(){return ot(this,void 0,void 0,function(){return nt(this,function(t){return[2,this.mask]})})},r.prototype.getUnderlyingType=function(){return"tensor"},r}();function JX(r){return VR(r),"person"}var eY=function(){function r(t,e,o,n,i,s){this.detectorModel=t,this.landmarkModel=e,this.enableSmoothing=o,this.enableSegmentation=n,this.smoothSegmentation=i,this.modelType=s,this.regionOfInterest=null,this.prevFilteredSegmentationMask=null,this.anchors=function(p){p.reduceBoxesInLowestLayer==null&&(p.reduceBoxesInLowestLayer=!1),p.interpolatedScaleAspectRatio==null&&(p.interpolatedScaleAspectRatio=1),p.fixedAnchorSize==null&&(p.fixedAnchorSize=!1);for(var d=[],m=0;m<p.numLayers;){for(var f=[],g=[],x=[],y=[],b=m;b<p.strides.length&&p.strides[b]===p.strides[m];){var T=sR(p.minScale,p.maxScale,b,p.strides.length);if(b===0&&p.reduceBoxesInLowestLayer)x.push(1),x.push(2),x.push(.5),y.push(.1),y.push(T),y.push(T);else{for(var R=0;R<p.aspectRatios.length;++R)x.push(p.aspectRatios[R]),y.push(T);if(p.interpolatedScaleAspectRatio>0){var M=b===p.strides.length-1?1:sR(p.minScale,p.maxScale,b+1,p.strides.length);y.push(Math.sqrt(T*M)),x.push(p.interpolatedScaleAspectRatio)}}b++}for(var V=0;V<x.length;++V){var z=Math.sqrt(x[V]);f.push(y[V]/z),g.push(y[V]*z)}var H=0,K=0;if(p.featureMapHeight.length>0)H=p.featureMapHeight[m],K=p.featureMapWidth[m];else{var X=p.strides[m];H=Math.ceil(p.inputSizeHeight/X),K=Math.ceil(p.inputSizeWidth/X)}for(var te=0;te<H;++te)for(var ce=0;ce<K;++ce)for(var pe=0;pe<f.length;++pe){var ve={xCenter:(ce+p.anchorOffsetX)/K,yCenter:(te+p.anchorOffsetY)/H,width:0,height:0};p.fixedAnchorSize?(ve.width=1,ve.height=1):(ve.width=g[pe],ve.height=f[pe]),d.push(ve)}m=b}return d}(MX);var a=$t(this.anchors.map(function(p){return p.width})),l=$t(this.anchors.map(function(p){return p.height})),u=$t(this.anchors.map(function(p){return p.xCenter})),c=$t(this.anchors.map(function(p){return p.yCenter}));this.anchorTensor={x:u,y:c,w:a,h:l},this.prevFilteredSegmentationMask=this.enableSegmentation?_r([],[0,0]):null}return r.prototype.estimatePoses=function(t,e,o){return ot(this,void 0,void 0,function(){var n,i,s,a,l,u,c,p,d,m,f,g,x,y,b,T,R,M,V,z,H,K,X;return nt(this,function(te){switch(te.label){case 0:return n=function(ce){var pe;if((pe=ce==null?BX:yt({},ce)).maxPoses==null&&(pe.maxPoses=1),pe.maxPoses<=0)throw new Error("Invalid maxPoses ".concat(pe.maxPoses,". Should be > 0."));if(pe.maxPoses>1)throw new Error("Multi-pose detection is not implemented yet. Please set maxPoses to 1.");return pe}(e),t==null?(this.reset(),[2,[]]):(this.maxPoses=n.maxPoses,this.timestamp=o!=null?1e3*o:HR(t)?1e6*t.currentTime:null,i=$c(t),s=Ne(function(){return Ue(Dv(t),"float32")}),(a=this.regionOfInterest)!=null?[3,2]:[4,this.detectPose(s)]);case 1:if((l=te.sent()).length===0)return this.reset(),s.dispose(),[2,[]];u=l[0],a=this.poseDetectionToRoi(u,i),te.label=2;case 2:return[4,this.poseLandmarksByRoi(a,s)];case 3:return c=te.sent(),s.dispose(),c==null?(this.reset(),[2,[]]):(p=c.landmarks,d=c.auxiliaryLandmarks,m=c.poseScore,f=c.worldLandmarks,g=c.segmentationMask,x=this.poseLandmarkFiltering(p,d,f,i),y=x.actualLandmarksFiltered,b=x.auxiliaryLandmarksFiltered,T=x.actualWorldLandmarksFiltered,R=this.poseLandmarksToRoi(b,i),this.regionOfInterest=R,M=this.smoothSegmentation&&g!=null?this.poseSegmentationFiltering(g):g,(V=y!=null?KR(y,i):null)!=null&&V.forEach(function(ce,pe){ce.name=Jp[pe]}),(z=T)!=null&&z.forEach(function(ce,pe){ce.name=Jp[pe]}),H={score:m,keypoints:V,keypoints3D:z},M!==null&&(K=Ne(function(){var ce=dr(M,2),pe=qr(ce,[[0,0],[0,0],[0,1]]);return ff(pe,[[0,0],[0,0],[0,2]],"symmetric")}),this.smoothSegmentation||Ye(M),X={maskValueToLabel:JX,mask:new ZX(K)},H.segmentation=X),[2,[H]])}})})},r.prototype.poseSegmentationFiltering=function(t){var e=this.prevFilteredSegmentationMask;return e.size===0?this.prevFilteredSegmentationMask=t:(this.prevFilteredSegmentationMask=$X(e,t,QX),Ye(t)),Ye(e),this.prevFilteredSegmentationMask},r.prototype.dispose=function(){this.detectorModel.dispose(),this.landmarkModel.dispose(),Ye([this.anchorTensor.x,this.anchorTensor.y,this.anchorTensor.w,this.anchorTensor.h,this.prevFilteredSegmentationMask])},r.prototype.reset=function(){this.regionOfInterest=null,this.enableSegmentation&&(Ye(this.prevFilteredSegmentationMask),this.prevFilteredSegmentationMask=_r([],[0,0])),this.visibilitySmoothingFilterActual=null,this.visibilitySmoothingFilterAuxiliary=null,this.landmarksSmoothingFilterActual=null,this.landmarksSmoothingFilterAuxiliary=null},r.prototype.detectPose=function(t){return ot(this,void 0,void 0,function(){var e,o,n,i,s,a,l,u,c,p;return nt(this,function(d){switch(d.label){case 0:return e=$v(t,zX),o=e.imageTensor,n=e.padding,i=this.detectorModel.predict(o),s=EX(i),a=s.boxes,[4,PX([l=s.logits,a],this.anchorTensor,VX)];case 1:return(u=d.sent()).length===0?(Ye([o,i,l,a]),[2,u]):[4,NX(u,this.maxPoses,WX)];case 2:return c=d.sent(),p=function(m,f){m===void 0&&(m=[]);for(var g=f.left,x=f.top,y=f.left+f.right,b=f.top+f.bottom,T=0;T<m.length;T++){var R=m[T],M=R.locationData.relativeBoundingBox,V=(M.xMin-g)/(1-y),z=(M.yMin-x)/(1-b),H=M.width/(1-y),K=M.height/(1-b);M.xMin=V,M.yMin=z,M.width=H,M.height=K,M.xMax=V+H,M.yMax=z+K;var X=R.locationData.relativeKeypoints;X&&X.forEach(function(te){var ce=(te.x-g)/(1-y),pe=(te.y-x)/(1-b);te.x=ce,te.y=pe})}return m}(c,n),Ye([o,i,l,a]),[2,p]}})})},r.prototype.poseDetectionToRoi=function(t,e){return cR(Sv(t,e,{rotationVectorEndKeypointIndex:1,rotationVectorStartKeypointIndex:0,rotationVectorTargetAngleDegree:90}),e,dR)},r.prototype.poseLandmarksByRoi=function(t,e){return ot(this,void 0,void 0,function(){var o,n,i,s,a,l,u,c,p,d,m,f,g,x;return nt(this,function(y){switch(y.label){case 0:if(o=$c(e),n=$v(e,UX,t),i=n.imageTensor,s=n.padding,a=n.transformationMatrix,this.modelType!=="lite"&&this.modelType!=="full"&&this.modelType!=="heavy")throw new Error("Model type must be one of lite, full or heavy,"+"but got ".concat(this.modelType));return l=["ld_3d","output_poseflag","activation_heatmap","world_3d"],this.enableSegmentation&&l.push("activation_segmentation"),u=this.landmarkModel.execute(i,l),[4,this.tensorsToPoseLandmarksAndSegmentation(u)];case 1:return(c=y.sent())==null?(Ye(u),Ye(i),[2,null]):(p=c.landmarks,d=c.auxiliaryLandmarks,m=c.poseScore,f=c.worldLandmarks,g=c.segmentationMask,[4,this.poseLandmarksAndSegmentationInverseProjection(o,t,s,a,p,d,f,g)]);case 2:return x=y.sent(),Ye(u),Ye(i),[2,yt({poseScore:m},x)]}})})},r.prototype.poseLandmarksAndSegmentationInverseProjection=function(t,e,o,n,i,s,a,l){return ot(this,void 0,void 0,function(){var u,c,p,d,m,f;return nt(this,function(g){return u=lR(i,o),c=lR(s,o),p=iR(u,e),d=iR(c,e),m=function(x,y){for(var b=[],T=0,R=x;T<R.length;T++){var M=R[T],V=M.x,z=M.y,H=y.rotation,K=Math.cos(H)*V-Math.sin(H)*z,X=Math.sin(H)*V+Math.cos(H)*z,te=yt({},M);te.x=K,te.y=X,b.push(te)}return b}(a,e),f=null,this.enableSegmentation&&(f=Ne(function(){var x=l.shape,y=x[0],b=x[1],T=function(V){var z=UR(new Array(16).fill(0));z[0][0]=kr(V,0,0),z[1][0]=-kr(V,0,1),z[2][0]=kr(V,0,2),z[3][0]=-kr(V,0,3),z[0][2]=kr(V,2,0),z[1][2]=-kr(V,2,1),z[2][2]=kr(V,2,2),z[3][2]=-kr(V,2,3),z[0][1]=-kr(V,1,0),z[1][1]=kr(V,1,1),z[2][1]=-kr(V,1,2),z[3][1]=kr(V,1,3),z[0][3]=-kr(V,3,0),z[1][3]=kr(V,3,1),z[2][3]=-kr(V,3,2),z[3][3]=kr(V,3,3);for(var H=V[0][0]*z[0][0]+V[1][0]*z[0][1]+V[2][0]*z[0][2]+V[3][0]*z[0][3],K=0;K<z.length;K++)for(var X=0;X<z.length;X++)z[K][X]/=H;return z}(n),R=_r(zR(T,{width:b,height:y},t),[1,8]),M=[1,y,b,1];return ct(Un.transform(Y(l,M),R,"bilinear","constant",0,[t.height,t.width]),[0,3])}),Ye(l)),[2,{landmarks:p,auxiliaryLandmarks:d,worldLandmarks:m,segmentationMask:f}]})})},r.prototype.tensorsToPoseLandmarksAndSegmentation=function(t){return ot(this,void 0,void 0,function(){var e,o,n,i,s,a,l,u,c,p,d,m,f;return nt(this,function(g){switch(g.label){case 0:return e=t[0],o=t[1],n=t[2],i=t[3],s=this.enableSegmentation?t[4]:null,[4,o.data()];case 1:return(a=g.sent()[0])<.5?[2,null]:[4,uR(e,GX)];case 2:return[4,RX(g.sent(),n,KX)];case 3:return l=g.sent(),u=l.slice(0,33),c=l.slice(33,35),[4,uR(i,HX)];case 4:return p=g.sent(),d=p.slice(0,33),m=function(x,y,b){b===void 0&&(b=!0);for(var T=[],R=0;R<x.length;R++){var M=yt({},y[R]);b&&(M.score=x[R].score),T.push(M)}return T}(u,d,!0),f=this.enableSegmentation?function(x,y,b){return Ne(function(){var T=ct(x,[0]),R=T.shape[2];if(R===1){var M=T;switch(y.activation){case"none":break;case"sigmoid":M=Kr(M);break;case"softmax":throw new Error("Softmax activation requires two channels.");default:throw new Error("Activation not supported (".concat(y.activation,")"))}var V=b?Un.resizeBilinear(M,[b.height,b.width]):M;return ct(V,[2])}throw new Error("Unsupported number of tensor channels ".concat(R))})}(s,YX):null,[2,{landmarks:u,auxiliaryLandmarks:c,poseScore:a,worldLandmarks:m,segmentationMask:f}]}})})},r.prototype.poseLandmarksToRoi=function(t,e){return cR(Sv(aR(t),e,{rotationVectorStartKeypointIndex:0,rotationVectorEndKeypointIndex:1,rotationVectorTargetAngleDegree:90}),e,dR)},r.prototype.poseLandmarkFiltering=function(t,e,o,n){var i,s,a;if(this.timestamp!=null&&this.enableSmoothing){var l=Sv(aR(e),n,{rotationVectorEndKeypointIndex:0,rotationVectorStartKeypointIndex:1,rotationVectorTargetAngleDegree:90});this.visibilitySmoothingFilterActual==null&&(this.visibilitySmoothingFilterActual=new pR(mR)),i=this.visibilitySmoothingFilterActual.apply(t),this.visibilitySmoothingFilterAuxiliary==null&&(this.visibilitySmoothingFilterAuxiliary=new pR(mR)),s=this.visibilitySmoothingFilterAuxiliary.apply(e),a=this.visibilitySmoothingFilterActual.apply(o),this.landmarksSmoothingFilterActual==null&&(this.landmarksSmoothingFilterActual=new kv(qX)),i=this.landmarksSmoothingFilterActual.apply(i,this.timestamp,n,!0,l),this.landmarksSmoothingFilterAuxiliary==null&&(this.landmarksSmoothingFilterAuxiliary=new kv(jX)),s=this.landmarksSmoothingFilterAuxiliary.apply(s,this.timestamp,n,!0,l),this.worldLandmarksSmoothingFilterActual==null&&(this.worldLandmarksSmoothingFilterActual=new kv(XX)),a=this.worldLandmarksSmoothingFilterActual.apply(o,this.timestamp)}else i=t,s=e,a=o;return{actualLandmarksFiltered:i,auxiliaryLandmarksFiltered:s,actualWorldLandmarksFiltered:a}},r}();function tY(r){return ot(this,void 0,void 0,function(){var t,e,o,n,i,s;return nt(this,function(a){switch(a.label){case 0:return t=function(l){var u=yt({},l??Rc);if(u.enableSmoothing==null&&(u.enableSmoothing=Rc.enableSmoothing),u.enableSegmentation==null&&(u.enableSegmentation=Rc.enableSegmentation),u.smoothSegmentation==null&&(u.smoothSegmentation=Rc.smoothSegmentation),u.modelType==null&&(u.modelType=Rc.modelType),u.detectorModelUrl==null&&(u.detectorModelUrl=Rc.detectorModelUrl),u.landmarkModelUrl==null)switch(u.modelType){case"lite":u.landmarkModelUrl="https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/landmark/lite/2";break;case"heavy":u.landmarkModelUrl="https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/landmark/heavy/2";break;case"full":default:u.landmarkModelUrl="https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/landmark/full/2"}return u}(r),e=typeof t.detectorModelUrl=="string"&&t.detectorModelUrl.indexOf("https://tfhub.dev")>-1,o=typeof t.landmarkModelUrl=="string"&&t.landmarkModelUrl.indexOf("https://tfhub.dev")>-1,[4,Promise.all([Yi(t.detectorModelUrl,{fromTFHub:e}),Yi(t.landmarkModelUrl,{fromTFHub:o})])];case 1:return n=a.sent(),i=n[0],s=n[1],[2,new eY(i,s,t.enableSmoothing,t.enableSegmentation,t.smoothSegmentation,t.modelType)]}})})}var na,ir,qR=function(){function r(t){(function(e){if(e.maxTracks<1)throw new Error("Must specify 'maxTracks' to be at least 1, but "+"encountered ".concat(e.maxTracks));if(e.maxAge<=0)throw new Error("Must specify 'maxAge' to be positive, but "+"encountered ".concat(e.maxAge));if(e.keypointTrackerParams!==void 0){if(e.keypointTrackerParams.keypointConfidenceThreshold<0||e.keypointTrackerParams.keypointConfidenceThreshold>1)throw new Error("Must specify 'keypointConfidenceThreshold' to be in the range [0, 1], but encountered "+"".concat(e.keypointTrackerParams.keypointConfidenceThreshold));if(e.keypointTrackerParams.minNumberOfKeypoints<1)throw new Error("Must specify 'minNumberOfKeypoints' to be at least 1, but "+"encountered ".concat(e.keypointTrackerParams.minNumberOfKeypoints));for(var o=0,n=e.keypointTrackerParams.keypointFalloff;o<n.length;o++){var i=n[o];if(i<=0)throw new Error("Must specify each keypoint falloff parameterto be positive "+"but encountered ".concat(i))}}})(t),this.tracks=[],this.maxTracks=t.maxTracks,this.maxAge=1e3*t.maxAge,this.minSimilarity=t.minSimilarity,this.nextID=1}return r.prototype.apply=function(t,e){this.filterOldTracks(e);var o=this.computeSimilarity(t);return this.assignTracks(t,o,e),this.updateTracks(e),t},r.prototype.getTracks=function(){return this.tracks.slice()},r.prototype.getTrackIDs=function(){return new Set(this.tracks.map(function(t){return t.id}))},r.prototype.filterOldTracks=function(t){var e=this;this.tracks=this.tracks.filter(function(o){return t-o.lastTimestamp<=e.maxAge})},r.prototype.assignTracks=function(t,e,o){for(var n=Array.from(Array(e[0].length).keys()),i=[],s=0,a=Array.from(Array(t.length).keys());s<a.length;s++){var l=a[s];if(n.length!==0){for(var u=-1,c=-1,p=0,d=n;p<d.length;p++){var m=d[p],f=e[l][m];f>=this.minSimilarity&&f>c&&(u=m,c=f)}if(u>=0){var g=this.tracks[u];g=Object.assign(g,this.createTrack(t[l],o,g.id)),t[l].id=g.id;var x=n.indexOf(u);n.splice(x,1)}else i.push(l)}else i.push(l)}for(var y=0,b=i;y<b.length;y++){l=b[y];var T=this.createTrack(t[l],o);this.tracks.push(T),t[l].id=T.id}},r.prototype.updateTracks=function(t){this.tracks.sort(function(e,o){return o.lastTimestamp-e.lastTimestamp}),this.tracks=this.tracks.slice(0,this.maxTracks)},r.prototype.createTrack=function(t,e,o){var n={id:o||this.nextTrackID(),lastTimestamp:e,keypoints:oa([],t.keypoints,!0).map(function(i){return yt({},i)})};return t.box!==void 0&&(n.box=yt({},t.box)),n},r.prototype.nextTrackID=function(){var t=this.nextID;return this.nextID+=1,t},r.prototype.remove=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];this.tracks=this.tracks.filter(function(o){return!t.includes(o.id)})},r.prototype.reset=function(){this.tracks=[]},r}(),rY=function(r){function t(e){return r.call(this,e)||this}return LR(t,r),t.prototype.computeSimilarity=function(e){var o=this;return e.length===0||this.tracks.length===0?[[]]:e.map(function(n){return o.tracks.map(function(i){return o.iou(n,i)})})},t.prototype.iou=function(e,o){var n=Math.max(e.box.xMin,o.box.xMin),i=Math.max(e.box.yMin,o.box.yMin),s=Math.min(e.box.xMax,o.box.xMax),a=Math.min(e.box.yMax,o.box.yMax);if(n>=s||i>=a)return 0;var l=(s-n)*(a-i);return l/(e.box.width*e.box.height+o.box.width*o.box.height-l)},t}(qR),oY=function(r){function t(e){var o=r.call(this,e)||this;return o.keypointThreshold=e.keypointTrackerParams.keypointConfidenceThreshold,o.keypointFalloff=e.keypointTrackerParams.keypointFalloff,o.minNumKeyoints=e.keypointTrackerParams.minNumberOfKeypoints,o}return LR(t,r),t.prototype.computeSimilarity=function(e){if(e.length===0||this.tracks.length===0)return[[]];for(var o=[],n=0,i=e;n<i.length;n++){for(var s=i[n],a=[],l=0,u=this.tracks;l<u.length;l++){var c=u[l];a.push(this.oks(s,c))}o.push(a)}return o},t.prototype.oks=function(e,o){for(var n=this.area(o.keypoints)+1e-6,i=0,s=0,a=0;a<e.keypoints.length;++a){var l=e.keypoints[a],u=o.keypoints[a];if(!(l.score<this.keypointThreshold||u.score<this.keypointThreshold)){s+=1;var c=Math.pow(l.x-u.x,2)+Math.pow(l.y-u.y,2),p=2*this.keypointFalloff[a];i+=Math.exp(-1*c/(2*n*Math.pow(p,2)))}}return s<this.minNumKeyoints?0:i/s},t.prototype.area=function(e){var o=this,n=e.filter(function(l){return l.score>o.keypointThreshold}),i=Math.min.apply(Math,oa([1],n.map(function(l){return l.x}),!1)),s=Math.max.apply(Math,oa([0],n.map(function(l){return l.x}),!1)),a=Math.min.apply(Math,oa([1],n.map(function(l){return l.y}),!1));return(s-i)*(Math.max.apply(Math,oa([0],n.map(function(l){return l.y}),!1))-a)},t}(qR);function jR(r){switch(r){case ir.BlazePose:return Jp.reduce(function(t,e,o){return t[e]=o,t},{});case ir.PoseNet:case ir.MoveNet:return xn.reduce(function(t,e,o){return t[e]=o,t},{});default:throw new Error("Model ".concat(r," is not supported."))}}(function(r){r.Keypoint="keypoint",r.BoundingBox="boundingBox"})(na||(na={})),function(r){r.MoveNet="MoveNet",r.BlazePose="BlazePose",r.PoseNet="PoseNet"}(ir||(ir={}));var XR=Object.freeze({__proto__:null,getKeypointIndexBySide:function(r){switch(r){case ir.BlazePose:return vX;case ir.PoseNet:case ir.MoveNet:return bX;default:throw new Error("Model ".concat(r," is not supported."))}},getAdjacentPairs:function(r){switch(r){case ir.BlazePose:return wX;case ir.PoseNet:case ir.MoveNet:return SX;default:throw new Error("Model ".concat(r," is not supported."))}},getKeypointIndexByName:jR}),fR=["SinglePose.Lightning","SinglePose.Thunder","MultiPose.Lightning"],YR={modelType:"SinglePose.Lightning",enableSmoothing:!0},hR={},gR={frequency:30,minCutOff:2.5,beta:300,derivateCutOff:2.5,thresholdCutOff:.5,thresholdBeta:5,disableValueScaling:!0},Iv={maxTracks:18,maxAge:1e3,minSimilarity:.2,keypointTrackerParams:{keypointConfidenceThreshold:.3,keypointFalloff:[.026,.025,.025,.035,.035,.079,.079,.072,.072,.062,.062,.107,.107,.087,.087,.089,.089],minNumberOfKeypoints:4}},xR={maxTracks:18,maxAge:1e3,minSimilarity:.15,trackerParams:{}};function nY(r,t,e,o){for(var n={},i=0,s=xn;i<s.length;i++){var a=s[i];n[a]=[t[e[a]].y*o.height,t[e[a]].x*o.width]}if(function(b,T){return(b[T.left_hip].score>.2||b[T.right_hip].score>.2)&&(b[T.left_shoulder].score>.2||b[T.right_shoulder].score>.2)}(t,e)){var l=(n.left_hip[0]+n.right_hip[0])/2,u=(n.left_hip[1]+n.right_hip[1])/2,c=function(b,T,R,M,V){for(var z=["left_shoulder","right_shoulder","left_hip","right_hip"],H=0,K=0,X=0;X<z.length;X++)(Se=Math.abs(M-R[z[X]][0]))>H&&(H=Se),(Ee=Math.abs(V-R[z[X]][1]))>K&&(K=Ee);for(var te=0,ce=0,pe=0,ve=Object.keys(R);pe<ve.length;pe++){var Se,Ee,je=ve[pe];b[T[je]].score<.2||((Se=Math.abs(M-R[je][0]))>te&&(te=Se),(Ee=Math.abs(V-R[je][1]))>ce&&(ce=Ee))}return[H,K,te,ce]}(t,e,n,l,u),p=c[0],d=c[1],m=c[2],f=c[3],g=Math.max(1.9*d,1.9*p,1.2*m,1.2*f),x=[l-(g=Math.min(g,Math.max(u,o.width-u,l,o.height-l))),u-g];if(g>Math.max(o.width,o.height)/2)return Av(r==null,o);var y=2*g;return{yMin:x[0]/o.height,xMin:x[1]/o.width,yMax:(x[0]+y)/o.height,xMax:(x[1]+y)/o.width,height:(x[0]+y)/o.height-x[0]/o.height,width:(x[1]+y)/o.width-x[1]/o.width}}return Av(r==null,o)}function Av(r,t){var e,o,n,i;return r?t.width>t.height?(e=1,o=t.height/t.width,n=0,i=(t.width/2-t.height/2)/t.width):(e=t.width/t.height,o=1,n=(t.height/2-t.width/2)/t.height,i=0):t.width>t.height?(e=t.width/t.height,o=1,n=(t.height/2-t.width/2)/t.height,i=0):(e=1,o=t.height/t.width,n=0,i=(t.width/2-t.height/2)/t.width),{yMin:n,xMin:i,yMax:n+e,xMax:i+o,height:e,width:o}}function iY(r){var t,e=r==null?YR:yt({},r);if(e.modelType==null)e.modelType="SinglePose.Lightning";else if(fR.indexOf(e.modelType)<0)throw new Error("Invalid architecture ".concat(e.modelType,". ")+"Should be one of ".concat(fR));if(e.enableSmoothing==null&&(e.enableSmoothing=!0),e.minPoseScore!=null&&(e.minPoseScore<0||e.minPoseScore>1))throw new Error("minPoseScore should be between 0.0 and 1.0");if(e.multiPoseMaxDimension!=null&&(e.multiPoseMaxDimension%32!=0||e.multiPoseMaxDimension<32))throw new Error("multiPoseMaxDimension must be a multiple of 32 and higher than 0");if(e.modelType==="MultiPose.Lightning"&&e.enableTracking==null&&(e.enableTracking=!0),e.modelType==="MultiPose.Lightning"&&e.enableTracking===!0)if(e.trackerType==null&&(e.trackerType=na.BoundingBox),e.trackerType===na.Keypoint)e.trackerConfig!=null?e.trackerConfig=function(o){var n=yR(Iv,o);return n.keypointTrackerParams=yt({},Iv.keypointTrackerParams),o.keypointTrackerParams!=null&&(o.keypointTrackerParams.keypointConfidenceThreshold!=null&&(n.keypointTrackerParams.keypointConfidenceThreshold=o.keypointTrackerParams.keypointConfidenceThreshold),o.keypointTrackerParams.keypointFalloff!=null&&(n.keypointTrackerParams.keypointFalloff=o.keypointTrackerParams.keypointFalloff),o.keypointTrackerParams.minNumberOfKeypoints!=null&&(n.keypointTrackerParams.minNumberOfKeypoints=o.keypointTrackerParams.minNumberOfKeypoints)),n}(e.trackerConfig):e.trackerConfig=Iv;else{if(e.trackerType!==na.BoundingBox)throw new Error("Tracker type not supported by MoveNet");e.trackerConfig!=null?e.trackerConfig=(t=e.trackerConfig,yR(xR,t)):e.trackerConfig=xR}return e}function yR(r,t){var e={maxTracks:r.maxTracks,maxAge:r.maxAge,minSimilarity:r.minSimilarity};return t.maxTracks!=null&&(e.maxTracks=t.maxTracks),t.maxAge!=null&&(e.maxAge=t.maxAge),t.minSimilarity!=null&&(e.minSimilarity=t.minSimilarity),e}var sY=function(){function r(t,e){this.moveNetModel=t,this.modelInputResolution={height:0,width:0},this.keypointIndexByName=jR(ir.MoveNet),e.modelType==="SinglePose.Lightning"?(this.modelInputResolution.width=192,this.modelInputResolution.height=192):e.modelType==="SinglePose.Thunder"&&(this.modelInputResolution.width=256,this.modelInputResolution.height=256),this.multiPoseModel=e.modelType==="MultiPose.Lightning",this.multiPoseModel||(this.keypointFilter=new Pv(gR),this.cropRegionFilterYMin=new ts(.9),this.cropRegionFilterXMin=new ts(.9),this.cropRegionFilterYMax=new ts(.9),this.cropRegionFilterXMax=new ts(.9)),this.enableSmoothing=e.enableSmoothing,e.minPoseScore?this.minPoseScore=e.minPoseScore:this.minPoseScore=.25,e.multiPoseMaxDimension?this.multiPoseMaxDimension=e.multiPoseMaxDimension:this.multiPoseMaxDimension=256,this.enableTracking=e.enableTracking,this.multiPoseModel&&this.enableTracking&&(e.trackerType===na.Keypoint?this.tracker=new oY(e.trackerConfig):e.trackerType===na.BoundingBox&&(this.tracker=new rY(e.trackerConfig)),this.enableSmoothing&&(this.keypointFilterMap=new Map))}return r.prototype.runSinglePersonPoseModel=function(t){return ot(this,void 0,void 0,function(){var e,o,n,i,s;return nt(this,function(a){switch(a.label){case 0:if((e=this.moveNetModel.execute(t)).shape.length!==4||e.shape[0]!==1||e.shape[1]!==1||e.shape[2]!==17||e.shape[3]!==3)throw e.dispose(),new Error("Unexpected output shape from model: [".concat(e.shape,"]"));return an()==="webgpu"?[3,1]:(o=e.dataSync(),[3,3]);case 1:return[4,e.data()];case 2:o=a.sent(),a.label=3;case 3:for(e.dispose(),n={keypoints:[],score:0},i=0,s=0;s<17;++s)n.keypoints[s]={y:o[3*s],x:o[3*s+1],score:o[3*s+2]},n.keypoints[s].score>.2&&(++i,n.score+=n.keypoints[s].score);return i>0&&(n.score/=i),[2,n]}})})},r.prototype.runMultiPersonPoseModel=function(t){return ot(this,void 0,void 0,function(){var e,o,n,i,s,a,l,u;return nt(this,function(c){switch(c.label){case 0:if((e=this.moveNetModel.execute(t)).shape.length!==3||e.shape[0]!==1||e.shape[2]!==56)throw e.dispose(),new Error("Unexpected output shape from model: [".concat(e.shape,"]"));return an()==="webgpu"?[3,1]:(o=e.dataSync(),[3,3]);case 1:return[4,e.data()];case 2:o=c.sent(),c.label=3;case 3:for(e.dispose(),n=[],i=o.length/56,s=0;s<i;++s)for(n[s]={keypoints:[]},a=56*s+51,n[s].box={yMin:o[a],xMin:o[a+1],yMax:o[a+2],xMax:o[a+3],width:o[a+3]-o[a+1],height:o[a+2]-o[a]},l=56*s+55,n[s].score=o[l],n[s].keypoints=[],u=0;u<17;++u)n[s].keypoints[u]={y:o[56*s+3*u],x:o[56*s+3*u+1],score:o[56*s+3*u+2]};return[2,n]}})})},r.prototype.estimatePoses=function(t,e,o){return e===void 0&&(e=hR),ot(this,void 0,void 0,function(){var n,i,s,a,l,u;return nt(this,function(c){switch(c.label){case 0:return e=function(p){return p==null?hR:yt({},p)}(e),t==null?(this.reset(),[2,[]]):(o==null?HR(t)&&(o=1e6*t.currentTime):o*=1e3,n=Dv(t),i=$c(n),s=dr(n,0),t instanceof at||n.dispose(),a=[],this.multiPoseModel?[3,2]:[4,this.estimateSinglePose(s,i,o)]);case 1:return a=c.sent(),[3,4];case 2:return[4,this.estimateMultiplePoses(s,i,o)];case 3:a=c.sent(),c.label=4;case 4:for(l=0;l<a.length;++l)for(u=0;u<a[l].keypoints.length;++u)a[l].keypoints[u].name=xn[u],a[l].keypoints[u].y*=i.height,a[l].keypoints[u].x*=i.width;return[2,a]}})})},r.prototype.estimateSinglePose=function(t,e,o){return ot(this,void 0,void 0,function(){var n,i,s,a,l=this;return nt(this,function(u){switch(u.label){case 0:return this.cropRegion||(this.cropRegion=Av(this.cropRegion==null,e)),n=Ne(function(){var c=_r([[l.cropRegion.yMin,l.cropRegion.xMin,l.cropRegion.yMax,l.cropRegion.xMax]]),p=Sr([1],"int32"),d=[l.modelInputResolution.height,l.modelInputResolution.width];return Ue(Un.cropAndResize(t,c,p,d,"bilinear",0),"int32")}),t.dispose(),[4,this.runSinglePersonPoseModel(n)];case 1:if(i=u.sent(),n.dispose(),i.score<this.minPoseScore)return this.reset(),[2,[]];for(s=0;s<i.keypoints.length;++s)i.keypoints[s].y=this.cropRegion.yMin+i.keypoints[s].y*this.cropRegion.height,i.keypoints[s].x=this.cropRegion.xMin+i.keypoints[s].x*this.cropRegion.width;return o!=null&&this.enableSmoothing&&(i.keypoints=this.keypointFilter.apply(i.keypoints,o,1)),a=nY(this.cropRegion,i.keypoints,this.keypointIndexByName,e),this.cropRegion=this.filterCropRegion(a),[2,[i]]}})})},r.prototype.estimateMultiplePoses=function(t,e,o){return ot(this,void 0,void 0,function(){var n,i,s,a,l,u,c,p,d,m,f,g=this;return nt(this,function(x){switch(x.label){case 0:return e.width>e.height?(i=this.multiPoseMaxDimension,s=Math.round(this.multiPoseMaxDimension*e.height/e.width),n=Un.resizeBilinear(t,[s,i]),l=i,u=32*Math.ceil(s/32),a=qr(n,[[0,0],[0,u-s],[0,0],[0,0]])):(i=Math.round(this.multiPoseMaxDimension*e.width/e.height),s=this.multiPoseMaxDimension,n=Un.resizeBilinear(t,[s,i]),l=32*Math.ceil(i/32),u=s,a=qr(n,[[0,0],[0,0],[0,l-i],[0,0]])),n.dispose(),t.dispose(),c=Ue(a,"int32"),a.dispose(),[4,this.runMultiPersonPoseModel(c)];case 1:for(p=x.sent(),c.dispose(),p=p.filter(function(y){return y.score>=g.minPoseScore}),m=0;m<p.length;++m)for(d=0;d<p[m].keypoints.length;++d)p[m].keypoints[d].y*=u/s,p[m].keypoints[d].x*=l/i;if(this.enableTracking&&(this.tracker.apply(p,o),this.enableSmoothing)){for(m=0;m<p.length;++m)this.keypointFilterMap.has(p[m].id)||this.keypointFilterMap.set(p[m].id,new Pv(gR)),p[m].keypoints=this.keypointFilterMap.get(p[m].id).apply(p[m].keypoints,o,1);f=this.tracker.getTrackIDs(),this.keypointFilterMap.forEach(function(y,b){f.has(b)||g.keypointFilterMap.delete(b)})}return[2,p]}})})},r.prototype.filterCropRegion=function(t){if(t){var e=this.cropRegionFilterYMin.apply(t.yMin),o=this.cropRegionFilterXMin.apply(t.xMin),n=this.cropRegionFilterYMax.apply(t.yMax),i=this.cropRegionFilterXMax.apply(t.xMax);return{yMin:e,xMin:o,yMax:n,xMax:i,height:n-e,width:i-o}}return this.cropRegionFilterYMin.reset(),this.cropRegionFilterXMin.reset(),this.cropRegionFilterYMax.reset(),this.cropRegionFilterXMax.reset(),null},r.prototype.dispose=function(){this.moveNetModel.dispose()},r.prototype.reset=function(){this.cropRegion=null,this.resetFilters()},r.prototype.resetFilters=function(){this.keypointFilter.reset(),this.cropRegionFilterYMin.reset(),this.cropRegionFilterXMin.reset(),this.cropRegionFilterYMax.reset(),this.cropRegionFilterXMax.reset()},r}();function aY(r){return r===void 0&&(r=YR),ot(this,void 0,void 0,function(){var t,e,o,n;return nt(this,function(i){switch(i.label){case 0:return t=iY(r),o=!0,t.modelUrl?(o=typeof t.modelUrl=="string"&&t.modelUrl.indexOf("https://tfhub.dev")>-1,[4,Yi(t.modelUrl,{fromTFHub:o})]):[3,2];case 1:return e=i.sent(),[3,4];case 2:return n=void 0,t.modelType==="SinglePose.Lightning"?n="https://tfhub.dev/google/tfjs-model/movenet/singlepose/lightning/4":t.modelType==="SinglePose.Thunder"?n="https://tfhub.dev/google/tfjs-model/movenet/singlepose/thunder/4":t.modelType==="MultiPose.Lightning"&&(n="https://tfhub.dev/google/tfjs-model/movenet/multipose/lightning/1"),[4,Yi(n,{fromTFHub:o})];case 3:e=i.sent(),i.label=4;case 4:return an()==="webgl"&&G().set("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",0),[2,new sY(e,t)]}})})}var vR={architecture:"MobileNetV1",outputStride:16,multiplier:.75,inputResolution:{height:257,width:257}},bR=["MobileNetV1","ResNet50"],SR={MobileNetV1:[8,16],ResNet50:[16]},lY=[8,16,32],wR={MobileNetV1:[.5,.75,1],ResNet50:[1]},_R=[1,2,4],CR={maxPoses:1,flipHorizontal:!1},uY={maxPoses:5,flipHorizontal:!1,scoreThreshold:.5,nmsRadius:20},cY=[-123.15,-115.9,-103.06];function Tv(r){return Math.floor(r/2)}var pY=function(){function r(t,e){this.priorityQueue=new Array(t),this.numberOfElements=-1,this.getElementValue=e}return r.prototype.enqueue=function(t){this.priorityQueue[++this.numberOfElements]=t,this.swim(this.numberOfElements)},r.prototype.dequeue=function(){var t=this.priorityQueue[0];return this.exchange(0,this.numberOfElements--),this.sink(0),this.priorityQueue[this.numberOfElements+1]=null,t},r.prototype.empty=function(){return this.numberOfElements===-1},r.prototype.size=function(){return this.numberOfElements+1},r.prototype.all=function(){return this.priorityQueue.slice(0,this.numberOfElements+1)},r.prototype.max=function(){return this.priorityQueue[0]},r.prototype.swim=function(t){for(;t>0&&this.less(Tv(t),t);)this.exchange(t,Tv(t)),t=Tv(t)},r.prototype.sink=function(t){for(;2*t<=this.numberOfElements;){var e=2*t;if(e<this.numberOfElements&&this.less(e,e+1)&&e++,!this.less(t,e))break;this.exchange(t,e),t=e}},r.prototype.getValueAt=function(t){return this.getElementValue(this.priorityQueue[t])},r.prototype.less=function(t,e){return this.getValueAt(t)<this.getValueAt(e)},r.prototype.exchange=function(t,e){var o=this.priorityQueue[t];this.priorityQueue[t]=this.priorityQueue[e],this.priorityQueue[e]=o},r}();function dY(r,t,e,o,n,i){for(var s=i.shape,a=s[0],l=s[1],u=!0,c=Math.max(e-n,0),p=Math.min(e+n+1,a),d=c;d<p;++d){for(var m=Math.max(o-n,0),f=Math.min(o+n+1,l),g=m;g<f;++g)if(i.get(d,g,r)>t){u=!1;break}if(!u)break}return u}function mY(r){return ot(this,void 0,void 0,function(){return nt(this,function(t){return[2,Promise.all(r.map(function(e){return e.buffer()}))]})})}function QR(r,t,e,o){return{y:o.get(r,t,e),x:o.get(r,t,e+17)}}function ZR(r,t,e){var o=QR(r.heatmapY,r.heatmapX,r.id,e),n=o.y,i=o.x;return{x:r.heatmapX*t+i,y:r.heatmapY*t+n}}function JR(r,t,e,o){var n=e.x,i=e.y;return r.some(function(s){var a,l,u,c,p,d,m=s.keypoints;return a=i,l=n,u=m[o].y,c=m[o].x,(p=u-a)*p+(d=c-l)*d<=t})}var kR=xn.reduce(function(r,t,e){return r[t]=e,r},{}),e$=[["nose","left_eye"],["left_eye","left_ear"],["nose","right_eye"],["right_eye","right_ear"],["nose","left_shoulder"],["left_shoulder","left_elbow"],["left_elbow","left_wrist"],["left_shoulder","left_hip"],["left_hip","left_knee"],["left_knee","left_ankle"],["nose","right_shoulder"],["right_shoulder","right_elbow"],["right_elbow","right_wrist"],["right_shoulder","right_hip"],["right_hip","right_knee"],["right_knee","right_ankle"]].map(function(r){var t=r[0],e=r[1];return[kR[t],kR[e]]}),Ev=e$.map(function(r){return r[1]}),IR=e$.map(function(r){return r[0]});function TR(r,t,e){return r<t?t:r>e?e:r}function Nv(r,t,e,o){return{y:TR(Math.round(r.y/t),0,e-1),x:TR(Math.round(r.x/t),0,o-1)}}function ER(r,t){return{x:r.x+t.x,y:r.y+t.y}}function NR(r,t,e,o,n,i,s,a){a===void 0&&(a=2);for(var l=o.shape,u=l[0],c=l[1],p={y:t.y,x:t.x},d=ER(p,function(b,T,R){var M=R.shape[2]/2;return{y:R.get(T.y,T.x,b),x:R.get(T.y,T.x,M+b)}}(r,Nv(p,i,u,c),s)),m=0;m<a;m++){var f=Nv(d,i,u,c),g=QR(f.y,f.x,e,n);d=ER({x:f.x*i,y:f.y*i},{x:g.x,y:g.y})}var x=Nv(d,i,u,c),y=o.get(x.y,x.x,e);return{y:d.y,x:d.x,name:xn[e],score:y}}function fY(r,t,e,o,n,i){var s=t.shape[2],a=Ev.length,l=new Array(s),u=r.part,c=r.score,p=ZR(u,o,e);l[u.id]={score:c,name:xn[u.id],y:p.y,x:p.x};for(var d=a-1;d>=0;--d){var m=Ev[d],f=IR[d];l[m]&&!l[f]&&(l[f]=NR(d,l[m],f,t,e,o,i))}for(d=0;d<a;++d)m=IR[d],f=Ev[d],l[m]&&!l[f]&&(l[f]=NR(d,l[m],f,t,e,o,n));return l}function hY(r,t,e){return e.reduce(function(o,n,i){var s=n.y,a=n.x,l=n.score;return JR(r,t,{y:s,x:a},i)||(o+=l),o},0)/e.length}function gY(r,t,e,o,n,i,s,a){return s===void 0&&(s=.5),a===void 0&&(a=20),ot(this,void 0,void 0,function(){var l,u,c,p,d,m,f,g,x,y,b,T;return nt(this,function(R){switch(R.label){case 0:return[4,mY([r,t,e,o])];case 1:for(l=R.sent(),u=l[0],c=l[1],p=l[2],d=l[3],m=[],f=function(M,V,z){for(var H=z.shape,K=H[0],X=H[1],te=H[2],ce=new pY(K*X*te,function(je){return je.score}),pe=0;pe<K;++pe)for(var ve=0;ve<X;++ve)for(var Se=0;Se<te;++Se){var Ee=z.get(pe,ve,Se);Ee<M||dY(Se,Ee,pe,ve,V,z)&&ce.enqueue({score:Ee,part:{heatmapY:pe,heatmapX:ve,id:Se}})}return ce}(s,1,u),g=a*a;m.length<i&&!f.empty();)x=f.dequeue(),y=ZR(x.part,n,c),JR(m,g,y,x.part.id)||(b=fY(x,u,c,n,p,d),T=hY(m,g,b),m.push({keypoints:b,score:T}));return[2,m]}})})}function t$(){for(var r,t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];switch(t.length){case 0:r="fn main() ";break;case 1:r="fn main(".concat(t[0]," : i32)");break;default:throw Error("Unreachable")}return r}var xY=function(){function r(t){this.variableNames=["A","B"],this.size=!0,this.workgroupSize=[32,1,1],this.outputShape=[t[0],1],this.dispatchLayout=Ji.flatDispatchLayout(this.outputShape),this.dispatch=Ji.computeDispatch(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="getpointsConfidenceOp"}return r.prototype.getUserCode=function(){return`
        `.concat(t$("index"),` {
          if (index < uniforms.size) {
            let y = B[index * 2];
            let x = B[index * 2 + 1];
            let outIndex = y * uniforms.aShape.x * uniforms.aShape.z + x * uniforms.aShape.z + index;
            result[index] = A[outIndex];
          }
        }
        `)},r}();function yY(r,t){if(Li()instanceof yc)return function(e,o){var n=Li(),i=new xY(o.shape),s=n.runWebGPUProgram(i,[e,o],"float32");return cr().makeTensorFromTensorInfo(s)}(r,t);throw new Error("getPointsConfidenceWebGPU is not supported in this backend!")}var vY=function(){function r(t){if(this.variableNames=["A","B"],this.size=!0,this.supportedLastDimension=2,t.length!==2||t[1]!==this.supportedLastDimension)throw new Error("GetOffsetVectorsProgram only supports shape of [x, ".concat(this.supportedLastDimension,"], but current shape is ").concat(t));this.workgroupSize=[32,1,1],this.outputShape=t;var e=[t[0],1];this.dispatchLayout=Ji.flatDispatchLayout(e),this.dispatch=Ji.computeDispatch(this.dispatchLayout,e,this.workgroupSize),this.shaderKey="GetOffsetVectors"}return r.prototype.getUserCode=function(){return`
    fn getOffsetPoint(y: i32, x: i32, index: i32) -> vec2<i32> {
      let outIndexY = y * uniforms.bShape.x * uniforms.bShape.y + x * uniforms.bShape.y + index;
      let outIndexX = outIndexY + uniforms.bShape.z;
      let outY = i32(B[outIndexY]);
      let outX = i32(B[outIndexX]);
      return vec2<i32>(outY, outX);
    }

    `.concat(t$("index"),` {
      if (index < uniforms.size) {
        let indexY = index * `).concat(this.supportedLastDimension,`;
        let indexX = indexY + 1;
        let heatmapY = A[indexY];
        let heatmapX = A[indexX];
        let out = getOffsetPoint(i32(heatmapY), i32(heatmapX), index);
        result[indexY] = f32(out[0]);
        result[indexX] = f32(out[1]);
      }
    }
    `)},r}();function bY(r,t){if(Li()instanceof yc)return function(e,o){var n=Li(),i=new vY(e.shape),s=n.runWebGPUProgram(i,[e,o],"float32");return cr().makeTensorFromTensorInfo(s)}(r,t);throw new Error("getOffsetVectorsGPU is not supported in this backend!")}function r$(r){var t=r.shape,e=t[0],o=t[1],n=t[2];return Ne(function(){var i,s,a=Y(r,[e*o,n]),l=Hm(a,0),u=dr(Fe(l,Re(o,"int32")),1),c=dr((i=l,s=o,Ne(function(){var p=Fe(i,Re(s,"int32"));return $e(i,ae(p,Re(s,"int32")))})),1);return mt([u,c],1)})}function SY(r,t,e){return Ne(function(){var o=function(n,i){for(var s=[],a=0;a<xn.length;a++){var l=n.get(a,0).valueOf(),u=n.get(a,1).valueOf(),c=wY(l,u,a,i),p=c.x,d=c.y;s.push(d),s.push(p)}return _r(s,[xn.length,2])}(r,e);return he(Ue(ae(r.toTensor(),Re(t,"int32")),"float32"),o)})}function wY(r,t,e,o){return{y:o.get(r,t,e),x:o.get(r,t,e+xn.length)}}function _Y(r,t,e){return ot(this,void 0,void 0,function(){var o,n,i,s,a,l,u,c,p,d;return nt(this,function(m){switch(m.label){case 0:return o=0,n=r$(r),[4,Promise.all([r.buffer(),t.buffer(),n.buffer()])];case 1:return i=m.sent(),s=i[0],a=i[1],l=i[2],[4,(u=SY(l,e,a)).buffer()];case 2:return c=m.sent(),p=Array.from(function(f,g){for(var x=g.shape[0],y=new Float32Array(x),b=0;b<x;b++){var T=g.get(b,0),R=g.get(b,1);y[b]=f.get(T,R,b)}return y}(s,l)),d=p.map(function(f,g){return o+=f,{y:c.get(g,0),x:c.get(g,1),score:f,name:xn[g]}}),n.dispose(),u.dispose(),[2,{keypoints:d,score:o/d.length}]}})})}function CY(r,t,e){return ot(this,void 0,void 0,function(){var o,n,i;return nt(this,function(s){return o=r$(r),n=function(a,l,u){return Ne(function(){var c=bY(a,u);return he(Ue(ae(a,Re(l,"int32")),"float32"),c)})}(o,e,t),i=yY(r,o),[2,[n,i]]})})}function RR(r,t){return(r-1)%t==0}var $R="https://storage.googleapis.com/tfjs-models/savedmodel/posenet/mobilenet/",PR="https://storage.googleapis.com/tfjs-models/savedmodel/posenet/resnet50/";function AR(r,t){return function(e,o){return(e-1)%o==0}(r,t)?r:Math.floor(r/t)*t+1}var DR=function(){function r(t,e){this.posenetModel=t;var o=this.posenetModel.inputs[0].shape;S.assert(o[1]===-1&&o[2]===-1,function(){return"Input shape [".concat(o[1],", ").concat(o[2],"] ")+"must both be equal to or -1"});var n,i,s=(n=e.inputResolution,i=e.outputStride,{height:AR(n.height,i),width:AR(n.width,i)});(function(a){S.assert(lY.indexOf(a)>=0,function(){return"outputStride of ".concat(a," is invalid. ")+"It must be either 8 or 16."})})(e.outputStride),function(a,l){S.assert(RR(a.height,l),function(){return"height of ".concat(a.height," is invalid for output stride ")+"".concat(l,".")}),S.assert(RR(a.width,l),function(){return"width of ".concat(a.width," is invalid for output stride ")+"".concat(l,".")})}(s,e.outputStride),this.inputResolution=s,this.outputStride=e.outputStride,this.architecture=e.architecture}return r.prototype.estimatePoses=function(t,e){return e===void 0&&(e=CR),ot(this,void 0,void 0,function(){return nt(this,function(o){return[2,this.estimatePosesGPU(t,e,!1)]})})},r.prototype.estimatePosesGPU=function(t,e,o){return e===void 0&&(e=CR),o===void 0&&(o=!1),ot(this,void 0,void 0,function(){var n,i,s,a,l,u,c,p,d,m,f,g,x,y,b,T,R,M;return nt(this,function(V){switch(V.label){case 0:return n=function(z){var H=z;if(H.maxPoses==null&&(H.maxPoses=1),H.maxPoses<=0)throw new Error("Invalid maxPoses ".concat(H.maxPoses,". Should be > 0."));if(H.maxPoses>1){if((H=yt(yt({},uY),H)).scoreThreshold<0||H.scoreThreshold>1)throw new Error("Invalid scoreThreshold ".concat(H.scoreThreshold,". ")+"Should be in range [0.0, 1.0]");if(H.nmsRadius<=0)throw new Error("Invalid nmsRadius ".concat(H.nmsRadius,"."))}return H}(e),t==null?[2,o?[[],[]]:[]]:(this.maxPoses=n.maxPoses,i=$v(t,{outputTensorSize:this.inputResolution,keepAspectRatio:!0,borderMode:"replicate"}),s=i.imageTensor,a=i.padding,l=this.architecture==="ResNet50"?he(s,cY):GR(s,[-1,1]),u=this.posenetModel.predict(l),this.architecture==="ResNet50"?(c=ct(u[2],[0]),p=ct(u[3],[0]),d=ct(u[0],[0]),m=ct(u[1],[0])):(c=ct(u[0],[0]),p=ct(u[1],[0]),d=ct(u[2],[0]),m=ct(u[3],[0])),f=Kr(p),this.maxPoses!==1?[3,5]:o?[4,CY(f,c,this.outputStride)]:[3,2]);case 1:return x=V.sent(),b=x[0],y=x[1],g=[b,y],[3,4];case 2:return[4,_Y(f,c,this.outputStride)];case 3:b=V.sent(),g=[b],V.label=4;case 4:return[3,7];case 5:if(o)throw new Error("GPU renderer only supports single pose!");return[4,gY(f,c,d,m,this.outputStride,this.maxPoses,n.scoreThreshold,n.nmsRadius)];case 6:g=V.sent(),V.label=7;case 7:if(o){if(n.flipHorizontal===!0)throw new Error("flipHorizontal is not supported!");T=this.getCanvasInfo($c(t),this.inputResolution,a)}else M=$c(t),R=function(z,H,K,X){var te=H.height,ce=H.width,pe=te/(K.height*(1-X.top-X.bottom)),ve=ce/(K.width*(1-X.left-X.right)),Se=-X.top*K.height,Ee=-X.left*K.width;if(ve===1&&pe===1&&Se===0&&Ee===0)return z;for(var je=0,Xe=z;je<Xe.length;je++)for(var st=0,jt=Xe[je].keypoints;st<jt.length;st++){var Jt=jt[st];Jt.x=(Jt.x+Ee)*ve,Jt.y=(Jt.y+Se)*pe}return z}(g,M,this.inputResolution,a),n.flipHorizontal&&(R=function(z,H){for(var K=0,X=z;K<X.length;K++)for(var te=0,ce=X[K].keypoints;te<ce.length;te++){var pe=ce[te];pe.x=H.width-1-pe.x}return z}(R,M));return s.dispose(),l.dispose(),Ye(u),c.dispose(),p.dispose(),d.dispose(),m.dispose(),f.dispose(),[2,o?[g,T]:R]}})})},r.prototype.getCanvasInfo=function(t,e,o){var n=t.height,i=t.width,s=n/(e.height*(1-o.top-o.bottom)),a=i/(e.width*(1-o.left-o.right)),l=-o.top*e.height;return[-o.left*e.width,l,a,s,t.width,t.height]},r.prototype.dispose=function(){this.posenetModel.dispose()},r.prototype.reset=function(){},r}();function kY(r){return r===void 0&&(r=vR),ot(this,void 0,void 0,function(){var t,e,o,n,i;return nt(this,function(s){switch(s.label){case 0:return(t=function(c){var p=c||vR;if(p.architecture==null&&(p.architecture="MobileNetV1"),bR.indexOf(p.architecture)<0)throw new Error("Invalid architecture ".concat(p.architecture,". ")+"Should be one of ".concat(bR));if(p.inputResolution==null&&(p.inputResolution={height:257,width:257}),p.outputStride==null&&(p.outputStride=16),SR[p.architecture].indexOf(p.outputStride)<0)throw new Error("Invalid outputStride ".concat(p.outputStride,". ")+"Should be one of ".concat(SR[p.architecture]," ")+"for architecture ".concat(p.architecture,"."));if(p.multiplier==null&&(p.multiplier=1),wR[p.architecture].indexOf(p.multiplier)<0)throw new Error("Invalid multiplier ".concat(p.multiplier,". ")+"Should be one of ".concat(wR[p.architecture]," ")+"for architecture ".concat(p.architecture,"."));if(p.quantBytes==null&&(p.quantBytes=4),_R.indexOf(p.quantBytes)<0)throw new Error("Invalid quantBytes ".concat(p.quantBytes,". ")+"Should be one of ".concat(_R," ")+"for architecture ".concat(p.architecture,"."));if(p.architecture==="MobileNetV1"&&p.outputStride===32&&p.multiplier!==1)throw new Error("When using an output stride of 32, you must select 1 as the multiplier.");return p}(r)).architecture!=="ResNet50"?[3,2]:(a=t.outputStride,l=t.quantBytes,u="model-stride".concat(a,".json"),e=l===4?PR+"float/"+u:PR+"quant".concat(l,"/")+u,[4,Yi(t.modelUrl||e)]);case 1:return o=s.sent(),[2,new DR(o,t)];case 2:return n=function(c,p,d){var m={1:"100",.75:"075",.5:"050"},f="model-stride".concat(c,".json");return d===4?$R+"float/".concat(m[p],"/")+f:$R+"quant".concat(d,"/").concat(m[p],"/")+f}(t.outputStride,t.multiplier,t.quantBytes),[4,Yi(t.modelUrl||n)];case 3:return i=s.sent(),[2,new DR(i,t)]}var a,l,u})})}function o$(r,t){return ot(this,void 0,void 0,function(){var e,o;return nt(this,function(n){switch(r){case ir.PoseNet:return[2,kY(t)];case ir.BlazePose:if(o=void 0,(e=t)!=null){if(e.runtime==="tfjs")return[2,tY(t)];if(e.runtime==="mediapipe")return[2,TX(t)];o=e.runtime}throw new Error("Expect modelConfig.runtime to be either 'tfjs' "+"or 'mediapipe', but got ".concat(o));case ir.MoveNet:return[2,aY(t)];default:throw new Error("".concat(r," is not a supported model name."))}})})}var n$={modelType:{SINGLEPOSE_LIGHTNING:"SinglePose.Lightning",SINGLEPOSE_THUNDER:"SinglePose.Thunder",MULTIPOSE_LIGHTNING:"MultiPose.Lightning"}};var ia={},Kg={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function i$(r,t){ia[r]=t}function to(r,t){if(!(r in ia)||t!=null){let o=EY(r,t);if(o!==null)ia[r]=o;else return console.log("Could not get context for WebGL version",r),null}let e=ia[r];return e==null||e.isContextLost()?(delete ia[r],to(r)):(e.disable(e.DEPTH_TEST),e.disable(e.STENCIL_TEST),e.disable(e.BLEND),e.disable(e.DITHER),e.disable(e.POLYGON_OFFSET_FILL),e.disable(e.SAMPLE_COVERAGE),e.enable(e.SCISSOR_TEST),e.enable(e.CULL_FACE),e.cullFace(e.BACK),ia[r])}function TY(r){if(!G().getBool("IS_SAFARI")&&typeof OffscreenCanvas<"u"&&r===2)return new OffscreenCanvas(300,150);if(typeof document<"u")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function EY(r,t){if(r!==1&&r!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");let e=t??TY(r);return e.addEventListener("webglcontextlost",o=>{o.preventDefault(),delete ia[r]},!1),G().getBool("SOFTWARE_WEBGL_ENABLED")&&(Kg.failIfMajorPerformanceCaveat=!1),r===1?e.getContext("webgl",Kg)||e.getContext("experimental-webgl",Kg):e.getContext("webgl2",Kg)}var sa=function(r){return r[r.DENSE=0]="DENSE",r[r.SHARED_BATCH=1]="SHARED_BATCH",r}(sa||{}),fr=function(r){return r[r.RENDER=0]="RENDER",r[r.UPLOAD=1]="UPLOAD",r[r.PIXELS=2]="PIXELS",r[r.DOWNLOAD=3]="DOWNLOAD",r}(fr||{}),sr=function(r){return r[r.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",r[r.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",r[r.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",r[r.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",r[r.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16",r}(sr||{});function aa(r,t){return[t,r]}function s$(r,t){return r*t}function ed(r){let t=S.sizeFromShape(r),e=Math.ceil(t/4);return S.sizeToSquarishShape(e)}function yn(r,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(r/2))]}function a$(r,t){let[e,o]=yn(r,t);return e*o*4}function td(r,t){let e=r,o,n,i,s,a,l,u,c,p,d;return G().getNumber("WEBGL_VERSION")===2?(o=e.R32F,n=e.R16F,i=e.RGBA16F,s=e.RGBA32F,a=e.RED,u=4,c=1,p=e.HALF_FLOAT,d=e.FLOAT,l=e.RGBA8):(o=r.RGBA,n=r.RGBA,i=r.RGBA,s=e.RGBA,a=r.RGBA,u=4,c=4,p=t!=null?t.HALF_FLOAT_OES:null,d=r.FLOAT,l=r.RGBA),{internalFormatFloat:o,internalFormatHalfFloat:n,internalFormatPackedHalfFloat:i,internalFormatPackedFloat:s,textureFormatFloat:a,downloadTextureFormat:l,downloadUnpackNumChannels:u,defaultNumChannels:c,textureTypeHalfFloat:p,textureTypeFloat:d}}function be(r,t){let e=t();return G().getBool("DEBUG")&&NY(r),e}function NY(r){let t=r.getError();if(t!==r.NO_ERROR)throw new Error("WebGL Error: "+PY(r,t))}var RY=596e-10,$Y=65504;function l$(r){return!!(G().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||r===0||RY<Math.abs(r)&&Math.abs(r)<$Y)}function PY(r,t){switch(t){case r.NO_ERROR:return"NO_ERROR";case r.INVALID_ENUM:return"INVALID_ENUM";case r.INVALID_VALUE:return"INVALID_VALUE";case r.INVALID_OPERATION:return"INVALID_OPERATION";case r.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case r.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case r.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}function rd(r,t){return jn(r,()=>r.getExtension(t),'Extension "'+t+'" not supported on this browser.')}function u$(r,t){let e=jn(r,()=>r.createShader(r.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(be(r,()=>r.shaderSource(e,t)),be(r,()=>r.compileShader(e)),r.getShaderParameter(e,r.COMPILE_STATUS)===!1)throw console.log(r.getShaderInfoLog(e)),new Error("Failed to compile vertex shader.");return e}function c$(r,t){let e=jn(r,()=>r.createShader(r.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(be(r,()=>r.shaderSource(e,t)),be(r,()=>r.compileShader(e)),G().get("ENGINE_COMPILE_ONLY"))return e;if(r.getShaderParameter(e,r.COMPILE_STATUS)===!1)throw Bv(t,r.getShaderInfoLog(e)),new Error("Failed to compile fragment shader.");return e}var AY=/ERROR: [0-9]+:([0-9]+):/g;function Bv(r,t){let e=AY.exec(t);if(e==null){console.log(`Couldn't parse line number in error: ${t}`),console.log(r);return}let o=+e[1],n=r.split(`
`),i=n.length.toString().length+2,s=n.map((p,d)=>S.rightPad((d+1).toString(),i)+p),a=0;for(let p=0;p<s.length;p++)a=Math.max(s[p].length,a);let l=s.slice(0,o-1),u=s.slice(o-1,o),c=s.slice(o);console.log(l.join(`
`)),console.log(t.split(`
`)[0]),console.log(`%c ${S.rightPad(u[0],a)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join(`
`))}function p$(r){return jn(r,()=>r.createProgram(),"Unable to create WebGLProgram.")}function d$(r,t){if(be(r,()=>r.linkProgram(t)),!G().get("ENGINE_COMPILE_ONLY")&&r.getProgramParameter(t,r.LINK_STATUS)===!1)throw console.log(r.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}function jg(r,t){if(be(r,()=>r.validateProgram(t)),r.getProgramParameter(t,r.VALIDATE_STATUS)===!1)throw console.log(r.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function m$(r,t){let e=jn(r,()=>r.createBuffer(),"Unable to create WebGLBuffer");return be(r,()=>r.bindBuffer(r.ARRAY_BUFFER,e)),be(r,()=>r.bufferData(r.ARRAY_BUFFER,t,r.STATIC_DRAW)),e}function f$(r,t){let e=jn(r,()=>r.createBuffer(),"Unable to create WebGLBuffer");return be(r,()=>r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,e)),be(r,()=>r.bufferData(r.ELEMENT_ARRAY_BUFFER,t,r.STATIC_DRAW)),e}function h$(r){return jn(r,()=>r.createTexture(),"Unable to create WebGLTexture.")}function g$(r,t){let e=G().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(r<=0||t<=0){let o=`[${r}x${t}]`;throw new Error("Requested texture size "+o+" is invalid.")}if(r>e||t>e){let o=`[${r}x${t}]`,n=`[${e}x${e}]`;throw new Error("Requested texture size "+o+" greater than WebGL maximum on this browser / GPU "+n+".")}}function x$(r){return jn(r,()=>r.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function Vv(r,t,e,o,n,i,s){let a=r.getAttribLocation(t,e);return a===-1?!1:(be(r,()=>r.bindBuffer(r.ARRAY_BUFFER,o)),be(r,()=>r.vertexAttribPointer(a,n,r.FLOAT,!1,i,s)),be(r,()=>r.enableVertexAttribArray(a)),!0)}function DY(r,t,e){OY(r,e),be(r,()=>r.activeTexture(r.TEXTURE0+e)),be(r,()=>r.bindTexture(r.TEXTURE_2D,t))}function y$(r,t,e){return jn(r,()=>r.getUniformLocation(t,e),'uniform "'+e+'" not present in program.')}function v$(r,t,e){return r.getUniformLocation(t,e)}function b$(r,t,e,o){be(r,()=>DY(r,t,o)),be(r,()=>r.uniform1i(e,o))}function Xg(r,t,e){be(r,()=>r.bindFramebuffer(r.FRAMEBUFFER,e)),be(r,()=>r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,t,0))}function Wv(r,t){be(r,()=>r.bindFramebuffer(r.FRAMEBUFFER,t)),be(r,()=>r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,null,0))}function od(r){let t=r.checkFramebufferStatus(r.FRAMEBUFFER);if(t!==r.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+FY(r,t))}function FY(r,t){switch(t){case r.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case r.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case r.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case r.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}function jn(r,t,e){let o=be(r,()=>t());if(o==null)throw new Error(e);return o}function OY(r,t){let e=r.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,o=t+r.TEXTURE0;if(o<r.TEXTURE0||o>e){let n=`[gl.TEXTURE0, gl.TEXTURE${e}]`;throw new Error(`textureUnit must be in ${n}.`)}}function rs(r,t=2){return S.sizeFromShape(r.slice(0,r.length-t))}function os(r){if(r.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[r.length>1?r[r.length-2]:1,r[r.length-1]]}function nd(r){let t=[1,1,1];return r.length===0||r.length===1&&r[0]===1||(t=[rs(r),...os(r)]),t}function S$(r,t=!1){let e=G().getNumber("WEBGL_MAX_TEXTURE_SIZE"),o=G().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");o===1/0&&G().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(o=e/2),t&&(e=e*2,o=o*2,r=r.map((a,l)=>l>=r.length-2?S.nearestLargerEven(r[l]):r[l]),r.length===1&&(r=[2,r[0]])),r.length!==2&&(r=S.squeezeShape(r).newShape);let n=S.sizeFromShape(r),i=null;r.length<=1&&n<=e?i=[1,n]:r.length===2&&r[0]<=e&&r[1]<=e?i=r:r.length===3&&r[0]*r[1]<=e&&r[2]<=e?i=[r[0]*r[1],r[2]]:r.length===3&&r[0]<=e&&r[1]*r[2]<=e?i=[r[0],r[1]*r[2]]:r.length===4&&r[0]*r[1]*r[2]<=e&&r[3]<=e?i=[r[0]*r[1]*r[2],r[3]]:r.length===4&&r[0]<=e&&r[1]*r[2]*r[3]<=e&&(i=[r[0],r[1]*r[2]*r[3]]);let s=i!=null&&Math.max(...i)>o&&Math.min(...i)<=(t?2:1)&&Math.min(...i)>0;if(i==null||s)if(t){let a=rs(r),l=2,u=2;r.length&&([l,u]=os(r)),n=a*(l/2)*(u/2),i=S.sizeToSquarishShape(n).map(c=>c*2)}else i=S.sizeToSquarishShape(n);return i}function qg(r){return r%2===0}function la(r,t){if(r=r.slice(-2),t=t.slice(-2),S.arraysEqual(r,t)||!r.length||!t.length||r[0]===0||r[1]===0||t[0]===0||t[1]===0)return!0;if(r.length!==t.length){let e=r[r.length-1],o=t[t.length-1];if(e===o||qg(e)&&qg(o)&&(r[0]===1||t[0]===1))return!0}return r[1]===t[1]&&qg(r[0])&&qg(t[0])}var Ov,Lv;function w$(r){if(Ov==null){let t=to(r);Ov=t.getParameter(t.MAX_TEXTURE_SIZE)}return Ov}function _$(r){if(Lv==null){let t=to(r);Lv=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,Lv)}function C$(r){if(r===0)return 0;let t,e=to(r);return xo(e,"EXT_disjoint_timer_query_webgl2")&&r===2?t=2:xo(e,"EXT_disjoint_timer_query")?t=1:t=0,t}function xo(r,t){return r.getExtension(t)!=null}function zv(r){try{if(to(r)!=null)return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function k$(r){if(r===0)return!1;let t=to(r);if(r===1){if(!xo(t,"OES_texture_float"))return!1}else if(!xo(t,"EXT_color_buffer_float"))return!1;return Mv(t)}function I$(r){if(r===0)return!1;let t=to(r);if(r===1){if(!xo(t,"OES_texture_float")||!xo(t,"WEBGL_color_buffer_float"))return!1}else{if(xo(t,"EXT_color_buffer_float"))return Mv(t);let o="EXT_color_buffer_half_float";if(xo(t,o)){let n=t.getExtension(o);return LY(t,n)}return!1}return Mv(t)}function Mv(r){let t=td(r),e=r.createTexture();r.bindTexture(r.TEXTURE_2D,e),r.texImage2D(r.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);let i=r.createFramebuffer();r.bindFramebuffer(r.FRAMEBUFFER,i),r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,e,0);let s=r.checkFramebufferStatus(r.FRAMEBUFFER)===r.FRAMEBUFFER_COMPLETE;return r.bindTexture(r.TEXTURE_2D,null),r.bindFramebuffer(r.FRAMEBUFFER,null),r.deleteTexture(e),r.deleteFramebuffer(i),s}function LY(r,t){let e=td(r,t),o=r.createTexture();r.bindTexture(r.TEXTURE_2D,o),r.texImage2D(r.TEXTURE_2D,0,e.internalFormatHalfFloat,1,1,0,e.textureFormatFloat,e.textureTypeHalfFloat,null);let s=r.createFramebuffer();r.bindFramebuffer(r.FRAMEBUFFER,s),r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,o,0);let a=r.checkFramebufferStatus(r.FRAMEBUFFER)===r.FRAMEBUFFER_COMPLETE;return r.bindTexture(r.TEXTURE_2D,null),r.bindFramebuffer(r.FRAMEBUFFER,null),r.deleteTexture(o),r.deleteFramebuffer(s),a}function T$(r){return r!==2?!1:to(r).fenceSync!=null}function vn(r,t){Array.isArray(r)||(r=[r]),r.forEach(e=>{e!=null&&S.assert(e.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the WebGL backend.`)})}var Pe=G();Pe.registerFlag("HAS_WEBGL",()=>Pe.getNumber("WEBGL_VERSION")>0);Pe.registerFlag("WEBGL_VERSION",()=>zv(2)?2:zv(1)?1:0);Pe.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);Pe.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>Pe.get("WEBGL_VERSION")===2);Pe.registerFlag("WEBGL_CPU_FORWARD",()=>!0);Pe.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);Pe.registerFlag("WEBGL_PACK",()=>Pe.getBool("HAS_WEBGL"));Pe.registerFlag("WEBGL_PACK_NORMALIZATION",()=>Pe.getBool("WEBGL_PACK"));Pe.registerFlag("WEBGL_PACK_CLIP",()=>Pe.getBool("WEBGL_PACK"));Pe.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>Pe.getBool("WEBGL_PACK"));Pe.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>Pe.getBool("WEBGL_PACK"));Pe.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>Pe.getBool("WEBGL_PACK"));Pe.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>Pe.getBool("WEBGL_PACK"));Pe.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>Pe.getBool("WEBGL_PACK"));Pe.registerFlag("WEBGL_PACK_REDUCE",()=>Pe.getBool("WEBGL_PACK"));Pe.registerFlag("WEBGL_LAZILY_UNPACK",()=>Pe.getBool("WEBGL_PACK"));Pe.registerFlag("WEBGL_CONV_IM2COL",()=>Pe.getBool("WEBGL_PACK"));Pe.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",()=>Pe.getBool("WEBGL_PACK"));Pe.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>w$(Pe.getNumber("WEBGL_VERSION")));Pe.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>_$(Pe.getNumber("WEBGL_VERSION")));Pe.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{let r=Pe.getNumber("WEBGL_VERSION");return r===0?0:C$(r)});Pe.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>Pe.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!Oi.isMobile());Pe.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>k$(Pe.getNumber("WEBGL_VERSION")));Pe.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>Pe.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:Pe.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));Pe.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>I$(Pe.getNumber("WEBGL_VERSION")));Pe.registerFlag("WEBGL_FENCE_API_ENABLED",()=>T$(Pe.getNumber("WEBGL_VERSION")));Pe.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>Pe.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);Pe.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,r=>{if(typeof r!="number")throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but got ${r}.`);if(r<0&&r!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${r}.`)});Pe.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>Oi.isMobile()?1:-1,r=>{if(typeof r!="number")throw new Error(`WEBGL_FLUSH_THRESHOLD must be a number but got ${r}.`);if(r<0&&r!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${r}.`)});Pe.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128);Pe.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1);Pe.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5);Pe.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128);Pe.registerFlag("WEBGL_EXP_CONV",()=>!1);Pe.registerFlag("SOFTWARE_WEBGL_ENABLED",()=>Pe.getBool("IS_TEST"));Pe.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",()=>1/0);Pe.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",()=>!1);Pe.registerFlag("WEBGL2_ISNAN_CUSTOM",()=>!1);Pe.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);function _t(){let r,t,e,o,n,i,s,a,l,u;return G().getNumber("WEBGL_VERSION")===2?(r="#version 300 es",t="in",e="out",o="in",n="texture",i="outputColor",s="out vec4 outputColor;",a=G().getBool("WEBGL2_ISNAN_CUSTOM")?`
      bool isnan_custom(float val) {
        uint floatToUint = floatBitsToUint(val);
        return (floatToUint & 0x7fffffffu) > 0x7f800000u;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `:"",l="",u=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(r="",t="attribute",e="varying",o="varying",n="texture2D",i="gl_FragColor",s="",a=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,l=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,u=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:r,attribute:t,varyingVs:e,varyingFs:o,texture2D:n,output:i,defineOutput:s,defineSpecialNaN:a,defineSpecialInf:l,defineRound:u}}function qo(r,t,e="index"){let o=S.computeStrides(t);return o.map((n,i)=>{let s=`int ${r[i]} = ${e} / ${n}`,a=i===o.length-1?`int ${r[i+1]} = ${e} - ${r[i]} * ${n}`:`index -= ${r[i]} * ${n}`;return`${s}; ${a};`}).join("")}function ua(r,t,e="index"){let o=S.computeStrides(t);return o.map((n,i)=>{let s=`int ${r[i]} = ${e} / outShapeStrides[${i}]`,a=i===o.length-1?`int ${r[i+1]} = ${e} - ${r[i]} * outShapeStrides[${i}]`:`index -= ${r[i]} * outShapeStrides[${i}]`;return`${s}; ${a};`}).join("")}function MY(r,t){let e=r.length,o=r.map(i=>`${t}[${i}]`),n=new Array(e-1);n[e-2]=o[e-1];for(let i=e-3;i>=0;--i)n[i]=`(${n[i+1]} * ${o[i+1]})`;return n}function E$(r,t,e="index"){let o=r.map((i,s)=>s),n=MY(o,t);return n.map((i,s)=>{let a=`int ${r[s]} = ${e} / ${n[s]}`,l=s===n.length-1?`int ${r[s+1]} = ${e} - ${r[s]} * ${n[s]}`:`index -= ${r[s]} * ${n[s]}`;return`${a}; ${l};`}).join("")}function Pc(r){let t=S.computeStrides(r).map(e=>e.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;
  }
`}function Ac(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}var Qg=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`;var{getBroadcastDims:N$}=$;function R$(r,t,e){let o=[];if(r.forEach(m=>{let f=S.sizeFromShape(m.shapeInfo.logicalShape);if(m.shapeInfo.isUniform?o.push(`uniform float ${m.name}${f>1?`[${f}]`:""};`):(o.push(`uniform sampler2D ${m.name};`),o.push(`uniform int offset${m.name};`)),e.enableShapeUniforms){let{uniformShape:g}=Zg(e.packedInputs,m.shapeInfo.logicalShape,m.shapeInfo.texShape);switch(g.length){case 1:o.push(`uniform int ${m.name}Shape;`);break;case 2:o.push(`uniform ivec2 ${m.name}Shape;`);break;case 3:o.push(`uniform ivec3 ${m.name}Shape;`);break;case 4:o.push(`uniform ivec4 ${m.name}Shape;`);break;default:break}o.push(`uniform ivec2 ${m.name}TexShape;`)}}),e.enableShapeUniforms){switch(t.logicalShape.length){case 1:o.push("uniform int outShape;");break;case 2:o.push("uniform ivec2 outShape;"),o.push("uniform int outShapeStrides;");break;case 3:o.push("uniform ivec3 outShape;"),o.push("uniform ivec2 outShapeStrides;");break;case 4:o.push("uniform ivec4 outShape;"),o.push("uniform ivec3 outShapeStrides;");break;default:break}o.push("uniform ivec2 outTexShape;")}e.customUniforms&&e.customUniforms.forEach(m=>{o.push(`uniform ${m.type} ${m.name}${m.arrayIndex?`[${m.arrayIndex}]`:""};`)});let n=o.join(`
`),i=r.map(m=>BY(m,t,e.packedInputs,e.enableShapeUniforms)).join(`
`),s=t.texShape,a=_t(),l=zY(a),u,c,p=HY(a);return t.isPacked?(u=VY(t.logicalShape,s,e.enableShapeUniforms),c=GY(a)):(u=WY(t.logicalShape,s,e.enableShapeUniforms),c=UY(a)),e.packedInputs&&(p+=XY),[p,l,c,n,u,i,e.userCode].join(`
`)}function Fc(r,t=!1){let e=r.shapeInfo.logicalShape;switch(e.length){case 0:return aQ(r,t);case 1:return uQ(r,t);case 2:return pQ(r,t);case 3:return mQ(r,t);case 4:return hQ(r,t);case 5:return gQ(r);case 6:return xQ(r);default:throw new Error(`${e.length}-D input sampling is not yet supported`)}}function $$(r,t){switch(r.shapeInfo.logicalShape.length){case 0:return sQ(r);case 1:return lQ(r,t);case 2:return cQ(r,t);case 3:return dQ(r,t);default:return fQ(r,t)}}function BY(r,t,e=!1,o){let n="";e?n+=$$(r,o):n+=Fc(r,o);let i=r.shapeInfo.logicalShape,s=t.logicalShape;return i.length<=s.length&&(e?n+=yQ(r,t):n+=vQ(r,t)),n}function VY(r,t,e){switch(r.length){case 0:return P$();case 1:return YY(r,t,e);case 2:return nQ(r,t,e);case 3:return ZY(r,t,e);default:return eQ(r,t,e)}}function WY(r,t,e){switch(r.length){case 0:return P$();case 1:return QY(r,t,e);case 2:return iQ(r,t,e);case 3:return JY(r,t,e);case 4:return tQ(r,t,e);case 5:return rQ(r,t);case 6:return oQ(r,t);default:throw new Error(`${r.length}-D output sampling is not yet supported`)}}function zY(r){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${r.texture2D}(textureSampler, uv).r;
    }
  `}function UY(r){return`
    void setOutput(float val) {
      ${r.output} = vec4(val, 0, 0, 0);
    }
  `}function GY(r){return`
    void setOutput(vec4 val) {
      ${r.output} = val;
    }
  `}function HY(r){return`${r.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${r.varyingFs} vec2 resultUV;
    ${r.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${r.defineSpecialNaN}
    ${r.defineSpecialInf}
    ${r.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${KY}
    ${qY}
    ${jY}
  `}var KY=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,qY=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,jY=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,XY=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function P$(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function YY(r,t,e){let o=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return o[0]===1?e?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${o[1]}.0);
      }
    `:o[1]===1?e?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${o[0]}.0);
      }
    `:e?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${o[0]}, ${o[1]}));
      return 2 * (resTexRC.x * ${o[1]} + resTexRC.y);
    }
  `}function QY(r,t,e){return t[0]===1?e?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${t[1]}.0);
      }
    `:t[1]===1?e?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${t[0]}.0);
      }
    `:e?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      return resTexRC.x * ${t[1]} + resTexRC.y;
    }
  `}function ZY(r,t,e){if(e)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;let o=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],n=Math.ceil(r[2]/2),i=n*Math.ceil(r[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${o[0]}, ${o[1]}));
      int index = resTexRC.x * ${o[1]} + resTexRC.y;

      int b = index / ${i};
      index -= b * ${i};

      int r = 2 * (index / ${n});
      int c = imod(index, ${n}) * 2;

      return ivec3(b, r, c);
    }
  `}function JY(r,t,e){if(e)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${ua(["r","c","d"],r)}
    return ivec3(r, c, d);
  }
`;let o=qo(["r","c","d"],r);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${o}
      return ivec3(r, c, d);
    }
  `}function eQ(r,t,e){if(e)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;let o=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],n=Math.ceil(r[r.length-1]/2),i=n*Math.ceil(r[r.length-2]/2),s=i,a="",l="b, r, c";for(let u=2;u<r.length-1;u++)s*=r[r.length-u-1],a=`
      int b${u} = index / ${s};
      index -= b${u} * ${s};
    `+a,l=`b${u}, `+l;return`
    ivec${r.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${o[0]}, ${o[1]}));
      int index = resTexRC.x * ${o[1]} + resTexRC.y;

      ${a}

      int b = index / ${i};
      index -= b * ${i};

      int r = 2 * (index / ${n});
      int c = imod(index, ${n}) * 2;

      return ivec${r.length}(${l});
    }
  `}function tQ(r,t,e){if(e)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${ua(["r","c","d","d2"],r)}
      return ivec4(r, c, d, d2);
    }
  `;let o=qo(["r","c","d","d2"],r);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${o}
      return ivec4(r, c, d, d2);
    }
  `}function rQ(r,t){let e=qo(["r","c","d","d2","d3"],r);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},
                             ${t[1]}));

      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${e}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function oQ(r,t){let e=qo(["r","c","d","d2","d3","d4"],r);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${e}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function nQ(r,t,e){let o=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(S.arraysEqual(r,t))return e?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${o[0]}, ${o[1]}));
      }
    `;let n=Math.ceil(r[1]/2);return e?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${o[0]}, ${o[1]}));

      int index = resTexRC.x * ${o[1]} + resTexRC.y;
      int r = 2 * (index / ${n});
      int c = imod(index, ${n}) * 2;

      return ivec2(r, c);
    }
  `}function iQ(r,t,e){return S.arraysEqual(r,t)?e?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));
      }
    `:r[1]===1?e?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:r[0]===1?e?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:e?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      int r = index / ${r[1]};
      int c = index - r * ${r[1]};
      return ivec2(r, c);
    }
  `}function ca(r){return`offset${r}`}function sQ(r){let t=r.name,e="get"+t.charAt(0).toUpperCase()+t.slice(1),o=_t();return`
    vec4 ${e}() {
      return ${o.texture2D}(${t}, halfCR);
    }
  `}function aQ(r,t){let e=r.name,o="get"+e.charAt(0).toUpperCase()+e.slice(1);if(r.shapeInfo.isUniform)return`float ${o}() {return ${e};}`;let[n,i]=r.shapeInfo.texShape;if(n===1&&i===1)return`
      float ${o}() {
        return sampleTexture(${e}, halfCR);
      }
    `;let s=ca(e);if(t)return`
    float ${o}() {
      vec2 uv = uvFromFlat(${e}TexShape[0], ${e}TexShape[1], ${s});
      return sampleTexture(${e}, uv);
    }
  `;let[a,l]=r.shapeInfo.texShape;return`
    float ${o}() {
      vec2 uv = uvFromFlat(${a}, ${l}, ${s});
      return sampleTexture(${e}, uv);
    }
  `}function lQ(r,t){let e=r.name,o="get"+e.charAt(0).toUpperCase()+e.slice(1),n=r.shapeInfo.texShape,i=_t();if(t)return`
    vec4 ${o}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${e}TexShape[0]) / 2.0), ceil(float(${e}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${i.texture2D}(${e}, uv);
    }
  `;let s=[Math.ceil(n[0]/2),Math.ceil(n[1]/2)];return`
    vec4 ${o}(int index) {
      vec2 uv = packedUVfrom1D(
        ${s[0]}, ${s[1]}, index);
      return ${i.texture2D}(${e}, uv);
    }
  `}function uQ(r,t){let e=r.name,o="get"+e.charAt(0).toUpperCase()+e.slice(1);if(r.shapeInfo.isUniform)return`
      float ${o}(int index) {
        ${Oc(r)}
      }
    `;let n=r.shapeInfo.texShape,i=n[0],s=n[1];if(s===1&&i===1)return`
      float ${o}(int index) {
        return sampleTexture(${e}, halfCR);
      }
    `;let a=ca(e);return s===1?t?`
      float ${o}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${a}) + 0.5) / float(${e}TexShape[0]));
        return sampleTexture(${e}, uv);
      }
    `:`
      float ${o}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${a}) + 0.5) / ${i}.0);
        return sampleTexture(${e}, uv);
      }
    `:i===1?t?`
      float ${o}(int index) {
        vec2 uv = vec2((float(index + ${a}) + 0.5) / float(${e}TexShape[1]), 0.5);
        return sampleTexture(${e}, uv);
      }
    `:`
      float ${o}(int index) {
        vec2 uv = vec2((float(index + ${a}) + 0.5) / ${s}.0, 0.5);
        return sampleTexture(${e}, uv);
      }
    `:t?`
    float ${o}(int index) {
      vec2 uv = uvFromFlat(${e}TexShape[0], ${e}TexShape[1], index + ${a});
      return sampleTexture(${e}, uv);
    }
  `:`
    float ${o}(int index) {
      vec2 uv = uvFromFlat(${i}, ${s}, index + ${a});
      return sampleTexture(${e}, uv);
    }
  `}function cQ(r,t){let e=r.shapeInfo.logicalShape,o=r.name,n="get"+o.charAt(0).toUpperCase()+o.slice(1),i=r.shapeInfo.texShape,s=i[0],a=i[1],l=_t();if(i!=null&&S.arraysEqual(e,i))return t?`
      vec4 ${n}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}TexShape[1], ${o}TexShape[0]);

        return ${l.texture2D}(${o}, uv);
      }
    `:`
      vec4 ${n}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${a}.0, ${s}.0);

        return ${l.texture2D}(${o}, uv);
      }
    `;if(t)return`
    vec4 ${n}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${o}TexShape[0]) / 2.0), ceil(float(${o}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${o}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${l.texture2D}(${o}, uv);
    }
  `;let u=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],c=Math.ceil(e[1]/2);return`
    vec4 ${n}(int row, int col) {
      vec2 uv = packedUVfrom2D(${c}, ${u[0]}, ${u[1]}, row, col);
      return ${l.texture2D}(${o}, uv);
    }
  `}function pQ(r,t){let e=r.shapeInfo.logicalShape,o=r.name,n="get"+o.charAt(0).toUpperCase()+o.slice(1),i=r.shapeInfo.texShape;if(i!=null&&S.arraysEqual(e,i)){if(t)return`
      float ${n}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}TexShape[1], ${o}TexShape[0]);
        return sampleTexture(${o}, uv);
      }
    `;let d=i[0],m=i[1];return`
    float ${n}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${m}.0, ${d}.0);
      return sampleTexture(${o}, uv);
    }
  `}let{newShape:s,keptDims:a}=S.squeezeShape(e),l=s;if(l.length<e.length){let d=Lc(r,l),m=["row","col"];return`
      ${Fc(d,t)}
      float ${n}(int row, int col) {
        return ${n}(${Mc(m,a)});
      }
    `}if(r.shapeInfo.isUniform)return`
      float ${n}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${e[1]}, 1)));
        ${Oc(r)}
      }
    `;let u=i[0],c=i[1],p=ca(o);return c===1?t?`
      float ${n}(int row, int col) {
        float index = dot(vec3(row, col, ${p}), vec3(${o}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${o}TexShape[0]));
        return sampleTexture(${o}, uv);
      }
    `:`
    float ${n}(int row, int col) {
      float index = dot(vec3(row, col, ${p}), vec3(${e[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);
      return sampleTexture(${o}, uv);
    }
  `:u===1?t?`
      float ${n}(int row, int col) {
        float index = dot(vec3(row, col, ${p}), vec3(${o}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${o}TexShape[1]), 0.5);
        return sampleTexture(${o}, uv);
      }
    `:`
    float ${n}(int row, int col) {
      float index = dot(vec3(row, col, ${p}), vec3(${e[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${c}.0, 0.5);
      return sampleTexture(${o}, uv);
    }
  `:t?`
      float ${n}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${o}Shape[1] + col + ${p};
        vec2 uv = uvFromFlat(${o}TexShape[0], ${o}TexShape[1], index);
        return sampleTexture(${o}, uv);
      }
    `:`
  float ${n}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${e[1]} + col + ${p};
    vec2 uv = uvFromFlat(${u}, ${c}, index);
    return sampleTexture(${o}, uv);
  }
`}function dQ(r,t){let e=r.shapeInfo.logicalShape,o=r.name,n="get"+o.charAt(0).toUpperCase()+o.slice(1),i=r.shapeInfo.texShape,s=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)];if(e[0]===1){let d=e.slice(1),m=[1,2],f=Lc(r,d),g=["b","row","col"];return`
        ${$$(f,t)}
        vec4 ${n}(int b, int row, int col) {
          return ${n}(${Mc(g,m)});
        }
      `}let a=_t();if(t)return`
    vec4 ${n}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${o}TexShape[0]) / 2.0), ceil(float(${o}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${o}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${o}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${a.texture2D}(${o}, uv);
    }
  `;let l=s[0],u=s[1],c=Math.ceil(e[2]/2),p=c*Math.ceil(e[1]/2);return`
    vec4 ${n}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${l}, ${u}, ${p}, ${c}, b, row, col);
      return ${a.texture2D}(${o}, uv);
    }
  `}function mQ(r,t){let e=r.shapeInfo.logicalShape,o=r.name,n="get"+o.charAt(0).toUpperCase()+o.slice(1),i=e[1]*e[2],s=e[2],{newShape:a,keptDims:l}=S.squeezeShape(e),u=a;if(u.length<e.length){let g=Lc(r,u),x=["row","col","depth"];return`
        ${Fc(g,t)}
        float ${n}(int row, int col, int depth) {
          return ${n}(${Mc(x,l)});
        }
      `}if(r.shapeInfo.isUniform)return`
      float ${n}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${i}, ${s}, 1)));
        ${Oc(r)}
      }
    `;let c=r.shapeInfo.texShape,p=c[0],d=c[1],m=r.shapeInfo.flatOffset;if(d===i&&m==null)return t?`
      float ${n}(int row, int col, int depth) {
        int stride1 = ${o}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${o}TexShape[1], ${o}TexShape[0]);
        return sampleTexture(${o}, uv);
      }
    `:`
        float ${n}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${s}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${d}.0, ${p}.0);
          return sampleTexture(${o}, uv);
        }
      `;if(d===s&&m==null)return t?`
      float ${n}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${o}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${o}TexShape[1], ${o}TexShape[0]);
        return sampleTexture(${o}, uv);
      }
    `:`
    float ${n}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${e[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}.0, ${p}.0);
      return sampleTexture(${o}, uv);
    }
  `;let f=ca(o);return t?`
    float ${n}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${o}Shape[1] * ${o}Shape[2];
      int stride1 = ${o}Shape[2];
      int index = row * stride0 + col * stride1 + depth + ${f};
      vec2 uv = uvFromFlat(${o}TexShape[0], ${o}TexShape[1], index);
      return sampleTexture(${o}, uv);
    }
    `:`
      float ${n}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${i} + col * ${s} + depth + ${f};
        vec2 uv = uvFromFlat(${p}, ${d}, index);
        return sampleTexture(${o}, uv);
      }
  `}function fQ(r,t){let e=r.name,o="get"+e.charAt(0).toUpperCase()+e.slice(1),n=_t();if(t)return`
    vec4 ${o}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${e}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${e}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${e}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${e}TexShape[0]) / 2.0), ceil(float(${e}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${n.texture2D}(${e}, uv);
    }
  `;let i=r.shapeInfo.logicalShape,s=i.length,a=r.shapeInfo.texShape,l=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],u=l[0],c=l[1],p=Math.ceil(i[s-1]/2),d=p*Math.ceil(i[s-2]/2),m="int b, int row, int col",f=`b * ${d} + (row / 2) * ${p} + (col / 2)`;for(let g=2;g<s-1;g++)m=`int b${g}, `+m,d*=i[s-g-1],f=`b${g} * ${d} + `+f;return`
    vec4 ${o}(${m}) {
      int index = ${f};
      int texR = index / ${c};
      int texC = index - texR * ${c};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}, ${u});
      return ${n.texture2D}(${e}, uv);
    }
  `}function hQ(r,t){let e=r.shapeInfo.logicalShape,o=r.name,n="get"+o.charAt(0).toUpperCase()+o.slice(1),i=e[3],s=e[2]*i,a=e[1]*s,{newShape:l,keptDims:u}=S.squeezeShape(e);if(l.length<e.length){let b=Lc(r,l),T=["row","col","depth","depth2"];return`
      ${Fc(b,t)}
      float ${n}(int row, int col, int depth, int depth2) {
        return ${n}(${Mc(T,u)});
      }
    `}if(r.shapeInfo.isUniform)return`
      float ${n}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${a}, ${s}, ${i}, 1)));
        ${Oc(r)}
      }
    `;let c=r.shapeInfo.flatOffset,p=r.shapeInfo.texShape,d=p[0],m=p[1],f=`int stride2 = ${o}Shape[3];`,g=`int stride1 = ${o}Shape[2] * stride2;`,x=`int stride0 = ${o}Shape[1] * stride1;`;if(m===a&&c==null)return t?`
      float ${n}(int row, int col, int depth, int depth2) {
        ${f}
        ${g}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${o}TexShape[1], ${o}TexShape[0]);
        return sampleTexture(${o}, uv);
      }
    `:`
      float ${n}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${s}, ${i}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${m}.0, ${d}.0);
        return sampleTexture(${o}, uv);
      }
    `;if(m===i&&c==null)return t?`
      float ${n}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${o}Shape[1] * ${o}Shape[2], ${o}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${o}TexShape[1], ${o}TexShape[0]);
        return sampleTexture(${o}, uv);
      }
    `:`
      float ${n}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${e[1]*e[2]}, ${e[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${m}.0, ${d}.0);
        return sampleTexture(${o}, uv);
      }
    `;let y=ca(o);return t?`
    float ${n}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${f}
      ${g}
      ${x}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${o}TexShape[0], ${o}TexShape[1], index + ${y});
      return sampleTexture(${o}, uv);
    }
  `:`
    float ${n}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${a} + col * ${s} +
          depth * ${i} + depth2;
      vec2 uv = uvFromFlat(${d}, ${m}, index + ${y});
      return sampleTexture(${o}, uv);
    }
  `}function gQ(r){let t=r.shapeInfo.logicalShape,e=r.name,o="get"+e.charAt(0).toUpperCase()+e.slice(1),n=t[4],i=t[3]*n,s=t[2]*i,a=t[1]*s,{newShape:l,keptDims:u}=S.squeezeShape(t);if(l.length<t.length){let g=Lc(r,l),x=["row","col","depth","depth2","depth3"];return`
      ${Fc(g)}
      float ${o}(int row, int col, int depth, int depth2, int depth3) {
        return ${o}(${Mc(x,u)});
      }
    `}if(r.shapeInfo.isUniform)return`
      float ${o}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${a}, ${s}, ${i}, ${n})) +
          depth3;
        ${Oc(r)}
      }
    `;let c=r.shapeInfo.flatOffset,p=r.shapeInfo.texShape,d=p[0],m=p[1];if(m===a&&c==null)return`
      float ${o}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${s}, ${i}, ${n}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${m}.0, ${d}.0);
        return sampleTexture(${e}, uv);
      }
    `;if(m===n&&c==null)return`
      float ${o}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]},
               ${t[2]*t[3]}, ${t[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${m}.0, ${d}.0);
        return sampleTexture(${e}, uv);
      }
    `;let f=ca(e);return`
    float ${o}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${a} + col * ${s} + depth * ${i} +
          depth2 * ${n} + depth3 + ${f};
      vec2 uv = uvFromFlat(${d}, ${m}, index);
      return sampleTexture(${e}, uv);
    }
  `}function xQ(r){let t=r.shapeInfo.logicalShape,e=r.name,o="get"+e.charAt(0).toUpperCase()+e.slice(1),{newShape:n,keptDims:i}=S.squeezeShape(t);if(n.length<t.length){let x=Lc(r,n),y=["row","col","depth","depth2","depth3","depth4"];return`
      ${Fc(x)}
      float ${o}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${o}(${Mc(y,i)});
      }
    `}let s=t[5],a=t[4]*s,l=t[3]*a,u=t[2]*l,c=t[1]*u;if(r.shapeInfo.isUniform)return`
      float ${o}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${c}, ${u}, ${l}, ${a})) +
          dot(
            vec2(depth3, depth4),
            vec2(${s}, 1)));
        ${Oc(r)}
      }
    `;let p=r.shapeInfo.flatOffset,d=r.shapeInfo.texShape,m=d[0],f=d[1];if(f===c&&p==null)return`
      float ${o}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${u}, ${l}, ${a}, ${s})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${m}.0);
        return sampleTexture(${e}, uv);
      }
    `;if(f===s&&p==null)return`
      float ${o}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]*t[4]},
               ${t[2]*t[3]*t[4]},
               ${t[3]*t[4]},
               ${t[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${m}.0);
        return sampleTexture(${e}, uv);
      }
    `;let g=ca(e);return`
    float ${o}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${c} + col * ${u} + depth * ${l} +
          depth2 * ${a} + depth3 * ${s} + depth4 + ${g};
      vec2 uv = uvFromFlat(${m}, ${f}, index);
      return sampleTexture(${e}, uv);
    }
  `}function Oc(r){let t=r.name,e=S.sizeFromShape(r.shapeInfo.logicalShape);return e<2?`return ${t};`:`
    for (int i = 0; i < ${e}; i++) {
      if (i == index) {
        return ${t}[i];
      }
    }
  `}function yQ(r,t){let e=r.name,o=e.charAt(0).toUpperCase()+e.slice(1),n="get"+o+"AtOutCoords",i=r.shapeInfo.logicalShape.length,s=t.logicalShape.length,a=N$(r.shapeInfo.logicalShape,t.logicalShape),l=Be(s),u=s-i,c,p=["x","y","z","w","u","v"];i===0?c="":s<2&&a.length>=1?c="coords = 0;":c=a.map(b=>`coords.${p[b+u]} = 0;`).join(`
`);let d="";s<2&&i>0?d="coords":d=r.shapeInfo.logicalShape.map((b,T)=>`coords.${p[T+u]}`).join(", ");let m="return outputValue;",g=S.sizeFromShape(r.shapeInfo.logicalShape)===1,y=S.sizeFromShape(t.logicalShape)===1;if(i===1&&!g&&!y)m=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(g&&!y)s===1?m=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:m=`
        return vec4(outputValue.x);
      `;else if(a.length){let b=i-2,T=i-1;a.indexOf(b)>-1&&a.indexOf(T)>-1?m="return vec4(outputValue.x);":a.indexOf(b)>-1?m="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":a.indexOf(T)>-1&&(m="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${n}() {
      ${l} coords = getOutputCoords();
      ${c}
      vec4 outputValue = get${o}(${d});
      ${m}
    }
  `}function vQ(r,t){let e=r.name,o=e.charAt(0).toUpperCase()+e.slice(1),n="get"+o+"AtOutCoords",i=t.texShape,s=r.shapeInfo.texShape,a=r.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!r.shapeInfo.isUniform&&a===l&&r.shapeInfo.flatOffset==null&&S.arraysEqual(s,i))return`
      float ${n}() {
        return sampleTexture(${e}, resultUV);
      }
    `;let u=Be(l),c=N$(r.shapeInfo.logicalShape,t.logicalShape),p=l-a,d,m=["x","y","z","w","u","v"];a===0?d="":l<2&&c.length>=1?d="coords = 0;":d=c.map(g=>`coords.${m[g+p]} = 0;`).join(`
`);let f="";return l<2&&a>0?f="coords":f=r.shapeInfo.logicalShape.map((g,x)=>`coords.${m[x+p]}`).join(", "),`
    float ${n}() {
      ${u} coords = getOutputCoords();
      ${d}
      return get${o}(${f});
    }
  `}function Be(r){if(r<=1)return"int";if(r===2)return"ivec2";if(r===3)return"ivec3";if(r===4)return"ivec4";if(r===5)return"ivec5";if(r===6)return"ivec6";throw Error(`GPU for rank ${r} is not yet supported`)}function Zg(r,t,e){let{newShape:o,keptDims:n}=S.squeezeShape(t),i=t.length,s=r&&i===3&&t[0]===1,a=s?t.slice(1):o,l=!r&&i>1&&!S.arraysEqual(t,e)&&o.length<i||s;return{useSqueezeShape:l,uniformShape:l?a:t,keptDims:n}}function Lc(r,t){let e=JSON.parse(JSON.stringify(r));return e.shapeInfo.logicalShape=t,e}function Mc(r,t){return t.map(e=>r[e]).join(", ")}function D$(r,t,e,o){let n=e.map((c,p)=>{let d={logicalShape:c.shape,texShape:c.isUniform?null:c.texData.texShape,isUniform:c.isUniform,isPacked:c.isUniform?!1:c.texData.isPacked,flatOffset:null};return c.texData!=null&&c.texData.slice!=null&&c.texData.slice.flatOffset>0&&(d.flatOffset=c.texData.slice.flatOffset),{name:t.variableNames[p],shapeInfo:d}}),i=n.map(c=>c.shapeInfo),s={logicalShape:o.shape,texShape:o.texData.texShape,isUniform:!1,isPacked:o.texData.isPacked,flatOffset:null},a=R$(n,s,t),l=c$(r.gl,a),u=r.createProgram(l);return G().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:l,source:a,webGLProgram:u,inShapeInfos:i,outShapeInfo:s,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(r.buildVao(u),Object.assign({program:t,fragmentShader:l,source:a,webGLProgram:u,inShapeInfos:i,outShapeInfo:s},Uv(r,t,u)))}function Uv(r,t,e){let o=[],n=[],i,s,a,l=null,u=null;u=r.getUniformLocation(e,"NAN",!1),G().getNumber("WEBGL_VERSION")===1&&(l=r.getUniformLocation(e,"INFINITY",!1));let c=!1;for(let p of t.variableNames){let d={name:p,uniform:r.getUniformLocation(e,p,c),offset:r.getUniformLocation(e,`offset${p}`,c)};t.enableShapeUniforms&&(d.shape=r.getUniformLocation(e,`${p}Shape`,c),d.texShape=r.getUniformLocation(e,`${p}TexShape`,c)),o.push(d)}if(t.enableShapeUniforms&&(i=r.getUniformLocation(e,"outShape",c),a=r.getUniformLocation(e,"outShapeStrides",c),s=r.getUniformLocation(e,"outTexShape",c)),t.customUniforms)for(let p of t.customUniforms)n.push(r.getUniformLocation(e,p.name,c));return{variablesLocations:o,customUniformLocations:n,infLoc:l,nanLoc:u,outShapeLocation:i,outShapeStridesLocation:a,outTexShapeLocation:s}}function A$(r,t){if(r.length!==t.length)throw Error(`Binary was compiled with ${r.length} inputs, but was executed with ${t.length} inputs`);r.forEach((e,o)=>{let n=e.logicalShape,i=t[o],s=i.shape;if(!S.arraysEqual(n,s))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${n} and ${s} must match`);if(e.isUniform&&i.isUniform)return;let a=e.texShape,l=i.isUniform?null:i.texData.texShape;if(!S.arraysEqual(a,l))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${a} and ${l} must match`)})}function F$(r,t,e,o,n){t.program.enableShapeUniforms||(A$(t.inShapeInfos,e),A$([t.outShapeInfo],[o]));let i=o.texData.texture,s=o.texData.texShape;o.texData.isPacked?r.setOutputPackedMatrixTexture(i.texture,s[0],s[1]):r.setOutputMatrixTexture(i.texture,s[0],s[1]),r.setProgram(t.webGLProgram),r.bindVertexArray(t.webGLProgram.vao),G().getNumber("WEBGL_VERSION")===1&&t.infLoc!==null&&r.gl.uniform1f(t.infLoc,1/0),t.nanLoc!==null&&r.gl.uniform1f(t.nanLoc,NaN);for(let l=0;l<e.length;++l){let u=e[l],{uniform:c,offset:p,shape:d,texShape:m}=t.variablesLocations[l];if(d){let{uniformShape:f}=Zg(t.program.packedInputs,u.shape,u.texData.texShape);switch(f.length){case 1:r.gl.uniform1iv(d,new Int32Array(f));break;case 2:r.gl.uniform2iv(d,new Int32Array(f));break;case 3:r.gl.uniform3iv(d,new Int32Array(f));break;case 4:r.gl.uniform4iv(d,new Int32Array(f));break;default:break}}if(m&&r.gl.uniform2i(m,u.texData.texShape[0],u.texData.texShape[1]),c!=null){if(u.isUniform){if(S.sizeFromShape(u.shape)<2)r.gl.uniform1f(c,u.uniformValues[0]);else{let f=u.uniformValues;f instanceof Float32Array||(f=new Float32Array(f)),r.gl.uniform1fv(c,f)}continue}u.texData.slice!=null&&p!=null&&r.gl.uniform1i(p,u.texData.slice.flatOffset),r.setInputMatrixTexture(u.texData.texture.texture,c,l)}}let a=t.outShapeLocation;if(a)switch(o.shape.length){case 1:r.gl.uniform1iv(a,new Int32Array(o.shape));break;case 2:r.gl.uniform2iv(a,new Int32Array(o.shape));break;case 3:r.gl.uniform3iv(a,new Int32Array(o.shape));break;case 4:r.gl.uniform4iv(a,new Int32Array(o.shape));break;default:break}if(t.outShapeStridesLocation){let l=S.computeStrides(o.shape);switch(o.shape.length){case 2:r.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(l));break;case 3:r.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(l));break;case 4:r.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(l));break;default:break}}if(t.outTexShapeLocation&&r.gl.uniform2i(t.outTexShapeLocation,o.texData.texShape[0],o.texData.texShape[1]),t.program.customUniforms&&n)for(let l=0;l<t.program.customUniforms.length;++l){let u=t.program.customUniforms[l],c=t.customUniformLocations[l],p=n[l];if(u.type==="float")r.gl.uniform1fv(c,p);else if(u.type==="vec2")r.gl.uniform2fv(c,p);else if(u.type==="vec3")r.gl.uniform3fv(c,p);else if(u.type==="vec4")r.gl.uniform4fv(c,p);else if(u.type==="int")r.gl.uniform1iv(c,p);else if(u.type==="ivec2")r.gl.uniform2iv(c,p);else if(u.type==="ivec3")r.gl.uniform3iv(c,p);else if(u.type==="ivec4")r.gl.uniform4iv(c,p);else throw Error(`uniform type ${u.type} is not supported yet.`)}r.executeProgram()}function O$(r,t,e){let o="";t.concat(e).forEach(s=>{let a=s.texData!=null&&s.texData.slice!=null&&s.texData.slice.flatOffset>0;if(r.enableShapeUniforms&&!s.isUniform){let l=s.texData.texShape,{useSqueezeShape:u,uniformShape:c,keptDims:p}=Zg(r.packedInputs,s.shape,l),d="",m="",f="";if(c.length===1&&r.packedInputs){let M=[Math.ceil(l[0]/2),Math.ceil(l[1]/2)];d=`${M[0]>1}_${M[1]>1}`}else if(c.length===2&&!r.packedInputs)m=`${c[0]>1}_${c[1]>1}`;else if(c.length>2&&!r.packedInputs){let M=S.computeStrides(c);f=`${M[0]===l[1]}_${M[M.length-1]===l[1]}`}let g=s.shape.length,x=c.length===2&&S.arraysEqual(s.shape,l),y=S.sizeFromShape(s.shape)===1,b=$.getBroadcastDims(s.shape,e.shape),T=!r.packedInputs&&g===e.shape.length&&S.arraysEqual(l,e.texData.texShape),R=r.packedInputs||c.length>2?"":`${l[0]>1}_${l[1]>1}`;o+=`${g}_${T}_${u?p:""}_${c.length}_${y}_${b}_${x}_${d}_${m}_${f}_${R}_${a}`}else{let l=s.isUniform?"uniform":s.texData.texShape;o+=`${s.shape}_${l}_${a}`}});let n=r.userCode,i=r.constructor.name;return i+="_"+o+"_"+n+`${G().getNumber("WEBGL_VERSION")}`,i}function lt(r){return G().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&r<=4}var Jg=class{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=sa.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];let e=_t();this.outputShape=t,this.enableShapeUniforms=lt(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?ua(["r","c","d"],t):qo(["r","c","d"],t)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${e.output} = result;
      }
    `}};var e0=class{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=sa.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];let e=_t();this.outputShape=t,this.enableShapeUniforms=lt(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?ua(["r","c","d"],t):qo(["r","c","d"],t)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${e.output} = result;
      }
    `}};var t0=class{constructor(t){this.variableNames=["A"],this.outTexUsage=fr.DOWNLOAD;let e=_t();this.outputShape=t,this.userCode=`
      ${Qg}

      void main() {
        float x = getAAtOutCoords();
        ${e.output} = encode_float(x);
      }
    `}};var r0=class{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=fr.DOWNLOAD;let e=_t();this.outputShape=t,this.userCode=`
      ${Qg}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${e.output} = encode_float(x);
      }
    `}};var wQ={R:0,G:1,B:2,A:3},id=class{constructor(t,e=!1,o="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];let n=_t();this.outputShape=t,this.enableShapeUniforms=lt(this.outputShape.length);let i="result";e&&(i="floor(result * 255. + 0.5)");let s="";for(let a=0;a<o.length;a++){let l=o[a];s+=`
          if(offset == ${a}) {
            result = values[${wQ[l]}];
          }`}this.userCode=`
      ${this.enableShapeUniforms?Ac():Pc(t)}

      void main() {
        ivec3 coords = getOutputCoords();
        int flatIndex = getFlatIndex(coords);
        float result = 0.;
        int offset = imod(flatIndex, ${o.length});

        flatIndex = idiv(flatIndex, ${o.length}, 1.);

        int r = flatIndex / texShape[1];
        if (r < texShape[0]) {
          int c = imod(flatIndex, texShape[1]);
          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
          vec4 values = ${n.texture2D}(A, uv);
          ${s}
        }
        ${n.output} = vec4(${i}, 0., 0., 0.);
      }
    `}};var o0=class{constructor(t,e=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];let o=_t();this.outputShape=t,this.enableShapeUniforms=lt(this.outputShape.length);let n="",i="result";e&&(i="floor(result * 255. + 0.5)");for(let s=0;s<=1;s++)for(let a=0;a<=1;a++){let l=s*2+a;n+=`
          localCoords = coords;
          if(localCoords[2] + ${a} < ${this.enableShapeUniforms?"outShape[2]":`${t[2]}`}) {
          localCoords[2] += ${a};
          if (localCoords[1] + ${s} < ${this.enableShapeUniforms?"outShape[1]":`${t[1]}`}) {
            localCoords[1] += ${s};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${o.texture2D}(A, uv);

            if (offset == 0) {
              result[${l}] = values[0];
            } else if (offset == 1) {
              result[${l}] = values[1];
            } else if (offset == 2) {
              result[${l}] = values[2];
            } else {
              result[${l}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?Ac():Pc(t)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${n}

          ${o.output} = ${i};
        }
    `}};function L$(r){let t=_t(),e=`${t.version}
    precision highp float;
    ${t.attribute} vec3 clipSpacePos;
    ${t.attribute} vec2 uv;
    ${t.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return u$(r,e)}function M$(r){let t=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return m$(r,t)}function B$(r){let t=new Uint16Array([0,1,2,2,1,3]);return f$(r,t)}function sd(r,t,e,o,n,i){g$(t,e);let s=h$(r),a=r.TEXTURE_2D;return be(r,()=>r.bindTexture(a,s)),be(r,()=>r.texParameteri(a,r.TEXTURE_WRAP_S,r.CLAMP_TO_EDGE)),be(r,()=>r.texParameteri(a,r.TEXTURE_WRAP_T,r.CLAMP_TO_EDGE)),be(r,()=>r.texParameteri(a,r.TEXTURE_MIN_FILTER,r.NEAREST)),be(r,()=>r.texParameteri(a,r.TEXTURE_MAG_FILTER,r.NEAREST)),G().getNumber("WEBGL_VERSION")===1?be(r,()=>r.texImage2D(a,0,o,t,e,0,n,i,null)):be(r,()=>r.texStorage2D(a,1,o,t,e)),be(r,()=>r.bindTexture(r.TEXTURE_2D,null)),{texture:s,texShape:[e,t]}}function Gv(r){return r.internalFormatFloat}function V$(r,t,e,o){let[n,i]=aa(t,e);return sd(r,n,i,Gv(o),o.textureFormatFloat,r.FLOAT)}function Hv(r){return r.internalFormatHalfFloat}function W$(r,t,e,o){let[n,i]=aa(t,e);return sd(r,n,i,Hv(o),o.textureFormatFloat,o.textureTypeHalfFloat)}function Kv(r){return r.downloadTextureFormat}function z$(r,t,e,o){let[n,i]=aa(t,e);return sd(r,n,i,Kv(o),r.RGBA,r.UNSIGNED_BYTE)}function qv(r){return r.internalFormatPackedFloat}function U$(r,t,e,o){let[n,i]=yn(t,e);return sd(r,n,i,qv(o),r.RGBA,r.FLOAT)}function jv(r){return r.internalFormatPackedHalfFloat}function G$(r,t,e,o){let[n,i]=yn(t,e);return sd(r,n,i,jv(o),r.RGBA,o.textureTypeHalfFloat)}function H$(r,t,e){return be(r,()=>r.bindBuffer(r.ARRAY_BUFFER,e)),Vv(r,t,"clipSpacePos",e,3,20,0)&&Vv(r,t,"uv",e,2,20,12)}function K$(r,t,e,o,n,i){be(r,()=>r.bindTexture(r.TEXTURE_2D,t));let s,a,l;n instanceof Uint8Array?(s=new Uint8Array(e*o*4),a=r.UNSIGNED_BYTE,l=r.RGBA):(s=new Float32Array(e*o*4),a=r.FLOAT,l=i.internalFormatPackedFloat),s.set(n),G().getNumber("WEBGL_VERSION")===2?be(r,()=>r.texSubImage2D(r.TEXTURE_2D,0,0,0,e,o,r.RGBA,a,s)):be(r,()=>r.texImage2D(r.TEXTURE_2D,0,l,e,o,0,r.RGBA,a,s)),be(r,()=>r.bindTexture(r.TEXTURE_2D,null))}function q$(r,t,e){be(r,()=>r.bindTexture(r.TEXTURE_2D,t)),e.data instanceof Uint8Array?G().getNumber("WEBGL_VERSION")===2?be(r,()=>r.texSubImage2D(r.TEXTURE_2D,0,0,0,e.width,e.height,r.RGBA,r.UNSIGNED_BYTE,e.data)):be(r,()=>r.texImage2D(r.TEXTURE_2D,0,r.RGBA,e.width,e.height,0,r.RGBA,r.UNSIGNED_BYTE,e.data)):G().getNumber("WEBGL_VERSION")===2?be(r,()=>r.texSubImage2D(r.TEXTURE_2D,0,0,0,r.RGBA,r.UNSIGNED_BYTE,e)):be(r,()=>r.texImage2D(r.TEXTURE_2D,0,r.RGBA,r.RGBA,r.UNSIGNED_BYTE,e)),be(r,()=>r.bindTexture(r.TEXTURE_2D,null))}function j$(r,t,e,o){let n=r.createBuffer();be(r,()=>r.bindBuffer(r.PIXEL_PACK_BUFFER,n));let a=4*4*t*e;return be(r,()=>r.bufferData(r.PIXEL_PACK_BUFFER,a,r.STREAM_READ)),be(r,()=>r.readPixels(0,0,e,t,r.RGBA,r.FLOAT,0)),be(r,()=>r.bindBuffer(r.PIXEL_PACK_BUFFER,null)),n}function X$(r,t,e){let o=r,n=new Float32Array(e);return o.bindBuffer(o.PIXEL_PACK_BUFFER,t),o.getBufferSubData(o.PIXEL_PACK_BUFFER,0,n),o.bindBuffer(o.PIXEL_PACK_BUFFER,null),n}function Y$(r,t,e,o){let[n,i]=aa(t,e),s=4,a=new Uint8Array(s$(t*e,s));return be(r,()=>r.readPixels(0,0,n,i,o.downloadTextureFormat,r.UNSIGNED_BYTE,a)),new Float32Array(a.buffer)}function Q$(r,t,e,o,n,i,s,a){let l=r,u=new Float32Array(a$(i,s));return l.bindBuffer(l.PIXEL_PACK_BUFFER,t),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,u),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),u}function Z$(r,t,e){let o=new Float32Array(t*e*4);return be(r,()=>r.readPixels(0,0,e,t,r.RGBA,r.FLOAT,o)),o}var Bc=class{constructor(t){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];let e=G().getNumber("WEBGL_VERSION");if(t!=null?(this.gl=t,i$(e,t)):this.gl=to(e),t=this.gl,G().getNumber("WEBGL_VERSION")===2){let i=t;this.createVertexArray=()=>be(i,()=>i.createVertexArray()),this.bindVertexArray=s=>be(i,()=>i.bindVertexArray(s)),this.deleteVertexArray=s=>be(i,()=>i.deleteVertexArray(s)),this.getVertexArray=()=>be(i,()=>i.getParameter(i.VERTEX_ARRAY_BINDING))}else if(t!=null){let i=t.getExtension("OES_vertex_array_object");if(i==null)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>be(t,()=>i.createVertexArrayOES()),this.bindVertexArray=s=>be(t,()=>i.bindVertexArrayOES(s)),this.deleteVertexArray=s=>be(t,()=>i.deleteVertexArrayOES(s)),this.getVertexArray=()=>be(t,()=>t.getParameter(i.VERTEX_ARRAY_BINDING_OES))}let o="WEBGL_color_buffer_float",n="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),G().getNumber("WEBGL_VERSION")===1){let i="OES_texture_float",s="OES_texture_half_float";if(this.textureFloatExtension=rd(this.gl,i),xo(this.gl,s))this.textureHalfFloatExtension=rd(this.gl,s);else if(G().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(o),xo(this.gl,n))this.colorBufferHalfFloatExtension=rd(this.gl,n);else if(G().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(o="EXT_color_buffer_float",xo(this.gl,o))this.colorBufferFloatExtension=this.gl.getExtension(o);else if(xo(this.gl,n))this.colorBufferHalfFloatExtension=this.gl.getExtension(n);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=M$(this.gl),this.indexBuffer=B$(this.gl),this.framebuffer=x$(this.gl),this.textureConfig=td(this.gl,this.textureHalfFloatExtension)}get debug(){return G().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");let t=this.gl;be(t,()=>t.finish()),be(t,()=>t.bindFramebuffer(t.FRAMEBUFFER,null)),be(t,()=>t.deleteFramebuffer(this.framebuffer)),be(t,()=>t.bindBuffer(t.ARRAY_BUFFER,null)),be(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,null)),be(t,()=>t.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(t,e){return this.throwIfDisposed(),V$(this.gl,t,e,this.textureConfig)}createFloat16MatrixTexture(t,e){return this.throwIfDisposed(),W$(this.gl,t,e,this.textureConfig)}createUnsignedBytesMatrixTexture(t,e){return this.throwIfDisposed(),z$(this.gl,t,e,this.textureConfig)}uploadPixelDataToTexture(t,e){this.throwIfDisposed(),q$(this.gl,t,e)}uploadDenseMatrixToTexture(t,e,o,n){this.throwIfDisposed(),K$(this.gl,t,e,o,n,this.textureConfig)}createFloat16PackedMatrixTexture(t,e){return this.throwIfDisposed(),G$(this.gl,t,e,this.textureConfig)}createPackedMatrixTexture(t,e){return this.throwIfDisposed(),U$(this.gl,t,e,this.textureConfig)}deleteMatrixTexture(t){this.throwIfDisposed(),this.outputTexture===t&&(Wv(this.gl,this.framebuffer),this.outputTexture=null),be(this.gl,()=>this.gl.deleteTexture(t))}downloadByteEncodedFloatMatrixFromOutputTexture(t,e,o){return this.downloadMatrixDriver(t,()=>Y$(this.gl,e,o,this.textureConfig))}downloadPackedMatrixFromBuffer(t,e,o,n,i,s){return Q$(this.gl,t,e,o,n,i,s,this.textureConfig)}downloadFloat32MatrixFromBuffer(t,e){return X$(this.gl,t,e)}createBufferFromTexture(t,e,o){this.bindTextureToFrameBuffer(t);let n=j$(this.gl,e,o,this.textureConfig);return this.unbindTextureToFrameBuffer(),n}createAndWaitForFence(){let t=this.createFence(this.gl);return this.pollFence(t)}createFence(t){let e,o;if(G().getBool("WEBGL_FENCE_API_ENABLED")){let n=t,i=n.fenceSync(n.SYNC_GPU_COMMANDS_COMPLETE,0);t.flush(),o=()=>{let s=n.clientWaitSync(i,0,0);return s===n.ALREADY_SIGNALED||s===n.CONDITION_SATISFIED},e=i}else G().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(e=this.beginQuery(),this.endQuery(),o=()=>this.isQueryAvailable(e,G().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):o=()=>!0;return{query:e,isFencePassed:o}}downloadMatrixFromPackedTexture(t,e,o){return this.downloadMatrixDriver(t,()=>Z$(this.gl,e,o))}createProgram(t){this.throwIfDisposed();let e=this.gl;this.vertexShader==null&&(this.vertexShader=L$(e));let o=p$(e);be(e,()=>e.attachShader(o,this.vertexShader)),be(e,()=>e.attachShader(o,t)),d$(e,o);let n=Object.assign(o,{vao:this.createVertexArray()});return this.debug&&jg(e,n),n}buildVao(t){this.setProgram(t),this.bindVertexArray(t.vao);let e=this.gl;be(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,this.indexBuffer)),H$(e,t,this.vertexBuffer)}deleteProgram(t){this.throwIfDisposed(),t===this.program&&(this.program=null),t!=null&&(be(this.gl,()=>this.gl.deleteProgram(t)),this.deleteVertexArray(t.vao))}setProgram(t){this.throwIfDisposed(),this.program=t,this.program!=null&&this.debug&&jg(this.gl,this.program),be(this.gl,()=>this.gl.useProgram(t))}getUniformLocation(t,e,o=!0){return this.throwIfDisposed(),o?y$(this.gl,t,e):v$(this.gl,t,e)}getAttributeLocation(t,e){return this.throwIfDisposed(),be(this.gl,()=>this.gl.getAttribLocation(t,e))}getUniformLocationNoThrow(t,e){return this.throwIfDisposed(),this.gl.getUniformLocation(t,e)}setInputMatrixTexture(t,e,o){this.throwIfDisposed(),this.throwIfNoProgram(),b$(this.gl,t,e,o)}setOutputMatrixTexture(t,e,o){this.setOutputMatrixTextureDriver(t,o,e)}setOutputPackedMatrixTexture(t,e,o){this.throwIfDisposed();let[n,i]=yn(e,o);this.setOutputMatrixTextureDriver(t,n,i)}setOutputMatrixWriteRegion(t,e,o,n){this.setOutputMatrixWriteRegionDriver(o,t,n,e)}setOutputPackedMatrixWriteRegion(t,e,o,n){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&jg(this.gl,this.program),od(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();let t=this.gl;if(this.debug){let e=this.getVertexArray();console.assert(e===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}be(t,()=>t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),be(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=rd(this.gl,G().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(G().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let o=this.gl,n=this.getQueryTimerExtensionWebGL2(),i=o.createQuery();return o.beginQuery(n.TIME_ELAPSED_EXT,i),i}let t=this.getQueryTimerExtensionWebGL1(),e=t.createQueryEXT();return t.beginQueryEXT(t.TIME_ELAPSED_EXT,e),e}endQuery(){if(G().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let e=this.gl,o=this.getQueryTimerExtensionWebGL2();e.endQuery(o.TIME_ELAPSED_EXT);return}let t=this.getQueryTimerExtensionWebGL1();t.endQueryEXT(t.TIME_ELAPSED_EXT)}waitForQueryAndGetTime(t){return j(this,null,function*(){return yield S.repeatedTry(()=>this.disposed||this.isQueryAvailable(t,G().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(t,G().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))})}getQueryTime(t,e){if(e===0)return null;if(e===2){let o=this.gl;return o.getQueryParameter(t,o.QUERY_RESULT)/1e6}else{let o=this.getQueryTimerExtensionWebGL1();return o.getQueryObjectEXT(t,o.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(t,e){if(e===0)return!0;if(e===2){let o=this.gl,n=this.getQueryTimerExtensionWebGL2(),i=o.getQueryParameter(t,o.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),i&&!this.disjoint}else{let o=this.getQueryTimerExtensionWebGL1(),n=o.getQueryObjectEXT(t,o.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(o.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(t){return new Promise(e=>{this.addItemToPoll(()=>t.isFencePassed(),()=>e())})}pollItems(){let t=CQ(this.itemsToPoll.map(e=>e.isDoneFn));for(let e=0;e<=t;++e){let{resolveFn:o}=this.itemsToPoll[e];o()}this.itemsToPoll=this.itemsToPoll.slice(t+1)}addItemToPoll(t,e){if(this.itemsToPoll.push({isDoneFn:t,resolveFn:e}),this.itemsToPoll.length>1)return;let o;"setTimeoutCustom"in G().platform&&(o=G().platform.setTimeoutCustom.bind(G().platform)),S.repeatedTry(()=>(this.pollItems(),this.itemsToPoll.length===0),()=>0,null,o)}bindTextureToFrameBuffer(t){this.throwIfDisposed(),Xg(this.gl,t,this.framebuffer),this.debug&&od(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(Xg(this.gl,this.outputTexture,this.framebuffer),this.debug&&od(this.gl)):Wv(this.gl,this.framebuffer)}downloadMatrixDriver(t,e){this.bindTextureToFrameBuffer(t);let o=e();return this.unbindTextureToFrameBuffer(),o}setOutputMatrixTextureDriver(t,e,o){this.throwIfDisposed();let n=this.gl;Xg(n,t,this.framebuffer),this.debug&&od(n),this.outputTexture=t,be(n,()=>n.viewport(0,0,e,o)),be(n,()=>n.scissor(0,0,e,o))}setOutputMatrixWriteRegionDriver(t,e,o,n){this.throwIfDisposed(),be(this.gl,()=>this.gl.scissor(t,e,o,n))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}};function CQ(r){let t=0;for(;t<r.length&&r[t]();++t);return t-1}var{addImpl:J$,bincountImpl:n0,bincountReduceImpl:eP,bitwiseAndImpl:tP,castImpl:rP,ceilImpl:oP,concatImpl:nP,equalImpl:iP,expImpl:sP,expm1Impl:aP,floorImpl:lP,gatherNdImpl:uP,gatherV2Impl:cP,greaterImpl:pP,greaterEqualImpl:dP,lessImpl:mP,lessEqualImpl:fP,linSpaceImpl:hP,logImpl:gP,maxImpl:xP,maximumImpl:yP,minimumImpl:vP,multiplyImpl:bP,negImpl:SP,notEqualImpl:wP,prodImpl:_P,raggedGatherImpl:CP,raggedRangeImpl:kP,raggedTensorToTensorImpl:IP,rangeImpl:TP,rsqrtImpl:EP,scatterImpl:NP,sigmoidImpl:RP,simpleAbsImpl:i0,sliceImpl:$P,sparseFillEmptyRowsImpl:PP,sparseReshapeImpl:AP,sparseSegmentReductionImpl:s0,sqrtImpl:DP,staticRegexReplaceImpl:FP,stridedSliceImpl:OP,stringNGramsImpl:LP,stringSplitImpl:MP,stringToHashBucketFastImpl:BP,subImpl:VP,tileImpl:WP,topKImpl:zP,transposeImpl:pa,uniqueImpl:UP}=qp;function Xv(r,t){return["x","y","z","w","u","v"].slice(0,t).map(e=>`${r}.${e}`)}function At(r,t){return t===1?[r]:Xv(r,t)}function GP(r,t){if(r===1)return"rc";let e="";for(let o=0;o<r;o++)e+=t[o],o<r-1&&(e+=",");return e}var a0=class{constructor(t){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=t,this.rank=t.length,this.enableShapeUniforms=lt(this.outputShape.length),this.rank===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{let e=At("rc",this.rank),o=Be(this.rank),n=this.getOutOfBoundsCondition(e),i=this.getSetup(e),s=this.getOutput(e);this.userCode=`
        void main() {
          ${o} rc = getOutputCoords();

          if(${n}) {
            setOutput(vec4(0));
          } else {
            ${i}

            setOutput(vec4(${s}));
          }
        }
      `}}getSourceCoordsArr(t){let e=[];for(let o=0;o<=1;o++)for(let n=0;n<=1;n++){let i=`${o===0?"r":"rp1"}, ${n===0?"c":"cp1"}`;for(let s=2;s<this.rank;s++)i=`${t[t.length-1-s]},`+i;e.push(i)}return e}getOutOfBoundsCondition(t){if(this.rank===1)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let e="";for(let o=this.rank-2;o<this.rank;o++)e+=`${t[o]} >= ${this.enableShapeUniforms?`outShape[${o}]`:this.outputShape[o]}`,o<this.rank-1&&(e+="||");return e}getSetup(t){if(this.rank===1)return"";let e=t.slice(-2),o=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],n=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${e[0]};
      int c = ${e[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${o};
      bool rEdge = rp1 >= ${n};
    `}getOutput(t){let e=this.getSourceCoordsArr(t);return this.rank===1?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${e[0]}),
            cEdge ? 0. : getA(${e[1]}),
            rEdge ? 0. : getA(${e[2]}),
            rEdge || cEdge ? 0. : getA(${e[3]})`}};var Vc=class{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=t,this.enableShapeUniforms=lt(this.outputShape.length);let o="";for(let n=0;n<4;n++){let i="thisRC = rc;";n%2===1&&(i+="thisRC.z += 1;"),n>1&&(i+="thisRC.y += 1;"),o+=`
        ${i}
        ${n>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${n}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${n>0?"}":""}
      `}this.userCode=`
      ${kQ(e,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?Ac():Pc(t)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":t[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":t[2]};

        ${o}

        setOutput(result);
      }
    `}};function kQ(r,t){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${t?E$(["r","c","d"],"inputShape"):qo(["r","c","d"],r)}
      return ivec3(r, c, d);
    }
  `}var l0=class{constructor(t){this.gpgpu=t,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(t,e,o){let n=KP(e,o),i=qP(t,n,o);i in this.freeTextures||(this.freeTextures[i]=[]),i in this.usedTextures||(this.usedTextures[i]=[]);let s=HP(t,n,this.gpgpu.gl,this.gpgpu.textureConfig,o);if(this.freeTextures[i].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=s,this.log();let l=this.freeTextures[i].pop();return this.usedTextures[i].push(l),l}let a;return n===sr.PACKED_2X2_FLOAT32?a=this.gpgpu.createPackedMatrixTexture(t[0],t[1]):n===sr.PACKED_2X2_FLOAT16?a=this.gpgpu.createFloat16PackedMatrixTexture(t[0],t[1]):n===sr.UNPACKED_FLOAT32?a=this.gpgpu.createFloat32MatrixTexture(t[0],t[1]):n===sr.UNPACKED_FLOAT16?a=this.gpgpu.createFloat16MatrixTexture(t[0],t[1]):n===sr.PACKED_4X1_UNSIGNED_BYTE&&(a=this.gpgpu.createUnsignedBytesMatrixTexture(t[0],t[1])),this.usedTextures[i].push(a),this.numUsedTextures++,this._numBytesAllocated+=s,this.log(),a}releaseTexture(t,e,o,n){if(this.freeTextures==null)return;let i=KP(o,n),s=qP(e,i,n);s in this.freeTextures||(this.freeTextures[s]=[]);let a=HP(e,i,this.gpgpu.gl,this.gpgpu.textureConfig,n),l=G().getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");l!==-1&&this._numBytesAllocated>l?(this.gpgpu.deleteMatrixTexture(t.texture),this._numBytesAllocated-=a):(this.freeTextures[s].push(t),this.numFreeTextures++,this._numBytesFree+=a),this.numUsedTextures--;let u=this.usedTextures[s],c=u&&u.indexOf(t);if(c==null||c<0)throw new Error("Cannot release a texture that was never provided by this texture manager");u[c]=u[u.length-1],u.pop(),this.log()}log(){if(!this.logEnabled)return;let t=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${t})`);let e=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*e)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(let t in this.freeTextures)this.freeTextures[t].forEach(e=>{this.gpgpu.deleteMatrixTexture(e.texture)});for(let t in this.usedTextures)this.usedTextures[t].forEach(e=>{this.gpgpu.deleteMatrixTexture(e.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}};function IQ(r,t){let e=r;if(t===e.R32F)return 4;if(t===e.R16F)return 2;if(t===e.RGBA32F)return 16;if(t===r.RGBA)return 16;if(t===e.RGBA16F)return 8;if(t===e.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}function HP(r,t,e,o,n){let i=TQ(t,o),s;if(n){let[l,u]=yn(r[0],r[1]);s=l*u}else{let[l,u]=aa(r[0],r[1]);s=l*u}let a=IQ(e,i);return s*a}function TQ(r,t){switch(r){case sr.PACKED_2X2_FLOAT32:return qv(t);case sr.PACKED_2X2_FLOAT16:return jv(t);case sr.UNPACKED_FLOAT32:return Gv(t);case sr.UNPACKED_FLOAT16:return Hv(t);case sr.PACKED_4X1_UNSIGNED_BYTE:return Kv(t);default:throw new Error(`Unknown physical texture type ${r}`)}}function EQ(r){return G().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?r?sr.PACKED_2X2_FLOAT32:sr.UNPACKED_FLOAT32:r?sr.PACKED_2X2_FLOAT16:sr.UNPACKED_FLOAT16}function KP(r,t){if(r===fr.UPLOAD)return sr.PACKED_2X2_FLOAT32;if(r===fr.RENDER||r==null)return EQ(t);if(r===fr.DOWNLOAD||r===fr.PIXELS)return sr.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${r}`)}function qP(r,t,e){return`${r[0]}_${r[1]}_${t}_${e}`}var Zt=class{constructor(t,e){this.variableNames=["A"],this.outputShape=t,this.enableShapeUniforms=lt(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${e}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}},Vt="if (isnan(x)) return x;",jP="return x;",Yv="return abs(x);";var XP="return (x >= 0.0) ? x : (exp(x) - 1.0);",YP=Vt+`
  return (x < 0.0) ? 0.0 : x;
`,QP=Vt+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,bn="return x;",ZP="return 1.0 / (1.0 + exp(-1.0 * x));";var eA="return x;",tA=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,rA=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,oA=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,nA="return 1.0 / (1.0 + exp(-1.0 * x));",Or=class{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.enableShapeUniforms=lt(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${e}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}};var u0=class{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=t,this.enableShapeUniforms=lt(this.outputShape.length);let e=t.length,o=At("rc",e),n=Be(e),i=GP(e,o),s=o.slice(-2),a=e<=1?"rc":`vec2(${s.join(",")})`;this.userCode=`
      void main() {
        ${n} rc = getOutputCoords();
        vec4 packedInput = getA(${i});

        setOutput(getChannel(packedInput, ${a}));
      }
    `}};var RQ=jr.whereImpl,$Q=1e-7,PQ=1e-4,c0={};function AQ(r){return r in c0||(c0[r]={}),c0[r]}var DQ=G().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),FQ=600;function OQ(){return G().global.screen==null?1024:G().global.screen.height*G().global.screen.width*window.devicePixelRatio*FQ/1024/1024}var iA=(()=>{class r extends En{nextDataId(){return r.nextDataId++}constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!G().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let o;if(e!=null){if(e instanceof Bc)o=e;else{let n=to(G().getNumber("WEBGL_VERSION"),e);o=new Bc(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{let n=to(G().getNumber("WEBGL_VERSION"));o=new Bc(n),this.binaryCache=AQ(G().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=o,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new l0(this.gpgpu),this.numMBBeforeWarning=OQ(),this.texData=new fs(this,cr())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,o,n,i,s,a){let l=this.makeTensorInfo(o,n),u=this.texData.get(l.dataId);u.isPacked=!1,u.texture={texture:e,texShape:[i,s]},u.texShape=[i,s];let c=nd(o),p=new id(c,!1,a),d=this.runWebGLProgram(p,[l],n,[[i,s]]);return d.shape=o,u.texture=null,this.disposeIntermediateTensorInfo(l),d.dataId}write(e,o,n){if((G().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||G().getBool("DEBUG"))&&this.checkNumericalProblems(e),n==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let i={id:this.nextDataId()};return this.texData.set(i,{shape:o,dtype:n,values:e,usage:fr.UPLOAD,refCount:1}),i}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){let o=this.texData.get(e);o.refCount++}decRef(e){if(this.texData.has(e)){let o=this.texData.get(e);o.refCount--}}move(e,o,n,i,s){if(G().getBool("DEBUG")&&this.checkNumericalProblems(o),i==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:i,values:o,usage:fr.UPLOAD,refCount:s})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){let o=this.texData.get(e),{values:n,dtype:i,complexTensorInfos:s,slice:a,shape:l,isPacked:u}=o;if(a!=null){let m;u?m=new Or(l,bn):m=new Zt(l,bn);let f=this.runWebGLProgram(m,[{dataId:e,shape:l,dtype:i}],i),g=this.readSync(f.dataId);return this.disposeIntermediateTensorInfo(f),g}if(n!=null)return this.convertAndCacheOnCPU(e);if(i==="string")return n;let c=this.activeTimers!=null,p;c&&(p=S.now());let d;if(i==="complex64"){let m=this.readSync(s.real.dataId),f=this.readSync(s.imag.dataId);d=$.mergeRealAndImagArrays(m,f)}else d=this.getValuesFromTexture(e);return c&&(this.downloadWaitMs+=S.now()-p),this.convertAndCacheOnCPU(e,d)}read(e){return j(this,null,function*(){if(this.pendingRead.has(e)){let g=this.pendingRead.get(e);return new Promise(x=>g.push(x))}let o=this.texData.get(e),{values:n,shape:i,slice:s,dtype:a,complexTensorInfos:l,isPacked:u}=o;if(s!=null){let g;u?g=new Or(i,bn):g=new Zt(i,bn);let x=this.runWebGLProgram(g,[{dataId:e,shape:i,dtype:a}],a),y=this.read(x.dataId);return this.disposeIntermediateTensorInfo(x),y}if(n!=null)return this.convertAndCacheOnCPU(e);if(G().getBool("DEBUG")&&!G().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&G().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let c=null,p;if(a!=="complex64"&&G().get("WEBGL_BUFFER_SUPPORTED")){p=this.decode(e);let g=this.texData.get(p.dataId);c=this.gpgpu.createBufferFromTexture(g.texture.texture,...ed(i))}this.pendingRead.set(e,[]),a!=="complex64"&&(yield this.gpgpu.createAndWaitForFence());let d;if(a==="complex64"){let g=yield Promise.all([this.read(l.real.dataId),this.read(l.imag.dataId)]),x=g[0],y=g[1];d=$.mergeRealAndImagArrays(x,y)}else if(c==null)d=this.getValuesFromTexture(e);else{let g=S.sizeFromShape(i);d=this.gpgpu.downloadFloat32MatrixFromBuffer(c,g)}if(p!=null&&this.disposeIntermediateTensorInfo(p),c!=null){let g=this.gpgpu.gl;be(g,()=>g.deleteBuffer(c))}let m=this.convertAndCacheOnCPU(e,d),f=this.pendingRead.get(e);return this.pendingRead.delete(e),f.forEach(g=>g(m)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&cr().removeDataId(e,this),this.pendingDeletes--),m})}readToGPU(e,o={}){let n=this.texData.get(e),{values:i,shape:s,slice:a,dtype:l,isPacked:u,texture:c}=n;if(l==="complex64")throw new Error("Does not support reading texture for complex64 dtype.");if(a!=null){let f;u?f=new Or(s,bn):f=new Zt(s,bn);let g=this.runWebGLProgram(f,[{dataId:e,shape:s,dtype:l}],l),x=this.readToGPU(g,o);return this.disposeIntermediateTensorInfo(g),x}if(c==null)throw i!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");let p=this.decode(e,o.customTexShape),d=cr().makeTensorFromTensorInfo(p),m=this.texData.get(p.dataId);return Object.assign({tensorRef:d},m.texture)}bufferSync(e){let o=this.readSync(e.dataId);if(e.dtype==="string")try{let n=o.map(i=>S.decodeString(i));return Me(e.shape,e.dtype,n)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Me(e.shape,e.dtype,o)}checkNumericalProblems(e){if(e!=null)for(let o=0;o<e.length;o++){let n=e[o];if(!l$(n))throw G().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${n} cannot be represented on this device.`)}}getValuesFromTexture(e){let{shape:o,dtype:n,isPacked:i}=this.texData.get(e),s=S.sizeFromShape(o);if(G().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){let m=this.decode(e),f=this.texData.get(m.dataId),g=this.gpgpu.downloadMatrixFromPackedTexture(f.texture.texture,...ed(o)).subarray(0,s);return this.disposeIntermediateTensorInfo(m),g}let a=G().getBool("WEBGL_PACK")&&i===!0,l=a?nd(o):o,u=a?new r0(l):new t0(l),c=this.runWebGLProgram(u,[{shape:l,dtype:n,dataId:e}],"float32"),p=this.texData.get(c.dataId),d=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(p.texture.texture,p.texShape[0],p.texShape[1]).subarray(0,s);return this.disposeIntermediateTensorInfo(c),d}timerAvailable(){return G().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){let o=this.activeTimers,n=[],i=!1;this.programTimersStack==null?(this.programTimersStack=n,i=!0):this.activeTimers.push(n),this.activeTimers=n,e();let s=S.flatten(this.activeTimers.map(u=>u.query)).filter(u=>u!=null),a=S.flatten(this.activeTimers.map(u=>u.name)).filter(u=>u!=null);this.activeTimers=o,i&&(this.programTimersStack=null);let l={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return j(this,null,function*(){if(G().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){let u=yield Promise.all(s);l.kernelMs=S.sum(u),l.getExtraProfileInfo=()=>u.map((c,p)=>({name:a[p],ms:c})).map(c=>`${c.name}: ${c.ms}`).join(", ")}else l.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,l})}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return G().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:S.now(),endMs:null}}endTimer(e){return G().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=S.now(),e)}getQueryTime(e){return j(this,null,function*(){if(G().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);let o=e;return o.endMs-o.startMs})}disposeData(e,o=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(o?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!o&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);let{complexTensorInfos:n}=this.texData.get(e);return n!=null&&(this.disposeData(n.real.dataId,o),this.disposeData(n.imag.dataId,o)),this.texData.delete(e),!0}releaseGPUData(e){let{texture:o,dtype:n,texShape:i,usage:s,isPacked:a,slice:l}=this.texData.get(e),u=l&&l.origDataId||e,c=this.dataRefCount.get(u);c>1?this.dataRefCount.set(u,c-1):(this.dataRefCount.delete(u),o!=null&&(this.numBytesInGPU-=this.computeBytes(i,n),this.textureManager.releaseTexture(o,i,s,a)));let p=this.texData.get(e);p.texture=null,p.texShape=null,p.isPacked=!1,p.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,o=DQ){return G().getBool("WEBGL_CPU_FORWARD")&&e.every(n=>this.texData.get(n.dataId).texture==null&&S.sizeFromShape(n.shape)<o)}getGPGPUContext(){return this.gpgpu}where(e){$.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");let o=e.dataSync();return RQ(e.shape,o)}packedUnaryOp(e,o,n){let i=new Or(e.shape,o),s=this.compileAndRun(i,[e],n);return cr().makeTensorFromTensorInfo(s)}abs(e){if(this.shouldExecuteOnCPU([e])&&e.dtype!=="complex64"){let i=i0(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,i)}if(G().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,Yv,e.dtype);let o=new Zt(e.shape,Yv),n=this.compileAndRun(o,[e]);return cr().makeTensorFromTensorInfo(n)}makeTensorInfo(e,o,n){let i;if(o==="string"&&n!=null&&n.length>0&&S.isString(n[0])){let s=n.map(a=>S.encodeString(a));i=this.write(s,e,o)}else i=this.write(n,e,o);return this.texData.get(i).usage=null,{dataId:i,shape:e,dtype:o}}makeOutput(e,o,n){return cr().makeTensorFromTensorInfo(this.makeTensorInfo(e,o,n),this)}unpackTensor(e){let o=new u0(e.shape);return this.runWebGLProgram(o,[e],e.dtype)}packTensor(e){let o=new a0(e.shape);return this.runWebGLProgram(o,[e],e.dtype,null,!0)}packedReshape(e,o){let n=[rs(e.shape),...os(e.shape)],i={dtype:e.dtype,shape:n,dataId:e.dataId},s=[rs(o),...os(o)],a=new Vc(s,n),l=!0,u=[n],c=this.runWebGLProgram(a,[i],e.dtype,u,l);return{dataId:c.dataId,shape:o,dtype:c.dtype}}decode(e,o){let n=this.texData.get(e),{isPacked:i,shape:s,dtype:a}=n;if(o!=null){let m=S.sizeFromShape(s),f=o[0]*o[1]*4;S.assert(m<=f,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}let l=nd(s),u;i?u=new e0(l):u=new Jg(l);let c=!0,p=[o??ed(l)],d=this.runWebGLProgram(u,[{shape:l,dtype:a,dataId:e}],a,p,c,o);return{dtype:a,shape:s,dataId:d.dataId}}runWebGLProgram(e,o,n,i,s=!1,a){let l=this.makeTensorInfo(e.outputShape,n),u=this.texData.get(l.dataId);if(e.packedOutput&&(u.isPacked=!0),e.outPackingScheme===sa.DENSE){let b=a??ed(e.outputShape);u.texShape=b.map(T=>T*2)}if(e.outTexUsage!=null&&(u.usage=e.outTexUsage),S.sizeFromShape(l.shape)===0)return u.values=S.getTypedArrayFromDType(l.dtype,0),l;let c=[],p=o.map(b=>{if(b.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let T=this.texData.get(b.dataId);if(T.texture==null){if(!e.packedInputs&&S.sizeFromShape(b.shape)<=G().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:b.shape,texData:null,isUniform:!0,uniformValues:T.values};e.packedInputs&&(T.isPacked=!0,T.shape=b.shape)}if(this.uploadToGPU(b.dataId),!!T.isPacked!=!!e.packedInputs)b=T.isPacked?this.unpackTensor(b):this.packTensor(b),c.push(b),T=this.texData.get(b.dataId);else if(T.isPacked&&!la(T.shape,b.shape)){let R=b,M=b.shape;b.shape=T.shape,b=this.packedReshape(b,M),c.push(b),T=this.texData.get(b.dataId),R.shape=M}return{shape:b.shape,texData:T,isUniform:!1}});this.uploadToGPU(l.dataId);let d={shape:l.shape,texData:u,isUniform:!1},m=O$(e,p,d),f=this.getAndSaveBinary(m,()=>D$(this.gpgpu,e,p,d)),g=this.activeTimers!=null,x;g&&(x=this.startTimer()),G().get("ENGINE_COMPILE_ONLY")||F$(this.gpgpu,f,p,d,i),c.forEach(b=>this.disposeIntermediateTensorInfo(b)),g&&(x=this.endTimer(x),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(x)}));let y=G().getNumber("WEBGL_FLUSH_THRESHOLD");if(y>0){let b=S.now();b-this.lastGlFlushTime>y&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=b)}if(!G().getBool("WEBGL_LAZILY_UNPACK")&&u.isPacked&&s===!1){let b=this.unpackTensor(l);return this.disposeIntermediateTensorInfo(l),b}return l}compileAndRun(e,o,n,i,s=!1){return n=n||o[0].dtype,this.runWebGLProgram(e,o,n,i,s)}getAndSaveBinary(e,o){return e in this.binaryCache||(this.binaryCache[e]=o()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(G().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(o=>{this.gpgpu.deleteProgram(this.binaryCache[o].webGLProgram),delete this.binaryCache[o]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement<"u"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=Ne(()=>{if(!G().get("WEBGL_RENDER_FLOAT32_ENABLED")){let e=G().getBool("DEBUG");G().set("DEBUG",!1);let o=this.abs(Re(1e-8)).dataSync()[0];if(G().set("DEBUG",e),o>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?$Q:PQ}uploadToGPU(e){let o=this.texData.get(e),{shape:n,dtype:i,values:s,texture:a,usage:l,isPacked:u}=o;if(a!=null)return;let c=this.activeTimers!=null,p;c&&(p=S.now());let d=o.texShape;if(d==null&&(d=S$(n,u),o.texShape=d),s!=null){let m=nd(n),f,g=d[1],x=d[0],y=s instanceof Uint8Array||s instanceof Uint8ClampedArray;(u||!y)&&([g,x]=yn(d[0],d[1])),u?f=new o0(m,y):f=new id(m,y);let b=y?[x,g]:d,T=this.makeTensorInfo(b,i),R=this.texData.get(T.dataId);y?R.usage=fr.PIXELS:R.usage=fr.UPLOAD,R.texShape=b,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(T.dataId),g,x,s);let M=[[x,g]],z=this.runWebGLProgram(f,[T],i,M,!0),H=this.texData.get(z.dataId);o.texShape=H.texShape,o.isPacked=H.isPacked,o.usage=H.usage,G().get("ENGINE_COMPILE_ONLY")?this.disposeData(z.dataId):(o.texture=H.texture,o.values=null,this.texData.delete(z.dataId)),this.disposeIntermediateTensorInfo(T),c&&(this.uploadWaitMs+=S.now()-p)}else{let m=this.acquireTexture(d,l,i,u);o.texture=m}}convertAndCacheOnCPU(e,o){let n=this.texData.get(e),{dtype:i}=n;return o!=null&&(n.values=LQ(o,i)),n.values}acquireTexture(e,o,n,i){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){let s=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${s} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,o,i)}computeBytes(e,o){return e[0]*e[1]*S.bytesPerElement(o)}checkCompileCompletion(){for(let[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}checkCompileCompletionAsync(){return j(this,null,function*(){let e=[];if(this.gpgpu.parallelCompilationExtension){for(let[,o]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(o));return Promise.all(e)}else{for(let[,o]of Object.entries(this.binaryCache)){let n=new Promise(i=>{try{this.checkCompletion_(o),i(!0)}catch(s){throw s}});e.push(n)}return Promise.all(e)}})}checkCompletionAsync_(e){return j(this,null,function*(){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(yield u1(),this.checkCompletionAsync_(e))})}checkCompletion_(e){if(this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)===!1)throw console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)===!1?(Bv(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(let e of Object.values(this.binaryCache)){this.gpgpu.buildVao(e.webGLProgram);let{variablesLocations:o,customUniformLocations:n,infLoc:i,nanLoc:s,outShapeLocation:a,outShapeStridesLocation:l,outTexShapeLocation:u}=Uv(this.gpgpu,e.program,e.webGLProgram);e.variablesLocations=o,e.customUniformLocations=n,e.infLoc=i,e.nanLoc=s,e.outShapeLocation=a,e.outShapeStridesLocation=l,e.outTexShapeLocation=u}}createTensorFromGPUData(e,o,n){e.channels=e.channels||"RGBA";let{texture:i,height:s,width:a,channels:l}=e,u=cr().backend;if(!u.gpgpu.gl.isTexture(i))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");let c=u.writeTexture(i,o,n,s,a,l);return cr().makeTensorFromDataId(c,o,n,u)}}return r.nextDataId=0,r})();function LQ(r,t){if(t==="float32"||t==="complex64")return r;if(t==="int32"||t==="bool"){let e=t==="int32"?new Int32Array(r.length):new Uint8Array(r.length);for(let o=0;o<e.length;++o)e[o]=Math.round(r[o]);return e}else throw new Error(`Unknown dtype ${t}`)}Oi.isBrowser()&&Om("webgl",()=>new iA,2);var Wc=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`;var Lr=class{constructor(t,e,o){this.variableNames=["A","B"],this.outputShape=$.assertAndGetBroadcastShape(e,o),this.enableShapeUniforms=lt(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${t}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}};var oo=`
  result.r = isNaN.r ? NAN : result.r;
  result.g = isNaN.g ? NAN : result.g;
  result.b = isNaN.b ? NAN : result.b;
  result.a = isNaN.a ? NAN : result.a;
`;var ro=class{constructor(t,e,o,n=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=$.assertAndGetBroadcastShape(e,o);let i=this.outputShape.length;this.enableShapeUniforms=lt(i);let s="";if(n)if(i===0||S.sizeFromShape(this.outputShape)===1)s=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(s=`
          ${Be(i)} coords = getOutputCoords();
        `,i===1)this.enableShapeUniforms?s+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:s+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{let l=At("coords",i);this.enableShapeUniforms?s+=`
            bool nextRowOutOfBounds =
              (${l[i-2]} + 1) >= outShape[${i} - 2];
            bool nextColOutOfBounds =
              (${l[i-1]} + 1) >= outShape[${i} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:s+=`
            bool nextRowOutOfBounds =
              (${l[i-2]} + 1) >= ${this.outputShape[i-2]};
            bool nextColOutOfBounds =
              (${l[i-1]} + 1) >= ${this.outputShape[i-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${t}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${s}

        setOutput(result);
      }
    `}};function Dt(r){let{inputs:t,backend:e}=r,{x:o}=t;return e.incRef(o.dataId),{dataId:o.dataId,shape:o.shape,dtype:o.dtype}}var sA={kernelName:$n,backendName:"webgl",kernelFunc:Dt};function Mr(r){let{inputs:t,backend:e}=r,{real:o,imag:n}=t,i=e.makeTensorInfo(o.shape,"complex64"),s=e.texData.get(i.dataId),a=Dt({inputs:{x:o},backend:e}),l=Dt({inputs:{x:n},backend:e});return s.complexTensorInfos={real:a,imag:l},i}var aA={kernelName:vs,backendName:"webgl",kernelFunc:Mr};var Qv="return (a < 0.) ? b * a : a;",Zv=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function MQ(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{alpha:i}=o,s=e.makeTensorInfo([],"float32",S.createScalarValue(i,"float32")),a=G().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new ro(Zv,n.shape,s.shape):new Lr(Qv,n.shape,s.shape),l=e.runWebGLProgram(a,[n,s],"float32");return e.disposeIntermediateTensorInfo(s),l}var lA={kernelName:Gl,backendName:"webgl",kernelFunc:MQ};var Jv="return (a < 0.) ? b * a : a;",eb=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function BQ(r){let{inputs:t,backend:e}=r,{x:o,alpha:n}=t,i=G().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new ro(eb,o.shape,n.shape):new Lr(Jv,o.shape,n.shape);return e.runWebGLProgram(i,[o,n],"float32")}var uA={kernelName:mu,backendName:"webgl",kernelFunc:BQ};var Ro="if (isnan(x)) return x;";function Te({opSnippet:r,packedOpSnippet:t,cpuKernelImpl:e,dtype:o}){return({inputs:n,backend:i})=>{let{x:s}=n,a=i,l=o||s.dtype;if(a.shouldExecuteOnCPU([s])&&e!=null){let p=a.texData.get(s.dataId),d=e(p.values,l);return a.makeTensorInfo(s.shape,l,d)}let u=G().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&t!=null,c;return u?c=new Or(s.shape,t):c=new Zt(s.shape,r),a.runWebGLProgram(c,[s],l)}}function it({opSnippet:r,packedOpSnippet:t,checkOutOfBounds:e=!1,supportsComplex:o=!1,cpuKernelImpl:n,dtype:i}){return({inputs:s,backend:a})=>{let{a:l,b:u}=s,c=a;if(o&&l.dtype==="complex64"){let f=c.texData.get(l.dataId),g=c.texData.get(u.dataId),[x,y]=[[f.complexTensorInfos.real,g.complexTensorInfos.real],[f.complexTensorInfos.imag,g.complexTensorInfos.imag]].map(T=>{let[R,M]=T,V={dataId:R.dataId,dtype:R.dtype,shape:l.shape},z={dataId:M.dataId,dtype:M.dtype,shape:u.shape},H=new Lr(r,l.shape,u.shape);return c.runWebGLProgram(H,[V,z],Tt(R.dtype,M.dtype))}),b=Mr({inputs:{real:x,imag:y},backend:c});return c.disposeIntermediateTensorInfo(x),c.disposeIntermediateTensorInfo(y),b}let p=i||Tt(l.dtype,u.dtype);if((l.dtype==="string"||u.dtype==="string"||c.shouldExecuteOnCPU([l,u]))&&n!=null){let f=c.texData.get(l.dataId).values,g=c.texData.get(u.dataId).values,x=l.dtype==="string"?$.fromUint8ToStringArray(f):f,y=l.dtype==="string"?$.fromUint8ToStringArray(g):g,[b,T]=n(l.shape,u.shape,x,y,p),R=c.makeTensorInfo(T,p),M=c.texData.get(R.dataId);return M.values=b,R}let d=G().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&t!=null,m;return d?m=new ro(t,l.shape,u.shape,e):m=new Lr(r,l.shape,u.shape),c.runWebGLProgram(m,[l,u],p)}}function Xn(r,t=!1){if(r==="linear")return t?eA:jP;if(r==="relu")return t?rA:YP;if(r==="elu")return t?tA:XP;if(r==="relu6")return t?oA:QP;if(r==="prelu")return t?eb:Jv;if(r==="leakyrelu")return t?Zv:Qv;if(r==="sigmoid")return t?nA:ZP;throw new Error(`Activation ${r} has not been implemented for the WebGL backend.`)}var zc=class{constructor(t,e,o,n=!1,i=!1,s=!1,a=null,l=!1,u=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=o,this.enableShapeUniforms=lt(this.outputShape.length);let c=n?t[1]:t[2],p=Math.ceil(c/2),d=n?"i * 2, rc.y":"rc.y, i * 2",m=i?"rc.z, i * 2":"i * 2, rc.z",f=n?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],g=i?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"],x="",y="";a&&(l?x=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${a}
        }`:u?x=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${a}
        }`:x=`vec4 activation(vec4 x) {
          ${a}
        }`,y="result = activation(result);");let b=s?"result += getBiasAtOutCoords();":"";s&&this.variableNames.push("bias"),l&&this.variableNames.push("preluActivationWeights"),u&&this.variableNames.push("leakyreluAlpha");let T="rc.x",R="rc.x";t[0]<e[0]?T=`imod(rc.x, ${t[0]})`:e[0]<t[0]&&(R=`imod(rc.x, ${e[0]})`),this.userCode=`
      ${x}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${p}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        int batchA = ${T};
        int batchB = ${R};
        for (int i = 0; i < ${p}; i++) {
          vec4 a = getMatrixA(batchA, ${d});
          vec4 b = getMatrixB(batchB, ${m});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${f[0]} * ${g[0]});
          result += (${f[1]} * ${g[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${b}

        ${y}

        setOutput(result);
      }
    `}};var tb={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"},ad=class{constructor(t,e,o){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=$.assertAndGetBroadcastShape(e,o),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${t}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}};var cA="return a * b;";function ld(r){let{inputs:t,backend:e}=r,{a:o,b:n}=t,i=$.upcastType(o.dtype,n.dtype);if(o.dtype==="complex64"){let a=e.texData.get(o.dataId),l=e.texData.get(n.dataId),u=new ad(tb.REAL,o.shape,n.shape),c=new ad(tb.IMAG,o.shape,n.shape),p=[{dataId:a.complexTensorInfos.real.dataId,dtype:a.complexTensorInfos.real.dtype,shape:o.shape},{dataId:a.complexTensorInfos.imag.dataId,dtype:a.complexTensorInfos.imag.dtype,shape:o.shape},{dataId:l.complexTensorInfos.real.dataId,dtype:l.complexTensorInfos.real.dtype,shape:n.shape},{dataId:l.complexTensorInfos.imag.dataId,dtype:l.complexTensorInfos.imag.dtype,shape:n.shape}],d=e.runWebGLProgram(u,p,"float32"),m=e.runWebGLProgram(c,p,"float32"),f=Mr({inputs:{real:d,imag:m},backend:e});return e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(m),f}if(e.shouldExecuteOnCPU([o,n])){let a=e.texData.get(o.dataId),l=e.texData.get(n.dataId),[u,c]=bP(o.shape,n.shape,a.values,l.values,i),p=e.makeTensorInfo(c,i),d=e.texData.get(p.dataId);return d.values=u,p}let s;return G().getBool("WEBGL_PACK_BINARY_OPERATIONS")?s=new ro(cA,o.shape,n.shape):s=new Lr(cA,o.shape,n.shape),e.runWebGLProgram(s,[o,n],i)}var pA={kernelName:ki,backendName:"webgl",kernelFunc:ld};function dA(r,t,e){let o=[rs(r.shape),...os(r.shape)],n={dtype:r.dtype,shape:o,dataId:r.dataId},i=[rs(t),...os(t)],s=new Vc(i,o),a=!0,l=[o],u=e.runWebGLProgram(s,[n],r.dtype,l,a);return{dataId:u.dataId,shape:t,dtype:u.dtype}}function ue(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{shape:i}=o,s=e,a=S.sizeFromShape(n.shape),l=S.inferFromImplicitShape(i,a),u=S.sizeFromShape(l);S.assert(a===u,()=>`The new shape (${l}) has ${u} elements and the old shape (${n.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`);let c=s.texData.get(n.dataId);return c.isPacked&&!la(n.shape,l)&&!(c.texture!==null&&la(c.shape,l))?dA(n,l,s):(s.incRef(n.dataId),{dataId:n.dataId,shape:l,dtype:n.dtype})}var mA={kernelName:xu,backendName:"webgl",kernelFunc:ue};var ud=class{constructor(t,e){this.variableNames=["x"];let{windowSize:o,batchSize:n,inSize:i,outSize:s}=t;this.outputShape=[n,s];let a=Math.floor(o/4)*4,l=o%4,u="sumValue += dot(values, ones);";if(e!=null){let p=1/e;u=`sumValue += dot(values * ${S.isInt(p)?p.toPrecision(2):p}, ones);`}let c="";i%o>0&&(c=`
        if (inIdx < 0 || inIdx >= ${i}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${c}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${o};

        float sumValue = 0.0;

        for (int i = 0; i < ${a}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${u}
        }

        int inIdx = inOffset + ${a};
        if (${l===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${u}
        } else if (${l===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${u}
        } else if (${l===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${u}
        }
        setOutput(sumValue);
      }
    `}};var p0=class{constructor(t,e){this.variableNames=["x"];let{windowSize:o,batchSize:n,inSize:i,outSize:s}=t;this.outputShape=[n,s];let a="0.0",l="";e==="prod"?a="1.0":e==="min"?(a="1.0 / 1e-20",l="min"):e==="max"&&(a="-1.0 / 1e-20",l="max");let u=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;e==="sum"?u="sumValue":e==="prod"?u="prodValue":e==="all"?u="allValue":e==="any"&&(u="anyValue");let c=Math.floor(o/4)*4,p=o%4,d=`
      if (${e==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${e==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${l}(values, minMaxValue);
        if (${e==="min"} || ${e==="max"}) {
          minMaxValue = ${l}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,m="vec4";e==="all"?(a="1.0",d=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,m="bvec4"):e==="any"&&(a="0.0",d=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,m="bvec4");let f="";i%o>0&&(f=`
        if (inIdx < 0 || inIdx >= ${i}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${a};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${f}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${o};

        vec4 minMaxValue = vec4(${a});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${c}; i += 4) {
          int inIdx = inOffset + i;
          ${m} values = ${m}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${d}
        }

        int inIdx = inOffset + ${c};
        if (${p===1}) {
          ${m} values = ${m}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${d}
        } else if (${p===2}) {
          ${m} values = ${m}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${d}
        } else if (${p===3}) {
          ${m} values = ${m}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${d}
        }
        setOutput(${u});
      }
    `}};function WQ(r){let t=[];for(;t.length===0||t[t.length-1].outSize!==1;){let e=t.length?t[t.length-1].outSize:r[1],o=$.computeOptimalWindowSize(e);t.push({inSize:e,windowSize:o,outSize:Math.ceil(e/o)})}return t}function no(r,t,e,o){let n=WQ(r.shape),i=r;for(let s=0;s<n.length;s++){let{inSize:a,windowSize:l,outSize:u}=n[s],c,p;e==="mean"?c=s===0?new ud({windowSize:l,inSize:a,batchSize:r.shape[0],outSize:u},a):new ud({windowSize:l,inSize:a,batchSize:r.shape[0],outSize:u}):c=new p0({windowSize:l,inSize:a,batchSize:r.shape[0],outSize:u},e),p=i,i=o.runWebGLProgram(c,[i],t),p.dataId!==r.dataId&&o.disposeIntermediateTensorInfo(p)}return i}var d0=class{constructor(t,e){this.variableNames=["A"];let o=new Array(t.length);for(let s=0;s<o.length;s++)o[s]=t[e[s]];this.outputShape=o,this.rank=o.length;let n=Be(this.rank),i=zQ(e);this.userCode=`
    void main() {
      ${n} resRC = getOutputCoords();
      setOutput(getA(${i}));
    }
    `}};function zQ(r){let t=r.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);let e=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],o=new Array(t);for(let n=0;n<r.length;n++)o[r[n]]=e[n];return o.join()}var m0=class{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;let o=new Array(t.length);for(let c=0;c<o.length;c++)o[c]=t[e[c]];if(this.outputShape=o,this.rank=o.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);let n=Be(this.rank),i=Xv("rc",this.rank),s=new Array(this.rank);for(let c=0;c<e.length;c++)s[e[c]]=i[c];let a=`vec2(${s.slice(-2).join()})`,l=`++${i[this.rank-1]} < ${o[this.rank-1]}`,u=`getChannel(getA(${s.join()}), ${a})`;this.userCode=`
    void main() {
      ${n} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${u};
      if(${l}) {
        result[1] = ${u};
      }
      --${i[this.rank-1]};
      if(++${i[this.rank-2]} < ${o[this.rank-2]}) {
        result[2] = ${u};
        if(${l}) {
          result[3] = ${u};
        }
      }
      setOutput(result);
    }
    `}};function ns(r,t,e){let o=G().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new m0(r.shape,t):new d0(r.shape,t);return e.runWebGLProgram(o,[r],r.dtype)}function fA(r,t,e,o){let n=t,i=r.shape.length,s=S.parseAxisParam(n,r.shape),a=s,l=$.getAxesPermutation(a,i),u=l!=null,c=r;u&&(c=ns(r,l,o),a=$.getInnerMostAxes(a.length,i)),$.assertAxesAreInnerMostDims("sum",a,i);let[p,d]=$.computeOutAndReduceShapes(c.shape,a),m=p;e&&(m=$.expandShapeToKeepDim(p,s));let f=S.sizeFromShape(d),x=S.sizeFromShape(r.shape)/f,y=ue({inputs:{x:c},attrs:{shape:[x,f]},backend:o}),b=Dn(r.dtype),T=no(y,b,"sum",o),R=ue({inputs:{x:T},attrs:{shape:m},backend:o});return o.disposeIntermediateTensorInfo(y),o.disposeIntermediateTensorInfo(T),u&&o.disposeIntermediateTensorInfo(c),R}function da(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{axis:i,keepDims:s}=o;return fA(n,i,s,e)}var hA={kernelName:Pu,backendName:"webgl",kernelFunc:da};function vt(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{perm:i}=o,s=e,a=n.shape.length,l=new Array(a);for(let c=0;c<l.length;c++)l[c]=n.shape[i[c]];let u;if(s.shouldExecuteOnCPU([n])){let p=s.texData.get(n.dataId).values,d=pa(p,n.shape,n.dtype,i,l);u=s.makeTensorInfo(l,n.dtype);let m=s.texData.get(u.dataId);m.values=d}else u=ns(n,i,s);return u}var gA={kernelName:Ai,backendName:"webgl",kernelFunc:vt};var rb=1e3;function ma({a:r,b:t,transposeA:e,transposeB:o,backend:n,bias:i=null,preluActivationWeights:s=null,leakyreluAlpha:a=0,activation:l=null}){let u=r.shape.length,c=t.shape.length,p=e?r.shape[u-2]:r.shape[u-1],d=o?t.shape[c-1]:t.shape[c-2],m=e?r.shape[u-1]:r.shape[u-2],f=o?t.shape[c-2]:t.shape[c-1],g=r.shape.slice(0,-2),x=t.shape.slice(0,-2),y=S.sizeFromShape(g),b=S.sizeFromShape(x),R=dn.assertAndGetBroadcastShape(r.shape.slice(0,-2),t.shape.slice(0,-2)).concat([m,f]);S.assert(p===d,()=>`Error in matMul: inner shapes (${p}) and (${d}) of Tensors with shapes ${r.shape} and ${t.shape} and transposeA=${e} and transposeB=${o} must match.`);let M=e?[y,p,m]:[y,m,p],V=o?[b,f,d]:[b,d,f],z=ue({inputs:{x:r},backend:n,attrs:{shape:M}}),H=ue({inputs:{x:t},backend:n,attrs:{shape:V}}),K=[z,H],X=Math.max(y,b),te=e?z.shape[1]:z.shape[2],ce=i!=null,pe=s!=null,ve=l==="leakyrelu",Se=l!=null?Xn(l,!0):null,Ee=ce||pe||ve||Se!=null,je;if((m===1||f===1)&&te>rb&&Ee===!1){let st=z,jt=H;e&&(st=vt({inputs:{x:z},backend:n,attrs:{perm:[0,2,1]}}),K.push(st)),o&&(jt=vt({inputs:{x:H},backend:n,attrs:{perm:[0,2,1]}}),K.push(jt));let Jt=f!==1,Yo=f===1,Sn=st;Jt&&(Sn=ue({inputs:{x:st},backend:n,attrs:{shape:[X,te,1]}}),K.push(Sn));let ga=f===1?2:1,xa=jt;Yo&&(xa=ue({inputs:{x:jt},backend:n,attrs:{shape:[X,1,te]}}),K.push(xa));let Yc=ld({inputs:{a:Sn,b:xa},backend:n});je=da({inputs:{x:Yc},backend:n,attrs:{axis:ga,keepDims:!0}}),K.push(Yc)}else{let st=Tt(r.dtype,t.dtype),jt=new zc(M,V,[X,m,f],e,o,ce,Se,pe,ve),Jt=[z,H];if(i!=null&&Jt.push(i),pe&&Jt.push(s),ve){let Yo=n.makeTensorInfo([],"float32",S.createScalarValue(a,"float32"));Jt.push(Yo),K.push(Yo)}je=n.runWebGLProgram(jt,Jt,st)}let Xe=ue({inputs:{x:je},backend:n,attrs:{shape:R}});K.push(je);for(let st of K)n.disposeIntermediateTensorInfo(st);return Xe}function UQ(r){let{inputs:t,backend:e,attrs:o}=r,{a:n,b:i,bias:s,preluActivationWeights:a}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:p}=o;return ma({a:n,b:i,transposeA:l,transposeB:u,backend:e,bias:s,preluActivationWeights:a,leakyreluAlpha:p,activation:c})}var xA={kernelName:ks,backendName:"webgl",kernelFunc:UQ};var yA="return abs(x);";function GQ(r){let{inputs:t,backend:e}=r,{x:o}=t;if(e.shouldExecuteOnCPU([o])&&o.dtype!=="complex64"){let i=e.texData.get(o.dataId),s=i0(i.values);return e.makeTensorInfo(o.shape,o.dtype,s)}let n;return G().getBool("WEBGL_PACK_UNARY_OPERATIONS")?n=new Or(o.shape,yA):n=new Zt(o.shape,yA),e.runWebGLProgram(n,[o],o.dtype)}var vA={kernelName:ys,backendName:"webgl",kernelFunc:GQ};var HQ=Vt+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,KQ=Te({opSnippet:HQ}),bA={kernelName:Ua,backendName:"webgl",kernelFunc:KQ};var qQ=Vt+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,jQ=Te({opSnippet:qQ}),SA={kernelName:Ga,backendName:"webgl",kernelFunc:jQ};var wA="return a + b;",XQ=it({opSnippet:wA,packedOpSnippet:wA,supportsComplex:!0,cpuKernelImpl:J$}),_A={kernelName:sn,backendName:"webgl",kernelFunc:XQ};var f0=class{constructor(t,e){this.outputShape=[],this.outputShape=t,this.variableNames=e.map((i,s)=>`T${s}`);let o=[];this.variableNames.forEach(i=>{o.push(`float v${i} = get${i}AtOutCoords();`)});let n=this.variableNames.map(i=>`v${i}`).join(" + ");this.userCode=`
      void main() {
        ${o.join(`
        `)}

        float result = ${n};
        setOutput(result);
      }
    `}};var h0=class{constructor(t,e){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.variableNames=e.map((i,s)=>`T${s}`);let o=[];this.variableNames.forEach(i=>{o.push(`vec4 v${i} = get${i}AtOutCoords();`)});let n=this.variableNames.map(i=>`v${i}`).join(" + ");this.userCode=`
      void main() {
        ${o.join(`
        `)}

        vec4 result = ${n};
        setOutput(result);
      }
    `}};function g0(r){let{inputs:t,backend:e}=r,o=t;if(o.length===1)return Dt({inputs:{x:o[0]},backend:e});if(o.length>G().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){let l=Math.floor(o.length/2),u=g0({inputs:o.slice(0,l),backend:e}),c=g0({inputs:o.slice(l),backend:e});return g0({inputs:[u,c],backend:e})}let n=o.map(l=>l.dtype).reduce((l,u)=>Tt(l,u)),i=o.map(l=>l.shape),a=G().getBool("WEBGL_PACK")?new h0(o[0].shape,i):new f0(o[0].shape,i);return e.runWebGLProgram(a,o,n)}var CA={kernelName:Ha,backendName:"webgl",kernelFunc:g0};function YQ(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{axis:i,keepDims:s}=o,a=n.shape.length,l=S.parseAxisParam(i,n.shape),u=l,c=$.getAxesPermutation(u,a),p=n;c!=null&&(p=vt({inputs:{x:n},backend:e,attrs:{perm:c}}),u=$.getInnerMostAxes(u.length,a)),$.assertAxesAreInnerMostDims("all",u,a);let[d,m]=$.computeOutAndReduceShapes(p.shape,u),f=S.sizeFromShape(m),g=ue({inputs:{x:p},backend:e,attrs:{shape:[-1,f]}}),x=no(g,g.dtype,"all",e),y;if(s){let b=$.expandShapeToKeepDim(d,l);y=ue({inputs:{x},backend:e,attrs:{shape:b}})}else y=ue({inputs:{x},backend:e,attrs:{shape:d}});return e.disposeIntermediateTensorInfo(g),e.disposeIntermediateTensorInfo(x),c!=null&&e.disposeIntermediateTensorInfo(p),y}var kA={kernelName:Ka,backendName:"webgl",kernelFunc:YQ};function QQ(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{axis:i,keepDims:s}=o,a=n.shape.length,l=S.parseAxisParam(i,n.shape),u=l,c=$.getAxesPermutation(u,a),p=n;c!=null&&(p=vt({inputs:{x:n},backend:e,attrs:{perm:c}}),u=$.getInnerMostAxes(u.length,a)),$.assertAxesAreInnerMostDims("any",u,a);let[d,m]=$.computeOutAndReduceShapes(p.shape,u),f=S.sizeFromShape(m),g=ue({inputs:{x:p},backend:e,attrs:{shape:[-1,f]}}),x=no(g,g.dtype,"any",e),y;if(s){let b=$.expandShapeToKeepDim(d,l);y=ue({inputs:{x},backend:e,attrs:{shape:b}})}else y=ue({inputs:{x},backend:e,attrs:{shape:d}});return e.disposeIntermediateTensorInfo(g),e.disposeIntermediateTensorInfo(x),c!=null&&e.disposeIntermediateTensorInfo(p),y}var IA={kernelName:qa,backendName:"webgl",kernelFunc:QQ};var x0=class{constructor(t,e,o){this.variableNames=["A"];let{windowSize:n,batchSize:i,outSize:s}=t;o||this.variableNames.push("bestIndicesA"),this.outputShape=[i,s];let a=e==="max"?">":"<",l=o?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${n}; i++) {
          int inIdx = ${l};
          float candidate = getA(batch, inIdx);
          if (candidate ${a} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}};var y0=class{constructor(t,e,o,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,S.assert(t.length>2,()=>`Packed arg${o.charAt(0).toUpperCase()+o.slice(1)} supports only inputs with rank above 2.`);let i=t[t.length-1],s=Math.ceil(i/e);this.outputShape=t.slice(0,-1),s>1&&this.outputShape.push(s),n||this.variableNames.push("bestIndicesA");let a=this.outputShape,l=a.length,u=Be(l),c=At("coords",l),p,d;if(s===1){d=l+1;let H=Be(d);p=`
        ${H} sourceLocR = ${H}(${c.join()}, 0);
        ++${c[l-1]};
        ${H} sourceLocG = ${H}(${c.join()}, 0);
        ++${c[l-2]};
        ${H} sourceLocA = ${H}(${c.join()}, 0);
        --${c[l-1]};
        ${H} sourceLocB = ${H}(${c.join()}, 0);
        --${c[l-2]};`}else d=l,p=`
        ${u} sourceLocR = coords;
        ++${c[l-1]};
        ${u} sourceLocG = coords;
        ++${c[l-2]};
        ${u} sourceLocA = coords;
        --${c[l-1]};
        ${u} sourceLocB = coords;
        --${c[l-2]};`;let m=["x","y","z","w","u","v"].slice(0,d),f="."+m[d-1],g=m.map(H=>"int "+H),x=At("sourceLocR",d-1).concat("inIdx.r"),y=At("sourceLocG",d-1).concat("inIdx.g"),b=At("sourceLocB",d-1).concat("inIdx.b"),T=At("sourceLocA",d-1).concat("inIdx.a"),R=o==="max"?"greaterThan":"lessThan",M=n?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${x.join()}),
                             getBestIndicesAChannel(${y.join()}),
                             getBestIndicesAChannel(${b.join()}),
                             getBestIndicesAChannel(${T.join()})));`,V=`vec4(
            getAChannel(${x.join()}),
            hasNextCol ? getAChannel(${y.join()}) : 0.,
            hasNextRow ? getAChannel(${b.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${T.join()}) : 0.)`,z=n?"":`
      float getBestIndicesAChannel(${g.join()}) {
        return getChannel(getBestIndicesA(${m.join()}),
                                          vec2(${m.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${g.join()}) {
        return getChannel(getA(${m.join()}),
                               vec2(${m.slice(-2).join()}));
      }
      ${z}
      void main() {
        ${u} coords = getOutputCoords();
        bool hasNextCol = ${c[l-1]} < ${a[l-1]-1};
        bool hasNextRow = ${c[l-2]} < ${a[l-2]-1};
        ${p}
        ivec4 srcIdx = ivec4(sourceLocR${f}, sourceLocG${f},
          sourceLocB${f}, sourceLocA${f}) * ${e};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${V};

        for (int i = 0; i < ${e}; i++) {
          inIdx = srcIdx;
          ${M}
          vec4 candidate = ${V};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${R}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}};function TA(r,t,e,o=null){let n=t.shape[0],i=t.shape[1];o!=null&&(n=o.shape[0],i=o.shape[1]);let s=$.computeOptimalWindowSize(i),a={windowSize:s,inSize:i,batchSize:n,outSize:Math.ceil(i/s)},l=new x0(a,e,o==null),u=[t];o!=null&&u.push(o);let c=r.runWebGLProgram(l,u,"int32");if(c.shape[1]===1)return c;let p=TA(r,t,e,c);return r.disposeIntermediateTensorInfo(c),p}function EA(r,t,e,o=null){let n=o!=null?o.shape:t.shape,i=n[n.length-1],s=$.computeOptimalWindowSize(i),a=new y0(n,s,e,o==null),l=o==null?[t]:[t,o],u=r.runWebGLProgram(a,l,"int32");if(u.shape.length===t.shape.length){let c=EA(r,t,e,u);return r.disposeIntermediateTensorInfo(u),c}return u}function v0(r,t,e,o){let n=[e];if($.assertAxesAreInnerMostDims("arg"+o.charAt(0).toUpperCase()+o.slice(1),n,t.shape.length),!G().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){let i=[],s=r.texData.get(t.dataId),a=s!==null&&s.isPacked,l=t;a&&(l=r.unpackTensor(t),i.push(l));let[u,c]=$.computeOutAndReduceShapes(l.shape,n),p=S.sizeFromShape(c),d=ue({inputs:{x:l},backend:r,attrs:{shape:[-1,p]}});i.push(d);let m=TA(r,d,o);i.push(m);let f=ue({inputs:{x:m},backend:r,attrs:{shape:u}});return i.forEach(g=>r.disposeIntermediateTensorInfo(g)),f}return EA(r,t,o)}function ZQ(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{axis:i}=o,s=S.parseAxisParam(i,n.shape),a=$.getAxesPermutation(s,n.shape.length),l=n,u=[];a!=null&&(l=vt({inputs:{x:n},backend:e,attrs:{perm:a}}),u.push(l),s=$.getInnerMostAxes(s.length,l.shape.length)),$.assertAxesAreInnerMostDims("argMax",[s[0]],l.shape.length);let c=v0(e,l,s[0],"max");return u.forEach(p=>e.disposeIntermediateTensorInfo(p)),c}var NA={kernelName:ja,backendName:"webgl",kernelFunc:ZQ};function JQ(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{axis:i}=o,s=S.parseAxisParam(i,n.shape),a=$.getAxesPermutation(s,n.shape.length),l=n,u=[];a!=null&&(l=vt({inputs:{x:n},backend:e,attrs:{perm:a}}),u.push(l),s=$.getInnerMostAxes(s.length,l.shape.length)),$.assertAxesAreInnerMostDims("argMin",[s[0]],l.shape.length);let c=v0(e,l,s[0],"min");return u.forEach(p=>e.disposeIntermediateTensorInfo(p)),c}var RA={kernelName:Xa,backendName:"webgl",kernelFunc:JQ};var eZ=Vt+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,tZ=Te({opSnippet:eZ}),$A={kernelName:Ya,backendName:"webgl",kernelFunc:tZ};var rZ=Vt+"return log(x + sqrt(x * x + 1.0));",oZ=Te({opSnippet:rZ}),PA={kernelName:Qa,backendName:"webgl",kernelFunc:oZ};var nZ=Vt+`
  return atan(x);
`,iZ=Te({opSnippet:nZ}),AA={kernelName:Za,backendName:"webgl",kernelFunc:iZ};var sZ=Wc+`
  return atan(a, b);
`,aZ=`
  vec4 result = atan(a, b);
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+oo+`
  return result;
`,lZ=it({opSnippet:sZ,packedOpSnippet:aZ}),DA={kernelName:el,backendName:"webgl",kernelFunc:lZ};var uZ=Vt+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,cZ=Te({opSnippet:uZ}),FA={kernelName:Ja,backendName:"webgl",kernelFunc:cZ};var jo=class{constructor(t,e,o,n=!1,i=!1){if(this.variableNames=["x"],e==="avg"&&o)throw new Error("Cannot compute positions for average pool.");let s=t.filterWidth,a=t.strideHeight,l=t.strideWidth,u=t.dilationHeight,c=t.dilationWidth,p=t.effectiveFilterHeight,d=t.effectiveFilterWidth,m=t.padInfo.top,f=t.padInfo.left;this.outputShape=t.outShape;let g=e==="avg",x=`((batch  * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + d`,y=`(xR * ${t.inWidth} + xC) * ${t.inChannels} + d`,b="0.0";if(g||(b="-1.0 / 1e-20"),o){let H=">=";this.userCode=`
        const ivec2 strides = ivec2(${a}, ${l});
        const ivec2 pads = ivec2(${m}, ${f});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${p};
              wR += ${u}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${d};
                wC += ${c}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${H} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${n?i?x:y:`wR * ${d} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let T="max",R=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;e==="avg"&&(R="avgValue / max(count, 1.0)");let M=Math.floor(s/4)*4,V=s%4,z=`
      if (${g}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${T}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${a}, ${l});
      const ivec2 pads = ivec2(${m}, ${f});
      const float initializationValue = ${b};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${t.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${b});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${p};
            wR += ${u}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${t.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${M}; wC += 4) {
            int xC = xCCorner + wC * ${c};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              getValue(batch, xR, xC + 2 * ${c}, d),
              getValue(batch, xR, xC + 3 * ${c}, d)
            );

            ${z}
          }

          int xC = xCCorner + ${M};
          if (${V===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${z}
          } else if (${V===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              initializationValue,
              initializationValue
            );

            ${z}
          } else if (${V===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              getValue(batch, xR, xC + 2 * ${c}, d),
              initializationValue
            );

            ${z}
          }
        }
        setOutput(${R});
      }
    `}},is=class{constructor(t,e,o,n=!1,i=!1){if(this.variableNames=["x"],e==="avg"&&o)throw new Error("Cannot compute positions for average pool.");let s=t.filterWidth,a=t.strideDepth,l=t.strideHeight,u=t.strideWidth,c=t.dilationDepth,p=t.dilationHeight,d=t.dilationWidth,m=t.effectiveFilterDepth,f=t.effectiveFilterHeight,g=t.effectiveFilterWidth,x=t.padInfo.front,y=t.padInfo.top,b=t.padInfo.left;this.outputShape=t.outShape;let T=e==="avg",R="0.0";if(T||(R="-1.0 / 1e-20"),o){let X=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${a}, ${l}, ${u});
        const ivec3 pads = ivec3(${x}, ${y}, ${b});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${m};
              wD += ${c}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${t.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${f};
                wR += ${p}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${t.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${g};
                  wC += ${d}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${t.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${X} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${n?i?`(((batch * ${t.inDepth} + xD) * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`((xD * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`wD * ${f} * ${g} +
                      wR * ${g} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let M="max",V=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;e==="avg"&&(V="avgValue / max(count, 1.0)");let z=Math.floor(s/4)*4,H=s%4,K=`
      if (${T}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${M}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${a}, ${l}, ${u});
      const ivec3 pads = ivec3(${x}, ${y}, ${b});
      const float initializationValue = ${R};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${t.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${R});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${m};
            wD += ${c}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${t.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${f};
            wR += ${p}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${z}; wC += 4) {
              int xC = xCCorner + wC * ${d};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                getValue(batch, xD, xR, xC + 2 * ${d}, ch),
                getValue(batch, xD, xR, xC + 3 * ${d}, ch)
              );

              ${K}
            }

            int xC = xCCorner + ${z};
            if (${H===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${K}
            } else if (${H===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                initializationValue,
                initializationValue
              );

              ${K}
            } else if (${H===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                getValue(batch, xD, xR, xC + 2 * ${d}, ch),
                initializationValue
              );

              ${K}
            }
          }
        }
        setOutput(${V});
      }
    `}};function pZ(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t;vn(n,"avgPool");let{filterSize:i,strides:s,pad:a,dimRoundingMode:l}=o,u=1;S.assert($.eitherStridesOrDilationsAreOne(s,u),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${s} and dilations '${u}'`);let c=$.computePool2DInfo(n.shape,i,s,u,a,l);if(c.filterWidth===1&&c.filterHeight===1&&S.arraysEqual(c.inShape,c.outShape))return Dt({inputs:{x:n},backend:e});let p=new jo(c,"avg",!1);return e.runWebGLProgram(p,[n],"float32")}var OA={kernelName:tl,backendName:"webgl",kernelFunc:pZ};function dZ(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{filterSize:i,strides:s,pad:a,dimRoundingMode:l,dataFormat:u}=o,c=[1,1,1],p=$.computePool3DInfo(n.shape,i,s,c,a,l,u),d=new is(p,"avg",!1);return e.runWebGLProgram(d,[n],"float32")}var LA={kernelName:rl,backendName:"webgl",kernelFunc:dZ};var b0=class{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;let e=t.filterHeight,o=t.filterWidth,n=t.strideHeight,i=t.strideWidth,s=t.dilationHeight,a=t.dilationWidth,l=t.effectiveFilterHeight,u=t.effectiveFilterWidth,c=l-1-t.padInfo.top,p=u-1-t.padInfo.left,d=1/(e*o);this.userCode=`
      const ivec2 pads = ivec2(${c}, ${p});
      const float avgMultiplier = float(${d});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${l};
            wR += ${s}) {
          float dyR = float(dyRCorner + wR) / ${n}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${u};
            wC+= ${a}) {
            float dyC = float(dyCCorner + wC) / ${i}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}},S0=class{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;let e=t.filterDepth,o=t.filterHeight,n=t.filterWidth,i=t.strideDepth,s=t.strideHeight,a=t.strideWidth,l=t.dilationDepth,u=t.dilationHeight,c=t.dilationWidth,p=t.effectiveFilterDepth,d=t.effectiveFilterHeight,m=t.effectiveFilterWidth,f=p-1-t.padInfo.front,g=d-1-t.padInfo.top,x=m-1-t.padInfo.left,y=1/(e*o*n);this.userCode=`
      const ivec3 pads = ivec3(${f}, ${g}, ${x});
      const float avgMultiplier = float(${y});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${p};
            wD += ${l}) {
          float dyD = float(dyDCorner + wD) / ${i}.0;

          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${d};
              wR += ${u}) {
            float dyR = float(dyRCorner + wR) / ${s}.0;

            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${m};
                wC += ${c}) {
              float dyC = float(dyCCorner + wC) / ${a}.0;

              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function mZ(r){let{inputs:t,backend:e,attrs:o}=r,{dy:n,input:i}=t,s=i,{filterSize:a,strides:l,pad:u,dimRoundingMode:c}=o,p=[1,1,1],d=$.computePool3DInfo(s.shape,a,l,p,u,c),m=new S0(d);return e.runWebGLProgram(m,[n],s.dtype)}var MA={kernelName:am,backendName:"webgl",kernelFunc:mZ};function fZ(r){let{inputs:t,backend:e,attrs:o}=r,{dy:n,input:i}=t,s=i;vn([n,i],"avgPoolGrad");let{filterSize:a,strides:l,pad:u}=o,c=$.computePool2DInfo(s.shape,a,l,1,u),p=new b0(c);return e.runWebGLProgram(p,[n],s.dtype)}var BA={kernelName:sm,backendName:"webgl",kernelFunc:fZ};function hZ(r){let{inputs:t,backend:e,attrs:o}=r,{a:n,b:i}=t,{transposeA:s,transposeB:a}=o;return ma({a:n,b:i,transposeA:s,transposeB:a,backend:e})}var VA={kernelName:ol,backendName:"webgl",kernelFunc:hZ};var w0=class{constructor(t,e,o,n,i,s){this.outputShape=[],this.variableNames=["x","mean","variance"],$.assertAndGetBroadcastShape(t,e),$.assertAndGetBroadcastShape(t,o);let a="0.0";n!=null&&($.assertAndGetBroadcastShape(t,n),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let l="1.0";i!=null&&($.assertAndGetBroadcastShape(t,i),this.variableNames.push("scale"),l="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${a};
        float scale = ${l};
        float inv = scale * inversesqrt(variance + float(${s}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}};var _0=class{constructor(t,e,o,n,i,s){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],$.assertAndGetBroadcastShape(t,e),$.assertAndGetBroadcastShape(t,o);let a="vec4(0.0)";n!=null&&($.assertAndGetBroadcastShape(t,n),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let l="vec4(1.0)";i!=null&&($.assertAndGetBroadcastShape(t,i),this.variableNames.push("scale"),l="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`
      void main() {
        vec4 offset = ${a};
        vec4 scale = ${l};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${s}));

        setOutput((x - mean) * inv + offset);
      }
    `}};var gZ=({inputs:r,backend:t,attrs:e})=>{let{x:o,mean:n,variance:i,offset:s,scale:a}=r;S.assert(n.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),S.assert(s==null||n.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),S.assert(a==null||n.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:l}=e;l==null&&(l=.001);let u=[o,n,i],c=null;s!=null&&(c=s.shape,u.push(s));let p=null;a!=null&&(p=a.shape,u.push(a));let d=G().getBool("WEBGL_PACK_NORMALIZATION")?new _0(o.shape,n.shape,i.shape,c,p,l):new w0(o.shape,n.shape,i.shape,c,p,l);return t.runWebGLProgram(d,u,u[0].dtype)},WA={kernelName:Ol,backendName:"webgl",kernelFunc:gZ};var C0=class{constructor(t){this.variableNames=["source"],this.outputShape=t,this.rank=t.length;let e=Be(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let o=xZ(this.rank),n,i=t.map((s,a)=>`sourceLoc.${ob[a]} = start[${a}] + coords.${ob[a]};`);n=`
        ${e} sourceLoc;
        ${e} coords = getOutputCoords();
        ${i.join(`
`)}
      `,this.userCode=`
      void main() {
        ${n}
        setOutput(getSource(${o}));
      }
    `}},ob=["x","y","z","w","u","v"];function xZ(r){if(r===1)return"sourceLoc";if(r<=6)return ob.slice(0,r).map(t=>"sourceLoc."+t).join(",");throw Error(`Slicing for rank ${r} is not yet supported`)}var k0=class{constructor(t){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.rank=t.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let e=Be(this.rank),o=At("coords",this.rank),n=At("sourceLoc",this.rank),i=this.rank===1?"sourceLoc":`vec2(${n.slice(-2).join()})`,s=`getChannel(getSource(${n.join()}), ${i})`,a=`
      result.x = ${s};
      if (++${o[this.rank-1]} < ${t[this.rank-1]}) {
        ++${n[this.rank-1]};
        result.y = ${s};
        --${n[this.rank-1]};
      }
    `,l=this.rank===1?"":`
      --${o[this.rank-1]};
      if (++${o[this.rank-2]} < ${t[this.rank-2]}) {
        ++${n[this.rank-2]};
        result.z = ${s};
        if (++${o[this.rank-1]} < ${t[this.rank-1]}) {
          ++${n[this.rank-1]};
          result.w = ${s};
        }
      }
    `,u=this.rank<=4?`sourceLoc = coords +
            ${e}(${t.map((c,p)=>`start[${p}]`).join()});`:t.map((c,p)=>`${n[p]} = ${o[p]} + start[${p}];`).join(`
`);this.userCode=`
      void main() {
        ${e} coords = getOutputCoords();
        ${e} sourceLoc;
        ${u}
        vec4 result = vec4(0.);
        ${a}
        ${l}
        setOutput(result);
      }
    `}};function yZ(r,t,e,o){let n=o.texData.get(r.dataId),i=o.makeTensorInfo(e,r.dtype),s=o.texData.get(i.dataId);Object.assign(s,n),s.refCount=1,s.shape=e,s.dtype=r.dtype;let a=Gt.computeFlatOffset(t,S.computeStrides(r.shape));n.slice&&(a+=n.slice.flatOffset),s.slice={flatOffset:a,origDataId:n.slice&&n.slice.origDataId||r.dataId};let l=o.dataRefCount.get(s.slice.origDataId)||1;return o.dataRefCount.set(s.slice.origDataId,l+1),i}function Xo(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{begin:i,size:s}=o,[a,l]=Gt.parseSliceParams(n,i,s);if(Gt.assertParamsValid(n,a,l),S.sizeFromShape(l)===0)return e.makeTensorInfo(l,n.dtype,[]);if(e.shouldExecuteOnCPU([n])||n.dtype==="string"){let p=e.texData.get(n.dataId),d=$P(p.values,a,l,n.shape,n.dtype);return e.makeTensorInfo(l,n.dtype,d)}let{isPacked:u}=e.texData.get(n.dataId),c=Gt.isSliceContinous(n.shape,a,l);if(u||!c){let p=G().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new k0(l):new C0(l),d=[a];return e.runWebGLProgram(p,[n],n.dtype,d)}return e.uploadToGPU(n.dataId),yZ(n,a,l,e)}var zA={kernelName:_s,backendName:"webgl",kernelFunc:Xo};var vZ=r=>{let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{blockShape:i,crops:s}=o;S.assert(n.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");let a=i.reduce((b,T)=>b*T),l=$.getReshaped(n.shape,i,a),u=$.getPermuted(l.length,i.length),c=$.getReshapedPermuted(n.shape,i,a),p=$.getSliceBeginCoords(s,i.length),d=$.getSliceSize(c,s,i.length),m=[],f=ue({inputs:{x:n},backend:e,attrs:{shape:l}}),g=vt({inputs:{x:f},backend:e,attrs:{perm:u}}),x=ue({inputs:{x:g},backend:e,attrs:{shape:c}}),y=Xo({inputs:{x},backend:e,attrs:{begin:p,size:d}});return m.push(f),m.push(g),m.push(x),m.forEach(b=>e.disposeIntermediateTensorInfo(b)),y},UA={kernelName:nl,backendName:"webgl",kernelFunc:vZ};function bZ(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,weights:i}=t,{size:s}=o,a=e.readSync(n.dataId),l=e.readSync(i.dataId),u=n0(a,l,i.dtype,i.shape,s);return e.makeTensorInfo([s],i.dtype,u)}var GA={kernelName:il,backendName:"webgl",kernelFunc:bZ};var SZ=`
  int r = int(a.r) & int(b.r);
  int g = int(a.g) & int(b.g);
  int rb = int(a.b) & int(b.b);
  int ra = int(a.a) & int(b.a);
  return vec4(r, g, rb, ra);
`,wZ=`
  return float(int(a.r) & int(b.r));
`;function _Z(r){let{inputs:t,backend:e}=r,{a:o,b:n}=t,i=G().getBool("WEBGL_PACK_BINARY_OPERATIONS"),s=G().getNumber("WEBGL_VERSION");if(e.shouldExecuteOnCPU([o,n])||s===1){let l=e.texData.get(o.dataId).values,u=e.texData.get(n.dataId).values,[c,p]=tP(o.shape,n.shape,l,u,o.dtype),d=e.makeTensorInfo(p,o.dtype),m=e.texData.get(d.dataId);return m.values=c,d}let a;return i?a=new ro(SZ,o.shape,n.shape,!1):a=new Lr(wZ,o.shape,n.shape),e.runWebGLProgram(a,[o,n],o.dtype)}var HA={kernelName:sl,backendName:"webgl",kernelFunc:_Z};function CZ(r){let{inputs:t,backend:e}=r,{s0:o,s1:n}=t,i=e.readSync(o.dataId),s=e.readSync(n.dataId),a=$.assertAndGetBroadcastShape(Array.from(i),Array.from(s));return e.makeTensorInfo([a.length],"int32",Int32Array.from(a))}var KA={kernelName:al,backendName:"webgl",kernelFunc:CZ};var kZ="return float(a != b);",nb=it({opSnippet:kZ,cpuKernelImpl:wP,dtype:"bool"}),qA={kernelName:Ii,backendName:"webgl",kernelFunc:nb};function Yn(r){let{inputs:t,backend:e}=r,{input:o}=t,n=e.texData.get(o.dataId);return Dt({inputs:{x:n.complexTensorInfos.real},backend:e})}var jA={kernelName:ws,backendName:"webgl",kernelFunc:Yn};var IZ="return float(int(x));";function XA(r,t){let e=new Zt(r.shape,IZ),o=t.runWebGLProgram(e,[r],"int32");return{dataId:o.dataId,shape:o.shape,dtype:o.dtype}}function ib(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{dtype:i}=o;if(i==="complex64"){if(n.dtype==="complex64")return Dt({inputs:{x:n},backend:e});let s=Sr(n.shape),a=ib({inputs:{x:n},backend:e,attrs:{dtype:"float32"}}),l=Mr({inputs:{real:a,imag:s},backend:e});return s.dispose(),e.disposeIntermediateTensorInfo(a),l}if(n.dtype==="complex64"){let s=Yn({inputs:{input:n},backend:e}),a=ib({inputs:{x:s},backend:e,attrs:{dtype:i}});return e.disposeIntermediateTensorInfo(s),a}if(!S.hasEncodingLoss(n.dtype,i)){let s=Dt({inputs:{x:n},backend:e});return{dataId:s.dataId,shape:s.shape,dtype:i}}if(e.shouldExecuteOnCPU([n])){let s=e.texData.get(n.dataId).values,[a,l,u]=rP(s,n.shape,n.dtype,i);return e.makeTensorInfo(a,l,u)}if(i==="int32")return XA(n,e);if(i==="bool"){let s=e.makeTensorInfo([],"bool",S.getTypedArrayFromDType("bool",1)),l=nb({inputs:{a:n,b:s},backend:e});return e.disposeIntermediateTensorInfo(s),l}throw new Error(`Error in Cast: failed to cast ${n.dtype} to ${i}`)}var YA={kernelName:Rn,backendName:"webgl",kernelFunc:ib};var QA="return ceil(x);",TZ=Te({opSnippet:QA,packedOpSnippet:QA,cpuKernelImpl:oP}),ZA={kernelName:di,backendName:"webgl",kernelFunc:TZ};var I0=class{constructor(t){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=t,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}};var T0=class{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=t,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}};function EZ(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{clipValueMin:i,clipValueMax:s}=o,a;G().getBool("WEBGL_PACK_CLIP")?a=new T0(n.shape):a=new I0(n.shape);let l=[[i],[s]];return e.runWebGLProgram(a,[n],n.dtype,l)}var JA={kernelName:ll,backendName:"webgl",kernelFunc:EZ};var E0=class{constructor(t){this.variableNames=["real","imag"],this.outputShape=t,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}};function eD(r,t){return{dataId:t.dataId,dtype:t.dtype,shape:r.shape}}function NZ(r){let{inputs:t,backend:e}=r,{x:o}=t,n=e.texData.get(o.dataId),i=new E0(o.shape),s=[eD(o,n.complexTensorInfos.real),eD(o,n.complexTensorInfos.imag)];return e.runWebGLProgram(i,s,s[0].dtype)}var tD={kernelName:ul,backendName:"webgl",kernelFunc:NZ};var N0=class{constructor(t){this.outputShape=[],this.outputShape=$.computeOutShape(t,1),this.variableNames=t.map((s,a)=>`T${a}`);let e=new Array(t.length-1);e[0]=t[0][1];for(let s=1;s<e.length;s++)e[s]=e[s-1]+t[s][1];let o=[`if (yC < ${e[0]}) setOutput(getT0(yR, yC));`];for(let s=1;s<e.length;s++){let a=e[s-1];o.push(`else if (yC < ${e[s]}) setOutput(getT${s}(yR, yC-${a}));`)}let n=e.length,i=e[e.length-1];o.push(`else setOutput(getT${n}(yR, yC-${i}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${o.join(`
        `)}
      }
    `}};var $0=class{constructor(t,e){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=$.computeOutShape(t,e);let o=this.outputShape,n=o.length,i=Be(n),s=At("coords",n),a=["x","y","z","w","u","v"].slice(0,n);this.variableNames=t.map((g,x)=>`T${x}`);let l=new Array(t.length-1);l[0]=t[0][e];for(let g=1;g<l.length;g++)l[g]=l[g-1]+t[g][e];let u=a[e],c=a.slice(-2),p=a.join(),d=`if (${u} < ${l[0]}) {
        return getChannel(
            getT0(${p}), vec2(${c.join()}));
        }`;for(let g=1;g<l.length;g++){let x=l[g-1];d+=`
        if (${u} < ${l[g]}  && ${u} >= ${l[g-1]}) {
          return getChannel(
            getT${g}(${R0(a,u,x)}),
            vec2(${R0(c,u,x)}));
        }`}let m=l.length,f=l[l.length-1];d+=`
        return getChannel(
          getT${m}(${R0(a,u,f)}),
          vec2(${R0(c,u,f)}));`,this.userCode=`
      float getValue(${a.map(g=>"int "+g)}) {
        ${d}
      }

      void main() {
        ${i} coords = getOutputCoords();
        vec4 result = vec4(getValue(${s}), 0., 0., 0.);

        ${s[n-1]} = ${s[n-1]} + 1;
        if (${s[n-1]} < ${o[n-1]}) {
          result.g = getValue(${s});
        }

        ${s[n-2]} = ${s[n-2]} + 1;
        if (${s[n-2]} < ${o[n-2]}) {
          result.a = getValue(${s});
        }

        ${s[n-1]} = ${s[n-1]} - 1;
        if (${s[n-2]} < ${o[n-2]} &&
            ${s[n-1]} < ${o[n-1]}) {
          result.b = getValue(${s});
        }
        setOutput(result);
      }
    `}};function R0(r,t,e){let o=r.indexOf(t);return r.map((i,s)=>s===o?`${i} - ${e}`:i).join()}function fa(r){let{inputs:t,backend:e}=r,{input:o}=t,n=e.texData.get(o.dataId);return Dt({inputs:{x:n.complexTensorInfos.imag},backend:e})}var rD={kernelName:Vl,backendName:"webgl",kernelFunc:fa};function Uc(r,t,e){let o=r[0].dtype;if(o==="complex64"){let m=r.map(b=>Yn({inputs:{input:b},backend:e})),f=r.map(b=>fa({inputs:{input:b},backend:e})),g=Uc(m,t,e),x=Uc(f,t,e),y=Mr({inputs:{real:g,imag:x},backend:e});return m.forEach(b=>e.disposeIntermediateTensorInfo(b)),f.forEach(b=>e.disposeIntermediateTensorInfo(b)),e.disposeIntermediateTensorInfo(g),e.disposeIntermediateTensorInfo(x),y}let n=e.shouldExecuteOnCPU(r);if(o==="string"&&(n=!0),n){let m=r.map(R=>{let V=[-1,S.sizeFromShape(R.shape.slice(t))];return ue({inputs:{x:R},backend:e,attrs:{shape:V}})}),f=m.map(R=>({vals:e.readSync(R.dataId),shape:R.shape})),g=$.computeOutShape(m.map(R=>R.shape),1),x=m[0].shape[0]===1,y=nP(f,g,o,x),b=$.computeOutShape(r.map(R=>R.shape),t),T=e.makeTensorInfo(b,o,y);return m.forEach(R=>e.disposeIntermediateTensorInfo(R)),T}let i=r.filter(m=>S.sizeFromShape(m.shape)>0),s=G().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&i[0].shape.length>1;if(i.length===1){let m=s?new Zt(r[0].shape,bn):new Or(r[0].shape,bn);return e.runWebGLProgram(m,r,o)}let a=G().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(i.length>a){let m=[];for(let g=0;g<i.length;g+=a){let x=i.slice(g,g+a);m.push(Uc(x,t,e))}let f=Uc(m,t,e);for(let g of m)e.disposeIntermediateTensorInfo(g);return f}if(s){let m=new $0(i.map(f=>f.shape),t);return e.runWebGLProgram(m,i,o)}let{tensors2D:l,outShape:u}=RZ(i,t,e),c=new N0(l.map(m=>m.shape)),p=e.runWebGLProgram(c,l,o);l.forEach(m=>e.disposeIntermediateTensorInfo(m));let d=ue({inputs:{x:p},attrs:{shape:u},backend:e});return e.disposeIntermediateTensorInfo(p),d}function RZ(r,t,e){let o=$.computeOutShape(r.map(i=>i.shape),t);return{tensors2D:r.map(i=>ue({inputs:{x:i},attrs:{shape:[-1,S.sizeFromShape(i.shape.slice(t))]},backend:e})),outShape:o}}function sb(r){let{inputs:t,backend:e,attrs:o}=r,{axis:n}=o,i=S.parseAxisParam(n,t[0].shape)[0],s=t.map(u=>u.shape);$.assertParamsConsistent(s,i);let a=$.computeOutShape(t.map(u=>u.shape),i);if(S.sizeFromShape(a)===0)return e.makeTensorInfo(a,t[0].dtype,[]);let l=t.filter(u=>S.sizeFromShape(u.shape)>0);return l.length===1?Dt({inputs:{x:l[0]},backend:e}):Uc(l,i,e)}var oD={kernelName:cl,backendName:"webgl",kernelFunc:sb};var Gc=class{constructor(t,e=!1,o=null,n=!1,i=!1){this.variableNames=["x","W"],this.outputShape=t.outShape;let s=t.padInfo.top,a=t.padInfo.left,l=t.strideHeight,u=t.strideWidth,c=t.dilationHeight,p=t.dilationWidth,d=t.filterHeight,m=t.filterWidth,f=Math.floor(t.inChannels/4)*4,g=t.inChannels%4,x=t.dataFormat==="channelsLast",y=x?1:2,b=x?2:3,T=x?3:1,R="",M="";o&&(n?R=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${o}
        }`:i?R=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${o}
        }`:R=`
          float activation(float x) {
            ${o}
          }
        `,M="result = activation(result);");let V=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),n&&this.variableNames.push("preluActivationWeights"),i&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${R}

      const ivec2 strides = ivec2(${l}, ${u});
      const ivec2 pads = ivec2(${s}, ${a});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${T}];

        ivec2 xRCCorner =
            ivec2(coords[${y}], coords[${b}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${d}; wR++) {
          int xR = xRCorner + wR * ${c};

          if (xR < 0 || xR >= ${t.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${m}; wC++) {
            int xC = xCCorner + wC * ${p};

            if (xC < 0 || xC >= ${t.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${f}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${x}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${g===1}) {

              if (${x}) {
                dotProd +=
                    getX(batch, xR, xC, ${f}) *
                    getW(wR, wC, ${f}, d2);
              } else {
                dotProd +=
                    getX(batch, ${f}, xR, xC) *
                    getW(wR, wC, ${f}, d2);
              }

            } else if (${g===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${f}, d2),
                getW(wR, wC, ${f} + 1, d2)
              );

              if (${x}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${f}),
                  getX(batch, xR, xC, ${f} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${f}, xR, xC),
                  getX(batch, ${f} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${g===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${f}, d2),
                getW(wR, wC, ${f} + 1, d2),
                getW(wR, wC, ${f} + 2, d2)
              );

              if (${x}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${f}),
                  getX(batch, xR, xC, ${f} + 1),
                  getX(batch, xR, xC, ${f} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${f}, xR, xC),
                  getX(batch, ${f} + 1, xR, xC),
                  getX(batch, ${f} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${V}
        ${M}
        setOutput(result);
      }
    `}},P0=class{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;let e=t.padInfo.front,o=t.padInfo.top,n=t.padInfo.left,i=t.strideDepth,s=t.strideHeight,a=t.strideWidth,l=t.dilationDepth,u=t.dilationHeight,c=t.dilationWidth,p=t.filterDepth,d=t.filterHeight,m=t.filterWidth,f=Math.floor(t.inChannels/4)*4,g=t.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${i}, ${s}, ${a});
      const ivec3 pads = ivec3(${e}, ${o}, ${n});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${p}; wF++) {
          int xF = xFCorner + wF * ${l};

          if (xF < 0 || xF >= ${t.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${d}; wR++) {
            int xR = xRCorner + wR * ${u};

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${m}; wC++) {
              int xC = xCCorner + wC * ${c};

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${f}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${g===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${f}) *
                  getW(wF, wR, wC, ${f}, d2);
              } else if (${g===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${f}),
                  getX(batch, xF, xR, xC, ${f} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${f}, d2),
                  getW(wF, wR, wC, ${f} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${g===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${f}),
                  getX(batch, xF, xR, xC, ${f} + 1),
                  getX(batch, xF, xR, xC, ${f} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${f}, d2),
                  getW(wF, wR, wC, ${f} + 1, d2),
                  getW(wF, wR, wC, ${f} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}};var Hc=class{constructor(t,e=!1,o=null,n=!1,i=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=lt(this.outputShape.length);let s=t.padInfo.left,a=t.strideWidth,l=t.dilationWidth,u=t.filterHeight,c=t.filterWidth,p=c,d=`
       int xR; int xC; int xCOffset;
       vec4 wTexel; vec4 previous; vec4 final;`;for(let x=0;x<c;x++)d+=`
           vec4 xTexelC${x*2};
           int xTexelC${x*2}Ready;
           vec4 xTexelC${x*2+1};
           int xTexelC${x*2+1}Ready;
           vec4 xC${x};`;d+=`
     for (int r = 0; r < ${u}; r++) {
      for (int d1 = 0; d1 < ${t.inChannels}; d1 += 2) {
       `;for(let x=0;x<c;x++)d+=`
           xTexelC${x*2} = vec4(0.0);
           xTexelC${x*2}Ready = 0;
           xTexelC${x*2+1} = vec4(0.0);
           xTexelC${x*2+1}Ready = 0;
           xC${x} = vec4(0.0);`;d+=`
         xR = xRCorner + r * dilations[0];
         if (xR >=0 && xR < inDims[0]) {
       `;for(let x=0;x<(p+1)/2;x++){let y=x*2;if(d+=`
           xC = xCCorner + ${y*l};
           `,a===1){if(y<c&&(s%2===1?(d+=`
                 xCOffset = xC + 1;
                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y}Ready == 0) {
                   xTexelC${y} = getX(batch, xR, xCOffset, d1);

                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${y}.zw = vec2(0.0);
                   }
                   xTexelC${y}Ready = 1;
                 }
               `,l===1&&y>0?d+=`
                 xC${y} = vec4(xTexelC${y-2}.zw, xTexelC${y}.xy);
                 `:d+=`
                   xCOffset = xC + 1 - 2;

                   if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       previous.zw = vec2(0.0);
                     }

                     xC${y} = vec4(previous.zw, xTexelC${y}.xy);
                   } else {
                     xC${y} = vec4(0.0, 0.0, xTexelC${y}.xy);
                   }
                   `):d+=`
                 if (xC >= 0 && xC < inDims[1] && xTexelC${y}Ready == 0) {
                   xTexelC${y} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${y}.zw = vec2(0.0);
                   }
                   xTexelC${y}Ready = 1;
                 }

                 xC${y} = xTexelC${y};
                 `,y+1<c)){let b=s%2===0?S.nearestLargerEven(l):l;l%2===0&&s%2===1||l%2!==0&&s%2!==1?(d+=`
                   xCOffset = xC + imod(pads[1], 2) + ${b};

                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                     xTexelC${y+1} = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       xTexelC${y+1}.zw = vec2(0.0);
                     }
                     xTexelC${y+1}Ready = 1;
                   }
                   `,l>1?d+=`
                     xCOffset -= 2;
                     if (xCOffset >= 0 && xCOffset < inDims[1]) {
                      previous = getX(batch, xR, xCOffset, d1);
                      xC${y+1} = vec4(previous.zw, xTexelC${y+1}.xy);
                     } else {
                      xC${y+1} = vec4(0.0, 0.0, xTexelC${y+1}.xy);
                     }
                     `:d+=`
                     xC${y+1} = vec4(xTexelC${y}.zw, xTexelC${y+1}.xy);
                     `):b===1?d+=`
                     xC${y+1} = xTexelC${y};
                     `:d+=`
                     xCOffset = xC + ${b};

                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                       xTexelC${y+1} = getX(batch, xR, xCOffset, d1);
                       if (xCOffset + 1 >= inDims[1]) {
                         xTexelC${y+1}.zw = vec2(0.0);
                       }
                       xTexelC${y+1}Ready = 1;
                     }

                     xC${y+1} = xTexelC${y+1};
                     `}}else y<c&&(s%2===1?(d+=`
                 xCOffset = xC + 1 - strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y}Ready == 0) {
                   xTexelC${y} = getX(batch, xR, xCOffset, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${y}.zw = vec2(0.0);
                   }
                   xTexelC${y}Ready = 1;
                 }

                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${y+1}Ready == 0) {
                   xTexelC${y+1} = getX(batch, xR, xC + 1, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xC + 2 >= inDims[1]) {
                     xTexelC${y+1}.zw = vec2(0.0);
                   }
                   xTexelC${y+1}Ready = 1;
                 }

                 xC${y} = vec4(xTexelC${y}.zw, xTexelC${y+1}.zw);
               `,y+1<c&&(d+=`
                   final = vec4(0.0);
                   xCOffset = xC + 1 + strides[1];
                   if(xCOffset >= 0 && xCOffset < inDims[1]) {
                     final = getX(batch, xR, xCOffset, d1);
                   }
                   xC${y+1} = vec4(xTexelC${y+1}.xy, final.xy);
                 `)):(d+=`
                 if(xC >= 0 && xC < inDims[1] && xTexelC${y}Ready == 0) {
                   xTexelC${y} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${y}.zw = vec2(0.0);
                   }
                   xTexelC${y}Ready = 1;
                 }

                 xCOffset = xC + strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                   xTexelC${y+1} = getX(batch, xR, xCOffset, d1);
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${y+1}.zw = vec2(0.);
                   }
                   xTexelC${y+1}Ready = 1;
                 }

                 xC${y} = vec4(
                   xTexelC${y}.xy, xTexelC${y+1}.xy);
               `,y+1<c&&(d+=`
                   xC${y+1} = vec4(xTexelC${y}.zw, xTexelC${y+1}.zw);
                 `)));y<c&&(d+=`
             wTexel = getW(r, ${y}, d1, d2);
             dotProd += xC${y}.xxzz * vec4(wTexel.xy, wTexel.xy);
             if(d1 + 1 < ${t.inChannels}) {
               dotProd += xC${y}.yyww * vec4(wTexel.zw, wTexel.zw);
             }
           `,y+1<c&&(d+=`
               wTexel = getW(r, ${y+1}, d1, d2);
               dotProd += xC${y+1}.xxzz * vec4(wTexel.xy, wTexel.xy);
               if(d1 + 1 < ${t.inChannels}) {
                 dotProd += xC${y+1}.yyww * vec4(wTexel.zw, wTexel.zw);
               }
             `))}d+=`
     }
   `,d+=`
     }
   `,d+=`
     }
   `;let m="",f="";o&&(n?m=`vec4 activation(vec4 a) {
           vec4 b = getPreluActivationWeightsAtOutCoords();
           ${o}
         }`:i?m=`vec4 activation(vec4 a) {
           vec4 b = getLeakyreluAlphaAtOutCoords();
           ${o}
         }`:m=`vec4 activation(vec4 x) {
           ${o}
         }`,f="result = activation(result);");let g=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),n&&this.variableNames.push("preluActivationWeights"),i&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
       ${m}

       void main() {
         ivec4 coords = getOutputCoords();
         int batch = coords.x;
         ivec2 xRCCorner = coords.yz * strides - pads;
         int d2 = coords.w;
         int xRCorner = xRCCorner.x;
         int xCCorner = xRCCorner.y;

         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
         vec4 dotProd = vec4(0.000000000000001);

         ${d}

         vec4 result = dotProd - vec4(0.000000000000001);
         ${g}
         ${f}
         setOutput(result);
       }
     `}};var A0=class{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=t,this.enableShapeUniforms=lt(this.outputShape.length);let{dataFormat:o}=e,n=_t(),i=o==="channelsLast",s=i?1:2,a=i?2:3,l=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${t[2]} && pos < ${t[1]}) {`,u="";for(let c=0;c<=1;c++)for(let p=0;p<=1;p++)u+=`
          blockIndex = rc.z + ${p};
          pos = rc.y + ${c};

          ${l}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${s}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${a}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${i}) {
                  innerDims = vec2(d1, ch);
                  result[${c*2+p}] = getChannel(
                    getA(rc.x, d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${c*2+p}] = getChannel(
                    getA(rc.x, ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${u}

        ${n.output} = result;
      }
    `}};function D0(r,t){let e=r.length;return e>=3?t?[...r.slice(0,-3),r[e-3]*r[e-2],r[e-1]]:[...r.slice(0,-3),r[e-3],r[e-2]*r[e-1]]:!t&&e===1&&r[0]>1?[r[0],1]:null}function F0({x:r,filter:t,convInfo:e,backend:o,bias:n=null,preluActivationWeights:i=null,leakyreluAlpha:s=0,activation:a=null}){let l=r.shape,u=o.texData.get(r.dataId),c=e.inChannels,p=l[0]*l[1]*l[2],d=e.outChannels,m=e.dataFormat==="channelsLast",f=!1,g=!1,x,y=[];if(i!=null){let R=D0(i.shape,m);R!=null&&(i=ue({inputs:{x:i},backend:o,attrs:{shape:R}}),y.push(i))}if(n!=null){let R=D0(n.shape,m);R!=null&&(n=ue({inputs:{x:n},backend:o,attrs:{shape:R}}),y.push(n))}if(!((p===1||d===1)&&c>rb)&&u.isPacked&&m&&u.texture!=null&&l[2]%2!==0&&S.arraysEqual(u.shape.slice(-3),l.slice(-3))){let R=l[0]*l[1]*(l[2]+1),M={dataId:r.dataId,shape:[1,R,e.inChannels],dtype:r.dtype},V=u.shape;u.shape=u.shape.slice(),u.shape[u.shape.length-2]++,S.assert(la(u.shape,M.shape),()=>`packed reshape ${u.shape} to ${M.shape} isn't free`);let z=ue({inputs:{x:t},backend:o,attrs:{shape:[1,e.inChannels,e.outChannels]}});y.push(z);let H=ma({a:M,b:z,backend:o,transposeA:f,transposeB:g,bias:n,activation:a,preluActivationWeights:i,leakyreluAlpha:s}),K=o.texData.get(H.dataId);S.assert(K.isPacked,()=>"batchMatMul result is expected to be packed"),u.shape=V,K.shape=e.outShape,x=Dt({inputs:{x:H},backend:o}),x.shape=e.outShape,y.push(H)}else{let R=e.outHeight*e.outWidth,M=ue({inputs:{x:r},backend:o,attrs:{shape:m?[e.batchSize,R,e.inChannels]:[e.batchSize,e.inChannels,R]}}),V=ue({inputs:{x:t},backend:o,attrs:{shape:[1,e.inChannels,e.outChannels]}}),z=ma({a:m?M:V,b:m?V:M,transposeA:!m,transposeB:g,backend:o,bias:n,activation:a,preluActivationWeights:i,leakyreluAlpha:s});x=ue({inputs:{x:z},backend:o,attrs:{shape:e.outShape}}),y.push(M),y.push(V),y.push(z)}for(let R of y)o.disposeIntermediateTensorInfo(R);return x}function O0({x:r,filter:t,convInfo:e,backend:o,bias:n=null,preluActivationWeights:i=null,leakyreluAlpha:s=0,activation:a=null}){let{filterWidth:l,filterHeight:u,inChannels:c,outWidth:p,outHeight:d,dataFormat:m}=e,f=m==="channelsLast",g=l*u*c,x=d*p,y=[e.batchSize,g,x],b=!0,T=!1,R=[];if(i!=null){let Xe=D0(i.shape,f);Xe!=null&&(i=ue({inputs:{x:i},backend:o,attrs:{shape:Xe}}),R.push(i))}if(n!=null){let Xe=D0(n.shape,f);Xe!=null&&(n=ue({inputs:{x:n},backend:o,attrs:{shape:Xe}}),R.push(n))}let M=ue({inputs:{x:t},backend:o,attrs:{shape:[1,g,S.sizeFromShape(t.shape)/g]}});R.push(M);let V=new A0(y,e),z=[r.shape,[e.padInfo.top,e.padInfo.left],[e.strideHeight,e.strideWidth],[e.dilationHeight,e.dilationWidth],[e.inChannels],[e.filterWidth*e.inChannels],[e.outWidth]],H=o.runWebGLProgram(V,[r],"float32",z),K=ue({inputs:{x:H},backend:o,attrs:{shape:y}});R.push(H),R.push(K);let X=n!=null,te=i!=null,ce=a==="leakyrelu",pe=a?Xn(a,!0):null,ve=new zc(f?K.shape:M.shape,f?M.shape:K.shape,f?[e.batchSize,x,e.outChannels]:[e.batchSize,e.outChannels,x],b,T,X,pe,te,ce),Se=f?[K,M]:[M,K];if(n&&Se.push(n),te&&Se.push(i),ce){let Xe=o.makeTensorInfo([],"float32",S.createScalarValue(s,"float32"));Se.push(Xe),R.push(Xe)}let Ee=o.runWebGLProgram(ve,Se,"float32"),je=ue({inputs:{x:Ee},backend:o,attrs:{shape:e.outShape}});R.push(Ee);for(let Xe of R)o.disposeIntermediateTensorInfo(Xe);return je}function $Z(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,filter:i}=t,{strides:s,pad:a,dataFormat:l,dilations:u,dimRoundingMode:c}=o,p=$.convertConv2DDataFormat(l),d=$.computeConv2DInfo(n.shape,i.shape,s,u,a,c,!1,p),m;if(d.filterHeight===1&&d.filterWidth===1&&d.dilationHeight===1&&d.dilationWidth===1&&d.strideHeight===1&&d.strideWidth===1&&(d.padInfo.type==="SAME"||d.padInfo.type==="VALID"))m=F0({x:n,filter:i,convInfo:d,backend:e});else if(d.strideWidth<=2&&p==="channelsLast"&&G().getBool("WEBGL_EXP_CONV")){let g=new Hc(d),x=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];m=e.runWebGLProgram(g,[n,i],"float32",x)}else if(G().getBool("WEBGL_CONV_IM2COL"))m=O0({x:n,filter:i,convInfo:d,backend:e});else{let g=new Gc(d);m=e.runWebGLProgram(g,[n,i],"float32")}let f=ue({inputs:{x:m},backend:e,attrs:{shape:d.outShape}});return e.disposeIntermediateTensorInfo(m),f}var nD={kernelName:pl,backendName:"webgl",kernelFunc:$Z};var L0=class{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;let e=t.strideHeight,o=t.strideWidth,n=t.padInfo.top,i=t.padInfo.left,s=t.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${t.batchSize}; b++) {
          for (int yR = 0; yR < ${t.outHeight}; yR++) {
            int xR = wR + yR * ${e} - ${n};

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${t.outWidth}; yC++) {
              int xC = wC + yC * ${o} - ${i};

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              ${s?`float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);`:`float dyValue = getDy(b, d2, yR, yC);
              float xValue = getX(b, d1, xR, xC);
              dotProd += (xValue * dyValue);`}
            }
          }
        }
        setOutput(dotProd);
      }
    `}},M0=class{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;let e=t.filterHeight,o=t.filterWidth,n=t.strideHeight,i=t.strideWidth,s=t.dataFormat==="channelsLast",a=e-1-t.padInfo.top,l=o-1-t.padInfo.left,u=s?1:2,c=s?2:3,p=s?3:1;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${l});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${p}];

        ivec2 dyCorner = ivec2(coords[${u}], coords[${c}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${e}; wR++) {
          float dyR = float(dyRCorner + wR) / ${n}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${e} - 1 - wR;

          for (int wC = 0; wC < ${o}; wC++) {
            float dyC = float(dyCCorner + wC) / ${i}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${o} - 1 - wC;

            for (int d2 = 0; d2 < ${t.outChannels}; d2++) {

              if (${s}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}},B0=class{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;let e=t.strideDepth,o=t.strideHeight,n=t.strideWidth,i=t.padInfo.front,s=t.padInfo.top,a=t.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${t.batchSize}; b++) {
          for (int yF = 0; yF < ${t.outDepth}; yF++) {
            int xF = wF + yF * ${e} - ${i};

            if (xF < 0 || xF >= ${t.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${t.outHeight}; yR++) {
              int xR = wR + yR * ${o} - ${s};

              if (xR < 0 || xR >= ${t.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${t.outWidth}; yC++) {
                int xC = wC + yC * ${n} - ${a};

                if (xC < 0 || xC >= ${t.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}},V0=class{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;let e=t.filterDepth,o=t.filterHeight,n=t.filterWidth,i=t.strideDepth,s=t.strideHeight,a=t.strideWidth,l=e-1-t.padInfo.front,u=o-1-t.padInfo.top,c=n-1-t.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${l}, ${u}, ${c});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${e}; wF++) {
          float dyF = float(dyFCorner + wF) / ${i}.0;

          if (dyF < 0.0 || dyF >= ${t.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${e} - 1 - wF;

          for (int wR = 0; wR < ${o}; wR++) {
            float dyR = float(dyRCorner + wR) / ${s}.0;

            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${o} - 1 - wR;

            for (int wC = 0; wC < ${n}; wC++) {
              float dyC = float(dyCCorner + wC) / ${a}.0;

              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${n} - 1 - wC;

              for (int d2 = 0; d2 < ${t.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function PZ(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,dy:i}=t,{strides:s,pad:a,dataFormat:l,dimRoundingMode:u,filterShape:c}=o,p=$.convertConv2DDataFormat(l),d=$.computeConv2DInfo(n.shape,c,s,1,a,u,!1,p),m=new L0(d);return e.runWebGLProgram(m,[n,i],"float32")}var iD={kernelName:dl,backendName:"webgl",kernelFunc:PZ};var W0=class{constructor(t){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=t.inShape,this.enableShapeUniforms=lt(this.outputShape.length);let e=t.filterHeight,o=t.filterWidth,n=e-1-t.padInfo.top,i=o-1-t.padInfo.left;this.userCode=`
      const ivec2 pads = ivec2(${n}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];

        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        vec4 result = vec4(0.);
        for (int wR = 0; wR < ${e}; wR++) {
          float dyR = float(dyRCorner + wR) / strides[0];
          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);
          int wRPerm = ${e} - 1 - wR;

          for (int wC = 0; wC < ${o}; wC++) {
            int wCPerm = ${o} - 1 - wC;

            float dyC = float(dyCCorner + wC) / strides[1];
            bool idyCVal = (dyC >= 0.0) && (dyC < ${t.outWidth}.0)
              && (fract(dyC) == 0.0);
            int idyC = int(dyC);

            float dyC2 = float(dyCCorner + wC + 1) / strides[1];
            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${t.outWidth}.0)
              && (fract(dyC2) == 0.0);
            int idyC2 = int(dyC2);

            if (idyCVal && idyCVal2) {
              for (int d2 = 0; d2 < ${t.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?
                  dySample : getDy(batch, idyR, idyC2, d2);

                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));

                dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample2.xy : dySample2.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal) {
              for (int d2 = 0; d2 < ${t.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal2) {
              for (int d2 = 0; d2 < ${t.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC2, d2);
                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            }
          }
        }
        setOutput(result);
      }
    `}};function AZ(r){let{inputs:t,backend:e,attrs:o}=r,{dy:n,filter:i}=t,{inputShape:s,strides:a,pad:l,dataFormat:u,dimRoundingMode:c}=o,p=$.convertConv2DDataFormat(u),d=$.computeConv2DInfo(s,i.shape,a,1,l,c,!1,p);if(G().getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&p==="channelsLast"){let m=[[d.strideHeight,d.strideWidth]],f=new W0(d);return e.runWebGLProgram(f,[n,i],"float32",m)}else{let m=new M0(d);return e.runWebGLProgram(m,[n,i],"float32")}}var sD={kernelName:ml,backendName:"webgl",kernelFunc:AZ};function DZ(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,filter:i}=t,{strides:s,pad:a,dilations:l}=o,u=$.computeConv3DInfo(n.shape,i.shape,s,l,a),c=new P0(u);return e.runWebGLProgram(c,[n,i],"float32")}var aD={kernelName:fl,backendName:"webgl",kernelFunc:DZ};function FZ(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,dy:i}=t,{strides:s,pad:a,filterShape:l}=o,u=$.computeConv3DInfo(n.shape,l,s,1,a),c=new B0(u);return e.runWebGLProgram(c,[n,i],"float32")}var lD={kernelName:lm,backendName:"webgl",kernelFunc:FZ};function OZ(r){let{inputs:t,backend:e,attrs:o}=r,{dy:n,filter:i}=t,{pad:s,strides:a,inputShape:l}=o,u=$.computeConv3DInfo(l,i.shape,a,1,s),c=new V0(u);return e.runWebGLProgram(c,[n,i],"float32")}var uD={kernelName:hl,backendName:"webgl",kernelFunc:OZ};var LZ=Ro+`
  return cos(x);
`,MZ=`
  vec4 result = cos(x);
  bvec4 isNaN = isnan(x);
  ${oo}
  return result;
`,BZ=Te({opSnippet:LZ,packedOpSnippet:MZ}),cD={kernelName:gl,backendName:"webgl",kernelFunc:BZ};var VZ=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,WZ=Te({opSnippet:VZ}),pD={kernelName:xl,backendName:"webgl",kernelFunc:WZ};var z0=class{constructor(t,e,o,n,i){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];let[s,a,l,u]=t,[c]=e,[p,d]=o;this.outputShape=[c,p,d,u];let m=n==="bilinear"?1:0,[f,g]=[`${a-1}.0`,`${l-1}.0`],[x,y,b]=p>1?[`${(a-1)/(p-1)}`,"(y2-y1) * height_ratio",`y1*${f} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${f}`],[T,R,M]=d>1?[`${(l-1)/(d-1)}`,"(x2-x1) * width_ratio",`x1*${g} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${g}`];this.userCode=`
      const float height_ratio = float(${x});
      const float width_ratio = float(${T});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${s}) {
          return;
        }

        float height_scale = ${y};
        float width_scale = ${R};

        float in_y = ${b};
        if( in_y < 0.0 || in_y > ${f} ) {
          setOutput(float(${i}));
          return;
        }
        float in_x = ${M};
        if( in_x < 0.0 || in_x > ${g} ) {
          setOutput(float(${i}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${m} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}};var zZ=r=>{let{inputs:t,backend:e,attrs:o}=r,{image:n,boxes:i,boxInd:s}=t,{cropSize:a,method:l,extrapolationValue:u}=o,c=new z0(n.shape,i.shape,a,l,u);return e.runWebGLProgram(c,[n,i,s],"float32")},dD={kernelName:bl,backendName:"webgl",kernelFunc:zZ};var Kc=function(r){return r.Prod="*",r.Sum="+",r}(Kc||{}),cd=class{constructor(t,e,o,n){this.op=t,this.outputShape=e,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];let i=this.outputShape.length,s=this.op===Kc.Prod?"1.0":"0.0",a=o?s:`getX(${mD(i,"coords",this.op)})`,l=this.outputShape[this.outputShape.length-1],u="",c="";o?(u=n?`end != ${l-1}`:"end != 0",c=n?"end + 1":"end - 1"):(u=n?`end + pow2 < ${l}`:"end >= pow2",c=n?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${Be(i)} coords = getOutputCoords();
        int end = ${fD(i,"coords",this.op)};
        float val = ${a};
        int pow2 = int(pow(2.0, index));
        if (${u}) {
          int idx = ${c};
          ${fD(i,"coords",this.op)} = idx;
          val ${this.op}= getX(${mD(i,"coords",this.op)});
        }
        setOutput(val);
      }
    `}};function mD(r,t,e){if(r===1)return`${t}`;if(r===2)return`${t}.x, ${t}.y`;if(r===3)return`${t}.x, ${t}.y, ${t}.z`;if(r===4)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw new Error(`Cumulative ${e} for rank ${r} is not yet supported`)}function fD(r,t,e){if(r===1)return`${t}`;if(r===2)return`${t}.y`;if(r===3)return`${t}.z`;if(r===4)return`${t}.w`;throw new Error(`Cumulative ${e} for rank ${r} is not yet supported`)}function U0(r,t,e,o,n,i){let s=t.shape.length,a=$.getAxesPermutation([o],s),l=t;a!=null&&(l=vt({inputs:{x:t},backend:e,attrs:{perm:a}}));let u=$.getInnerMostAxes(1,s)[0];if(u!==s-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${o}`);let c=l.shape[u],p=Dt({inputs:{x:l},backend:e});for(let d=0;d<=Math.ceil(Math.log2(c))-1;d++){let m=new cd(r,l.shape,!1,i),f=[[d]],g=p;p=e.runWebGLProgram(m,[p],p.dtype,f),e.disposeIntermediateTensorInfo(g)}if(n){let d=new cd(r,l.shape,n,i),m=p;p=e.runWebGLProgram(d,[p],p.dtype),e.disposeIntermediateTensorInfo(m)}if(a!=null){let d=$.getUndoAxesPermutation(a),m=vt({inputs:{x:p},backend:e,attrs:{perm:d}});return e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(l),m}return p}function UZ(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{axis:i,exclusive:s,reverse:a}=o;return U0(Kc.Prod,n,e,i,s,a)}var hD={kernelName:yl,backendName:"webgl",kernelFunc:UZ};function GZ(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{axis:i,exclusive:s,reverse:a}=o;return U0(Kc.Sum,n,e,i,s,a)}var gD={kernelName:vl,backendName:"webgl",kernelFunc:GZ};function HZ(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,weights:i}=t,{size:s,binaryOutput:a}=o;if(n.shape.length===1){let l=e.readSync(n.dataId),u=e.readSync(i.dataId),c=n0(l,u,i.dtype,i.shape,s);return e.makeTensorInfo([s],i.dtype,c)}else if(n.shape.length===2){let l=e.bufferSync(n),u=e.bufferSync(i),c=eP(l,u,s,a);return e.makeTensorInfo(c.shape,i.dtype,c.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${n.shape.length}.`)}var xD={kernelName:Sl,backendName:"webgl",kernelFunc:HZ};var G0=class{constructor(t,e,o){this.variableNames=["x"],this.outputShape=[],this.outputShape=t,this.blockSize=e,this.dataFormat=o,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${e};
      int offset_h = imod(h, ${e});
      int in_w = w / ${e};
      int offset_w = imod(w, ${e});
      int offset_d = (offset_h * ${e} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};function KZ(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{blockSize:i,dataFormat:s}=o,a=n.shape[0],l=s==="NHWC"?n.shape[1]:n.shape[2],u=s==="NHWC"?n.shape[2]:n.shape[3],c=s==="NHWC"?n.shape[3]:n.shape[1],p=l*i,d=u*i,m=c/(i*i),f=s==="NHWC"?[a,p,d,m]:[a,m,p,d],g=new G0(f,i,s);return e.runWebGLProgram(g,[n],n.dtype)}var yD={kernelName:wl,backendName:"webgl",kernelFunc:KZ};var qc=class{constructor(t,e=!1,o=null,n=!1,i=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=lt(this.outputShape.length);let s=t.filterHeight,a=t.filterWidth,l=t.outChannels/t.inChannels,u="",c="";o&&(n?u=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${o}
        }`:i?u=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${o}
        }`:u=`
          float activation(float x) {
            ${o}
          }
        `,c="result = activation(result);");let p=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),n&&this.variableNames.push("preluActivationWeights"),i&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${u}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${l};
        int q = d2 - d1 * ${l};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${s}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${a}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${p}
        ${c}
        setOutput(result);
      }
    `}};var jc=class{constructor(t,e=!1,o=null,n=!1,i=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=lt(this.outputShape.length);let s=t.outChannels/t.inChannels,a=t.padInfo.left,l=t.strideWidth,u=t.dilationWidth,c=t.filterHeight,p=t.filterWidth,d=p,m=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let y=0;y<p;y++)m+=`
          vec4 xTexelC${y*2};
          int xTexelC${y*2}Ready;
          vec4 xTexelC${y*2+1};
          int xTexelC${y*2+1}Ready;
          vec4 xC${y};`;m+=`
    for (int r = 0; r < ${c}; r++) {
      `;for(let y=0;y<p;y++)m+=`
          xTexelC${y*2} = vec4(0.0);
          xTexelC${y*2}Ready = 0;
          xTexelC${y*2+1} = vec4(0.0);
          xTexelC${y*2+1}Ready = 0;
          xC${y} = vec4(0.0);`;m+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let y=0;y<(d+1)/2;y++){let b=y*2;if(m+=`
          xC = xCCorner + ${b*u};
          `,l===1){if(b<p&&(a%2===1?(m+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b}Ready == 0) {
                  xTexelC${b} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${b}.zw = vec2(0.0);
                  }
                  xTexelC${b}Ready = 1;
                }
              `,u===1&&b>0?m+=`
                xC${b} = vec4(xTexelC${b-2}.zw, xTexelC${b}.xy);
                `:m+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${b} = vec4(previous.zw, xTexelC${b}.xy);
                  } else {
                    xC${b} = vec4(0.0, 0.0, xTexelC${b}.xy);
                  }
                  `):m+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${b}Ready == 0) {
                  xTexelC${b} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${b}.zw = vec2(0.0);
                  }
                  xTexelC${b}Ready = 1;
                }

                xC${b} = xTexelC${b};
                `,b+1<p)){let T=a%2===0?S.nearestLargerEven(u):u;u%2===0&&a%2===1||u%2!==0&&a%2!==1?(m+=`
                  xCOffset = xC + imod(pads[1], 2) + ${T};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                    xTexelC${b+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${b+1}.zw = vec2(0.0);
                    }
                    xTexelC${b+1}Ready = 1;
                  }
                  `,u>1?m+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);
                     xC${b+1} = vec4(previous.zw, xTexelC${b+1}.xy);
                    } else {
                     xC${b+1} = vec4(0.0, 0.0, xTexelC${b+1}.xy);
                    }
                    `:m+=`
                    xC${b+1} = vec4(xTexelC${b}.zw, xTexelC${b+1}.xy);
                    `):T===1?m+=`
                    xC${b+1} = xTexelC${b};
                    `:m+=`
                    xCOffset = xC + ${T};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                      xTexelC${b+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${b+1}.zw = vec2(0.0);
                      }
                      xTexelC${b+1}Ready = 1;
                    }

                    xC${b+1} = xTexelC${b+1};
                    `}}else b<p&&(a%2===1?(m+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b}Ready == 0) {
                  xTexelC${b} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${b}.zw = vec2(0.0);
                  }
                  xTexelC${b}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${b+1}Ready == 0) {
                  xTexelC${b+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${b+1}.zw = vec2(0.0);
                  }
                  xTexelC${b+1}Ready = 1;
                }

                xC${b} = vec4(xTexelC${b}.zw, xTexelC${b+1}.zw);
              `,b+1<p&&(m+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${b+1} = vec4(xTexelC${b+1}.xy, final.xy);
                `)):(m+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${b}Ready == 0) {
                  xTexelC${b} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${b}.zw = vec2(0.0);
                  }
                  xTexelC${b}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                  xTexelC${b+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${b+1}.zw = vec2(0.);
                  }
                  xTexelC${b+1}Ready = 1;
                }

                xC${b} = vec4(
                  xTexelC${b}.xy, xTexelC${b+1}.xy);
              `,b+1<p&&(m+=`
                  xC${b+1} = vec4(xTexelC${b}.zw, xTexelC${b+1}.zw);
                `)));b<p&&(m+=`
            wTexel = getW(r, ${b}, d1, q);
            dotProd += xC${b} * vec4(wTexel.xz, wTexel.xz);
          `,b+1<p&&(m+=`
              wTexel = getW(r, ${b+1}, d1, q);
              dotProd += xC${b+1} * vec4(wTexel.xz, wTexel.xz);
            `))}m+=`
    }
  `,m+=`
      }
    `;let f="",g="";o&&(n?f=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${o}
        }`:i?f=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${o}
        }`:f=`vec4 activation(vec4 x) {
          ${o}
        }`,g="result = activation(result);");let x=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),n&&this.variableNames.push("preluActivationWeights"),i&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${f}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${s};
        int q = d2 - d1 * ${s};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${m}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${x}
        ${g}
        setOutput(result);
      }
    `}};function qZ(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,filter:i}=t,{strides:s,pad:a,dilations:l,dimRoundingMode:u}=o,c=l;c==null&&(c=[1,1]),S.assert($.eitherStridesOrDilationsAreOne(s,c),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${s} and dilations '${c}'`);let p=$.computeConv2DInfo(n.shape,i.shape,s,c,a,u,!0),d;G().getBool("WEBGL_PACK_DEPTHWISECONV")&&p.strideWidth<=2&&p.outChannels/p.inChannels===1?d=new jc(p):d=new qc(p);let m=[[p.padInfo.top,p.padInfo.left],[p.strideHeight,p.strideWidth],[p.dilationHeight,p.dilationWidth],[p.inHeight,p.inWidth]];return e.runWebGLProgram(d,[n,i],"float32",m)}var vD={kernelName:_l,backendName:"webgl",kernelFunc:qZ};var H0=class{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;let e=t.strideHeight,o=t.strideWidth,n=t.padInfo.top,i=t.padInfo.left,s=t.outChannels/t.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${s} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${t.batchSize}; b++) {
          for (int yR = 0; yR < ${t.outHeight}; yR++) {
            int xR = wR + yR * ${e} - ${n};

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${t.outWidth}; yC++) {
              int xC = wC + yC * ${o} - ${i};

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}},K0=class{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;let e=t.filterHeight,o=t.filterWidth,n=t.strideHeight,i=t.strideWidth,s=e-1-t.padInfo.top,a=o-1-t.padInfo.left,l=t.outChannels/t.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${s}, ${a});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${e}; wR++) {
          float dyR = float(dyRCorner + wR) / ${n}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${e} - 1 - wR;

          for (int wC = 0; wC < ${o}; wC++) {
            float dyC = float(dyCCorner + wC) / ${i}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${o} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${l}; dm++) {
              int d2 = d1 * ${l} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function jZ(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,dy:i}=t,{strides:s,dilations:a,pad:l,dimRoundingMode:u,filterShape:c}=o,p=$.computeConv2DInfo(n.shape,c,s,a,l,u,!0),d=new H0(p);return e.runWebGLProgram(d,[n,i],"float32")}var bD={kernelName:Cl,backendName:"webgl",kernelFunc:jZ};function XZ(r){let{inputs:t,backend:e,attrs:o}=r,{dy:n,filter:i}=t,{strides:s,dilations:a,pad:l,dimRoundingMode:u,inputShape:c}=o,p=$.computeConv2DInfo(c,i.shape,s,a,l,u,!0),d=new K0(p);return e.runWebGLProgram(d,[n,i],"float32")}var SD={kernelName:kl,backendName:"webgl",kernelFunc:XZ};var q0=class{constructor(t){this.variableNames=["X"],this.outputShape=[t,t],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}};function YZ(r){let{inputs:t,backend:e}=r,{x:o}=t,n=[...o.shape,...o.shape],i=S.sizeFromShape(o.shape),s=ue({inputs:{x:o},backend:e,attrs:{shape:[i]}}),a=new q0(i),l=e.runWebGLProgram(a,[s],s.dtype),u=ue({inputs:{x:l},backend:e,attrs:{shape:n}});return e.disposeIntermediateTensorInfo(s),e.disposeIntermediateTensorInfo(l),u}var wD={kernelName:Il,backendName:"webgl",kernelFunc:YZ};var j0=class{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;let{inHeight:e,inWidth:o,padInfo:n,strideHeight:i,strideWidth:s,filterHeight:a,filterWidth:l,dilationHeight:u,dilationWidth:c}=t,{top:p,left:d}=n;this.userCode=`
      const ivec2 strides = ivec2(${i}, ${s});
      const ivec2 pads = ivec2(${p}, ${d});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${a}; h++) {
          int hIn = hBeg + h * ${u};

          if (hIn >= 0 && hIn < ${e}) {
            for (int w = 0; w < ${l}; w++) {
              int wIn = wBeg + w * ${c};

              if (wIn >= 0 && wIn < ${o}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}};function QZ(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,filter:i}=t,{strides:s,pad:a,dilations:l}=o,u=$.computeDilation2DInfo(n.shape,i.shape,s,a,"NHWC",l),c,p=new j0(u);c=e.runWebGLProgram(p,[n,i],"float32");let d=ue({inputs:{x:c},backend:e,attrs:{shape:u.outShape}});return e.disposeIntermediateTensorInfo(c),d}var _D={kernelName:Tl,backendName:"webgl",kernelFunc:QZ};function ZZ(r){let{inputs:t,backend:e,attrs:o}=r,{equation:n}=o,i=t,{allDims:s,summedDims:a,idDims:l}=$.decodeEinsumEquation(n,i.length);$.checkEinsumDimSizes(s.length,l,i);let{path:u,steps:c}=$.getEinsumComputePath(a,l),p=c.length,d=null,m=s.length,f=[];for(let g=0;g<p;++g){for(let x of c[g]){let{permutationIndices:y,expandDims:b}=$.getEinsumPermutation(m,l[x]),T;$.isIdentityPermutation(y)?T=i[x]:(T=vt({inputs:{x:i[x]},backend:e,attrs:{perm:y}}),f.push(T));let R=T.shape.slice();for(let M=0;M<b.length;++M)R.splice(b[M],0,1);S.arraysEqual(T.shape,R)||(T=ue({inputs:{x:T},backend:e,attrs:{shape:R}}),f.push(T)),d===null?d=T:(d=ld({inputs:{a:T,b:d},backend:e}),f.push(d))}g<p-1&&(u[g]>=0&&(d=da({inputs:{x:d},backend:e,attrs:{axis:u[g]-(s.length-m),keepDims:!1}}),f.push(d)),m--)}for(let g of f)g!==d&&e.disposeIntermediateTensorInfo(g);return d}var CD={kernelName:Nl,backendName:"webgl",kernelFunc:ZZ};var JZ="return (x >= 0.0) ? x : (exp(x) - 1.0);",eJ=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,tJ=Te({opSnippet:JZ,packedOpSnippet:eJ}),kD={kernelName:Rl,backendName:"webgl",kernelFunc:tJ};var rJ="return (b >= 0.0) ? a : a * (b + 1.0);",oJ=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,nJ=r=>{let{inputs:t,backend:e}=r,{dy:o,y:n}=t,i=G().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new ro(oJ,o.shape,n.shape):new Lr(rJ,o.shape,n.shape);return e.runWebGLProgram(i,[o,n],o.dtype)},ID={kernelName:um,backendName:"webgl",kernelFunc:nJ};var iJ=`
  return vec4(equal(a, b));
`,sJ="return float(a == b);",aJ=it({opSnippet:sJ,packedOpSnippet:iJ,dtype:"bool",cpuKernelImpl:iP}),TD={kernelName:mi,backendName:"webgl",kernelFunc:aJ};var lJ=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${$.ERF_P};
  float a1 = ${$.ERF_A1};
  float a2 = ${$.ERF_A2};
  float a3 = ${$.ERF_A3};
  float a4 = ${$.ERF_A4};
  float a5 = ${$.ERF_A5};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,uJ=Te({opSnippet:lJ}),ED={kernelName:$l,backendName:"webgl",kernelFunc:uJ};var cJ=Ro+`
  return exp(x);
`,pJ=`
  vec4 result = exp(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,ab=Te({opSnippet:cJ,packedOpSnippet:pJ,cpuKernelImpl:sP,dtype:"float32"}),ND={kernelName:fi,backendName:"webgl",kernelFunc:ab};function X0(r){let{inputs:t,attrs:e,backend:o}=r,{dim:n}=e,{input:i}=t,s=i.shape.length,a=i.shape.slice(),l=n;return n<0&&(S.assert(-(s+1)<=n,()=>`Axis must be in the interval [${-(s+1)}, ${s}]`),l=s+n+1),a.splice(l,0,1),ue({inputs:{x:i},backend:o,attrs:{shape:a}})}var RD={kernelName:Pl,backendName:"webgl",kernelFunc:X0};var $D="return exp(x) - 1.0;",dJ=Te({opSnippet:$D,packedOpSnippet:$D,cpuKernelImpl:aP}),PD={kernelName:hi,backendName:"webgl",kernelFunc:dJ};var pd=class{constructor(t,e,o){this.variableNames=["real","imag"];let n=e[1];this.outputShape=e;let i=o?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,s=o?`${n}.0`:"1.0",a;if(t==="real")a="return real * expR - imag * expI;";else if(t==="imag")a="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${t}.`);this.userCode=`
      const float exponentMultiplier = ${i};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${a}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${n});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${n}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${s};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}};function Y0(r,t,e){let o=e.texData.get(r.dataId),n=S.sizeFromShape(r.shape),i=r.shape[r.shape.length-1],s=n/i,a=ue({inputs:{x:r},backend:e,attrs:{shape:[s,i]}}),l=a.shape,u=new pd("real",l,t),c=new pd("imag",l,t),p=[{dataId:o.complexTensorInfos.real.dataId,dtype:o.complexTensorInfos.real.dtype,shape:l},{dataId:o.complexTensorInfos.imag.dataId,dtype:o.complexTensorInfos.imag.dtype,shape:l}],d=e.runWebGLProgram(u,p,"float32"),m=e.runWebGLProgram(c,p,"float32"),f=Mr({inputs:{real:d,imag:m},backend:e});e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(m);let g=ue({inputs:{x:f},backend:e,attrs:{shape:r.shape}});return e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(f),g}function mJ(r){let{inputs:t,backend:e}=r,{input:o}=t;return Y0(o,!1,e)}var AD={kernelName:Al,backendName:"webgl",kernelFunc:mJ};var Q0=class{constructor(t,e){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=t,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}};function Qn(r){let{backend:t,attrs:e}=r,{shape:o,value:n}=e,{dtype:i}=e;if(i=i||S.inferDtype(n),i==="string"){let s=S.getArrayFromDType(i,S.sizeFromShape(o));return s.fill(n),t.makeTensorInfo(o,i,s)}else{let s=new Q0(o,n),a=[[n]];return t.runWebGLProgram(s,[],i,a)}}var DD={kernelName:Dl,backendName:"webgl",kernelFunc:Qn};var Z0=class{constructor(t){this.variableNames=["Image"],this.outputShape=[];let e=t[2];this.outputShape=t,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${e} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${e}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}};var FD={kernelName:Fl,backendName:"webgl",kernelFunc:({inputs:r,backend:t})=>{let{image:e}=r,o=t,n=new Z0(e.shape);return o.runWebGLProgram(n,[e],e.dtype)}};var OD="return floor(x);",fJ=Te({opSnippet:OD,packedOpSnippet:OD,cpuKernelImpl:lP}),LD={kernelName:gi,backendName:"webgl",kernelFunc:fJ};var hJ=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,gJ=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,xJ=it({opSnippet:hJ,packedOpSnippet:gJ,dtype:"int32"}),MD={kernelName:xi,backendName:"webgl",kernelFunc:xJ};var J0=class{constructor(t){this.variableNames=["A"];let e=_t(),[o,n]=t;this.outputShape=t,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${n}.0, ${o}.0);

        vec4 values = ${e.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}};var ex=class{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;let e=_t(),[o,n]=t;this.outputShape=t,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${n}.0, ${o}.0);
            vec4 values = ${e.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${e.output} = result;
      }
    `}};var BD={kernelName:Cs,backendName:"webgl",kernelFunc:yJ},Xc,lb=G().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");function yJ(r){let{inputs:t,backend:e,attrs:o}=r,{pixels:n}=t,{numChannels:i}=o,s=typeof HTMLVideoElement<"u"&&n instanceof HTMLVideoElement,a=typeof HTMLImageElement<"u"&&n instanceof HTMLImageElement,[l,u]=s?[n.videoWidth,n.videoHeight]:[n.width,n.height],c=[u,l],p=[u,l,i];if(a||s){let g=G().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(Xc==null||g!==lb)&&(lb=g,Xc=document.createElement("canvas").getContext("2d",{willReadFrequently:lb})),Xc.canvas.width=l,Xc.canvas.height=u,Xc.drawImage(n,0,0,l,u),n=Xc.canvas}let d=e.makeTensorInfo(c,"int32");e.texData.get(d.dataId).usage=fr.PIXELS,e.gpgpu.uploadPixelDataToTexture(e.getTexture(d.dataId),n);let m=G().getBool("WEBGL_PACK")?new ex(p):new J0(p),f=e.runWebGLProgram(m,[d],"int32");return e.disposeData(d.dataId),f}function vJ(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,filter:i,bias:s,preluActivationWeights:a}=t,{strides:l,pad:u,dataFormat:c,dilations:p,dimRoundingMode:d,activation:m,leakyreluAlpha:f}=o,g=$.convertConv2DDataFormat(c),x=$.computeConv2DInfo(n.shape,i.shape,l,p,u,d,!1,g),y,b=[],T=s!=null,R=a!=null,M=m==="leakyrelu",V=()=>{let H=[n,i],K=(X,te)=>{if(te==="NCHW"&&X.shape.length===1&&X.shape[0]!==1){let ce=ue({inputs:{x:X},backend:e,attrs:{shape:[X.shape[0],1,1]}});return b.push(ce),ce}return X};if(T&&H.push(K(s,c)),R&&H.push(K(a,c)),M){let X=e.makeTensorInfo([],"float32",S.createScalarValue(f,"float32"));H.push(X),b.push(X)}return H};if(x.filterHeight===1&&x.filterWidth===1&&x.dilationHeight===1&&x.dilationWidth===1&&x.strideHeight===1&&x.strideWidth===1&&(x.padInfo.type==="SAME"||x.padInfo.type==="VALID"))y=F0({x:n,filter:i,convInfo:x,backend:e,bias:s,activation:m,preluActivationWeights:a,leakyreluAlpha:f});else if(x.strideWidth<=2&&g==="channelsLast"&&G().getBool("WEBGL_EXP_CONV")){let H=m?Xn(m,!0):null,K=new Hc(x,T,H,R,M),X=[[x.padInfo.top,x.padInfo.left],[x.strideHeight,x.strideWidth],[x.dilationHeight,x.dilationWidth],[x.inHeight,x.inWidth]],te=V();y=e.runWebGLProgram(K,te,"float32",X)}else if(G().getBool("WEBGL_CONV_IM2COL"))y=O0({x:n,filter:i,convInfo:x,backend:e,bias:s,activation:m,preluActivationWeights:a,leakyreluAlpha:f});else{let H=m?Xn(m,!1):null,K=new Gc(x,T,H,R,M),X=V();y=e.runWebGLProgram(K,X,"float32")}let z=ue({inputs:{x:y},backend:e,attrs:{shape:x.outShape}});return b.push(y),b.forEach(H=>e.disposeIntermediateTensorInfo(H)),z}var VD={kernelName:Is,backendName:"webgl",kernelFunc:vJ};function bJ(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,filter:i,bias:s,preluActivationWeights:a}=t,{strides:l,pad:u,dilations:c,dimRoundingMode:p,activation:d,leakyreluAlpha:m}=o,f=[],g=c;g==null&&(g=[1,1]),S.assert($.eitherStridesOrDilationsAreOne(l,g),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${g}'`);let x=$.computeConv2DInfo(n.shape,i.shape,l,g,u,p,!0),y=G().getBool("WEBGL_PACK_DEPTHWISECONV")&&x.strideWidth<=2&&x.outChannels/x.inChannels===1,b=d?Xn(d,y):null,T=[n,i],R=s!=null,M=a!=null,V=d==="leakyrelu";if(R&&T.push(s),M&&T.push(a),V){let X=e.makeTensorInfo([],"float32",S.createScalarValue(m,"float32"));T.push(X),f.push(X)}let z;y?z=new jc(x,R,b,M,V):z=new qc(x,R,b,M,V);let H=[[x.padInfo.top,x.padInfo.left],[x.strideHeight,x.strideWidth],[x.dilationHeight,x.dilationWidth],[x.inHeight,x.inWidth]],K=e.runWebGLProgram(z,T,"float32",H);return f.forEach(X=>e.disposeIntermediateTensorInfo(X)),K}var WD={kernelName:Ts,backendName:"webgl",kernelFunc:bJ};var tx=class{constructor(t,e,o,n){this.sliceDim=t,this.strides=e,this.paramsShape=n,this.variableNames=["x","indices"],this.outputShape=o;let i=Be(o.length),s=`
    int index;`;for(let a=0;a<this.sliceDim;a++)s+=`
          index = round(getIndices(coords[0], ${a}));
          out_of_bounds = out_of_bounds || index < 0;
          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[a]};
          flattenIndex += index * ${this.strides[a]};`;this.userCode=`
         void main() {
          ${i} coords = getOutputCoords();
          int flattenIndex = 0;
          bool out_of_bounds = false;

          ${s}

          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));
        }
      `}};function SJ(r){let{inputs:t,backend:e}=r,{params:o,indices:n}=t,i=n.shape,s=i[i.length-1],a=S.sizeFromShape(o.shape),[l,u,c,p]=$.prepareAndValidate(o,n),d=ue({inputs:{x:n},backend:e,attrs:{shape:[u,s]}}),m=ue({inputs:{x:o},backend:e,attrs:{shape:[S.sizeFromShape(o.shape)/c,c]}});if(e.shouldExecuteOnCPU([o,n])||o.dtype==="string"){let y=e.readSync(n.dataId),b=e.bufferSync(o),T=uP(y,b,o.dtype,u,s,c,p,o.shape,a);return e.makeTensorInfo(l,o.dtype,T.values)}let f=new tx(s,p,[u,c],o.shape),g=e.runWebGLProgram(f,[m,d],m.dtype),x=ue({inputs:{x:g},backend:e,attrs:{shape:l}});return e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(g),x}var zD={kernelName:Ml,backendName:"webgl",kernelFunc:SJ};var rx=class{constructor(t,e){this.variableNames=["A","indices"],this.outputShape=e,this.rank=e.length;let o=Be(this.rank),n=wJ(t,2);this.userCode=`
      void main() {
        ${o} resRC = getOutputCoords();
        int index = int(getIndices(resRC.x, resRC.z));
        float inBounds = (index >= 0) && (index < ${t[2]}) ? 1.0 : 0.0;
        setOutput(inBounds * getA(${n}));
      }
    `}};function wJ(r,t){let e=["resRC.x","resRC.y","resRC.z","resRC.w"],o=[];for(let n=0;n<r.length;n++)n===2?o.push("index"):o.push(`${e[n]}`);return o.join()}function ub(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,indices:i}=t,{axis:s,batchDims:a}=o,l=S.parseAxisParam(s,n.shape)[0];if(G().get("DEBUG")){let b=e.readSync(i.dataId),T=n.shape[l];for(let R=0;R<b.length;++R){let M=b[R];S.assert(M<=T-1&&M>=0,()=>`GatherV2: the index value ${M} is not in [0, ${T-1}]`)}}let u=$.segment_util.collectGatherOpShapeInfo(n,i,l,a),c=S.sizeFromShape(i.shape),p=[],d=ue({inputs:{x:n},backend:e,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),m=ue({inputs:{x:i},backend:e,attrs:{shape:[u.batchSize,c/u.batchSize]}});p.push(d),p.push(m);let f=[u.batchSize,u.outerSize,c/u.batchSize,u.sliceSize];if(e.shouldExecuteOnCPU([n,i])||n.dtype==="string"){let b=e.bufferSync(m),T=e.bufferSync(d),R=cP(T,b,f);return p.forEach(M=>e.disposeIntermediateTensorInfo(M)),e.makeTensorInfo(u.outputShape,R.dtype,R.values)}let g=new rx(d.shape,f),x=e.runWebGLProgram(g,[d,m],d.dtype);p.push(x);let y=ue({inputs:{x},backend:e,attrs:{shape:u.outputShape}});return p.forEach(b=>e.disposeIntermediateTensorInfo(b)),y}var UD={kernelName:Ll,backendName:"webgl",kernelFunc:ub};var _J="return float(a > b);",CJ=`
  return vec4(greaterThan(a, b));
`,kJ=it({opSnippet:_J,packedOpSnippet:CJ,cpuKernelImpl:pP,dtype:"bool"}),GD={kernelName:yi,backendName:"webgl",kernelFunc:kJ};var IJ="return float(a >= b);",TJ=`
  return vec4(greaterThanEqual(a, b));
`,EJ=it({opSnippet:IJ,packedOpSnippet:TJ,dtype:"bool",cpuKernelImpl:dP}),HD={kernelName:vi,backendName:"webgl",kernelFunc:EJ};function NJ(r){let{inputs:t,backend:e}=r,{input:o}=t;return Y0(o,!0,e)}var KD={kernelName:Bl,backendName:"webgl",kernelFunc:NJ};var RJ="return float(!isnan(x) && !isinf(x));",$J=Te({opSnippet:RJ,dtype:"bool"}),qD={kernelName:Wl,backendName:"webgl",kernelFunc:$J};var PJ="return float(isinf(x));",AJ=Te({opSnippet:PJ,dtype:"bool"}),jD={kernelName:zl,backendName:"webgl",kernelFunc:AJ};var DJ="return float(isnan(x));",FJ=Te({opSnippet:DJ,dtype:"bool"}),XD={kernelName:Ul,backendName:"webgl",kernelFunc:FJ};var OJ="return float(a < b);",LJ=`
  return vec4(lessThan(a, b));
`,MJ=it({opSnippet:OJ,packedOpSnippet:LJ,cpuKernelImpl:mP,dtype:"bool"}),YD={kernelName:bi,backendName:"webgl",kernelFunc:MJ};var BJ="return float(a <= b);",VJ=`
  return vec4(lessThanEqual(a, b));
`,WJ=it({opSnippet:BJ,packedOpSnippet:VJ,cpuKernelImpl:fP,dtype:"bool"}),QD={kernelName:Si,backendName:"webgl",kernelFunc:WJ};function zJ(r){let{backend:t,attrs:e}=r,{start:o,stop:n,num:i}=e,s=hP(o,n,i);return t.makeTensorInfo([s.length],"float32",s)}var ZD={kernelName:Hl,backendName:"webgl",kernelFunc:zJ};var UJ=Ro+`
  return x < 0.0 ? 0./0. : log(x);
`,GJ=`
  vec4 result = log(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);
  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);
  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);
  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);
  return result;
`,HJ=Te({opSnippet:UJ,packedOpSnippet:GJ,cpuKernelImpl:gP}),JD={kernelName:wi,backendName:"webgl",kernelFunc:HJ};var KJ=Ro+`
  return log(1.0 + x);
`,qJ=Te({opSnippet:KJ}),eF={kernelName:Kl,backendName:"webgl",kernelFunc:qJ};var jJ="return float(a >= 1.0 && b >= 1.0);",XJ=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,YJ=it({opSnippet:jJ,packedOpSnippet:XJ,dtype:"bool"}),tF={kernelName:ql,backendName:"webgl",kernelFunc:YJ};var QJ="return float(!(x >= 1.0));",ZJ=Te({opSnippet:QJ}),rF={kernelName:jl,backendName:"webgl",kernelFunc:ZJ};var JJ="return float(a >= 1.0 || b >= 1.0);",eee=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,tee=it({opSnippet:JJ,packedOpSnippet:eee,dtype:"bool"}),oF={kernelName:Xl,backendName:"webgl",kernelFunc:tee};var ox=class{constructor(t,e,o,n,i){this.variableNames=["x"],this.outputShape=[];let s=e,a=t[3]-1;this.outputShape=t;let l,u=`float(${o}) + float(${n}) * sum`;i===.5?l=`inversesqrt(${u})`:i===1?l=`1.0/(${u})`:l=`exp(log(${u}) * float(-${i}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${s}; j <= ${s}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${a}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${l};
        setOutput(val);
      }
    `}};var nx=class{constructor(t,e,o,n,i){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;let s=e,a=t[3]-1;this.outputShape=t;let l,u=`float(${o}) + float(${n}) * sum`;i===.5?l=`inversesqrt(${u})`:i===1?l=`1.0/(${u})`:l=`exp(log(${u}) * float(-${i}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${s};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${s}; j <= ${s}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${a}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${l};
        setOutput(result);
      }
    `}};var ree=r=>{let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{depthRadius:i,bias:s,alpha:a,beta:l}=o,u=G().getBool("WEBGL_PACK_NORMALIZATION")?new nx(n.shape,i,s,a,l):new ox(n.shape,i,s,a,l);return e.runWebGLProgram(u,[n],n.dtype)},nF={kernelName:Yl,backendName:"webgl",kernelFunc:ree};var ix=class{constructor(t,e,o,n,i){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=t,this.depth=t[3],this.depthRadius=e,this.bias=o,this.alpha=n,this.beta=i,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${e})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${e} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${n}) * norm + float(${o});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${n})
                * float(${i})
                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${i});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}};var oee=r=>{let{inputs:t,backend:e,attrs:o}=r,{x:n,y:i,dy:s}=t,{depthRadius:a,bias:l,alpha:u,beta:c}=o,p=new ix(n.shape,a,l,u,c);return e.runWebGLProgram(p,[n,i,s],n.dtype)},iF={kernelName:cm,backendName:"webgl",kernelFunc:oee};function sF(r,t,e,o){let n=S.sizeFromShape(t),s=S.sizeFromShape(r.shape)/n,a=ue({inputs:{x:r},attrs:{shape:[s,n]},backend:o}),l=no(a,r.dtype,"max",o),u=ue({inputs:{x:l},attrs:{shape:e},backend:o});return o.disposeIntermediateTensorInfo(a),o.disposeIntermediateTensorInfo(l),u}function cb(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{reductionIndices:i,keepDims:s}=o,a=n.shape.length,l=S.parseAxisParam(i,n.shape),u=l,c=$.getAxesPermutation(u,a),p=c!=null,d=e.shouldExecuteOnCPU([n]),m=n;if(p){if(d){let T=e.texData.get(m.dataId).values,R=new Array(a);for(let z=0;z<R.length;z++)R[z]=n.shape[c[z]];let M=pa(T,n.shape,n.dtype,c,R);m=e.makeTensorInfo(R,n.dtype);let V=e.texData.get(m.dataId);V.values=M}else m=ns(n,c,e);u=$.getInnerMostAxes(u.length,a)}$.assertAxesAreInnerMostDims("max",u,a);let[f,g]=$.computeOutAndReduceShapes(m.shape,u),x=f;s&&(x=$.expandShapeToKeepDim(f,l));let y;if(d){let T=e.texData.get(m.dataId).values,R=xP(T,S.sizeFromShape(g),x,n.dtype);y=e.makeTensorInfo(x,n.dtype);let M=e.texData.get(y.dataId);M.values=R}else y=sF(m,g,x,e);return p&&e.disposeIntermediateTensorInfo(m),y}var aF={kernelName:Ql,backendName:"webgl",kernelFunc:cb};var nee=Wc+`
  return max(a, b);
`,iee=`
  vec4 result = vec4(max(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+oo+`
  return result;
`,see=it({opSnippet:nee,packedOpSnippet:iee,cpuKernelImpl:yP}),lF={kernelName:_i,backendName:"webgl",kernelFunc:see};function aee(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t;vn(n,"maxPool");let{filterSize:i,strides:s,pad:a,dimRoundingMode:l}=o,u=1;S.assert($.eitherStridesOrDilationsAreOne(s,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '${u}'`);let c=$.computePool2DInfo(n.shape,i,s,u,a,l);if(c.filterWidth===1&&c.filterHeight===1&&S.arraysEqual(c.inShape,c.outShape))return Dt({inputs:{x:n},backend:e});let p=new jo(c,"max",!1);return e.runWebGLProgram(p,[n],n.dtype)}var uF={kernelName:Zl,backendName:"webgl",kernelFunc:aee};function lee(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{filterSize:i,strides:s,pad:a,dataFormat:l,dimRoundingMode:u}=o,c=[1,1,1],p=$.computePool3DInfo(n.shape,i,s,c,a,u,l),d=new is(p,"max",!1);return e.runWebGLProgram(d,[n],n.dtype)}var cF={kernelName:Jl,backendName:"webgl",kernelFunc:lee};var sx=class{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;let e=t.strideHeight,o=t.strideWidth,n=t.dilationHeight,i=t.effectiveFilterHeight,s=t.effectiveFilterWidth,a=i-1-t.padInfo.top,l=s-1-t.padInfo.left,u=i*s-1;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${l});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${i};
          wR += ${n}) {
          float dyR = float(dyRCorner + wR) / ${e}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${s}; wC++) {
            float dyC = float(dyCCorner + wC) / ${o}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${u} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${s} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}},ax=class{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;let e=t.strideDepth,o=t.strideHeight,n=t.strideWidth,i=t.dilationDepth,s=t.dilationHeight,a=t.dilationWidth,l=t.effectiveFilterDepth,u=t.effectiveFilterHeight,c=t.effectiveFilterWidth,p=l-1-t.padInfo.front,d=u-1-t.padInfo.top,m=c-1-t.padInfo.left,f=l*u*c-1;this.userCode=`
      const ivec3 pads = ivec3(${p}, ${d}, ${m});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${l};
           wD += ${i}) {
          float dyD = float(dyDCorner + wD) / ${e}.0;

          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${u};
              wR += ${s}) {
            float dyR = float(dyRCorner + wR) / ${o}.0;

            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${c};
                wC += ${a}) {
              float dyC = float(dyCCorner + wC) / ${n}.0;

              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${f} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${u} * ${c} +
                  wR * ${c} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function uee(r){let{inputs:t,backend:e,attrs:o}=r,{dy:n,input:i}=t,s=i,{filterSize:a,strides:l,pad:u,dimRoundingMode:c}=o,p=[1,1,1],d=$.computePool3DInfo(s.shape,a,l,p,u,c),m=new is(d,"max",!0),f=e.runWebGLProgram(m,[s],s.dtype),g=new ax(d),x=e.runWebGLProgram(g,[n,f],s.dtype);return e.disposeIntermediateTensorInfo(f),x}var pF={kernelName:dm,backendName:"webgl",kernelFunc:uee};function cee(r){let{inputs:t,backend:e,attrs:o}=r,{dy:n,input:i,output:s}=t,a=i;vn([i,s],"maxPoolGrad");let{filterSize:l,strides:u,pad:c,dimRoundingMode:p}=o,d=$.computePool2DInfo(a.shape,l,u,1,c,p),m=!0,f=new jo(d,"max",m),g=e.runWebGLProgram(f,[a],a.dtype),x=new sx(d),y=e.runWebGLProgram(x,[n,g],a.dtype);return e.disposeIntermediateTensorInfo(g),y}var dF={kernelName:pm,backendName:"webgl",kernelFunc:cee};function mF(r,t,e,o){let n=new jo(e,"max",!1),i=o.runWebGLProgram(n,[r],"float32");n=new jo(e,"max",!0,!0,t);let s=o.runWebGLProgram(n,[r],"float32");return[i,s]}var fF={kernelName:eu,backendName:"webgl",kernelFunc:({inputs:r,attrs:t,backend:e})=>{let{x:o}=r,{filterSize:n,strides:i,pad:s,includeBatchInIndex:a}=t,l=e;S.assert(o.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${o.shape.length}.`);let u=[1,1];S.assert($.eitherStridesOrDilationsAreOne(i,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);let c=$.computePool2DInfo(o.shape,n,i,u,s),[p,d]=mF(o,a,c,l);return[p,d]}};function hF(r,t,e,o){let n=S.sizeFromShape(t),s=S.sizeFromShape(r.shape)/n,a=ue({inputs:{x:r},attrs:{shape:[s,n]},backend:o}),l=no(a,"float32","mean",o),u=ue({inputs:{x:l},attrs:{shape:e},backend:o});return o.disposeIntermediateTensorInfo(a),o.disposeIntermediateTensorInfo(l),u}var gF={kernelName:tu,backendName:"webgl",kernelFunc:({inputs:r,attrs:t,backend:e})=>{let{x:o}=r,{keepDims:n,axis:i}=t,s=e,a=o.shape.length,l=S.parseAxisParam(i,o.shape),u=l,c=$.getAxesPermutation(u,a),p=c!=null,d=s.shouldExecuteOnCPU([o]),m=[],f=o;if(p){if(d){let R=s.texData.get(f.dataId).values,M=new Array(a);for(let H=0;H<M.length;H++)M[H]=o.shape[c[H]];let V=pa(R,o.shape,o.dtype,c,M);f=s.makeTensorInfo(M,o.dtype);let z=s.texData.get(f.dataId);z.values=V}else f=ns(o,c,s);m.push(f),u=$.getInnerMostAxes(u.length,a)}$.assertAxesAreInnerMostDims("sum",u,a);let[g,x]=$.computeOutAndReduceShapes(f.shape,u),y=g;n&&(y=$.expandShapeToKeepDim(g,l));let b=hF(f,x,y,s);for(let T of m)s.disposeIntermediateTensorInfo(T);return b}};function pee(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{axis:i,keepDims:s}=o,a=n.shape.length,l=S.parseAxisParam(i,n.shape),u=l,c=$.getAxesPermutation(u,a),p=n;c!=null&&(p=vt({inputs:{x:n},backend:e,attrs:{perm:c}}),u=$.getInnerMostAxes(u.length,n.shape.length)),$.assertAxesAreInnerMostDims("min",u,a);let[d,m]=$.computeOutAndReduceShapes(p.shape,u),f=S.sizeFromShape(m),g=ue({inputs:{x:p},backend:e,attrs:{shape:[-1,f]}}),x=no(g,g.dtype,"min",e),y;if(s){let b=$.expandShapeToKeepDim(d,l);y=ue({inputs:{x},backend:e,attrs:{shape:b}})}else y=ue({inputs:{x},backend:e,attrs:{shape:d}});return e.disposeIntermediateTensorInfo(g),e.disposeIntermediateTensorInfo(x),c!=null&&e.disposeIntermediateTensorInfo(p),y}var xF={kernelName:ru,backendName:"webgl",kernelFunc:pee};var dee=Wc+`
  return min(a, b);
`,mee=`
  vec4 result = vec4(min(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+oo+`
  return result;
`,fee=it({opSnippet:dee,packedOpSnippet:mee,cpuKernelImpl:vP}),yF={kernelName:Ci,backendName:"webgl",kernelFunc:fee};var lx=class{constructor(t,e,o){this.variableNames=["x"],this.outputShape=e.map((c,p)=>c[0]+t[p]+c[1]);let n=t.length,i=Be(n),s=e.map(c=>c[0]).join(","),a=e.map((c,p)=>c[0]+t[p]).join(","),l=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,n),u=o==="reflect"?0:1;if(n===1){this.userCode=`
        int start = ${s};
        int end = ${a};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${u};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${u};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${i} start = ${i}(${s});
      ${i} end = ${i}(${a});

      void main() {
        ${i} outC = getOutputCoords();
        for (int i = 0; i < ${n}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${u};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};
          }
        }
        ${i} coords = outC - start;
        setOutput(getX(${l}));
      }
    `}};var ux=class{constructor(t,e,o){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.map((f,g)=>f[0]+t[g]+f[1]);let n=t.length,i=Be(n),s=e.map(f=>f[0]).join(","),a=e.map((f,g)=>f[0]+t[g]).join(","),l=At("rc",n),u=At("source",n),c=`${l[n-1]} < ${this.outputShape[n-1]}`,p=n===1?"source":`vec2(${u.slice(-2).join()})`,d=o==="reflect"?0:1,m="";if(n===1){let f=`
        ${i} source = rc;
        if (source < start) {
          source = start * 2 - source - ${d};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${d};
        }
        source -= start;
      `;m=`
        ${i} rc = outputLoc;
        ${f}
        result[0] = getChannel(getX(${u.join()}), ${p});
        ${l[n-1]} += 1;
        if(${c}) {
          ${f}
          result[1] = getChannel(getX(${u.join()}), ${p});
        }
      `}else{let f=`
        ${i} source = rc;
        ${i} lt = ${i}(lessThan(source, start));
        ${i} gte = ${i}(greaterThanEqual(source, end));
        ${i} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${d}) +
                gte * ((end - 1) * 2 - source + ${d});
        source -= start;
      `;m=`
        ${i} rc = outputLoc;
        ${f}
        result[0] = getChannel(getX(${u.join()}), ${p});
        ${l[n-1]} += 1;
        if(${c}) {
          ${f}
          result[1] = getChannel(getX(${u.join()}), ${p});
        }
        rc = outputLoc;
        ${l[n-2]} += 1;
        if(${l[n-2]} < ${this.outputShape[n-2]}) {
          ${f}
          result[2] = getChannel(getX(${u.join()}), ${p});
          ${l[n-1]} += 1;
          if(${c}) {
            ${f}
            result[3] = getChannel(getX(${u.join()}), ${p});
          }
        }
      `}this.userCode=`
      const ${i} start = ${i}(${s});
      const ${i} end = ${i}(${a});

      void main() {
        ${i} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${m}
        setOutput(result);
      }
    `}};var hee=({inputs:r,backend:t,attrs:e})=>{let{x:o}=r,{paddings:n,mode:i}=e,s=G().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new ux(o.shape,n,i):new lx(o.shape,n,i);return t.runWebGLProgram(s,[o],o.dtype)},vF={kernelName:ou,backendName:"webgl",kernelFunc:hee};var gee=`if (b == 0.0) return NAN;
  return mod(a, b);`,xee=`
  vec4 result = mod(a, b);
  bvec4 isNaN = equal(b, vec4(0.0));
  `+oo+`
  return result;
`,yee=it({opSnippet:gee,packedOpSnippet:xee}),bF={kernelName:nu,backendName:"webgl",kernelFunc:yee};var cx=class{constructor(t,e,o){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[t,o],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${e-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${e-1}));
      }
    `}};var vee=`
if (a == b) {
  return 1.0;
};
return a / b;`,bee=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,pb=it({opSnippet:vee,packedOpSnippet:bee,checkOutOfBounds:!0}),SF={kernelName:El,backendName:"webgl",kernelFunc:pb};var wF="return a - b;",db=it({opSnippet:wF,packedOpSnippet:wF,supportsComplex:!0,cpuKernelImpl:VP}),_F={kernelName:$i,backendName:"webgl",kernelFunc:db};function mb(r){let{inputs:t,backend:e,attrs:o}=r,{logits:n}=t,{dim:i}=o,s=S.parseAxisParam([i],n.shape),a=cb({inputs:{x:n},backend:e,attrs:{reductionIndices:s,keepDims:!1}}),l=$.expandShapeToKeepDim(a.shape,s),u=ue({inputs:{x:a},backend:e,attrs:{shape:l}}),c=db({inputs:{a:n,b:u},backend:e}),p=ab({inputs:{x:c},backend:e}),d=da({inputs:{x:p},backend:e,attrs:{axis:s,keepDims:!1}}),m=ue({inputs:{x:d},backend:e,attrs:{shape:l}}),f=pb({inputs:{a:p,b:m},backend:e});return e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(u),e.disposeIntermediateTensorInfo(c),e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(m),f}var CF={kernelName:Fu,backendName:"webgl",kernelFunc:mb};function See(r){let{inputs:t,backend:e,attrs:o}=r,{logits:n}=t,{numSamples:i,seed:s,normalized:a}=o,l=a?n:mb({inputs:{logits:n},backend:e,attrs:{dim:n.shape.length-1}}),u=l.shape[0],c=l.shape[1],p=new cx(u,c,i),d=[[s]],m=e.runWebGLProgram(p,[l],"int32",d);return a||e.disposeIntermediateTensorInfo(l),m}var kF={kernelName:iu,backendName:"webgl",kernelFunc:See};var wee=Vt+`
  return -x;
`,_ee=`
  vec4 result = -x;
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`;function Cee(r){let{inputs:t,backend:e}=r,{x:o}=t;if(e.shouldExecuteOnCPU([o])){let i=e.texData.get(o.dataId),[s,a]=SP(i.values,o.shape,o.dtype);return e.makeTensorInfo(a,o.dtype,s)}let n;return G().getBool("WEBGL_PACK_UNARY_OPERATIONS")?n=new Or(o.shape,_ee):n=new Zt(o.shape,wee),e.runWebGLProgram(n,[o],o.dtype)}var IF={kernelName:bs,backendName:"webgl",kernelFunc:Cee};var kee=jr.nonMaxSuppressionV3Impl;function Iee(r){$.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:e,attrs:o}=r,{boxes:n,scores:i}=t,{maxOutputSize:s,iouThreshold:a,scoreThreshold:l}=o,u=e.readSync(n.dataId),c=e.readSync(i.dataId),{selectedIndices:p}=kee(u,c,s,a,l);return e.makeTensorInfo([p.length],"int32",new Int32Array(p))}var TF={kernelName:su,backendName:"webgl",kernelFunc:Iee};var Tee=jr.nonMaxSuppressionV4Impl;function Eee(r){$.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:e,attrs:o}=r,{boxes:n,scores:i}=t,{maxOutputSize:s,iouThreshold:a,scoreThreshold:l,padToMaxOutputSize:u}=o,c=e.readSync(n.dataId),p=e.readSync(i.dataId),{selectedIndices:d,validOutputs:m}=Tee(c,p,s,a,l,u);return[e.makeTensorInfo([d.length],"int32",new Int32Array(d)),e.makeTensorInfo([],"int32",new Int32Array([m]))]}var EF={kernelName:mm,backendName:"webgl",kernelFunc:Eee};var Nee=jr.nonMaxSuppressionV5Impl;function Ree(r){$.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:e,attrs:o}=r,{boxes:n,scores:i}=t,{maxOutputSize:s,iouThreshold:a,scoreThreshold:l,softNmsSigma:u}=o,c=e.readSync(n.dataId),p=e.readSync(i.dataId),d=s,m=a,f=l,g=u,{selectedIndices:x,selectedScores:y}=Nee(c,p,d,m,f,g);return[e.makeTensorInfo([x.length],"int32",new Int32Array(x)),e.makeTensorInfo([y.length],"float32",new Float32Array(y))]}var NF={kernelName:au,backendName:"webgl",kernelFunc:Ree};var px=class{constructor(t,e,o,n){this.variableNames=["indices"],this.outputShape=[t,e],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${n}), float(${o}),
                      float(index == coords.y)));
      }
    `}};var $ee=r=>{let{inputs:t,backend:e,attrs:o}=r,{indices:n}=t,{dtype:i,depth:s,onValue:a,offValue:l}=o,u=S.sizeFromShape(n.shape),c=new px(u,s,a,l),p=ue({inputs:{x:n},backend:e,attrs:{shape:[u]}}),d=e.runWebGLProgram(c,[p],i);e.disposeIntermediateTensorInfo(p);let m=[...n.shape,s],f=ue({inputs:{x:d},backend:e,attrs:{shape:m}});return e.disposeIntermediateTensorInfo(d),f},RF={kernelName:uu,backendName:"webgl",kernelFunc:$ee};function dd(r){let{inputs:t,backend:e}=r,{x:o}=t;if(o.dtype==="complex64"){let n=Yn({inputs:{input:o},backend:e}),i=dd({inputs:{x:n},backend:e}),s=fa({inputs:{input:o},backend:e}),a=dd({inputs:{x:s},backend:e}),l=Mr({inputs:{real:i,imag:a},backend:e});return e.disposeIntermediateTensorInfo(n),e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(s),e.disposeIntermediateTensorInfo(a),l}else return Qn({attrs:{shape:o.shape,dtype:o.dtype,value:o.dtype==="string"?"":0},backend:e})}var $F={kernelName:ju,backendName:"webgl",kernelFunc:dd};function PF(r){let{inputs:t,backend:e}=r,{x:o}=t;if(o.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(o.dtype==="complex64"){let n=Yn({inputs:{input:o},backend:e}),i=PF({inputs:{x:n},backend:e}),s=fa({inputs:{input:o},backend:e}),a=dd({inputs:{x:s},backend:e}),l=Mr({inputs:{real:i,imag:a},backend:e});return e.disposeIntermediateTensorInfo(n),e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(s),e.disposeIntermediateTensorInfo(a),l}else return Qn({attrs:{shape:o.shape,dtype:o.dtype,value:1},backend:e})}var AF={kernelName:lu,backendName:"webgl",kernelFunc:PF};function Pee(r){let{inputs:t,backend:e,attrs:o}=r,{axis:n}=o;if(t.length===1)return X0({inputs:{input:t[0]},backend:e,attrs:{dim:n}});let i=t[0].shape,s=t[0].dtype;t.forEach(c=>{S.assertShapesMatch(i,c.shape,"All tensors passed to stack must have matching shapes"),S.assert(s===c.dtype,()=>"All tensors passed to stack must have matching dtypes")});let a=[],l=t.map(c=>{let p=X0({inputs:{input:c},backend:e,attrs:{dim:n}});return a.push(p),p}),u=sb({inputs:l,backend:e,attrs:{axis:n}});return a.forEach(c=>e.disposeIntermediateTensorInfo(c)),u}var DF={kernelName:cu,backendName:"webgl",kernelFunc:Pee};var dx=class{constructor(t,e,o){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=e.map((u,c)=>u[0]+t[c]+u[1]);let n=t.length,i=Be(n),s=e.map(u=>u[0]).join(","),a=e.map((u,c)=>u[0]+t[c]).join(","),l=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,n);if(n===1){this.userCode=`
        int start = ${s};
        int end = ${a};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${i} start = ${i}(${s});
      ${i} end = ${i}(${a});

      void main() {
        ${i} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${i} coords = outC - start;
          setOutput(getX(${l}));
        }
      }
    `}};var mx=class{constructor(t,e,o){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=e.map((g,x)=>g[0]+t[x]+g[1]);let n=t.length,i=Be(n),s=e.map(g=>g[0]).join(","),a=e.map((g,x)=>g[0]+t[x]).join(","),l=At("rc",n),u=At("source",n),c=`${l[n-1]} < ${this.outputShape[n-1]}`,p=n===1?"source":`vec2(${u.slice(-2).join()})`,d=[`${i} rc = outputLoc;`,`${l[n-1]} += 1;
       if(${c}) {
      `,n===1?"":`}
       rc = outputLoc;
       ${l[n-2]} += 1;
       if(${l[n-2]} < ${this.outputShape[n-2]}) {`,n===1?"":`  ${l[n-1]} += 1;
         if(${c}) {`],m=n===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))",f="";for(let g=0,x=n===1?2:4;g<x;g++)f+=`
        ${d[g]}
        if (${m}) {
          result[${g}] = float(value);
        } else {
          ${i} source = rc - start;
          result[${g}] = getChannel(getX(${u.join()}), ${p});
        }
      `;f+=n===1?"} ":"}}",this.userCode=`
      const ${i} start = ${i}(${s});
      const ${i} end = ${i}(${a});

      void main() {
        ${i} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${f}
        setOutput(result);
      }
    `}};var fb=r=>{let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{paddings:i,constantValue:s}=o;if(S.sizeFromShape(n.shape)===0){let u=i.map((c,p)=>c[0]+n.shape[p]+c[1]);return Qn({backend:e,attrs:{shape:u,value:s,dtype:n.dtype}})}let a=G().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new mx(n.shape,i,s):new dx(n.shape,i,s),l=[[s]];return e.runWebGLProgram(a,[n],n.dtype,l)},FF={kernelName:pu,backendName:"webgl",kernelFunc:fb};var Aee=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,Dee=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  bvec4 isNaN1 = lessThan(a, vec4(0.0));
  bvec4 isNaN2 = lessThan(floor(b), b);
  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);
  `+oo+`
  return result;
`,Fee=it({opSnippet:Aee,packedOpSnippet:Dee}),OF={kernelName:du,backendName:"webgl",kernelFunc:Fee};function Oee(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{axis:i,keepDims:s}=o,a=n.shape.length,l=[],u=S.parseAxisParam(i,n.shape),c=u,p=$.getAxesPermutation(c,a),d=n;p!=null&&(d=vt({inputs:{x:n},backend:e,attrs:{perm:p}}),c=$.getInnerMostAxes(c.length,a),l.push(d)),$.assertAxesAreInnerMostDims("prod",c,a);let m;if(e.shouldExecuteOnCPU([d])){let f=e.texData.get(d.dataId).values,{outVals:g,outShape:x,outDtype:y}=_P(d.shape,d.dtype,f,c);m=e.makeTensorInfo(x,y,g)}else{let[f,g]=$.computeOutAndReduceShapes(d.shape,c),x=S.sizeFromShape(g),y=ue({inputs:{x:d},backend:e,attrs:{shape:[-1,x]}}),b=Dn(n.dtype),T=no(y,b,"prod",e);m=ue({inputs:{x:T},backend:e,attrs:{shape:f}}),l.push(y),l.push(T)}if(s){l.push(m);let f=$.expandShapeToKeepDim(m.shape,u);m=ue({inputs:{x:m},backend:e,attrs:{shape:f}})}return l.forEach(f=>e.disposeIntermediateTensorInfo(f)),m}var LF={kernelName:Ss,backendName:"webgl",kernelFunc:Oee};function Lee(r){let{inputs:t,backend:e,attrs:o}=r,{paramsNestedSplits:n,paramsDenseValues:i,indices:s}=t,{outputRaggedRank:a}=o,l=n.map(y=>e.readSync(y.dataId)),u=n.map(y=>y.shape),c=e.readSync(i.dataId),p=e.readSync(s.dataId),[d,m,f]=CP(l,u,c,i.shape,i.dtype,p,s.shape,a),g=d.map(y=>e.makeTensorInfo([y.length],"int32",y)),x=e.makeTensorInfo(f,i.dtype,m);return g.concat([x])}var MF={kernelName:fm,backendName:"webgl",kernelFunc:Lee};function Mee(r){let{inputs:t,backend:e}=r,{starts:o,limits:n,deltas:i}=t,s=e.readSync(o.dataId),a=e.readSync(n.dataId),l=e.readSync(i.dataId),[u,c]=kP(s,o.shape,o.dtype,a,n.shape,l,i.shape),p=e.makeTensorInfo([u.length],"int32",u),d=e.makeTensorInfo([c.length],o.dtype,c);return[p,d]}var BF={kernelName:hm,backendName:"webgl",kernelFunc:Mee};function Bee(r){let{inputs:t,backend:e,attrs:o}=r,{shape:n,values:i,defaultValue:s,rowPartitionTensors:a}=t,{rowPartitionTypes:l}=o,u=e.readSync(n.dataId),c=e.readSync(i.dataId),p=e.readSync(s.dataId),d=a.map(x=>e.readSync(x.dataId)),m=a.map(x=>x.shape),[f,g]=IP(u,n.shape,c,i.shape,i.dtype,p,s.shape,d,m,l);return e.makeTensorInfo(f,i.dtype,g)}var VF={kernelName:gm,backendName:"webgl",kernelFunc:Bee};var hb=r=>{let{backend:t,attrs:e}=r,{start:o,stop:n,step:i,dtype:s}=e,a=TP(o,n,i,s);return t.makeTensorInfo([a.length],s,a)},WF={kernelName:fu,backendName:"webgl",kernelFunc:hb};var Vee="return 1.0 / x;",Wee=Te({opSnippet:Vee}),zF={kernelName:hu,backendName:"webgl",kernelFunc:Wee};var zee=Vt+`
  return (x < 0.0) ? 0.0 : x;
`,Uee=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Gee=Te({opSnippet:zee,packedOpSnippet:Uee}),UF={kernelName:gu,backendName:"webgl",kernelFunc:Gee};var Hee=Vt+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,Kee=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,qee=Te({opSnippet:Hee,packedOpSnippet:Kee}),GF={kernelName:bu,backendName:"webgl",kernelFunc:qee};var fx=class{constructor(t,e,o,n,i){this.variableNames=["A"],this.outputShape=[];let[s,a,l,u]=t;this.outputShape=[s,e,o,u];let c=[n&&e>1?a-1:a,n&&o>1?l-1:l],p=[n&&e>1?e-1:e,n&&o>1?o-1:o],d;i?d="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":d="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${c[0]/p[0]},
          ${c[1]/p[1]});
      const vec2 inputShapeRC = vec2(${a}.0, ${l}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${d};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}};var hx=class{constructor(t,e,o,n,i){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[s,a,l,u]=t;this.outputShape=[s,e,o,u];let c=[n&&e>1?a-1:a,n&&o>1?l-1:l],p=[n&&e>1?e-1:e,n&&o>1?o-1:o],d;i?d="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":d="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${c[0]/p[0]},
          ${c[1]/p[1]},
          ${c[1]/p[1]});
      const vec3 inputShapeRC = vec3(${a}.0, ${l}.0,
                                     ${l}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${d};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${u-1};
        bool hasNextRow = coords.z < ${o-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}};function jee(r){let{inputs:t,backend:e,attrs:o}=r,{images:n}=t,{alignCorners:i,halfPixelCenters:s,size:a}=o,[l,u]=a,c=G().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new hx(n.shape,l,u,i,s):new fx(n.shape,l,u,i,s);return e.runWebGLProgram(c,[n],"float32")}var HF={kernelName:vu,backendName:"webgl",kernelFunc:jee};var gx=class{constructor(t,e,o){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e;let[,n,i]=e,[,s,a]=t,l=[o&&s>1?n-1:n,o&&a>1?i-1:i],u=[o&&s>1?s-1:s,o&&a>1?a-1:a],c=l[0]/u[0],p=l[1]/u[1],d=1/c,m=1/p,f=Math.ceil(d)*2+2,g=Math.ceil(m)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${c});
        const float widthScale = float(${p});

        const float invHeightScale = float(${d});
        const float invWidthScale = float(${m});

        const int winHeight = int(${f});
        const int winWidth = int(${g});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${s}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${a}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${n-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${i-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function Xee(r){let{inputs:t,backend:e,attrs:o}=r,{images:n,dy:i}=t,{alignCorners:s}=o,a=new gx(i.shape,n.shape,s);return e.runWebGLProgram(a,[i],i.dtype)}var KF={kernelName:ym,backendName:"webgl",kernelFunc:Xee};var xx=class{constructor(t,e,o,n,i){this.variableNames=["A"],this.outputShape=[];let[s,a,l,u]=t;this.outputShape=[s,e,o,u];let c=[n&&e>1?a-1:a,n&&o>1?l-1:l],p=[n&&e>1?e-1:e,n&&o>1?o-1:o],d=n?"0.5":"0.0",m;i?m="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":m="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${c[0]/p[0]},
          ${c[1]/p[1]});
      const vec2 inputShapeRC = vec2(${a}.0, ${l}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${m};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}};var yx=class{constructor(t,e,o,n,i){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[s,a,l,u]=t;this.outputShape=[s,e,o,u];let c=[n&&e>1?a-1:a,n&&o>1?l-1:l],p=[n&&e>1?e-1:e,n&&o>1?o-1:o],d=n?"0.5":"0.0",m;i?m="max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":m="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${c[0]/p[0]},
          ${c[1]/p[1]},
          ${c[1]/p[1]});
      const vec3 inputShapeRC = vec3(${a}.0, ${l}.0,
                                     ${l}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${m};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${u-1};
        bool hasNextRow = coords.z < ${o-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}};function Yee(r){let{inputs:t,backend:e,attrs:o}=r,{images:n}=t,{alignCorners:i,halfPixelCenters:s,size:a}=o,[l,u]=a,c=G().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new yx(n.shape,l,u,i,s):new xx(n.shape,l,u,i,s);return e.runWebGLProgram(c,[n],n.dtype)}var qF={kernelName:yu,backendName:"webgl",kernelFunc:Yee};var vx=class{constructor(t,e,o){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e;let[,n,i]=e,[,s,a]=t,l=[o&&s>1?n-1:n,o&&a>1?i-1:i],u=[o&&s>1?s-1:s,o&&a>1?a-1:a],c=l[0]/u[0],p=l[1]/u[1],d=1/c,m=1/p,f=Math.ceil(d)*2+2,g=Math.ceil(m)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${c});
        const float widthScale = float(${p});

        const float invHeightScale = float(${d});
        const float invWidthScale = float(${m});

        const int winHeight = int(${f});
        const int winWidth = int(${g});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${s}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${a}) {
              continue;
            }

            float sourceFracRow =
              float(${l[0]}) *
                (float(dyR) / float(${u[0]}));

            float sourceFracCol =
                float(${l[1]}) *
                  (float(dyC) / float(${u[1]}));

            int sourceNearestRow = int(min(
                float(int(${n}) - 1),
                ${o} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${i}) - 1),
                ${o} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function Qee(r){let{inputs:t,backend:e,attrs:o}=r,{images:n,dy:i}=t,{alignCorners:s}=o,a=new vx(i.shape,n.shape,s);return e.runWebGLProgram(a,[i],i.dtype)}var jF={kernelName:xm,backendName:"webgl",kernelFunc:Qee};var bx=class{constructor(t,e){this.variableNames=["x"];let o=t.length;if(o>4)throw new Error(`WebGL backend: Reverse of rank-${o} tensor is not yet supported`);if(this.outputShape=t,o===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${t[0]} - coord - 1));
        }
      `;return}let n=a=>e.indexOf(a)!==-1&&t[a]!==1?`${t[a]} - coords[${a}] - 1`:`coords[${a}]`,i=t.map((a,l)=>n(l)).join(","),s=Be(o);this.userCode=`
      void main() {
        ${s} coords = getOutputCoords();
        setOutput(getX(${i}));
      }
    `}};var Sx=class{constructor(t,e){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;let o=t.length;if(o>4)throw new Error(`WebGL backend: Reverse of rank-${o} tensor is not yet supported`);this.outputShape=t;let n=At("rc",o),i=`${n[o-1]} + 1 < ${this.outputShape[o-1]}`,s=`${n[o-2]} + 1 < ${this.outputShape[o-2]}`,a=Be(o);o===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${t[0]} - rc - 1),
            ${t[0]} - rc - 1);
          if(${i}){
              result.g = getChannel(getX(${t[0]} - (rc  + 1) - 1),
                ${t[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${a} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${l(n.slice())};
          if(${i}){
            result.g = ${u(n.slice())};
          }
          if(${s}) {
            result.b = ${c(n.slice())};
            if(${i}) {
              result.a = ${p(n.slice())};
            }
          }
          setOutput(result);
        }
    `;function l(f){return d(f)}function u(f){return f[o-1]="("+f[o-1]+" + 1)",d(f)}function c(f){return f[o-2]="("+f[o-2]+" + 1)",d(f)}function p(f){return f[o-1]="("+f[o-1]+" + 1)",f[o-2]="("+f[o-2]+" + 1)",d(f)}function d(f){let g=t.map((b,T)=>m(T,f)),x=g.join(","),y=g.slice(-2).join(",");return`getChannel(getX(${x}), vec2(${y}))`}function m(f,g){return e.indexOf(f)!==-1&&t[f]!==1?`${t[f]} - ${g[f]} - 1`:`${g[f]}`}}};function Zee(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{dims:i}=o,s=n.shape.length,a=S.parseAxisParam(i,n.shape);if(s===0)return Dt({inputs:{x:n},backend:e});let l=G().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Sx(n.shape,a):new bx(n.shape,a);return e.runWebGLProgram(l,[n],n.dtype)}var XF={kernelName:Su,backendName:"webgl",kernelFunc:Zee};var wx=class{constructor(t,e){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];let o=t[1],n=t[2];this.outputShape=t;let i="";typeof e=="number"?i=`float outputValue = ${e.toFixed(2)};`:i=`
        vec3 fill = vec3(${e.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${i}
          if(coordX >= 0 && coordX < ${n} && coordY >= 0 && coordY < ${o}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}};var YF={kernelName:Yu,backendName:"webgl",kernelFunc:({inputs:r,attrs:t,backend:e})=>{let{image:o}=r,{radians:n,fillValue:i,center:s}=t,a=e,l=new wx(o.shape,i),[u,c]=$.getImageCenter(s,o.shape[1],o.shape[2]),p=[[u,c,Math.sin(n),Math.cos(n)]];return a.runWebGLProgram(l,[o],o.dtype,p)}};var Jee=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,ete=Te({opSnippet:Jee}),QF={kernelName:wu,backendName:"webgl",kernelFunc:ete};var tte="return inversesqrt(x);",rte=Te({opSnippet:tte,cpuKernelImpl:EP}),ZF={kernelName:Ti,backendName:"webgl",kernelFunc:rte};var ss=class{constructor(t,e,o,n,i,s,a=!0,l=!1){this.variableNames=["updates","indices","defaultValue"],this.outputShape=s;let u=Be(i.length),c=Be(s.length),p="";o===1?p="i":o===2&&(p="i, j");let d=`getIndices(${p})`,m="";n===1?m="i":n===2&&(m="i, coords[1]");let f=`getUpdates(${m})`,g="";l&&(g="coords[0], coords[1]");let x=`getDefaultValue(${g})`,y=e>1?"strides[j]":"strides";this.userCode=`
        ${u} strides = ${u}(${i});

        void main() {
          ${c} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${t}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${e}; j++) {
              int index = round(${d});
              flattenedIndex += index * ${y};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${f};
              found = true;
            }
          }
          setOutput(mix(${x}, sum, float(found)));
        }
      `}};var _x=class{constructor(t,e,o,n,i,s,a=!0,l=!1){this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=s;let u=Be(i.length),c=Be(s.length),p="";o===1?p="i":o===2&&(p="i, j");let d=`getIndices(${p})`,m="";n===1?m="i":n===2&&(m="i, coords[1]");let f=`getUpdates(${m})`,g="";l&&(g="coords[0], coords[1]");let x=`getDefaultValue(${g})`,y=e>1?"strides[j]":"strides",b=e>1?"strides[j + 1]":"strides";this.userCode=`
        ${u} strides = ${u}(${i});

        void main() {
          ${c} coords = getOutputCoords();
          vec4 sum = vec4(0.);
          vec4 found = vec4(0.);
          for (int i = 0; i < ${t}; i+=2) {
            ivec2 flattenedIndex = ivec2(0);
            for (int j = 0; j < ${e}; j+=2) {
              ivec4 index = round(${d});
              flattenedIndex += index.xz * ${y};
              if (j + 1 < ${e}) {
                flattenedIndex += index.yw * ${b};
              }
            }
            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||
                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {
              vec4 updVals = ${f};
              if (flattenedIndex[0] == coords[0]) {
                sum.xy += updVals.xy;
                found.xy = vec2(1.);
              } else if (flattenedIndex[0] == coords[0] + 1) {
                sum.zw += updVals.xy;
                found.zw = vec2(1.);
              }
              if (flattenedIndex[1] == coords[0]) {
                sum.xy += updVals.zw;
                found.xy = vec2(1.);
              } else if (flattenedIndex[1] == coords[0] + 1) {
                sum.zw += updVals.zw;
                found.zw = vec2(1.);
              }
            }
          }
          setOutput(mix(${x}, sum, found));
        }
      `}};function ote(r){let{inputs:t,backend:e,attrs:o}=r,{indices:n,updates:i}=t,{shape:s}=o,{sliceRank:a,numUpdates:l,sliceSize:u,strides:c,outputSize:p}=$.calculateShapes(i,n,s),d=[p/u,u];if(p===0)return e.makeTensorInfo(s,n.dtype);let m=ue({inputs:{x:n},backend:e,attrs:{shape:[l,a]}}),f=ue({inputs:{x:i},backend:e,attrs:{shape:[l,u]}}),g=e.makeTensorInfo([],"float32",new Float32Array([0])),x;G().getBool("WEBGL_PACK")?x=new _x(l,a,m.shape.length,f.shape.length,c,d):x=new ss(l,a,m.shape.length,f.shape.length,c,d);let y=e.runWebGLProgram(x,[f,m,g],f.dtype),b=ue({inputs:{x:y},backend:e,attrs:{shape:s}});return e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(y),e.disposeIntermediateTensorInfo(g),b}var JF={kernelName:_u,backendName:"webgl",kernelFunc:ote};var Cx=class{constructor(t,e,o,n){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[t,o];let i="while (left < right) {",s=`for (int i = 0; i < ${Math.ceil(Math.log2(e+1))}; ++i) { if (left >= right) break;`,a=G().getNumber("WEBGL_VERSION")===2?i:s,l=n==="left"?"<":"<=";this.userCode=`
       int findBound(int batch, float value) {
         int left = 0;
         int right = numInputs;
         int mid;
         ${a}
           mid = (left + right) / 2;
           if (getSortedSequence(batch, mid) ${l} value) {
             left = mid + 1;
           } else {
             right = mid;
           }
         }
         return right;
       }

       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int valueIndex = coords[1];

         float value = getValues(batch, valueIndex);

         setOutput(float(findBound(batch, value)));
       }
     `}};function nte(r){let{inputs:t,backend:e,attrs:o}=r,{sortedSequence:n,values:i}=t,{side:s}=o,a=new Cx(n.shape[0],n.shape[1],i.shape[1],s),l=[[n.shape[1]]];return e.runWebGLProgram(a,[n,i],"int32",l)}var e4={kernelName:ku,backendName:"webgl",kernelFunc:nte};var kx=class{constructor(t,e,o){this.variableNames=["c","a","b"],this.outputShape=e;let n,i;if(o>4)throw Error(`Where for rank ${o} is not yet supported`);if(o===1)i="resRC",n="resRC";else{let a=["resRC.x","resRC.y","resRC.z","resRC.w"],l=[],u=[];for(let c=0;c<e.length;c++)u.push(`${a[c]}`),c<t&&l.push(`${a[c]}`);n=l.join(),i=u.join()}let s=Be(o);this.userCode=`
      void main() {
        ${s} resRC = getOutputCoords();
        float cVal = getC(${n});
        if (cVal >= 1.0) {
          setOutput(getA(${i}));
        } else {
          setOutput(getB(${i}));
        }
      }
    `}};function ite(r){let{inputs:t,backend:e}=r,{condition:o,t:n,e:i}=t,s=new kx(o.shape.length,n.shape,n.shape.length);return e.runWebGLProgram(s,[o,n,i],Tt(n.dtype,i.dtype))}var t4={kernelName:Iu,backendName:"webgl",kernelFunc:ite};var ste=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${$.SELU_SCALEALPHA};
  float scale = ${$.SELU_SCALE};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,ate=Te({opSnippet:ste}),r4={kernelName:Tu,backendName:"webgl",kernelFunc:ate};var lte=Ro+`
  return 1.0 / (1.0 + exp(-1.0 * x));
`,ute=`
  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,cte=Te({opSnippet:lte,packedOpSnippet:ute,cpuKernelImpl:RP}),o4={kernelName:Ei,backendName:"webgl",kernelFunc:cte};var pte=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,dte=Te({opSnippet:pte}),n4={kernelName:Ru,backendName:"webgl",kernelFunc:dte};var mte=Ro+`
  return sin(x);
`,fte=`
  vec4 result = sin(x);
  bvec4 isNaN = isnan(x);
  ${oo}
  return result;
`,hte=Te({opSnippet:mte,packedOpSnippet:fte}),i4={kernelName:Eu,backendName:"webgl",kernelFunc:hte};var gte=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,xte=Te({opSnippet:gte}),s4={kernelName:Nu,backendName:"webgl",kernelFunc:xte};var yte=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,vte=Te({opSnippet:yte}),a4={kernelName:$u,backendName:"webgl",kernelFunc:vte};var bte=r=>{let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{blockShape:i,paddings:s}=o;S.assert(n.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");let a=i.reduce((y,b)=>y*b),l=[[0,0]];l.push(...s);for(let y=1+i.length;y<n.shape.length;++y)l.push([0,0]);let u=[],c=fb({inputs:{x:n},backend:e,attrs:{paddings:l,constantValue:0}}),p=$.getReshaped(c.shape,i,a,!1),d=$.getPermuted(p.length,i.length,!1),m=$.getReshapedPermuted(c.shape,i,a,!1),f=ue({inputs:{x:c},backend:e,attrs:{shape:p}}),g=vt({inputs:{x:f},backend:e,attrs:{perm:d}}),x=ue({inputs:{x:g},backend:e,attrs:{shape:m}});return u.push(c),u.push(f),u.push(g),u.forEach(y=>e.disposeIntermediateTensorInfo(y)),x},l4={kernelName:Au,backendName:"webgl",kernelFunc:bte};function Ste(r){let{inputs:t,backend:e}=r,{indices:o,values:n,denseShape:i,defaultValue:s}=t;if(i.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
         ${i.shape}`);if(o.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
         ${o.shape}`);if(n.shape.length!==1)throw new Error(`Values must be a vector, saw:
         ${n.shape}`);if(s.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${s.shape}`);let a=e.readSync(o.dataId),l=e.readSync(n.dataId),u=e.readSync(i.dataId),c=e.readSync(s.dataId)[0],[p,d,m,f,g]=PP(a,o.shape,o.dtype,l,n.dtype,u,c);return[e.makeTensorInfo(d,o.dtype,p),e.makeTensorInfo([d[0]],n.dtype,m),e.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(x=>Number(x)))),e.makeTensorInfo([g.length],o.dtype,new Int32Array(g))]}var u4={kernelName:vm,backendName:"webgl",kernelFunc:Ste};function wte(r){let{inputs:t,backend:e}=r,{inputIndices:o,inputShape:n,newShape:i}=t;if(o.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape ${o.shape}`);if(n.shape.length!==1)throw new Error(`Input shape should be a vector but received shape ${n.shape}`);if(i.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${i.shape}`);let s=Array.from(e.readSync(n.dataId)),a=e.readSync(o.dataId),l=Array.from(e.readSync(i.dataId)),[u,c,p]=AP(a,o.shape,o.dtype,s,l);return[e.makeTensorInfo(c,o.dtype,u),e.makeTensorInfo([p.length],i.dtype,new Int32Array(p))]}var c4={kernelName:bm,backendName:"webgl",kernelFunc:wte};function _te(r){let{inputs:t,backend:e}=r,{data:o,indices:n,segmentIds:i}=t;if(o.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(n.shape.length!==1)throw new Error(`Indices should be a vector but received shape
              ${n.shape}`);if(i.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
              ${i.shape}`);let s=e.readSync(o.dataId),a=e.readSync(n.dataId),l=e.readSync(i.dataId),[u,c]=s0(s,o.shape,o.dtype,a,l,!0);return e.makeTensorInfo(c,o.dtype,u)}var p4={kernelName:Ou,backendName:"webgl",kernelFunc:_te};function Cte(r){let{inputs:t,backend:e}=r,{data:o,indices:n,segmentIds:i}=t;if(o.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(n.shape.length!==1)throw new Error(`Indices should be a vector but received shape
             ${n.shape}`);if(i.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
             ${i.shape}`);let s=e.readSync(o.dataId),a=e.readSync(n.dataId),l=e.readSync(i.dataId),[u,c]=s0(s,o.shape,o.dtype,a,l);return e.makeTensorInfo(c,o.dtype,u)}var d4={kernelName:Lu,backendName:"webgl",kernelFunc:Cte};function kte(r){let{inputs:t,backend:e,attrs:o}=r,{sparseIndices:n,sparseValues:i,defaultValue:s}=t,{outputShape:a}=o,{sliceRank:l,numUpdates:u,sliceSize:c,strides:p,outputSize:d}=$.calculateShapes(i,n,a),m=!1;if(i.dtype==="string"){let y=e.bufferSync(n),b=e.bufferSync(i),T=S.decodeString(e.readSync(s.dataId)[0]),R=NP(y,b,a,d,c,u,l,p,T,m);return e.makeTensorInfo(a,R.dtype,R.values)}let f=new ss(u,l,n.shape.length,i.shape.length,p,[d,1],m),g=e.runWebGLProgram(f,[i,n,s],i.dtype),x=ue({inputs:{x:g},backend:e,attrs:{shape:a}});return e.disposeIntermediateTensorInfo(g),x}var m4={kernelName:Mu,backendName:"webgl",kernelFunc:kte};function Ite(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{numOrSizeSplits:i,axis:s}=o,a=S.parseAxisParam(s,n.shape)[0],l=$.prepareSplitSize(n,i,a),u=n.shape.length,c=new Array(u).fill(0),p=n.shape.slice();return l.map(d=>{let m=[...p];m[a]=d;let f=Xo({inputs:{x:n},backend:e,attrs:{begin:c,size:m}});return c[a]+=d,f})}var f4={kernelName:Du,backendName:"webgl",kernelFunc:Ite};var h4="return sqrt(x);",Tte=Te({opSnippet:h4,packedOpSnippet:h4,cpuKernelImpl:DP}),g4={kernelName:Ni,backendName:"webgl",kernelFunc:Tte};var Ete="return x * x;",Nte=Te({opSnippet:Ete}),x4={kernelName:Sm,backendName:"webgl",kernelFunc:Nte};var y4="return (a - b) * (a - b);",Rte=it({opSnippet:y4,packedOpSnippet:y4}),v4={kernelName:Ri,backendName:"webgl",kernelFunc:Rte};function $te(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t;if(n.dtype!=="string")throw new Error("Input must be of datatype string");let i=e.readSync(n.dataId),s=$.fromUint8ToStringArray(i),a=FP(s,"string",o);return e.makeTensorInfo(n.shape,"string",a)}var b4={kernelName:Bu,backendName:"webgl",kernelFunc:$te};function Pte({inputs:r,attrs:t,backend:e}){let{x:o}=r,n=Vt+`
    return x > 0.0 ? 1.0 : float(${t.alpha});
  `,i=new Zt(o.shape,n);return e.runWebGLProgram(i,[o],o.dtype)}var S4={kernelName:Xu,backendName:"webgl",kernelFunc:Pte};var Ix=class{constructor(t,e,o){this.variableNames=["x"],this.outputShape=o;let n=o.length,i=Be(o.length),s=Be(o.length),a="";if(n===1)a="coords * strides + begin";else{let l=0;a=o.map((u,c)=>(l++,o.length===1?`coords * strides[${c}] + begin[${c}]`:`coords[${l-1}] * strides[${c}] + begin[${c}]`)).join(",")}this.userCode=`
      ${i} begin = ${i}(${t});
      ${i} strides = ${i}(${e});

      void main() {
        ${s} coords = getOutputCoords();
        setOutput(getX(${a}));
      }
    `}};function Ate(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{begin:i,end:s,strides:a,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:p,shrinkAxisMask:d}=o,{finalShapeSparse:m,finalShape:f,isIdentity:g,sliceDim0:x,isSimpleSlice:y,begin:b,end:T,strides:R}=Gt.sliceInfo(n.shape,i,s,a,l,u,c,p,d),M;if(g)M=ue({inputs:{x:n},backend:e,attrs:{shape:f}});else if(x||y){S.assert(n.shape.length>=1,()=>`Input must have rank at least 1, got: ${n.shape.length}`);let z=Gt.computeOutShape(b,T,R),H=Xo({inputs:{x:n},backend:e,attrs:{begin:b,size:z}});M=ue({inputs:{x:H},backend:e,attrs:{shape:f}}),e.disposeIntermediateTensorInfo(H)}else if(e.shouldExecuteOnCPU([n])){let H=e.readSync(n.dataId),K=Me(n.shape,n.dtype,H),X=OP(m,K,R,b);M=e.makeTensorInfo(f,n.dtype,X.values)}else{let H=new Ix(b,R,m);M=e.runWebGLProgram(H,[n],n.dtype)}let V=ue({inputs:{x:M},backend:e,attrs:{shape:f}});return e.disposeIntermediateTensorInfo(M),V}var w4={kernelName:Vu,backendName:"webgl",kernelFunc:Ate};function Dte(r){let{inputs:t,backend:e,attrs:o}=r,{separator:n,nGramWidths:i,leftPad:s,rightPad:a,padWidth:l,preserveShortSequences:u}=o,{data:c,dataSplits:p}=t,d=e.readSync(c.dataId),m=e.readSync(p.dataId),[f,g]=LP(d,m,n,i,s,a,l,u);return[e.makeTensorInfo([f.length],"string",f),e.makeTensorInfo(p.shape,"int32",g)]}var _4={kernelName:Wu,backendName:"webgl",kernelFunc:Dte};function Fte(r){let{inputs:t,backend:e,attrs:o}=r,{skipEmpty:n}=o,{input:i,delimiter:s}=t;if(i.dtype!=="string")throw new Error("Input must be of datatype string");if(i.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${i.shape}`);if(s.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${s.shape}`);let a=e.readSync(i.dataId),l=e.readSync(s.dataId)[0],[u,c,p]=MP(a,l,n),d=c.length;return[e.makeTensorInfo([d,2],"int32",u),e.makeTensorInfo([d],"string",c),e.makeTensorInfo([2],"int32",new Int32Array(p))]}var C4={kernelName:wm,backendName:"webgl",kernelFunc:Fte};function Ote(r){let{inputs:t,backend:e,attrs:o}=r,{numBuckets:n}=o,{input:i}=t;if(i.dtype!=="string")throw new Error("Input must be of datatype string");if(n<=0)throw new Error("Number of buckets must be at least 1");let s=e.readSync(i.dataId),a=BP(s,n);return e.makeTensorInfo(i.shape,"int32",a)}var k4={kernelName:_m,backendName:"webgl",kernelFunc:Ote};var Lte="return tan(x);",Mte=Te({opSnippet:Lte}),I4={kernelName:zu,backendName:"webgl",kernelFunc:Mte};var Bte=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,Vte=Te({opSnippet:Bte}),T4={kernelName:Uu,backendName:"webgl",kernelFunc:Vte};function Wte(r){let{inputs:t,backend:e,attrs:o}=r,{tensor:n,indices:i,updates:s}=t,{}=o,{sliceRank:a,numUpdates:l,sliceSize:u,strides:c,outputSize:p}=$.calculateShapes(s,i,n.shape),d=[p/u,u];if(p===0)return e.makeTensorInfo(n.shape,i.dtype);let m=ue({inputs:{x:i},backend:e,attrs:{shape:[l,a]}}),f=ue({inputs:{x:s},backend:e,attrs:{shape:[l,u]}}),g=ue({inputs:{x:n},backend:e,attrs:{shape:d}}),x=new ss(l,a,m.shape.length,f.shape.length,c,d,!1,!0),y=e.runWebGLProgram(x,[f,m,g],g.dtype),b=ue({inputs:{x:y},backend:e,attrs:{shape:n.shape}});return e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(g),e.disposeIntermediateTensorInfo(y),b}var E4={kernelName:Cu,backendName:"webgl",kernelFunc:Wte};var Tx=class{constructor(t,e){this.variableNames=["A"];let o=new Array(t.length);for(let s=0;s<o.length;s++)o[s]=t[s]*e[s];this.outputShape=o,this.rank=o.length;let n=Be(this.rank),i=zte(t);this.userCode=`
      void main() {
        ${n} resRC = getOutputCoords();
        setOutput(getA(${i}));
      }
    `}};function zte(r){let t=r.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(t===1)return`imod(resRC, ${r[0]})`;let e=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],o=[];for(let n=0;n<r.length;n++)o.push(`imod(${e[n]}, ${r[n]})`);return o.join()}function gb(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{reps:i}=o;if(n.dtype==="string"||n.shape.length>5){let l=e.readSync(n.dataId),u=n.dtype==="string"?l.map(d=>S.decodeString(d)):l,c=Me(n.shape,n.dtype,u),p=WP(c,i);return e.makeTensorInfo(p.shape,p.dtype,p.values)}let s=new Tx(n.shape,i);return e.runWebGLProgram(s,[n],n.dtype)}var N4={kernelName:Pi,backendName:"webgl",kernelFunc:gb};var Ex=class{constructor(t){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=t,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}},Nx=class{constructor(t){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=t,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}};function ha(r,t){t!==null&&r.disposeIntermediateTensorInfo(t)}function R4(r){let t=1;for(;t<r;)t*=2;return t}function Ute(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{k:i,sorted:s}=o,a=G().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=G().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),u=n.shape,c=u[u.length-1];if(e.shouldExecuteOnCPU([n])||c<a||i>l){let X=e.readSync(n.dataId),[te,ce]=zP(X,u,n.dtype,i,s);return[e.makeTensorInfo(te.shape,te.dtype,te.values),e.makeTensorInfo(ce.shape,ce.dtype,ce.values)]}if(i===0)return u[u.length-1]=0,[e.makeTensorInfo(u,n.dtype,[]),e.makeTensorInfo(u,"int32",[])];if(c===1)return[n,Qn({attrs:{shape:u,dtype:"int32",value:0},backend:e})];let p=e.texData.get(n.dataId),d=p!==null&&p.isPacked,m=d?e.unpackTensor(n):n,g=S.sizeFromShape(u)/c,x=ue({inputs:{x:m},attrs:{shape:[g,c]},backend:e});d&&ha(e,m);let y=R4(i),b=R4(c),T=null,R=()=>T===null?[x,x]:[x,T],M=(X,te,ce)=>{let pe=R(),ve=new Ex(ce),Ee=[[c],[T===null?1:0],[Number.NEGATIVE_INFINITY],[X],[te]],je=T;T=e.runWebGLProgram(ve,pe,"int32",Ee),ha(e,je)};for(let X=1;X<y;X*=2){let te=X*2;for(let ce=X;ce>=1;ce/=2)M(te,ce,[g,b])}for(let X=b;X>y;X/=2){let te=R(),ce=new Nx([g,X/2]),ve=[[c],[T===null?1:0],[y]],Se=T;T=e.runWebGLProgram(ce,te,"int32",ve),ha(e,Se);let Ee=y/2,je=Ee*2;for(let Xe=Ee;Xe>=1;Xe/=2)M(je,Xe,T.shape)}let V=T;T=Xo({inputs:{x:T},backend:e,attrs:{begin:0,size:[g,i]}}),ha(e,V);let z=ub({inputs:{x,indices:T},backend:e,attrs:{axis:1,batchDims:1}});ha(e,x);let H=u.slice(0,-1);H.push(i),V=T,T=ue({inputs:{x:T},attrs:{shape:H},backend:e}),ha(e,V);let K=z;return z=ue({inputs:{x:z},attrs:{shape:H},backend:e}),ha(e,K),[z,T]}var $4={kernelName:Gu,backendName:"webgl",kernelFunc:Ute};var Rx=class{constructor(t,e,o,n,i,s){this.variableNames=["Image","Transforms"],this.outputShape=s;let a=o==="nearest"?1:2,l;switch(n){case"constant":l=1;break;case"reflect":l=2;break;case"wrap":l=3;break;case"nearest":l=4;break;default:l=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${l} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${l} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${l} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${t} && 0 <= coordX && coordX < ${e}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${i});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${i});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${e}));
                float mapY = mapCoord(inY, float(${t}));

                if (${a} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}};function Gte(r){let{inputs:t,backend:e,attrs:o}=r,{image:n,transforms:i}=t,{interpolation:s,fillMode:a,fillValue:l,outputShape:u}=o,[c,p,d,m]=n.shape,[f,g]=u??[p,d],x=[c,f,g,m],y=new Rx(p,d,s,a,l,x);return e.runWebGLProgram(y,[n,i],"float32")}var P4={kernelName:Hu,backendName:"webgl",kernelFunc:Gte};function Hte(r){let{inputs:t,attrs:e,backend:o}=r,{axis:n}=e,{x:i}=t;vn(i,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");let s=o.readSync(i.dataId),{outputValues:a,outputShape:l,indices:u}=UP(s,n,i.shape,i.dtype);return[o.makeTensorInfo(l,i.dtype,a),o.makeTensorInfo([u.length],"int32",u)]}var A4={kernelName:Cm,backendName:"webgl",kernelFunc:Hte};function Kte(r){let{inputs:t,backend:e,attrs:o}=r,{value:n}=t,{axis:i}=o;i<0&&(i+=n.shape.length);let s=n,a=s.shape.length,l=n.shape[i],u=new Array(a-1),c=0;for(let g=0;g<a;g++)g!==i&&(u[c++]=s.shape[g]);let p=[],d=new Array(a).fill(0),m=s.shape.slice();m[i]=1;let f=new Array(l);for(let g=0;g<f.length;g++){d[i]=g;let x=Xo({inputs:{x:s},backend:e,attrs:{begin:d,size:m}}),y=ue({inputs:{x},backend:e,attrs:{shape:u}});f[g]=y,p.push(x)}return p.forEach(g=>e.disposeIntermediateTensorInfo(g)),f}var D4={kernelName:Ku,backendName:"webgl",kernelFunc:Kte};var $x=class{constructor(t,e){this.variableNames=["x","segmentIds"];let o=t.windowSize,n=t.batchSize,i=t.inSize,s=t.numSegments,a=s*Math.ceil(i/o);this.outputShape=[n,a];let l="0.0",u="sumValue",c=Math.floor(o/4)*4,p=o%4,d=`
        sumValue += dot(values, segFilter);
    `,m="";i%o>0&&(m=`
        if (inIdx < 0 || inIdx >= ${i}) {
          return initializationValue;
        }
      `);let f="";i%o>0&&(f=`
        if (inIdx < 0 || inIdx >= ${i}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${l};

      float getValue(int batch, int inIdx) {
        ${m}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${f}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${s})) * float(${o}));
        int currentSeg = int(mod(float(outIdx), float(${s})));

        float sumValue = 0.0;

        for (int i = 0; i < ${c}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${d}
        }

        int inIdx = inOffset + ${c};
        if (${p===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${d}
        } else if (${p===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${d}
        } else if (${p===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${d}
        }
        setOutput(${u});
      }
    `}};function qte(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,segmentIds:i}=t,{numSegments:s}=o,a=n.shape.length,l=[],u=0,c=$.getAxesPermutation([u],a),p=n;c!=null&&(p=vt({inputs:{x:n},backend:e,attrs:{perm:c}}),l.push(p),u=$.getInnerMostAxes(1,a)[0]);let d=$.segment_util.computeOutShape(p.shape,u,s),m=S.sizeFromShape([p.shape[u]]),f=ue({inputs:{x:p},backend:e,attrs:{shape:[-1,m]}});l.push(f);let g=Dn(n.dtype),x=(R,M,V,z,H)=>{let K=R.shape[0],X=R.shape[1],te=$.segment_util.segOpComputeOptimalWindowSize(X,H),ce={windowSize:te,inSize:X,batchSize:K,numSegments:H},pe=new $x(ce,M),ve=e.compileAndRun(pe,[R,V],z);if(l.push(ve),ve.shape[1]===H)return ve;let Se=hb({backend:e,attrs:{start:0,stop:H,step:1,dtype:"float32"}}),Ee=gb({inputs:{x:Se},backend:e,attrs:{reps:[X/te]}});return l.push(Se),l.push(Ee),x(ve,M,Ee,z,H)},y=x(f,"unsortedSegmentSum",i,g,s),b=ue({inputs:{x:y},backend:e,attrs:{shape:d}}),T=b;if(c!=null){l.push(b);let R=$.getUndoAxesPermutation(c);T=vt({inputs:{x:T},backend:e,attrs:{perm:R}})}return l.forEach(R=>e.disposeIntermediateTensorInfo(R)),T}var F4={kernelName:qu,backendName:"webgl",kernelFunc:qte};var jte=[xA,vA,bA,SA,_A,CA,kA,IA,NA,RA,$A,PA,AA,DA,FA,OA,LA,MA,BA,VA,WA,UA,GA,HA,KA,YA,ZA,JA,aA,tD,oD,nD,iD,sD,aD,lD,uD,cD,pD,dD,hD,gD,xD,yD,vD,bD,SD,wD,_D,CD,kD,ID,TD,ED,ND,RD,PD,AD,DD,FD,LD,MD,BD,VD,WD,zD,UD,GD,HD,sA,KD,rD,qD,jD,XD,lA,YD,QD,ZD,JD,eF,tF,rF,oF,nF,iF,aF,lF,uF,cF,pF,dF,fF,gF,xF,yF,vF,bF,kF,pA,IF,TF,EF,NF,qA,RF,AF,DF,FF,OF,uA,LF,MF,BF,VF,WF,jA,SF,zF,UF,GF,mA,HF,KF,qF,jF,XF,YF,QF,ZF,JF,e4,t4,r4,o4,n4,i4,s4,zA,CF,a4,l4,u4,c4,p4,d4,m4,f4,g4,x4,v4,b4,S4,w4,_4,C4,k4,_F,hA,I4,T4,E4,N4,$4,P4,gA,A4,D4,F4,$F];for(let r of jte)Im(r);var Xte=["videoElement"],Yte=["canvasElement"];function Qte(r,t){if(r&1&&(_(0,"div",32)(1,"div",33),L(2),I(),_(3,"div",34),L(4,"REPS"),I()()),r&2){let e=O();N(2),Le(e.repCount)}}function Zte(r,t){r&1&&(_(0,"p"),L(1,"Requesting camera access..."),I())}function Jte(r,t){r&1&&(_(0,"p"),L(1,"Loading video feed..."),I())}function ere(r,t){r&1&&(_(0,"p"),L(1,"Loading AI model, please wait..."),I())}function tre(r,t){if(r&1&&(_(0,"div",35),ne(1,Zte,2,0,"p",36)(2,Jte,2,0,"p",36)(3,ere,2,0,"p",36),I()),r&2){let e=O();N(),F("ngIf",!e.videoStream),N(),F("ngIf",e.videoStream&&!e.isCameraReady),N(),F("ngIf",e.isCameraReady&&!e.modelReady)}}function rre(r,t){r&1&&(_(0,"p"),L(1,"Camera access was lost or denied. Please reload or check permissions."),I())}function ore(r,t){r&1&&(_(0,"p"),L(1,"AI Model failed to load. Try reloading."),I())}function nre(r,t){if(r&1){let e=me();_(0,"button",38),oe("click",function(){Q(e);let n=O(2);return Z(n.setupCamera())}),L(1,"Retry Camera"),I()}}function ire(r,t){if(r&1){let e=me();_(0,"button",38),oe("click",function(){Q(e);let n=O(2);return Z(n.loadPoseDetectionModel())}),L(1,"Retry AI Model"),I()}}function sre(r,t){if(r&1&&(_(0,"div",35),ne(1,rre,2,0,"p",36)(2,ore,2,0,"p",36)(3,nre,2,0,"button",37)(4,ire,2,0,"button",37),I()),r&2){let e=O();N(),F("ngIf",!(e.videoStream!=null&&e.videoStream.active)),N(),F("ngIf",!e.modelReady&&(e.videoStream==null?null:e.videoStream.active)),N(),F("ngIf",!(e.videoStream!=null&&e.videoStream.active)),N(),F("ngIf",!e.modelReady&&(e.videoStream==null?null:e.videoStream.active))}}function are(r,t){if(r&1){let e=me();_(0,"button",39),oe("click",function(){Q(e);let n=O();return Z(n.startWorkout())}),L(1," Start Workout "),I()}if(r&2){let e=O();F("disabled",!e.isCameraReady||!e.modelReady)}}function lre(r,t){if(r&1){let e=me();_(0,"button",40),oe("click",function(){Q(e);let n=O();return Z(n.stopWorkout())}),L(1," Stop Workout "),I()}}function ure(r,t){if(r&1){let e=me();_(0,"button",41),oe("click",function(){Q(e);let n=O();return Z(n.toggleRecording())}),L(1),I()}if(r&2){let e=O();bo("recording",e.isRecording),N(),xe(" ",e.isRecording?"Stop Recording":"Start Recording"," ")}}function cre(r,t){if(r&1&&(_(0,"li",49),L(1),qe(2,"uppercase"),I()),r&2){let e=t.$implicit;F("ngClass","feedback-"+e.type),N(),Ft(" [",ft(2,3,e.type),"] ",e.message," ")}}function pre(r,t){r&1&&(_(0,"div",50),L(1," No feedback yet. Start your workout! "),I())}function dre(r,t){if(r&1){let e=me();_(0,"div",42),oe("click",function(){Q(e);let n=O();return Z(n.toggleFeedbackVisibility())}),_(1,"div",43),oe("click",function(n){return Q(e),Z(n.stopPropagation())}),_(2,"div",44)(3,"h3"),L(4,"Feedback & Log"),I(),_(5,"button",45),oe("click",function(){Q(e);let n=O();return Z(n.toggleFeedbackVisibility())}),L(6,"\xD7"),I()(),_(7,"div",46)(8,"ul"),ne(9,cre,3,5,"li",47),I(),ne(10,pre,2,0,"div",48),I()()()}if(r&2){let e=O();N(9),F("ngForOf",e.feedbackMessages),N(),F("ngIf",e.feedbackMessages.length===0)}}var Px=class r{constructor(t){this.hostElement=t}videoElementRef;canvasElementRef;videoStream=null;mediaRecorder=null;recordedChunks=[];poseDetector=null;modelReady=!1;isFeedbackVisible=!1;isControlsExpanded=!1;isCameraReady=!1;isRecording=!1;isWorkoutActive=!1;repCount=0;elapsedTime=0;timerInterval;feedbackMessages=[];currentExercise="Right Bicep Curl";changeDetectorRef=Ae(_a);ngZone=Ae(CS);animationFrameId=null;currentRepCycleState="START";exerciseSpecificLogic=null;KEYPOINT_SCORE_THRESHOLD=.5;STABLE_FRAME_COUNT=3;lastFramesStates={};BICEP_ELBOW_ANGLE_UP=50;BICEP_ELBOW_ANGLE_DOWN=160;BICEP_WRIST_ELBOW_VERTICAL_DIFF_DOWN=10;SNATCH_HIP_EXTENSION_ANGLE_START=170;SNATCH_ARM_LOCKOUT_SHOULDER_WRIST_ALIGNMENT_Y=30;SNATCH_KNEE_ANGLE_BOTTOM=80;PRESS_ELBOW_ANGLE_UP=170;PRESS_ELBOW_ANGLE_RACK=90;PRESS_WRIST_SHOULDER_Y_DIFF_UP=-10;PRESS_WRIST_SHOULDER_Y_DIFF_RACK=20;PRESS_WRIST_SHOULDER_X_ALIGNMENT=30;PRESS_TORSO_LEAN_X_ALIGNMENT=40;JERK_ELBOW_LOCKOUT_ANGLE=165;JERK_ELBOW_RACK_ANGLE=90;JERK_KNEE_DIP_ANGLE=90;JERK_SECOND_DIP_KNEE_ANGLE=100;JERK_WRIST_SHOULDER_Y_DIFF_LOCKOUT=-20;JERK_WRIST_SHOULDER_X_ALIGNMENT=30;alternatingArm="";fabPosition={x:0,y:0};isFabDragging=!1;fabDragStartOffset={x:0,y:0};fabElementRef;ngOnInit(){return j(this,null,function*(){this.addFeedback("info","Initializing TensorFlow.js backend...");try{yield Ry("webgl"),yield $y(),this.addFeedback("info",`TensorFlow.js backend set to: ${an()}`)}catch(t){console.error("Error setting TF backend:",t),this.addFeedback("error",`Error setting TF backend: ${t instanceof Error?t.message:String(t)}`);try{yield Ry("cpu"),yield $y(),this.addFeedback("warning",`Fell back to TF.js backend: ${an()}`)}catch(e){this.addFeedback("error",`CPU backend also failed: ${e instanceof Error?e.message:String(e)}`);return}}yield this.setupCamera(),yield this.loadPoseDetectionModel(),this.setExerciseLogic(this.currentExercise),this.initializeFabPosition()})}ngOnDestroy(){this.stopWorkout(),this.stopCamera(),this.poseDetector&&(this.poseDetector.dispose(),this.addFeedback("info","Pose detection model disposed."),this.poseDetector=null)}setupCamera(){return j(this,null,function*(){try{if(navigator.mediaDevices&&navigator.mediaDevices.getUserMedia){if(this.videoStream=yield navigator.mediaDevices.getUserMedia({video:{facingMode:"user",width:{ideal:640},height:{ideal:480}}}),this.videoElementRef&&this.canvasElementRef){let t=this.videoElementRef.nativeElement,e=this.canvasElementRef.nativeElement;t.srcObject=this.videoStream,t.onloadedmetadata=()=>{t.play().then(()=>{this.isCameraReady=!0,this.addFeedback("info","Camera ready."),e.width=t.videoWidth,e.height=t.videoHeight,this.changeDetectorRef.detectChanges()}).catch(o=>{console.error("Error playing video:",o),this.addFeedback("error","Could not start video playback")})}}}else this.addFeedback("error","getUserMedia not supported in this browser."),this.isCameraReady=!1}catch(t){console.error("Error accessing camera:",t),this.addFeedback("error",`Error accessing camera: ${t instanceof Error?t.message:String(t)}`),t.name==="NotAllowedError"&&this.addFeedback("warning","Camera permission denied. Please allow camera access."),this.isCameraReady=!1}this.changeDetectorRef.detectChanges()})}loadPoseDetectionModel(){return j(this,null,function*(){this.poseDetector&&(this.poseDetector.dispose(),this.poseDetector=null),this.modelReady=!1,this.addFeedback("info","Loading pose detection model (MoveNet Lightning)..."),this.changeDetectorRef.detectChanges();try{let t=ir.MoveNet,e={modelType:n$.modelType.SINGLEPOSE_LIGHTNING};this.poseDetector=yield o$(t,e),this.modelReady=!0,this.addFeedback("success","Pose detection model loaded successfully!")}catch(t){console.error("Error loading pose detection model:",t),this.addFeedback("error",`Could not load AI model: ${t instanceof Error?t.message:String(t)}`),this.modelReady=!1}finally{this.changeDetectorRef.detectChanges()}})}startWorkout(){if(!this.isCameraReady){this.addFeedback("warning","Camera not ready.");return}if(!this.modelReady||!this.poseDetector){this.addFeedback("warning","AI Model not ready. Please wait or try reloading model.");return}this.isWorkoutActive=!0,this.repCount=0,this.elapsedTime=0,this.lastFramesStates={},this.currentRepCycleState="START",this.feedbackMessages=[{type:"success",message:"Workout started! Form tracking active."}],this.changeDetectorRef.detectChanges(),this.timerInterval=setInterval(()=>{this.elapsedTime++,this.changeDetectorRef.detectChanges()},1e3),this.animationFrameId&&cancelAnimationFrame(this.animationFrameId),this.animationFrameId=requestAnimationFrame(this.processVideoFrame)}stopWorkout(){this.isWorkoutActive=!1,this.timerInterval&&(clearInterval(this.timerInterval),this.timerInterval=null),this.animationFrameId&&(cancelAnimationFrame(this.animationFrameId),this.animationFrameId=null),this.addFeedback("info",`Workout stopped. Total reps: ${this.repCount}. Time: ${this.formatTime(this.elapsedTime)}`);let t=this.canvasElementRef?.nativeElement;if(t){let e=t.getContext("2d");e&&e.clearRect(0,0,t.width,t.height)}this.changeDetectorRef.detectChanges()}stopCamera(){this.videoStream&&(this.videoStream.getTracks().forEach(t=>t.stop()),this.videoStream=null),this.videoElementRef?.nativeElement.srcObject&&(this.videoElementRef.nativeElement.srcObject=null),this.isCameraReady=!1,this.changeDetectorRef.detectChanges()}processVideoFrame=()=>j(this,null,function*(){if(!this.isWorkoutActive||!this.videoElementRef||!this.canvasElementRef||!this.poseDetector||!this.modelReady){this.isWorkoutActive&&(this.animationFrameId=requestAnimationFrame(this.processVideoFrame));return}let t=this.videoElementRef.nativeElement,e=this.canvasElementRef.nativeElement;if(t.readyState<t.HAVE_CURRENT_DATA){this.animationFrameId=requestAnimationFrame(this.processVideoFrame);return}try{if((e.width!==t.videoWidth||e.height!==t.videoHeight)&&(e.width=t.videoWidth,e.height=t.videoHeight,t.videoWidth===0||t.videoHeight===0)){this.animationFrameId=requestAnimationFrame(this.processVideoFrame);return}let o=yield this.poseDetector.estimatePoses(t,{flipHorizontal:!1}),n=e.getContext("2d");if(n&&(n.clearRect(0,0,e.width,e.height),o&&o.length>0)){let i=o[0];this.drawPose(i.keypoints,n),this.analyzePoseForReps(i)}}catch(o){console.error("Error during pose estimation or drawing:",o),this.addFeedback("error","AI processing error. Workout may be affected.")}this.isWorkoutActive&&(this.animationFrameId=requestAnimationFrame(this.processVideoFrame))});drawPose(t,e){e.fillStyle="aqua";for(let i of t)i.score!=null&&i.score>=.3&&(e.beginPath(),e.arc(i.x,i.y,5,0,2*Math.PI),e.fill());let n=XR.getAdjacentPairs(ir.MoveNet);e.strokeStyle="lime",e.lineWidth=3;for(let[i,s]of n){let a=t[i],l=t[s];a&&l&&(a.score??0)>=.3&&(l.score??0)>=.3&&(e.beginPath(),e.moveTo(a.x,a.y),e.lineTo(l.x,l.y),e.stroke())}}setExerciseLogic(t){this.currentRepCycleState="START",this.repCount=0,this.lastFramesStates={},this.addFeedback("info",`Switched to exercise: ${t}`),this.currentExercise=t,t==="Right Bicep Curl"?this.exerciseSpecificLogic=this.analyzeRightBicepCurl:t==="Left Bicep Curl"?this.exerciseSpecificLogic=this.analyzeLeftBicepCurl:t==="Alternating Bicep Curl"?this.exerciseSpecificLogic=this.analyzeAlternatingBicepCurl:t==="Kettlebell Snatch"?this.exerciseSpecificLogic=this.analyzeKettlebellSnatch:t==="Kettlebell Press"?this.exerciseSpecificLogic=this.analyzeKettlebellPress:t==="Goblet Squat"?this.exerciseSpecificLogic=this.analyzeGobletSquat:t==="Deadlift"?this.exerciseSpecificLogic=this.analyzeDeadlift:t==="Kettlebell Jerk"?this.exerciseSpecificLogic=this.analyzeKettlebellJerk:(this.addFeedback("warning",`No specific logic implemented for exercise: ${t}`),this.exerciseSpecificLogic=null),this.changeDetectorRef.detectChanges()}analyzePoseForReps(t){this.exerciseSpecificLogic&&this.exerciseSpecificLogic.call(this,t)}analyzeRightBicepCurl(t){let e=t.keypoints.find(s=>s.name==="right_shoulder"),o=t.keypoints.find(s=>s.name==="right_elbow"),n=t.keypoints.find(s=>s.name==="right_wrist");if(!e||!o||!n||(e.score??0)<this.KEYPOINT_SCORE_THRESHOLD||(o.score??0)<this.KEYPOINT_SCORE_THRESHOLD||(n.score??0)<this.KEYPOINT_SCORE_THRESHOLD)return;let i=this.calculateAngle(e,o,n);i!==null&&(this.currentRepCycleState==="START"?i<this.BICEP_ELBOW_ANGLE_UP&&(this.currentRepCycleState="UP",this.addFeedback("info",`Curl: Up phase detected (Angle: ${i.toFixed(0)}\xB0)`)):this.currentRepCycleState==="UP"&&i>this.BICEP_ELBOW_ANGLE_DOWN&&(this.incrementRep(),this.currentRepCycleState="START",this.addFeedback("success",`Curl: Down phase, Rep Complete! (Angle: ${i.toFixed(0)}\xB0)`)))}analyzeLeftBicepCurl(t){let e=t.keypoints.find(s=>s.name==="left_shoulder"),o=t.keypoints.find(s=>s.name==="left_elbow"),n=t.keypoints.find(s=>s.name==="left_wrist");if(!e||!o||!n||(e.score??0)<this.KEYPOINT_SCORE_THRESHOLD||(o.score??0)<this.KEYPOINT_SCORE_THRESHOLD||(n.score??0)<this.KEYPOINT_SCORE_THRESHOLD)return;let i=this.calculateAngle(e,o,n);i!==null&&(this.currentRepCycleState==="START"?i<this.BICEP_ELBOW_ANGLE_UP&&(this.currentRepCycleState="UP",this.addFeedback("info",`Left Curl: Up phase detected (Angle: ${i.toFixed(0)}\xB0)`)):this.currentRepCycleState==="UP"&&i>this.BICEP_ELBOW_ANGLE_DOWN&&(this.incrementRep(),this.currentRepCycleState="START",this.addFeedback("success",`Left Curl: Down phase, Rep Complete! (Angle: ${i.toFixed(0)}\xB0)`)))}analyzeAlternatingBicepCurl(t){let e=t.keypoints.find(c=>c.name==="right_shoulder"),o=t.keypoints.find(c=>c.name==="right_elbow"),n=t.keypoints.find(c=>c.name==="right_wrist"),i=t.keypoints.find(c=>c.name==="left_shoulder"),s=t.keypoints.find(c=>c.name==="left_elbow"),a=t.keypoints.find(c=>c.name==="left_wrist");if(!e||!o||!n||!i||!s||!a||(e.score??0)<this.KEYPOINT_SCORE_THRESHOLD||(o.score??0)<this.KEYPOINT_SCORE_THRESHOLD||(n.score??0)<this.KEYPOINT_SCORE_THRESHOLD||(i.score??0)<this.KEYPOINT_SCORE_THRESHOLD||(s.score??0)<this.KEYPOINT_SCORE_THRESHOLD||(a.score??0)<this.KEYPOINT_SCORE_THRESHOLD)return;let l=this.calculateAngle(e,o,n),u=this.calculateAngle(i,s,a);l===null||u===null||(this.alternatingArm||(this.alternatingArm="right"),this.alternatingArm==="right"?this.currentRepCycleState==="START"?l<this.BICEP_ELBOW_ANGLE_UP&&(this.currentRepCycleState="UP",this.addFeedback("info",`Alt Curl: Right up phase (Angle: ${l.toFixed(0)}\xB0)`)):this.currentRepCycleState==="UP"&&l>this.BICEP_ELBOW_ANGLE_DOWN&&(this.incrementRep(),this.currentRepCycleState="START",this.alternatingArm="left",this.addFeedback("success",`Alt Curl: Right down, Rep Complete! (Angle: ${l.toFixed(0)}\xB0)`)):this.alternatingArm==="left"&&(this.currentRepCycleState==="START"?u<this.BICEP_ELBOW_ANGLE_UP&&(this.currentRepCycleState="UP",this.addFeedback("info",`Alt Curl: Left up phase (Angle: ${u.toFixed(0)}\xB0)`)):this.currentRepCycleState==="UP"&&u>this.BICEP_ELBOW_ANGLE_DOWN&&(this.incrementRep(),this.currentRepCycleState="START",this.alternatingArm="right",this.addFeedback("success",`Alt Curl: Left down, Rep Complete! (Angle: ${u.toFixed(0)}\xB0)`))))}analyzeKettlebellSnatch(t){this.addFeedback("info","Snatch: Analyzing (placeholder)...");let e=t.keypoints.find(n=>n.name==="right_shoulder"),o=t.keypoints.find(n=>n.name==="right_wrist");e&&o&&(e.score??0)>.5&&(o.score??0)>.5&&o.y<e.y-this.SNATCH_ARM_LOCKOUT_SHOULDER_WRIST_ALIGNMENT_Y}analyzeKettlebellPress(t){let e=t.keypoints.find(p=>p.name==="right_shoulder"),o=t.keypoints.find(p=>p.name==="right_elbow"),n=t.keypoints.find(p=>p.name==="right_wrist"),i=t.keypoints.find(p=>p.name==="right_hip");if(!e||!o||!n||!i||[e,o,n,i].some(p=>(p.score??0)<this.KEYPOINT_SCORE_THRESHOLD))return;let s=this.calculateAngle(e,o,n);if(s===null)return;let a=s>this.PRESS_ELBOW_ANGLE_UP&&n.y<e.y+this.PRESS_WRIST_SHOULDER_Y_DIFF_UP,l=s<this.PRESS_ELBOW_ANGLE_RACK&&Math.abs(n.y-e.y)<this.PRESS_WRIST_SHOULDER_Y_DIFF_RACK+20,u=this.isStateStable("press_overhead",a),c=this.isStateStable("press_racked",l);if(this.currentRepCycleState==="START")u&&(this.currentRepCycleState="UP",this.addFeedback("info",`Press: Lockout achieved (Elbow: ${s.toFixed(0)}\xB0)`),this.lastFramesStates={});else if(this.currentRepCycleState==="UP"){if(c)this.incrementRep(),this.addFeedback("success","Press: Rep complete! Returned to rack."),this.currentRepCycleState="START",this.lastFramesStates={};else if(u){let p=Math.abs(n.x-e.x),d=Math.abs(e.x-i.x);p>this.PRESS_WRIST_SHOULDER_X_ALIGNMENT&&this.addFeedback("warning","Press: Check wrist/shoulder horizontal alignment at lockout."),d>this.PRESS_TORSO_LEAN_X_ALIGNMENT&&this.addFeedback("warning","Press: Possible torso lean at lockout. Stay upright.")}}}analyzeGobletSquat(t){let e=t.keypoints.find(g=>g.name==="left_hip"),o=t.keypoints.find(g=>g.name==="right_hip"),n=t.keypoints.find(g=>g.name==="left_knee"),i=t.keypoints.find(g=>g.name==="right_knee"),s=t.keypoints.find(g=>g.name==="left_ankle"),a=t.keypoints.find(g=>g.name==="right_ankle");if([e,o,n,i,s,a].some(g=>(g?.score??0)<this.KEYPOINT_SCORE_THRESHOLD))return;let l=this.calculateAngle(e,n,s),u=this.calculateAngle(o,i,a);if(!l||!u)return;let c=(l+u)/2,p=c<90,d=c>160,m=this.isStateStable("goblet_down",p),f=this.isStateStable("goblet_up",d);this.currentRepCycleState==="START"&&m?(this.currentRepCycleState="UP",this.addFeedback("info","Squat: Down phase"),this.lastFramesStates={}):this.currentRepCycleState==="UP"&&f&&(this.incrementRep(),this.addFeedback("success","Squat: Rep complete!"),this.currentRepCycleState="START",this.lastFramesStates={})}analyzeDeadlift(t){let e=t.keypoints.find(g=>g.name==="left_hip"),o=t.keypoints.find(g=>g.name==="right_hip"),n=t.keypoints.find(g=>g.name==="left_knee"),i=t.keypoints.find(g=>g.name==="right_knee"),s=t.keypoints.find(g=>g.name==="left_shoulder"),a=t.keypoints.find(g=>g.name==="right_shoulder");if([e,o,n,i,s,a].some(g=>(g?.score??0)<this.KEYPOINT_SCORE_THRESHOLD))return;let l=this.calculateAngle(s,e,n),u=this.calculateAngle(a,o,i);if(l===null||u===null)return;let c=(l+u)/2,p=c<90,d=c>160,m=this.isStateStable("deadlift_bottom",p),f=this.isStateStable("deadlift_top",d);this.currentRepCycleState==="START"&&m?(this.currentRepCycleState="UP",this.addFeedback("info","Deadlift: Bottom position"),this.lastFramesStates={}):this.currentRepCycleState==="UP"&&f&&(this.incrementRep(),this.addFeedback("success","Deadlift: Rep complete!"),this.currentRepCycleState="START",this.lastFramesStates={})}analyzeKettlebellJerk(t){let e=t.keypoints.find(y=>y.name==="right_shoulder"),o=t.keypoints.find(y=>y.name==="right_elbow"),n=t.keypoints.find(y=>y.name==="right_wrist"),i=t.keypoints.find(y=>y.name==="right_hip"),s=t.keypoints.find(y=>y.name==="right_knee"),a=t.keypoints.find(y=>y.name==="right_ankle");if([e,o,n,i,s,a].some(y=>(y?.score??0)<this.KEYPOINT_SCORE_THRESHOLD))return;let l=this.calculateAngle(e,o,n),u=this.calculateAngle(i,s,a),c=n.y<e.y+this.JERK_WRIST_SHOULDER_Y_DIFF_LOCKOUT,p=Math.abs(n.x-e.x),d=u<this.JERK_KNEE_DIP_ANGLE,m=u<this.JERK_SECOND_DIP_KNEE_ANGLE,f=this.isStateStable("jerk_dip",d),g=this.isStateStable("jerk_second_dip",m),x=this.isStateStable("jerk_lockout",l>this.JERK_ELBOW_LOCKOUT_ANGLE&&c);this.currentRepCycleState==="START"?f&&(this.currentRepCycleState="UP",this.addFeedback("info","Jerk: First dip detected (drive)."),this.lastFramesStates={}):this.currentRepCycleState==="UP"&&(g&&c&&(this.currentRepCycleState="UP",this.addFeedback("info","Jerk: Second dip under bell.")),x&&(p>this.JERK_WRIST_SHOULDER_X_ALIGNMENT&&this.addFeedback("warning","Jerk: Check wrist/shoulder alignment at lockout."),this.incrementRep(),this.addFeedback("success","Jerk: Rep complete!"),this.currentRepCycleState="START",this.lastFramesStates={}))}calculateAngle(t,e,o){if(!t||!e||!o||(t.score??0)<this.KEYPOINT_SCORE_THRESHOLD||(e.score??0)<this.KEYPOINT_SCORE_THRESHOLD||(o.score??0)<this.KEYPOINT_SCORE_THRESHOLD)return null;let n=t.x-e.x,i=t.y-e.y,s=o.x-e.x,a=o.y-e.y,l=n*s+i*a,u=Math.sqrt(n*n+i*i),c=Math.sqrt(s*s+a*a);if(u===0||c===0)return null;let p=Math.max(-1,Math.min(1,l/(u*c)));return Math.acos(p)*(180/Math.PI)}isStateStable(t,e){return this.lastFramesStates[t]||(this.lastFramesStates[t]=[]),this.lastFramesStates[t].push(e),this.lastFramesStates[t].length>this.STABLE_FRAME_COUNT&&this.lastFramesStates[t].shift(),this.lastFramesStates[t].length<this.STABLE_FRAME_COUNT?!1:this.lastFramesStates[t].every(o=>o===e)}incrementRep(){this.ngZone.run(()=>{this.repCount++,this.addFeedback("success",`Rep ${this.repCount} counted!`)})}addFeedback(t,e){this.ngZone.run(()=>{let o=`[${new Date().toLocaleTimeString()}] ${e}`;this.feedbackMessages.unshift({type:t,message:o}),this.feedbackMessages.length>20&&this.feedbackMessages.pop(),this.changeDetectorRef.detectChanges()})}formatTime(t){let e=Math.floor(t/60),o=t%60;return`${e.toString().padStart(2,"0")}:${o.toString().padStart(2,"0")}`}toggleFeedbackVisibility(){this.isFeedbackVisible=!this.isFeedbackVisible,this.changeDetectorRef.detectChanges()}toggleControlsExpansion(){this.isControlsExpanded=!this.isControlsExpanded,this.changeDetectorRef.detectChanges()}startRecording(){if(!this.videoStream){this.addFeedback("warning","No video stream to record.");return}if(this.mediaRecorder&&this.mediaRecorder.state==="recording"){this.addFeedback("info","Already recording.");return}try{this.recordedChunks=[];let t=["video/webm; codecs=vp9,opus","video/webm; codecs=vp9","video/webm; codecs=vp8,opus","video/webm; codecs=vp8","video/mp4","video/webm"],e=t.find(o=>MediaRecorder.isTypeSupported(o));if(!e){this.addFeedback("error","No supported video format for recording."),console.error("No supported MediaRecorder MimeType found from list:",t);return}this.addFeedback("info",`Using recording format: ${e}`),this.mediaRecorder=new MediaRecorder(this.videoStream,{mimeType:e}),this.mediaRecorder.ondataavailable=o=>{o.data.size>0&&this.recordedChunks.push(o.data)},this.mediaRecorder.onstop=()=>{let o=new Blob(this.recordedChunks,{type:e}),n=URL.createObjectURL(o),i=document.createElement("a");document.body.appendChild(i),i.style.display="none",i.href=n;let s=e.includes("mp4")?"mp4":e.includes("webm")?"webm":"video";i.download=`workout-${new Date().toISOString().replace(/:/g,"-")}.${s}`,i.click(),window.URL.revokeObjectURL(n),i.remove(),this.addFeedback("success","Video recording saved."),this.isRecording=!1,this.changeDetectorRef.detectChanges()},this.mediaRecorder.onerror=o=>{let n=o;console.error("MediaRecorder error:",n.error||o),this.addFeedback("error",`Recording error: ${n.error?.name||"Unknown error"}`),this.isRecording=!1,this.changeDetectorRef.detectChanges()},this.mediaRecorder.start(),this.isRecording=!0,this.addFeedback("info","Recording started."),this.changeDetectorRef.detectChanges()}catch(t){console.error("Error starting recording:",t),this.addFeedback("error",`Failed to start recording: ${t instanceof Error?t.message:String(t)}`),this.isRecording=!1,this.changeDetectorRef.detectChanges()}}stopRecording(){this.mediaRecorder&&this.mediaRecorder.state==="recording"?(this.mediaRecorder.stop(),this.addFeedback("info","Stopping recording...")):(this.addFeedback("info","Not currently recording."),this.isRecording&&(this.isRecording=!1,this.changeDetectorRef.detectChanges()))}toggleRecording(){this.isRecording?this.stopRecording():this.startRecording()}initializeFabPosition(){this.fabPosition.x=window.innerWidth-56-20,this.fabPosition.y=window.innerHeight-56-20}onFabMouseDown(t){if(t.button!==0)return;t.preventDefault(),this.isFabDragging=!1;let o=t.currentTarget.getBoundingClientRect();this.fabDragStartOffset.x=t.clientX-o.left,this.fabDragStartOffset.y=t.clientY-o.top;let n=5,i=t.clientX,s=t.clientY,a=u=>{let c=u.clientX-i,p=u.clientY-s;!this.isFabDragging&&(Math.abs(c)>n||Math.abs(p)>n)&&(this.isFabDragging=!0),this.isFabDragging&&this.updateFabPosition(u.clientX,u.clientY)},l=()=>{window.removeEventListener("mousemove",a),window.removeEventListener("mouseup",l),this.isFabDragging=!1};window.addEventListener("mousemove",a),window.addEventListener("mouseup",l)}onFabTouchStart(t){if(t.touches.length!==1)return;t.preventDefault(),this.isFabDragging=!1;let o=t.currentTarget.getBoundingClientRect(),n=t.touches[0];this.fabDragStartOffset.x=n.clientX-o.left,this.fabDragStartOffset.y=n.clientY-o.top;let i=5,s=n.clientX,a=n.clientY,l=!1,u=p=>{if(p.touches.length!==1)return;let d=p.touches[0],m=d.clientX-s,f=d.clientY-a;!this.isFabDragging&&(Math.abs(m)>i||Math.abs(f)>i)&&(this.isFabDragging=!0,l=!0),this.isFabDragging&&this.updateFabPosition(d.clientX,d.clientY)},c=()=>{window.removeEventListener("touchmove",u),window.removeEventListener("touchend",c),l||this.toggleControlsExpansion(),this.isFabDragging=!1};window.addEventListener("touchmove",u,{passive:!1}),window.addEventListener("touchend",c)}onDocumentMouseMove(t){this.isFabDragging&&(t.preventDefault(),this.updateFabPosition(t.clientX,t.clientY))}onDocumentTouchMove(t){if(!this.isFabDragging||t.touches.length!==1)return;let e=t.touches[0];this.updateFabPosition(e.clientX,e.clientY)}onDocumentMouseUp(t){this.isFabDragging&&(this.isFabDragging=!1)}onDocumentTouchEnd(t){this.isFabDragging&&(this.isFabDragging=!1)}updateFabPosition(t,e){let o=this.hostElement.nativeElement.getBoundingClientRect(),n=56,i=t-this.fabDragStartOffset.x-o.left,s=e-this.fabDragStartOffset.y-o.top;i=Math.max(0,Math.min(i,o.width-n)),s=Math.max(0,Math.min(s,o.height-n)),this.fabPosition={x:i,y:s}}static \u0275fac=function(e){return new(e||r)(ap(ei))};static \u0275cmp=vo({type:r,selectors:[["app-workout-tracker"]],viewQuery:function(e,o){if(e&1&&(Do(Xte,5),Do(Yte,5)),e&2){let n;Fo(n=Oo())&&(o.videoElementRef=n.first),Fo(n=Oo())&&(o.canvasElementRef=n.first)}},hostBindings:function(e,o){e&1&&oe("mousemove",function(i){return o.onDocumentMouseMove(i)},ms)("touchmove",function(i){return o.onDocumentTouchMove(i)},ms)("mouseup",function(i){return o.onDocumentMouseUp(i)},ms)("touchend",function(i){return o.onDocumentTouchEnd(i)},ms)},decls:48,vars:19,consts:[["videoElement",""],["canvasElement",""],[1,"workout-tracker-container"],["class","rep-counter-display-area",4,"ngIf"],[1,"video-area"],["autoplay","","playsinline","","muted","",1,"video-feed"],[1,"pose-canvas"],["class","video-placeholder",4,"ngIf"],[1,"controls-fab",3,"click","mousedown","touchstart"],["width","50px","height","50px","viewBox","0 0 24 24","xmlns","http://www.w3.org/2000/svg","fill","currentColor"],["d","M19.43,12.98c0.04-0.32,0.07-0.64,0.07-0.98s-0.03-0.66-0.07-0.98l2.11-1.65c0.19-0.15,0.24-0.42,0.12-0.64 l-2-3.46c-0.12-0.22-0.39-0.3-0.61-0.22l-2.49,1c-0.52-0.4-1.08-0.73-1.69-0.98l-0.38-2.65C14.46,2.18,14.25,2,14,2h-4 c-0.25,0-0.46,0.18-0.49,0.42L9.11,5.07C8.5,5.32,7.94,5.66,7.41,6.05L4.92,5.05C4.7,4.96,4.44,5.05,4.32,5.26L2.32,8.72 c-0.12,0.22-0.07,0.49,0.12,0.64l2.11,1.65C4.49,11.34,4.46,11.67,4.46,12s0.03,0.66,0.07,0.98l-2.11,1.65 c-0.19,0.15-0.24,0.42-0.12,0.64l2,3.46c0.12,0.22,0.39,0.3,0.61,0.22l2.49-1c0.52,0.4,1.08,0.73,1.69,0.98l0.38,2.65 c0.03,0.24,0.24,0.42,0.49,0.42h4c0.25,0,0.46-0.18,0.49-0.42l0.38-2.65c0.61-0.25,1.17-0.59,1.69-0.98l2.49,1 c0.23,0.09,0.49,0,0.61-0.22l2-3.46c0.12-0.22,0.07-0.49-0.12-0.64L19.43,12.98z M12,15.5c-1.93,0-3.5-1.57-3.5-3.5 s1.57-3.5,3.5-3.5s3.5,1.57,3.5,3.5S13.93,15.5,12,15.5z"],[1,"expandable-controls-panel"],[1,"main-controls"],[1,"exercise-selector"],["for","exercise"],["id","exercise",3,"ngModelChange","ngModel"],["value","Right Bicep Curl"],["value","Left Bicep Curl"],["value","Alternating Bicep Curl"],["value","Kettlebell Snatch"],["value","Kettlebell Press"],["value","Goblet Squat"],["value","Deadlift"],["value","Kettlebell Jerk"],[1,"status-info"],[1,"timer"],[1,"action-buttons"],["class","action-btn start-btn",3,"disabled","click",4,"ngIf"],["class","action-btn stop-btn",3,"click",4,"ngIf"],["class","action-btn record-btn",3,"recording","click",4,"ngIf"],[1,"action-btn","feedback-modal-btn",3,"click"],["class","modal-overlay",3,"click",4,"ngIf"],[1,"rep-counter-display-area"],[1,"rep-count-value"],[1,"rep-count-label"],[1,"video-placeholder"],[4,"ngIf"],["class","action-btn retry-btn",3,"click",4,"ngIf"],[1,"action-btn","retry-btn",3,"click"],[1,"action-btn","start-btn",3,"click","disabled"],[1,"action-btn","stop-btn",3,"click"],[1,"action-btn","record-btn",3,"click"],[1,"modal-overlay",3,"click"],[1,"modal-content",3,"click"],[1,"modal-header"],[1,"modal-close-btn",3,"click"],[1,"modal-body"],[3,"ngClass",4,"ngFor","ngForOf"],["class","no-feedback",4,"ngIf"],[3,"ngClass"],[1,"no-feedback"]],template:function(e,o){if(e&1){let n=me();_(0,"div",2),ne(1,Qte,5,1,"div",3),_(2,"div",4),le(3,"video",5,0)(5,"canvas",6,1),ne(7,tre,4,3,"div",7)(8,sre,5,4,"div",7),I(),_(9,"button",8),oe("click",function(){return Q(n),Z(o.toggleControlsExpansion())})("mousedown",function(s){return Q(n),Z(o.onFabMouseDown(s))})("touchstart",function(s){return Q(n),Z(o.onFabTouchStart(s))}),_e(),_(10,"svg",9),le(11,"path",10),I()(),He(),_(12,"div",11)(13,"div",12)(14,"div",13)(15,"label",14),L(16,"Exercise: "),I(),_(17,"select",15),In("ngModelChange",function(s){return Q(n),kn(o.currentExercise,s)||(o.currentExercise=s),Z(s)}),oe("ngModelChange",function(s){return Q(n),Z(o.setExerciseLogic(s))}),_(18,"option",16),L(19,"Right Bicep Curl"),I(),_(20,"option",17),L(21,"Left Bicep Curl"),I(),_(22,"option",18),L(23,"Alternating Bicep Curl"),I(),_(24,"option",19),L(25,"Kettlebell Snatch"),I(),_(26,"option",20),L(27,"Kettlebell Press"),I(),_(28,"option",21),L(29,"Goblet Squat"),I(),_(30,"option",22),L(31,"Deadlift"),I(),_(32,"option",23),L(33,"Kettlebell Jerk"),I()()(),_(34,"div",24)(35,"span"),L(36),I(),_(37,"div",25),L(38,"Time: "),_(39,"span"),L(40),I()()(),_(41,"div",26),ne(42,are,2,1,"button",27)(43,lre,2,0,"button",28)(44,ure,2,3,"button",29),_(45,"button",30),oe("click",function(){return Q(n),Z(o.toggleFeedbackVisibility())}),L(46," View Log "),I()()()(),ne(47,dre,11,2,"div",31),I()}e&2&&(N(),F("ngIf",o.isWorkoutActive),N(2),bo("hidden",!o.isCameraReady),N(4),F("ngIf",!o.isCameraReady&&!o.modelReady),N(),F("ngIf",o.isCameraReady&&!o.isWorkoutActive&&(!(o.videoStream!=null&&o.videoStream.active)||!o.modelReady)),N(),up("left",o.fabPosition.x,"px")("top",o.fabPosition.y,"px"),N(3),bo("expanded",o.isControlsExpanded),N(5),Cn("ngModel",o.currentExercise),N(19),Ft("",o.currentExercise," - ",o.modelReady?"AI Ready":"AI Loading..."),N(4),Le(o.formatTime(o.elapsedTime)),N(2),F("ngIf",!o.isWorkoutActive),N(),F("ngIf",o.isWorkoutActive),N(),F("ngIf",o.isCameraReady&&(o.videoStream==null?null:o.videoStream.active)),N(3),F("ngIf",o.isFeedbackVisible))},dependencies:[_o,oi,rn,wo,NS,$a,Vd,Wd,Bd,Na,Ra],styles:["[_nghost-%COMP%]{display:flex;flex-direction:column;width:100%;height:100vh;overflow:hidden;background-color:#343a40}.workout-tracker-container[_ngcontent-%COMP%]{display:flex;flex-direction:column;width:100%;flex-grow:1;overflow:hidden;position:relative}.rep-counter-display-area[_ngcontent-%COMP%]{position:absolute;top:20px;left:50%;transform:translate(-50%);z-index:10;background-color:#0009;padding:10px 25px;border-radius:10px;text-align:center;color:#f0f0f0;box-shadow:0 2px 8px #0000004d}.rep-counter-display-area[_ngcontent-%COMP%]   .rep-count-value[_ngcontent-%COMP%]{font-size:4rem;font-weight:700;line-height:1;color:#28a745;text-shadow:1px 1px 2px rgba(0,0,0,.5)}.rep-counter-display-area[_ngcontent-%COMP%]   .rep-count-label[_ngcontent-%COMP%]{font-size:1rem;text-transform:uppercase;letter-spacing:1px;margin-top:2px}.video-area[_ngcontent-%COMP%]{z-index:1;position:relative;width:100%;flex-grow:1;background-color:#000;overflow:hidden;display:flex;justify-content:center;align-items:center}.video-feed[_ngcontent-%COMP%]{display:block;width:100%;height:100%;object-fit:contain}.video-feed.hidden[_ngcontent-%COMP%]{display:none}.pose-canvas[_ngcontent-%COMP%]{position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none}.video-placeholder[_ngcontent-%COMP%]{color:#f8f9fa;text-align:center;padding:20px}.video-placeholder[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{background-color:#007bff}.controls-fab[_ngcontent-%COMP%]{position:absolute;bottom:20px;right:20px;width:56px;height:56px;background-color:#007bff;color:#fff;border-radius:50%;border:none;box-shadow:0 4px 12px #0000004d;display:flex;justify-content:center;align-items:center;cursor:pointer;z-index:990;transition:background-color .3s ease,transform .3s ease}.controls-fab[_ngcontent-%COMP%]:hover{background-color:#0062cc;transform:scale(1.05)}.controls-fab[_ngcontent-%COMP%]   .material-icons-outlined[_ngcontent-%COMP%]{font-size:28px}.expandable-controls-panel[_ngcontent-%COMP%]{position:absolute;bottom:0;left:0;width:100%;background-color:#1e1e1ef2;box-shadow:0 -3px 15px #0006;transform:translateY(100%);transition:transform .3s ease-in-out,opacity .3s ease-in-out;opacity:0;z-index:980;display:flex;justify-content:center;padding-top:15px;padding-bottom:10px;box-sizing:border-box}.expandable-controls-panel.expanded[_ngcontent-%COMP%]{transform:translateY(0);opacity:1}.main-controls[_ngcontent-%COMP%]{color:#f8f9fa;padding:10px 15px;border-radius:8px;width:100%;max-width:700px;display:flex;flex-direction:column;gap:12px}.exercise-selector[_ngcontent-%COMP%]{display:flex;align-items:center;gap:8px}.exercise-selector[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{font-size:.9em}.exercise-selector[_ngcontent-%COMP%]   select[_ngcontent-%COMP%]{padding:6px 10px;border-radius:4px;border:1px solid #6c757d;background-color:#343a40;color:#f8f9fa;flex-grow:1}.status-info[_ngcontent-%COMP%]{display:flex;justify-content:space-around;align-items:center;font-size:.9em;text-align:center;flex-wrap:wrap;gap:10px}.status-info[_ngcontent-%COMP%]   .timer[_ngcontent-%COMP%]{background-color:#0003;padding:5px 10px;border-radius:4px}.status-info[_ngcontent-%COMP%]   .timer[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{font-weight:700;color:#007bff}.action-buttons[_ngcontent-%COMP%]{display:flex;justify-content:center;gap:10px;flex-wrap:wrap}.action-btn[_ngcontent-%COMP%]{padding:10px 15px;font-size:.9em;border:none;border-radius:5px;cursor:pointer;transition:background-color .2s ease,transform .1s ease;color:#fff;min-width:120px;text-align:center}.action-btn[_ngcontent-%COMP%]:hover{opacity:.9}.action-btn[_ngcontent-%COMP%]:active{transform:translateY(1px)}.action-btn[_ngcontent-%COMP%]:disabled{background-color:#6c757d!important;cursor:not-allowed;opacity:.7}.start-btn[_ngcontent-%COMP%]{background-color:#28a745}.start-btn[_ngcontent-%COMP%]:hover{background-color:#1e7e34}.stop-btn[_ngcontent-%COMP%]{background-color:#dc3545}.stop-btn[_ngcontent-%COMP%]:hover{background-color:#bd2130}.record-btn[_ngcontent-%COMP%]{background-color:#17a2b8}.record-btn[_ngcontent-%COMP%]:hover{background-color:#117a8b}.record-btn.recording[_ngcontent-%COMP%]{background-color:#ffc107;color:#343a40}.record-btn.recording[_ngcontent-%COMP%]:hover{background-color:#d39e00}.feedback-modal-btn[_ngcontent-%COMP%]{background-color:#6c757d}.feedback-modal-btn[_ngcontent-%COMP%]:hover{background-color:#545b62}.modal-overlay[_ngcontent-%COMP%]{position:fixed;top:0;left:0;width:100%;height:100%;background-color:#0009;display:flex;justify-content:center;align-items:center;z-index:1000;padding:20px;box-sizing:border-box}.modal-content[_ngcontent-%COMP%]{background-color:#fff;color:#212529;padding:20px;border-radius:8px;box-shadow:0 5px 15px #0000004d;width:100%;max-width:600px;max-height:80vh;display:flex;flex-direction:column}.modal-header[_ngcontent-%COMP%]{display:flex;justify-content:space-between;align-items:center;border-bottom:1px solid #eee;padding-bottom:10px;margin-bottom:15px}.modal-header[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%]{margin:0;font-size:1.4em}.modal-close-btn[_ngcontent-%COMP%]{background:none;border:none;font-size:1.8em;line-height:1;cursor:pointer;padding:0 5px;color:#6c757d}.modal-close-btn[_ngcontent-%COMP%]:hover{color:#343a40}.modal-body[_ngcontent-%COMP%]{flex-grow:1}.modal-body[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%]{list-style-type:none;padding:0;margin:0}.modal-body[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]{padding:6px 0;font-size:.9em;border-bottom:1px solid #f0f0f0;word-break:break-word}.modal-body[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]:last-child{border-bottom:none}.modal-body[_ngcontent-%COMP%]   .feedback-info[_ngcontent-%COMP%]{color:#007bff}.modal-body[_ngcontent-%COMP%]   .feedback-success[_ngcontent-%COMP%]{color:#28a745}.modal-body[_ngcontent-%COMP%]   .feedback-warning[_ngcontent-%COMP%]{color:#ffc107}.modal-body[_ngcontent-%COMP%]   .feedback-error[_ngcontent-%COMP%]{color:#dc3545}.no-feedback[_ngcontent-%COMP%]{color:#6c757d;font-style:italic;padding:20px 0;text-align:center}"]})};var Gkt=[{path:"",component:Yd,title:"My Routines"},{path:"routine/new",component:Tn,data:{mode:"routineBuilder",isNew:!0},title:"Create New Routine"},{path:"routine/edit/:routineId",component:Tn,data:{mode:"routineBuilder",isNew:!1},title:"Edit Routine"},{path:"routine/view/:routineId",component:Tn,data:{mode:"routineBuilder",isNew:!1,isView:!0},title:"View Routine"},{path:"log/manual/new",component:Tn,data:{mode:"manualLogEntry",isNew:!0},title:"Log Past Workout"},{path:"log/manual/new/from/:routineId",component:Tn,data:{mode:"manualLogEntry",isNew:!0,prefillFromRoutine:!0},title:"Log Workout from Routine"},{path:"log/manual/edit/:logId",component:Tn,data:{mode:"manualLogEntry",isNew:!1},title:"Edit Workout Log"},{path:"play",component:mp,data:{mode:"newRoutine",isNew:!1},title:"Workout Session"},{path:"play/:routineId",component:mp,title:"Workout Session"},{path:"summary/:logId",component:om,title:"Workout Summary"},{path:"routine/kb-workout-tracker",component:Px}];export{Gkt as WORKOUT_TRACKER_ROUTES};
