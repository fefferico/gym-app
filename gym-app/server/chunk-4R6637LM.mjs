import './polyfills.server.mjs';
import{b as _}from"./chunk-V2MHWZQU.mjs";import{D as I,E as k,a as p,w as A,x as w}from"./chunk-FG43AHJK.mjs";import{E as O,I as f,d as P,h,j as b,k as u,l as T,v as R,z as S}from"./chunk-AZOTOOYO.mjs";import{a as c,b as d,h as l}from"./chunk-S6KH3LOX.mjs";function D(g,e){return I(g,e?.in).getDay()}var j=class g{storageService=f(w);workoutService=f(k);alertService=f(A);toastService=f(_);PROGRAMS_STORAGE_KEY="fitTrackPro_trainingPrograms";programsSubject=new P(this._loadProgramsFromStorage());programs$=this.programsSubject.asObservable();constructor(){}_loadProgramsFromStorage(){let e=this.storageService.getItem(this.PROGRAMS_STORAGE_KEY);return e||[]}_saveProgramsToStorage(e){this.storageService.setItem(this.PROGRAMS_STORAGE_KEY,e),this.programsSubject.next([...e])}getAllPrograms(){return this.programs$}getProgramById(e){return this.programs$.pipe(u(t=>t.find(r=>r.id===e)))}addProgram(e){return l(this,null,function*(){let t=this.programsSubject.getValue(),r=d(c({},e),{id:p(),isActive:!1,schedule:e.schedule.map(o=>d(c({},o),{id:p()}))}),a=[...t,r];return this._saveProgramsToStorage(a),this.toastService.success(`Program "${r.name}" created.`,3e3,"Program Created"),r})}updateProgram(e){return l(this,null,function*(){let t=this.programsSubject.getValue(),r=t.findIndex(a=>a.id===e.id);if(r>-1){let a=e.schedule.map(n=>d(c({},n),{id:n.id||p()})),o=d(c({},e),{schedule:a}),i=[...t];return i[r]=o,o.isActive&&(i=i.map(n=>n.id===o.id?n:d(c({},n),{isActive:!1}))),this._saveProgramsToStorage(i),this.toastService.success(`Program "${o.name}" updated.`,3e3,"Program Updated"),o}this.toastService.error(`Program with ID ${e.id} not found.`,0,"Update Error")})}deleteProgram(e){return l(this,null,function*(){let t=yield b(this.getProgramById(e).pipe(R(1)));if(!t){this.toastService.error("Program not found.",0,"Delete Error");return}let r=yield this.alertService.showConfirm("Delete Program",`Are you sure you want to delete the program "${t.name}"? This action cannot be undone.`,"Delete");if(r&&r.data){let o=this.programsSubject.getValue().filter(i=>i.id!==e);this._saveProgramsToStorage(o),this.toastService.info(`Program "${t.name}" deleted.`,3e3,"Program Deleted")}})}setActiveProgram(e){return l(this,null,function*(){let t=this.programsSubject.getValue(),r=t.find(o=>o.id===e);if(!r){this.toastService.error("Program not found to activate.",0,"Activation Error");return}let a=t.map(o=>d(c({},o),{isActive:o.id===e}));this._saveProgramsToStorage(a),this.toastService.success(`Program "${r.name}" is now active.`,3e3,"Program Activated")})}getActiveProgram(){return this.programs$.pipe(u(e=>e.find(t=>t.isActive)))}getRoutineForDay(e){return this.getActiveProgram().pipe(S(t=>{if(!t)return h(null);let r;if(t.cycleLength&&t.cycleLength>0&&t.startDate){let o=new Date(t.startDate),i=Math.abs(e.getTime()-o.getTime()),m=Math.floor(i/(1e3*60*60*24))%t.cycleLength+1;r=s=>s.dayOfWeek===m}else{let o=D(e);r=i=>i.dayOfWeek===o}let a=t.schedule.find(r);return a?this.workoutService.getRoutineById(a.routineId).pipe(u(o=>o?{routine:o,scheduledDayInfo:a}:(console.warn(`Routine with ID ${a.routineId} not found for scheduled day.`),null))):h(null)}))}getScheduledRoutinesForDateRange(e,t){return this.getActiveProgram().pipe(S(r=>{if(!r||!r.schedule||r.schedule.length===0)return h([]);let a=[],o=new Date(e);for(;o<=t;){let i,n=new Date(o);if(r.cycleLength&&r.cycleLength>0&&r.startDate){let s=new Date(r.startDate),y=Math.abs(n.getTime()-s.getTime()),v=n>=s?Math.floor(y/(1e3*60*60*24)):-1;if(v>=0){let $=v%r.cycleLength+1;i=E=>E.dayOfWeek===$}else i=()=>!1}else{let s=D(n);i=y=>y.dayOfWeek===s}let m=r.schedule.find(i);m&&a.push(this.workoutService.getRoutineById(m.routineId).pipe(u(s=>s?{date:n,routine:s,scheduledDayInfo:m}:null))),o.setDate(o.getDate()+1)}return a.length===0?h([]):T(a).pipe(u(i=>i.filter(n=>n!==null)))}))}static \u0275fac=function(t){return new(t||g)};static \u0275prov=O({token:g,factory:g.\u0275fac,providedIn:"root"})};export{j as a};
