import{A as O,E as v,I as A,M as D,Vb as p,a as u,b as l,f as m,j as T,m as h,o as I,p as g,q as R,qc as w,rc as k,sc as _,tc as j,zc as L}from"./chunk-SASBCNRE.js";function P(y,e){return L(y,e?.in).getDay()}var M=class y{storageService=D(k);workoutService=D(_);alertService=D(w);toastService=D(j);PROGRAMS_STORAGE_KEY="fitTrackPro_trainingPrograms";programsSubject=new T(this._loadProgramsFromStorage());programs$=this.programsSubject.asObservable();constructor(){}_loadProgramsFromStorage(){let e=this.storageService.getItem(this.PROGRAMS_STORAGE_KEY);return e||[]}_saveProgramsToStorage(e){this.storageService.setItem(this.PROGRAMS_STORAGE_KEY,e),this.programsSubject.next([...e])}getAllPrograms(){return this.programs$}getProgramById(e){return this.programs$.pipe(g(a=>a.find(t=>t.id===e)))}addProgram(e){return m(this,null,function*(){let a=this.programsSubject.getValue(),t=l(u({},e),{id:p(),isActive:!1,schedule:e.schedule.map(r=>l(u({},r),{id:p()}))}),i=[...a,t];return this._saveProgramsToStorage(i),this.toastService.success(`Program "${t.name}" created.`,3e3,"Program Created"),t})}updateProgram(e){return m(this,null,function*(){let a=this.programsSubject.getValue(),t=a.findIndex(i=>i.id===e.id);if(t>-1){let i=e.schedule.map(n=>l(u({},n),{id:n.id||p()})),r=l(u({},e),{schedule:i}),o=[...a];return o[t]=r,r.isActive&&(o=o.map(n=>n.id===r.id?n:l(u({},n),{isActive:!1}))),this._saveProgramsToStorage(o),this.toastService.success(`Program "${r.name}" updated.`,3e3,"Program Updated"),r}this.toastService.error(`Program with ID ${e.id} not found.`,0,"Update Error")})}deleteProgram(e){return m(this,null,function*(){let a=yield I(this.getProgramById(e).pipe(O(1)));if(!a){this.toastService.error("Program not found.",0,"Delete Error");return}let t=yield this.alertService.showConfirm("Delete Program",`Are you sure you want to delete the program "${a.name}"? This action cannot be undone.`,"Delete");if(t&&t.data){let r=this.programsSubject.getValue().filter(o=>o.id!==e);this._saveProgramsToStorage(r),this.toastService.info(`Program "${a.name}" deleted.`,3e3,"Program Deleted")}})}setActiveProgram(e){return m(this,null,function*(){let a=this.programsSubject.getValue(),t=a.find(r=>r.id===e);if(!t){this.toastService.error("Program not found to activate.",0,"Activation Error");return}let i=a.map(r=>l(u({},r),{isActive:r.id===e}));this._saveProgramsToStorage(i),this.toastService.success(`Program "${t.name}" is now active.`,3e3,"Program Activated")})}deactivateAllPrograms(){return m(this,null,function*(){let e=this.programsSubject.getValue();if(e.length>0){let a=e.map(t=>l(u({},t),{isActive:!1}));this._saveProgramsToStorage(a)}})}deactivateProgram(e){return m(this,null,function*(){let a=this.programsSubject.getValue(),t=a.find(r=>r.id===e);if(!t){this.toastService.error("Program not found to deactivate.",0,"Deactivation Error");return}if(!t.isActive){this.toastService.info(`Program "${t.name}" is already inactive.`,3e3,"Already Inactive");return}let i=a.map(r=>r.id===e?l(u({},r),{isActive:!1}):r);this._saveProgramsToStorage(i),this.toastService.info(`Program "${t.name}" has been deactivated.`,3e3,"Program Deactivated")})}getActiveProgram(){return this.programs$.pipe(g(e=>e.find(a=>a.isActive)))}getRoutineForDay(e){return this.getActiveProgram().pipe(v(a=>{if(!a)return h(null);let t;if(a.cycleLength&&a.cycleLength>0&&a.startDate){let r=new Date(a.startDate),o=Math.abs(e.getTime()-r.getTime()),c=Math.floor(o/(1e3*60*60*24))%a.cycleLength+1;t=s=>s.dayOfWeek===c}else{let r=P(e);t=o=>o.dayOfWeek===r}let i=a.schedule.find(t);return i?this.workoutService.getRoutineById(i.routineId).pipe(g(r=>r?{routine:r,scheduledDayInfo:i}:(console.warn(`Routine with ID ${i.routineId} not found for scheduled day.`),null))):h(null)}))}getScheduledRoutinesForDateRange(e,a){return this.getActiveProgram().pipe(v(t=>{if(!t||!t.schedule||t.schedule.length===0)return h([]);let i=[],r=new Date(e);for(;r<=a;){let o,n=new Date(r);if(t.cycleLength&&t.cycleLength>0&&t.startDate){let s=new Date(t.startDate),d=Math.abs(n.getTime()-s.getTime()),f=n>=s?Math.floor(d/(1e3*60*60*24)):-1;if(f>=0){let S=f%t.cycleLength+1;o=b=>b.dayOfWeek===S}else o=()=>!1}else{let s=P(n);o=d=>d.dayOfWeek===s}let c=t.schedule.find(o);c&&i.push(this.workoutService.getRoutineById(c.routineId).pipe(g(s=>s?{date:n,routine:s,scheduledDayInfo:c}:null))),r.setDate(r.getDate()+1)}return i.length===0?h([]):R(i).pipe(g(o=>o.filter(n=>n!==null)))}))}getScheduledRoutinesForDateRangeByProgramId(e,a,t){return this.getProgramById(e).pipe(v(i=>{if(!i||!i.schedule||i.schedule.length===0)return h([]);let r=[],o=new Date(a);for(;o<=t;){let n,c=new Date(o);if(i.cycleLength&&i.cycleLength>0&&i.startDate){let d=new Date(i.startDate),f=Math.abs(c.getTime()-d.getTime()),S=c>=d?Math.floor(f/(1e3*60*60*24)):-1;if(S>=0){let b=S%i.cycleLength+1;n=$=>$.dayOfWeek===b}else n=()=>!1}else{let d=P(c);n=f=>f.dayOfWeek===d}let s=i.schedule.find(n);s&&r.push(this.workoutService.getRoutineById(s.routineId).pipe(g(d=>d?{date:c,routine:d,scheduledDayInfo:s}:null))),o.setDate(o.getDate()+1)}return r.length===0?h([]):R(r).pipe(g(n=>n.filter(c=>c!==null)))}))}static \u0275fac=function(a){return new(a||y)};static \u0275prov=A({token:y,factory:y.\u0275fac,providedIn:"root"})};export{M as a};
