import{b as k}from"./chunk-TQ7P7O3N.js";import{D as A,F as I,H as T,Kc as j,L as w,Lc as _,Mc as L,Nc as E,P as y,Rc as $,Sc as F,a as g,b as u,g as h,k as v,nc as P,o as p,q as R,r as m,s as O}from"./chunk-Y4THQPVX.js";function D(S,e){return $(S,e?.in).getDay()}var M=class S{storageService=y(_);workoutService=y(L);alertService=y(j);toastService=y(E);PROGRAMS_STORAGE_KEY="fitTrackPro_trainingPrograms";programsSubject=new v(this._loadProgramsFromStorage());programs$=this.programsSubject.asObservable();isLoadingProgramsSubject=new v(!0);isLoadingPrograms$=this.isLoadingProgramsSubject.asObservable();constructor(){this.isLoadingProgramsSubject.next(!0);let e=this._loadProgramsFromStorage();this.programsSubject=new v(e),this.programs$=this.programsSubject.asObservable().pipe(I(1)),this._seedAndMergeProgramsFromStaticData(e)}_loadProgramsFromStorage(){let e=this.storageService.getItem(this.PROGRAMS_STORAGE_KEY);return e||[]}_saveProgramsToStorage(e){this.storageService.setItem(this.PROGRAMS_STORAGE_KEY,e),this.programsSubject.next([...e])}_seedAndMergeProgramsFromStaticData(e){try{let t=[],r=new Set(e.map(a=>a.id)),o=t.filter(a=>!r.has(a.id));if(o.length>0){console.log(`Seeding ${o.length} new training programs from static data.`);let a=[...e,...o];this._saveProgramsToStorage(a)}else console.log("No new training programs to seed. All default programs are present in storage.")}catch(t){console.error("Failed to process or seed training programs from static data:",t)}finally{this.isLoadingProgramsSubject.next(!1)}}getAllPrograms(){return this.programs$}getProgramsByRoutineId(e){return e?this.programs$.pipe(m(t=>t.filter(r=>r.schedule.some(o=>o.routineId===e)))):p([])}getProgramById(e){return this.programs$.pipe(m(t=>t.find(r=>r.id===e)))}addProgram(e){return h(this,null,function*(){let t=this.programsSubject.getValue(),r=u(g({},e),{id:P(),isActive:!1,schedule:e.schedule.map(a=>u(g({},a),{id:P()}))}),o=[...t,r];return this._saveProgramsToStorage(o),this.toastService.success(`Program "${r.name}" created.`,3e3,"Program Created"),r})}updateProgram(e){return h(this,null,function*(){let t=this.programsSubject.getValue(),r=t.findIndex(o=>o.id===e.id);if(r>-1){let o=e.schedule.map(s=>u(g({},s),{id:s.id||P()})),a=u(g({},e),{schedule:o}),i=[...t];return i[r]=a,a.isActive&&(i=i.map(s=>s.id===a.id?s:u(g({},s),{isActive:!1}))),this._saveProgramsToStorage(i),this.toastService.success(`Program "${a.name}" updated.`,3e3,"Program Updated"),a}this.toastService.error(`Program with ID ${e.id} not found.`,0,"Update Error")})}deleteProgram(e){return h(this,null,function*(){let t=yield R(this.getProgramById(e).pipe(A(1)));if(!t){this.toastService.error("Program not found.",0,"Delete Error");return}let r=yield this.alertService.showConfirm("Delete Program",`Are you sure you want to delete the program "${t.name}"? This action cannot be undone.`,"Delete");if(r&&r.data){let a=this.programsSubject.getValue().filter(i=>i.id!==e);this._saveProgramsToStorage(a),this.toastService.info(`Program "${t.name}" deleted.`,3e3,"Program Deleted")}})}setActiveProgram(e){return h(this,null,function*(){let t=this.programsSubject.getValue(),r=t.find(a=>a.id===e);if(!r){this.toastService.error("Program not found to activate.",0,"Activation Error");return}let o=t.map(a=>u(g({},a),{isActive:a.id===e}));this._saveProgramsToStorage(o),this.toastService.success(`Program "${r.name}" is now active.`,3e3,"Program Activated")})}deactivateAllPrograms(){return h(this,null,function*(){let e=this.programsSubject.getValue();if(e.length>0){let t=e.map(r=>u(g({},r),{isActive:!1}));this._saveProgramsToStorage(t)}})}deactivateProgram(e){return h(this,null,function*(){let t=this.programsSubject.getValue(),r=t.find(a=>a.id===e);if(!r){this.toastService.error("Program not found to deactivate.",0,"Deactivation Error");return}if(!r.isActive){this.toastService.info(`Program "${r.name}" is already inactive.`,3e3,"Already Inactive");return}let o=t.map(a=>a.id===e?u(g({},a),{isActive:!1}):a);this._saveProgramsToStorage(o),this.toastService.info(`Program "${r.name}" has been deactivated.`,3e3,"Program Deactivated")})}getActiveProgram(){return this.programs$.pipe(m(e=>e.find(t=>t.isActive)))}getDataForBackup(){return this.programsSubject.getValue()}replaceData(e){if(!Array.isArray(e)){console.error("ExerciseService: Imported data for programs is not an array.");return}this._saveProgramsToStorage(e),console.log("ExerciseService: Routines replaced with imported data.")}getRoutineForDay(e){return this.getActiveProgram().pipe(T(t=>{if(!t)return p(null);let r;if(t.cycleLength&&t.cycleLength>0&&t.startDate){let a=new Date(t.startDate),i=Math.abs(e.getTime()-a.getTime()),l=Math.floor(i/(1e3*60*60*24))%t.cycleLength+1;r=n=>n.dayOfWeek===Number(l)}else{let a=D(e);r=i=>i.dayOfWeek===Number(a)}let o=t.schedule.find(r);return o?this.workoutService.getRoutineById(o.routineId).pipe(m(a=>a?{routine:a,scheduledDayInfo:o}:(console.warn(`Routine with ID ${o.routineId} not found for scheduled day.`),null))):p(null)}))}getScheduledRoutinesForDateRange(e,t){return this.getActiveProgram().pipe(T(r=>{if(!r||!r.schedule||r.schedule.length===0)return p([]);let o=[],a=new Date(e);for(;a<=t;){let i,s=new Date(a);if(r.cycleLength&&r.cycleLength>0&&r.startDate){let n=new Date(r.startDate),c=Math.abs(s.getTime()-n.getTime()),d=s>=n?Math.floor(c/(1e3*60*60*24)):-1;if(d>=0){let f=d%r.cycleLength+1;i=b=>b.dayOfWeek===f}else i=()=>!1}else{let n=D(s);i=c=>c.dayOfWeek===n}let l=r.schedule.find(i);l&&o.push(this.workoutService.getRoutineById(l.routineId).pipe(m(n=>n?{date:s,routine:n,scheduledDayInfo:l}:null))),a.setDate(a.getDate()+1)}return o.length===0?p([]):O(o).pipe(m(i=>i.filter(s=>s!==null)))}))}getScheduledRoutinesForDateRangeByProgramId(e,t,r){return this.getProgramById(e).pipe(m(o=>{if(!o||!o.schedule||o.schedule.length===0)return[];let a=k({start:t,end:r}),i=[],s=o.cycleLength&&o.cycleLength>0?o.cycleLength:7,l=o.startDate?F(o.startDate):new Date(1970,0,1),n=new Map;return o.schedule.forEach(c=>{let d=c.dayOfWeek%s;n.has(d)||n.set(d,[]),n.get(d).push(c)}),a.forEach(c=>{if(!(c<l))if(s===7){let d=D(c);n.has(d)&&n.get(d).forEach(f=>{i.push({date:c,scheduledDayInfo:f})})}else{let f=Math.floor((c.getTime()-l.getTime())/864e5)%s;n.has(f)&&n.get(f).forEach(b=>{i.push({date:c,scheduledDayInfo:b})})}}),i}))}static \u0275fac=function(t){return new(t||S)};static \u0275prov=w({token:S,factory:S.\u0275fac,providedIn:"root"})};export{M as a};
