import{M as v,Oc as q,Pc as S,Q as a,Qc as f,e as l,kc as y,p as d}from"./chunk-OQYQOZHE.js";import{a as u,b as c,g as p}from"./chunk-GAL4ENT6.js";var E=class s{storageService=a(S);toastService=a(f);alertService=a(q);PERSONAL_GYM_STORAGE_KEY="fitTrackPro_personalGym";equipmentSubject=new l(this._loadFromStorage());equipment$=this.equipmentSubject.asObservable();constructor(){}_loadFromStorage(){let e=this.storageService.getItem(this.PERSONAL_GYM_STORAGE_KEY);return e?this._sortEquipment(e):[]}_saveToStorage(e){let t=this._sortEquipment(e);this.storageService.setItem(this.PERSONAL_GYM_STORAGE_KEY,t),this.equipmentSubject.next(t)}_sortEquipment(e){return e.sort((t,r)=>t.category<r.category?-1:t.category>r.category?1:t.name.localeCompare(r.name))}getAllEquipment(){return this.equipment$}getEquipmentById(e){return this.equipment$.pipe(d(t=>t.find(r=>r.id===e)))}addEquipment(e){let t=c(u({},e),{id:y()}),i=[...this.equipmentSubject.getValue(),t];return this._saveToStorage(i),this.toastService.success(`Added "${t.name}" to your gym!`,3e3,"Equipment Added"),t}updateEquipment(e){let t=this.equipmentSubject.getValue(),r=t.findIndex(i=>i.id===e.id);if(r>-1){let i=[...t];i[r]=e,this._saveToStorage(i),this.toastService.success(`Updated "${e.name}" successfully!`,3e3,"Equipment Updated")}else this.toastService.error(`Could not find "${e.name}" to update.`,0,"Update Failed")}deleteEquipment(e){return p(this,null,function*(){let t=this.equipmentSubject.getValue(),r=t.find(o=>o.id===e);if(!r){this.toastService.error("Equipment not found.",0,"Deletion Failed");return}let i=yield this.alertService.showConfirm("Delete Equipment",`Are you sure you want to delete "${r.name}" from your gym? This cannot be undone.`);if(i&&i.data){let o=t.filter(m=>m.id!==e);this._saveToStorage(o),this.toastService.info(`"${r.name}" was deleted.`,3e3,"Deleted")}})}getDataForBackup(){return this.equipmentSubject.getValue()}mergeData(e){if(!Array.isArray(e)){console.error("PersonalGymService: Imported data for equipment is not an array."),this.toastService.error("Import failed: Invalid personal gym data file.",0,"Import Error");return}let t=this.equipmentSubject.getValue(),r=new Map(t.map(n=>[n.id,n])),i=0,o=0;e.forEach(n=>{if(!n.id||!n.name){console.warn("Skipping invalid equipment during import:",n);return}r.has(n.id)?i++:o++,r.set(n.id,n)});let m=Array.from(r.values());this._saveToStorage(m),this.toastService.success(`Gym import complete. ${i} items updated, ${o} added.`,6e3,"Personal Gym Merged")}static \u0275fac=function(t){return new(t||s)};static \u0275prov=v({token:s,factory:s.\u0275fac,providedIn:"root"})};export{E as a};
