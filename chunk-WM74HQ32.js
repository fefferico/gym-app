import{c as Z,g as K}from"./chunk-R2LNZ2GR.js";import{E as U,G as T,N as E,O as W,P as M,Q as q,R as B,Rb as X,Sc as J,Tc as Q,U as $,_ as L,a as j,aa as V,b as C,fa as G,g as P,i as p,k as R,n as g,o as O,t as _,ua as Y,zb as z}from"./chunk-UHZ6G33I.js";var v=function(a){return a.readonly="readonly",a.readwrite="readwrite",a}(v||{}),N=new M(null),ee=new M("Indexed DB"),se=new M("Server Indexed DB");function ie(a,o){return a.objectStoreNames.contains(o)}function w(a,o,l){if(!a){l("You need to use the openDatabase function to create a database before you query it!");return}ie(a,o)||l(`objectStore does not exists: ${o}`)}function D(a,o){let l=a.transaction(o.storeName,o.dbMode);return l.onerror=o.error,l.onabort=o.abort,l}function x(a,o,l,e){return{storeName:o,dbMode:a,error:r=>{l(r)},abort:r=>{l(r)}}}var F=[];function y(a,o,l,e){return new Promise((r,t)=>{a||t("IndexedDB not available");let n=a.open(o,l),s;n.onsuccess=()=>{s=n.result,F.push(s),r(s)},n.onerror=()=>{t(`IndexedDB error: ${n.error}`)},typeof e=="function"&&(n.onupgradeneeded=c=>{e(c,s)})})}function A(a,o,l,e,r){return P(this,null,function*(){return new Promise((t,n)=>{if(!a)return;let s=a.open(o,l);s.onupgradeneeded=c=>P(null,null,function*(){let i=c.target.result,d=e.map(u=>P(null,null,function*(){if(!i.objectStoreNames.contains(u.store)){let h=i.createObjectStore(u.store,u.storeConfig);for(let f of u.storeSchema)h.createIndex(f.name,f.keypath,f.options)}}));yield Promise.all(d);let m=r&&r();if(m){let u=Object.keys(m).map(h=>parseInt(h,10)).filter(h=>h>c.oldVersion).sort((h,f)=>h-f);for(let h of u)m[h](i,s.transaction)}i.close(),t()}),s.onsuccess=c=>{c.target.result.close(),t()},s.onerror=c=>{n(c)}})})}function ae(a,o,l){if(!a||!o||!l)throw Error('Params: "dbName", "version", "storeName" are mandatory.');return new p(e=>{try{let r=o+1,t=indexedDB.open(a,r);t.onupgradeneeded=n=>{let s=n.target.result;s.deleteObjectStore(l),s.close(),console.log("onupgradeneeded"),e.next(),e.complete()},t.onerror=n=>e.error(n)}catch(r){e.error(r)}})}function ce(a){return new Promise((o,l)=>{if(!a){l(new Error("No database to close"));return}try{a.close(),o()}catch(e){l(`Error closing database: ${e}`)}})}function b(){return function(a,o,l){let e=l.value;return l.value=function(...r){let t=e.apply(this,r);return t instanceof p?t.pipe(T(()=>P(this,null,function*(){let n=F.map(s=>P(this,null,function*(){yield ce(s)}));yield Promise.all(n),F.length=0}))):t},l}}var le=(()=>{let o=class o{constructor(e,r){this.dbConfigs=e,this.indexedDB=r,this.defaultDatabaseName=null,Object.values(this.dbConfigs).forEach((t,n,s)=>this.instanciateConfig(t,s.length===1))}instanciateConfig(e,r){return P(this,null,function*(){if(!e.name)throw new Error("NgxIndexedDB: Please, provide the dbName in the configuration");if((e.isDefault??!1)&&this.defaultDatabaseName)throw new Error("NgxIndexedDB: Only one database can be set as default");((e.isDefault??!1)&&!this.defaultDatabaseName||r)&&(this.defaultDatabaseName=e.name,this.selectedDb=e.name),yield A(this.indexedDB,e.name,e.version,e.objectStoresMeta,e.migrationFactory),y(this.indexedDB,e.name).then(t=>{t.version!==e.version&&(z()&&(console.warn(`
            Your DB Config doesn't match the most recent version of the DB with name ${e.name}, please update it
            DB current version: ${t.version};
            Your configuration: ${e.version};
            `),console.warn(`Using latest version ${t.version}`)),this.dbConfigs[e.name].version=t.version),t.close()})})}get dbConfig(){return this.dbConfigs[this.selectedDb]}getDatabaseVersion(){return new p(e=>{y(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(r=>{e.next(r.version),e.complete()}).catch(r=>e.error(`error during get version of database => ${r} `))})}selectDb(e){if(e=e??this.defaultDatabaseName,!e)throw new Error("No database name specified and no default database set.");if(!Object.keys(this.dbConfigs).includes(e))throw new Error(`NgxIndexedDB: Database ${e} is not initialized.`);this.selectedDb=e}createObjectStore(e,r){return P(this,null,function*(){let t=[e];yield A(this.indexedDB,this.dbConfig.name,++this.dbConfig.version,t,r)})}createDynamicObjectStore(e,r){return P(this,null,function*(){let t=[e];yield A(this.indexedDB,this.dbConfig.name,this.dbConfig.version,t,r)})}add(e,r,t){return new p(n=>{y(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(s=>{let i=D(s,x(v.readwrite,e,u=>n.error(u))).objectStore(e),m=!!t?i.add(r,t):i.add(r);m.onsuccess=u=>P(this,null,function*(){let h=u.target.result,f=i.get(h);f.onsuccess=S=>{n.next(S.target.result),n.complete()},f.onerror=S=>{n.error(S)}}),m.onerror=u=>{n.error(u)}}).catch(s=>n.error(s))})}bulkAdd(e,r){let t=new Promise((n,s)=>{y(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(c=>{let d=D(c,x(v.readwrite,e,n,s)).objectStore(e),m=r.map(u=>new Promise(h=>{let f=u.key;delete u.key;let I=!!f?d.add(u,f):d.add(u);I.onsuccess=k=>{let ne=k.target.result;h(ne)}}));n(Promise.all(m))}).catch(c=>s(c))});return O(t)}bulkDelete(e,r){let t=r.map(n=>new Promise((s,c)=>{y(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(i=>{let d=D(i,x(v.readwrite,e,c,s));d.objectStore(e).delete(n),d.oncomplete=()=>{this.getAll(e).pipe(U(1)).subscribe(u=>{s(u)})}}).catch(i=>c(i))}));return O(Promise.all(t))}getByKey(e,r){return new p(t=>{y(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(n=>{let i=D(n,x(v.readonly,e,t.error)).objectStore(e).get(r);i.onsuccess=d=>{t.next(d.target.result),t.complete()},i.onerror=d=>{t.error(d)}}).catch(n=>t.error(n))})}bulkGet(e,r){let t=r.map(n=>this.getByKey(e,n));return new p(n=>{_(t).subscribe(s=>{n.next(s),n.complete()})})}getByID(e,r){return new p(t=>{y(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(n=>{w(n,e,d=>t.error(d));let i=D(n,x(v.readonly,e,t.error,t.next)).objectStore(e).get(r);i.onsuccess=d=>{t.next(d.target.result),t.complete()}}).catch(n=>t.error(n))})}getByIndex(e,r,t){return new p(n=>{y(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(s=>{w(s,e,u=>n.error(u));let m=D(s,x(v.readonly,e,n.error)).objectStore(e).index(r).get(t);m.onsuccess=u=>{n.next(u.target.result),n.complete()}}).catch(s=>n.error(s))})}getAll(e){return new p(r=>{y(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(t=>{w(t,e,i=>r.error(i));let c=D(t,x(v.readonly,e,r.error,r.next)).objectStore(e).getAll();c.onerror=i=>{r.error(i)},c.onsuccess=({target:{result:i}})=>{r.next(i),r.complete()}}).catch(t=>r.error(t))})}update(e,r){return new p(t=>{y(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(n=>{w(n,e,d=>t.error(d));let c=D(n,x(v.readwrite,e,d=>t.error(d))).objectStore(e),i=c.put(r);i.onsuccess=d=>P(this,null,function*(){let m=d.target.result,u=c.get(m);u.onsuccess=h=>{t.next(h.target.result),t.complete()}})}).catch(n=>t.error(n))})}bulkPut(e,r){let t;return new p(n=>{y(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(s=>{w(s,e,i=>n.error(i)),t=D(s,x(v.readwrite,e,i=>n.error(i)));let c=t.objectStore(e);r.forEach((i,d)=>{let m=c.put(i);d===r.length-1&&(m.onsuccess=u=>{t.commit(),n.next(u.target.result),n.complete()}),m.onerror=u=>{t.abort(),n.error(u)}})}).catch(s=>{t?.abort(),n.error(s)})})}delete(e,r){return new p(t=>{y(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(n=>{w(n,e,i=>t.error(i));let s=D(n,x(v.readwrite,e,i=>t.error(i)));s.objectStore(e).delete(r),s.onerror=i=>t.error(i),s.oncomplete=()=>{this.getAll(e).pipe(U(1)).subscribe({next:i=>{t.next(i)},error:i=>t.error(i),complete:()=>t.complete()})}}).catch(n=>t.error(n))})}deleteByKey(e,r){return new p(t=>{y(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(n=>{w(n,e,i=>t.error(i));let s=D(n,x(v.readwrite,e,i=>t.error(i)));s.objectStore(e).delete(r),s.onerror=i=>t.error(i),s.oncomplete=()=>{t.next(),t.complete()}}).catch(n=>t.error(n))})}deleteAllByIndex(e,r,t,n){return new p(s=>{y(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(c=>{w(c,e,h=>s.error(h));let u=D(c,x(v.readwrite,e,s.error)).objectStore(e).index(r).openCursor(t,n);u.onerror=h=>s.error(h),u.onsuccess=h=>{let f=h.target.result;f?(f.delete(),f.continue()):(s.next(),s.complete())}}).catch(c=>s.error(c))})}clear(e){return new p(r=>{y(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(t=>{w(t,e,c=>r.error(c));let n=D(t,x(v.readwrite,e,c=>r.error(c)));n.objectStore(e).clear(),n.onerror=c=>r.error(c),n.oncomplete=()=>{r.next(),r.complete()}}).catch(t=>r.error(t))})}deleteDatabase(){return new p(e=>{y(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(r=>P(this,null,function*(){r.close();let t=this.indexedDB.deleteDatabase(this.dbConfig.name);t.onsuccess=()=>{e.next(),e.complete()},t.onerror=n=>e.error(n),t.onblocked=()=>{console.warn("Delete blocked: Ensure all tabs, instances, or connections are closed. Database name:",this.dbConfig.name),e.error(new Error("Unable to delete database because it's blocked"))}})).catch(r=>e.error(r))})}openCursor(e){let{storeName:r,query:t,direction:n,mode:s=v.readonly}=e;return new p(c=>{y(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(i=>{w(i,r,h=>c.error(h));let d=D(i,x(s,r,c.error)),u=d.objectStore(r).openCursor(t,n);d.oncomplete=()=>c.complete(),u.onerror=h=>c.error(h),u.onsuccess=h=>{let f=h.target.result;f&&c.next(f)}}).catch(i=>c.error(i))})}openCursorByIndex(e){let{storeName:r,indexName:t,query:n,direction:s,mode:c=v.readonly}=e;return new p(i=>{y(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(d=>{w(d,r,S=>i.error(S));let m=D(d,x(c,r,i.error)),f=m.objectStore(r).index(t).openCursor(n,s);m.oncomplete=()=>i.complete(),f.onerror=S=>i.error(S),f.onsuccess=S=>{let I=S.target.result;I&&i.next(I)}}).catch(d=>i.error(d))})}getAllByIndex(e,r,t,n){return new p(s=>{y(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(c=>{w(c,e,f=>s.error(f));let u=D(c,x(v.readonly,e,s.error)).objectStore(e).index(r).openCursor(t,n),h=[];u.onerror=f=>s.error(f),u.onsuccess=f=>{let S=f.target.result;S?(h.push(S.value),S.continue()):(s.next(h),s.complete())}}).catch(c=>s.error(c))})}getAllKeysByIndex(e,r,t,n){return new p(s=>{y(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(c=>{w(c,e,f=>s.error(f));let m=D(c,x(v.readonly,e,s.error)).objectStore(e).index(r),u=[],h=m.openKeyCursor(t,n);h.onerror=f=>s.error(f),h.onsuccess=f=>{let S=f.target.result;if(S){let{primaryKey:I,key:k}=S;u.push({primaryKey:I,key:k}),S.continue()}else s.next(u),s.complete()}}).catch(c=>s.error(c))})}count(e,r){return new p(t=>{y(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(n=>{w(n,e,d=>t.error(d));let i=D(n,x(v.readonly,e,t.error)).objectStore(e).count(r);i.onerror=d=>t.error(d),i.onsuccess=d=>{t.next(d.target.result),t.complete()}}).catch(n=>t.error(n))})}countByIndex(e,r,t){return new p(n=>{y(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(s=>{w(s,e,u=>n.error(u));let m=D(s,x(v.readonly,e,n.error)).objectStore(e).index(r).count(t);m.onerror=u=>n.error(u),m.onsuccess=u=>{n.next(u.target.result),n.complete()}}).catch(s=>n.error(s))})}deleteObjectStore(e){return ae(this.dbConfig.name,++this.dbConfig.version,e)}getAllObjectStoreNames(){return new p(e=>{y(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(r=>{e.next(Array.from(r.objectStoreNames)),e.complete()}).catch(r=>e.error(r))})}};o.\u0275fac=function(r){return new(r||o)(q(N),q(ee))},o.\u0275prov=E({token:o,factory:o.\u0275fac});let a=o;return g([b()],a.prototype,"getDatabaseVersion",null),g([b()],a.prototype,"add",null),g([b()],a.prototype,"bulkAdd",null),g([b()],a.prototype,"bulkDelete",null),g([b()],a.prototype,"getByKey",null),g([b()],a.prototype,"bulkGet",null),g([b()],a.prototype,"getByID",null),g([b()],a.prototype,"getByIndex",null),g([b()],a.prototype,"getAll",null),g([b()],a.prototype,"update",null),g([b()],a.prototype,"bulkPut",null),g([b()],a.prototype,"delete",null),g([b()],a.prototype,"deleteByKey",null),g([b()],a.prototype,"deleteAllByIndex",null),g([b()],a.prototype,"clear",null),g([b()],a.prototype,"deleteDatabase",null),g([b()],a.prototype,"openCursor",null),g([b()],a.prototype,"openCursorByIndex",null),g([b()],a.prototype,"getAllByIndex",null),g([b()],a.prototype,"getAllKeysByIndex",null),g([b()],a.prototype,"count",null),g([b()],a.prototype,"countByIndex",null),g([b()],a.prototype,"getAllObjectStoreNames",null),a})(),H=class{cmp(){return 0}databases(){return Promise.resolve([])}deleteDatabase(){return{onupgradeneeded:null,onblocked:null,onerror:null,onsuccess:null,error:null}}open(){return{onupgradeneeded:null,onblocked:null,onerror:null,onsuccess:null,error:null}}};function te(){$(te);let a=B(G),o=B(se,{optional:!0})??new H;return X(a)?B(L).defaultView.indexedDB:o}var ue=(...a)=>{let o=a.reduce((l,e)=>(l[e.name]=e,l),{});return[le,{provide:N,useValue:o},{provide:ee,useFactory:te}]},De=(()=>{let o=class o{static forRoot(...e){return{ngModule:o,providers:[...ue(...e)]}}};o.\u0275fac=function(r){return new(r||o)},o.\u0275mod=Y({type:o}),o.\u0275inj=W({});let a=o;return a})();var re=class a{storageService=B(Q);alertService=B(J);USER_PROFILE_KEY="fitTrackPro_userProfile";IS_WIP=!0;userProfileSubject;userProfile$;username=V(void 0);constructor(){let o=this.storageService.getItem(this.USER_PROFILE_KEY);this.userProfileSubject=new R(o),this.userProfile$=this.userProfileSubject.asObservable(),this.userProfile$.subscribe(l=>{this.username.set(l?.username)}),this.showWipDisclaimer(),this.migrateLegacyMeasurements()}showWipDisclaimer(){return P(this,null,function*(){if(this.IS_WIP&&!this.getHideWipDisclaimer()){let o=yield this.alertService.present({header:"Work-in-Progress Disclaimer",message:"DISCLAIMER: This is a work-in-progress, browser-based app. This means your workout data won't be saved when you close the browser or clear your browser data. Be sure to regularly export your data and import it again when you return to the app.",backdropDismiss:!1,inputs:[{type:"checkbox",name:"hideDisclaimer",label:"Don't show this message again",value:!1}],buttons:[{text:"OK",role:"confirm"}]});o?.role==="confirm"&&o.values?.hideDisclaimer&&this.updateHideWipDisclaimer(!0)}})}getHideWipDisclaimer(){return this.userProfileSubject.getValue()?.hideWipDisclaimer??!1}updateHideWipDisclaimer(o){let l=this.getProfile()||{};this.saveProfile(C(j({},l),{hideWipDisclaimer:o}))}getProfile(){return this.userProfileSubject.getValue()}saveProfile(o){let l=this.getProfile()||{};o.measurementHistory&&o.measurementHistory.length>0&&(o.measurementHistory.sort((r,t)=>new Date(r.date).getTime()-new Date(t.date).getTime()),o.measurements=j(j({},o.measurements),o.measurementHistory[o.measurementHistory.length-1]));let e=j(j({},l),o);this.storageService.setItem(this.USER_PROFILE_KEY,e),this.userProfileSubject.next(e)}getUsername(){return this.userProfileSubject.getValue()?.username}updateUsername(o){let l=this.getProfile()||{};this.saveProfile(C(j({},l),{username:o}))}updateMeasurements(o){let l=this.getProfile()||{},e=j(j({},l.measurements||{}),o);this.saveProfile(C(j({},l),{measurements:e}))}updateGender(o){let l=this.getProfile()||{};this.saveProfile(C(j({},l),{gender:o}))}getDataForBackup(){return this.getProfile()}replaceData(o){o?(this.storageService.setItem(this.USER_PROFILE_KEY,o),this.userProfileSubject.next(o)):(this.storageService.removeItem(this.USER_PROFILE_KEY),this.userProfileSubject.next(null))}clearUserProfile_DEV_ONLY(){this.replaceData(null),console.log("User profile data cleared.")}migrateLegacyMeasurements(){let o=this.getProfile();if(o&&o.measurements&&!o.measurementHistory){let l=K(new Date,"yyyy-MM-dd"),e=j({date:l},o.measurements);o.measurementHistory=[e],delete o.measurements,this.saveProfile(o),console.log("Successfully migrated legacy measurements to history format.")}}addOrUpdateMeasurementEntry(o){let l=this.getProfile()||{},e=l.measurementHistory||[];o.date||(o.date=K(Z(new Date),"yyyy-MM-dd"));let r=e.findIndex(t=>t.date===o.date);r>-1?e[r]=j(j({},e[r]),o):e.push(o),e.sort((t,n)=>new Date(t.date).getTime()-new Date(n.date).getTime()),this.saveProfile(C(j({},l),{measurementHistory:e}))}getMeasurements(){let o=this.getProfile()?.measurementHistory;return o&&o.length>0?o[o.length-1]:null}saveGoals(o){let l=this.getProfile()||{};this.saveProfile(C(j({},l),{measurementGoals:o}))}calculateBMI(o,l){if(!o||!l)return null;let e=l/100;return parseFloat((o/(e*e)).toFixed(1))}calculateBodyFatNavy(o,l){let{waistCm:e,neckCm:r,heightCm:t,hipsCm:n}=l;if(!o||!e||!r||!t)return null;let s=0;if(o==="male")s=86.01*Math.log10(e-r)-70.041*Math.log10(t)+36.76;else if(o==="female"){if(!n)return null;s=163.205*Math.log10(e+n-r)-97.684*Math.log10(t)-78.387}else return null;return parseFloat(s.toFixed(1))}deleteMeasurementEntry(o){let l=this.getProfile();if(!l||!l.measurementHistory)return;let e=l.measurementHistory.filter(r=>r.date!==o);this.saveProfile(C(j({},l),{measurementHistory:e}))}static \u0275fac=function(l){return new(l||a)};static \u0275prov=E({token:a,factory:a.\u0275fac,providedIn:"root"})};export{le as a,De as b,re as c};
