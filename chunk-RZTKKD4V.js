import{B as E,D as $,Eb as Y,M as R,N as V,O as v,P,Q as I,T as F,Yb as z,Z as T,b as g,ga as G,i as y,j as k,q as M,va as U}from"./chunk-MSHJ7S43.js";import{g as C}from"./chunk-GAL4ENT6.js";var D=(function(c){return c.readonly="readonly",c.readwrite="readwrite",c})(D||{}),L=new v(null),X=new v("Indexed DB"),J=new v("Server Indexed DB");function Q(c,d){return c.objectStoreNames.contains(d)}function S(c,d,f){if(!c){f("You need to use the openDatabase function to create a database before you query it!");return}Q(c,d)||f(`objectStore does not exists: ${d}`)}function j(c,d){let f=c.transaction(d.storeName,d.dbMode);return f.onerror=d.error,f.onabort=d.abort,f}function b(c,d,f,e){return{storeName:d,dbMode:c,error:n=>{f(n)},abort:n=>{f(n)}}}var A=[];function m(c,d,f,e){return new Promise((n,t)=>{c||t("IndexedDB not available");let r=c.open(d,f),o;r.onsuccess=()=>{o=r.result,A.push(o),n(o)},r.onerror=()=>{t(`IndexedDB error: ${r.error}`)},typeof e=="function"&&(r.onupgradeneeded=i=>{e(i,o)})})}function O(c,d,f,e,n){return C(this,null,function*(){return new Promise((t,r)=>{if(!c)return;let o=c.open(d,f);o.onupgradeneeded=i=>C(null,null,function*(){let s=i.target.result,l=e.map(a=>C(null,null,function*(){if(!s.objectStoreNames.contains(a.store)){let u=s.createObjectStore(a.store,a.storeConfig);for(let h of a.storeSchema)u.createIndex(h.name,h.keypath,h.options)}}));yield Promise.all(l);let p=n&&n();if(p){let a=Object.keys(p).map(u=>parseInt(u,10)).filter(u=>u>i.oldVersion).sort((u,h)=>u-h);for(let u of a)p[u](s,o.transaction)}s.close(),t()}),o.onsuccess=i=>{i.target.result.close(),t()},o.onerror=i=>{r(i)}})})}function W(c,d,f){if(!c||!d||!f)throw Error('Params: "dbName", "version", "storeName" are mandatory.');return new g(e=>{try{let n=d+1,t=indexedDB.open(c,n);t.onupgradeneeded=r=>{let o=r.target.result;o.deleteObjectStore(f),o.close(),console.log("onupgradeneeded"),e.next(),e.complete()},t.onerror=r=>e.error(r)}catch(n){e.error(n)}})}function Z(c){return new Promise((d,f)=>{if(!c){f(new Error("No database to close"));return}try{c.close(),d()}catch(e){f(`Error closing database: ${e}`)}})}function x(){return function(c,d,f){let e=f.value;return f.value=function(...n){let t=e.apply(this,n);return t instanceof g?t.pipe($(()=>C(this,null,function*(){let r=A.map(o=>C(this,null,function*(){yield Z(o)}));yield Promise.all(r),A.length=0}))):t},f}}var N=(()=>{let d=class d{constructor(e,n){this.dbConfigs=e,this.indexedDB=n,this.defaultDatabaseName=null,Object.values(this.dbConfigs).forEach((t,r,o)=>this.instanciateConfig(t,o.length===1))}instanciateConfig(e,n){return C(this,null,function*(){if(!e.name)throw new Error("NgxIndexedDB: Please, provide the dbName in the configuration");if((e.isDefault??!1)&&this.defaultDatabaseName)throw new Error("NgxIndexedDB: Only one database can be set as default");((e.isDefault??!1)&&!this.defaultDatabaseName||n)&&(this.defaultDatabaseName=e.name,this.selectedDb=e.name),yield O(this.indexedDB,e.name,e.version,e.objectStoresMeta,e.migrationFactory),m(this.indexedDB,e.name).then(t=>{t.version!==e.version&&(Y()&&(console.warn(`
            Your DB Config doesn't match the most recent version of the DB with name ${e.name}, please update it
            DB current version: ${t.version};
            Your configuration: ${e.version};
            `),console.warn(`Using latest version ${t.version}`)),this.dbConfigs[e.name].version=t.version),t.close()})})}get dbConfig(){return this.dbConfigs[this.selectedDb]}getDatabaseVersion(){return new g(e=>{m(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(n=>{e.next(n.version),e.complete()}).catch(n=>e.error(`error during get version of database => ${n} `))})}selectDb(e){if(e=e??this.defaultDatabaseName,!e)throw new Error("No database name specified and no default database set.");if(!Object.keys(this.dbConfigs).includes(e))throw new Error(`NgxIndexedDB: Database ${e} is not initialized.`);this.selectedDb=e}createObjectStore(e,n){return C(this,null,function*(){let t=[e];yield O(this.indexedDB,this.dbConfig.name,++this.dbConfig.version,t,n)})}createDynamicObjectStore(e,n){return C(this,null,function*(){let t=[e];yield O(this.indexedDB,this.dbConfig.name,this.dbConfig.version,t,n)})}add(e,n,t){return new g(r=>{m(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(o=>{let s=j(o,b(D.readwrite,e,a=>r.error(a))).objectStore(e),p=!!t?s.add(n,t):s.add(n);p.onsuccess=a=>C(this,null,function*(){let u=a.target.result,h=s.get(u);h.onsuccess=w=>{r.next(w.target.result),r.complete()},h.onerror=w=>{r.error(w)}}),p.onerror=a=>{r.error(a)}}).catch(o=>r.error(o))})}bulkAdd(e,n){let t=new Promise((r,o)=>{m(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(i=>{let l=j(i,b(D.readwrite,e,r,o)).objectStore(e),p=n.map(a=>new Promise(u=>{let h=a.key;delete a.key;let B=!!h?l.add(a,h):l.add(a);B.onsuccess=q=>{let H=q.target.result;u(H)}}));r(Promise.all(p))}).catch(i=>o(i))});return k(t)}bulkDelete(e,n){let t=n.map(r=>new Promise((o,i)=>{m(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(s=>{let l=j(s,b(D.readwrite,e,i,o));l.objectStore(e).delete(r),l.oncomplete=()=>{this.getAll(e).pipe(E(1)).subscribe(a=>{o(a)})}}).catch(s=>i(s))}));return k(Promise.all(t))}getByKey(e,n){return new g(t=>{m(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(r=>{let s=j(r,b(D.readonly,e,t.error)).objectStore(e).get(n);s.onsuccess=l=>{t.next(l.target.result),t.complete()},s.onerror=l=>{t.error(l)}}).catch(r=>t.error(r))})}bulkGet(e,n){let t=n.map(r=>this.getByKey(e,r));return new g(r=>{M(t).subscribe(o=>{r.next(o),r.complete()})})}getByID(e,n){return new g(t=>{m(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(r=>{S(r,e,l=>t.error(l));let s=j(r,b(D.readonly,e,t.error,t.next)).objectStore(e).get(n);s.onsuccess=l=>{t.next(l.target.result),t.complete()}}).catch(r=>t.error(r))})}getByIndex(e,n,t){return new g(r=>{m(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(o=>{S(o,e,a=>r.error(a));let p=j(o,b(D.readonly,e,r.error)).objectStore(e).index(n).get(t);p.onsuccess=a=>{r.next(a.target.result),r.complete()}}).catch(o=>r.error(o))})}getAll(e){return new g(n=>{m(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(t=>{S(t,e,s=>n.error(s));let i=j(t,b(D.readonly,e,n.error,n.next)).objectStore(e).getAll();i.onerror=s=>{n.error(s)},i.onsuccess=({target:{result:s}})=>{n.next(s),n.complete()}}).catch(t=>n.error(t))})}update(e,n){return new g(t=>{m(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(r=>{S(r,e,l=>t.error(l));let i=j(r,b(D.readwrite,e,l=>t.error(l))).objectStore(e),s=i.put(n);s.onsuccess=l=>C(this,null,function*(){let p=l.target.result,a=i.get(p);a.onsuccess=u=>{t.next(u.target.result),t.complete()}})}).catch(r=>t.error(r))})}bulkPut(e,n){let t;return new g(r=>{m(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(o=>{S(o,e,s=>r.error(s)),t=j(o,b(D.readwrite,e,s=>r.error(s)));let i=t.objectStore(e);n.forEach((s,l)=>{let p=i.put(s);l===n.length-1&&(p.onsuccess=a=>{t.commit(),r.next(a.target.result),r.complete()}),p.onerror=a=>{t.abort(),r.error(a)}})}).catch(o=>{t?.abort(),r.error(o)})})}delete(e,n){return new g(t=>{m(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(r=>{S(r,e,s=>t.error(s));let o=j(r,b(D.readwrite,e,s=>t.error(s)));o.objectStore(e).delete(n),o.onerror=s=>t.error(s),o.oncomplete=()=>{this.getAll(e).pipe(E(1)).subscribe({next:s=>{t.next(s)},error:s=>t.error(s),complete:()=>t.complete()})}}).catch(r=>t.error(r))})}deleteByKey(e,n){return new g(t=>{m(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(r=>{S(r,e,s=>t.error(s));let o=j(r,b(D.readwrite,e,s=>t.error(s)));o.objectStore(e).delete(n),o.onerror=s=>t.error(s),o.oncomplete=()=>{t.next(),t.complete()}}).catch(r=>t.error(r))})}deleteAllByIndex(e,n,t,r){return new g(o=>{m(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(i=>{S(i,e,u=>o.error(u));let a=j(i,b(D.readwrite,e,o.error)).objectStore(e).index(n).openCursor(t,r);a.onerror=u=>o.error(u),a.onsuccess=u=>{let h=u.target.result;h?(h.delete(),h.continue()):(o.next(),o.complete())}}).catch(i=>o.error(i))})}clear(e){return new g(n=>{m(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(t=>{S(t,e,i=>n.error(i));let r=j(t,b(D.readwrite,e,i=>n.error(i)));r.objectStore(e).clear(),r.onerror=i=>n.error(i),r.oncomplete=()=>{n.next(),n.complete()}}).catch(t=>n.error(t))})}deleteDatabase(){return new g(e=>{m(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(n=>C(this,null,function*(){n.close();let t=this.indexedDB.deleteDatabase(this.dbConfig.name);t.onsuccess=()=>{e.next(),e.complete()},t.onerror=r=>e.error(r),t.onblocked=()=>{console.warn("Delete blocked: Ensure all tabs, instances, or connections are closed. Database name:",this.dbConfig.name),e.error(new Error("Unable to delete database because it's blocked"))}})).catch(n=>e.error(n))})}openCursor(e){let{storeName:n,query:t,direction:r,mode:o=D.readonly}=e;return new g(i=>{m(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(s=>{S(s,n,u=>i.error(u));let l=j(s,b(o,n,i.error)),a=l.objectStore(n).openCursor(t,r);l.oncomplete=()=>i.complete(),a.onerror=u=>i.error(u),a.onsuccess=u=>{let h=u.target.result;h&&i.next(h)}}).catch(s=>i.error(s))})}openCursorByIndex(e){let{storeName:n,indexName:t,query:r,direction:o,mode:i=D.readonly}=e;return new g(s=>{m(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(l=>{S(l,n,w=>s.error(w));let p=j(l,b(i,n,s.error)),h=p.objectStore(n).index(t).openCursor(r,o);p.oncomplete=()=>s.complete(),h.onerror=w=>s.error(w),h.onsuccess=w=>{let B=w.target.result;B&&s.next(B)}}).catch(l=>s.error(l))})}getAllByIndex(e,n,t,r){return new g(o=>{m(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(i=>{S(i,e,h=>o.error(h));let a=j(i,b(D.readonly,e,o.error)).objectStore(e).index(n).openCursor(t,r),u=[];a.onerror=h=>o.error(h),a.onsuccess=h=>{let w=h.target.result;w?(u.push(w.value),w.continue()):(o.next(u),o.complete())}}).catch(i=>o.error(i))})}getAllKeysByIndex(e,n,t,r){return new g(o=>{m(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(i=>{S(i,e,h=>o.error(h));let p=j(i,b(D.readonly,e,o.error)).objectStore(e).index(n),a=[],u=p.openKeyCursor(t,r);u.onerror=h=>o.error(h),u.onsuccess=h=>{let w=h.target.result;if(w){let{primaryKey:B,key:q}=w;a.push({primaryKey:B,key:q}),w.continue()}else o.next(a),o.complete()}}).catch(i=>o.error(i))})}count(e,n){return new g(t=>{m(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(r=>{S(r,e,l=>t.error(l));let s=j(r,b(D.readonly,e,t.error)).objectStore(e).count(n);s.onerror=l=>t.error(l),s.onsuccess=l=>{t.next(l.target.result),t.complete()}}).catch(r=>t.error(r))})}countByIndex(e,n,t){return new g(r=>{m(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(o=>{S(o,e,a=>r.error(a));let p=j(o,b(D.readonly,e,r.error)).objectStore(e).index(n).count(t);p.onerror=a=>r.error(a),p.onsuccess=a=>{r.next(a.target.result),r.complete()}}).catch(o=>r.error(o))})}deleteObjectStore(e){return W(this.dbConfig.name,++this.dbConfig.version,e)}getAllObjectStoreNames(){return new g(e=>{m(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(n=>{e.next(Array.from(n.objectStoreNames)),e.complete()}).catch(n=>e.error(n))})}};d.\u0275fac=function(n){return new(n||d)(P(L),P(X))},d.\u0275prov=R({token:d,factory:d.\u0275fac});let c=d;return y([x()],c.prototype,"getDatabaseVersion",null),y([x()],c.prototype,"add",null),y([x()],c.prototype,"bulkAdd",null),y([x()],c.prototype,"bulkDelete",null),y([x()],c.prototype,"getByKey",null),y([x()],c.prototype,"bulkGet",null),y([x()],c.prototype,"getByID",null),y([x()],c.prototype,"getByIndex",null),y([x()],c.prototype,"getAll",null),y([x()],c.prototype,"update",null),y([x()],c.prototype,"bulkPut",null),y([x()],c.prototype,"delete",null),y([x()],c.prototype,"deleteByKey",null),y([x()],c.prototype,"deleteAllByIndex",null),y([x()],c.prototype,"clear",null),y([x()],c.prototype,"deleteDatabase",null),y([x()],c.prototype,"openCursor",null),y([x()],c.prototype,"openCursorByIndex",null),y([x()],c.prototype,"getAllByIndex",null),y([x()],c.prototype,"getAllKeysByIndex",null),y([x()],c.prototype,"count",null),y([x()],c.prototype,"countByIndex",null),y([x()],c.prototype,"getAllObjectStoreNames",null),c})(),K=class{cmp(){return 0}databases(){return Promise.resolve([])}deleteDatabase(){return{onupgradeneeded:null,onblocked:null,onerror:null,onsuccess:null,error:null}}open(){return{onupgradeneeded:null,onblocked:null,onerror:null,onsuccess:null,error:null}}};function _(){F(_);let c=I(G),d=I(J,{optional:!0})??new K;return z(c)?I(T).defaultView.indexedDB:d}var ee=(...c)=>{let d=c.reduce((f,e)=>(f[e.name]=e,f),{});return[N,{provide:L,useValue:d},{provide:X,useFactory:_}]},ue=(()=>{let d=class d{static forRoot(...e){return{ngModule:d,providers:[...ee(...e)]}}};d.\u0275fac=function(n){return new(n||d)},d.\u0275mod=U({type:d}),d.\u0275inj=V({});let c=d;return c})();export{N as a,ue as b};
