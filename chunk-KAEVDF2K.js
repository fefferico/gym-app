import{a as MS,b as BS}from"./chunk-ZABOZDBQ.js";import{a as LS}from"./chunk-IZNVRWU4.js";import"./chunk-MIYEHXSX.js";import{a as OS}from"./chunk-2DMLTONG.js";import{a as ri}from"./chunk-G3WEX7LU.js";import{a as PS,c as AS,d as DS,e as FS}from"./chunk-O2XJEK3K.js";import{d as $S}from"./chunk-IKMOT46C.js";import{e as NS,g as xr}from"./chunk-TPT37R4S.js";import{a as ti}from"./chunk-3NI2JYN5.js";import{c as Zx,d as Td,g as ip,h as sp,i as Ed,n as ei,o as RS}from"./chunk-BTTO6ZA4.js";import"./chunk-L57QO76B.js";import{a as Wd}from"./chunk-QIGV4TDV.js";import{$ as xa,$a as as,Aa as L,Ab as Qn,Ac as Na,Ba as k,Bb as Jo,C as pS,Ca as T,Cb as So,D as hr,Da as ce,E as dS,Ea as vo,Fa as bo,Fc as Jx,G as mS,Gb as SS,H as ga,Ha as ye,Hb as Sa,I as Yn,Ia as ne,Ib as wS,J as is,Ja as M,Jb as wa,Kb as en,Lb as wo,Mb as gr,Na as Po,Oa as Ao,P as De,Pa as Do,Qa as Fo,R as J,Ra as np,S as ee,Sa as Oo,T as _e,Tb as Id,U as He,Ua as O,Ub as CS,Va as We,Vb as Ca,Wa as Se,Xa as Bt,Xb as Zn,Y as Ee,Yb as Jn,Z as fS,Za as yS,_a as ss,a as Xt,ab as ls,ac as Ft,b as lr,ba as ya,cb as kd,cc as Nd,d as so,da as wd,db as Xx,dc as ut,e as dt,ea as Cd,eb as us,ec as _a,f as Kx,fa as _d,fb as Tr,fc as Rd,g as j,ga as rp,gb as vS,gc as _S,h as sS,ha as R,hb as Yx,hc as ka,ic as $d,j as aS,jc as Pd,ka as hS,kb as et,kc as Ad,la as op,lb as Dt,lc as kS,mb as ao,mc as IS,n as lS,nb as Qx,nc as Dd,o as jn,ob as Lo,oc as Fd,pa as yo,pc as Od,q as Xn,qb as Et,qc as Ld,r as ns,ra as va,rb as bS,sa as gS,sc as TS,t as qx,tc as ES,u as uS,ua as se,uc as Md,va as bn,vc as Ia,w as tp,wa as xS,wb as ba,wc as Bd,x as cS,xc as Ta,yc as Vd,z as Sd,za as jx,zc as Ea}from"./chunk-YSGTLCDK.js";var HS=so(GS=>{"use strict";(function(){"use strict";var r;function t(h){var v=0;return function(){return v<h.length?{done:!1,value:h[v++]}:{done:!0}}}var e=typeof Object.defineProperties=="function"?Object.defineProperty:function(h,v,_){return h==Array.prototype||h==Object.prototype||(h[v]=_.value),h};function o(h){h=[typeof globalThis=="object"&&globalThis,h,typeof window=="object"&&window,typeof self=="object"&&self,typeof global=="object"&&global];for(var v=0;v<h.length;++v){var _=h[v];if(_&&_.Math==Math)return _}throw Error("Cannot find global object")}var n=o(this);function i(h,v){if(v)e:{var _=n;h=h.split(".");for(var P=0;P<h.length-1;P++){var V=h[P];if(!(V in _))break e;_=_[V]}h=h[h.length-1],P=_[h],v=v(P),v!=P&&v!=null&&e(_,h,{configurable:!0,writable:!0,value:v})}}i("Symbol",function(h){function v(U){if(this instanceof v)throw new TypeError("Symbol is not a constructor");return new _(P+(U||"")+"_"+V++,U)}function _(U,W){this.h=U,e(this,"description",{configurable:!0,writable:!0,value:W})}if(h)return h;_.prototype.toString=function(){return this.h};var P="jscomp_symbol_"+(1e9*Math.random()>>>0)+"_",V=0;return v}),i("Symbol.iterator",function(h){if(h)return h;h=Symbol("Symbol.iterator");for(var v="Array Int8Array Uint8Array Uint8ClampedArray Int16Array Uint16Array Int32Array Uint32Array Float32Array Float64Array".split(" "),_=0;_<v.length;_++){var P=n[v[_]];typeof P=="function"&&typeof P.prototype[h]!="function"&&e(P.prototype,h,{configurable:!0,writable:!0,value:function(){return s(t(this))}})}return h});function s(h){return h={next:h},h[Symbol.iterator]=function(){return this},h}function a(h){var v=typeof Symbol<"u"&&Symbol.iterator&&h[Symbol.iterator];return v?v.call(h):{next:t(h)}}function l(h){if(!(h instanceof Array)){h=a(h);for(var v,_=[];!(v=h.next()).done;)_.push(v.value);h=_}return h}var u=typeof Object.assign=="function"?Object.assign:function(h,v){for(var _=1;_<arguments.length;_++){var P=arguments[_];if(P)for(var V in P)Object.prototype.hasOwnProperty.call(P,V)&&(h[V]=P[V])}return h};i("Object.assign",function(h){return h||u});var c=typeof Object.create=="function"?Object.create:function(h){function v(){}return v.prototype=h,new v},p;if(typeof Object.setPrototypeOf=="function")p=Object.setPrototypeOf;else{var d;e:{var m={a:!0},f={};try{f.__proto__=m,d=f.a;break e}catch{}d=!1}p=d?function(h,v){if(h.__proto__=v,h.__proto__!==v)throw new TypeError(h+" is not extensible");return h}:null}var g=p;function x(h,v){if(h.prototype=c(v.prototype),h.prototype.constructor=h,g)g(h,v);else for(var _ in v)if(_!="prototype")if(Object.defineProperties){var P=Object.getOwnPropertyDescriptor(v,_);P&&Object.defineProperty(h,_,P)}else h[_]=v[_];h.za=v.prototype}function y(){this.m=!1,this.j=null,this.i=void 0,this.h=1,this.v=this.s=0,this.l=null}function b(h){if(h.m)throw new TypeError("Generator is already running");h.m=!0}y.prototype.u=function(h){this.i=h};function I(h,v){h.l={ma:v,na:!0},h.h=h.s||h.v}y.prototype.return=function(h){this.l={return:h},this.h=this.v};function N(h,v,_){return h.h=_,{value:v}}function F(h){this.h=new y,this.i=h}function B(h,v){b(h.h);var _=h.h.j;return _?z(h,"return"in _?_.return:function(P){return{value:P,done:!0}},v,h.h.return):(h.h.return(v),H(h))}function z(h,v,_,P){try{var V=v.call(h.h.j,_);if(!(V instanceof Object))throw new TypeError("Iterator result "+V+" is not an object");if(!V.done)return h.h.m=!1,V;var U=V.value}catch(W){return h.h.j=null,I(h.h,W),H(h)}return h.h.j=null,P.call(h.h,U),H(h)}function H(h){for(;h.h.h;)try{var v=h.i(h.h);if(v)return h.h.m=!1,{value:v.value,done:!1}}catch(_){h.h.i=void 0,I(h.h,_)}if(h.h.m=!1,h.h.l){if(v=h.h.l,h.h.l=null,v.na)throw v.ma;return{value:v.return,done:!0}}return{value:void 0,done:!0}}function K(h){this.next=function(v){return b(h.h),h.h.j?v=z(h,h.h.j.next,v,h.h.u):(h.h.u(v),v=H(h)),v},this.throw=function(v){return b(h.h),h.h.j?v=z(h,h.h.j.throw,v,h.h.u):(I(h.h,v),v=H(h)),v},this.return=function(v){return B(h,v)},this[Symbol.iterator]=function(){return this}}function X(h){function v(P){return h.next(P)}function _(P){return h.throw(P)}return new Promise(function(P,V){function U(W){W.done?P(W.value):Promise.resolve(W.value).then(v,_).then(U,V)}U(h.next())})}function te(h){return X(new K(new F(h)))}i("Promise",function(h){function v(W){this.i=0,this.j=void 0,this.h=[],this.u=!1;var q=this.l();try{W(q.resolve,q.reject)}catch(re){q.reject(re)}}function _(){this.h=null}function P(W){return W instanceof v?W:new v(function(q){q(W)})}if(h)return h;_.prototype.i=function(W){if(this.h==null){this.h=[];var q=this;this.j(function(){q.m()})}this.h.push(W)};var V=n.setTimeout;_.prototype.j=function(W){V(W,0)},_.prototype.m=function(){for(;this.h&&this.h.length;){var W=this.h;this.h=[];for(var q=0;q<W.length;++q){var re=W[q];W[q]=null;try{re()}catch(de){this.l(de)}}}this.h=null},_.prototype.l=function(W){this.j(function(){throw W})},v.prototype.l=function(){function W(de){return function(he){re||(re=!0,de.call(q,he))}}var q=this,re=!1;return{resolve:W(this.I),reject:W(this.m)}},v.prototype.I=function(W){if(W===this)this.m(new TypeError("A Promise cannot resolve to itself"));else if(W instanceof v)this.L(W);else{e:switch(typeof W){case"object":var q=W!=null;break e;case"function":q=!0;break e;default:q=!1}q?this.F(W):this.s(W)}},v.prototype.F=function(W){var q=void 0;try{q=W.then}catch(re){this.m(re);return}typeof q=="function"?this.M(q,W):this.s(W)},v.prototype.m=function(W){this.v(2,W)},v.prototype.s=function(W){this.v(1,W)},v.prototype.v=function(W,q){if(this.i!=0)throw Error("Cannot settle("+W+", "+q+"): Promise already settled in state"+this.i);this.i=W,this.j=q,this.i===2&&this.K(),this.H()},v.prototype.K=function(){var W=this;V(function(){if(W.D()){var q=n.console;typeof q<"u"&&q.error(W.j)}},1)},v.prototype.D=function(){if(this.u)return!1;var W=n.CustomEvent,q=n.Event,re=n.dispatchEvent;return typeof re>"u"?!0:(typeof W=="function"?W=new W("unhandledrejection",{cancelable:!0}):typeof q=="function"?W=new q("unhandledrejection",{cancelable:!0}):(W=n.document.createEvent("CustomEvent"),W.initCustomEvent("unhandledrejection",!1,!0,W)),W.promise=this,W.reason=this.j,re(W))},v.prototype.H=function(){if(this.h!=null){for(var W=0;W<this.h.length;++W)U.i(this.h[W]);this.h=null}};var U=new _;return v.prototype.L=function(W){var q=this.l();W.T(q.resolve,q.reject)},v.prototype.M=function(W,q){var re=this.l();try{W.call(q,re.resolve,re.reject)}catch(de){re.reject(de)}},v.prototype.then=function(W,q){function re(Ae,we){return typeof Ae=="function"?function(Ve){try{de(Ae(Ve))}catch(Ye){he(Ye)}}:we}var de,he,Be=new v(function(Ae,we){de=Ae,he=we});return this.T(re(W,de),re(q,he)),Be},v.prototype.catch=function(W){return this.then(void 0,W)},v.prototype.T=function(W,q){function re(){switch(de.i){case 1:W(de.j);break;case 2:q(de.j);break;default:throw Error("Unexpected state: "+de.i)}}var de=this;this.h==null?U.i(re):this.h.push(re),this.u=!0},v.resolve=P,v.reject=function(W){return new v(function(q,re){re(W)})},v.race=function(W){return new v(function(q,re){for(var de=a(W),he=de.next();!he.done;he=de.next())P(he.value).T(q,re)})},v.all=function(W){var q=a(W),re=q.next();return re.done?P([]):new v(function(de,he){function Be(Ve){return function(Ye){Ae[Ve]=Ye,we--,we==0&&de(Ae)}}var Ae=[],we=0;do Ae.push(void 0),we++,P(re.value).T(Be(Ae.length-1),he),re=q.next();while(!re.done)})},v});function ue(h,v){h instanceof String&&(h+="");var _=0,P=!1,V={next:function(){if(!P&&_<h.length){var U=_++;return{value:v(U,h[U]),done:!1}}return P=!0,{done:!0,value:void 0}}};return V[Symbol.iterator]=function(){return V},V}i("Array.prototype.keys",function(h){return h||function(){return ue(this,function(v){return v})}}),i("Array.prototype.fill",function(h){return h||function(v,_,P){var V=this.length||0;for(0>_&&(_=Math.max(0,V+_)),(P==null||P>V)&&(P=V),P=Number(P),0>P&&(P=Math.max(0,V+P)),_=Number(_||0);_<P;_++)this[_]=v;return this}});function pe(h){return h||Array.prototype.fill}i("Int8Array.prototype.fill",pe),i("Uint8Array.prototype.fill",pe),i("Uint8ClampedArray.prototype.fill",pe),i("Int16Array.prototype.fill",pe),i("Uint16Array.prototype.fill",pe),i("Int32Array.prototype.fill",pe),i("Uint32Array.prototype.fill",pe),i("Float32Array.prototype.fill",pe),i("Float64Array.prototype.fill",pe),i("Object.is",function(h){return h||function(v,_){return v===_?v!==0||1/v===1/_:v!==v&&_!==_}}),i("Array.prototype.includes",function(h){return h||function(v,_){var P=this;P instanceof String&&(P=String(P));var V=P.length;for(_=_||0,0>_&&(_=Math.max(_+V,0));_<V;_++){var U=P[_];if(U===v||Object.is(U,v))return!0}return!1}}),i("String.prototype.includes",function(h){return h||function(v,_){if(this==null)throw new TypeError("The 'this' value for String.prototype.includes must not be null or undefined");if(v instanceof RegExp)throw new TypeError("First argument to String.prototype.includes must not be a regular expression");return this.indexOf(v,_||0)!==-1}});var xe=this||self;function be(h,v){h=h.split(".");var _=xe;h[0]in _||typeof _.execScript>"u"||_.execScript("var "+h[0]);for(var P;h.length&&(P=h.shift());)h.length||v===void 0?_[P]&&_[P]!==Object.prototype[P]?_=_[P]:_=_[P]={}:_[P]=v}function Te(h){var v;e:{if((v=xe.navigator)&&(v=v.userAgent))break e;v=""}return v.indexOf(h)!=-1}var qe=Array.prototype.map?function(h,v){return Array.prototype.map.call(h,v,void 0)}:function(h,v){for(var _=h.length,P=Array(_),V=typeof h=="string"?h.split(""):h,U=0;U<_;U++)U in V&&(P[U]=v.call(void 0,V[U],U,h));return P},je={},st=null;function qt(h){var v=h.length,_=3*v/4;_%3?_=Math.floor(_):"=.".indexOf(h[v-1])!=-1&&(_="=.".indexOf(h[v-2])!=-1?_-2:_-1);var P=new Uint8Array(_),V=0;return Jt(h,function(U){P[V++]=U}),V!==_?P.subarray(0,V):P}function Jt(h,v){function _(re){for(;P<h.length;){var de=h.charAt(P++),he=st[de];if(he!=null)return he;if(!/^[\s\xa0]*$/.test(de))throw Error("Unknown base64 encoding at char: "+de)}return re}jo();for(var P=0;;){var V=_(-1),U=_(0),W=_(64),q=_(64);if(q===64&&V===-1)break;v(V<<2|U>>4),W!=64&&(v(U<<4&240|W>>2),q!=64&&v(W<<6&192|q))}}function jo(){if(!st){st={};for(var h="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789".split(""),v=["+/=","+/","-_=","-_.","-_"],_=0;5>_;_++){var P=h.concat(v[_].split(""));je[_]=P;for(var V=0;V<P.length;V++){var U=P[V];st[U]===void 0&&(st[U]=V)}}}}var yn=typeof Uint8Array<"u",da=!(Te("Trident")||Te("MSIE"))&&typeof xe.btoa=="function";function ma(h){if(!da){var v;v===void 0&&(v=0),jo(),v=je[v];for(var _=Array(Math.floor(h.length/3)),P=v[64]||"",V=0,U=0;V<h.length-2;V+=3){var W=h[V],q=h[V+1],re=h[V+2],de=v[W>>2];W=v[(W&3)<<4|q>>4],q=v[(q&15)<<2|re>>6],re=v[re&63],_[U++]=de+W+q+re}switch(de=0,re=P,h.length-V){case 2:de=h[V+1],re=v[(de&15)<<2]||P;case 1:h=h[V],_[U]=v[h>>2]+v[(h&3)<<4|de>>4]+re+P}return _.join("")}for(v="";10240<h.length;)v+=String.fromCharCode.apply(null,h.subarray(0,10240)),h=h.subarray(10240);return v+=String.fromCharCode.apply(null,h),btoa(v)}var Hc=RegExp("[-_.]","g");function $4(h){switch(h){case"-":return"+";case"_":return"/";case".":return"=";default:return""}}function cb(h){if(!da)return qt(h);Hc.test(h)&&(h=h.replace(Hc,$4)),h=atob(h);for(var v=new Uint8Array(h.length),_=0;_<h.length;_++)v[_]=h.charCodeAt(_);return v}var pb;function Cx(){return pb||(pb=new Uint8Array(0))}var Kc={},P4=typeof Uint8Array.prototype.slice=="function",jt=0,Ir=0;function db(h){var v=0>h;h=Math.abs(h);var _=h>>>0;h=Math.floor((h-_)/4294967296),v&&(_=a(mb(_,h)),v=_.next().value,h=_.next().value,_=v),jt=_>>>0,Ir=h>>>0}var A4=typeof BigInt=="function";function mb(h,v){return v=~v,h?h=~h+1:v+=1,[h,v]}function fb(h,v){this.i=h>>>0,this.h=v>>>0}function hb(h){if(!h)return gb||(gb=new fb(0,0));if(!/^-?\d+$/.test(h))return null;if(16>h.length)db(Number(h));else if(A4)h=BigInt(h),jt=Number(h&BigInt(4294967295))>>>0,Ir=Number(h>>BigInt(32)&BigInt(4294967295));else{var v=+(h[0]==="-");Ir=jt=0;for(var _=h.length,P=v,V=(_-v)%6+v;V<=_;P=V,V+=6)P=Number(h.slice(P,V)),Ir*=1e6,jt=1e6*jt+P,4294967296<=jt&&(Ir+=jt/4294967296|0,jt%=4294967296);v&&(v=a(mb(jt,Ir)),h=v.next().value,v=v.next().value,jt=h,Ir=v)}return new fb(jt,Ir)}var gb;function xb(h,v){return Error("Invalid wire type: "+h+" (at position "+v+")")}function _x(){return Error("Failed to read varint, encoding is invalid.")}function yb(h,v){return Error("Tried to read past the end of the data "+v+" > "+h)}function es(){throw Error("Invalid UTF8")}function vb(h,v){return v=String.fromCharCode.apply(null,v),h==null?v:h+v}var ud=void 0,kx,D4=typeof TextDecoder<"u",bb,F4=typeof TextEncoder<"u",Sb;function wb(h){if(h!==Kc)throw Error("illegal external caller")}function qc(h,v){if(wb(v),this.V=h,h!=null&&h.length===0)throw Error("ByteString should be constructed with non-empty values")}function Ix(){return Sb||(Sb=new qc(null,Kc))}function Cb(h){wb(Kc);var v=h.V;return v=v==null||yn&&v!=null&&v instanceof Uint8Array?v:typeof v=="string"?cb(v):null,v==null?v:h.V=v}function O4(h){if(typeof h=="string")return{buffer:cb(h),C:!1};if(Array.isArray(h))return{buffer:new Uint8Array(h),C:!1};if(h.constructor===Uint8Array)return{buffer:h,C:!1};if(h.constructor===ArrayBuffer)return{buffer:new Uint8Array(h),C:!1};if(h.constructor===qc)return{buffer:Cb(h)||Cx(),C:!0};if(h instanceof Uint8Array)return{buffer:new Uint8Array(h.buffer,h.byteOffset,h.byteLength),C:!1};throw Error("Type not convertible to a Uint8Array, expected a Uint8Array, an ArrayBuffer, a base64 encoded string, a ByteString or an Array of numbers")}function _b(h,v){this.i=null,this.m=!1,this.h=this.j=this.l=0,Tx(this,h,v)}function Tx(h,v,_){_=_===void 0?{}:_,h.S=_.S===void 0?!1:_.S,v&&(v=O4(v),h.i=v.buffer,h.m=v.C,h.l=0,h.j=h.i.length,h.h=h.l)}_b.prototype.reset=function(){this.h=this.l};function ts(h,v){if(h.h=v,v>h.j)throw yb(h.j,v)}function jc(h){var v=h.i,_=h.h,P=v[_++],V=P&127;if(P&128&&(P=v[_++],V|=(P&127)<<7,P&128&&(P=v[_++],V|=(P&127)<<14,P&128&&(P=v[_++],V|=(P&127)<<21,P&128&&(P=v[_++],V|=P<<28,P&128&&v[_++]&128&&v[_++]&128&&v[_++]&128&&v[_++]&128&&v[_++]&128)))))throw _x();return ts(h,_),V}function kb(h,v){if(0>v)throw Error("Tried to read a negative byte length: "+v);var _=h.h,P=_+v;if(P>h.j)throw yb(v,h.j-_);return h.h=P,_}var Ib=[];function Ex(){this.h=[]}Ex.prototype.length=function(){return this.h.length},Ex.prototype.end=function(){var h=this.h;return this.h=[],h};function Tb(h,v,_){for(;0<_||127<v;)h.h.push(v&127|128),v=(v>>>7|_<<25)>>>0,_>>>=7;h.h.push(v)}function rs(h,v){for(;127<v;)h.h.push(v&127|128),v>>>=7;h.h.push(v)}function Nx(h,v){if(Ib.length){var _=Ib.pop();Tx(_,h,v),h=_}else h=new _b(h,v);this.h=h,this.j=this.h.h,this.i=this.l=-1,this.setOptions(v)}Nx.prototype.setOptions=function(h){h=h===void 0?{}:h,this.ca=h.ca===void 0?!1:h.ca},Nx.prototype.reset=function(){this.h.reset(),this.j=this.h.h,this.i=this.l=-1};function Eb(h){var v=h.h;if(v.h==v.j)return!1;h.j=h.h.h;var _=jc(h.h)>>>0;if(v=_>>>3,_&=7,!(0<=_&&5>=_))throw xb(_,h.j);if(1>v)throw Error("Invalid field number: "+v+" (at position "+h.j+")");return h.l=v,h.i=_,!0}function cd(h){switch(h.i){case 0:if(h.i!=0)cd(h);else e:{h=h.h;for(var v=h.h,_=v+10,P=h.i;v<_;)if((P[v++]&128)===0){ts(h,v);break e}throw _x()}break;case 1:h=h.h,ts(h,h.h+8);break;case 2:h.i!=2?cd(h):(v=jc(h.h)>>>0,h=h.h,ts(h,h.h+v));break;case 5:h=h.h,ts(h,h.h+4);break;case 3:v=h.l;do{if(!Eb(h))throw Error("Unmatched start-group tag: stream EOF");if(h.i==4){if(h.l!=v)throw Error("Unmatched end-group tag");break}cd(h)}while(!0);break;default:throw xb(h.i,h.j)}}var pd=[];function L4(){this.j=[],this.i=0,this.h=new Ex}function fa(h,v){v.length!==0&&(h.j.push(v),h.i+=v.length)}function M4(h,v){if(v=v.R){fa(h,h.h.end());for(var _=0;_<v.length;_++)fa(h,Cb(v[_])||Cx())}}var vn=typeof Symbol=="function"&&typeof Symbol()=="symbol"?Symbol():void 0;function os(h,v){return vn?h[vn]|=v:h.A!==void 0?h.A|=v:(Object.defineProperties(h,{A:{value:v,configurable:!0,writable:!0,enumerable:!1}}),v)}function Nb(h,v){vn?h[vn]&&(h[vn]&=~v):h.A!==void 0&&(h.A&=~v)}function Wt(h){var v;return vn?v=h[vn]:v=h.A,v??0}function Xo(h,v){vn?h[vn]=v:h.A!==void 0?h.A=v:Object.defineProperties(h,{A:{value:v,configurable:!0,writable:!0,enumerable:!1}})}function Rx(h){return os(h,1),h}function B4(h,v){Xo(v,(h|0)&-51)}function dd(h,v){Xo(v,(h|18)&-41)}var $x={};function md(h){return h!==null&&typeof h=="object"&&!Array.isArray(h)&&h.constructor===Object}var Xc,Rb=[];Xo(Rb,23),Xc=Object.freeze(Rb);function Px(h){if(Wt(h.o)&2)throw Error("Cannot mutate an immutable Message")}function Ax(h){var v=h.length;(v=v?h[v-1]:void 0)&&md(v)?v.g=1:(v={},h.push((v.g=1,v)))}function $b(h){var v=h.i+h.G;return h.B||(h.B=h.o[v]={})}function Ro(h,v){return v===-1?null:v>=h.i?h.B?h.B[v]:void 0:h.o[v+h.G]}function Yo(h,v,_,P){Px(h),Yc(h,v,_,P)}function Yc(h,v,_,P){h.j&&(h.j=void 0),v>=h.i||P?$b(h)[v]=_:(h.o[v+h.G]=_,(h=h.B)&&v in h&&delete h[v])}function Dx(h,v,_,P){var V=Ro(h,v);Array.isArray(V)||(V=Xc);var U=Wt(V);if(U&1||Rx(V),P)U&2||os(V,2),_&1||Object.freeze(V);else{P=!(_&2);var W=U&2;_&1||!W?P&&U&16&&!W&&Nb(V,16):(V=Rx(Array.prototype.slice.call(V)),Yc(h,v,V))}return V}function Fx(h,v){var _=Ro(h,v),P=_==null?_:typeof _=="number"||_==="NaN"||_==="Infinity"||_==="-Infinity"?Number(_):void 0;return P!=null&&P!==_&&Yc(h,v,P),P}function Pb(h,v,_,P,V){h.h||(h.h={});var U=h.h[_],W=Dx(h,_,3,V);if(!U){var q=W;U=[];var re=!!(Wt(h.o)&16);W=!!(Wt(q)&2);var de=q;!V&&W&&(q=Array.prototype.slice.call(q));for(var he=W,Be=0;Be<q.length;Be++){var Ae=q[Be],we=v,Ve=!1;if(Ve=Ve===void 0?!1:Ve,Ae=Array.isArray(Ae)?new we(Ae):Ve?new we:void 0,Ae!==void 0){we=Ae.o;var Ye=Ve=Wt(we);W&&(Ye|=2),re&&(Ye|=16),Ye!=Ve&&Xo(we,Ye),we=Ye,he=he||!!(2&we),U.push(Ae)}}return h.h[_]=U,re=Wt(q),v=re|33,v=he?v&-9:v|8,re!=v&&(he=q,Object.isFrozen(he)&&(he=Array.prototype.slice.call(he)),Xo(he,v),q=he),de!==q&&Yc(h,_,q),(V||P&&W)&&os(U,2),P&&Object.freeze(U),U}return V||(V=Object.isFrozen(U),P&&!V?Object.freeze(U):!P&&V&&(U=Array.prototype.slice.call(U),h.h[_]=U)),U}function Ox(h,v,_){var P=!!(Wt(h.o)&2);if(v=Pb(h,v,_,P,P),h=Dx(h,_,3,P),!(P||Wt(h)&8)){for(P=0;P<v.length;P++){if(_=v[P],Wt(_.o)&2){var V=Mb(_,!1);V.j=_}else V=_;_!==V&&(v[P]=V,h[P]=V.o)}os(h,8)}return v}function Qo(h,v,_){if(_!=null&&typeof _!="number")throw Error("Value of float/double field must be a number|null|undefined, found "+typeof _+": "+_);Yo(h,v,_)}function Ab(h,v,_,P,V){Px(h);var U=Pb(h,_,v,!1,!1);return _=P??new _,h=Dx(h,v,2,!1),V!=null?(U.splice(V,0,_),h.splice(V,0,_.o)):(U.push(_),h.push(_.o)),_.C()&&Nb(h,8),_}function fd(h,v){return h??v}function Zo(h,v,_){return _=_===void 0?0:_,fd(Fx(h,v),_)}var hd;function V4(h){switch(typeof h){case"number":return isFinite(h)?h:String(h);case"object":if(h)if(Array.isArray(h)){if((Wt(h)&128)!==0)return h=Array.prototype.slice.call(h),Ax(h),h}else{if(yn&&h!=null&&h instanceof Uint8Array)return ma(h);if(h instanceof qc){var v=h.V;return v==null?"":typeof v=="string"?v:h.V=ma(v)}}}return h}function Db(h,v,_,P){if(h!=null){if(Array.isArray(h))h=Lx(h,v,_,P!==void 0);else if(md(h)){var V={},U;for(U in h)V[U]=Db(h[U],v,_,P);h=V}else h=v(h,P);return h}}function Lx(h,v,_,P){var V=Wt(h);P=P?!!(V&16):void 0,h=Array.prototype.slice.call(h);for(var U=0;U<h.length;U++)h[U]=Db(h[U],v,_,P);return _(V,h),h}function W4(h){return h.ja===$x?h.toJSON():V4(h)}function z4(h,v){h&128&&Ax(v)}function Fb(h,v,_){if(_=_===void 0?dd:_,h!=null){if(yn&&h instanceof Uint8Array)return h.length?new qc(new Uint8Array(h),Kc):Ix();if(Array.isArray(h)){var P=Wt(h);return P&2?h:v&&!(P&32)&&(P&16||P===0)?(Xo(h,P|2),h):(h=Lx(h,Fb,P&4?dd:_,!0),v=Wt(h),v&4&&v&2&&Object.freeze(h),h)}return h.ja===$x?Lb(h):h}}function Ob(h,v,_,P,V,U,W){if(h=h.h&&h.h[_]){if(P=Wt(h),P&2?P=h:(U=qe(h,Lb),dd(P,U),Object.freeze(U),P=U),Px(v),W=P==null?Xc:Rx([]),P!=null){for(U=!!P.length,h=0;h<P.length;h++){var q=P[h];U=U&&!(Wt(q.o)&2),W[h]=q.o}U=(U?8:0)|1,h=Wt(W),(h&U)!==U&&(Object.isFrozen(W)&&(W=Array.prototype.slice.call(W)),Xo(W,h|U)),v.h||(v.h={}),v.h[_]=P}else v.h&&(v.h[_]=void 0);Yc(v,_,W,V)}else Yo(v,_,Fb(P,U,W),V)}function Lb(h){return Wt(h.o)&2||(h=Mb(h,!0),os(h.o,2)),h}function Mb(h,v){var _=h.o,P=[];os(P,16);var V=h.constructor.h;if(V&&P.push(V),V=h.B,V){P.length=_.length,P.fill(void 0,P.length,_.length);var U={};P[P.length-1]=U}(Wt(_)&128)!==0&&Ax(P),v=v||h.C()?dd:B4,U=h.constructor,hd=P,P=new U(P),hd=void 0,h.R&&(P.R=h.R.slice()),U=!!(Wt(_)&16);for(var W=V?_.length-1:_.length,q=0;q<W;q++)Ob(h,P,q-h.G,_[q],!1,U,v);if(V)for(var re in V)Ob(h,P,+re,V[re],!0,U,v);return P}function Vr(h,v,_){h==null&&(h=hd),hd=void 0;var P=this.constructor.i||0,V=0<P,U=this.constructor.h,W=!1;if(h==null){h=U?[U]:[];var q=48,re=!0;V&&(P=0,q|=128),Xo(h,q)}else{if(!Array.isArray(h)||U&&U!==h[0])throw Error();var de=q=os(h,0);if((re=(16&de)!==0)&&((W=(32&de)!==0)||(de|=32)),V){if(128&de)P=0;else if(0<h.length){var he=h[h.length-1];if(md(he)&&"g"in he){P=0,de|=128,delete he.g;var Be=!0,Ae;for(Ae in he){Be=!1;break}Be&&h.pop()}}}else if(128&de)throw Error();q!==de&&Xo(h,de)}this.G=(U?0:-1)-P,this.h=void 0,this.o=h;e:{if(U=this.o.length,P=U-1,U&&(U=this.o[P],md(U))){this.B=U,this.i=P-this.G;break e}v!==void 0&&-1<v?(this.i=Math.max(v,P+1-this.G),this.B=void 0):this.i=Number.MAX_VALUE}if(!V&&this.B&&"g"in this.B)throw Error('Unexpected "g" flag in sparse object of message that is not a group type.');if(_){v=re&&!W&&!0,V=this.i;var we;for(re=0;re<_.length;re++)W=_[re],W<V?(W+=this.G,(P=h[W])?Bb(P,v):h[W]=Xc):(we||(we=$b(this)),(P=we[W])?Bb(P,v):we[W]=Xc)}}Vr.prototype.toJSON=function(){return Lx(this.o,W4,z4)},Vr.prototype.C=function(){return!!(Wt(this.o)&2)};function Bb(h,v){if(Array.isArray(h)){var _=Wt(h),P=1;!v||_&2||(P|=16),(_&P)!==P&&Xo(h,_|P)}}Vr.prototype.ja=$x,Vr.prototype.toString=function(){return this.o.toString()};function Vb(h,v,_){if(_){var P={},V;for(V in _){var U=_[V],W=U.ra;W||(P.J=U.xa||U.oa.W,U.ia?(P.aa=Hb(U.ia),W=function(q){return function(re,de,he){return q.J(re,de,he,q.aa)}}(P)):U.ka?(P.Z=Kb(U.da.P,U.ka),W=function(q){return function(re,de,he){return q.J(re,de,he,q.Z)}}(P)):W=P.J,U.ra=W),W(v,h,U.da),P={J:P.J,aa:P.aa,Z:P.Z}}}M4(v,h)}var gd=Symbol();function Wb(h,v,_){return h[gd]||(h[gd]=function(P,V){return v(P,V,_)})}function zb(h){var v=h[gd];if(!v){var _=Bx(h);v=function(P,V){return qb(P,V,_)},h[gd]=v}return v}function U4(h){var v=h.ia;if(v)return zb(v);if(v=h.wa)return Wb(h.da.P,v,h.ka)}function G4(h){var v=U4(h),_=h.da,P=h.oa.U;return v?function(V,U){return P(V,U,_,v)}:function(V,U){return P(V,U,_)}}function Ub(h,v){var _=h[v];return typeof _=="function"&&_.length===0&&(_=_(),h[v]=_),Array.isArray(_)&&(Zc in _||Qc in _||0<_.length&&typeof _[0]=="function")?_:void 0}function Gb(h,v,_,P,V,U){v.P=h[0];var W=1;if(h.length>W&&typeof h[W]!="number"){var q=h[W++];_(v,q)}for(;W<h.length;){_=h[W++];for(var re=W+1;re<h.length&&typeof h[re]!="number";)re++;switch(q=h[W++],re-=W,re){case 0:P(v,_,q);break;case 1:(re=Ub(h,W))?(W++,V(v,_,q,re)):P(v,_,q,h[W++]);break;case 2:re=W++,re=Ub(h,re),V(v,_,q,re,h[W++]);break;case 3:U(v,_,q,h[W++],h[W++],h[W++]);break;case 4:U(v,_,q,h[W++],h[W++],h[W++],h[W++]);break;default:throw Error("unexpected number of binary field arguments: "+re)}}return v}var xd=Symbol();function Hb(h){var v=h[xd];if(!v){var _=Mx(h);v=function(P,V){return jb(P,V,_)},h[xd]=v}return v}function Kb(h,v){var _=h[xd];return _||(_=function(P,V){return Vb(P,V,v)},h[xd]=_),_}var Qc=Symbol();function H4(h,v){h.push(v)}function K4(h,v,_){h.push(v,_.W)}function q4(h,v,_,P){var V=Hb(P),U=Mx(P).P,W=_.W;h.push(v,function(q,re,de){return W(q,re,de,U,V)})}function j4(h,v,_,P,V,U){var W=Kb(P,U),q=_.W;h.push(v,function(re,de,he){return q(re,de,he,P,W)})}function Mx(h){var v=h[Qc];return v||(v=Gb(h,h[Qc]=[],H4,K4,q4,j4),Zc in h&&Qc in h&&(h.length=0),v)}var Zc=Symbol();function X4(h,v){h[0]=v}function Y4(h,v,_,P){var V=_.U;h[v]=P?function(U,W,q){return V(U,W,q,P)}:V}function Q4(h,v,_,P,V){var U=_.U,W=zb(P),q=Bx(P).P;h[v]=function(re,de,he){return U(re,de,he,q,W,V)}}function Z4(h,v,_,P,V,U,W){var q=_.U,re=Wb(P,V,U);h[v]=function(de,he,Be){return q(de,he,Be,P,re,W)}}function Bx(h){var v=h[Zc];return v||(v=Gb(h,h[Zc]={},X4,Y4,Q4,Z4),Zc in h&&Qc in h&&(h.length=0),v)}function qb(h,v,_){for(;Eb(v)&&v.i!=4;){var P=v.l,V=_[P];if(!V){var U=_[0];U&&(U=U[P])&&(V=_[P]=G4(U))}if(!V||!V(v,h,P)){V=v,P=h,U=V.j,cd(V);var W=V;if(!W.ca){if(V=W.h.h-U,W.h.h=U,W=W.h,V==0)V=Ix();else{if(U=kb(W,V),W.S&&W.m)V=W.i.subarray(U,U+V);else{W=W.i;var q=U;V=U+V,V=q===V?Cx():P4?W.slice(q,V):new Uint8Array(W.subarray(q,V))}V=V.length==0?Ix():new qc(V,Kc)}(U=P.R)?U.push(V):P.R=[V]}}}return h}function jb(h,v,_){for(var P=_.length,V=P%2==1,U=V?1:0;U<P;U+=2)(0,_[U+1])(v,h,_[U]);Vb(h,v,V?_[0]:void 0)}function Jc(h,v){return{U:h,W:v}}var $o=Jc(function(h,v,_){if(h.i!==5)return!1;h=h.h;var P=h.i,V=h.h,U=P[V],W=P[V+1],q=P[V+2];return P=P[V+3],ts(h,h.h+4),W=(U<<0|W<<8|q<<16|P<<24)>>>0,h=2*(W>>31)+1,U=W>>>23&255,W&=8388607,Yo(v,_,U==255?W?NaN:1/0*h:U==0?h*Math.pow(2,-149)*W:h*Math.pow(2,U-150)*(W+Math.pow(2,23))),!0},function(h,v,_){if(v=Fx(v,_),v!=null){rs(h.h,8*_+5),h=h.h;var P=+v;P===0?0<1/P?jt=Ir=0:(Ir=0,jt=2147483648):isNaN(P)?(Ir=0,jt=2147483647):(P=(_=0>P?-2147483648:0)?-P:P,34028234663852886e22<P?(Ir=0,jt=(_|2139095040)>>>0):11754943508222875e-54>P?(P=Math.round(P/Math.pow(2,-149)),Ir=0,jt=(_|P)>>>0):(v=Math.floor(Math.log(P)/Math.LN2),P*=Math.pow(2,-v),P=Math.round(8388608*P),16777216<=P&&++v,Ir=0,jt=(_|v+127<<23|P&8388607)>>>0)),_=jt,h.h.push(_>>>0&255),h.h.push(_>>>8&255),h.h.push(_>>>16&255),h.h.push(_>>>24&255)}}),J4=Jc(function(h,v,_){if(h.i!==0)return!1;var P=h.h,V=0,U=h=0,W=P.i,q=P.h;do{var re=W[q++];V|=(re&127)<<U,U+=7}while(32>U&&re&128);for(32<U&&(h|=(re&127)>>4),U=3;32>U&&re&128;U+=7)re=W[q++],h|=(re&127)<<U;if(ts(P,q),128>re)P=V>>>0,re=h>>>0,(h=re&2147483648)&&(P=~P+1>>>0,re=~re>>>0,P==0&&(re=re+1>>>0)),P=4294967296*re+(P>>>0);else throw _x();return Yo(v,_,h?-P:P),!0},function(h,v,_){v=Ro(v,_),v!=null&&(typeof v=="string"&&hb(v),v!=null&&(rs(h.h,8*_),typeof v=="number"?(h=h.h,db(v),Tb(h,jt,Ir)):(_=hb(v),Tb(h.h,_.i,_.h))))}),eO=Jc(function(h,v,_){return h.i!==0?!1:(Yo(v,_,jc(h.h)),!0)},function(h,v,_){if(v=Ro(v,_),v!=null&&v!=null)if(rs(h.h,8*_),h=h.h,_=v,0<=_)rs(h,_);else{for(v=0;9>v;v++)h.h.push(_&127|128),_>>=7;h.h.push(1)}}),Xb=Jc(function(h,v,_){if(h.i!==2)return!1;var P=jc(h.h)>>>0;h=h.h;var V=kb(h,P);if(h=h.i,D4){var U=h,W;(W=kx)||(W=kx=new TextDecoder("utf-8",{fatal:!0})),h=V+P,U=V===0&&h===U.length?U:U.subarray(V,h);try{var q=W.decode(U)}catch(Be){if(ud===void 0){try{W.decode(new Uint8Array([128]))}catch{}try{W.decode(new Uint8Array([97])),ud=!0}catch{ud=!1}}throw!ud&&(kx=void 0),Be}}else{q=V,P=q+P,V=[];for(var re=null,de,he;q<P;)de=h[q++],128>de?V.push(de):224>de?q>=P?es():(he=h[q++],194>de||(he&192)!==128?(q--,es()):V.push((de&31)<<6|he&63)):240>de?q>=P-1?es():(he=h[q++],(he&192)!==128||de===224&&160>he||de===237&&160<=he||((U=h[q++])&192)!==128?(q--,es()):V.push((de&15)<<12|(he&63)<<6|U&63)):244>=de?q>=P-2?es():(he=h[q++],(he&192)!==128||(de<<28)+(he-144)>>30!==0||((U=h[q++])&192)!==128||((W=h[q++])&192)!==128?(q--,es()):(de=(de&7)<<18|(he&63)<<12|(U&63)<<6|W&63,de-=65536,V.push((de>>10&1023)+55296,(de&1023)+56320))):es(),8192<=V.length&&(re=vb(re,V),V.length=0);q=vb(re,V)}return Yo(v,_,q),!0},function(h,v,_){if(v=Ro(v,_),v!=null){var P=!1;if(P=P===void 0?!1:P,F4){if(P&&/(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])/.test(v))throw Error("Found an unpaired surrogate");v=(bb||(bb=new TextEncoder)).encode(v)}else{for(var V=0,U=new Uint8Array(3*v.length),W=0;W<v.length;W++){var q=v.charCodeAt(W);if(128>q)U[V++]=q;else{if(2048>q)U[V++]=q>>6|192;else{if(55296<=q&&57343>=q){if(56319>=q&&W<v.length){var re=v.charCodeAt(++W);if(56320<=re&&57343>=re){q=1024*(q-55296)+re-56320+65536,U[V++]=q>>18|240,U[V++]=q>>12&63|128,U[V++]=q>>6&63|128,U[V++]=q&63|128;continue}else W--}if(P)throw Error("Found an unpaired surrogate");q=65533}U[V++]=q>>12|224,U[V++]=q>>6&63|128}U[V++]=q&63|128}}v=V===U.length?U:U.subarray(0,V)}rs(h.h,8*_+2),rs(h.h,v.length),fa(h,h.h.end()),fa(h,v)}}),Yb=Jc(function(h,v,_,P,V){if(h.i!==2)return!1;v=Ab(v,_,P),_=h.h.j,P=jc(h.h)>>>0;var U=h.h.h+P,W=U-_;if(0>=W&&(h.h.j=U,V(v,h,void 0,void 0,void 0),W=U-h.h.h),W)throw Error("Message parsing ended unexpectedly. Expected to read "+(P+" bytes, instead read "+(P-W)+" bytes, either the data ended unexpectedly or the message misreported its own length"));return h.h.h=U,h.h.j=_,!0},function(h,v,_,P,V){if(v=Ox(v,P,_),v!=null)for(P=0;P<v.length;P++){var U=h;rs(U.h,8*_+2);var W=U.h.end();fa(U,W),W.push(U.i),U=W,V(v[P],h),W=h;var q=U.pop();for(q=W.i+W.h.length()-q;127<q;)U.push(q&127|128),q>>>=7,W.i++;U.push(q),W.i++}});function Vx(h){return function(v,_){e:{if(pd.length){var P=pd.pop();P.setOptions(_),Tx(P.h,v,_),v=P}else v=new Nx(v,_);try{var V=Bx(h),U=qb(new V.P,v,V);break e}finally{V=v.h,V.i=null,V.m=!1,V.l=0,V.j=0,V.h=0,V.S=!1,v.l=-1,v.i=-1,100>pd.length&&pd.push(v)}U=void 0}return U}}function Wx(h){return function(){var v=new L4;jb(this,v,Mx(h)),fa(v,v.h.end());for(var _=new Uint8Array(v.i),P=v.j,V=P.length,U=0,W=0;W<V;W++){var q=P[W];_.set(q,U),U+=q.length}return v.j=[_],_}}function ha(h){Vr.call(this,h)}x(ha,Vr);var Qb=[ha,1,eO,2,$o,3,Xb,4,Xb];ha.prototype.l=Wx(Qb);function zx(h){Vr.call(this,h,-1,tO)}x(zx,Vr),zx.prototype.addClassification=function(h,v){return Ab(this,1,ha,h,v),this};var tO=[1],rO=Vx([zx,1,Yb,Qb]);function ep(h){Vr.call(this,h)}x(ep,Vr);var Zb=[ep,1,$o,2,$o,3,$o,4,$o,5,$o];ep.prototype.l=Wx(Zb);function Jb(h){Vr.call(this,h,-1,oO)}x(Jb,Vr);var oO=[1],nO=Vx([Jb,1,Yb,Zb]);function yd(h){Vr.call(this,h)}x(yd,Vr);var eS=[yd,1,$o,2,$o,3,$o,4,$o,5,$o,6,J4],iO=Vx(eS);yd.prototype.l=Wx(eS);function tS(h,v,_){if(_=h.createShader(_===0?h.VERTEX_SHADER:h.FRAGMENT_SHADER),h.shaderSource(_,v),h.compileShader(_),!h.getShaderParameter(_,h.COMPILE_STATUS))throw Error(`Could not compile WebGL shader.

`+h.getShaderInfoLog(_));return _}function sO(h){return Ox(h,ha,1).map(function(v){var _=Ro(v,1);return{index:_??0,qa:Zo(v,2),label:Ro(v,3)!=null?fd(Ro(v,3),""):void 0,displayName:Ro(v,4)!=null?fd(Ro(v,4),""):void 0}})}function aO(h){return{x:Zo(h,1),y:Zo(h,2),z:Zo(h,3),visibility:Fx(h,4)!=null?Zo(h,4):void 0}}function Ux(h){return Ox(nO(h),ep,1).map(aO)}function Gx(h,v){this.i=h,this.h=v,this.m=0}function rS(h,v,_){return lO(h,v),typeof h.h.canvas.transferToImageBitmap=="function"?Promise.resolve(h.h.canvas.transferToImageBitmap()):_?Promise.resolve(h.h.canvas):typeof createImageBitmap=="function"?createImageBitmap(h.h.canvas):(h.j===void 0&&(h.j=document.createElement("canvas")),new Promise(function(P){h.j.height=h.h.canvas.height,h.j.width=h.h.canvas.width,h.j.getContext("2d",{}).drawImage(h.h.canvas,0,0,h.h.canvas.width,h.h.canvas.height),P(h.j)}))}function lO(h,v){var _=h.h;if(h.s===void 0){var P=tS(_,`
  attribute vec2 aVertex;
  attribute vec2 aTex;
  varying vec2 vTex;
  void main(void) {
    gl_Position = vec4(aVertex, 0.0, 1.0);
    vTex = aTex;
  }`,0),V=tS(_,`
  precision mediump float;
  varying vec2 vTex;
  uniform sampler2D sampler0;
  void main(){
    gl_FragColor = texture2D(sampler0, vTex);
  }`,1),U=_.createProgram();if(_.attachShader(U,P),_.attachShader(U,V),_.linkProgram(U),!_.getProgramParameter(U,_.LINK_STATUS))throw Error(`Could not compile WebGL program.

`+_.getProgramInfoLog(U));P=h.s=U,_.useProgram(P),V=_.getUniformLocation(P,"sampler0"),h.l={O:_.getAttribLocation(P,"aVertex"),N:_.getAttribLocation(P,"aTex"),ya:V},h.v=_.createBuffer(),_.bindBuffer(_.ARRAY_BUFFER,h.v),_.enableVertexAttribArray(h.l.O),_.vertexAttribPointer(h.l.O,2,_.FLOAT,!1,0,0),_.bufferData(_.ARRAY_BUFFER,new Float32Array([-1,-1,-1,1,1,1,1,-1]),_.STATIC_DRAW),_.bindBuffer(_.ARRAY_BUFFER,null),h.u=_.createBuffer(),_.bindBuffer(_.ARRAY_BUFFER,h.u),_.enableVertexAttribArray(h.l.N),_.vertexAttribPointer(h.l.N,2,_.FLOAT,!1,0,0),_.bufferData(_.ARRAY_BUFFER,new Float32Array([0,1,0,0,1,0,1,1]),_.STATIC_DRAW),_.bindBuffer(_.ARRAY_BUFFER,null),_.uniform1i(V,0)}P=h.l,_.useProgram(h.s),_.canvas.width=v.width,_.canvas.height=v.height,_.viewport(0,0,v.width,v.height),_.activeTexture(_.TEXTURE0),h.i.bindTexture2d(v.glName),_.enableVertexAttribArray(P.O),_.bindBuffer(_.ARRAY_BUFFER,h.v),_.vertexAttribPointer(P.O,2,_.FLOAT,!1,0,0),_.enableVertexAttribArray(P.N),_.bindBuffer(_.ARRAY_BUFFER,h.u),_.vertexAttribPointer(P.N,2,_.FLOAT,!1,0,0),_.bindFramebuffer(_.DRAW_FRAMEBUFFER?_.DRAW_FRAMEBUFFER:_.FRAMEBUFFER,null),_.clearColor(0,0,0,0),_.clear(_.COLOR_BUFFER_BIT),_.colorMask(!0,!0,!0,!0),_.drawArrays(_.TRIANGLE_FAN,0,4),_.disableVertexAttribArray(P.O),_.disableVertexAttribArray(P.N),_.bindBuffer(_.ARRAY_BUFFER,null),h.i.bindTexture2d(0)}function uO(h){this.h=h}var cO=new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11]);function pO(h,v){return v+h}function oS(h,v){window[h]=v}function dO(h){var v=document.createElement("script");return v.setAttribute("src",h),v.setAttribute("crossorigin","anonymous"),new Promise(function(_){v.addEventListener("load",function(){_()},!1),v.addEventListener("error",function(){_()},!1),document.body.appendChild(v)})}function mO(){return te(function(h){switch(h.h){case 1:return h.s=2,N(h,WebAssembly.instantiate(cO),4);case 4:h.h=3,h.s=0;break;case 2:return h.s=0,h.l=null,h.return(!1);case 3:return h.return(!0)}})}function Hx(h){if(this.h=h,this.listeners={},this.l={},this.L={},this.s={},this.v={},this.M=this.u=this.ga=!0,this.I=Promise.resolve(),this.fa="",this.D={},this.locateFile=h&&h.locateFile||pO,typeof window=="object")var v=window.location.pathname.toString().substring(0,window.location.pathname.toString().lastIndexOf("/"))+"/";else if(typeof location<"u")v=location.pathname.toString().substring(0,location.pathname.toString().lastIndexOf("/"))+"/";else throw Error("solutions can only be loaded on a web page or in a web worker");if(this.ha=v,h.options){v=a(Object.keys(h.options));for(var _=v.next();!_.done;_=v.next()){_=_.value;var P=h.options[_].default;P!==void 0&&(this.l[_]=typeof P=="function"?P():P)}}}r=Hx.prototype,r.close=function(){return this.j&&this.j.delete(),Promise.resolve()};function fO(h){var v,_,P,V,U,W,q,re,de,he,Be;return te(function(Ae){switch(Ae.h){case 1:return h.ga?(v=h.h.files===void 0?[]:typeof h.h.files=="function"?h.h.files(h.l):h.h.files,N(Ae,mO(),2)):Ae.return();case 2:if(_=Ae.i,typeof window=="object")return oS("createMediapipeSolutionsWasm",{locateFile:h.locateFile}),oS("createMediapipeSolutionsPackedAssets",{locateFile:h.locateFile}),W=v.filter(function(we){return we.data!==void 0}),q=v.filter(function(we){return we.data===void 0}),re=Promise.all(W.map(function(we){var Ve=vd(h,we.url);if(we.path!==void 0){var Ye=we.path;Ve=Ve.then(function(Tt){return h.overrideFile(Ye,Tt),Promise.resolve(Tt)})}return Ve})),de=Promise.all(q.map(function(we){return we.simd===void 0||we.simd&&_||!we.simd&&!_?dO(h.locateFile(we.url,h.ha)):Promise.resolve()})).then(function(){var we,Ve,Ye;return te(function(Tt){if(Tt.h==1)return we=window.createMediapipeSolutionsWasm,Ve=window.createMediapipeSolutionsPackedAssets,Ye=h,N(Tt,we(Ve),2);Ye.i=Tt.i,Tt.h=0})}),he=function(){return te(function(we){return h.h.graph&&h.h.graph.url?we=N(we,vd(h,h.h.graph.url),0):(we.h=0,we=void 0),we})}(),N(Ae,Promise.all([de,re,he]),7);if(typeof importScripts!="function")throw Error("solutions can only be loaded on a web page or in a web worker");return P=v.filter(function(we){return we.simd===void 0||we.simd&&_||!we.simd&&!_}).map(function(we){return h.locateFile(we.url,h.ha)}),importScripts.apply(null,l(P)),V=h,N(Ae,createMediapipeSolutionsWasm(Module),6);case 6:V.i=Ae.i,h.m=new OffscreenCanvas(1,1),h.i.canvas=h.m,U=h.i.GL.createContext(h.m,{antialias:!1,alpha:!1,va:typeof WebGL2RenderingContext<"u"?2:1}),h.i.GL.makeContextCurrent(U),Ae.h=4;break;case 7:if(h.m=document.createElement("canvas"),Be=h.m.getContext("webgl2",{}),!Be&&(Be=h.m.getContext("webgl",{}),!Be))return alert("Failed to create WebGL canvas context when passing video frame."),Ae.return();h.K=Be,h.i.canvas=h.m,h.i.createContext(h.m,!0,!0,{});case 4:h.j=new h.i.SolutionWasm,h.ga=!1,Ae.h=0}})}function hO(h){var v,_,P,V,U,W,q,re;return te(function(de){if(de.h==1){if(h.h.graph&&h.h.graph.url&&h.fa===h.h.graph.url)return de.return();if(h.u=!0,!h.h.graph||!h.h.graph.url){de.h=2;return}return h.fa=h.h.graph.url,N(de,vd(h,h.h.graph.url),3)}for(de.h!=2&&(v=de.i,h.j.loadGraph(v)),_=a(Object.keys(h.D)),P=_.next();!P.done;P=_.next())V=P.value,h.j.overrideFile(V,h.D[V]);if(h.D={},h.h.listeners)for(U=a(h.h.listeners),W=U.next();!W.done;W=U.next())q=W.value,vO(h,q);re=h.l,h.l={},h.setOptions(re),de.h=0})}r.reset=function(){var h=this;return te(function(v){h.j&&(h.j.reset(),h.s={},h.v={}),v.h=0})},r.setOptions=function(h,v){var _=this;if(v=v||this.h.options){for(var P=[],V=[],U={},W=a(Object.keys(h)),q=W.next();!q.done;U={X:U.X,Y:U.Y},q=W.next())if(q=q.value,!(q in this.l&&this.l[q]===h[q])){this.l[q]=h[q];var re=v[q];re!==void 0&&(re.onChange&&(U.X=re.onChange,U.Y=h[q],P.push(function(de){return function(){var he;return te(function(Be){if(Be.h==1)return N(Be,de.X(de.Y),2);he=Be.i,he===!0&&(_.u=!0),Be.h=0})}}(U))),re.graphOptionXref&&(q=Object.assign({},{calculatorName:"",calculatorIndex:0},re.graphOptionXref,{valueNumber:re.type===1?h[q]:0,valueBoolean:re.type===0?h[q]:!1,valueString:re.type===2?h[q]:""}),V.push(q)))}(P.length!==0||V.length!==0)&&(this.u=!0,this.H=(this.H===void 0?[]:this.H).concat(V),this.F=(this.F===void 0?[]:this.F).concat(P))}};function gO(h){var v,_,P,V,U,W,q;return te(function(re){switch(re.h){case 1:if(!h.u)return re.return();if(!h.F){re.h=2;break}v=a(h.F),_=v.next();case 3:if(_.done){re.h=5;break}return P=_.value,N(re,P(),4);case 4:_=v.next(),re.h=3;break;case 5:h.F=void 0;case 2:if(h.H){for(V=new h.i.GraphOptionChangeRequestList,U=a(h.H),W=U.next();!W.done;W=U.next())q=W.value,V.push_back(q);h.j.changeOptions(V),V.delete(),h.H=void 0}h.u=!1,re.h=0}})}r.initialize=function(){var h=this;return te(function(v){return v.h==1?N(v,fO(h),2):v.h!=3?N(v,hO(h),3):N(v,gO(h),0)})};function vd(h,v){var _,P;return te(function(V){return v in h.L?V.return(h.L[v]):(_=h.locateFile(v,""),P=fetch(_).then(function(U){return U.arrayBuffer()}),h.L[v]=P,V.return(P))})}r.overrideFile=function(h,v){this.j?this.j.overrideFile(h,v):this.D[h]=v},r.clearOverriddenFiles=function(){this.D={},this.j&&this.j.clearOverriddenFiles()},r.send=function(h,v){var _=this,P,V,U,W,q,re,de,he,Be;return te(function(Ae){switch(Ae.h){case 1:return _.h.inputs?(P=1e3*(v??performance.now()),N(Ae,_.I,2)):Ae.return();case 2:return N(Ae,_.initialize(),3);case 3:for(V=new _.i.PacketDataList,U=a(Object.keys(h)),W=U.next();!W.done;W=U.next())if(q=W.value,re=_.h.inputs[q]){e:{var we=h[q];switch(re.type){case"video":var Ve=_.s[re.stream];if(Ve||(Ve=new Gx(_.i,_.K),_.s[re.stream]=Ve),Ve.m===0&&(Ve.m=Ve.i.createTexture()),typeof HTMLVideoElement<"u"&&we instanceof HTMLVideoElement)var Ye=we.videoWidth,Tt=we.videoHeight;else typeof HTMLImageElement<"u"&&we instanceof HTMLImageElement?(Ye=we.naturalWidth,Tt=we.naturalHeight):(Ye=we.width,Tt=we.height);Tt={glName:Ve.m,width:Ye,height:Tt},Ye=Ve.h,Ye.canvas.width=Tt.width,Ye.canvas.height=Tt.height,Ye.activeTexture(Ye.TEXTURE0),Ve.i.bindTexture2d(Ve.m),Ye.texImage2D(Ye.TEXTURE_2D,0,Ye.RGBA,Ye.RGBA,Ye.UNSIGNED_BYTE,we),Ve.i.bindTexture2d(0),Ve=Tt;break e;case"detections":for(Ve=_.s[re.stream],Ve||(Ve=new uO(_.i),_.s[re.stream]=Ve),Ve.data||(Ve.data=new Ve.h.DetectionListData),Ve.data.reset(we.length),Tt=0;Tt<we.length;++Tt){Ye=we[Tt];var Ct=Ve.data,sr=Ct.setBoundingBox,xo=Tt,Wr=Ye.la,pt=new yd;if(Qo(pt,1,Wr.sa),Qo(pt,2,Wr.ta),Qo(pt,3,Wr.height),Qo(pt,4,Wr.width),Qo(pt,5,Wr.rotation),Yo(pt,6,Wr.pa),Wr=pt.l(),sr.call(Ct,xo,Wr),Ye.ea)for(Ct=0;Ct<Ye.ea.length;++Ct){pt=Ye.ea[Ct],sr=Ve.data,xo=sr.addNormalizedLandmark,Wr=Tt,pt=Object.assign({},pt,{visibility:pt.visibility?pt.visibility:0});var ar=new ep;Qo(ar,1,pt.x),Qo(ar,2,pt.y),Qo(ar,3,pt.z),pt.visibility&&Qo(ar,4,pt.visibility),pt=ar.l(),xo.call(sr,Wr,pt)}if(Ye.ba)for(Ct=0;Ct<Ye.ba.length;++Ct)sr=Ve.data,xo=sr.addClassification,Wr=Tt,pt=Ye.ba[Ct],ar=new ha,Qo(ar,2,pt.qa),pt.index&&Yo(ar,1,pt.index),pt.label&&Yo(ar,3,pt.label),pt.displayName&&Yo(ar,4,pt.displayName),pt=ar.l(),xo.call(sr,Wr,pt)}Ve=Ve.data;break e;default:Ve={}}}switch(de=Ve,he=re.stream,re.type){case"video":V.pushTexture2d(Object.assign({},de,{stream:he,timestamp:P}));break;case"detections":Be=de,Be.stream=he,Be.timestamp=P,V.pushDetectionList(Be);break;default:throw Error("Unknown input config type: '"+re.type+"'")}}return _.j.send(V),N(Ae,_.I,4);case 4:V.delete(),Ae.h=0}})};function xO(h,v,_){var P,V,U,W,q,re,de,he,Be,Ae,we,Ve,Ye,Tt;return te(function(Ct){switch(Ct.h){case 1:if(!_)return Ct.return(v);for(P={},V=0,U=a(Object.keys(_)),W=U.next();!W.done;W=U.next())q=W.value,re=_[q],typeof re!="string"&&re.type==="texture"&&v[re.stream]!==void 0&&++V;1<V&&(h.M=!1),de=a(Object.keys(_)),W=de.next();case 2:if(W.done){Ct.h=4;break}if(he=W.value,Be=_[he],typeof Be=="string")return Ye=P,Tt=he,N(Ct,yO(h,he,v[Be]),14);if(Ae=v[Be.stream],Be.type==="detection_list"){if(Ae){for(var sr=Ae.getRectList(),xo=Ae.getLandmarksList(),Wr=Ae.getClassificationsList(),pt=[],ar=0;ar<sr.size();++ar){var qn=iO(sr.get(ar)),bO=Zo(qn,1),SO=Zo(qn,2),wO=Zo(qn,3),CO=Zo(qn,4),_O=Zo(qn,5,0),bd=void 0;bd=bd===void 0?0:bd,qn={la:{sa:bO,ta:SO,height:wO,width:CO,rotation:_O,pa:fd(Ro(qn,6),bd)},ea:Ux(xo.get(ar)),ba:sO(rO(Wr.get(ar)))},pt.push(qn)}sr=pt}else sr=[];P[he]=sr,Ct.h=7;break}if(Be.type==="proto_list"){if(Ae){for(sr=Array(Ae.size()),xo=0;xo<Ae.size();xo++)sr[xo]=Ae.get(xo);Ae.delete()}else sr=[];P[he]=sr,Ct.h=7;break}if(Ae===void 0){Ct.h=3;break}if(Be.type==="float_list"){P[he]=Ae,Ct.h=7;break}if(Be.type==="proto"){P[he]=Ae,Ct.h=7;break}if(Be.type!=="texture")throw Error("Unknown output config type: '"+Be.type+"'");return we=h.v[he],we||(we=new Gx(h.i,h.K),h.v[he]=we),N(Ct,rS(we,Ae,h.M),13);case 13:Ve=Ct.i,P[he]=Ve;case 7:Be.transform&&P[he]&&(P[he]=Be.transform(P[he])),Ct.h=3;break;case 14:Ye[Tt]=Ct.i;case 3:W=de.next(),Ct.h=2;break;case 4:return Ct.return(P)}})}function yO(h,v,_){var P;return te(function(V){return typeof _=="number"||_ instanceof Uint8Array||_ instanceof h.i.Uint8BlobList?V.return(_):_ instanceof h.i.Texture2dDataOut?(P=h.v[v],P||(P=new Gx(h.i,h.K),h.v[v]=P),V.return(rS(P,_,h.M))):V.return(void 0)})}function vO(h,v){for(var _=v.name||"$",P=[].concat(l(v.wants)),V=new h.i.StringList,U=a(v.wants),W=U.next();!W.done;W=U.next())V.push_back(W.value);U=h.i.PacketListener.implement({onResults:function(q){for(var re={},de=0;de<v.wants.length;++de)re[P[de]]=q.get(de);var he=h.listeners[_];he&&(h.I=xO(h,re,v.outs).then(function(Be){Be=he(Be);for(var Ae=0;Ae<v.wants.length;++Ae){var we=re[P[Ae]];typeof we=="object"&&we.hasOwnProperty&&we.hasOwnProperty("delete")&&we.delete()}Be&&(h.I=Be)}))}}),h.j.attachMultiListener(V,U),V.delete()}r.onResults=function(h,v){this.listeners[v||"$"]=h},be("Solution",Hx),be("OptionType",{BOOL:0,NUMBER:1,ua:2,0:"BOOL",1:"NUMBER",2:"STRING"});function nS(h){switch(h===void 0&&(h=0),h){case 1:return"pose_landmark_full.tflite";case 2:return"pose_landmark_heavy.tflite";default:return"pose_landmark_lite.tflite"}}function iS(h){var v=this;h=h||{},this.h=new Hx({locateFile:h.locateFile,files:function(_){return[{url:"pose_solution_packed_assets_loader.js"},{simd:!1,url:"pose_solution_wasm_bin.js"},{simd:!0,url:"pose_solution_simd_wasm_bin.js"},{data:!0,url:nS(_.modelComplexity)}]},graph:{url:"pose_web.binarypb"},listeners:[{wants:["pose_landmarks","world_landmarks","segmentation_mask","image_transformed"],outs:{image:{type:"texture",stream:"image_transformed"},poseLandmarks:{type:"proto",stream:"pose_landmarks",transform:Ux},poseWorldLandmarks:{type:"proto",stream:"world_landmarks",transform:Ux},segmentationMask:{type:"texture",stream:"segmentation_mask"}}}],inputs:{image:{type:"video",stream:"input_frames_gpu"}},options:{useCpuInference:{type:0,graphOptionXref:{calculatorType:"InferenceCalculator",fieldName:"use_cpu_inference"},default:typeof window!="object"||window.navigator===void 0?!1:"iPad Simulator;iPhone Simulator;iPod Simulator;iPad;iPhone;iPod".split(";").includes(navigator.platform)||navigator.userAgent.includes("Mac")&&"ontouchend"in document},selfieMode:{type:0,graphOptionXref:{calculatorType:"GlScalerCalculator",calculatorIndex:1,fieldName:"flip_horizontal"}},modelComplexity:{type:1,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculatorModelComplexity",fieldName:"int_value"},onChange:function(_){var P,V,U;return te(function(W){return W.h==1?(P=nS(_),V="third_party/mediapipe/modules/pose_landmark/"+P,N(W,vd(v.h,P),2)):(U=W.i,v.h.overrideFile(V,U),W.return(!0))})}},smoothLandmarks:{type:0,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculatorSmoothLandmarks",fieldName:"bool_value"}},enableSegmentation:{type:0,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculatorEnableSegmentation",fieldName:"bool_value"}},smoothSegmentation:{type:0,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculatorSmoothSegmentation",fieldName:"bool_value"}},minDetectionConfidence:{type:1,graphOptionXref:{calculatorType:"TensorsToDetectionsCalculator",calculatorName:"poselandmarkgpu__posedetectiongpu__TensorsToDetectionsCalculator",fieldName:"min_score_thresh"}},minTrackingConfidence:{type:1,graphOptionXref:{calculatorType:"ThresholdingCalculator",calculatorName:"poselandmarkgpu__poselandmarkbyroigpu__tensorstoposelandmarksandsegmentation__ThresholdingCalculator",fieldName:"threshold"}}}})}r=iS.prototype,r.reset=function(){this.h.reset()},r.close=function(){return this.h.close(),Promise.resolve()},r.onResults=function(h){this.h.onResults(h)},r.initialize=function(){var h=this;return te(function(v){return N(v,h.h.initialize(),0)})},r.send=function(h,v){var _=this;return te(function(P){return N(P,_.h.send(h,v),0)})},r.setOptions=function(h){this.h.setOptions(h)},be("Pose",iS),be("POSE_CONNECTIONS",[[0,1],[1,2],[2,3],[3,7],[0,4],[4,5],[5,6],[6,8],[9,10],[11,12],[11,13],[13,15],[15,17],[15,19],[15,21],[17,19],[12,14],[14,16],[16,18],[16,20],[16,22],[18,20],[11,23],[12,24],[23,24],[23,25],[24,26],[25,27],[26,28],[27,29],[28,30],[29,31],[30,32],[27,31],[28,32]]),be("POSE_LANDMARKS",{NOSE:0,LEFT_EYE_INNER:1,LEFT_EYE:2,LEFT_EYE_OUTER:3,RIGHT_EYE_INNER:4,RIGHT_EYE:5,RIGHT_EYE_OUTER:6,LEFT_EAR:7,RIGHT_EAR:8,LEFT_RIGHT:9,RIGHT_LEFT:10,LEFT_SHOULDER:11,RIGHT_SHOULDER:12,LEFT_ELBOW:13,RIGHT_ELBOW:14,LEFT_WRIST:15,RIGHT_WRIST:16,LEFT_PINKY:17,RIGHT_PINKY:18,LEFT_INDEX:19,RIGHT_INDEX:20,LEFT_THUMB:21,RIGHT_THUMB:22,LEFT_HIP:23,RIGHT_HIP:24,LEFT_KNEE:25,RIGHT_KNEE:26,LEFT_ANKLE:27,RIGHT_ANKLE:28,LEFT_HEEL:29,RIGHT_HEEL:30,LEFT_FOOT_INDEX:31,RIGHT_FOOT_INDEX:32}),be("POSE_LANDMARKS_LEFT",{LEFT_EYE_INNER:1,LEFT_EYE:2,LEFT_EYE_OUTER:3,LEFT_EAR:7,LEFT_RIGHT:9,LEFT_SHOULDER:11,LEFT_ELBOW:13,LEFT_WRIST:15,LEFT_PINKY:17,LEFT_INDEX:19,LEFT_THUMB:21,LEFT_HIP:23,LEFT_KNEE:25,LEFT_ANKLE:27,LEFT_HEEL:29,LEFT_FOOT_INDEX:31}),be("POSE_LANDMARKS_RIGHT",{RIGHT_EYE_INNER:4,RIGHT_EYE:5,RIGHT_EYE_OUTER:6,RIGHT_EAR:8,RIGHT_LEFT:10,RIGHT_SHOULDER:12,RIGHT_ELBOW:14,RIGHT_WRIST:16,RIGHT_PINKY:18,RIGHT_INDEX:20,RIGHT_THUMB:22,RIGHT_HIP:24,RIGHT_KNEE:26,RIGHT_ANKLE:28,RIGHT_HEEL:30,RIGHT_FOOT_INDEX:32}),be("POSE_LANDMARKS_NEUTRAL",{NOSE:0}),be("VERSION","0.5.1675469404")}).call(GS)});var d2=so((Hne,p2)=>{"use strict";p2.exports=_t;var Co=null;try{Co=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}function _t(r,t,e){this.low=r|0,this.high=t|0,this.unsigned=!!e}_t.prototype.__isLong__;Object.defineProperty(_t.prototype,"__isLong__",{value:!0});function Hr(r){return(r&&r.__isLong__)===!0}_t.isLong=Hr;var r2={},o2={};function ks(r,t){var e,o,n;return t?(r>>>=0,(n=0<=r&&r<256)&&(o=o2[r],o)?o:(e=kt(r,(r|0)<0?-1:0,!0),n&&(o2[r]=e),e)):(r|=0,(n=-128<=r&&r<128)&&(o=r2[r],o)?o:(e=kt(r,r<0?-1:0,!1),n&&(r2[r]=e),e))}_t.fromInt=ks;function _o(r,t){if(isNaN(r))return t?_s:ko;if(t){if(r<0)return _s;if(r>=a2)return c2}else{if(r<=-i2)return Gr;if(r+1>=i2)return u2}return r<0?_o(-r,t).neg():kt(r%ju|0,r/ju|0,t)}_t.fromNumber=_o;function kt(r,t,e){return new _t(r,t,e)}_t.fromBits=kt;var ym=Math.pow;function dy(r,t,e){if(r.length===0)throw Error("empty string");if(r==="NaN"||r==="Infinity"||r==="+Infinity"||r==="-Infinity")return ko;if(typeof t=="number"?(e=t,t=!1):t=!!t,e=e||10,e<2||36<e)throw RangeError("radix");var o;if((o=r.indexOf("-"))>0)throw Error("interior hyphen");if(o===0)return dy(r.substring(1),t,e).neg();for(var n=_o(ym(e,8)),i=ko,s=0;s<r.length;s+=8){var a=Math.min(8,r.length-s),l=parseInt(r.substring(s,s+a),e);if(a<8){var u=_o(ym(e,a));i=i.mul(u).add(_o(l))}else i=i.mul(n),i=i.add(_o(l))}return i.unsigned=t,i}_t.fromString=dy;function Mo(r,t){return typeof r=="number"?_o(r,t):typeof r=="string"?dy(r,t):kt(r.low,r.high,typeof t=="boolean"?t:r.unsigned)}_t.fromValue=Mo;var n2=65536,MV=1<<24,ju=n2*n2,a2=ju*ju,i2=a2/2,s2=ks(MV),ko=ks(0);_t.ZERO=ko;var _s=ks(0,!0);_t.UZERO=_s;var qu=ks(1);_t.ONE=qu;var l2=ks(1,!0);_t.UONE=l2;var py=ks(-1);_t.NEG_ONE=py;var u2=kt(-1,2147483647,!1);_t.MAX_VALUE=u2;var c2=kt(-1,-1,!0);_t.MAX_UNSIGNED_VALUE=c2;var Gr=kt(0,-2147483648,!1);_t.MIN_VALUE=Gr;var ge=_t.prototype;ge.toInt=function(){return this.unsigned?this.low>>>0:this.low};ge.toNumber=function(){return this.unsigned?(this.high>>>0)*ju+(this.low>>>0):this.high*ju+(this.low>>>0)};ge.toString=function(t){if(t=t||10,t<2||36<t)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(Gr)){var e=_o(t),o=this.div(e),n=o.mul(e).sub(this);return o.toString(t)+n.toInt().toString(t)}else return"-"+this.neg().toString(t);for(var i=_o(ym(t,6),this.unsigned),s=this,a="";;){var l=s.div(i),u=s.sub(l.mul(i)).toInt()>>>0,c=u.toString(t);if(s=l,s.isZero())return c+a;for(;c.length<6;)c="0"+c;a=""+c+a}};ge.getHighBits=function(){return this.high};ge.getHighBitsUnsigned=function(){return this.high>>>0};ge.getLowBits=function(){return this.low};ge.getLowBitsUnsigned=function(){return this.low>>>0};ge.getNumBitsAbs=function(){if(this.isNegative())return this.eq(Gr)?64:this.neg().getNumBitsAbs();for(var t=this.high!=0?this.high:this.low,e=31;e>0&&(t&1<<e)==0;e--);return this.high!=0?e+33:e+1};ge.isZero=function(){return this.high===0&&this.low===0};ge.eqz=ge.isZero;ge.isNegative=function(){return!this.unsigned&&this.high<0};ge.isPositive=function(){return this.unsigned||this.high>=0};ge.isOdd=function(){return(this.low&1)===1};ge.isEven=function(){return(this.low&1)===0};ge.equals=function(t){return Hr(t)||(t=Mo(t)),this.unsigned!==t.unsigned&&this.high>>>31===1&&t.high>>>31===1?!1:this.high===t.high&&this.low===t.low};ge.eq=ge.equals;ge.notEquals=function(t){return!this.eq(t)};ge.neq=ge.notEquals;ge.ne=ge.notEquals;ge.lessThan=function(t){return this.comp(t)<0};ge.lt=ge.lessThan;ge.lessThanOrEqual=function(t){return this.comp(t)<=0};ge.lte=ge.lessThanOrEqual;ge.le=ge.lessThanOrEqual;ge.greaterThan=function(t){return this.comp(t)>0};ge.gt=ge.greaterThan;ge.greaterThanOrEqual=function(t){return this.comp(t)>=0};ge.gte=ge.greaterThanOrEqual;ge.ge=ge.greaterThanOrEqual;ge.compare=function(t){if(Hr(t)||(t=Mo(t)),this.eq(t))return 0;var e=this.isNegative(),o=t.isNegative();return e&&!o?-1:!e&&o?1:this.unsigned?t.high>>>0>this.high>>>0||t.high===this.high&&t.low>>>0>this.low>>>0?-1:1:this.sub(t).isNegative()?-1:1};ge.comp=ge.compare;ge.negate=function(){return!this.unsigned&&this.eq(Gr)?Gr:this.not().add(qu)};ge.neg=ge.negate;ge.add=function(t){Hr(t)||(t=Mo(t));var e=this.high>>>16,o=this.high&65535,n=this.low>>>16,i=this.low&65535,s=t.high>>>16,a=t.high&65535,l=t.low>>>16,u=t.low&65535,c=0,p=0,d=0,m=0;return m+=i+u,d+=m>>>16,m&=65535,d+=n+l,p+=d>>>16,d&=65535,p+=o+a,c+=p>>>16,p&=65535,c+=e+s,c&=65535,kt(d<<16|m,c<<16|p,this.unsigned)};ge.subtract=function(t){return Hr(t)||(t=Mo(t)),this.add(t.neg())};ge.sub=ge.subtract;ge.multiply=function(t){if(this.isZero())return ko;if(Hr(t)||(t=Mo(t)),Co){var e=Co.mul(this.low,this.high,t.low,t.high);return kt(e,Co.get_high(),this.unsigned)}if(t.isZero())return ko;if(this.eq(Gr))return t.isOdd()?Gr:ko;if(t.eq(Gr))return this.isOdd()?Gr:ko;if(this.isNegative())return t.isNegative()?this.neg().mul(t.neg()):this.neg().mul(t).neg();if(t.isNegative())return this.mul(t.neg()).neg();if(this.lt(s2)&&t.lt(s2))return _o(this.toNumber()*t.toNumber(),this.unsigned);var o=this.high>>>16,n=this.high&65535,i=this.low>>>16,s=this.low&65535,a=t.high>>>16,l=t.high&65535,u=t.low>>>16,c=t.low&65535,p=0,d=0,m=0,f=0;return f+=s*c,m+=f>>>16,f&=65535,m+=i*c,d+=m>>>16,m&=65535,m+=s*u,d+=m>>>16,m&=65535,d+=n*c,p+=d>>>16,d&=65535,d+=i*u,p+=d>>>16,d&=65535,d+=s*l,p+=d>>>16,d&=65535,p+=o*c+n*u+i*l+s*a,p&=65535,kt(m<<16|f,p<<16|d,this.unsigned)};ge.mul=ge.multiply;ge.divide=function(t){if(Hr(t)||(t=Mo(t)),t.isZero())throw Error("division by zero");if(Co){if(!this.unsigned&&this.high===-2147483648&&t.low===-1&&t.high===-1)return this;var e=(this.unsigned?Co.div_u:Co.div_s)(this.low,this.high,t.low,t.high);return kt(e,Co.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?_s:ko;var o,n,i;if(this.unsigned){if(t.unsigned||(t=t.toUnsigned()),t.gt(this))return _s;if(t.gt(this.shru(1)))return l2;i=_s}else{if(this.eq(Gr)){if(t.eq(qu)||t.eq(py))return Gr;if(t.eq(Gr))return qu;var s=this.shr(1);return o=s.div(t).shl(1),o.eq(ko)?t.isNegative()?qu:py:(n=this.sub(t.mul(o)),i=o.add(n.div(t)),i)}else if(t.eq(Gr))return this.unsigned?_s:ko;if(this.isNegative())return t.isNegative()?this.neg().div(t.neg()):this.neg().div(t).neg();if(t.isNegative())return this.div(t.neg()).neg();i=ko}for(n=this;n.gte(t);){o=Math.max(1,Math.floor(n.toNumber()/t.toNumber()));for(var a=Math.ceil(Math.log(o)/Math.LN2),l=a<=48?1:ym(2,a-48),u=_o(o),c=u.mul(t);c.isNegative()||c.gt(n);)o-=l,u=_o(o,this.unsigned),c=u.mul(t);u.isZero()&&(u=qu),i=i.add(u),n=n.sub(c)}return i};ge.div=ge.divide;ge.modulo=function(t){if(Hr(t)||(t=Mo(t)),Co){var e=(this.unsigned?Co.rem_u:Co.rem_s)(this.low,this.high,t.low,t.high);return kt(e,Co.get_high(),this.unsigned)}return this.sub(this.div(t).mul(t))};ge.mod=ge.modulo;ge.rem=ge.modulo;ge.not=function(){return kt(~this.low,~this.high,this.unsigned)};ge.and=function(t){return Hr(t)||(t=Mo(t)),kt(this.low&t.low,this.high&t.high,this.unsigned)};ge.or=function(t){return Hr(t)||(t=Mo(t)),kt(this.low|t.low,this.high|t.high,this.unsigned)};ge.xor=function(t){return Hr(t)||(t=Mo(t)),kt(this.low^t.low,this.high^t.high,this.unsigned)};ge.shiftLeft=function(t){return Hr(t)&&(t=t.toInt()),(t&=63)===0?this:t<32?kt(this.low<<t,this.high<<t|this.low>>>32-t,this.unsigned):kt(0,this.low<<t-32,this.unsigned)};ge.shl=ge.shiftLeft;ge.shiftRight=function(t){return Hr(t)&&(t=t.toInt()),(t&=63)===0?this:t<32?kt(this.low>>>t|this.high<<32-t,this.high>>t,this.unsigned):kt(this.high>>t-32,this.high>=0?0:-1,this.unsigned)};ge.shr=ge.shiftRight;ge.shiftRightUnsigned=function(t){if(Hr(t)&&(t=t.toInt()),t&=63,t===0)return this;var e=this.high;if(t<32){var o=this.low;return kt(o>>>t|e<<32-t,e>>>t,this.unsigned)}else return t===32?kt(e,0,this.unsigned):kt(e>>>t-32,0,this.unsigned)};ge.shru=ge.shiftRightUnsigned;ge.shr_u=ge.shiftRightUnsigned;ge.toSigned=function(){return this.unsigned?kt(this.low,this.high,!1):this};ge.toUnsigned=function(){return this.unsigned?this:kt(this.low,this.high,!0)};ge.toBytes=function(t){return t?this.toBytesLE():this.toBytesBE()};ge.toBytesLE=function(){var t=this.high,e=this.low;return[e&255,e>>>8&255,e>>>16&255,e>>>24,t&255,t>>>8&255,t>>>16&255,t>>>24]};ge.toBytesBE=function(){var t=this.high,e=this.low;return[t>>>24,t>>>16&255,t>>>8&255,t&255,e>>>24,e>>>16&255,e>>>8&255,e&255]};_t.fromBytes=function(t,e,o){return o?_t.fromBytesLE(t,e):_t.fromBytesBE(t,e)};_t.fromBytesLE=function(t,e){return new _t(t[0]|t[1]<<8|t[2]<<16|t[3]<<24,t[4]|t[5]<<8|t[6]<<16|t[7]<<24,e)};_t.fromBytesBE=function(t,e){return new _t(t[4]<<24|t[5]<<16|t[6]<<8|t[7],t[0]<<24|t[1]<<16|t[2]<<8|t[3],e)}});var tw=so((rc,ew)=>{"use strict";var C5=function(){if(typeof self<"u")return self;if(typeof window<"u")return window;if(typeof global<"u")return global;throw new Error("unable to locate global object")},As=C5();ew.exports=rc=As.fetch;As.fetch&&(rc.default=As.fetch.bind(As));rc.Headers=As.Headers;rc.Request=As.Request;rc.Response=As.Response});var rw=so(()=>{"use strict"});var EC=so((TC,My)=>{"use strict";(function(r,t,e){function o(a){var l=this,u=s();l.next=function(){var c=2091639*l.s0+l.c*23283064365386963e-26;return l.s0=l.s1,l.s1=l.s2,l.s2=c-(l.c=c|0)},l.c=1,l.s0=u(" "),l.s1=u(" "),l.s2=u(" "),l.s0-=u(a),l.s0<0&&(l.s0+=1),l.s1-=u(a),l.s1<0&&(l.s1+=1),l.s2-=u(a),l.s2<0&&(l.s2+=1),u=null}function n(a,l){return l.c=a.c,l.s0=a.s0,l.s1=a.s1,l.s2=a.s2,l}function i(a,l){var u=new o(a),c=l&&l.state,p=u.next;return p.int32=function(){return u.next()*4294967296|0},p.double=function(){return p()+(p()*2097152|0)*11102230246251565e-32},p.quick=p,c&&(typeof c=="object"&&n(c,u),p.state=function(){return n(u,{})}),p}function s(){var a=4022871197,l=function(u){u=String(u);for(var c=0;c<u.length;c++){a+=u.charCodeAt(c);var p=.02519603282416938*a;a=p>>>0,p-=a,p*=a,a=p>>>0,p-=a,a+=p*4294967296}return(a>>>0)*23283064365386963e-26};return l}t&&t.exports?t.exports=i:e&&e.amd?e(function(){return i}):this.alea=i})(TC,typeof My=="object"&&My,typeof define=="function"&&define)});var RC=so((NC,By)=>{"use strict";(function(r,t,e){function o(s){var a=this,l="";a.x=0,a.y=0,a.z=0,a.w=0,a.next=function(){var c=a.x^a.x<<11;return a.x=a.y,a.y=a.z,a.z=a.w,a.w^=a.w>>>19^c^c>>>8},s===(s|0)?a.x=s:l+=s;for(var u=0;u<l.length+64;u++)a.x^=l.charCodeAt(u)|0,a.next()}function n(s,a){return a.x=s.x,a.y=s.y,a.z=s.z,a.w=s.w,a}function i(s,a){var l=new o(s),u=a&&a.state,c=function(){return(l.next()>>>0)/4294967296};return c.double=function(){do var p=l.next()>>>11,d=(l.next()>>>0)/4294967296,m=(p+d)/(1<<21);while(m===0);return m},c.int32=l.next,c.quick=c,u&&(typeof u=="object"&&n(u,l),c.state=function(){return n(l,{})}),c}t&&t.exports?t.exports=i:e&&e.amd?e(function(){return i}):this.xor128=i})(NC,typeof By=="object"&&By,typeof define=="function"&&define)});var PC=so(($C,Vy)=>{"use strict";(function(r,t,e){function o(s){var a=this,l="";a.next=function(){var c=a.x^a.x>>>2;return a.x=a.y,a.y=a.z,a.z=a.w,a.w=a.v,(a.d=a.d+362437|0)+(a.v=a.v^a.v<<4^(c^c<<1))|0},a.x=0,a.y=0,a.z=0,a.w=0,a.v=0,s===(s|0)?a.x=s:l+=s;for(var u=0;u<l.length+64;u++)a.x^=l.charCodeAt(u)|0,u==l.length&&(a.d=a.x<<10^a.x>>>4),a.next()}function n(s,a){return a.x=s.x,a.y=s.y,a.z=s.z,a.w=s.w,a.v=s.v,a.d=s.d,a}function i(s,a){var l=new o(s),u=a&&a.state,c=function(){return(l.next()>>>0)/4294967296};return c.double=function(){do var p=l.next()>>>11,d=(l.next()>>>0)/4294967296,m=(p+d)/(1<<21);while(m===0);return m},c.int32=l.next,c.quick=c,u&&(typeof u=="object"&&n(u,l),c.state=function(){return n(l,{})}),c}t&&t.exports?t.exports=i:e&&e.amd?e(function(){return i}):this.xorwow=i})($C,typeof Vy=="object"&&Vy,typeof define=="function"&&define)});var DC=so((AC,Wy)=>{"use strict";(function(r,t,e){function o(s){var a=this;a.next=function(){var u=a.x,c=a.i,p,d,m;return p=u[c],p^=p>>>7,d=p^p<<24,p=u[c+1&7],d^=p^p>>>10,p=u[c+3&7],d^=p^p>>>3,p=u[c+4&7],d^=p^p<<7,p=u[c+7&7],p=p^p<<13,d^=p^p<<9,u[c]=d,a.i=c+1&7,d};function l(u,c){var p,d,m=[];if(c===(c|0))d=m[0]=c;else for(c=""+c,p=0;p<c.length;++p)m[p&7]=m[p&7]<<15^c.charCodeAt(p)+m[p+1&7]<<13;for(;m.length<8;)m.push(0);for(p=0;p<8&&m[p]===0;++p);for(p==8?d=m[7]=-1:d=m[p],u.x=m,u.i=0,p=256;p>0;--p)u.next()}l(a,s)}function n(s,a){return a.x=s.x.slice(),a.i=s.i,a}function i(s,a){s==null&&(s=+new Date);var l=new o(s),u=a&&a.state,c=function(){return(l.next()>>>0)/4294967296};return c.double=function(){do var p=l.next()>>>11,d=(l.next()>>>0)/4294967296,m=(p+d)/(1<<21);while(m===0);return m},c.int32=l.next,c.quick=c,u&&(u.x&&n(u,l),c.state=function(){return n(l,{})}),c}t&&t.exports?t.exports=i:e&&e.amd?e(function(){return i}):this.xorshift7=i})(AC,typeof Wy=="object"&&Wy,typeof define=="function"&&define)});var OC=so((FC,zy)=>{"use strict";(function(r,t,e){function o(s){var a=this;a.next=function(){var u=a.w,c=a.X,p=a.i,d,m;return a.w=u=u+1640531527|0,m=c[p+34&127],d=c[p=p+1&127],m^=m<<13,d^=d<<17,m^=m>>>15,d^=d>>>12,m=c[p]=m^d,a.i=p,m+(u^u>>>16)|0};function l(u,c){var p,d,m,f,g,x=[],y=128;for(c===(c|0)?(d=c,c=null):(c=c+"\0",d=0,y=Math.max(y,c.length)),m=0,f=-32;f<y;++f)c&&(d^=c.charCodeAt((f+32)%c.length)),f===0&&(g=d),d^=d<<10,d^=d>>>15,d^=d<<4,d^=d>>>13,f>=0&&(g=g+1640531527|0,p=x[f&127]^=d+g,m=p==0?m+1:0);for(m>=128&&(x[(c&&c.length||0)&127]=-1),m=127,f=4*128;f>0;--f)d=x[m+34&127],p=x[m=m+1&127],d^=d<<13,p^=p<<17,d^=d>>>15,p^=p>>>12,x[m]=d^p;u.w=g,u.X=x,u.i=m}l(a,s)}function n(s,a){return a.i=s.i,a.w=s.w,a.X=s.X.slice(),a}function i(s,a){s==null&&(s=+new Date);var l=new o(s),u=a&&a.state,c=function(){return(l.next()>>>0)/4294967296};return c.double=function(){do var p=l.next()>>>11,d=(l.next()>>>0)/4294967296,m=(p+d)/(1<<21);while(m===0);return m},c.int32=l.next,c.quick=c,u&&(u.X&&n(u,l),c.state=function(){return n(l,{})}),c}t&&t.exports?t.exports=i:e&&e.amd?e(function(){return i}):this.xor4096=i})(FC,typeof zy=="object"&&zy,typeof define=="function"&&define)});var MC=so((LC,Uy)=>{"use strict";(function(r,t,e){function o(s){var a=this,l="";a.next=function(){var c=a.b,p=a.c,d=a.d,m=a.a;return c=c<<25^c>>>7^p,p=p-d|0,d=d<<24^d>>>8^m,m=m-c|0,a.b=c=c<<20^c>>>12^p,a.c=p=p-d|0,a.d=d<<16^p>>>16^m,a.a=m-c|0},a.a=0,a.b=0,a.c=-1640531527,a.d=1367130551,s===Math.floor(s)?(a.a=s/4294967296|0,a.b=s|0):l+=s;for(var u=0;u<l.length+20;u++)a.b^=l.charCodeAt(u)|0,a.next()}function n(s,a){return a.a=s.a,a.b=s.b,a.c=s.c,a.d=s.d,a}function i(s,a){var l=new o(s),u=a&&a.state,c=function(){return(l.next()>>>0)/4294967296};return c.double=function(){do var p=l.next()>>>11,d=(l.next()>>>0)/4294967296,m=(p+d)/(1<<21);while(m===0);return m},c.int32=l.next,c.quick=c,u&&(typeof u=="object"&&n(u,l),c.state=function(){return n(l,{})}),c}t&&t.exports?t.exports=i:e&&e.amd?e(function(){return i}):this.tychei=i})(LC,typeof Uy=="object"&&Uy,typeof define=="function"&&define)});var BC=so(()=>{"use strict"});var WC=so((VC,lf)=>{"use strict";(function(r,t,e){var o=256,n=6,i=52,s="random",a=e.pow(o,n),l=e.pow(2,i),u=l*2,c=o-1,p;function d(I,N,F){var B=[];N=N==!0?{entropy:!0}:N||{};var z=x(g(N.entropy?[I,b(t)]:I??y(),3),B),H=new m(B),K=function(){for(var X=H.g(n),te=a,ue=0;X<l;)X=(X+ue)*o,te*=o,ue=H.g(1);for(;X>=u;)X/=2,te/=2,ue>>>=1;return(X+ue)/te};return K.int32=function(){return H.g(4)|0},K.quick=function(){return H.g(4)/4294967296},K.double=K,x(b(H.S),t),(N.pass||F||function(X,te,ue,pe){return pe&&(pe.S&&f(pe,H),X.state=function(){return f(H,{})}),ue?(e[s]=X,te):X})(K,z,"global"in N?N.global:this==e,N.state)}function m(I){var N,F=I.length,B=this,z=0,H=B.i=B.j=0,K=B.S=[];for(F||(I=[F++]);z<o;)K[z]=z++;for(z=0;z<o;z++)K[z]=K[H=c&H+I[z%F]+(N=K[z])],K[H]=N;(B.g=function(X){for(var te,ue=0,pe=B.i,xe=B.j,be=B.S;X--;)te=be[pe=c&pe+1],ue=ue*o+be[c&(be[pe]=be[xe=c&xe+te])+(be[xe]=te)];return B.i=pe,B.j=xe,ue})(o)}function f(I,N){return N.i=I.i,N.j=I.j,N.S=I.S.slice(),N}function g(I,N){var F=[],B=typeof I,z;if(N&&B=="object")for(z in I)try{F.push(g(I[z],N-1))}catch{}return F.length?F:B=="string"?I:I+"\0"}function x(I,N){for(var F=I+"",B,z=0;z<F.length;)N[c&z]=c&(B^=N[c&z]*19)+F.charCodeAt(z++);return b(N)}function y(){try{var I;return p&&(I=p.randomBytes)?I=I(o):(I=new Uint8Array(o),(r.crypto||r.msCrypto).getRandomValues(I)),b(I)}catch{var N=r.navigator,F=N&&N.plugins;return[+new Date,r,F,r.screen,b(t)]}}function b(I){return String.fromCharCode.apply(0,I)}if(x(e.random(),t),typeof lf=="object"&&lf.exports){lf.exports=d;try{p=BC()}catch{}}else typeof define=="function"&&define.amd?define(function(){return d}):e["seed"+s]=d})(typeof self<"u"?self:VC,[],Math)});var UC=so((Pve,zC)=>{"use strict";var dz=EC(),mz=RC(),fz=PC(),hz=DC(),gz=OC(),xz=MC(),Vs=WC();Vs.alea=dz;Vs.xor128=mz;Vs.xorwow=fz;Vs.xorshift7=hz;Vs.xor4096=gz;Vs.tychei=xz;zC.exports=Vs});var Ra=class r{shortPress=new bn;longPress=new bn;pressRelease=new bn;timeoutId;isLongPress=!1;onPressStart(t){t?.preventDefault(),this.isLongPress=!1,this.timeoutId=setTimeout(()=>{this.isLongPress=!0,this.longPress.emit()},500)}onPressEnd(){clearTimeout(this.timeoutId),this.isLongPress||this.shortPress.emit(),this.pressRelease.emit()}static \u0275fac=function(e){return new(e||r)};static \u0275dir=va({type:r,selectors:[["","appPress",""]],hostBindings:function(e,o){e&1&&ne("mousedown",function(){return o.onPressStart()})("touchstart",function(i){return o.onPressStart(i)})("mouseup",function(){return o.onPressEnd()})("touchend",function(){return o.onPressEnd()})("touchcancel",function(){return o.onPressEnd()})},outputs:{shortPress:"shortPress",longPress:"longPress",pressRelease:"pressRelease"}})};var kO=(r,t)=>({"bg-primary text-white focus:ring-primary-dark":r,"bg-gray-200 text-gray-700 hover:bg-gray-300 dark:bg-gray-600 dark:text-gray-200 dark:hover:bg-gray-500 focus:ring-gray-400":t});function IO(r,t){if(r&1){let e=ye();k(0,"div",11)(1,"button",53),ne("click",function(){J(e);let n=M();return ee(n.navigateToCreateRoutine())}),_e(),k(2,"svg",54),ce(3,"path",55),T(),O(4," CREATE ROUTINE "),T()()}}function TO(r,t){if(r&1&&(k(0,"option",56),O(1),et(2,"titlecase"),T()),r&2){let e=t.$implicit;L("value",e),R(),We(Dt(2,2,e))}}function EO(r,t){if(r&1&&(k(0,"option",56),O(1),et(2,"titlecase"),T()),r&2){let e=t.$implicit;L("value",e),R(),We(Dt(2,2,e))}}function NO(r,t){if(r&1){let e=ye();k(0,"button",57),ne("click",function(){let n=J(e).$implicit,i=M();return ee(i.toggleEquipmentFilter(n))}),O(1),et(2,"titlecase"),T()}if(r&2){let e=t.$implicit,o=M();L("ngClass",Tr(4,kO,o.selectedEquipment().includes(e),!o.selectedEquipment().includes(e))),R(),Se(" ",Dt(2,2,e)," ")}}function RO(r,t){if(r&1&&(k(0,"div",58),O(1," Showing "),k(2,"strong",59),O(3),T(),O(4," of "),k(5,"strong",59),O(6),T(),O(7," routines "),T()),r&2){let e=M();R(3),We(e.filteredRoutines().length),R(3),We(e.allRoutinesForList().length)}}function $O(r,t){if(r&1&&ce(0,"p",84),r&2){let e=M().$implicit,o=M(3);L("innerHTML",o.updateSanitizedDescription(e.description),wd)("title",e.description)}}function PO(r,t){if(r&1){let e=ye();k(0,"div",85),_e(),k(1,"svg",86)(2,"g"),ce(3,"path",87)(4,"path",88)(5,"path",89)(6,"path",90)(7,"path",91)(8,"path",92),T()(),He(),k(9,"span",93),O(10,"Goal:"),T(),k(11,"span",94),ne("click",function(n){J(e);let i=M().$implicit,s=M(3);return ee(s.filterByGoal(i.goal,n))}),O(12),et(13,"titlecase"),T()()}if(r&2){let e=M().$implicit;R(12),Se(" ",Dt(13,1,e.goal)," ")}}function AO(r,t){if(r&1){let e=ye();k(0,"span",100),ne("click",function(n){let i=J(e).$implicit,s=M(5);return ee(s.filterByMuscleGroup(i,n))}),O(1),et(2,"titlecase"),T()}if(r&2){let e=t.$implicit;R(),Se(" ",Dt(2,1,e)," ")}}function DO(r,t){if(r&1&&(k(0,"div",95),_e(),k(1,"svg",96)(2,"g")(3,"g"),ce(4,"path",97)(5,"path",98),T()()(),He(),k(6,"span",93),O(7,"Muscles:"),T(),se(8,AO,3,3,"span",99),T()),r&2){let e=M().$implicit,o=M(3);R(8),L("ngForOf",o.getRoutineMainMuscleGroups(e))}}function FO(r,t){if(r&1&&(k(0,"div",101),_e(),k(1,"svg",102),ce(2,"path",103),T(),He(),k(3,"span",93),O(4,"Last:"),T(),O(5),et(6,"date"),T()),r&2){let e=M().$implicit;R(5),Se(" ",ao(6,1,e.lastPerformed,"dd/MM/yy HH:mm")," ")}}function OO(r,t){if(r&1&&(k(0,"div",104),_e(),k(1,"svg",105),ce(2,"path",106),T(),He(),k(3,"span",93),O(4,"Est:"),T(),O(5),T()),r&2){let e=M().$implicit,o=M(3);R(5),Se(" ~",o.getRoutineDuration(e)," min ")}}function LO(r,t){r&1&&(k(0,"div",107),_e(),k(1,"svg",102),ce(2,"path",103),T(),O(3," Not performed yet "),T())}function MO(r,t){if(r&1){let e=ye();k(0,"div",108),ne("click",function(n){J(e);let i=M(4);return ee(i.toggleOnlyHiddenRoutines(n))})("shortPress",function(n){J(e);let i=M(4);return ee(i.toggleOnlyHiddenRoutines(n))})("longPress",function(n){J(e);let i=M().$implicit,s=M(3);return ee(s.unhideRoutine(i.id,n,!0))}),k(1,"span",109),_e(),k(2,"svg",110),ce(3,"path",111)(4,"path",112),T(),O(5),et(6,"titlecase"),T()()}r&2&&(L("title","Click to filter for favourites. Long-press for unmark as favourite"),R(5),Se(" ",Dt(6,2,"Hidden")," "))}function BO(r,t){if(r&1){let e=ye();k(0,"div",113),ne("shortPress",function(n){J(e);let i=M(4);return ee(i.toggleOnlyFavouriteRoutines(n))})("longPress",function(n){J(e);let i=M().$implicit,s=M(3);return ee(s.unmarkAsFavourite(i.id,n,!0))}),k(1,"span",114),_e(),k(2,"svg",115),ce(3,"path",116),T(),O(4),et(5,"titlecase"),T()()}r&2&&(L("title","Click to filter for favourites. Long-press for unmark as favourite"),R(4),Se(" ",Dt(5,2,"Favourite")," "))}function VO(r,t){if(r&1){let e=ye();k(0,"app-action-menu",117),ne("itemClick",function(n){J(e);let i=M(4);return ee(i.handleActionMenuItemClick(n))})("closeMenu",function(){J(e);let n=M(4);return ee(n.onCloseActionMenu())}),T()}if(r&2){let e=M().$implicit,o=M(3);L("items",o.getRoutineDropdownActionItems(e.id,"dropdown"))("isVisible",o.areActionsVisible(e.id))}}function WO(r,t){if(r&1){let e=ye();k(0,"app-action-menu",118),ne("itemClick",function(n){J(e);let i=M(4);return ee(i.handleActionMenuItemClick(n))})("closeMenu",function(){J(e);let n=M(4);return ee(n.onCloseActionMenu())}),T()}if(r&2){let e=M().$implicit,o=M(3);L("items",o.getRoutineDropdownActionItems(e.id,"compact-bar"))("isVisible",o.areActionsVisible(e.id))}}function zO(r,t){if(r&1){let e=ye();k(0,"div",63)(1,"div",64),ne("click",function(n){let i=J(e).$implicit,s=M(3);return ee(s.viewRoutineDetails(i.id,n))}),k(2,"div",65)(3,"h2",66),O(4),T()(),se(5,$O,1,2,"p",67),k(6,"div",68),se(7,PO,14,3,"div",69),T(),se(8,DO,9,1,"div",70)(9,FO,7,4,"div",71),k(10,"div"),se(11,OO,6,1,"div",72),T(),se(12,LO,4,0,"div",73),k(13,"div",74),se(14,MO,7,4,"div",75)(15,BO,6,4,"div",76),T()(),k(16,"div",77)(17,"div",78)(18,"button",79),ne("click",function(n){let i=J(e).$implicit,s=M(3);return ee(s.toggleActions(i.id,n))}),_e(),k(19,"svg",80),ce(20,"path",81),T()(),se(21,VO,1,2,"app-action-menu",82),T()(),se(22,WO,1,2,"app-action-menu",83),T()}if(r&2){let e=t.$implicit,o=M(3);np("z-index",o.areActionsVisible(e.id)?50:"auto"),R(3),L("title",e.name),R(),We(e.name),R(),L("ngIf",e.description),R(2),L("ngIf",e.goal),R(),L("ngIf",o.getRoutineMainMuscleGroups(e).length>0),R(),L("ngIf",e.lastPerformed),R(2),L("ngIf",e&&o.getRoutineDuration(e)>0),R(),L("ngIf",!e.lastPerformed),R(2),L("ngIf",e.isHidden),R(),L("ngIf",e.isFavourite),R(6),L("ngIf",o.areActionsVisible(e.id)&&!o.menuModeCompact),R(),L("ngIf",o.areActionsVisible(e.id)&&o.menuModeCompact)}}function UO(r,t){if(r&1&&(k(0,"div",61),se(1,zO,23,14,"div",62),T()),r&2){let e=M(2);R(),L("ngForOf",e.filteredRoutines())}}function GO(r,t){if(r&1){let e=ye();k(0,"button",125),ne("click",function(){J(e);let n=M(3);return ee(n.navigateToCreateRoutine())}),O(1," CREATE YOUR FIRST ROUTINE "),T()}}function HO(r,t){if(r&1&&(k(0,"div",119),_e(),k(1,"svg",120),ce(2,"path",121),T(),He(),k(3,"h3",122),O(4),T(),k(5,"p",123),O(6),T(),se(7,GO,2,0,"button",124),T()),r&2){let e=M(2);R(4),Se(" ",e.routineSearchTerm()||e.selectedRoutineGoal()||e.selectedRoutineMuscleGroup()?"No Routines Match Filters":"No Routines Yet!"," "),R(2),Se(" ",e.routineSearchTerm()||e.selectedRoutineGoal()||e.selectedRoutineMuscleGroup()?"Try adjusting your filters.":"Get started by creating your first workout routine."," "),R(),L("ngIf",!(e.routineSearchTerm()||e.selectedRoutineGoal()||e.selectedRoutineMuscleGroup()))}}function KO(r,t){if(r&1&&(k(0,"div"),se(1,UO,2,1,"div",60)(2,HO,8,3,"ng-template",null,1,Lo),T()),r&2){let e=Fo(3),o=M();R(),L("ngIf",o.filteredRoutines().length>0)("ngIfElse",e)}}function qO(r,t){r&1&&(k(0,"div",126),_e(),k(1,"svg",127),ce(2,"circle",128)(3,"path",129),T(),He(),k(4,"p",130),O(5,"Loading routines..."),T()())}function jO(r,t){if(r&1){let e=ye();k(0,"button",131),ne("click",function(){J(e);let n=M();return ee(n.scrollToTop())}),_e(),k(1,"svg",132),ce(2,"path",133),T(),He(),k(3,"span",8),O(4,"Back to Top"),T()()}}var zd=class r{workoutService=De(Ea);exerciseService=De(ti);trackingService=De(ei);router=De(Zn);alertService=De(Ta);spinnerService=De(Wd);toastService=De(Na);storageService=De(Vd);themeService=De(RS);platformId=De(ya);sanitizer=De(Id);sanitizedDescription="";routines$;allRoutinesForList=Ee([]);routinesSubscription;exercisesSubscription;showBackToTopButton=Ee(!1);onWindowScroll(){let t=window.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop||0;this.showBackToTopButton.set(t>400)}visibleActionsRutineId=Ee(null);menuModeCompact=!1;isFilterAccordionOpen=Ee(!1);routineSearchTerm=Ee("");selectedRoutineGoal=Ee(null);selectedEquipment=Ee([]);selectedRoutineMuscleGroup=Ee(null);uniqueRoutineGoals=Ee([]);uniqueRoutineEquipments=Ee([]);uniqueRoutineMuscleGroups=Ee([]);allExercisesMap=new Map;PAUSED_WORKOUT_KEY="fitTrackPro_pausedWorkoutState";maxDuration=Ee(120);selectedMaxDuration=Ee(120);showHiddenRoutines=Ee(!1);showFavouriteRoutinesOnly=Ee(!1);filteredRoutines=Et(()=>{let t=this.allRoutinesForList(),e=this.showHiddenRoutines(),o=this.showFavouriteRoutinesOnly();e||(t=t.filter(c=>!c.isHidden)),o&&(t=t.filter(c=>c.isFavourite));let n=this.routineSearchTerm().toLowerCase(),i=this.selectedRoutineGoal(),s=this.selectedRoutineMuscleGroup(),a=this.selectedEquipment(),l=this.selectedMaxDuration();return t=t.map(c=>lr(Xt({},c),{estimatedDuration:this.getRoutineDuration(c)})).filter(c=>c.estimatedDuration<=l),n&&(t=t.filter(c=>c.name.toLowerCase().includes(n)||c.description&&c.description.toLowerCase().includes(n))),i&&(t=t.filter(c=>c.goal?.toLowerCase()===i.toLowerCase())),s&&(t=t.filter(c=>c.exercises.some(p=>this.allExercisesMap.get(p.exerciseId)?.primaryMuscleGroup.toLowerCase()===s.toLowerCase()))),a.length>0&&(t=t.filter(c=>{let p=new Set;return c.exercises.forEach(d=>{let m=this.allExercisesMap.get(d.exerciseId);m?.equipment&&p.add(m.equipment),m?.equipmentNeeded?.forEach(f=>{f.toLowerCase().includes("kettlebell")?p.add("Kettlebell"):p.add(f.split(" (")[0].trim())})}),a.every(d=>p.has(d))})),t});toggleEquipmentFilter(t){this.selectedEquipment.update(e=>{let o=new Set(e);return o.has(t)?o.delete(t):o.add(t),Array.from(o)})}ngOnInit(){gr(this.platformId)&&window.scrollTo(0,0),this.menuModeCompact=this.themeService.isMenuModeCompact(),this.exercisesSubscription=this.exerciseService.getExercises().subscribe(t=>{t.forEach(e=>this.allExercisesMap.set(e.id,e)),this.loadRoutinesAndPopulateFilters()}),this.routines$=this.workoutService.routines$}loadRoutinesAndPopulateFilters(){this.routinesSubscription=this.workoutService.routines$.subscribe(t=>{this.allRoutinesForList.set(t),this.populateRoutineFilterOptions(t)})}populateRoutineFilterOptions(t){if(!t||t.length===0){this.maxDuration.set(120);return}let e=new Set,o=new Set,n=new Set,i=0;t.forEach(a=>{let l=this.getRoutineDuration(a);l>i&&(i=l),a.goal&&e.add(a.goal),a.exercises.forEach(u=>{let c=this.allExercisesMap.get(u.exerciseId);c?.primaryMuscleGroup&&o.add(c.primaryMuscleGroup),c?.equipmentNeeded?c.equipmentNeeded.forEach(p=>{let d=p.indexOf(" (alternative)"),m=p.indexOf(" (optional)"),f=p.indexOf("Dumbbells"),g=p.indexOf("Dumbbell(s)"),x=p.indexOf("Kettlebells"),y=p.indexOf("Kettlebell(s)");d>=0&&(p=p.substring(0,d)),m>=0&&(p=p.substring(0,m)),(y>=0||x>=0)&&(p="Kettlebell"),(f>=0||g>=0)&&(p="Dumbbell"),n.add(p)}):c?.equipment&&n.add(c.equipment)})});let s=Math.min(Math.ceil(i/10)*10,180);this.maxDuration.set(s>0?s:120),this.selectedMaxDuration.set(s>0?s:120),this.uniqueRoutineGoals.set(Array.from(e).sort()),this.uniqueRoutineMuscleGroups.set(Array.from(o).sort()),this.uniqueRoutineEquipments.set(Array.from(n).sort())}toggleFilterAccordion(){this.isFilterAccordionOpen.update(t=>!t)}onRoutineSearchTermChange(t){let e=t.target;this.routineSearchTerm.set(e.value)}onRoutineGoalChange(t){let e=t.target;this.selectedRoutineGoal.set(e.value||null)}onRoutineMuscleGroupChange(t){let e=t.target;this.selectedRoutineMuscleGroup.set(e.value||null)}onDurationFilterChange(t){let e=t.target;this.selectedMaxDuration.set(Number(e.value))}clearRoutineFilters(){this.routineSearchTerm.set(""),this.selectedRoutineGoal.set(null),this.selectedRoutineMuscleGroup.set(null),this.selectedEquipment.set([]),this.selectedMaxDuration.set(this.maxDuration());let t=document.getElementById("routine-search-term");t&&(t.value="");let e=document.getElementById("routine-goal-filter");e&&(e.value="");let o=document.getElementById("routine-muscle-filter");o&&(o.value="");let n=document.getElementById("routine-equipment-filter");n&&(n.value="")}navigateToCreateRoutine(){this.router.navigate(["/workout/routine/new"])}editRoutine(t,e){this.router.navigate(["/workout/routine/edit",t]),this.visibleActionsRutineId.set(null)}deleteRoutine(t,e){return j(this,null,function*(){this.visibleActionsRutineId.set(null);let o=this.allRoutinesForList().find(a=>a.id===t);if(!o){this.toastService.error("Routine not found for deletion.",0,"Error");return}let n=(yield Xn(this.trackingService.getWorkoutLogsByRoutineId(t).pipe(hr(1))))||[],i=`Are you sure you want to delete the routine "${o.name}"?`;n.length>0&&(i+=` This will also delete ${n.length} associated workout log(s). This action cannot be undone.`);let s=yield this.alertService.showConfirm("Delete Routine",i,"Delete");if(s&&s.data)try{this.spinnerService.show(),n.length>0&&(yield this.trackingService.clearWorkoutLogsByRoutineId(t)),yield this.workoutService.deleteRoutine(t),this.toastService.success(`Routine "${o.name}" deleted successfully.`,4e3,"Routine Deleted")}catch(a){console.error("Error during deletion:",a),this.toastService.error("Failed to delete routine or its logs.",0,"Deletion Failed")}finally{this.spinnerService.hide()}})}startWorkout(t,e){return j(this,null,function*(){if(this.visibleActionsRutineId.set(null),!gr(this.platformId)){this.router.navigate(["/workout/play",t]);return}let o=this.storageService.getItem(this.PAUSED_WORKOUT_KEY);if(o){let n=o.sessionRoutine?.name||"a previous session",i=o.workoutDate?` from ${xr(new Date(o.workoutDate),"MMM d, HH:mm")}`:"",s=[{text:"Cancel",role:"cancel",data:"cancel"},{text:"Discard Paused & Start New",role:"confirm",data:"discard_start_new",cssClass:"bg-red-500 hover:bg-red-600 text-white"},{text:`Resume: ${n.substring(0,15)}${n.length>15?"...":""}`,role:"confirm",data:"resume_paused",cssClass:"bg-green-500 hover:bg-green-600 text-white"}],a=yield this.alertService.showConfirmationDialog("Workout in Progress",`You have a paused workout ("${n}"${i}). What would you like to do?`,s);if(a&&a.data==="resume_paused"){let l=o.routineId||"ad-hoc";this.router.navigate(["/workout/play",o.routineId||""],{queryParams:{resume:"true"}})}else a&&a.data==="discard_start_new"?(this.storageService.removeItem(this.PAUSED_WORKOUT_KEY),this.toastService.info("Previous paused workout discarded.",3e3),this.router.navigate(["/workout/play",t])):this.toastService.info("Starting new workout cancelled.",2e3)}else this.router.navigate(["/workout/play",t])})}viewRoutineDetails(t,e){if(e?.stopPropagation(),e&&e.target){let o=e.target;if(o.className&&o.className.includes("bg-primary"))return}this.router.navigate(["/workout/routine/view",t,{isView:"routineBuilder"}]),this.visibleActionsRutineId.set(null)}hideRoutine(t,e){e?.stopPropagation();let o=this.allRoutinesForList().find(n=>n.id===t);o&&(o.isHidden=!0,this.workoutService.updateRoutine(o),this.loadRoutinesAndPopulateFilters())}unhideRoutine(t,e,o=!1){return j(this,null,function*(){e?.stopPropagation();let n=this.allRoutinesForList().find(i=>i.id===t);if(n){if(o){let i=[{text:"Cancel",role:"cancel",data:"cancel"},{text:"Unmark",role:"confirm",data:"confirm"}],s=yield this.alertService.showConfirmationDialog("Unhide routine",`Would you like to unhide ${n.name} from hidden ones?`,i);if(!s||!s.data||s.data==="cancel")return}n.isHidden=!1,this.workoutService.updateRoutine(n),this.loadRoutinesAndPopulateFilters(),this.toastService.success(`Removed ${n.name} from hidden ones`)}})}markAsFavourite(t,e){e?.stopPropagation();let o=this.allRoutinesForList().find(n=>n.id===t);o&&(o.isFavourite=!0,this.workoutService.updateRoutine(o),this.loadRoutinesAndPopulateFilters(),this.toastService.info(`Routine "${o.name}" added to favourites`))}unmarkAsFavourite(t,e,o=!1){return j(this,null,function*(){e?.stopPropagation();let n=this.allRoutinesForList().find(i=>i.id===t);if(n){if(o){let i=[{text:"Cancel",role:"cancel",data:"cancel"},{text:"Unmark",role:"confirm",data:"confirm"}],s=yield this.alertService.showConfirmationDialog("Unmark favourite routine",`Would you like to unmark ${n.name} from favourites?`,i);if(!s||!s.data||s.data==="cancel")return}n.isFavourite=!1,this.workoutService.updateRoutine(n),this.loadRoutinesAndPopulateFilters(),this.toastService.info(`Routine "${n.name}" removed from favourites`)}})}getRoutineMainMuscleGroups(t){if(!this.allExercisesMap.size||!t.exercises.length)return[];let e=new Set;return t.exercises.forEach(o=>{let n=this.allExercisesMap.get(o.exerciseId);n?.primaryMuscleGroup&&e.add(n.primaryMuscleGroup)}),Array.from(e).slice(0,3)}cloneAndEditRoutine(t,e){return j(this,null,function*(){this.visibleActionsRutineId.set(null);let o=this.allRoutinesForList().find(i=>i.id===t);if(!o){this.toastService.error("Routine not found for cloning.",0,"Error");return}let n=lr(Xt({},structuredClone(o)),{name:o.name+" (Copy)",createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()});try{this.spinnerService.show(),n=yield this.workoutService.addRoutine(n),this.toastService.success(`Routine "${n.name}" cloned successfully.`,3e3,"Routine Cloned"),this.router.navigate(["/workout/routine/edit",n.id]),this.visibleActionsRutineId.set(null)}catch(i){console.error("Error during routine cloning:",i),this.toastService.error("Failed to clone routine.",0,"Clone Failed")}finally{this.spinnerService.hide()}})}ngOnDestroy(){this.routinesSubscription?.unsubscribe(),this.exercisesSubscription?.unsubscribe()}startKB(){this.router.navigate(["/workout/routine/kb-workout-tracker"])}getIconPath(t){return this.exerciseService.getIconPath(t)}getRoutineDropdownActionItems(t,e){let o="rounded text-left px-3 py-1.5 sm:px-4 sm:py-2 font-medium text-gray-600 dark:text-gray-300 hover:bg-primary flex items-center text-sm hover:text-white dark:hover:text-gray-100 dark:hover:text-white",n="rounded text-left px-3 py-1.5 sm:px-4 sm:py-2 font-medium text-gray-600 dark:text-gray-300 hover:bg-red-600 flex items-center text-sm hover:text-gray-100 hover:animate-pulse",i=this.allRoutinesForList().find(p=>p.id===t),s={label:"HIDE",actionKey:"hide",iconSvg:`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path fill-rule="evenodd" d="M3.28 2.22a.75.75 0 00-1.06 1.06l14.5 14.5a.75.75 0 101.06-1.06l-1.745-1.745a10.029 10.029 0 003.3-4.38 1.651 1.651 0 000-1.185A10.004 10.004 0 009.999 3a9.956 9.956 0 00-4.744 1.194L3.28 2.22zM7.752 6.69l1.092 1.092a2.5 2.5 0 013.374 3.373l1.091 1.092a4 4 0 00-5.557-5.557z" clip-rule="evenodd" />
        <path d="M10.748 13.93l2.523 2.523a9.987 9.987 0 01-3.27.547c-4.257 0-7.893-2.66-9.336-6.41a1.651 1.651 0 010-1.186A10.007 10.007 0 012.839 6.02L6.07 9.252a4 4 0 004.678 4.678z" /></svg>`,iconClass:"w-8 h-8 mr-2",buttonClass:(e==="dropdown"?"w-full ":"")+o,data:{routineId:t}},a={label:"UNHIDE",actionKey:"unhide",iconSvg:'<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M10 12.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5Z" /><path fill-rule="evenodd" d="M.664 10.59a1.651 1.651 0 010-1.186A10.004 10.004 0 0110 3c4.257 0 7.893 2.66 9.336 6.41.147.381.146.804 0 1.186A10.004 10.004 0 0110 17c-4.257 0-7.893-2.66-9.336-6.41ZM14 10a4 4 0 11-8 0 4 4 0 018 0Z" clip-rule="evenodd" /></svg>',iconClass:"w-8 h-8 mr-2",buttonClass:(e==="dropdown"?"w-full ":"")+o,data:{routineId:t}},l={label:"FAVOURITE",actionKey:"markAsFavourite",iconSvg:`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
          <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"/>
        </svg>`,iconClass:"w-8 h-8 mr-2",buttonClass:(e==="dropdown"?"w-full ":"")+o,data:{routineId:t}},u={label:"REMOVE",actionKey:"unmarkAsFavourite",iconSvg:`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
        <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"/>
        <line x1="2" y1="20" x2="22" y2="4"></line>
      </svg>`,iconClass:"w-8 h-8 mr-2",buttonClass:(e==="dropdown"?"w-full ":"")+o,data:{routineId:t}},c=[{label:"VIEW",actionKey:"view",iconSvg:'<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M10 12.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5Z" /><path fill-rule="evenodd" d="M.664 10.59a1.651 1.651 0 010-1.186A10.004 10.004 0 0110 3c4.257 0 7.893 2.66 9.336 6.41.147.381.146.804 0 1.186A10.004 10.004 0 0110 17c-4.257 0-7.893-2.66-9.336-6.41ZM14 10a4 4 0 11-8 0 4 4 0 018 0Z" clip-rule="evenodd" /></svg>',iconClass:"w-8 h-8 mr-2",buttonClass:(e==="dropdown"?"w-full ":"")+o,data:{routineId:t}},{label:"START",actionKey:"start",iconSvg:'<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" d="M5.25 5.653c0-.856.917-1.398 1.667-.986l11.54 6.347a1.125 1.125 0 0 1 0 1.972l-11.54 6.347a1.125 1.125 0 0 1-1.667-.986V5.653Z" /></svg>',iconClass:"w-8 h-8 mr-2",buttonClass:(e==="dropdown"?"w-full ":"")+o,data:{routineId:t}},{label:"EDIT",actionKey:"edit",iconSvg:'<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" d="m16.862 4.487 1.687-1.688a1.875 1.875 0 1 1 2.652 2.652L10.582 16.07a4.5 4.5 0 0 1-1.897 1.13L6 18l.8-2.685a4.5 4.5 0 0 1 1.13-1.897l8.932-8.931Zm0 0L19.5 7.125M18 14v4.75A2.25 2.25 0 0 1 15.75 21H5.25A2.25 2.25 0 0 1 3 18.75V8.25A2.25 2.25 0 0 1 5.25 6H10" /></svg>',iconClass:"w-8 h-8 mr-2",buttonClass:(e==="dropdown"?"w-full ":"")+o,data:{routineId:t}},{label:"CLONE",actionKey:"clone",iconSvg:'<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" fill="none"><path d="M 5 3 H 16 A 2 2 0 0 1 18 5 V 16 A 2 2 0 0 1 16 18 H 5 A 2 2 0 0 1 3 16 V 5 A 2 2 0 0 1 5 3 Z M 8 6 H 19 A 2 2 0 0 1 21 8 V 19 A 2 2 0 0 1 19 21 H 8 A 2 2 0 0 1 6 19 V 8 A 2 2 0 0 1 8 6 Z" /></svg>',iconClass:"w-8 h-8 mr-2",buttonClass:(e==="dropdown"?"w-full ":"")+o,data:{routineId:t}},{isDivider:!0},{label:"DELETE",actionKey:"delete",iconSvg:'<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path fill-rule="evenodd" d="M8.75 1A2.75 2.75 0 006 3.75v.443c-.795.077-1.58.177-2.365.298a.75.75 0 10.23 1.482l.149-.022.841 10.518A2.75 2.75 0 007.596 19h4.807a2.75 2.75 0 002.742-2.53l.841-10.52.149.023a.75.75 0 00.23-1.482A41.03 41.03 0 0014 4.193V3.75A2.75 2.75 0 0011.25 1h-2.5ZM10 4c.84 0 1.673.025 2.5.075V3.75c0-.69-.56-1.25-1.25-1.25h-2.5c-.69 0-1.25.56-1.25 1.25v.325C8.327 4.025 9.16 4 10 4ZM8.58 7.72a.75.75 0 00-1.5.06l.3 7.5a.75.75 0 101.5-.06l-.3-7.5Zm4.34.06a.75.75 0 10-1.5-.06l-.3 7.5a.75.75 0 101.5.06l.3-7.5Z" clip-rule="evenodd" /></svg>',iconClass:"w-8 h-8 mr-2",buttonClass:(e==="dropdown"?"w-full ":"")+n,data:{routineId:t}}];return i?.isHidden?c.push(a):this.showHiddenRoutines()||c.push(s),i?.isFavourite?c.push(u):c.push(l),c}handleActionMenuItemClick(t,e){let o=t.data?.routineId;if(o){switch(t.actionKey){case"view":this.viewRoutineDetails(o);break;case"hide":this.hideRoutine(o);break;case"unhide":this.unhideRoutine(o);break;case"markAsFavourite":this.markAsFavourite(o);break;case"unmarkAsFavourite":this.unmarkAsFavourite(o);break;case"start":this.startWorkout(o);break;case"edit":this.editRoutine(o);break;case"clone":this.cloneAndEditRoutine(o);break;case"delete":this.deleteRoutine(o);break}this.activeRoutineIdActions.set(null)}}activeRoutineIdActions=Ee(null);toggleActions(t,e){e.stopPropagation(),this.activeRoutineIdActions.update(o=>o===t?null:t)}areActionsVisible(t){return this.activeRoutineIdActions()===t}onCloseActionMenu(){this.activeRoutineIdActions.set(null)}getRoutineDuration(t){return t?this.workoutService.getEstimatedRoutineDuration(t):0}scrollToTop(){gr(this.platformId)&&window.scrollTo({top:0,behavior:"smooth"})}toggleOnlyFavouriteRoutines(t){t?.stopPropagation(),this.showFavouriteRoutinesOnly.set(!this.showFavouriteRoutinesOnly())}toggleOnlyHiddenRoutines(t){t?.stopPropagation(),this.showHiddenRoutines.set(!this.showHiddenRoutines())}filterByGoal(t,e){if(e?.stopPropagation(),this.onRoutineGoalChange(e),e&&e.target&&t){let o=e.target;o.value=t,this.onRoutineGoalChange(e),this.toastService.info(`Filtered routines by goal '${t}'`)}}filterByMuscleGroup(t,e){if(e?.stopPropagation(),e&&e.target&&t){let o=e.target;o.value=t,this.onRoutineMuscleGroupChange(e),this.toastService.info(`Filtered routines by muscle '${t}'`)}}updateSanitizedDescription(t){return this.sanitizer.bypassSecurityTrustHtml(t)}static \u0275fac=function(e){return new(e||r)};static \u0275cmp=yo({type:r,selectors:[["app-routine-list"]],hostBindings:function(e,o){e&1&&ne("scroll",function(){return o.onWindowScroll()},_d)},decls:83,vars:27,consts:[["loadingRoutines",""],["noRoutines",""],[1,"container","mx-auto","p-2","sm:p-4"],[1,"flex","justify-between","items-center","mb-2","pb-2","border-b","border-gray-200","dark:border-gray-700"],[1,"text-2xl","font-bold","text-gray-800","dark:text-gray-200"],["type","button",1,"rounded-lg","text-gray-600","dark:text-gray-300","hover:bg-gray-200","dark:hover:bg-gray-700","focus:outline-none","focus:ring-2","focus:ring-primary","dark:focus:ring-primary-light","transition-all","duration-300","ease-in-out",3,"click"],["xmlns","http://www.w3.org/2000/svg","fill","none","viewBox","0 0 24 24","stroke-width","1.5","stroke","currentColor",1,"w-8","h-8","transition-transform","duration-300"],["stroke-linecap","round","stroke-linejoin","round","d","M10.5 6h9.75M10.5 6a1.5 1.5 0 1 1-3 0m3 0a1.5 1.5 0 1 0-3 0M3.75 6H7.5m3 12h9.75m-9.75 0a1.5 1.5 0 0 1-3 0m3 0a1.5 1.5 0 0 0-3 0M3.75 18H7.5m3-6h9.75m-9.75 0a1.5 1.5 0 0 1-3 0m3 0a1.5 1.5 0 0 0-3 0M3.75 12H7.5"],[1,"sr-only"],[1,"flex","justify-center","grid","grid-cols-1","md:grid-cols-3","gap-1","items-start","text-center"],["class","flex justify-center",4,"ngIf"],[1,"flex","justify-center"],["routerLink","/workout/play/-1",1,"flex","justify-center","items-center","my-2","bg-primary","hover:bg-primary-dark","text-white","font-semibold","py-2","px-3","rounded-md","shadow-sm","hover:shadow-md","transition-all","duration-200","focus:outline-none","focus:ring-2","focus:ring-primary-light","focus:ring-opacity-75","text-sm"],["xmlns","http://www.w3.org/2000/svg","fill","none","viewBox","0 0 20 20","stroke-width","2","stroke","currentColor",1,"w-4","h-4","mr-1.5","inline-block"],["stroke-linecap","round","stroke-linejoin","round","d","M5.25 5.653c0-.856.917-1.398 1.667-.986l11.54 6.347a1.125 1.125 0 010 1.972l-11.54 6.347a1.125 1.125 0 01-1.667-.986V5.653z"],[1,"overflow-y-auto","transition-all","duration-500","ease-in-out"],[1,"p-4","bg-white","dark:bg-gray-700","rounded-lg","shadow-md","border","dark:border-gray-600","mt-2"],[1,"text-xl","font-semibold","text-gray-700","dark:text-gray-300","mb-4"],[1,"grid","grid-cols-1","md:grid-cols-3","gap-4","items-start"],["for","routine-search-term",1,"block","text-sm","font-medium","text-gray-700","dark:text-gray-300","mb-1"],["type","text","id","routine-search-term","placeholder","Enter routine name or description...",1,"block","w-full","p-2","border","border-gray-300","dark:border-gray-600","rounded-md","shadow-sm","focus:ring-primary","focus:border-primary","dark:bg-gray-600","dark:text-gray-200",3,"input","value"],["for","routine-goal-filter",1,"block","text-sm","font-medium","text-gray-700","dark:text-gray-300","mb-1"],["id","routine-goal-filter",1,"block","w-full","p-2","border","border-gray-300","dark:border-gray-600","rounded-md","shadow-sm","focus:ring-primary","focus:border-primary","dark:bg-gray-600","dark:text-gray-200",3,"change","value"],["value",""],[3,"value",4,"ngFor","ngForOf"],["for","routine-muscle-filter",1,"block","text-sm","font-medium","text-gray-700","dark:text-gray-300","mb-1"],["id","routine-muscle-filter",1,"block","w-full","p-2","border","border-gray-300","dark:border-gray-600","rounded-md","shadow-sm","focus:ring-primary","focus:border-primary","dark:bg-gray-600","dark:text-gray-200",3,"change","value"],[1,"mt-4"],[1,"block","text-sm","font-medium","text-gray-700","dark:text-gray-300","mb-2"],[1,"flex","flex-wrap","gap-2"],["type","button","class","px-3 py-1.5 text-xs font-semibold rounded-full transition-colors duration-200 ease-in-out focus:outline-none focus:ring-2 focus:ring-offset-2 dark:focus:ring-offset-gray-800",3,"ngClass","click",4,"ngFor","ngForOf"],[1,"mt-4","pt-4","border-t","border-gray-200","dark:border-gray-600","md:border-none"],["for","duration-filter",1,"block","text-sm","font-medium","text-gray-700","dark:text-gray-300","mb-2"],[1,"text-primary","dark:text-primary-light"],["type","range","id","duration-filter","min","0","step","5",1,"w-full","h-2","bg-gray-300","dark:bg-gray-600","rounded-lg","appearance-none","cursor-pointer",3,"input","max","value"],[1,"border-t","border-gray-200","dark:border-gray-600","md:border-none"],[1,"flex","flex-col","tems-center","justify-between","pt-4"],[1,"text-sm","text-gray-500","dark:text-gray-400","mr-1"],["for","show-hidden-routine",1,"inline-flex","items-center","cursor-pointer","mt-2"],["type","checkbox","id","show-hidden-routine",1,"sr-only","peer",3,"change","checked"],[1,"relative","w-11","h-6","bg-gray-200","peer-focus:outline-none","peer-focus:ring-4","peer-focus:ring-blue-300","dark:peer-focus:ring-blue-800","rounded-full","peer","dark:bg-gray-600","peer-checked:after:translate-x-full","rtl:peer-checked:after:-translate-x-full","peer-checked:after:border-white","after:content-['']","after:absolute","after:top-[2px]","after:start-[2px]","after:bg-white","after:border-gray-300","after:border","after:rounded-full","after:h-5","after:w-5","after:transition-all","dark:border-gray-600","peer-checked:bg-primary","dark:peer-checked:bg-primary-dark"],[1,"ms-3","text-sm","font-medium","text-gray-900","dark:text-gray-300"],["for","show-favourite-routine",1,"inline-flex","items-center","cursor-pointer","mt-2"],["type","checkbox","id","show-favourite-routine",1,"sr-only","peer",3,"change","checked"],[1,"mt-4","flex","justify-between","items-center"],[1,"flex","px-4","py-2","bg-yellow-200","dark:bg-yellow-700","text-gray-700","dark:text-gray-200","rounded-md","hover:bg-yellow-300","dark:hover:bg-yellow-500","text-sm","items-center",3,"click"],["xmlns","http://www.w3.org/2000/svg","fill","none","viewBox","0 0 24 24","stroke-width","1.5","stroke","currentColor",1,"size-5","mr-2"],["stroke-linecap","round","stroke-linejoin","round","d","m14.74 9-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 0 1-2.244 2.077H8.084a2.25 2.25 0 0 1-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 0 0-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 0 1 3.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 0 0-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 0 0-7.5 0"],["class","text-sm text-gray-600 dark:text-gray-400",4,"ngIf"],[4,"ngIf","ngIfElse"],["type","button",1,"p-2","rounded-md","mt-5","text-gray-600","dark:text-gray-300","hover:bg-gray-200","dark:hover:bg-gray-700","focus:outline-none","focus:ring-2","focus:ring-primary","dark:focus:ring-primary-light","transition-all","duration-300","ease-in-out",3,"click"],[1,"w-6","h-6","sm:w-8","sm:h-8","object-contain",3,"src"],["type","button","class","fixed bottom-20 right-4 z-40 bg-primary dark:bg-primary-dark text-white rounded-full p-3 shadow-lg hover:bg-primary-dark dark:hover:bg-primary-light focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-focus dark:focus:ring-offset-gray-900 transition-opacity animate-fade-in",3,"click",4,"ngIf"],[1,"flex","justify-center","items-center","my-2","bg-primary","hover:bg-primary-dark","text-white","font-semibold","py-2","px-3","rounded-md","shadow-sm","hover:shadow-md","transition-all","duration-200","focus:outline-none","focus:ring-2","focus:ring-primary-light","focus:ring-opacity-75","text-sm","min-w-[180px]",3,"click"],["xmlns","http://www.w3.org/2000/svg","viewBox","0 0 20 20","fill","currentColor",1,"w-6","h-6","mr-1.5","inline-block"],["d","M10.75 4.75a.75.75 0 0 0-1.5 0v4.5h-4.5a.75.75 0 0 0 0 1.5h4.5v4.5a.75.75 0 0 0 1.5 0v-4.5h4.5a.75.75 0 0 0 0-1.5h-4.5v-4.5Z"],[3,"value"],["type","button",1,"px-3","py-1.5","text-xs","font-semibold","rounded-full","transition-colors","duration-200","ease-in-out","focus:outline-none","focus:ring-2","focus:ring-offset-2","dark:focus:ring-offset-gray-800",3,"click","ngClass"],[1,"text-sm","text-gray-600","dark:text-gray-400"],[1,"text-gray-800","dark:text-gray-200"],["class","grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 mt-4",4,"ngIf","ngIfElse"],[1,"grid","grid-cols-1","md:grid-cols-2","lg:grid-cols-3","gap-4","mt-4"],["class","bg-white dark:bg-gray-700 rounded-lg shadow-md hover:shadow-lg transition-shadow duration-200 relative group transform hover:-translate-y-1",3,"zIndex",4,"ngFor","ngForOf"],[1,"bg-white","dark:bg-gray-700","rounded-lg","shadow-md","hover:shadow-lg","transition-shadow","duration-200","relative","group","transform","hover:-translate-y-1"],[1,"p-3","cursor-pointer",3,"click"],[1,"flex","justify-between","items-start","mb-1.5"],[1,"text-lg","font-semibold","text-primary","dark:text-primary-light","pr-8",3,"title"],["class","text-gray-600 dark:text-gray-400 mb-2 line-clamp-2 text-sm sm:text-xs",3,"innerHTML","title",4,"ngIf"],[1,"flex","justify-between","text-sm","sm:text-xs","text-gray-500","dark:text-gray-300","mb-2","space-x-2"],["class","flex items-center gap-1",4,"ngIf"],["class","flex items-center text-sm sm:text-xs text-gray-500 dark:text-gray-300 mb-2 flex gap-1",4,"ngIf"],["class","text-sm sm:text-xs text-gray-500 dark:text-gray-300 flex gap-1",4,"ngIf"],["class","text-xs text-gray-500 dark:text-gray-300 flex gap-1",4,"ngIf"],["class","text-sm sm:text-xs text-gray-500 dark:text-gray-300 italic flex gap-1",4,"ngIf"],[1,"flex","my-2","text-sm","sm:text-xs","text-gray-500","dark:text-gray-300"],["appPress","","class","favourite-span",3,"title","click","shortPress","longPress",4,"ngIf"],["appPress","","class","favourite-span",3,"title","shortPress","longPress",4,"ngIf"],[1,"absolute","top-2","right-2"],[1,"relative"],[1,"p-1.5","text-gray-500","dark:text-gray-400","hover:bg-gray-200","dark:hover:bg-gray-700","rounded-full","focus:outline-none",3,"click"],["xmlns","http://www.w3.org/2000/svg","fill","none","viewBox","0 0 24 24","stroke","currentColor","stroke-width","2",1,"h-5","w-5"],["stroke-linecap","round","stroke-linejoin","round","d","M12 5v.01M12 12v.01M12 19v.01M12 6a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2z"],["displayMode","dropdown",3,"items","isVisible","itemClick","closeMenu",4,"ngIf"],["displayMode","compact-bar",3,"items","isVisible","itemClick","closeMenu",4,"ngIf"],[1,"text-gray-600","dark:text-gray-400","mb-2","line-clamp-2","text-sm","sm:text-xs",3,"innerHTML","title"],[1,"flex","items-center","gap-1"],["fill","currentColor","version","1.1","id","Layer_1","xmlns","http://www.w3.org/2000/svg",0,"xmlns","xlink","http://www.w3.org/1999/xlink","viewBox","0 0 72 72",0,"xml","space","preserve",1,"w-6","h-6","transition-all"],["d","M21.929,10.583h3c0.553,0,1-0.447,1-1s-0.447-1-1-1h-3c-0.553,0-1,0.447-1,1S21.376,10.583,21.929,10.583z"],["d","M29.929,10.583h8c0.553,0,1-0.447,1-1s-0.447-1-1-1h-8c-0.553,0-1,0.447-1,1S29.376,10.583,29.929,10.583z"],["d",`M41.074,43.893l-2.971-0.443l-1.287-2.796C36.49,39.944,35.78,39.49,35,39.49s-1.49,0.454-1.816,1.163l-1.288,2.796
		l-2.97,0.443c-0.746,0.112-1.366,0.635-1.604,1.352c-0.236,0.717-0.049,1.506,0.484,2.04l2.165,2.168l-0.708,3.16
		c-0.175,0.78,0.133,1.591,0.782,2.059c0.348,0.251,0.759,0.378,1.17,0.378c0.355,0,0.712-0.095,1.03-0.285l2.769-1.664l2.964,1.688
		c0.308,0.176,0.649,0.262,0.989,0.262c0.435,0,0.867-0.142,1.226-0.42c0.639-0.495,0.917-1.326,0.704-2.105l-0.844-3.097
		l2.14-2.143c0.533-0.534,0.721-1.323,0.484-2.04C42.44,44.527,41.82,44.005,41.074,43.893z M38.202,48.451
		c-0.216,0.216-0.313,0.52-0.264,0.818l1.029,3.779l-3.496-1.99c-0.146-0.078-0.309-0.117-0.472-0.117s-0.325,0.039-0.472,0.117
		l-3.313,1.99l0.846-3.779c0.05-0.299-0.048-0.603-0.264-0.818l-2.576-2.58l3.515-0.525c0.321-0.049,0.598-0.25,0.735-0.537
		L35,41.49l1.528,3.318c0.138,0.287,0.414,0.488,0.735,0.537l3.515,0.525L38.202,48.451z`],["d",`M47.874,32.213l3.275-3.227c0.389-0.377,0.434-0.895,0.434-1.436v-9.054c3-1.049,5.453-4.214,5.453-7.757
		c0-4.411-3.608-8.157-7.999-8.157H20.962c-4.391,0-7.926,3.746-7.926,8.157c0,3.552,2.547,6.725,5.547,7.766v9.045
		c0,0.541,0.392,1.059,0.78,1.436l3.142,2.914c-4.463,3.64-7.329,9.176-7.329,15.369c0,10.936,8.893,19.833,19.829,19.833
		c10.936,0,19.831-8.897,19.831-19.833C54.835,41.247,52.125,35.854,47.874,32.213z M40.583,28.231v-9.648h7v8.122l-3.041,3.145
		C43.299,29.17,41.583,28.634,40.583,28.231z M38.583,18.583v9.184c-1-0.205-2.312-0.33-3.512-0.33
		c-1.192,0-2.488,0.124-3.488,0.326v-9.18H38.583z M17,10.583c0-2.209,1.774-4,3.962-4h27.55l0.316-0.025
		c2.189,0,4.067,1.999,4.067,4.208c0,2.208-1.669,3.817-3.858,3.817H20.962C18.774,14.583,17,12.791,17,10.583z M22.583,26.705
		v-8.122h7v9.643c-1,0.374-2.536,0.871-3.708,1.488L22.583,26.705z M35,63.103c-8.745,0-15.833-7.087-15.833-15.833
		S26.255,31.437,35,31.437s15.833,7.087,15.833,15.833S43.745,63.103,35,63.103z`],["d",`M32.5,36.637c0.027,0,0.055-0.001,0.083-0.003c0.246-0.021,0.498-0.031,0.75-0.031c0.553,0,1-0.447,1-1s-0.447-1-1-1
		c-0.307,0-0.613,0.013-0.914,0.037c-0.55,0.046-0.96,0.528-0.915,1.079C31.547,36.241,31.984,36.637,32.5,36.637z`],["d",`M29.584,37.419c0.502-0.23,0.723-0.824,0.492-1.326c-0.231-0.503-0.826-0.721-1.326-0.492
		c-3.898,1.789-6.417,5.715-6.417,10.003c0,0.553,0.447,1,1,1s1-0.447,1-1C24.333,42.095,26.395,38.883,29.584,37.419z`],[1,"font-medium"],[1,"bg-blue-100","text-blue-700","dark:bg-blue-700","dark:text-blue-200","px-1.5","py-0.5","rounded-full","mx-1","inline-block",3,"click"],[1,"flex","items-center","text-sm","sm:text-xs","text-gray-500","dark:text-gray-300","mb-2","flex","gap-1"],["version","1.1","id","Capa_1","xmlns","http://www.w3.org/2000/svg","stroke","currentColor","stroke-width","1.5",0,"xmlns","xlink","http://www.w3.org/1999/xlink","viewBox","-3 0 60 60",0,"xml","space","preserve",1,"w-6","h-6","transition-all",2,"enable-background","new 0 0 49.495 49.495"],["d",`M1.434,28.084c1.527,0.188,3.644,0.847,3.644,1.587c0,0.207,0.128,0.393,0.321,0.467c0.189,0.073,0.412,0.021,0.551-0.133
			c0.026-0.027,2.688-2.917,7.878-2.917c5.405,0,8.5,2.556,8.5,3.25c0,0.241,0.172,0.447,0.408,0.491
			c0.24,0.044,0.471-0.087,0.559-0.312c0.019-0.051,1.904-4.85,4.922-4.85c0.01,0,0.021,0,0.027,0
			c1.557,0.018,4.362,0.042,6.073,2.143c0.193,0.269,0.318,0.438,0.354,0.486c0.16,0.223,0.467,0.271,0.688,0.116
			s0.281-0.456,0.136-0.686c-0.118-0.184-0.243-0.354-0.372-0.518c-1.658-2.314-8.548-12.151-8.548-15.794
			c0-0.194-0.112-0.371-0.288-0.453c-0.175-0.083-0.382-0.056-0.531,0.068c-0.058,0.047-5.736,4.688-10.149,1.041
			c-0.052-0.056-1.274-1.379-0.466-2.437c0.094-0.123,0.124-0.282,0.085-0.432s-0.146-0.272-0.289-0.333
			c-0.008-0.003-0.812-0.354-1.062-1.093c-0.164-0.483-0.062-1.055,0.304-1.7c1.356-2.392,3.701-4.431,3.779-4.506
			c0.012-0.014,1.186-1.341,3.882,0.116c0.351,0.189,0.768,0.409,1.236,0.656c3.612,1.901,10.334,5.439,12.925,9.109
			c0.548,0.773,1.248,1.658,2.062,2.682c3.635,4.578,9.113,11.486,9.43,19.683c-0.25,0.541-1.715,3.412-5.574,5.773
			c-3.948,2.418-11.291,4.786-23.824,2.332c-0.13-0.025-0.272,0.002-0.385,0.082c-0.113,0.079-0.187,0.2-0.206,0.338
			c-0.006,0.039-0.591,3.967-2.71,6.318c-0.185,0.205-0.168,0.521,0.037,0.706c0.096,0.086,0.216,0.128,0.335,0.128
			c0.137,0,0.272-0.056,0.372-0.166c1.867-2.074,2.626-5.123,2.865-6.331c3.566,0.67,6.729,0.956,9.533,0.956
			c16.356-0.001,20.479-9.74,20.523-9.854c0.026-0.064,0.038-0.135,0.036-0.203c-0.276-8.578-5.917-15.683-9.646-20.385
			c-0.806-1.012-1.496-1.887-2.025-2.638c-2.729-3.866-9.592-7.477-13.278-9.417c-0.465-0.245-0.879-0.463-1.228-0.651
			c-3.397-1.837-5.051,0.036-5.063,0.062c-0.102,0.087-2.499,2.169-3.941,4.715c-0.515,0.908-0.643,1.758-0.378,2.525
			c0.237,0.689,0.741,1.144,1.126,1.405c-0.558,1.27,0.255,2.644,0.868,3.285c4.082,3.376,8.941,0.736,10.749-0.476
			c0.651,3.412,4.48,9.436,6.937,13.036c-1.628-0.668-3.354-0.686-4.443-0.695c-2.725-0.035-4.565,2.925-5.363,4.513
			c-1.268-1.495-4.704-3.096-8.974-3.096c-4.277,0-6.947,1.781-8.048,2.708c-0.904-1.229-3.599-1.627-4.225-1.704
			c-0.268-0.035-0.522,0.161-0.557,0.437C0.965,27.799,1.16,28.05,1.434,28.084z`],["d",`M30.738,39.531c1.036,0,2.114-0.15,3.146-0.551c1.934-0.75,3.356-2.25,4.239-4.457c0.104-0.256-0.021-0.547-0.276-0.65
			c-0.256-0.103-0.547,0.021-0.647,0.279c-0.771,1.938-2.013,3.248-3.671,3.895c-3.604,1.402-8.104-0.721-8.146-0.743
			c-0.25-0.119-0.549-0.015-0.668,0.233c-0.12,0.249-0.016,0.547,0.233,0.667C25.093,38.275,27.739,39.531,30.738,39.531z`],["class","text-center text-xs bg-purple-100 text-purple-700 dark:bg-purple-700 dark:text-purple-200 px-1.5 py-0.5 rounded-full mx-1 inline-block",3,"click",4,"ngFor","ngForOf"],[1,"text-center","text-xs","bg-purple-100","text-purple-700","dark:bg-purple-700","dark:text-purple-200","px-1.5","py-0.5","rounded-full","mx-1","inline-block",3,"click"],[1,"text-sm","sm:text-xs","text-gray-500","dark:text-gray-300","flex","gap-1"],["xmlns","http://www.w3.org/2000/svg","fill","none","viewBox","-5 0 32 32","stroke-width","1.5","stroke","currentColor",1,"w-6","h-6","transition-all"],["stroke-linecap","round","stroke-linejoin","round","d","M6.75 3v2.25M17.25 3v2.25M3 18.75V7.5a2.25 2.25 0 012.25-2.25h13.5A2.25 2.25 0 0121 7.5v11.25m-18 0A2.25 2.25 0 005.25 21h13.5A2.25 2.25 0 0021 18.75m-18 0v-7.5A2.25 2.25 0 015.25 9h13.5A2.25 2.25 0 0121 11.25v7.5m-9-3.75h.008v.008H12v-.008zM12 15h.008v.008H12V15zm0 2.25h.008v.008H12v-.008zM9.75 15h.008v.008H9.75V15zm0 2.25h.008v.008H9.75v-.008zM7.5 15h.008v.008H7.5V15zm0 2.25h.008v.008H7.5v-.008zm6.75-4.5h.008v.008h-.008v-.008zm0 2.25h.008v.008h-.008V15zm0 2.25h.008v.008h-.008v-.008zm2.25-4.5h.008v.008H16.5v-.008zm0 2.25h.008v.008H16.5V15z"],[1,"text-xs","text-gray-500","dark:text-gray-300","flex","gap-1"],["xmlns","http://www.w3.org/2000/svg","fill","none","viewBox","-5 0 32 32","stroke-width","1.5","stroke","currentColor",1,"w-6","h-6","transition-all","mb-1"],["stroke-linecap","round","stroke-linejoin","round","d","M12 6v6h4.5m4.5 0a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z"],[1,"text-sm","sm:text-xs","text-gray-500","dark:text-gray-300","italic","flex","gap-1"],["appPress","",1,"favourite-span",3,"click","shortPress","longPress","title"],[1,"text-2xs","bg-yellow-300","text-yellow-600","dark:bg-yellow-700","dark:text-yellow-200","text-2xs","text-white","px-1.5","py-0.5","rounded-full","mx-1","mb-1","inline-block","flex","gap-1"],["xmlns","http://www.w3.org/2000/svg","viewBox","0 0 20 20","fill","currentColor",1,"h-5","w-5"],["fill-rule","evenodd","d","M3.28 2.22a.75.75 0 00-1.06 1.06l14.5 14.5a.75.75 0 101.06-1.06l-1.745-1.745a10.029 10.029 0 003.3-4.38 1.651 1.651 0 000-1.185A10.004 10.004 0 009.999 3a9.956 9.956 0 00-4.744 1.194L3.28 2.22zM7.752 6.69l1.092 1.092a2.5 2.5 0 013.374 3.373l1.091 1.092a4 4 0 00-5.557-5.557z","clip-rule","evenodd"],["d","M10.748 13.93l2.523 2.523a9.987 9.987 0 01-3.27.547c-4.257 0-7.893-2.66-9.336-6.41a1.651 1.651 0 010-1.186A10.007 10.007 0 012.839 6.02L6.07 9.252a4 4 0 004.678 4.678z"],["appPress","",1,"favourite-span",3,"shortPress","longPress","title"],[1,"bg-primary","text-2xs","text-white","px-1.5","py-0.5","rounded-full","mx-1","mb-1","inline-block","flex","gap-1"],["xmlns","http://www.w3.org/2000/svg","viewBox","0 0 24 24","fill","none","stroke","currentColor","stroke-width","2","stroke-linecap","round","stroke-linejoin","round",1,"h-5","w-5"],["d","M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"],["displayMode","dropdown",3,"itemClick","closeMenu","items","isVisible"],["displayMode","compact-bar",3,"itemClick","closeMenu","items","isVisible"],[1,"text-center","py-12","px-6","bg-white","dark:bg-gray-700","rounded-lg","shadow-md"],["xmlns","http://www.w3.org/2000/svg","fill","none","viewBox","0 0 24 24","stroke-width","1.5","stroke","currentColor",1,"w-16","h-16","mx-auto","text-gray-400","dark:text-gray-200","mb-4"],["stroke-linecap","round","stroke-linejoin","round","d","M3.75 12h16.5m-16.5 3.75h16.5M3.75 19.5h16.5M5.625 4.5h12.75a1.875 1.875 0 0 1 0 3.75H5.625a1.875 1.875 0 0 1 0-3.75Z"],[1,"text-xl","font-semibold","text-gray-700","dark:text-gray-300","mb-2"],[1,"text-gray-500","dark:text-gray-400","mb-6"],["class","bg-primary hover:bg-primary-dark text-white font-semibold py-2 px-6 rounded-md shadow-md hover:shadow-lg transition-all duration-300 focus:outline-none focus:ring-2 focus:ring-primary-light focus:ring-opacity-75",3,"click",4,"ngIf"],[1,"bg-primary","hover:bg-primary-dark","text-white","font-semibold","py-2","px-6","rounded-md","shadow-md","hover:shadow-lg","transition-all","duration-300","focus:outline-none","focus:ring-2","focus:ring-primary-light","focus:ring-opacity-75",3,"click"],[1,"text-center","py-10"],["xmlns","http://www.w3.org/2000/svg","fill","none","viewBox","0 0 24 24",1,"animate-spin","h-8","w-8","text-primary","dark:text-primary-light","mx-auto"],["cx","12","cy","12","r","10","stroke","currentColor","stroke-width","4",1,"opacity-25"],["fill","currentColor","d","M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z",1,"opacity-75"],[1,"text-lg","text-gray-600","dark:text-gray-400","mt-3"],["type","button",1,"fixed","bottom-20","right-4","z-40","bg-primary","dark:bg-primary-dark","text-white","rounded-full","p-3","shadow-lg","hover:bg-primary-dark","dark:hover:bg-primary-light","focus:outline-none","focus:ring-2","focus:ring-offset-2","focus:ring-primary-focus","dark:focus:ring-offset-gray-900","transition-opacity","animate-fade-in",3,"click"],["xmlns","http://www.w3.org/2000/svg","fill","none","viewBox","0 0 24 24","stroke-width","2.5","stroke","currentColor",1,"w-6","h-6"],["stroke-linecap","round","stroke-linejoin","round","d","M4.5 15.75l7.5-7.5 7.5 7.5"]],template:function(e,o){if(e&1){let n=ye();k(0,"div",2)(1,"header",3)(2,"h1",4),O(3,"My Routines"),T(),k(4,"button",5),ne("click",function(){return J(n),ee(o.toggleFilterAccordion())}),_e(),k(5,"svg",6),ce(6,"path",7),T(),He(),k(7,"span",8),O(8,"Toggle Filters"),T()()(),k(9,"div",9),se(10,IO,5,0,"div",10),k(11,"div",11)(12,"button",12),_e(),k(13,"svg",13),ce(14,"path",14),T(),O(15," START NEW SESSION "),T()()(),He(),k(16,"div",15)(17,"div",16)(18,"h2",17),O(19,"Filter Routines"),T(),k(20,"div",18)(21,"div")(22,"label",19),O(23,"Search Name/Desc."),T(),k(24,"input",20),ne("input",function(s){return J(n),ee(o.onRoutineSearchTermChange(s))}),T()(),k(25,"div")(26,"label",21),O(27,"Goal"),T(),k(28,"select",22),ne("change",function(s){return J(n),ee(o.onRoutineGoalChange(s))}),k(29,"option",23),O(30,"Any Goal"),T(),se(31,TO,3,4,"option",24),T()(),k(32,"div")(33,"label",25),O(34,"Targets Muscle"),T(),k(35,"select",26),ne("change",function(s){return J(n),ee(o.onRoutineMuscleGroupChange(s))}),k(36,"option",23),O(37,"Any Muscle Group"),T(),se(38,EO,3,4,"option",24),T()(),k(39,"div",27)(40,"label",28),O(41,"Equipment"),T(),k(42,"div",29),se(43,NO,3,7,"button",30),T()(),k(44,"div",31)(45,"label",32),O(46," Max Duration: "),k(47,"strong",33),O(48),T()(),k(49,"input",34),ne("input",function(s){return J(n),ee(o.onDurationFilterChange(s))}),T()(),k(50,"div",35)(51,"div",36)(52,"div")(53,"p",37),O(54,"Hidden routines"),T()(),k(55,"label",38)(56,"input",39),ne("change",function(){return J(n),ee(o.showHiddenRoutines.set(!o.showHiddenRoutines()))}),T(),ce(57,"div",40),k(58,"span",41),O(59),T()()(),k(60,"div",36)(61,"div")(62,"p",37),O(63,"Favourite routines"),T()(),k(64,"label",42)(65,"input",43),ne("change",function(){return J(n),ee(o.showFavouriteRoutinesOnly.set(!o.showFavouriteRoutinesOnly()))}),T(),ce(66,"div",40),k(67,"span",41),O(68),T()()()()(),k(69,"div",44)(70,"button",45),ne("click",function(){return J(n),ee(o.clearRoutineFilters())}),_e(),k(71,"svg",46),ce(72,"path",47),T(),O(73," CLEAR FILTERS "),T(),se(74,RO,8,2,"div",48),T()()(),se(75,KO,4,2,"div",49),et(76,"async"),se(77,qO,6,0,"ng-template",null,0,Lo),He(),k(79,"button",50),ne("click",function(){return J(n),ee(o.startKB())}),ce(80,"img",51),O(81," START TRACKING (VERY WIP) "),T(),se(82,jO,5,0,"button",52),T()}if(e&2){let n=Fo(78);R(5),Oo("rotate-180",o.isFilterAccordionOpen()),R(5),L("ngIf",o.allRoutinesForList().length>0),R(6),np("max-height",o.isFilterAccordionOpen()?"1000px":"0px"),Oo("mb-6",o.isFilterAccordionOpen()),R(8),L("value",o.routineSearchTerm()),R(4),L("value",o.selectedRoutineGoal()||""),R(3),L("ngForOf",o.uniqueRoutineGoals()),R(4),L("value",o.selectedRoutineMuscleGroup()||""),R(3),L("ngForOf",o.uniqueRoutineMuscleGroups()),R(5),L("ngForOf",o.uniqueRoutineEquipments()),R(5),Se("",o.selectedMaxDuration()," min"),R(),L("max",o.maxDuration())("value",o.selectedMaxDuration()),R(7),L("checked",o.showHiddenRoutines()),R(3),Se(" ",o.showHiddenRoutines()?"Hide":"Show"," Hidden Routines "),R(6),L("checked",o.showFavouriteRoutinesOnly()),R(3),Se(" ",o.showFavouriteRoutinesOnly()?"Normal":"Only"," Favourite Routines "),R(6),L("ngIf",o.allRoutinesForList().length>0),R(),L("ngIf",Dt(76,25,o.routines$))("ngIfElse",n),R(5),L("src",o.getIconPath("kettlebell"),Cd),R(2),L("ngIf",o.showBackToTopButton())}},dependencies:[wo,Qn,Jo,So,SS,Sa,wa,Jn,$S,Ra],encapsulation:2,data:{animation:[Zx("slideInOutActions",[sp("void",ip({height:"0px",opacity:0,overflow:"hidden",paddingTop:"0",paddingBottom:"0",marginTop:"0",marginBottom:"0"})),sp("*",ip({height:"*",opacity:1,overflow:"hidden",paddingTop:"0.5rem",paddingBottom:"0.5rem"})),Ed("void <=> *",Td("200ms ease-in-out"))]),Zx("dropdownMenu",[sp("void",ip({opacity:0,transform:"scale(0.75) translateY(-10px)",transformOrigin:"top right"})),sp("*",ip({opacity:1,transform:"scale(1) translateY(0)",transformOrigin:"top right"})),Ed("void => *",[Td("150ms cubic-bezier(0.25, 0.8, 0.25, 1)")]),Ed("* => void",[Td("100ms cubic-bezier(0.25, 0.8, 0.25, 1)")])])]}})};var $a=class r{decimalPipe=De(en);unitsService=De(ri);transform(t,e="1.0-2"){if(t==null)return null;let o=this.unitsService.convertFromKg(t,this.unitsService.currentUnit()),n=this.decimalPipe.transform(o,e),i=this.unitsService.getUnitLabel();return`${n} ${i}`}static \u0275fac=function(e){return new(e||r)};static \u0275pipe=gS({name:"weightUnit",type:r,pure:!0})};var Ud=class r{constructor(t,e){this.renderer=t;this.el=e;this.mouseDownHandler=this.onMouseDown.bind(this),this.touchStartHandler=this.onTouchStart.bind(this),this.pressEndHandler=this.onPressEnd.bind(this)}longPressEnabled=!0;longPressDelay=300;longPressClass="is-long-pressing";longPress=new bn;timer;isPressing=!1;mouseDownHandler;touchStartHandler;pressEndHandler;ngOnInit(){let t=this.el.nativeElement;t.addEventListener("mousedown",this.mouseDownHandler),t.addEventListener("mouseup",this.pressEndHandler),t.addEventListener("mouseleave",this.pressEndHandler),t.addEventListener("touchstart",this.touchStartHandler,{passive:!1}),t.addEventListener("touchend",this.pressEndHandler),t.addEventListener("touchcancel",this.pressEndHandler)}onMouseDown(t){this.longPressEnabled&&this.startTimer()}onTouchStart(t){this.longPressEnabled&&this.startTimer()}startTimer(){this.isPressing=!0,this.timer=setTimeout(()=>{this.isPressing&&(this.renderer.addClass(this.el.nativeElement,this.longPressClass),this.longPress.emit())},this.longPressDelay)}onPressEnd(){this.timer&&(clearTimeout(this.timer),this.timer=null),this.isPressing=!1,this.renderer.removeClass(this.el.nativeElement,this.longPressClass)}ngOnDestroy(){let t=this.el.nativeElement;t.removeEventListener("mousedown",this.mouseDownHandler),t.removeEventListener("mouseup",this.pressEndHandler),t.removeEventListener("mouseleave",this.pressEndHandler),t.removeEventListener("touchstart",this.touchStartHandler),t.removeEventListener("touchend",this.pressEndHandler),t.removeEventListener("touchcancel",this.pressEndHandler),this.onPressEnd()}static \u0275fac=function(e){return new(e||r)(op(hS),op(xa))};static \u0275dir=va({type:r,selectors:[["","appLongPressDrag",""]],inputs:{longPressEnabled:"longPressEnabled",longPressDelay:"longPressDelay",longPressClass:"longPressClass"},outputs:{longPress:"longPress"}})};var Gd=class r{textAreaElement=De(xa).nativeElement;onInput(){this.adjustHeight()}ngOnInit(){setTimeout(()=>this.adjustHeight(),0)}adjustHeight(){this.textAreaElement.style.height="auto",this.textAreaElement.style.height=`${this.textAreaElement.scrollHeight}px`}static \u0275fac=function(e){return new(e||r)};static \u0275dir=va({type:r,selectors:[["textarea","appAutoGrow",""]],hostBindings:function(e,o){e&1&&ne("input",function(){return o.onInput()})}})};var XO=["setRepsInput"],YO=["expandedSetElement"],Hd=(r,t)=>({"border-red-500 dark:border-red-400":r,"border-gray-300 dark:border-gray-500":t}),QO=r=>({"superset-spacing":r}),ZO=(r,t)=>({"absolute top-1 right-1 sm:static":r,"absolute top-2 right-2":t}),JO=(r,t)=>({"text-m":r,"text-lg":t}),eL=(r,t)=>({"sm:inline sm:mr-1":r,"block text-xs leading-tight":t}),tL=(r,t)=>({"border-b border-orange-300 dark:border-orange-600":r,"border-b border-gray-200 dark:border-gray-600":t}),WS=()=>["warmup","dropset","failure","amrap","myorep","restpause"],rL=(r,t)=>({"bg-gray-50 dark:bg-gray-700/50 text-gray-800 dark:text-gray-200":r,"cursor-default":t}),oL=r=>({"bg-gray-100 dark:bg-gray-800/50":r});function nL(r,t){if(r&1&&(k(0,"div",18),O(1),T()),r&2){let e=M();R(),Se(" ",e.errorMessage(),`
`)}}function iL(r,t){if(r&1){let e=ye();k(0,"button",27),ne("click",function(){J(e);let n=M(2);return ee(n.enableEditMode())}),_e(),k(1,"svg",25),ce(2,"path",28),T(),O(3," EDIT "),T()}}function sL(r,t){if(r&1){let e=ye();k(0,"div",19)(1,"button",20),ne("click",function(){J(e);let n=M();return ee(n.startCurrentWorkout())}),_e(),k(2,"svg",21),ce(3,"path",22),T(),O(4," START "),T(),se(5,iL,4,0,"button",23),He(),k(6,"button",24),ne("click",function(){J(e);let n=M();return ee(n.deleteCurrentRoutine())}),_e(),k(7,"svg",25),ce(8,"path",26),T(),O(9," DELETE "),T()()}if(r&2){let e=M();R(5),L("ngIf",e.isViewMode)}}function aL(r,t){if(r&1&&(k(0,"div")(1,"label",30),O(2),T()()),r&2){let e,o=M(2);R(2),We((e=o.builderForm.get("name"))==null?null:e.value)}}function lL(r,t){r&1&&(k(0,"span"),O(1,"Routine name is required."),T())}function uL(r,t){if(r&1&&(k(0,"div",34),se(1,lL,2,0,"span",13),T()),r&2){let e,o=M(3);R(),L("ngIf",(e=o.builderForm.get("name"))==null||e.errors==null?null:e.errors.required)}}function cL(r,t){if(r&1&&(k(0,"div")(1,"label",31),O(2,"Routine Name"),T(),ce(3,"input",32),se(4,uL,2,1,"div",33),T()),r&2){let e,o,n=M(2);R(3),L("ngClass",Tr(2,Hd,((e=n.builderForm.get("name"))==null?null:e.invalid)&&((e=n.builderForm.get("name"))==null?null:e.touched),!((e=n.builderForm.get("name"))!=null&&e.invalid&&((e=n.builderForm.get("name"))!=null&&e.touched)))),R(),L("ngIf",((o=n.builderForm.get("name"))==null?null:o.invalid)&&(((o=n.builderForm.get("name"))==null?null:o.dirty)||((o=n.builderForm.get("name"))==null?null:o.touched)))}}function pL(r,t){if(r&1&&(k(0,"div"),ce(1,"p",35),T()),r&2){let e=M(2);R(),L("innerHTML",e.sanitizedDescription,wd)}}function dL(r,t){r&1&&(k(0,"div")(1,"label",36),O(2,"Description (Optional)"),T(),ce(3,"textarea",37),T())}function mL(r,t){if(r&1&&(k(0,"div")(1,"label",38)(2,"span",39),O(3,"Goal: "),T(),O(4),T()()),r&2){let e,o=M(2);R(4),Se(" ",((e=o.builderForm.get("goal"))==null||e.value==null?null:e.value.toUpperCase())||"")}}function fL(r,t){if(r&1&&(k(0,"option",43),O(1),T()),r&2){let e=t.$implicit;L("value",e.value),R(),Se("",e.label," ")}}function hL(r,t){if(r&1&&(k(0,"div")(1,"select",40)(2,"option",41),O(3,"-- Set routine goal --"),T(),se(4,fL,2,2,"option",42),T()()),r&2){let e=M(2);R(4),L("ngForOf",e.routineGoals)}}function gL(r,t){if(r&1&&(k(0,"div",44)(1,"span",39),O(2,"Est:"),T(),O(3),T()),r&2){let e=M(2);R(3),Se(" ~",e.getRoutineDuration()," min ")}}function xL(r,t){if(r&1&&(vo(0),se(1,aL,3,1,"div",13)(2,cL,5,5,"div",13)(3,pL,2,1,"div",13)(4,dL,4,0,"div",13)(5,mL,5,1,"div",13)(6,hL,5,1,"div",13),k(7,"div"),se(8,gL,4,1,"div",29),T(),bo()),r&2){let e=M();R(),L("ngIf",e.isViewMode),R(),L("ngIf",e.isEditMode||e.isNewMode),R(),L("ngIf",e.isViewMode),R(),L("ngIf",e.isEditMode||e.isNewMode),R(),L("ngIf",e.isViewMode),R(),L("ngIf",e.isEditMode||e.isNewMode),R(2),L("ngIf",e.routine&&e.getRoutineDuration()>0)}}function yL(r,t){r&1&&(k(0,"span"),O(1,"Date is required."),T())}function vL(r,t){if(r&1&&(k(0,"div",34),se(1,yL,2,0,"span",13),T()),r&2){let e,o=M(2);R(),L("ngIf",(e=o.builderForm.get("workoutDate"))==null||e.errors==null?null:e.errors.required)}}function bL(r,t){r&1&&(k(0,"span"),O(1,"Start time is required."),T())}function SL(r,t){if(r&1&&(k(0,"div",34),se(1,bL,2,0,"span",13),T()),r&2){let e,o=M(2);R(),L("ngIf",(e=o.builderForm.get("startTime"))==null||e.errors==null?null:e.errors.required)}}function wL(r,t){r&1&&(k(0,"span"),O(1,"Min duration is 1."),T())}function CL(r,t){if(r&1&&(k(0,"div",34),se(1,wL,2,0,"span",13),T()),r&2){let e,o=M(2);R(),L("ngIf",(e=o.builderForm.get("durationMinutes"))==null||e.errors==null?null:e.errors.min)}}function _L(r,t){if(r&1&&(k(0,"option",43),O(1),T()),r&2){let e=t.$implicit;L("value",e.id),R(),We(e.name)}}function kL(r,t){if(r&1&&(vo(0),k(1,"div",45)(2,"div")(3,"label",46),O(4,"Workout Date"),T(),ce(5,"input",47),se(6,vL,2,1,"div",33),T(),k(7,"div")(8,"label",48),O(9,"Start Time"),T(),ce(10,"input",49),se(11,SL,2,1,"div",33),T(),k(12,"div")(13,"label",50),O(14,"Duration (min)"),T(),ce(15,"input",51),se(16,CL,2,1,"div",33),T()(),k(17,"div")(18,"label",52),O(19,"Workout Title (Optional)"),T(),ce(20,"input",53),T(),k(21,"div")(22,"label",54),O(23,"Based on Routine (Optional)"),T(),k(24,"select",55)(25,"option",41),O(26,"-- Log Ad-hoc Exercises --"),T(),se(27,_L,2,2,"option",42),T()(),k(28,"div")(29,"label",56),O(30,"Overall Notes (Optional)"),T(),ce(31,"textarea",57),T(),bo()),r&2){let e,o,n,i,s,a,l=M();R(5),L("ngClass",Tr(7,Hd,((e=l.builderForm.get("workoutDate"))==null?null:e.invalid)&&((e=l.builderForm.get("workoutDate"))==null?null:e.touched),!((e=l.builderForm.get("workoutDate"))!=null&&e.invalid&&((e=l.builderForm.get("workoutDate"))!=null&&e.touched)))),R(),L("ngIf",((o=l.builderForm.get("workoutDate"))==null?null:o.invalid)&&(((o=l.builderForm.get("workoutDate"))==null?null:o.dirty)||((o=l.builderForm.get("workoutDate"))==null?null:o.touched))),R(4),L("ngClass",Tr(10,Hd,((n=l.builderForm.get("startTime"))==null?null:n.invalid)&&((n=l.builderForm.get("startTime"))==null?null:n.touched),!((n=l.builderForm.get("startTime"))!=null&&n.invalid&&((n=l.builderForm.get("startTime"))!=null&&n.touched)))),R(),L("ngIf",((i=l.builderForm.get("startTime"))==null?null:i.invalid)&&(((i=l.builderForm.get("startTime"))==null?null:i.dirty)||((i=l.builderForm.get("startTime"))==null?null:i.touched))),R(4),L("ngClass",Tr(13,Hd,((s=l.builderForm.get("durationMinutes"))==null?null:s.invalid)&&((s=l.builderForm.get("durationMinutes"))==null?null:s.touched),!((s=l.builderForm.get("durationMinutes"))!=null&&s.invalid&&((s=l.builderForm.get("durationMinutes"))!=null&&s.touched)))),R(),L("ngIf",((a=l.builderForm.get("durationMinutes"))==null?null:a.invalid)&&(((a=l.builderForm.get("durationMinutes"))==null?null:a.dirty)||((a=l.builderForm.get("durationMinutes"))==null?null:a.touched))),R(11),L("ngForOf",l.availableRoutines)}}function IL(r,t){if(r&1){let e=ye();k(0,"button",66),ne("click",function(){J(e);let n=M(2);return ee(n.openExerciseSelectionModal())}),O(1," + ADD EXERCISE "),T()}}function TL(r,t){if(r&1){let e=ye();k(0,"button",82),ne("click",function(){J(e);let n=M(5);return ee(n.groupSelectedAsSuperset())}),O(1),T()}if(r&2){let e=M(5);L("disabled",e.isViewMode),R(),Se(" Group Superset (",e.selectedExerciseIndicesForSuperset().length,") ")}}function EL(r,t){if(r&1){let e=ye();k(0,"button",83),ne("click",function(){J(e);let n=M(2).index,i=M(3);return ee(i.ungroupSuperset(n))}),O(1),T()}if(r&2){let e=M(5);L("disabled",e.isViewMode),R(),Se(" Ungroup Superset (",e.selectedExerciseIndicesForSuperset().length,") ")}}function NL(r,t){if(r&1&&(k(0,"div",79),se(1,TL,2,2,"button",80)(2,EL,2,2,"button",81),T()),r&2){let e=M(4);R(),L("ngIf",!e.canUngroupSelectedExercises()),R(),L("ngIf",e.canUngroupSelectedExercises())}}function RL(r,t){if(r&1&&(k(0,"div",84),_e(),k(1,"svg",85),ce(2,"path",86),T()()),r&2){let e=M(4);L("ngClass",Tr(1,ZO,e.isCompactView,!e.isCompactView&&(e.mode!=="routineBuilder"||!e.isEditMode||e.isViewMode)))}}function $L(r,t){if(r&1){let e=ye();k(0,"input",87),ne("change",function(n){J(e);let i=M().index,s=M(3);return ee(s.toggleExerciseSelectionForSuperset(i,n))}),T()}if(r&2){let e=M().index,o=M(3);L("id","superset-select-"+e)("checked",o.selectedExerciseIndicesForSuperset().includes(e))("disabled",o.isViewMode)}}function PL(r,t){if(r&1&&(k(0,"span",93),O(1),T()),r&2){let e,o,n=M(2),i=n.$implicit,s=n.index,a=M(3);L("ngClass",Tr(3,eL,!a.isCompactView&&((e=a.expandedSetPath())==null?null:e.exerciseIndex)===s,a.isCompactView&&((e=a.expandedSetPath())==null?null:e.exerciseIndex)!==s)),R(),Bt(" Superset (",(((o=i.get("supersetOrder"))==null?null:o.value)??0)+1," of ",(o=i.get("supersetSize"))==null?null:o.value,") ")}}function AL(r,t){if(r&1&&(k(0,"div",94),O(1),T()),r&2){let e,o=M(2).$implicit;R(),Bt(" ",((e=o.get("rounds"))==null?null:e.value)||1," ",(((e=o.get("rounds"))==null?null:e.value)||1)===1?"round":"rounds"," ")}}function DL(r,t){if(r&1&&(k(0,"div",95),O(1),T()),r&2){let e=M(2).$implicit,o=M(3);R(),Bt(" ",o.getSetsFormArray(e).controls.length," ",o.getSetsFormArray(e).controls.length===1?"set":"sets"," ")}}function FL(r,t){if(r&1&&(k(0,"div",88)(1,"h3",89),se(2,PL,2,6,"span",90),O(3),T(),se(4,AL,2,2,"div",91)(5,DL,2,2,"div",92),T()),r&2){let e,o,n,i,s,a=M(),l=a.$implicit,u=a.index,c=M(3);R(),L("ngClass",Tr(5,JO,c.isCompactView&&((e=c.expandedSetPath())==null?null:e.exerciseIndex)!==u,!c.isCompactView&&((e=c.expandedSetPath())==null?null:e.exerciseIndex)===u)),R(),L("ngIf",c.mode==="routineBuilder"&&((o=l.get("supersetId"))==null?null:o.value)),R(),Se(" ",((n=l.get("exerciseName"))==null?null:n.value)||"Select Exercise"," "),R(),L("ngIf",((i=l.get("supersetId"))==null?null:i.value)&&c.getSetsFormArray(l).controls.length>0),R(),L("ngIf",(c.isCompactView||!c.isCompactView&&((s=c.expandedSetPath())==null?null:s.exerciseIndex)!==u)&&c.getSetsFormArray(l).controls.length>0)}}function OL(r,t){if(r&1){let e=ye();k(0,"div",96)(1,"button",97),ne("click",function(n){J(e);let i=M().index;return M(3).removeExercise(i),ee(n.stopPropagation())}),_e(),k(2,"svg",98),ce(3,"rect",99)(4,"path",100),T()()()}}function LL(r,t){if(r&1&&(k(0,"span",113),O(1),T()),r&2){let e,o=M(2).$implicit;R(),Bt(" Superset (",(((e=o.get("supersetOrder"))==null?null:e.value)??0)+1," of ",(e=o.get("supersetSize"))==null?null:e.value,") ")}}function ML(r,t){if(r&1){let e=ye();k(0,"div",114)(1,"label",115),O(2,"Rounds:"),T(),k(3,"input",116),ne("change",function(){let n;J(e);let i=M(2),s=i.$implicit,a=i.index,l=M(3);return ee(l.syncSupersetRounds((n=s.get("supersetId"))==null?null:n.value,(n=s.get("rounds"))==null?null:n.value,a))}),T()()}if(r&2){let e,o=M(2),n=o.$implicit,i=o.index,s=M(3);R(),L("for","rounds-"+i),R(2),L("id","rounds-"+i)("readonly",((e=n.get("supersetId"))==null?null:e.value)&&(((e=n.get("supersetOrder"))==null?null:e.value)??0)>0||s.isViewMode)}}function BL(r,t){if(r&1){let e=ye();k(0,"button",117),ne("click",function(){J(e);let n=M(2).index,i=M(3);return ee(i.removeExercise(n))}),_e(),k(1,"svg",118),ce(2,"rect",99)(3,"path",100),T(),O(4," Remove "),T()}}function VL(r,t){if(r&1){let e=ye();k(0,"button",119),ne("click",function(){J(e);let n=M(2).index,i=M(3);return ee(i.ungroupSuperset(n))}),_e(),k(1,"svg",120),ce(2,"path",121),T(),O(3," Ungroup "),T()}if(r&2){let e=M(5);L("disabled",e.isViewMode)}}function WL(r,t){if(r&1){let e=ye();k(0,"button",129),ne("click",function(n){J(e);let i=M(3),s=i.$implicit,a=i.index;return M(3).addSet(s,a),ee(n.stopPropagation())}),O(1," + Add Set "),T()}}function zL(r,t){if(r&1&&(k(0,"div",130)(1,"div",131),O(2,"#"),T(),k(3,"div",132),O(4,"Type"),T(),k(5,"div",133),O(6),T(),k(7,"div",132),O(8),T(),k(9,"div",131),O(10),T(),k(11,"div",133),O(12),T(),k(13,"div",131),O(14),T(),ce(15,"div",134),T()),r&2){let e=M(6);R(6),We(e.mode==="manualLogEntry"?"Reps Ach.":"Reps"),R(2),Bt("",e.mode==="manualLogEntry"?"Wt Used":"Weight"," (",e.unitsService.getUnitLabel(),")"),R(2),We(e.mode==="manualLogEntry"?"Time Perf.":"Time"),R(2),We(e.mode==="routineBuilder"?"Rest":"Notes"),R(2),We(e.mode==="routineBuilder"?"Tempo":"")}}function UL(r,t){if(r&1&&(vo(0),O(1),bo()),r&2){let e,o=M(2).$implicit;R(),Se("",(e=o.get("restAfterSet"))==null?null:e.value,"s")}}function GL(r,t){if(r&1&&(vo(0),O(1),bo()),r&2){let e,o=M(2).$implicit;R(),We(((e=o.get("notes"))==null?null:e.value)||"-")}}function HL(r,t){if(r&1&&(vo(0),O(1),bo()),r&2){let e,o=M(2).$implicit;R(),We(((e=o.get("tempo"))==null?null:e.value)||"-")}}function KL(r,t){if(r&1){let e=ye();k(0,"div",147)(1,"button",148),ne("click",function(n){J(e);let i=M(2).index,s=M(3),a=s.$implicit,l=s.index;return M(3).removeSet(a,l,i),ee(n.stopPropagation())}),_e(),k(2,"svg",98),ce(3,"rect",99)(4,"path",100),T()()()}}function qL(r,t){r&1&&ce(0,"div",134)}function jL(r,t){if(r&1){let e=ye();k(0,"div",138),ne("click",function(n){J(e);let i=M().index,s=M(3).index,a=M(3);return ee(a.toggleSetExpansion(s,i,n))}),k(1,"div",139),O(2),T(),k(3,"div",140),et(4,"titlecase"),O(5),et(6,"titlecase"),T(),k(7,"div",141),O(8),T(),k(9,"div",141),O(10),et(11,"weightUnit"),T(),k(12,"div",142),O(13),T(),k(14,"div",143),se(15,UL,2,1,"ng-container",13)(16,GL,2,1,"ng-container",13),T(),k(17,"div",144),se(18,HL,2,1,"ng-container",13),T(),se(19,KL,5,0,"div",145)(20,qL,1,0,"div",146),T()}if(r&2){let e,o,n,i,s,a,l,u,c=M(),p=c.$implicit,d=c.index,m=M(6);L("ngClass",Tr(22,rL,!Xx(21,WS).includes(((e=p.get("type"))==null?null:e.value)??"")&&!m.isViewMode,m.isViewMode)),R(2),We(d+1),R(),L("title",Dt(4,14,(o=p.get("type"))==null?null:o.value)),R(2),We(Dt(6,16,(n=p.get("type"))==null?null:n.value)||"Standard"),R(3),We((i=p.get(m.mode==="manualLogEntry"?"repsAchieved":"reps"))==null?null:i.value??"-"),R(2),We(ao(11,18,(s=p.get(m.mode==="manualLogEntry"?"weightUsed":"weight"))==null?null:s.value,"1.0-2")),R(3),We((a=p.get(m.mode==="manualLogEntry"?"durationPerformed":"duration"))!=null&&a.value?((a=p.get(m.mode==="manualLogEntry"?"durationPerformed":"duration"))==null?null:a.value)+"s":"-"),R(),L("title",m.mode==="routineBuilder"?((l=p.get("restAfterSet"))==null?null:l.value)+"s":(l=p.get("notes"))==null?null:l.value),R(),L("ngIf",m.mode==="routineBuilder"),R(),L("ngIf",m.mode==="manualLogEntry"),R(),L("title",(u=p.get("tempo"))==null?null:u.value),R(),L("ngIf",m.mode==="routineBuilder"),R(),L("ngIf",!m.isViewMode),R(),L("ngIf",m.isViewMode)}}function XL(r,t){if(r&1&&(k(0,"option",43),O(1),T()),r&2){let e=t.$implicit;L("value",e.value),R(),We(e.label)}}function YL(r,t){if(r&1&&(k(0,"div")(1,"label",152),O(2,"Tempo"),T(),ce(3,"input",163),T()),r&2){let e=M(2).index,o=M(3).index,n=M(3);R(),L("for","tempo-exp-"+o+"-"+e),R(2),L("id","tempo-exp-"+o+"-"+e)("readonly",n.isViewMode)}}function QL(r,t){if(r&1&&(k(0,"div")(1,"label",152),O(2,"Rest (s)"),T(),ce(3,"input",164),T()),r&2){let e=M(2).index,o=M(3).index,n=M(3);R(),L("for","rest-exp-"+o+"-"+e),R(2),L("id","rest-exp-"+o+"-"+e)("readonly",n.isViewMode)}}function ZL(r,t){if(r&1){let e=ye();k(0,"div",149,0)(2,"div",150)(3,"div",151)(4,"label",152),O(5,"Set Type"),T(),k(6,"select",153),se(7,XL,2,2,"option",42),T()(),k(8,"div")(9,"label",152),O(10),T(),ce(11,"input",154),T(),k(12,"div")(13,"label",152),O(14),T(),ce(15,"input",155),T(),k(16,"div")(17,"label",152),O(18),T(),ce(19,"input",156),T(),se(20,YL,4,3,"div",13)(21,QL,4,3,"div",13),k(22,"div",157)(23,"label",152),O(24,"Set Notes"),T(),ce(25,"input",158),T()(),k(26,"div",159)(27,"button",160),ne("click",function(n){J(e);let i=M(7);return ee(i.collapseExpandedSet(!1,n))}),_e(),k(28,"svg",161),ce(29,"path",162),T()()()()}if(r&2){let e,o=M(),n=o.$implicit,i=o.index,s=M(3).index,a=M(3);L("ngClass",us(27,oL,!Xx(26,WS).includes(((e=n.get("type"))==null?null:e.value)??""))),R(4),L("for","setType-exp-"+s+"-"+i),R(2),L("id","setType-exp-"+s+"-"+i)("disabled",a.isViewMode),R(),L("ngForOf",a.availableSetTypes),R(2),L("for","reps-exp-"+s+"-"+i),R(),Se("Reps ",a.mode==="manualLogEntry"?"(Achieved)":""),R(),L("id","reps-exp-"+s+"-"+i)("formControlName",a.mode==="manualLogEntry"?"repsAchieved":"reps")("readonly",a.isViewMode),R(2),L("for","weight-exp-"+s+"-"+i),R(),Bt("Weight (",a.unitsService.getUnitLabel(),") ",a.mode==="manualLogEntry"?"(Used)":""),R(),L("id","weight-exp-"+s+"-"+i)("formControlName",a.mode==="manualLogEntry"?"weightUsed":"weight")("readonly",a.isViewMode),R(2),L("for","duration-exp-"+s+"-"+i),R(),Se("Time (s) ",a.mode==="manualLogEntry"?"(Performed)":""),R(),L("id","duration-exp-"+s+"-"+i)("formControlName",a.mode==="manualLogEntry"?"durationPerformed":"duration")("readonly",a.isViewMode),R(),L("ngIf",a.mode==="routineBuilder"),R(),L("ngIf",a.mode==="routineBuilder"),R(2),L("for","setNotes-exp-"+s+"-"+i),R(2),L("id","setNotes-exp-"+s+"-"+i)("readonly",a.isViewMode)}}function JL(r,t){if(r&1&&(k(0,"div",135),se(1,jL,21,25,"div",136)(2,ZL,30,29,"div",137),T()),r&2){let e=t.index,o=M(3).index,n=M(3);L("formGroupName",e),R(),L("ngIf",!n.isSetExpanded(o,e)),R(),L("ngIf",n.isSetExpanded(o,e))}}function eM(r,t){if(r&1&&(k(0,"div",122)(1,"div",123)(2,"h4",124),O(3,"Sets:"),T(),se(4,WL,2,0,"button",125),T(),k(5,"div",126),se(6,zL,16,6,"div",127)(7,JL,3,3,"div",128),T()()),r&2){let e,o=M(2),n=o.$implicit,i=o.index,s=M(3);R(4),L("ngIf",!s.isViewMode),R(2),L("ngIf",s.getSetsFormArray(n).controls.length>0&&((e=s.expandedSetPath())==null?null:e.exerciseIndex)!==i),R(),L("ngForOf",s.getSetsFormArray(n).controls)}}function tM(r,t){if(r&1&&(k(0,"div",101)(1,"div",102)(2,"div",103)(3,"h3",104),se(4,LL,2,2,"span",105),O(5),T()(),k(6,"div",106),se(7,ML,4,3,"div",107)(8,BL,5,0,"button",108)(9,VL,4,1,"button",109),T()(),k(10,"div")(11,"label",110),O(12),T(),ce(13,"textarea",111),T(),se(14,eM,8,3,"div",112),T()),r&2){let e,o,n,i,s,a=M(),l=a.$implicit,u=a.index,c=M(3);R(),L("ngClass",Tr(11,tL,c.mode==="routineBuilder"&&((e=l.get("supersetId"))==null?null:e.value)&&(((e=l.get("supersetOrder"))==null?null:e.value)??-1)<(((e=l.get("supersetSize"))==null?null:e.value)??0)-1,!(c.mode==="routineBuilder"&&((e=l.get("supersetId"))!=null&&e.value))||c.mode==="routineBuilder"&&(((e=l.get("supersetOrder"))==null?null:e.value)??-1)===(((e=l.get("supersetSize"))==null?null:e.value)??0)-1)),R(3),L("ngIf",c.mode==="routineBuilder"&&((o=l.get("supersetId"))==null?null:o.value)),R(),Se(" ",((n=l.get("exerciseName"))==null?null:n.value)||"Select Exercise"," "),R(2),L("ngIf",c.mode==="routineBuilder"&&((i=l.get("supersetId"))==null?null:i.value)),R(),L("ngIf",!c.isViewMode),R(),L("ngIf",c.mode==="routineBuilder"&&(c.isEditMode||c.isNewMode)&&((s=l.get("supersetId"))==null?null:s.value)),R(2),L("for","exerciseNotes-"+u),R(),Se(" ",c.mode==="routineBuilder"?"Exercise Notes (Optional)":"Notes for this Logged Exercise (Optional)"," "),R(),L("id","exerciseNotes-"+u)("readonly",c.isViewMode),R(),L("ngIf",!c.isCompactView)}}function rM(r,t){if(r&1){let e=ye();k(0,"button",165),ne("click",function(n){J(e);let i=M(4);return ee(i.collapseExpandedSet(!0,n))}),_e(),k(1,"svg",161),ce(2,"path",162),T()()}}function oM(r,t){if(r&1){let e=ye();vo(0),k(1,"div",69),ne("click",function(n){let i=J(e).index,s=M(3);return ee(s.toggleSetExpansion(i,0,n))}),se(2,NL,3,2,"div",70),k(3,"div",71)(4,"div",72),se(5,RL,3,4,"div",73)(6,$L,1,3,"input",74)(7,FL,6,8,"div",75)(8,OL,5,0,"div",76),T(),se(9,tM,15,14,"div",77)(10,rM,3,0,"button",78),T()(),bo()}if(r&2){let e,o,n,i,s=t.$implicit,a=t.index,l=M(3);R(),L("title","Drag to reorder")("ngClass",us(16,QO,l.isSupersetSpacing(a))),R(),L("ngIf",l.mode==="routineBuilder"&&(l.isEditMode||l.isNewMode)&&l.selectedExerciseIndicesForSuperset().length>=2&&a===l.firstSelectedExerciseIndexForSuperset),R(),L("cdkDragDisabled",l.mode!=="routineBuilder"||l.isViewMode||!l.isEditMode)("longPressEnabled",l.isEditMode)("longPressDelay",150)("cdkDragData",s)("formGroupName",a)("cdkDragStartDelay",110)("ngClass",l.getExerciseCardClasses(s,a)),R(2),L("ngIf",l.mode==="routineBuilder"&&l.isEditMode&&!l.isViewMode),R(),L("ngIf",l.mode==="routineBuilder"&&(l.isEditMode||l.isNewMode)&&!l.isViewMode),R(),L("ngIf",l.isCompactView||!l.isCompactView&&((e=l.expandedSetPath())==null?null:e.exerciseIndex)!==a),R(),L("ngIf",(l.isCompactView||!l.isCompactView&&((o=l.expandedSetPath())==null?null:o.exerciseIndex)!==a)&&!l.isViewMode),R(),L("ngIf",((n=l.expandedSetPath())==null?null:n.exerciseIndex)===a),R(),L("ngIf",!l.isCompactView&&((i=l.expandedSetPath())==null?null:i.exerciseIndex)===a)}}function nM(r,t){if(r&1){let e=ye();k(0,"div",67),ne("cdkDropListDropped",function(n){J(e);let i=M(2);return ee(i.onExerciseDrop(n))}),se(1,oM,11,18,"ng-container",68),T()}if(r&2){let e=M(2);L("cdkDropListData",e.exercisesFormArray.controls)("cdkDropListDisabled",e.mode!=="routineBuilder"||e.isViewMode),R(),L("ngForOf",e.exercisesFormArray.controls)}}function iM(r,t){if(r&1){let e=ye();k(0,"div",166)(1,"p",167),O(2,"No exercises added yet."),T(),k(3,"button",168),ne("click",function(){J(e);let n=M(2);return ee(n.openExerciseSelectionModal())}),O(4," + ADD FIRST EXERCISE "),T()()}}function sM(r,t){if(r&1){let e=ye();k(0,"div",166)(1,"p",167),O(2,"Select a routine or ADD EXERCISEs manually to log."),T(),k(3,"button",168),ne("click",function(){J(e);let n=M(2);return ee(n.openExerciseSelectionModal())}),O(4," + ADD FIRST EXERCISE TO LOG "),T()()}}function aM(r,t){r&1&&(k(0,"div",169),O(1," The selected routine has no exercises. Add them manually or edit the routine template. "),T())}function lM(r,t){if(r&1){let e=ye();k(0,"div",170)(1,"button",171),ne("click",function(){J(e);let n=M(2);return ee(n.openExerciseSelectionModal())}),_e(),k(2,"svg",172),ce(3,"path",173),T(),O(4," ADD ANOTHER EXERCISE "),T()()}}function uM(r,t){if(r&1&&(k(0,"section",58)(1,"div",59)(2,"h2",60),O(3),T(),se(4,IL,2,0,"button",61),T(),se(5,nM,2,3,"div",62)(6,iM,5,0,"div",63)(7,sM,5,0,"div",63)(8,aM,2,0,"div",64)(9,lM,5,0,"div",65),T()),r&2){let e,o,n,i=M();R(3),We(i.mode==="routineBuilder"?"Exercises":"Logged Exercises"),R(),L("ngIf",!i.isViewMode&&(!i.exercisesFormArray.controls||i.exercisesFormArray.controls.length>0)),R(),L("ngIf",i.exercisesFormArray.length>0),R(),L("ngIf",!i.isViewMode&&i.exercisesFormArray.length===0&&i.mode==="routineBuilder"&&((e=i.builderForm.get("goal"))==null?null:e.value)!=="rest"),R(),L("ngIf",i.mode==="manualLogEntry"&&i.exercisesFormArray.length===0&&!((o=i.builderForm.get("routineIdForLog"))!=null&&o.value)),R(),L("ngIf",i.mode==="manualLogEntry"&&i.exercisesFormArray.length===0&&((n=i.builderForm.get("routineIdForLog"))==null?null:n.value)),R(),L("ngIf",!i.isViewMode&&i.exercisesFormArray.length>0)}}function cM(r,t){r&1&&(k(0,"section",174)(1,"p",175),O(2,"This is a rest day routine. No exercises are needed."),T()())}function pM(r,t){if(r&1&&(k(0,"div",176)(1,"button",177),O(2," CANCEL "),T(),k(3,"button",178),O(4),T()()),r&2){let e,o=M();R(),L("routerLink",o.mode==="routineBuilder"?"/workout":"/history/list"),R(2),L("disabled",o.builderForm.invalid||o.exercisesFormArray.length===0&&!(o.mode==="routineBuilder"&&((e=o.builderForm.get("goal"))==null?null:e.value)==="rest")),R(),Se(" ",o.mode==="routineBuilder"?o.isNewMode?"CREATE ROUTINE":"SAVE CHANGES":o.isNewMode?"LOG WORKOUT":"SAVE LOG CHANGES"," ")}}function dM(r,t){if(r&1){let e=ye();k(0,"li",196),ne("click",function(){let n=J(e).$implicit,i=M(2);return ee(i.mode==="routineBuilder"?i.selectExercise(n):i.selectExerciseForLog(n))}),k(1,"div")(2,"span",197),O(3),T(),k(4,"span",198),O(5),et(6,"titlecase"),et(7,"titlecase"),T()(),_e(),k(8,"svg",199),ce(9,"path",200),T()()}if(r&2){let e=t.$implicit;R(3),We(e.name),R(2),Bt("",Dt(6,3,e.category)," - ",Dt(7,5,e.primaryMuscleGroup))}}function mM(r,t){r&1&&(k(0,"li",201),O(1,"No exercises match your search or library is empty."),T())}function fM(r,t){if(r&1){let e=ye();k(0,"div",179),ne("click",function(){J(e);let n=M();return ee(n.closeExerciseSelectionModal())}),k(1,"div",180),ne("click",function(n){return J(e),ee(n.stopPropagation())}),k(2,"div",181)(3,"div",182)(4,"h3",183),O(5,"ADD EXERCISE"),T(),k(6,"button",184),ne("click",function(){J(e);let n=M();return ee(n.closeExerciseSelectionModal())}),_e(),k(7,"svg",185),ce(8,"path",186),T()()(),He(),k(9,"div",187)(10,"input",188),ne("ngModelChange",function(n){J(e);let i=M();return ee(i.modalSearchTerm.set(n))}),T()(),k(11,"div",189)(12,"ul",122),se(13,dM,10,7,"li",190)(14,mM,2,0,"li",191),T()(),k(15,"div",192)(16,"button",193),ne("click",function(){J(e);let n=M();return ee(n.handleTrulyCustomExerciseEntry())}),O(17," Or, create a new custom exercise entry... "),T()()(),k(18,"div",194)(19,"button",195),ne("click",function(){J(e);let n=M();return ee(n.closeExerciseSelectionModal())}),O(20,"CANCEL"),T()()()()}if(r&2){let e=M();R(10),L("ngModel",e.modalSearchTerm()),R(3),L("ngForOf",e.filteredAvailableExercises()),R(),L("ngIf",e.filteredAvailableExercises().length===0)}}var wn=class r{fb=De(Md);router=De(Zn);route=De(Ca);workoutService=De(Ea);exerciseService=De(ti);unitsService=De(ri);spinnerService=De(Wd);alertService=De(Ta);toastService=De(Na);trackingService=De(ei);cdr=De(ba);platformId=De(ya);setRepsInputs;expandedSetElements;routine=null;builderForm;mode="routineBuilder";isEditMode=!1;isNewMode=!0;isViewMode=!1;currentRoutineId=null;currentLogId=null;routeSub;initialRoutineIdForLogEdit=void 0;isCompactView=!0;subscriptions=new sS;expandedSetPath=Ee(null);availableSetTypes=[{value:"standard",label:"Standard"},{value:"warmup",label:"Warm-up"},{value:"superset",label:"Superset"},{value:"amrap",label:"AMRAP"},{value:"dropset",label:"Dropset"},{value:"failure",label:"To Failure"},{value:"myorep",label:"Myo-rep"},{value:"restpause",label:"Rest-Pause"},{value:"custom",label:"Custom Type"}];routineGoals=[{value:"hypertrophy",label:"Hypertrophy"},{value:"strength",label:"Strength"},{value:"tabata",label:"Tabata"},{value:"muscular endurance",label:"Muscular endurance"},{value:"cardiovascular endurance",label:"Cardiovascular endurance"},{value:"fat loss / body composition",label:"Fat loss / body composition"},{value:"mobility & flexibility",label:"Mobility & flexibility"},{value:"power / explosiveness",label:"Power / explosiveness"},{value:"speed & agility",label:"Speed & agility"},{value:"balance & coordination",label:"Balance & coordination"},{value:"skill acquisition",label:"Skill acquisition"},{value:"rehabilitation / injury prevention",label:"Rehabilitation / injury prevention"},{value:"mental health / stress relief",label:"Mental health"},{value:"general health & longevity",label:"General health & longevity"},{value:"sport-specific performance",label:"Sport-specific performance"},{value:"maintenance",label:"Maintenance"},{value:"rest",label:"Rest"},{value:"custom",label:"Custom"}];isExerciseModalOpen=!1;availableExercises=[];availableRoutines=[];modalSearchTerm=Ee("");filteredAvailableExercises=Et(()=>{let t=this.modalSearchTerm().toLowerCase();return t?this.availableExercises.filter(e=>e.name.toLowerCase().includes(t)||e.category.toLowerCase().includes(t)||e.primaryMuscleGroup&&e.primaryMuscleGroup.toLowerCase().includes(t)):this.availableExercises});selectedExerciseIndicesForSuperset=Ee([]);sanitizer=De(Id);sanitizedDescription="";constructor(){this.builderForm=this.fb.group({name:[""],description:[""],goal:["custom"],workoutDate:[""],startTime:[""],durationMinutes:[60,[ut.min(1)]],overallNotesLog:[""],routineIdForLog:[""],exercises:this.fb.array([])})}ngOnInit(){gr(this.platformId)&&window.scrollTo(0,0),this.loadAvailableExercises(),this.workoutService.routines$.pipe(hr(1)).subscribe(i=>this.availableRoutines=i),this.routeSub=this.route.data.pipe(ga(i=>{if(this.mode=i.mode||"routineBuilder",this.isNewMode=i.isNew===!0,console.log(`Builder ngOnInit: Mode=${this.mode}, isNewMode=${this.isNewMode}`),this.currentRoutineId=this.route.snapshot.paramMap.get("routineId"),this.currentLogId=this.route.snapshot.paramMap.get("logId"),this.isViewMode=this.mode==="routineBuilder"&&!!this.currentRoutineId&&!this.isNewMode&&this.route.snapshot.routeConfig?.path?.includes("view")||!1,this.isEditMode=!this.isNewMode&&!this.isViewMode,this.configureFormValidatorsAndFieldsForMode(),this.expandedSetPath.set(null),this.exercisesFormArray.clear({emitEvent:!1}),this.builderForm.reset(this.getDefaultFormValuesForMode(),{emitEvent:!1}),this.mode==="routineBuilder"){if(this.currentRoutineId&&(this.isEditMode||this.isViewMode))return this.workoutService.getRoutineById(this.currentRoutineId)}else if(this.mode==="manualLogEntry"){if(this.currentLogId&&this.isEditMode)return this.trackingService.getWorkoutLogById(this.currentLogId);if(this.currentRoutineId&&this.isNewMode)return this.workoutService.getRoutineById(this.currentRoutineId)}return jn(null)}),is(i=>{i?this.mode==="routineBuilder"?(this.routine=i,this.patchFormWithRoutineData(i)):this.mode==="manualLogEntry"&&this.isEditMode&&this.currentLogId?this.patchFormWithLogData(i):this.mode==="manualLogEntry"&&this.isNewMode&&this.currentRoutineId&&this.prefillLogFormFromRoutine(i):!this.isNewMode&&(this.currentRoutineId||this.currentLogId)&&(this.toastService.error("Data not found.",0,"Error"),this.router.navigate([this.mode==="routineBuilder"?"/workout":"/history/list"])),this.isViewMode?this.toggleFormState(!0):this.toggleFormState(!1)})).subscribe(),this.subscriptions.add(this.routeSub),this.mode==="manualLogEntry"&&this.builderForm.get("routineIdForLog")?.valueChanges.subscribe(i=>{if(this.isEditMode&&i===this.initialRoutineIdForLogEdit&&!this.builderForm.get("routineIdForLog")?.dirty)return;let s=this.availableRoutines.find(a=>a.id===i);s?this.prefillLogFormFromRoutine(s,!1):(this.exercisesFormArray.clear(),this.isEditMode||this.builderForm.get("name")?.setValue("Ad-hoc Workout"))});let t=this.builderForm.get("goal")?.valueChanges.subscribe(i=>{if(this.mode==="routineBuilder"&&i==="rest"){for(;this.exercisesFormArray.length;)this.exercisesFormArray.removeAt(0);this.exercisesFormArray.clearValidators()}this.exercisesFormArray.updateValueAndValidity()});this.subscriptions.add(t);let e=this.builderForm.get("description")?.valueChanges.subscribe(i=>{this.updateSanitizedDescription(i||"")});this.subscriptions.add(e);let o=this.builderForm.get("sets")?.valueChanges.subscribe(i=>{this.getRoutineDuration()});this.subscriptions.add(o);let n=this.builderForm.get("rounds")?.valueChanges.subscribe(i=>{this.getRoutineDuration()});this.subscriptions.add(n)}updateSanitizedDescription(t){this.sanitizedDescription=this.sanitizer.bypassSecurityTrustHtml(t)}getDefaultFormValuesForMode(){if(this.mode==="manualLogEntry"){let t=new Date;return{name:"",description:"",goal:"custom",workoutDate:xr(t,"yyyy-MM-dd"),startTime:xr(t,"HH:mm"),durationMinutes:60,overallNotesLog:"",routineIdForLog:"",exercises:[]}}else return{name:"",description:"",goal:"",workoutDate:"",startTime:"",durationMinutes:60,overallNotesLog:"",routineIdForLog:"",exercises:[]}}configureFormValidatorsAndFieldsForMode(){let t=this.builderForm.get("name"),e=this.builderForm.get("goal"),o=this.builderForm.get("workoutDate"),n=this.builderForm.get("startTime"),i=this.builderForm.get("durationMinutes");t?.clearValidators(),e?.clearValidators(),o?.clearValidators(),n?.clearValidators(),i?.clearValidators(),this.mode==="routineBuilder"?(t?.setValidators(ut.required),e?.setValidators(ut.required),this.builderForm.get("exercises")?.setValidators(ut.nullValidator)):(o?.setValidators(ut.required),n?.setValidators(ut.required),i?.setValidators([ut.required,ut.min(1)]),this.builderForm.get("exercises")?.setValidators(ut.required)),this.builderForm.updateValueAndValidity({emitEvent:!1})}toggleFormState(t){t?this.builderForm.disable({emitEvent:!1}):(this.builderForm.enable({emitEvent:!1}),this.mode==="routineBuilder"?(this.builderForm.get("workoutDate")?.disable({emitEvent:!1}),this.builderForm.get("startTime")?.disable({emitEvent:!1}),this.builderForm.get("durationMinutes")?.disable({emitEvent:!1}),this.builderForm.get("overallNotesLog")?.disable({emitEvent:!1}),this.builderForm.get("routineIdForLog")?.disable({emitEvent:!1})):(this.builderForm.get("description")?.disable({emitEvent:!1}),this.builderForm.get("goal")?.disable({emitEvent:!1})),this.exercisesFormArray.controls.forEach(e=>{this.updateRoundsControlability(e)}))}get exercisesFormArray(){return this.builderForm.get("exercises")}getSetsFormArray(t){return t.get("sets")}addRepsListener(t){let e=this.setupRepsListener(t);this.subscriptions.add(e)}setupRepsListener(t){let e=this.getSetsFormArray(t),o=e.valueChanges.pipe(pS(300),mS(null),qx(n=>{let i=e.controls;return lS(i).pipe(qx((s,a)=>{let l=s.get("reps");return l?l.valueChanges.pipe(ns(u=>({reps:u,setIndex:a,exerciseId:t.get("id")?.value})),dS((u,c)=>u.reps===c.reps)):jn(null)}))}),Sd(n=>n!==null)).subscribe(n=>{console.log(`Reps changed on Ex: ${n.exerciseId}, Set: ${n.setIndex} to ${n.reps}`),this.getRoutineDuration()});this.subscriptions.add(o)}loadAvailableExercises(){this.exerciseService.getExercises().pipe(hr(1)).subscribe(t=>this.availableExercises=t)}patchFormWithRoutineData(t){this.builderForm.patchValue({name:t.name,description:t.description,goal:t.goal},{emitEvent:!1}),this.updateSanitizedDescription(t.description||""),this.exercisesFormArray.clear({emitEvent:!1}),t.exercises.forEach(e=>{let o=this.createExerciseFormGroup(e,!0,!1);this.exercisesFormArray.push(o,{emitEvent:!1}),this.addRepsListener(o)}),this.builderForm.markAsPristine()}patchFormWithLogData(t){this.initialRoutineIdForLogEdit=t.routineId,this.builderForm.patchValue({name:t.routineName||"Logged Workout",workoutDate:xr(Jx(t.date),"yyyy-MM-dd"),startTime:xr(new Date(t.startTime),"HH:mm"),durationMinutes:t.durationMinutes||60,overallNotesLog:t.notes||"",routineIdForLog:t.routineId||""},{emitEvent:!1}),this.exercisesFormArray.clear({emitEvent:!1}),t.exercises.forEach(e=>{this.exercisesFormArray.push(this.createExerciseFormGroupFromLog(e),{emitEvent:!1})}),this.toggleFormState(!1),this.expandedSetPath.set(null),this.builderForm.markAsPristine()}prefillLogFormFromRoutine(t,e=!0){let o={name:`Log: ${t.name}`,routineIdForLog:t.id};if(e){let n=new Date;o.workoutDate=xr(n,"yyyy-MM-dd"),o.startTime=xr(n,"HH:mm"),o.durationMinutes=60}this.builderForm.patchValue(o,{emitEvent:!1}),this.exercisesFormArray.clear({emitEvent:!1}),t.exercises.forEach(n=>{this.exercisesFormArray.push(this.createExerciseFormGroup(n,!1,!0),{emitEvent:!1})}),this.builderForm.markAsDirty()}createExerciseFormGroup(t,e=!1,o=!1){let n=t?.exerciseId?this.availableExercises.find(a=>a.id===t.exerciseId):null,i=t?.sets||[],s=this.fb.group({id:[t?.id||this.workoutService.generateWorkoutExerciseId()],exerciseId:[t?.exerciseId||"",ut.required],exerciseName:[t?.exerciseName||n?.name||"Select Exercise"],notes:[t?.notes||""],sets:this.fb.array(i.map(a=>this.createSetFormGroup(a,o))),supersetId:[e?t?.supersetId:null],supersetOrder:[e?t?.supersetOrder:null],supersetSize:[e?t?.supersetSize:null],rounds:[e?t?.rounds??0:0,[ut.min(0)]]});return e?(s.get("supersetId")?.valueChanges.subscribe(()=>this.updateRoundsControlability(s)),s.get("supersetOrder")?.valueChanges.subscribe(()=>this.updateRoundsControlability(s)),this.updateRoundsControlability(s)):s.get("rounds")?.enable({emitEvent:!1}),s.get("exerciseId")?.valueChanges.subscribe(a=>{let l=this.availableExercises.find(u=>u.id===a);s.get("exerciseName")?.setValue(l?.name||"Unknown Exercise",{emitEvent:!1})}),s}createExerciseFormGroupFromLog(t){return this.fb.group({id:[t.id||Ft()],exerciseId:[t.exerciseId,ut.required],exerciseName:[t.exerciseName,ut.required],notes:[t.notes||""],sets:this.fb.array(t.sets.map(e=>this.createSetFormGroup(e,!0))),supersetId:[null],supersetOrder:[null],supersetSize:[null],rounds:[0]})}createSetFormGroup(t,e=!1){let o,n,i,s,a,l,u,c,p,d,m=Ft(),f,g=new Date().toISOString();if(t)if(m=t.id||m,"repsAchieved"in t){let y=t;o=y.repsAchieved,i=y.weightUsed,a=y.durationPerformed,u=y.notes,c=y.type||"standard",f=y.plannedSetId,g=y.timestamp,p=y.targetTempo||"",d=60}else{let y=t;o=y.reps,n=y.reps,i=y.weight,s=y.weight,a=y.duration,l=y.duration,u=y.notes,c=y.type||"standard",p=y.tempo,d=y.restAfterSet,f=y.id}else o=null,i=null,a=null,u="",c="standard",p="",d=60;let x={id:[m],type:[c,ut.required],notes:[u||""]};return e?(x.repsAchieved=[o??null,[ut.required,ut.min(0)]],x.weightUsed=[this.unitsService.convertFromKg(i,this.unitsService.currentUnit())??null,[ut.min(0)]],x.durationPerformed=[a??null,[ut.min(0)]],x.plannedSetId=[f],x.timestamp=[g]):(x.reps=[o??null,[ut.min(0)]],x.targetReps=[n??null,[ut.min(0)]],x.weight=[this.unitsService.convertFromKg(i,this.unitsService.currentUnit())??null,[ut.min(0)]],x.targetWeight=[this.unitsService.convertFromKg(s,this.unitsService.currentUnit())??null,[ut.min(0)]],x.duration=[a??null,[ut.min(0)]],x.targetDuration=[l??null,[ut.min(0)]],x.tempo=[p||""],x.restAfterSet=[d??60,[ut.required,ut.min(0)]]),this.fb.group(x)}openExerciseSelectionModal(){this.isViewMode||(this.modalSearchTerm.set(""),this.isExerciseModalOpen=!0)}closeExerciseSelectionModal(){this.isExerciseModalOpen=!1}onModalSearchTermChange(t){let e=t.target;this.modalSearchTerm.set(e.value)}selectExercise(t){let e=this.createExerciseFormGroup({id:this.workoutService.generateWorkoutExerciseId(),exerciseId:t.id,exerciseName:t.name,sets:[{id:this.workoutService.generateExerciseSetId(),type:"standard",reps:8,weight:0,restAfterSet:60,duration:void 0,tempo:"",notes:""}],supersetId:null,supersetOrder:null,supersetSize:null,rounds:0,type:"standard"},!0,!1);this.addRepsListener(e),this.exercisesFormArray.push(e),this.closeExerciseSelectionModal(),this.toggleSetExpansion(this.exercisesFormArray.length-1,0)}selectExerciseForLog(t){let e={id:this.workoutService.generateWorkoutExerciseId(),exerciseId:t.id,exerciseName:t.name,sets:[{id:this.workoutService.generateExerciseSetId(),type:"standard",reps:8,weight:0,restAfterSet:60,duration:void 0,tempo:"",notes:""}],type:"standard",supersetId:null,supersetOrder:null,supersetSize:null,rounds:0};this.exercisesFormArray.push(this.createExerciseFormGroup(e,!1,!0)),this.closeExerciseSelectionModal()}ngAfterViewInit(){this.expandedSetElements.changes.subscribe(t=>{t.first&&this.expandedSetPath()&&setTimeout(()=>{t.first.nativeElement.scrollIntoView({behavior:"smooth",block:"center"})},0)})}addSet(t,e){if(this.isViewMode)return;let o=this.getSetsFormArray(t),n;if(o.length>0){let s=o.at(o.length-1).value,a=Xt({},s);if(delete a.id,this.mode==="manualLogEntry"){let l=t.get("exerciseId")?.value;n=this.createSetFormGroup({id:a.id??this.workoutService.generateExerciseSetId(),exerciseId:l,exerciseName:a.exerciseName,repsAchieved:a.repsAchieved,weightUsed:a.weightUsed,durationPerformed:a.durationPerformed,notes:a.notes,type:a.type,plannedSetId:a.plannedSetId,timestamp:new Date().toISOString(),targetReps:a.targetReps,targetWeight:a.targetWeight,targetDuration:a.targetDuration,targetTempo:a.targetTempo},!0)}else n=this.createSetFormGroup({id:a.id??this.workoutService.generateExerciseSetId(),reps:a.reps,weight:a.weight,duration:a.duration,notes:a.notes,type:a.type,tempo:a.tempo,restAfterSet:a.restAfterSet},!1)}else n=this.createSetFormGroup(void 0,this.mode==="manualLogEntry");o.push(n),this.cdr.detectChanges();let i=o.length-1;this.toggleSetExpansion(e,i)}removeSet(t,e,o,n){if(n?.stopPropagation(),this.isViewMode)return;this.getSetsFormArray(t).removeAt(o);let s=this.expandedSetPath();s&&s.exerciseIndex===e&&s.setIndex===o?this.expandedSetPath.set(null):s&&s.exerciseIndex===e&&s.setIndex>o&&this.expandedSetPath.set({exerciseIndex:e,setIndex:s.setIndex-1})}toggleSetExpansion(t,e,o){if(o?.stopPropagation(),o&&(o.target instanceof HTMLInputElement||o.target instanceof HTMLTextAreaElement||o.target instanceof HTMLSelectElement)||this.expandedSetPath()!==null&&this.expandedSetPath()?.exerciseIndex===t&&this.expandedSetPath()?.setIndex===e)return;if(this.isViewMode&&!(this.expandedSetPath()?.exerciseIndex===t&&this.expandedSetPath()?.setIndex===e)){this.expandedSetPath.set({exerciseIndex:t,setIndex:e}),this.isCompactView=!1;return}else if(this.isViewMode){this.expandedSetPath.set(null);return}let n=this.expandedSetPath();n?.exerciseIndex===t&&n?.setIndex===e||(this.expandedSetPath.set({exerciseIndex:t,setIndex:e}),this.isCompactView=!1,this.cdr.detectChanges(),setTimeout(()=>{let i=this.expandedSetElements.first?.nativeElement;if(i){let s=i.querySelector('input[type="text"], input[type="number"]');s&&s.focus()}},50))}isSetExpanded(t,e){let o=this.expandedSetPath();return o?.exerciseIndex===t&&o?.setIndex===e}collapseExpandedSet(t=!1,e){this.expandedSetPath.set(null),this.isCompactView=t,e?.stopPropagation()}getFormErrors(t){let e={};return Object.keys(t.controls).forEach(o=>{let n=t.get(o).errors;if(n&&(e[o]=n),t.get(o)instanceof _S||t.get(o)instanceof ES){let i=this.getFormErrors(t.get(o));Object.keys(i).length>0&&(e[o]=i)}}),e}get f(){return this.builderForm.controls}toggleExerciseSelectionForSuperset(t,e){if(this.isViewMode)return;let o=e.target;this.selectedExerciseIndicesForSuperset.update(n=>{let i;return o.checked?i=n.includes(t)?n:[...n,t]:i=n.filter(s=>s!==t),i.sort((s,a)=>s-a)}),this.isCompactView}canGroupSelectedExercises(){let t=this.selectedExerciseIndicesForSuperset();if(t.length<2)return!1;let e=this.exercisesFormArray.at(t[0]).get("supersetId")?.value;for(let o=1;o<t.length;o++){let n=t[o],i=this.exercisesFormArray.at(n).get("supersetId")?.value;if(e&&i&&e!==i||!e&&i)return!1}return!0}canUngroupSelectedExercises(){let t=this.selectedExerciseIndicesForSuperset();if(t.length===0)return!1;let e=Array.from(new Set(t.map(n=>this.exercisesFormArray.at(n).get("supersetId")?.value).filter(n=>!!n)));return Array.from(new Set(e)).length===1}onExerciseDrop(t){if(!this.isViewMode&&t.previousContainer===t.container){let e=this.exercisesFormArray;PS(e.controls,t.previousIndex,t.currentIndex),e.updateValueAndValidity(),this.selectedExerciseIndicesForSuperset.set([]),this.handleSupersetIntegrityAfterDrag(t.previousIndex,t.currentIndex),this.recalculateSupersetOrders(),this.expandedSetPath.set(null)}}handleSupersetIntegrityAfterDrag(t,e){let o=new Set;if(o.add(t),o.add(e),t<e)for(let i=t;i<=e;i++)o.add(i);else for(let i=e;i<=t;i++)o.add(i);let n=new Set;o.forEach(i=>{if(i<this.exercisesFormArray.length){let a=this.exercisesFormArray.at(i).get("supersetId")?.value;a&&n.add(a)}}),n.forEach(i=>{this.exercisesFormArray.controls.forEach(s=>{let a=s;a.get("supersetId")?.value===i&&a.patchValue({supersetId:null,supersetOrder:null,supersetSize:null})})}),this.recalculateSupersetOrders()}recalculateSupersetOrders(){let t=new Map;this.exercisesFormArray.controls.forEach(e=>{let o=e,n=o.get("supersetId")?.value;n?(t.has(n)||t.set(n,[]),t.get(n).push(o)):(o.patchValue({supersetOrder:null,supersetSize:null},{emitEvent:!1}),this.updateRoundsControlability(o))}),t.forEach((e,o)=>{e.length<2?e.forEach(n=>{n.patchValue({supersetId:null,supersetOrder:null,supersetSize:null}),this.updateRoundsControlability(n)}):(e.sort((n,i)=>this.exercisesFormArray.controls.indexOf(n)-this.exercisesFormArray.controls.indexOf(i)),e.forEach((n,i)=>{n.patchValue({supersetOrder:i,supersetSize:e.length},{emitEvent:!1}),this.updateRoundsControlability(n)}))}),this.exercisesFormArray.updateValueAndValidity({emitEvent:!1})}groupSelectedAsSuperset(){if(this.isViewMode)return;let t=this.selectedExerciseIndicesForSuperset().sort((i,s)=>i-s);if(t.length<2){this.toastService.warning("Select at least two exercises.",3e3,"Superset Error");return}for(let i=1;i<t.length;i++)if(t[i]!==t[i-1]+1){this.toastService.warning("Selected exercises must be next to each other to form a superset.",5e3,"Superset Error");return}let e=Ft(),o=t.length,n=1;t.forEach((i,s)=>{let a=this.exercisesFormArray.at(i);a.patchValue({supersetId:e,supersetOrder:s,supersetSize:o,rounds:n,type:"superset"}),this.updateRoundsControlability(a),a.get("sets").controls.forEach(u=>{s<o-1&&u.get("restAfterSet")?.setValue(0)})}),this.selectedExerciseIndicesForSuperset.set([]),this.toastService.success("Superset created!",3e3,"Success")}ungroupSuperset(t){if(this.isViewMode)return;let o=this.exercisesFormArray.at(t).get("supersetId")?.value;o&&(this.exercisesFormArray.controls.forEach(n=>{let i=n;i.get("supersetId")?.value===o&&(i.patchValue({supersetId:null,supersetOrder:null,supersetSize:null}),this.updateRoundsControlability(i))}),this.selectedExerciseIndicesForSuperset.set([]),this.toastService.info("Superset ungrouped.",3e3,"Ungrouped"))}removeExercise(t){if(this.isViewMode)return;let o=this.exercisesFormArray.at(t).get("supersetId")?.value;this.exercisesFormArray.removeAt(t),this.selectedExerciseIndicesForSuperset.set([]),o&&this.recalculateSupersetOrders(),this.toastService.info("Exercise removed.",2e3),this.expandedSetPath.set(null)}errorMessage=Ee(null);onSubmit(){return j(this,null,function*(){if(this.isViewMode){this.toastService.info("View mode. No changes.",3e3,"View Mode");return}this.mode==="routineBuilder"&&this.recalculateSupersetOrders();let t=this.mode==="routineBuilder"&&this.builderForm.get("goal")?.value==="rest";if(this.mode==="routineBuilder"&&(this.builderForm.get("name")?.invalid||this.builderForm.get("goal")?.invalid)||this.mode==="manualLogEntry"&&(this.builderForm.get("workoutDate")?.invalid||this.builderForm.get("startTime")?.invalid||this.builderForm.get("durationMinutes")?.invalid)){this.builderForm.markAllAsTouched(),this.toastService.error("Please fill all required details.",0,"Validation Error");return}if(!t&&this.exercisesFormArray.length===0){this.toastService.error(this.mode==="manualLogEntry"?"Log must have exercises.":"Routine needs exercises.",0,"Validation Error");return}if(this.mode==="routineBuilder"&&!t&&!this.validateSupersetIntegrity()){this.toastService.error("Invalid superset configuration.",0,"Validation Error");return}if(this.builderForm.invalid){this.toastService.error("Please correct validation errors.",0,"Validation Error"),this.builderForm.markAllAsTouched();return}let e=this.builderForm.getRawValue();this.spinnerService.show(this.isNewMode?"Saving...":"Updating...");try{if(this.mode==="routineBuilder"){let o=this.mapFormToRoutine(e);this.isNewMode?this.workoutService.addRoutine(o):this.workoutService.updateRoutine(o),this.toastService.success(`Routine ${this.isNewMode?"created":"updated"}!`,4e3,"Success"),this.router.navigate(["/workout"])}else{let o=e.workoutDate,n=e.startTime,i=`${o}T${n}:00`,s;try{let c=Jx(i);if(!NS(c))throw new Error("Invalid date/time for log entry");s=c.getTime()}catch{this.toastService.error("Invalid date or time format.",0,"Error"),this.spinnerService.hide();return}let a;e.durationMinutes&&(a=new Date(s).setMinutes(new Date(s).getMinutes()+e.durationMinutes));let l=e.exercises.map(c=>({id:c.id,exerciseId:c.exerciseId,exerciseName:c.exerciseName,notes:c.notes,sets:c.sets.map(p=>({id:p.id||Ft(),exerciseName:c.exerciseName,plannedSetId:p.plannedSetId,exerciseId:c.exerciseId,type:p.type,repsAchieved:p.repsAchieved,weightUsed:this.unitsService.convertToKg(p.weightUsed,this.unitsService.currentUnit())??void 0,durationPerformed:p.durationPerformed,notes:p.notes,targetReps:p.targetReps,targetWeight:p.targetWeight,targetDuration:p.targetDuration,targetTempo:p.targetTempo,rpe:void 0,timestamp:p.timestamp||new Date().toISOString()})),rounds:c.rounds||0,type:c.type||"standard"})),u={date:xr(new Date(s),"yyyy-MM-dd"),startTime:s,endTime:a,durationMinutes:e.durationMinutes,routineId:e.routineIdForLog||void 0,routineName:e.routineIdForLog?this.availableRoutines.find(c=>c.id===e.routineIdForLog)?.name||e.name||"Workout from Routine":e.name||"Ad-hoc Workout",notes:e.overallNotesLog,exercises:l};if(this.isEditMode&&this.currentLogId){let c=lr(Xt({},u),{id:this.currentLogId});yield this.trackingService.updateWorkoutLog(c),this.toastService.success("Log updated!",4e3,"Success"),this.router.navigate(["/history/log",this.currentLogId])}else{let c=u,p=this.trackingService.addWorkoutLog(c);this.toastService.success("Workout logged!",4e3,"Success"),this.router.navigate(["/history/log",p.id])}}this.builderForm.markAsPristine()}catch(o){console.error("Error saving:",o),this.toastService.error(`Failed to save: ${o.message||"Unknown error"}`,0,"Save Error")}finally{this.spinnerService.hide()}})}validateSupersetIntegrity(){let t=this.exercisesFormArray.value,e=new Map;for(let o of t)o.supersetId&&(e.has(o.supersetId)||e.set(o.supersetId,[]),e.get(o.supersetId).push(o));for(let[o,n]of e.entries()){if(n.length<2)return!1;let i=n.sort((a,l)=>(a.supersetOrder??1/0)-(l.supersetOrder??1/0));for(let a=0;a<i.length;a++)if(i[a].supersetOrder!==a)return!1;let s=i.map(a=>this.exercisesFormArray.controls.findIndex(l=>l.get("id")?.value===a.id));for(let a=1;a<s.length;a++)if(s[a]!==s[a-1]+1)return!1}return!0}get firstSelectedExerciseIndexForSuperset(){let t=this.selectedExerciseIndicesForSuperset();return t.length>0?t[0]:null}updateRoundsControlability(t){let e=t.get("supersetId")?.value,o=t.get("supersetOrder")?.value,n=t.get("rounds");if(this.isViewMode){n?.disable({emitEvent:!1});return}if(e&&o!==null&&o>0){n?.disable({emitEvent:!1});let i=this.exercisesFormArray.controls.find(s=>s.get("supersetId")?.value===e&&s.get("supersetOrder")?.value===0);i&&n?.setValue(i.get("rounds")?.value??1,{emitEvent:!1})}else n?.enable({emitEvent:!1})}syncSupersetRounds(t,e,o){this.isViewMode||!t||e===null||e===void 0||e<1||this.exercisesFormArray.at(o).get("supersetOrder")?.value!==0||this.exercisesFormArray.controls.forEach(i=>{let s=i;s.get("supersetId")?.value===t&&s.get("rounds")?.value!==e&&s.get("rounds")?.setValue(e,{emitEvent:!1})})}startCurrentWorkout(){this.currentRoutineId?this.router.navigate(["/workout/play",this.currentRoutineId]):this.toastService.error("Cannot start workout: Routine ID is missing.",0,"Error")}enableEditMode(){this.isViewMode&&this.currentRoutineId&&(this.isViewMode=!1,this.isEditMode=!0,this.toggleFormState(!1),this.toastService.info("Edit mode enabled.",3e3,"Mode Changed"))}deleteCurrentRoutine(){return j(this,null,function*(){if(!this.currentRoutineId){this.toastService.error("Cannot delete: Routine ID is missing.",0,"Error");return}let t=yield Xn(this.workoutService.getRoutineById(this.currentRoutineId).pipe(hr(1)));if(!t){this.toastService.error("Routine not found for deletion.",0,"Error");return}let e=(yield Xn(this.trackingService.getWorkoutLogsByRoutineId(this.currentRoutineId).pipe(hr(1))))||[],o=`Are you sure you want to delete the routine "${t.name}"?`;e.length>0&&(o+=` This will also delete ${e.length} associated workout log(s). This action cannot be undone.`);let n=yield this.alertService.showConfirm("Delete Routine",o,"Delete");if(n&&n.data)try{this.spinnerService.show(),e.length>0&&(yield this.trackingService.clearWorkoutLogsByRoutineId(this.currentRoutineId),this.toastService.info(`${e.length} workout log(s) deleted.`,3e3,"Logs Cleared")),yield this.workoutService.deleteRoutine(this.currentRoutineId),this.toastService.success(`Routine "${t.name}" deleted.`,4e3,"Routine Deleted"),this.router.navigate(["/workout"])}catch(i){console.error("Error during deletion:",i),this.toastService.error("Failed to delete routine or logs. Please try again.",0,"Deletion Failed")}finally{this.spinnerService.hide()}})}ngOnDestroy(){this.subscriptions.unsubscribe()}getExerciseCardClasses(t,e){let o=this.mode==="routineBuilder"&&!!t.get("supersetId")?.value,n=t.get("supersetOrder")?.value??-1,i=t.get("exerciseName")?.value,s=t.get("supersetSize")?.value??0,a=this.mode==="routineBuilder"&&this.selectedExerciseIndicesForSuperset().includes(e),l=o&&n===0,u=o&&n===s-1,c=o&&!l&&!u,p=this.isCompactView,d=this.isEditMode,m=this.firstSelectedExerciseIndexForSuperset,f=t.get("sets")?.value||[],g=f.length>0&&f.every(y=>y.type==="warmup");return{"p-1.5 sm:p-2":!0,"border rounded":!0,"shadow-sm":!0,"border-orange-500 dark:border-orange-400 bg-orange-50 dark:bg-orange-800/30":o,"ring-2 ring-orange-400 dark:ring-orange-300 shadow-md":a,"dark:bg-orange-800/40":o&&a,"bg-blue-800/40":g,"border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-800":!o&&!a&&!g,"rounded-b-none border-b-transparent dark:border-b-transparent":this.mode==="routineBuilder"&&o&&(l||c),"rounded-t-none border-t-transparent dark:border-t-transparent":o&&(u||c),"border-x border-t":o&&l,"mb-2":!o||o&&u}}hasAdjacentSupersets(t){let e=this.exercisesFormArray;if(t<0||t>=e.length)return!1;let o=e.at(t).get("supersetId")?.value;if(!o)return!1;if(t>0){let n=e.at(t-1).get("supersetId")?.value;if(n&&n===o)return!0}if(t<e.length-1){let n=e.at(t+1).get("supersetId")?.value;if(n&&n===o)return!0}return!1}isSupersetSpacing(t){if(t<=0)return!1;let e=this.exercisesFormArray.at(t).get("id")?.value,o=this.exercisesFormArray.at(t-1).get("id")?.value;return t>0&&e&&e!==o}handleTrulyCustomExerciseEntry(t=!1){return j(this,null,function*(){let e=[{name:"exerciseName",type:"text",placeholder:"Custom Exercise Name",value:"",attributes:{required:!0},label:"Custom Exercise Name"},{name:"numSets",type:"number",placeholder:"Number of Sets (e.g., 3)",value:"3",attributes:{min:"1",required:!0},label:"Number of Sets"},{name:"equipmentNeeded",type:"text",placeholder:"Equipment",value:"",attributes:{required:!1},label:"Equipment"},{name:"description",type:"textarea",placeholder:"Description",value:"",attributes:{required:!1},label:"Description"}];t&&this.toastService.error("Invalid input for custom exercise.",0,"Error");let o=yield this.alertService.showPromptDialog("Add New Custom Exercise","Define exercise name and sets:",e,"Add Exercise");if(o&&o.exerciseName){let n=String(o.exerciseName).trim(),i=String(o.description).trim(),s=o.numSets?parseInt(String(o.numSets),10):3;if(!n||s<=0){this.toastService.error("Invalid input for custom exercise.",0,"Error");return}let a=Array.from({length:s},()=>({id:`custom-adhoc-set-${Ft()}`,reps:8,weight:null,duration:void 0,restAfterSet:60,type:"standard",notes:""})),u={id:`custom-adhoc-ex-${n.trim().toLowerCase().replace(/\s+/g,"-")}-${Ft()}`,name:n,description:i,category:"custom",muscleGroups:[],primaryMuscleGroup:"",imageUrls:[]};this.closeExerciseSelectionModal(),this.exerciseService.addExercise(u);let c={id:this.workoutService.generateWorkoutExerciseId(),exerciseId:u.id,exerciseName:u.name,sets:a,type:"standard",supersetId:null,supersetOrder:null,supersetSize:null,rounds:0},p=this.createExerciseFormGroup(c,!0,!1);this.exercisesFormArray.push(p),this.toggleSetExpansion(this.exercisesFormArray.length-1,0),this.addRepsListener(p)}else{if(!o)return;this.handleTrulyCustomExerciseEntry(!0);return}})}getRoutineDuration(){return this.routine?(this.routine=this.mapFormToRoutine(this.builderForm.getRawValue()),this.workoutService.getEstimatedRoutineDuration(this.routine)):0}mapFormToRoutine(t){return{id:this.currentRoutineId||Ft(),name:t.name,description:t.description,goal:t.goal,exercises:t.goal==="rest"?[]:t.exercises.map(o=>lr(Xt({},o),{sets:o.sets.map(n=>lr(Xt({},n),{weight:this.unitsService.convertToKg(n.weight,this.unitsService.currentUnit())??null}))})),isFavourite:this.routine?.isFavourite,isHidden:this.routine?.isHidden}}static \u0275fac=function(e){return new(e||r)};static \u0275cmp=yo({type:r,selectors:[["app-workout-builder"]],viewQuery:function(e,o){if(e&1&&(Po(XO,5),Po(YO,5)),e&2){let n;Ao(n=Do())&&(o.setRepsInputs=n),Ao(n=Do())&&(o.expandedSetElements=n)}},features:[kd([en])],decls:19,vars:11,consts:[["expandedSetElement",""],["class","my-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded-md dark:bg-red-900/30 dark:border-red-600 dark:text-red-300",4,"ngIf"],[1,"container","mx-auto","p-2","sm:p-4"],[1,"mb-2","pb-4","border-b","border-gray-200","dark:border-gray-700"],[1,"flex","justify-between","items-center"],[1,"text-gray-600","dark:text-gray-300","hover:text-primary","dark:hover:text-primary-light","p-2","-ml-1",3,"routerLink"],["fill","none","stroke","currentColor","viewBox","0 0 24 24","xmlns","http://www.w3.org/2000/svg",1,"w-6","h-6"],["stroke-linecap","round","stroke-linejoin","round","stroke-width","2","d","M15 19l-7-7 7-7"],[1,"text-xl","sm:text-2xl","md:text-2xl","font-bold","text-gray-800","dark:text-gray-200","text-center","flex-grow","truncate","px-2"],[1,"w-10","h-10"],["class","mt-4 flex flex-wrap gap-2 justify-center",4,"ngIf"],[1,"space-y-6","mb-6",3,"ngSubmit","formGroup"],[1,"space-y-4","p-2","rounded-lg","shadow-sm"],[4,"ngIf"],["class","pt-4 px-2",4,"ngIf"],["class","p-4 bg-blue-50 dark:bg-blue-900/30 rounded-lg text-center",4,"ngIf"],["class","pt-6 flex justify-end space-x-3",4,"ngIf"],["class","fixed inset-0 bg-gray-700 bg-opacity-75 transition-opacity overflow-y-auto h-full w-full z-[70] flex items-center justify-center p-4",3,"click",4,"ngIf"],[1,"my-4","p-3","bg-red-100","border","border-red-400","text-red-700","rounded-md","dark:bg-red-900/30","dark:border-red-600","dark:text-red-300"],[1,"mt-4","flex","flex-wrap","gap-2","justify-center"],["type","button",1,"bg-green-600","hover:bg-green-800","text-white","font-semibold","py-3","px-3","rounded-md","shadow-sm","text-m","flex","items-center",3,"click"],["xmlns","http://www.w3.org/2000/svg","fill","none","viewBox","0 0 24 24","stroke-width","3","stroke","currentColor",1,"size-4","sm:size-5","mr-1"],["stroke-linecap","round","stroke-linejoin","round","d","M5.25 5.653c0-.856.917-1.398 1.667-.986l11.54 6.347a1.125 1.125 0 0 1 0 1.972l-11.54 6.347a1.125 1.125 0 0 1-1.667-.986V5.653Z"],["type","button","class","bg-yellow-500 hover:bg-yellow-800 text-white font-semibold py-3 px-3 rounded-md shadow-sm text-m flex items-center",3,"click",4,"ngIf"],["type","button",1,"bg-red-600","hover:bg-red-800","text-white","font-semibold","py-3","px-3","rounded-md","shadow-sm","text-m","flex","items-center",3,"click"],["xmlns","http://www.w3.org/2000/svg","fill","none","viewBox","0 0 24 24","stroke-width","2","stroke","currentColor",1,"size-4","sm:size-5","mr-1"],["stroke-linecap","round","stroke-linejoin","round","d","m14.74 9-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 0 1-2.244 2.077H8.084a2.25 2.25 0 0 1-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 0 0-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 0 1 3.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 0 0-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 0 0-7.5 0"],["type","button",1,"bg-yellow-500","hover:bg-yellow-800","text-white","font-semibold","py-3","px-3","rounded-md","shadow-sm","text-m","flex","items-center",3,"click"],["stroke-linecap","round","stroke-linejoin","round","d","m16.862 4.487 1.687-1.688a1.875 1.875 0 1 1 2.652 2.652L10.582 16.07a4.5 4.5 0 0 1-1.897 1.13L6 18l.8-2.685a4.5 4.5 0 0 1 1.13-1.897l8.932-8.931Zm0 0L19.5 7.125M18 14v4.75A2.25 2.25 0 0 1 15.75 21H5.25A2.25 2.25 0 0 1 3 18.75V8.25A2.25 2.25 0 0 1 5.25 6H10"],["class","text-m text-gray-500 dark:text-gray-300",4,"ngIf"],[1,"block","text-xl","font-black","text-gray-700","dark:text-gray-300"],["for","routineName",1,"block","text-m","font-medium","text-gray-700","dark:text-gray-300"],["type","text","id","routineName","formControlName","name","placeholder","Routine name",1,"mt-1","block","w-full","p-2","border","rounded-md","shadow-sm","focus:ring-primary","focus:border-primary","dark:bg-gray-600","dark:border-gray-500","dark:text-gray-200",3,"ngClass"],["class","text-red-500 dark:text-red-400 text-xs mt-1",4,"ngIf"],[1,"text-red-500","dark:text-red-400","text-xs","mt-1"],[1,"mt-1","block","w-full","shadow-sm","dark:text-gray-200",3,"innerHTML"],["for","description",1,"block","text-m","font-medium","text-gray-700","dark:text-gray-300"],["id","description","formControlName","description","rows","3","placeholder","Description (optional)",1,"mt-1","block","w-full","p-2","border","border-gray-300","dark:border-gray-500","rounded-md","shadow-sm","dark:bg-gray-600","dark:text-gray-200"],[1,"block","text-m","text-gray-700","dark:text-gray-300"],[1,"font-medium"],["id","goal","formControlName","goal",1,"mt-1","block","w-full","p-2","border","border-gray-300","dark:border-gray-500","rounded-md","shadow-sm","dark:bg-gray-600","dark:text-gray-200"],["value",""],[3,"value",4,"ngFor","ngForOf"],[3,"value"],[1,"text-m","text-gray-500","dark:text-gray-300"],[1,"grid","grid-cols-1","md:grid-cols-3","gap-4"],["for","workoutDate",1,"block","text-sm","font-medium","text-gray-700","dark:text-gray-300"],["type","date","id","workoutDate","formControlName","workoutDate",1,"mt-1","block","w-full","p-2","border","rounded-md","shadow-sm","dark:bg-gray-600","dark:border-gray-500","dark:text-gray-200",3,"ngClass"],["for","startTime",1,"block","text-sm","font-medium","text-gray-700","dark:text-gray-300"],["type","time","id","startTime","formControlName","startTime",1,"mt-1","block","w-full","p-2","border","rounded-md","shadow-sm","dark:bg-gray-600","dark:border-gray-500","dark:text-gray-200",3,"ngClass"],["for","durationMinutes",1,"block","text-sm","font-medium","text-gray-700","dark:text-gray-300"],["type","number","id","durationMinutes","formControlName","durationMinutes",1,"mt-1","block","w-full","p-2","border","rounded-md","shadow-sm","dark:bg-gray-600","dark:border-gray-500","dark:text-gray-200",3,"ngClass"],["for","logWorkoutName",1,"block","text-sm","font-medium","text-gray-700","dark:text-gray-300"],["type","text","id","logWorkoutName","formControlName","name","placeholder","e.g., Morning Chest Session",1,"mt-1","block","w-full","p-2","border","border-gray-300","dark:border-gray-500","rounded-md","shadow-sm","dark:bg-gray-600","dark:text-gray-200"],["for","routineIdForLog",1,"block","text-sm","font-medium","text-gray-700","dark:text-gray-300"],["id","routineIdForLog","formControlName","routineIdForLog",1,"mt-1","block","w-full","p-2","border","border-gray-300","dark:border-gray-500","rounded-md","shadow-sm","dark:bg-gray-600","dark:text-gray-200"],["for","overallNotesLog",1,"block","text-sm","font-medium","text-gray-700","dark:text-gray-300"],["id","overallNotesLog","formControlName","overallNotesLog","rows","2",1,"mt-1","block","w-full","p-2","border","border-gray-300","dark:border-gray-500","rounded-md","shadow-sm","dark:bg-gray-600","dark:text-gray-200"],[1,"pt-4","px-2"],[1,"flex","justify-between","items-center","mb-4"],[1,"text-xl","font-semibold","text-gray-700","dark:text-gray-300"],["type","button","class","bg-green-500 hover:enabled:bg-green-600 text-white text-m font-medium py-2 px-3 rounded-md transition-all duration-150 ease-in-out disabled:opacity-50 disabled:cursor-not-allowed",3,"click",4,"ngIf"],["cdkDropList","","formArrayName","exercises","class","exercise-list-container space-y-4",3,"cdkDropListData","cdkDropListDisabled","cdkDropListDropped",4,"ngIf"],["class","text-center py-6 text-gray-500 dark:text-gray-400 border border-dashed dark:border-gray-700 rounded-md mt-4",4,"ngIf"],["class","text-center py-4 text-gray-500 dark:text-gray-400",4,"ngIf"],["class","mt-6 text-center",4,"ngIf"],["type","button",1,"bg-green-500","hover:enabled:bg-green-600","text-white","text-m","font-medium","py-2","px-3","rounded-md","transition-all","duration-150","ease-in-out","disabled:opacity-50","disabled:cursor-not-allowed",3,"click"],["cdkDropList","","formArrayName","exercises",1,"exercise-list-container","space-y-4",3,"cdkDropListDropped","cdkDropListData","cdkDropListDisabled"],[4,"ngFor","ngForOf"],[1,"relative","group","exercise-card-wrapper",3,"click","title","ngClass"],["class","absolute left-1/2 -translate-x-1/2 z-20","style","top: -1.25rem;",4,"ngIf"],["cdkDrag","","appLongPressDrag","","longPressClass","is-long-pressing",1,"exercise-item","relative","transition-all","cursor-grab",3,"cdkDragDisabled","longPressEnabled","longPressDelay","cdkDragData","formGroupName","cdkDragStartDelay","ngClass"],[1,"flex","items-center","space-x-2"],["class","p-1 text-gray-400 hover:text-gray-600 dark:text-gray-500 dark:hover:text-gray-300 flex-shrink-0 top-1 right-1 sm:static","title","Drag to reorder",3,"ngClass",4,"ngIf"],["type","checkbox","title","Select the exercise for the Superset","class","h-4 w-4 text-orange-600 border-gray-300 dark:border-gray-600 rounded focus:ring-orange-500 flex-shrink-0 disabled:opacity-50",3,"id","checked","disabled","change",4,"ngIf"],["class","flex-grow min-w-0",4,"ngIf"],["class","flex-shrink-0 ml-auto",4,"ngIf"],["class","space-y-3",4,"ngIf"],["type","button","title","Collapse exercise","class","bg-blue-200 mt-1 p-1 text-blue-600 hover:text-gray-500 dark:text-gray-400 dark:hover:text-gray-200 flex-shrink-0  rounded-md",3,"click",4,"ngIf"],[1,"absolute","left-1/2","-translate-x-1/2","z-20",2,"top","-1.25rem"],["type","button","class","bg-orange-600 hover:bg-orange-700 text-white text-xs font-semibold py-1.5 px-3 rounded-full shadow-lg",3,"disabled","click",4,"ngIf"],["type","button","class","bg-violet-600 hover:bg-violet-700 text-white text-xs font-semibold py-1.5 px-3 rounded-full shadow-lg",3,"disabled","click",4,"ngIf"],["type","button",1,"bg-orange-600","hover:bg-orange-700","text-white","text-xs","font-semibold","py-1.5","px-3","rounded-full","shadow-lg",3,"click","disabled"],["type","button",1,"bg-violet-600","hover:bg-violet-700","text-white","text-xs","font-semibold","py-1.5","px-3","rounded-full","shadow-lg",3,"click","disabled"],["title","Drag to reorder",1,"p-1","text-gray-400","hover:text-gray-600","dark:text-gray-500","dark:hover:text-gray-300","flex-shrink-0","top-1","right-1","sm:static",3,"ngClass"],["xmlns","http://www.w3.org/2000/svg","viewBox","0 0 24 24",1,"w-5","h-5"],["d","M 7 17 L 7 3 M 4 6 L 7 3 L 10 6 M 17 7 L 17 21 M 14 18 L 17 21 L 20 18","fill","none","stroke","currentColor","stroke-width","2","stroke-linecap","round","stroke-linejoin","round"],["type","checkbox","title","Select the exercise for the Superset",1,"h-4","w-4","text-orange-600","border-gray-300","dark:border-gray-600","rounded","focus:ring-orange-500","flex-shrink-0","disabled:opacity-50",3,"change","id","checked","disabled"],[1,"flex-grow","min-w-0"],[1,"font-semibold","text-gray-800","dark:text-gray-100","truncate",3,"ngClass"],["class","text-xs text-orange-600 dark:text-orange-400 font-normal block",3,"ngClass",4,"ngIf"],["class","text-xs text-orange-600 dark:text-orange-400 mt-0.5",4,"ngIf"],["class","text-s text-gray-500 dark:text-gray-400 mt-0.5",4,"ngIf"],[1,"text-xs","text-orange-600","dark:text-orange-400","font-normal","block",3,"ngClass"],[1,"text-xs","text-orange-600","dark:text-orange-400","mt-0.5"],[1,"text-s","text-gray-500","dark:text-gray-400","mt-0.5"],[1,"flex-shrink-0","ml-auto"],["type","button","title","Remove Exercise",1,"p-1","text-red-500","hover:text-red-700","dark:text-red-400","dark:hover:text-red-300","rounded-full","hover:bg-red-100","dark:hover:bg-red-900/30","disabled:opacity-50",3,"click"],["xmlns","http://www.w3.org/2000/svg","viewBox","0 0 16 16",1,"w-4","h-4"],["width","16","height","16","rx","3","ry","3","fill","red"],["fill","#ffffff","fill-rule","evenodd","clip-rule","evenodd","d","M4.22 4.22a.75.75 0 0 1 1.06 0L8 7.94l2.72-2.72a.75.75 0 1 1 1.06 1.06L9.06 9l2.72 2.72a.75.75 0 1 1-1.06 1.06L8 10.06 5.28 12.78a.75.75 0 0 1-1.06-1.06L6.94 9 4.22 6.28a.75.75 0 0 1 0-1.06z"],[1,"space-y-3"],[1,"flex","flex-col","sm:flex-row","justify-between","items-start","sm:items-center","pb-2","pt-1","sm:pt-0",3,"ngClass"],[1,"flex-grow"],[1,"text-lg","font-semibold","text-gray-800","dark:text-gray-100"],["class","text-xs text-orange-600 dark:text-orange-400 font-normal block",4,"ngIf"],[1,"flex","flex-col","items-start","sm:items-end","space-y-1","flex-shrink-0","w-full","sm:w-auto","mt-2","sm:mt-0"],["class","flex items-center space-x-1",4,"ngIf"],["type","button","class","flex items-center text-xs text-red-600 bg-red-200 hover:text-red-700 dark:text-red-400 dark:hover:text-red-300 font-medium py-1 px-2 rounded-md hover:enabled:bg-red-100 dark:enabled:hover:bg-red-900/50 disabled:opacity-50",3,"click",4,"ngIf"],["type","button","class","flex bg-violet-200 items-center text-xs text-violet-600 hover:text-violet-700 dark:text-violet-400 dark:hover:text-violet-300 font-medium py-1 px-2 rounded-md hover:bg-violet-100 dark:hover:bg-violet-900/50 disabled:opacity-50",3,"disabled","click",4,"ngIf"],[1,"block","text-s","font-medium","text-gray-600","dark:text-gray-400","mb-0.5",3,"for"],["formControlName","notes","rows","1","appAutoGrow","",1,"mt-0.5","block","w-full","p-1.5","text-sm","border-gray-300","dark:border-gray-500","rounded-md","shadow-sm","dark:bg-gray-600","dark:text-gray-200",3,"id","readonly"],["class","space-y-1",4,"ngIf"],[1,"text-xs","text-orange-600","dark:text-orange-400","font-normal","block"],[1,"flex","items-center","space-x-1"],[1,"text-xs","font-medium","text-gray-600","dark:text-gray-400","whitespace-nowrap",3,"for"],["type","number","formControlName","rounds","min","1",1,"w-16","p-1","text-m","border-gray-300","dark:border-gray-500","border-2","rounded-md","focus:ring-primary","focus:border-primary","dark:bg-gray-600","dark:text-gray-200","disabled:opacity-50","disabled:bg-gray-300","dark:disabled:bg-gray-500",3,"change","id","readonly"],["type","button",1,"flex","items-center","text-xs","text-red-600","bg-red-200","hover:text-red-700","dark:text-red-400","dark:hover:text-red-300","font-medium","py-1","px-2","rounded-md","hover:enabled:bg-red-100","dark:enabled:hover:bg-red-900/50","disabled:opacity-50",3,"click"],["xmlns","http://www.w3.org/2000/svg","viewBox","0 0 16 16",1,"w-4","h-4","mr-2"],["type","button",1,"flex","bg-violet-200","items-center","text-xs","text-violet-600","hover:text-violet-700","dark:text-violet-400","dark:hover:text-violet-300","font-medium","py-1","px-2","rounded-md","hover:bg-violet-100","dark:hover:bg-violet-900/50","disabled:opacity-50",3,"click","disabled"],["xmlns","http://www.w3.org/2000/svg","fill","none","viewBox","0 0 24 24","stroke-width","1.5","stroke","currentColor",1,"w-4","h-4","mr-1"],["stroke-linecap","round","stroke-linejoin","round","d","M3.75 3.75v4.5m0-4.5h4.5m-4.5 0L9 9M3.75 20.25v-4.5m0 4.5h4.5m-4.5 0L9 15M20.25 3.75v4.5m0-4.5h-4.5m4.5 0L15 9m5.25 11.25v-4.5m0 4.5h-4.5m4.5 0L15 15"],[1,"space-y-1"],[1,"flex","justify-between","items-center","mb-1"],[1,"text-m","font-semibold","text-gray-700","dark:text-gray-300"],["type","button","class","text-xs bg-blue-200 text-blue-600 hover:text-blue-700 dark:text-blue-400 dark:hover:text-blue-300 font-medium py-0.5 px-1.5 rounded-md hover:enabled:bg-blue-100 dark:hover:bg-blue-900/50",3,"click",4,"ngIf"],["formArrayName","sets",1,"space-y-1.5"],["class","grid grid-cols-12 gap-x-1 py-1 px-1.5 text-xs font-medium text-gray-500 dark:text-gray-400 border-b dark:border-gray-600",4,"ngIf"],[3,"formGroupName",4,"ngFor","ngForOf"],["type","button",1,"text-xs","bg-blue-200","text-blue-600","hover:text-blue-700","dark:text-blue-400","dark:hover:text-blue-300","font-medium","py-0.5","px-1.5","rounded-md","hover:enabled:bg-blue-100","dark:hover:bg-blue-900/50",3,"click"],[1,"grid","grid-cols-12","gap-x-1","py-1","px-1.5","text-xs","font-medium","text-gray-500","dark:text-gray-400","border-b","dark:border-gray-600"],[1,"col-span-1","text-center"],[1,"col-span-2","text-center","truncate"],[1,"col-span-2","text-center"],[1,"col-span-1"],[3,"formGroupName"],["class","grid grid-cols-12 gap-x-1 items-center py-1.5 px-1.5 rounded-md hover:bg-gray-100 dark:hover:bg-gray-800/60 cursor-pointer border dark:border-gray-700 dark:text-white",3,"ngClass","click",4,"ngIf"],["class","mt-1 p-3 rounded-md border border-gray-300 dark:border-gray-500 shadow-inner space-y-2",3,"ngClass",4,"ngIf"],[1,"grid","grid-cols-12","gap-x-1","items-center","py-1.5","px-1.5","rounded-md","hover:bg-gray-100","dark:hover:bg-gray-800/60","cursor-pointer","border","dark:border-gray-700","dark:text-white",3,"click","ngClass"],[1,"col-span-1","text-s","text-center","font-medium"],[1,"col-span-2","text-xs","text-center","truncate",3,"title"],[1,"col-span-2","text-s","text-center"],[1,"col-span-1","text-s","text-center"],[1,"col-span-2","text-s","text-center","truncate",3,"title"],[1,"col-span-1","text-s","text-center","truncate",3,"title"],["class","col-span-1 flex items-center justify-end",4,"ngIf"],["class","col-span-1",4,"ngIf"],[1,"col-span-1","flex","items-center","justify-end"],["type","button","title","Remove Set",1,"flex","items-center","text-red-500","hover:text-red-600","dark:text-red-400","dark:hover:text-red-300","p-0.5","rounded-full","hover:bg-red-100","dark:hover:bg-red-900/30","disabled:opacity-50",3,"click"],[1,"mt-1","p-3","rounded-md","border","border-gray-300","dark:border-gray-500","shadow-inner","space-y-2",3,"ngClass"],[1,"grid","grid-cols-2","sm:grid-cols-3","gap-x-3","gap-y-2","items-end"],[1,"col-span-full","sm:col-span-1"],[1,"block","text-s","font-medium","text-gray-600","dark:text-gray-400",3,"for"],["formControlName","type",1,"mt-0.5","w-full","p-1.5","text-m","border-gray-300","dark:border-gray-500","rounded-md","dark:bg-gray-600","dark:text-gray-200","disabled:opacity-70","disabled:cursor-not-allowed",3,"id","disabled"],["type","number","placeholder","Reps",1,"mt-0.5","w-full","p-1.5","text-m","border-gray-300","dark:border-gray-500","rounded-md","dark:bg-gray-600","dark:text-gray-200","disabled:opacity-70","disabled:cursor-not-allowed",3,"id","formControlName","readonly"],["type","number","placeholder","Weight",1,"mt-0.5","w-full","p-1.5","text-m","border-gray-300","dark:border-gray-500","rounded-md","dark:bg-gray-600","dark:text-gray-200","disabled:opacity-70","disabled:cursor-not-allowed",3,"id","formControlName","readonly"],["type","number","placeholder","Secs",1,"mt-0.5","w-full","p-1.5","text-m","border-gray-300","dark:border-gray-500","rounded-md","dark:bg-gray-600","dark:text-gray-200","disabled:opacity-70","disabled:cursor-not-allowed",3,"id","formControlName","readonly"],[1,"col-span-full"],["type","text","formControlName","notes","placeholder","e.g. Good form",1,"mt-0.5","w-full","p-1.5","text-m","border-gray-300","dark:border-gray-500","rounded-md","dark:bg-gray-600","dark:text-gray-200","disabled:opacity-70","disabled:cursor-not-allowed",3,"id","readonly"],[1,"mt-2","text-right"],["type","button","title","Collapse set",1,"bg-blue-200","text-xs","text-blue-600","hover:text-blue-700","dark:text-blue-400","dark:hover:text-blue-300","font-medium","py-1","px-2","rounded-md",3,"click"],["xmlns","http://www.w3.org/2000/svg","viewBox","0 0 24 24","width","24","height","24"],["d","M 12 5 L 12 10 M 9 7 L 12 10 L 15 7 M 12 19 L 12 14 M 9 17 L 12 14 L 15 17","fill","none","stroke","currentColor","stroke-width","1.5","stroke-linecap","round","stroke-linejoin","round"],["type","text","formControlName","tempo","placeholder","e.g. 2010",1,"mt-0.5","w-full","p-1.5","text-m","border-gray-300","dark:border-gray-500","rounded-md","dark:bg-gray-600","dark:text-gray-200","disabled:opacity-70","disabled:cursor-not-allowed",3,"id","readonly"],["type","number","formControlName","restAfterSet","placeholder","Rest",1,"mt-0.5","w-full","p-1.5","text-m","border-gray-300","dark:border-gray-500","rounded-md","dark:bg-gray-600","dark:text-gray-200","disabled:opacity-70","disabled:cursor-not-allowed",3,"id","readonly"],["type","button","title","Collapse exercise",1,"bg-blue-200","mt-1","p-1","text-blue-600","hover:text-gray-500","dark:text-gray-400","dark:hover:text-gray-200","flex-shrink-0","rounded-md",3,"click"],[1,"text-center","py-6","text-gray-500","dark:text-gray-400","border","border-dashed","dark:border-gray-700","rounded-md","mt-4"],[1,"mb-2"],["type","button",1,"bg-green-500","hover:bg-green-600","text-white","text-m","font-medium","py-2","px-3","rounded-md",3,"click"],[1,"text-center","py-4","text-gray-500","dark:text-gray-400"],[1,"mt-6","text-center"],["type","button",1,"bg-green-500","hover:bg-green-600","text-white","font-semibold","py-2","px-6","rounded-md","shadow-md","hover:shadow-lg","transition-all","duration-300","focus:outline-none","focus:ring-2","focus:ring-green-400","focus:ring-opacity-75",3,"click"],["xmlns","http://www.w3.org/2000/svg","viewBox","0 0 20 20","fill","currentColor",1,"w-5","h-5","mr-2","inline-block"],["d","M10.75 4.75a.75.75 0 0 0-1.5 0v4.5h-4.5a.75.75 0 0 0 0 1.5h4.5v4.5a.75.75 0 0 0 1.5 0v-4.5h4.5a.75.75 0 0 0 0-1.5h-4.5v-4.5Z"],[1,"p-4","bg-blue-50","dark:bg-blue-900/30","rounded-lg","text-center"],[1,"text-m","text-blue-700","dark:text-blue-300"],[1,"pt-6","flex","justify-end","space-x-3"],["type","button",1,"px-4","py-2","border","border-gray-300","dark:border-gray-600","rounded-md","shadow-sm","text-m","font-medium","text-gray-700","dark:text-gray-200","hover:bg-gray-50","dark:hover:bg-gray-500",3,"routerLink"],["type","submit",1,"px-4","py-2","border","border-transparent","rounded-md","shadow-sm","text-sm","font-medium","text-white","bg-primary","hover:bg-primary-dark","focus:outline-none","focus:ring-2","focus:ring-offset-2","focus:ring-primary-dark","disabled:opacity-50",3,"disabled"],[1,"fixed","inset-0","bg-gray-700","bg-opacity-75","transition-opacity","overflow-y-auto","h-full","w-full","z-[70]","flex","items-center","justify-center","p-4",3,"click"],[1,"relative","transform","overflow-hidden","rounded-lg","bg-white","dark:bg-gray-700","text-left","shadow-xl","transition-all","sm:my-8","sm:w-full","sm:max-w-lg",3,"click"],[1,"bg-white","dark:bg-gray-700","px-4","pt-5","pb-4","sm:p-6","sm:pb-4"],[1,"flex","justify-between","items-center","pb-3"],[1,"text-xl","font-semibold","text-gray-900","dark:text-gray-100"],["type","button",1,"p-1","rounded-full","text-gray-400","hover:text-gray-600",3,"click"],["xmlns","http://www.w3.org/2000/svg","fill","none","viewBox","0 0 24 24","stroke-width","1.5","stroke","currentColor",1,"w-6","h-6"],["stroke-linecap","round","stroke-linejoin","round","d","M6 18 18 6M6 6l12 12"],[1,"my-4"],["type","text","placeholder","Search exercises...",1,"w-full","p-2","border","border-gray-300","dark:border-gray-600","rounded-md","dark:bg-gray-700","dark:text-gray-200",3,"ngModelChange","ngModel"],[1,"mt-2","max-h-80","overflow-y-auto"],["class","p-3 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-md cursor-pointer flex justify-between items-center",3,"click",4,"ngFor","ngForOf"],["class","text-gray-500 dark:text-gray-400 text-center p-4",4,"ngIf"],[1,"mt-4","pt-4","border-t","border-gray-200","dark:border-gray-600","text-center"],["type","button",1,"text-sm","text-primary","dark:text-primary-light","hover:underline",3,"click"],[1,"bg-gray-50","dark:bg-gray-700","px-4","py-3","sm:flex","sm:flex-row-reverse","sm:px-6"],["type","button",1,"mt-3","inline-flex","w-full","justify-center","rounded-md","bg-white","dark:bg-gray-700","px-3","py-2","text-sm","font-semibold","text-gray-900","dark:text-gray-200","shadow-sm","ring-1","ring-inset","ring-gray-300","dark:ring-gray-500","hover:bg-gray-50","dark:hover:bg-gray-500","sm:mt-0","sm:w-auto",3,"click"],[1,"p-3","hover:bg-gray-100","dark:hover:bg-gray-700","rounded-md","cursor-pointer","flex","justify-between","items-center",3,"click"],[1,"font-medium","text-gray-800","dark:text-gray-200"],[1,"block","text-xs","text-gray-500","dark:text-gray-400"],["xmlns","http://www.w3.org/2000/svg","viewBox","0 0 20 20","fill","currentColor",1,"w-5","h-5","text-primary","dark:text-primary-light"],["fill-rule","evenodd","d","M8.22 5.22a.75.75 0 0 1 1.06 0l4.25 4.25a.75.75 0 0 1 0 1.06l-4.25 4.25a.75.75 0 0 1-1.06-1.06L11.94 10 8.22 6.28a.75.75 0 0 1 0-1.06Z","clip-rule","evenodd"],[1,"text-gray-500","dark:text-gray-400","text-center","p-4"]],template:function(e,o){if(e&1&&(se(0,nL,2,1,"div",1),k(1,"div",2)(2,"header",3)(3,"div",4)(4,"button",5),_e(),k(5,"svg",6),ce(6,"path",7),T()(),He(),k(7,"h1",8),O(8),T(),ce(9,"div",9),T(),se(10,sL,10,1,"div",10),T(),k(11,"form",11),ne("ngSubmit",function(){return o.onSubmit()}),k(12,"section",12),se(13,xL,9,7,"ng-container",13)(14,kL,32,16,"ng-container",13),T(),se(15,uM,10,7,"section",14)(16,cM,3,0,"section",15)(17,pM,5,3,"div",16),T(),se(18,fM,21,3,"div",17),T()),e&2){let n,i,s;L("ngIf",o.errorMessage()),R(4),L("routerLink",o.mode==="routineBuilder"?"/workout":"/history/list"),R(4),Se(" ",o.mode==="routineBuilder"?o.isNewMode?"New Routine":o.isViewMode?((n=o.builderForm.get("name"))==null?null:n.value)||"View Routine":"EDIT: "+(((n=o.builderForm.get("name"))==null?null:n.value)||"Routine"):o.isNewMode?"Log Past Workout":"EDIT Log: "+(((n=o.builderForm.get("name"))==null?null:n.value)||"Workout")," "),R(2),L("ngIf",o.mode==="routineBuilder"&&!o.isNewMode&&o.currentRoutineId),R(),L("formGroup",o.builderForm),R(2),L("ngIf",o.mode==="routineBuilder"),R(),L("ngIf",o.mode==="manualLogEntry"),R(),L("ngIf",o.mode==="manualLogEntry"||((i=o.builderForm.get("goal"))==null?null:i.value)!=="rest"),R(),L("ngIf",o.mode==="routineBuilder"&&((s=o.builderForm.get("goal"))==null?null:s.value)==="rest"),R(),L("ngIf",!o.isViewMode),R(),L("ngIf",o.isExerciseModalOpen)}},dependencies:[wo,Qn,Jo,So,Sa,Bd,$d,Od,Ld,Nd,Pd,Fd,_a,Rd,TS,Ad,Dd,kS,IS,Jn,Ia,ka,FS,DS,AS,$a,Ud,Gd],styles:[".exercise-list-container[_ngcontent-%COMP%]{min-height:60px}.exercise-item[_ngcontent-%COMP%]{transition:transform .2s ease-out,box-shadow .2s ease-out}.is-long-pressing[_ngcontent-%COMP%]{transform:scale(1.03);box-shadow:0 5px 15px #00000040;border-color:#e0460d;border-width:2px;z-index:1000}.cdk-drag-placeholder[_ngcontent-%COMP%]{opacity:.4;background:#ccc;border:dotted 2px #999;min-height:100px;transition:transform .25s cubic-bezier(0,0,.2,1);display:block;margin-bottom:.5rem}.cdk-drag-preview[_ngcontent-%COMP%]{box-shadow:0 5px 5px -3px #0003,0 8px 10px 1px #00000024,0 3px 14px 2px #0000001f;border-radius:.5rem;background-color:var(--card-background-color, white)}body.dark[_ngcontent-%COMP%]   .cdk-drag-preview[_ngcontent-%COMP%]{background-color:var(--dark-card-background-color, #1f2937)}.cdk-drop-list-dragging[_ngcontent-%COMP%]   .exercise-item[_ngcontent-%COMP%]:not(.cdk-drag-placeholder){transition:transform .25s cubic-bezier(0,0,.2,1)}.cdk-drag-handle[_ngcontent-%COMP%]{cursor:grab;padding:.25rem;color:#9ca3af;position:relative;top:.25rem;right:.25rem}.cdk-drag-handle[_ngcontent-%COMP%]:hover{color:#4b5563}.dark[_ngcontent-%COMP%]   .cdk-drag-handle[_ngcontent-%COMP%]{color:#6b7280}.dark[_ngcontent-%COMP%]   .cdk-drag-handle[_ngcontent-%COMP%]:hover{color:#d1d5db}@media (min-width: 640px){.cdk-drag-handle[_ngcontent-%COMP%]{position:static}}.superset-spacing[_ngcontent-%COMP%]{margin-top:0!important}"]})};var hM=["progressCircleSvg"];function gM(r,t){if(r&1&&(k(0,"div",13),O(1),T()),r&2){let e=M(2);R(),Se(" Prepare for: ",e.nextUpText," ")}}function xM(r,t){if(r&1){let e=ye();k(0,"div",2)(1,"div",3),_e(),k(2,"svg",4,0),ce(4,"circle",5)(5,"circle",6),T(),He(),k(6,"div",7)(7,"div",8),O(8),k(9,"span",9),O(10),T()(),k(11,"div",10),O(12),T()()(),k(13,"button",11),ne("click",function(){J(e);let n=M();return ee(n.skipTimer())}),O(14," Skip "),T(),se(15,gM,2,1,"div",12),T()}if(r&2){let e=M();Oo("opacity-100",e.isVisible)("opacity-0",!e.isVisible),R(4),jx("r",e.getCircleRadius()),R(),jx("r",e.getCircleRadius())("stroke-dasharray",e.getCircleCircumference())("stroke-dashoffset",e.strokeDashoffset()),R(3),Se(" ",e.displayTime()),R(2),We(e.displayTentsTime()),R(2),Se(" ",e.mainText," "),R(3),L("ngIf",e.nextUpText)}}var Kd=class r{isVisible=!1;durationSeconds=60;mainText="RESTING";nextUpText=null;timerFinished=new bn;timerSkipped=new bn;progressCircleSvg;timerIntervalId;circleRadius=90;circumference=2*Math.PI*this.circleRadius;timerUpdateIntervalMs=100;remainingTime=Ee(0);initialDuration=Ee(0);strokeDashoffset=Et(()=>{let t=this.initialDuration();if(t<=0)return this.circumference;let e=Math.max(0,this.remainingTime())/t;return this.circumference*(1-e)});displayTime=Et(()=>{let t=Math.max(0,this.remainingTime()),e=Math.floor(t/60),o=Math.floor(t%60);return e>0?`${e}:${o.toString().padStart(2,"0")}`:`${o}`});displayTentsTime=Et(()=>`.${Math.floor(Math.max(0,this.remainingTime())*10)%10}`);ngOnChanges(t){t.isVisible&&(this.isVisible?this.startTimer():this.stopTimer()),t.durationSeconds&&this.isVisible?this.startTimer():t.durationSeconds&&!this.isVisible&&(this.initialDuration.set(this.durationSeconds),this.remainingTime.set(this.durationSeconds))}ngAfterViewInit(){}startTimer(){if(this.stopTimer(),this.initialDuration.set(this.durationSeconds),this.remainingTime.set(this.durationSeconds),this.durationSeconds<=0){this.timerFinished.emit();return}let t=this.timerUpdateIntervalMs/1e3;this.timerIntervalId=setInterval(()=>{this.remainingTime.update(e=>{let o=e-t;return o<=0?(this.stopTimer(),this.timerFinished.emit(),0):o})},this.timerUpdateIntervalMs)}stopTimer(){this.timerIntervalId&&(clearInterval(this.timerIntervalId),this.timerIntervalId=null)}skipTimer(){this.stopTimer(),this.timerSkipped.emit()}ngOnDestroy(){this.stopTimer()}getCircleCircumference(){return this.circumference}getCircleRadius(){return this.circleRadius}static \u0275fac=function(e){return new(e||r)};static \u0275cmp=yo({type:r,selectors:[["app-full-screen-rest-timer"]],viewQuery:function(e,o){if(e&1&&Po(hM,5),e&2){let n;Ao(n=Do())&&(o.progressCircleSvg=n.first)}},inputs:{isVisible:"isVisible",durationSeconds:"durationSeconds",mainText:"mainText",nextUpText:"nextUpText"},outputs:{timerFinished:"timerFinished",timerSkipped:"timerSkipped"},features:[fS],decls:1,vars:1,consts:[["progressCircleSvg",""],["class","fixed inset-0 z-50 flex flex-col items-center justify-center bg-black/70 backdrop-blur-sm transition-opacity duration-300 ease-in-out",3,"opacity-100","opacity-0",4,"ngIf"],[1,"fixed","inset-0","z-50","flex","flex-col","items-center","justify-center","bg-black/70","backdrop-blur-sm","transition-opacity","duration-300","ease-in-out"],[1,"relative","flex","flex-col","items-center","justify-center","text-white"],["viewBox","0 0 200 200",1,"w-64","h-64","md:w-80","md:h-80","transform","-rotate-90"],["cx","100","cy","100","fill","transparent","stroke","rgba(255, 255, 255, 0.2)","stroke-width","12"],["cx","100","cy","100","fill","transparent","stroke","currentColor","stroke-width","14","stroke-linecap","round",1,"text-primary"],[1,"absolute","inset-0","flex","flex-col","items-center","justify-center","text-center"],[1,"text-6xl","md:text-7xl","font-bold","tabular-nums"],[1,"text-4xl","md:text-5xl","font-bold","tabular-nums"],[1,"mt-2","text-xl","md:text-2xl","font-medium","uppercase","tracking-wider"],[1,"mt-12","py-3","px-8","bg-white/20","hover:bg-white/30","text-white","font-semibold","rounded-lg","shadow-md","transition-colors","duration-150","text-lg",3,"click"],["class","mt-5 text-center text-m md:text-base text-gray-300",4,"ngIf"],[1,"mt-5","text-center","text-m","md:text-base","text-gray-300"]],template:function(e,o){e&1&&se(0,xM,16,12,"div",1),e&2&&L("ngIf",o.isVisible)},dependencies:[wo,So],encapsulation:2,changeDetection:0})};var yM=["exerciseSearchFied"],vM=["intervalListItem"],bM=(r,t,e)=>({"tabata-work-bg":r,"tabata-rest-bg":t,"tabata-prepare-bg":e}),SM=(r,t)=>({"bg-white/90 text-black font-bold shadow-2xl -translate-y-px":r,"text-white/60 opacity-80":t}),wM=r=>({"filter dark:invert":r}),CM=(r,t,e,o)=>({"text-red-500":r,"animate-pulse":t,"text-green-500 dark:text-green-400":e,"text-gray-800 dark:text-gray-100":o}),_M=(r,t)=>({"bg-green-500 hover:bg-green-600":r,"bg-yellow-500 hover:bg-yellow-600 text-black":t}),kM=(r,t,e,o)=>({"bg-primary hover:bg-primary-dark active:bg-primary-dark focus:outline-none focus:ring-0":r,"bg-green-500 hover:bg-green-600 focus:ring-green-400":t,"bg-blue-500 hover:bg-blue-600 focus:ring-blue-400":e,"bg-gray-400 dark:bg-gray-600 text-gray-800 dark:text-gray-200 cursor-not-allowed":o}),zS=r=>({"rotate-180":r});function IM(r,t){r&1&&(_e(),k(0,"svg",36),ce(1,"path",37),T())}function TM(r,t){r&1&&(_e(),k(0,"svg",36),ce(1,"path",38),T())}function EM(r,t){if(r&1&&(k(0,"span",44),O(1),T()),r&2){let e=M().$implicit;R(),We(e.exerciseName)}}function NM(r,t){if(r&1&&(k(0,"li",39,2)(2,"div",40)(3,"span",41),O(4),T(),k(5,"span",42),O(6),T(),se(7,EM,2,1,"span",43),T()()),r&2){let e=t.$implicit,o=t.index,n=M(4);R(2),L("ngClass",Tr(5,SM,o===n.currentTabataIntervalIndex(),o!==n.currentTabataIntervalIndex())),R(2),Se("",e.currentIntervalNumber,"."),R(2),Bt("",e.type,": ",e.duration,"s"),R(),L("ngIf",e.type==="work")}}function RM(r,t){if(r&1){let e=ye();vo(0),ce(1,"div",17),k(2,"div",18)(3,"header",19)(4,"div",20),O(5),T(),k(6,"div",21)(7,"button",22),ne("click",function(){J(e);let n=M(3);return ee(n.toggleTabataPause())}),se(8,IM,2,0,"svg",23)(9,TM,2,0,"svg",23),T()()(),k(10,"main",24)(11,"h1",25),O(12),et(13,"number"),T(),k(14,"p",26),O(15),T()(),k(16,"div",27)(17,"ul",28),se(18,NM,8,8,"li",29),T()(),k(19,"footer",30)(20,"button",31),ne("click",function(){J(e);let n=M(3);return ee(n.previousTabataInterval())}),_e(),k(21,"svg",32),ce(22,"path",33),T()(),He(),k(23,"div",34),O(24),T(),k(25,"button",31),ne("click",function(){J(e);let n=M(3);return ee(n.nextTabataInterval())}),_e(),k(26,"svg",32),ce(27,"path",35),T()()()(),bo()}if(r&2){let e=t.ngIf,o=M(3);R(),L("ngClass",vS(16,bM,e.type==="work",e.type==="rest",e.type==="prepare")),R(4),Se(" Total: ",o.sessionTimerDisplay()," "),R(3),L("ngIf",o.sessionState()==="playing"),R(),L("ngIf",o.sessionState()==="paused"),R(2),Oo("animate-pulse",o.tabataTimeRemaining()<=3&&o.tabataTimeRemaining()>0),R(),Se(" ",o.tabataTimeRemaining()>=0?ao(13,13,o.tabataTimeRemaining(),"2.0-0"):"00"," "),R(3),Se(" ",e.exerciseName||e.type," "),R(3),L("ngForOf",o.tabataIntervals()),R(2),L("disabled",o.currentTabataIntervalIndex()===0),R(4),Bt(" ",e.currentIntervalNumber," / ",e.totalIntervals," "),R(),L("disabled",o.currentTabataIntervalIndex()===o.tabataIntervals().length-1)}}function $M(r,t){if(r&1&&(k(0,"div",15),se(1,RM,28,20,"ng-container",16),T()),r&2){let e=M(2);R(),L("ngIf",e.currentTabataInterval())}}function PM(r,t){if(r&1){let e=ye();k(0,"div",61)(1,"h2",62),O(2,"Session Paused"),T(),k(3,"p",63),O(4),T(),k(5,"button",64),ne("click",function(){J(e);let n=M(4);return ee(n.resumeSession())}),O(6," Resume Workout "),T(),k(7,"button",65),ne("click",function(){J(e);let n=M(4);return ee(n.quitWorkout())}),O(8," Quit Workout (No Save) "),T()()}if(r&2){let e=M(4);R(4),Se("Elapsed Time: ",e.sessionTimerDisplay())}}function AM(r,t){if(r&1&&ce(0,"img",81),r&2){let e=M().ngIf,o=M(5);L("src",o.getIconPath(e.iconName),Cd)("alt",e.name+" icon")("ngClass",us(3,wM,e.iconName!=="default-exercise"&&e.iconName!==""&&e.iconName!==null))}}function DM(r,t){if(r&1&&(k(0,"div",79),se(1,AM,1,5,"img",80),T()),r&2){let e=t.ngIf;R(),L("ngIf",e.iconName)}}function FM(r,t){r&1&&ce(0,"div",82)}function OM(r,t){if(r&1&&(k(0,"span"),O(1),T()),r&2){let e=M(6);R(),Se("/",e.getTotalWarmupSetsForCurrentExercise())}}function LM(r,t){if(r&1&&(k(0,"span",83),O(1),se(2,OM,2,1,"span",16),T()),r&2){let e=M(5);R(),Se(" Warm-up Set ",e.getCurrentWarmupSetNumber()," "),R(),L("ngIf",e.getTotalWarmupSetsForCurrentExercise()>0)}}function MM(r,t){if(r&1&&(k(0,"span"),O(1),T()),r&2){let e=M(5);R(),Bt(" Set ",e.getCurrentWorkingSetNumber(),"/",e.getWorkingSetCountForCurrentExercise()," ")}}function BM(r,t){if(r&1&&(k(0,"span",84),O(1),T()),r&2){let e=M(5);R(),Bt(" (Round ",e.currentBlockRound(),"/",e.totalBlockRounds(),") ")}}function VM(r,t){if(r&1&&(k(0,"span",85),O(1),T()),r&2){let e=M().ngIf;R(),Bt(" (Superset ",(e.exerciseData.supersetOrder??0)+1,"/",e.exerciseData.supersetSize??"?",") ")}}function WM(r,t){r&1&&(k(0,"span",89),O(1,"Marked as Skipped"),T())}function zM(r,t){r&1&&(k(0,"span",90),O(1,"Marked for Later"),T())}function UM(r,t){if(r&1&&(k(0,"div",86),se(1,WM,2,0,"span",87)(2,zM,2,0,"span",88),T()),r&2){let e=M().ngIf;R(),L("ngIf",e.exerciseData.sessionStatus==="skipped"),R(),L("ngIf",e.exerciseData.sessionStatus==="do_later")}}function GM(r,t){if(r&1){let e=ye();k(0,"div",91)(1,"h3",92),O(2,"Get Ready!"),T(),k(3,"p",93),O(4),T(),k(5,"p",94),O(6),et(7,"weightUnit"),T(),k(8,"button",95),ne("click",function(){J(e);let n=M(5);return ee(n.skipPresetTimer())}),O(9," Skip Countdown & Start Set "),T()()}if(r&2){let e=M().ngIf,o=M(4);R(4),Se("",o.presetTimerCountdownDisplay(),"s"),R(2),yS(" Upcoming: ",e.setData.reps?e.setData.reps+" reps":""," ",e.setData.reps&&e.setData.weight?" at ":""," ",e.setData.weight?Dt(7,5,e.setData.weight):""," ",e.setData.duration?e.setData.duration+"s":""," ")}}function HM(r,t){if(r&1){let e=ye();k(0,"div")(1,"label",100),O(2,"Weight"),T(),k(3,"div",101)(4,"button",102),ne("shortPress",function(){J(e);let n=M(6);return ee(n.onShortPressWeightDecrement())})("longPress",function(){J(e);let n=M(6);return ee(n.onLongPressWeightDecrement())})("pressRelease",function(){J(e);let n=M(6);return ee(n.onPressRelease())}),_e(),k(5,"svg",103),ce(6,"path",104),T()(),He(),k(7,"div",105),ne("click",function(){J(e);let n=M(6);return ee(n.editWeightWithPrompt())}),O(8),et(9,"number"),T(),ce(10,"input",106),k(11,"span",107),O(12),T(),k(13,"button",102),ne("shortPress",function(){J(e);let n=M(6);return ee(n.onShortPressWeightIncrement())})("longPress",function(){J(e);let n=M(6);return ee(n.onLongPressWeightIncrement())})("pressRelease",function(){J(e);let n=M(6);return ee(n.onPressRelease())}),_e(),k(14,"svg",103),ce(15,"path",108),T()()()()}if(r&2){let e=M(6);R(4),L("disabled",e.getDisabled()),R(4),Se(" ",ao(9,4,e.csf.actualWeight.value,"1.0-2")??"0"," "),R(4),We(e.weightUnitDisplaySymbol),R(),L("disabled",e.getDisabled())}}function KM(r,t){if(r&1){let e=ye();k(0,"div")(1,"label",100),O(2,"Reps"),T(),k(3,"div",101)(4,"button",102),ne("shortPress",function(){J(e);let n=M(6);return ee(n.onShortPressRepsDecrement())})("longPress",function(){J(e);let n=M(6);return ee(n.onLongPressRepsDecrement())})("pressRelease",function(){J(e);let n=M(6);return ee(n.onPressRelease())}),_e(),k(5,"svg",103),ce(6,"path",104),T()(),He(),ce(7,"input",109),k(8,"button",102),ne("shortPress",function(){J(e);let n=M(6);return ee(n.onShortPressRepsIncrement())})("longPress",function(){J(e);let n=M(6);return ee(n.onLongPressRepsIncrement())})("pressRelease",function(){J(e);let n=M(6);return ee(n.onPressRelease())}),_e(),k(9,"svg",103),ce(10,"path",108),T()()()()}if(r&2){let e=M(6);R(4),L("disabled",e.getDisabled()),R(4),L("disabled",e.getDisabled())}}function qM(r,t){if(r&1&&(k(0,"span"),O(1),et(2,"date"),T()),r&2){let e=M(3).ngIf;R(),Se("(Target: ",Qx(2,1,e.setData.duration*1e3,"mm:ss","UTC"),")")}}function jM(r,t){r&1&&(k(0,"span"),O(1,"START TIMER"),T())}function XM(r,t){r&1&&(k(0,"span"),O(1,"PAUSE TIMER"),T())}function YM(r,t){r&1&&(k(0,"span"),O(1,"RESUME TIMER"),T())}function QM(r,t){if(r&1){let e=ye();k(0,"button",116),ne("click",function(){J(e);let n=M(7);return ee(n.resetTimedSet())}),O(1," RESET "),T()}}function ZM(r,t){if(r&1){let e=ye();k(0,"div")(1,"label",110),O(2," Time (seconds) "),se(3,qM,3,5,"span",16),T(),k(4,"div",111),O(5),et(6,"date"),T(),ce(7,"input",112),k(8,"div",113)(9,"button",114),ne("click",function(){J(e);let n=M(6);return ee(n.toggleTimedSetTimer())}),se(10,jM,2,0,"span",16)(11,XM,2,0,"span",16)(12,YM,2,0,"span",16),T(),se(13,QM,2,0,"button",115),T()()}if(r&2){let e,o=M(2).ngIf,n=M(4);R(3),L("ngIf",o.setData.duration>0),R(),L("ngClass",Yx(12,CM,n.isTimedSetOvertime(),n.isTimedSetOvertime()&&n.timedSetTimerState()==="running",!n.isTimedSetOvertime()&&n.timedSetTimerState()==="running"&&(((e=n.activeSetInfo())==null||e.setData==null?null:e.setData.duration)??0)>0&&n.timedSetElapsedSeconds()>0,n.timedSetTimerState()==="idle"||n.timedSetTimerState()==="paused"||!((((e=n.activeSetInfo())==null||e.setData==null?null:e.setData.duration)??0)>0&&n.timedSetElapsedSeconds()>0&&!n.isTimedSetOvertime()))),R(),Se(" ",Qx(6,8,n.timedSetDisplay()*1e3,"mm:ss","UTC")," "),R(4),L("ngClass",Tr(17,_M,n.timedSetTimerState()==="idle"||n.timedSetTimerState()==="paused",n.timedSetTimerState()==="running")),R(),L("ngIf",n.timedSetTimerState()==="idle"),R(),L("ngIf",n.timedSetTimerState()==="running"),R(),L("ngIf",n.timedSetTimerState()==="paused"),R(),L("ngIf",n.timedSetTimerState()!=="idle")}}function JM(r,t){if(r&1&&(k(0,"div")(1,"form",96),se(2,HM,16,7,"div",16)(3,KM,11,2,"div",16)(4,ZM,14,20,"div",16),k(5,"div",97)(6,"label",98),O(7,"Set Notes (Optional)"),T(),ce(8,"textarea",99),T()()()),r&2){let e=M().ngIf,o=M(4);R(),L("formGroup",o.currentSetForm),R(),L("ngIf",o.csf.actualWeight),R(),L("ngIf",o.csf.actualReps&&e.setData.reps!==void 0),R(),L("ngIf",e.setData.duration!==void 0),R(4),L("disabled",o.getDisabled())}}function eB(r,t){if(r&1){let e=ye();k(0,"div",117)(1,"div",118)(2,"button",119),ne("click",function(){J(e);let n=M(5);return ee(n.handleMainAction())}),O(3),T()()()}if(r&2){let e=M(5);R(2),L("disabled",e.sessionState()==="paused"||e.playerSubState()===e.PlayerSubState.PresetCountdown&&e.presetTimerCountdownDisplay()!=="0"&&e.presetTimerCountdownDisplay()!==null||e.playerSubState()===e.PlayerSubState.Resting&&e.isRestTimerVisible())("ngClass",Yx(3,kM,e.playerSubState()===e.PlayerSubState.PerformingSet&&!e.checkIfLatestSetOfWorkoutConsideringPending(),e.playerSubState()===e.PlayerSubState.PerformingSet&&e.checkIfLatestSetOfWorkoutConsideringPending(),e.playerSubState()===e.PlayerSubState.PresetCountdown,e.playerSubState()===e.PlayerSubState.Resting&&e.isRestTimerVisible())),R(),Se(" ",e.mainActionButtonLabel()," ")}}function tB(r,t){if(r&1&&(k(0,"div",120)(1,"span",121),O(2,"Next up: "),T(),k(3,"span"),O(4),T()()),r&2){let e=M(5);L("title",e.getNextUpText(e.activeSetInfo(),e.routine()??null)||"Next Exercise"),R(4),We(e.getNextUpText(e.activeSetInfo(),e.routine()??null)||"Next Exercise")}}function rB(r,t){if(r&1){let e=ye();k(0,"div",66)(1,"div",67),ne("click",function(){let n=J(e).ngIf,i=M(4);return ee(i.openModal(n.exerciseData))}),se(2,DM,2,1,"div",68)(3,FM,1,0,"ng-template",null,5,Lo),k(5,"h2",69),O(6),T()(),k(7,"div",70)(8,"p",71),se(9,LM,3,2,"span",72)(10,MM,2,2,"span",16)(11,BM,2,2,"span",73)(12,VM,2,2,"span",74),T()(),se(13,UM,3,2,"div",75)(14,GM,10,7,"div",76)(15,JM,9,5,"div",16)(16,eB,4,8,"div",77)(17,tB,5,2,"div",78),T()}if(r&2){let e=t.ngIf,o=Fo(4),n=M(4);R(),L("title","Click/tap for more info about the exercise"),R(),L("ngIf",n.currentBaseExercise())("ngIfElse",o),R(3),L("title",e.exerciseData.exerciseName),R(),Se(" ",e.exerciseData.exerciseName||"Loading Exercise..."," "),R(3),L("ngIf",e.type==="warmup"),R(),L("ngIf",e.type!=="warmup"),R(),L("ngIf",n.totalBlockRounds()>=1&&n.currentBlockRound()>0),R(),L("ngIf",e.exerciseData.supersetId),R(),L("ngIf",e.exerciseData.sessionStatus&&e.exerciseData.sessionStatus!=="pending"),R(),L("ngIf",n.playerSubState()===n.PlayerSubState.PresetCountdown),R(),L("ngIf",n.playerSubState()===n.PlayerSubState.PerformingSet),R(),L("ngIf",n.routine()&&n.sessionState()==="playing"&&n.activeSetInfo()),R(),L("ngIf",n.getNextUpText(n.activeSetInfo(),n.routine()??null))}}function oB(r,t){if(r&1&&(k(0,"p",128),O(1),T()),r&2){let e=M(5);R(),Se(" ",e.currentWorkoutLogExercises().length===0?"No sets logged yet":"All planned sets are done. Well done!"," ")}}function nB(r,t){if(r&1){let e=ye();k(0,"button",129),ne("click",function(){J(e);let n=M(5);return ee(n.finishWorkoutAndReportStatus())}),O(1," Confirm & Save Workout "),T()}}function iB(r,t){r&1&&(k(0,"button",130),O(1," Back to Workouts "),T())}function sB(r,t){if(r&1){let e=ye();k(0,"div",122)(1,"h2",123),O(2),T(),se(3,oB,2,1,"p",124)(4,nB,2,0,"button",125)(5,iB,2,0,"button",126),k(6,"button",127),ne("click",function(){J(e);let n=M(4);return ee(n.addExerciseDuringSession())}),O(7," + Add Exercise to Session "),T()()}if(r&2){let e=M(4);R(2),Se(" ",e.sessionState()==="error"?"Error Loading Workout":e.currentWorkoutLogExercises().length===0?e.routineId==="-1"?"Workout to be started":"Workout Ended":"Workout Complete!"," "),R(),L("ngIf",e.sessionState()!=="error"),R(),L("ngIf",e.sessionState()!=="error"&&e.currentWorkoutLogExercises().length>0),R(),L("ngIf",e.sessionState()!=="error"&&e.currentWorkoutLogExercises().length===0),R(),L("disabled",e.sessionState()==="paused")}}function aB(r,t){if(r&1){let e=ye();k(0,"div")(1,"div",133),O(2,"UP NEXT"),T(),k(3,"div",134),O(4),T(),k(5,"div",135),O(6),et(7,"number"),k(8,"button",136),ne("click",function(){J(e);let n=M(5);return ee(n.skipRest())}),O(9,"(Skip)"),T()()()}if(r&2){let e=M(5);R(3),L("title",e.restTimerNextUpText()),R(),Se(" ",e.restTimerNextUpText()||"Next Exercise"," "),R(2),Se(" Rest: ",e.restTimerDisplay()||ao(7,3,e.restDuration(),"1.0-0")+"s"," ")}}function lB(r,t){if(r&1){let e=ye();k(0,"div")(1,"div",134),O(2),T(),k(3,"div",137),O(4),T(),k(5,"button",138),ne("click",function(){J(e);let n=M(5);return ee(n.skipPresetTimer())}),O(6,"(Skip Countdown)"),T()()}if(r&2){let e=M(5);R(),L("title",e.restTimerMainText()),R(),Se(" ",e.restTimerMainText()," "),R(2),Se(" ",e.presetTimerCountdownDisplay(),"s ")}}function uB(r,t){if(r&1&&(k(0,"footer",131)(1,"div",132),se(2,aB,10,6,"div",16)(3,lB,7,3,"div",16),T()()),r&2){let e=M(4);R(2),L("ngIf",e.playerSubState()===e.PlayerSubState.Resting&&!e.isRestTimerVisible()),R(),L("ngIf",e.playerSubState()===e.PlayerSubState.PresetCountdown)}}function cB(r,t){if(r&1){let e=ye();k(0,"div",139)(1,"button",140),ne("click",function(){J(e);let n=M(4);return ee(n.goBack())}),_e(),k(2,"svg",50),ce(3,"path",51),T()(),He(),k(4,"div",52)(5,"h1",141),O(6,"Error"),T()(),ce(7,"div",142),T(),k(8,"div",143)(9,"h2",144),O(10,"Routine Not Found"),T(),k(11,"p",145),O(12,"The selected routine could not be loaded."),T(),k(13,"button",146),_e(),k(14,"svg",50),ce(15,"path",51),T()()()}}function pB(r,t){if(r&1){let e=ye();k(0,"div",46),se(1,PM,9,1,"div",47),k(2,"header",48)(3,"button",49),ne("click",function(){J(e);let n=M(3);return ee(n.goBack())}),_e(),k(4,"svg",50),ce(5,"path",51),T()(),He(),k(6,"div",52)(7,"h1",53),O(8),T(),k(9,"div",54),O(10),T()(),k(11,"button",55),ne("click",function(){J(e);let n=M(3);return ee(n.toggleWorkoutMenu())}),_e(),k(12,"svg",56),ce(13,"path",57),T()()(),He(),k(14,"main",58),se(15,rB,18,14,"div",59)(16,sB,8,5,"ng-template",null,3,Lo),T(),se(18,uB,4,2,"footer",60)(19,cB,16,0,"ng-template",null,4,Lo),T()}if(r&2){let e=Fo(17),o=M(2).ngIf,n=M();R(),L("ngIf",n.sessionState()==="paused"),R(6),L("title",o.name),R(),Se(" ",o.name||"Workout"," "),R(2),We(n.sessionTimerDisplay()),R(),L("disabled",n.sessionState()==="loading"||n.sessionState()==="error"||n.sessionState()==="paused"&&!n.isWorkoutMenuVisible()),R(4),L("ngIf",n.activeSetInfo())("ngIfElse",e),R(3),L("ngIf",n.routine()&&n.sessionState()==="playing"&&n.activeSetInfo()&&(n.playerSubState()===n.PlayerSubState.Resting&&!n.isRestTimerVisible()||n.playerSubState()===n.PlayerSubState.PresetCountdown))}}function dB(r,t){if(r&1&&se(0,pB,21,8,"div",45),r&2){let e=M(2),o=Fo(6);L("ngIf",e.routine()!==void 0)("ngIfElse",o)}}function mB(r,t){if(r&1&&(vo(0,13),se(1,$M,2,1,"div",14)(2,dB,1,2,"ng-template",null,1,Lo),bo()),r&2){let e=Fo(3),o=M();R(),L("ngIf",o.isTabataMode())("ngIfElse",e)}}function fB(r,t){r&1&&(k(0,"span",175),O(1,"(already started main sets)"),T())}function hB(r,t){r&1&&(k(0,"span"),O(1,"(No exercises logged yet)"),T())}function gB(r,t){if(r&1){let e=ye();k(0,"div",147)(1,"div",148),ce(2,"div"),k(3,"button",149),ne("click",function(){J(e);let n=M();return ee(n.closeWorkoutMenu())}),_e(),k(4,"svg",150),ce(5,"path",151),T()(),He(),ce(6,"div"),T(),k(7,"h2",152),O(8,"Workout Menu"),T(),k(9,"button",153),ne("click",function(){J(e);let n=M();return ee(n.pauseSession())}),_e(),k(10,"svg",154),ce(11,"circle",155)(12,"rect",156)(13,"rect",157),T(),O(14," PAUSE WORKOUT "),T(),He(),k(15,"button",158),ne("click",function(){J(e);let n=M();return ee(n.jumpToExercise())}),_e(),k(16,"svg",159),ce(17,"path",160),T(),O(18," JUMP TO EXERCISE "),T(),He(),k(19,"button",161),ne("click",function(){J(e);let n=M();return ee(n.openPerformanceInsightsFromMenu())}),_e(),k(20,"svg",162),ce(21,"path",163),T(),O(22," PERFORMANCE INSIGHTS "),T(),He(),k(23,"button",164),ne("click",function(){J(e);let n=M();return ee(n.addWarmupSet())}),k(24,"p"),O(25,"+ ADD WARM-UP SET"),T(),se(26,fB,2,0,"span",165),T(),k(27,"button",166),ne("click",function(){J(e);let n=M();return ee(n.addExerciseDuringSession())}),_e(),k(28,"svg",167)(29,"g")(30,"g"),ce(31,"path",168)(32,"path",169),T()()(),O(33," ADD EXERCISE TO SESSION "),T(),He(),k(34,"button",170),ne("click",function(){J(e);let n=M();return ee(n.skipCurrentSet())}),O(35," SKIP CURRENT SET "),T(),k(36,"button",171),ne("click",function(){J(e);let n=M();return ee(n.skipCurrentExercise())}),O(37," MARK EXERCISE AS SKIPPED "),T(),k(38,"button",172),ne("click",function(){J(e);let n=M();return ee(n.markCurrentExerciseDoLater())}),O(39," MARK EXERCISE FOR LATER "),T(),k(40,"button",173),ne("click",function(){J(e);let n=M();return ee(n.finishWorkoutEarly())}),O(41," FINISH WORKOUT EARLY "),se(42,hB,2,0,"span",16),T(),k(43,"button",174),ne("click",function(){J(e);let n=M();return ee(n.quitWorkout())}),O(44," QUIT WORKOUT (NO SAVE) "),T()()}if(r&2){let e,o=M();R(9),L("disabled",o.sessionState()!=="playing"),R(6),L("disabled",o.sessionState()==="paused"||!(!((e=o.routine())==null||e.exercises==null)&&e.exercises.length)),R(4),L("disabled",o.sessionState()==="paused"||!o.activeSetInfo()),R(4),L("disabled",!o.canAddWarmupSet()||o.sessionState()==="paused"||!o.activeSetInfo()),R(3),L("ngIf",!o.canAddWarmupSet()),R(),L("disabled",o.sessionState()==="paused"),R(7),L("disabled",!o.activeSetInfo()||o.sessionState()==="paused"),R(2),L("disabled",!o.activeSetInfo()||o.sessionState()==="paused"),R(2),L("disabled",!o.activeSetInfo()||o.sessionState()==="paused"),R(2),L("disabled",o.sessionState()==="paused"||o.currentWorkoutLogExercises().length===0),R(2),L("ngIf",o.currentWorkoutLogExercises().length===0)}}function xB(r,t){r&1&&(k(0,"span",215),O(1,"(Warm-up) "),T())}function yB(r,t){if(r&1&&(k(0,"span"),O(1,"Reps: "),k(2,"strong",216),O(3),T()()),r&2){let e=M().$implicit;R(3),We(e.repsAchieved)}}function vB(r,t){if(r&1&&(k(0,"span"),O(1,"Weight: "),k(2,"strong",216),O(3),et(4,"weightUnit"),T()()),r&2){let e=M().$implicit;R(3),We(Dt(4,1,e.weightUsed))}}function bB(r,t){if(r&1&&(k(0,"span",217),O(1,"Time: "),k(2,"strong",216),O(3),T()()),r&2){let e=M().$implicit;R(3),Se("",e.durationPerformed,"s")}}function SB(r,t){if(r&1&&(k(0,"p",218),O(1),T()),r&2){let e=M().$implicit;R(),Se(" ",e.notes," ")}}function wB(r,t){if(r&1&&(k(0,"div",209)(1,"p",210),se(2,xB,2,0,"span",211),O(3),T(),k(4,"div",212),se(5,yB,4,1,"span",16)(6,vB,5,3,"span",16)(7,bB,4,1,"span",213),T(),se(8,SB,2,1,"p",214),T()),r&2){let e=t.$implicit,o=t.index;R(2),L("ngIf",e.type==="warmup"),R(),Se(" Set #",o+1,": "),R(2),L("ngIf",e.repsAchieved!==void 0),R(),L("ngIf",e.weightUsed!==void 0&&e.weightUsed!==null),R(),L("ngIf",e.durationPerformed!==void 0),R(),L("ngIf",e.notes)}}function CB(r,t){if(r&1&&(k(0,"div",207),se(1,wB,9,6,"div",208),T()),r&2){let e=M(3);R(),L("ngForOf",e.allPreviousLoggedSetsForCurrentExercise())}}function _B(r,t){r&1&&(k(0,"div",219),O(1," No sets completed yet for this exercise in this workout. "),T())}function kB(r,t){r&1&&(k(0,"span",215),O(1," (Warm-up)"),T())}function IB(r,t){if(r&1&&(k(0,"span"),O(1,"Reps: "),k(2,"strong",216),O(3),T()()),r&2){let e=M().$implicit;R(3),We(e.repsAchieved)}}function TB(r,t){if(r&1&&(k(0,"span"),O(1,"Weight: "),k(2,"strong",216),O(3),et(4,"weightUnit"),T()()),r&2){let e=M().$implicit;R(3),We(Dt(4,1,e.weightUsed))}}function EB(r,t){if(r&1&&(k(0,"span",217),O(1,"Time: "),k(2,"strong",216),O(3),T()()),r&2){let e=M().$implicit;R(3),Se("",e.durationPerformed,"s")}}function NB(r,t){if(r&1&&(k(0,"p",218),O(1),T()),r&2){let e=M().$implicit;R(),Se(" ",e.notes," ")}}function RB(r,t){if(r&1&&(k(0,"div",209)(1,"p",210)(2,"span",221),O(3),T(),se(4,kB,2,0,"span",211),O(5),T(),k(6,"div",212),se(7,IB,4,1,"span",16)(8,TB,5,3,"span",16)(9,EB,4,1,"span",213),T(),se(10,NB,2,1,"p",214),T()),r&2){let e=t.$implicit,o=t.index;R(3),Se("",e.exerciseName||"Exercise",":"),R(),L("ngIf",e.type==="warmup"),R(),Se(" Set #",o+1,": "),R(2),L("ngIf",e.repsAchieved!==void 0),R(),L("ngIf",e.weightUsed!==void 0&&e.weightUsed!==null),R(),L("ngIf",e.durationPerformed!==void 0),R(),L("ngIf",e.notes)}}function $B(r,t){if(r&1&&(k(0,"div",220),se(1,RB,11,7,"div",208),T()),r&2){let e=M(3);R(),L("ngForOf",e.allPreviousLoggedSetsForCurrentSession())}}function PB(r,t){r&1&&(k(0,"div",219),O(1," No sets logged today for any exercise yet. "),T())}function AB(r,t){if(r&1&&(k(0,"li",230)(1,"span",231),O(2,"Reps:"),T(),k(3,"strong",232),O(4),T()()),r&2){let e=M().ngIf;R(4),We(e.repsAchieved)}}function DB(r,t){if(r&1&&(k(0,"li",230)(1,"span",231),O(2,"Weight:"),T(),k(3,"strong",232),O(4),et(5,"weightUnit"),T()()),r&2){let e=M().ngIf;R(4),We(Dt(5,1,e.weightUsed))}}function FB(r,t){if(r&1&&(k(0,"li",230)(1,"span",231),O(2,"Time:"),T(),k(3,"strong",232),O(4),T()()),r&2){let e=M().ngIf;R(4),Se("",e.durationPerformed,"s")}}function OB(r,t){if(r&1&&(k(0,"li",233),O(1),T()),r&2){let e=M().ngIf;R(),Se("Notes: ",e.notes)}}function LB(r,t){if(r&1&&(k(0,"div",222)(1,"p",223)(2,"span",224),_e(),k(3,"svg",225),ce(4,"path",226),T(),O(5),et(6,"date"),T()(),He(),k(7,"ul",227),se(8,AB,5,1,"li",228)(9,DB,6,3,"li",228)(10,FB,5,1,"li",228)(11,OB,2,1,"li",229),T()()),r&2){let e=t.ngIf,o=M(3);R(5),Se(" Last time (",ao(6,5,o.lastPerformanceForCurrentExercise==null?null:o.lastPerformanceForCurrentExercise.lastPerformedDate,"dd/MM/yy HH:mm"),"): "),R(3),L("ngIf",e.repsAchieved!==void 0),R(),L("ngIf",e.weightUsed!==void 0&&e.weightUsed!==null),R(),L("ngIf",e.durationPerformed!==void 0),R(),L("ngIf",e.notes)}}function MB(r,t){r&1&&(k(0,"div",234),O(1," No previous performance recorded for this exercise yet. "),T())}function BB(r,t){if(r&1&&(k(0,"div")(1,"span"),O(2),T(),k(3,"strong",242),O(4),T(),k(5,"em",243),O(6),et(7,"date"),T()()),r&2){let e=t.$implicit,o=M(5);R(2),Se("",e.pbType,": "),R(2),We(o.formatPbValue(e)),R(2),Se(" (",ao(7,3,e.timestamp,"shortDate"),")")}}function VB(r,t){if(r&1&&(k(0,"div",240),se(1,BB,8,6,"div",241),T()),r&2){let e=M(4);R(),L("ngForOf",e.exercisePBs())}}function WB(r,t){if(r&1&&(k(0,"div",244),O(1),T()),r&2){let e,o=M(4);R(),Se(" No personal bests recorded yet for ",(e=o.currentBaseExercise())==null?null:e.name,". ")}}function zB(r,t){if(r&1&&(k(0,"div",235)(1,"p",236)(2,"span",224),_e(),k(3,"svg",225),ce(4,"path",237),T(),O(5),T()(),se(6,VB,2,1,"div",238)(7,WB,2,1,"div",239),T()),r&2){let e,o,n=M(3);R(5),Se(" Personal Bests for ",((e=n.currentBaseExercise())==null?null:e.name)||"this exercise",": "),R(),L("ngIf",n.exercisePBs().length>0),R(),L("ngIf",n.currentBaseExercise()&&n.exercisePBs().length===0&&!(!((o=n.currentBaseExercise())==null||o.id==null)&&o.id.startsWith("custom-")))}}function UB(r,t){if(r&1){let e=ye();k(0,"div",249),ne("click",function(){J(e);let n=M(4);return ee(n.startEditTarget("reps"))}),O(1),T()}if(r&2){let e=M(2).ngIf;R(),Se(" ",e.setData.reps," ")}}function GB(r,t){if(r&1){let e=ye();k(0,"div",21)(1,"input",250),ls("ngModelChange",function(n){J(e);let i=M(4);return as(i.editingTargetValue,n)||(i.editingTargetValue=n),ee(n)}),ne("keyup.enter",function(){J(e);let n=M(4);return ee(n.confirmEditTarget())})("keyup.escape",function(){J(e);let n=M(4);return ee(n.cancelEditTarget())}),T(),k(2,"button",251),ne("click",function(){J(e);let n=M(4);return ee(n.confirmEditTarget())}),_e(),k(3,"svg",252),ce(4,"path",253),T()(),He(),k(5,"button",254),ne("click",function(){J(e);let n=M(4);return ee(n.cancelEditTarget())}),_e(),k(6,"svg",252),ce(7,"path",255),T()()()}if(r&2){let e=M(4);R(),ss("ngModel",e.editingTargetValue)}}function HB(r,t){if(r&1&&(k(0,"div",245)(1,"label",246),O(2,"Target Reps"),T(),se(3,UB,2,1,"div",247)(4,GB,8,1,"div",248),T()),r&2){let e=M(3);R(3),L("ngIf",e.editingTarget!=="reps"),R(),L("ngIf",e.editingTarget==="reps")}}function KB(r,t){if(r&1){let e=ye();k(0,"div",249),ne("click",function(){J(e);let n=M(4);return ee(n.startEditTarget("weight"))}),O(1),et(2,"weightUnit"),T()}if(r&2){let e=M(2).ngIf;R(),Se(" ",Dt(2,1,e.setData.weight)," ")}}function qB(r,t){if(r&1){let e=ye();k(0,"div",21)(1,"input",250),ls("ngModelChange",function(n){J(e);let i=M(4);return as(i.editingTargetValue,n)||(i.editingTargetValue=n),ee(n)}),ne("keyup.enter",function(){J(e);let n=M(4);return ee(n.confirmEditTarget())})("keyup.escape",function(){J(e);let n=M(4);return ee(n.cancelEditTarget())}),T(),k(2,"button",251),ne("click",function(){J(e);let n=M(4);return ee(n.confirmEditTarget())}),_e(),k(3,"svg",252),ce(4,"path",253),T()(),He(),k(5,"button",254),ne("click",function(){J(e);let n=M(4);return ee(n.cancelEditTarget())}),_e(),k(6,"svg",252),ce(7,"path",255),T()()()}if(r&2){let e=M(4);R(),ss("ngModel",e.editingTargetValue)}}function jB(r,t){if(r&1&&(k(0,"div",245)(1,"label",246),O(2,"Target Weight"),T(),se(3,KB,3,3,"div",247)(4,qB,8,1,"div",248),T()),r&2){let e=M(3);R(3),L("ngIf",e.editingTarget!=="weight"),R(),L("ngIf",e.editingTarget==="weight")}}function XB(r,t){if(r&1){let e=ye();k(0,"div",249),ne("click",function(){J(e);let n=M(4);return ee(n.startEditTarget("duration"))}),O(1),k(2,"span",256),O(3,"s"),T()()}if(r&2){let e=M(2).ngIf;R(),Se(" ",e.setData.duration)}}function YB(r,t){if(r&1){let e=ye();k(0,"div",21)(1,"input",250),ls("ngModelChange",function(n){J(e);let i=M(4);return as(i.editingTargetValue,n)||(i.editingTargetValue=n),ee(n)}),ne("keyup.enter",function(){J(e);let n=M(4);return ee(n.confirmEditTarget())})("keyup.escape",function(){J(e);let n=M(4);return ee(n.cancelEditTarget())}),T(),k(2,"button",251),ne("click",function(){J(e);let n=M(4);return ee(n.confirmEditTarget())}),_e(),k(3,"svg",252),ce(4,"path",253),T()(),He(),k(5,"button",254),ne("click",function(){J(e);let n=M(4);return ee(n.cancelEditTarget())}),_e(),k(6,"svg",252),ce(7,"path",255),T()()()}if(r&2){let e=M(4);R(),ss("ngModel",e.editingTargetValue)}}function QB(r,t){if(r&1&&(k(0,"div",245)(1,"label",246),O(2,"Target Time"),T(),se(3,XB,4,1,"div",247)(4,YB,8,1,"div",248),T()),r&2){let e=M(3);R(3),L("ngIf",e.editingTarget!=="duration"),R(),L("ngIf",e.editingTarget==="duration")}}function ZB(r,t){if(r&1&&(k(0,"div",245)(1,"label",246),O(2,"Target Tempo"),T(),k(3,"span",257),O(4),T()()),r&2){let e=M().ngIf;R(4),We(e.setData.tempo)}}function JB(r,t){if(r&1&&(k(0,"div",258)(1,"p",259)(2,"span",224),_e(),k(3,"svg",225),ce(4,"path",260),T(),O(5," Planned Notes for this Set: "),T()(),He(),k(6,"p",261),O(7),T()()),r&2){let e=M().ngIf;R(7),We(e.setData.notes)}}function eV(r,t){if(r&1){let e=ye();k(0,"div",188)(1,"div",189)(2,"button",190),ne("click",function(){J(e);let n=M(2);return ee(n.toggleCompletedSetsForExerciseInfo())}),k(3,"span",191),_e(),k(4,"svg",192),ce(5,"path",163),T(),O(6),T(),k(7,"svg",193),ce(8,"path",194),T()(),se(9,CB,2,1,"div",195)(10,_B,2,0,"div",196),T(),He(),k(11,"div",189)(12,"button",190),ne("click",function(){J(e);let n=M(2);return ee(n.toggleCompletedSetsForDayInfo())}),k(13,"span",191),_e(),k(14,"svg",192),ce(15,"path",197),T(),O(16),T(),k(17,"svg",193),ce(18,"path",194),T()(),se(19,$B,2,1,"div",198)(20,PB,2,0,"div",196),T(),se(21,LB,12,8,"div",199)(22,MB,2,0,"div",200)(23,zB,8,3,"div",201),He(),k(24,"div",202)(25,"h4",203),O(26,"Set Targets:"),T(),k(27,"div",204),se(28,HB,5,2,"div",205)(29,jB,5,2,"div",205)(30,QB,5,2,"div",205)(31,ZB,5,1,"div",205),T()(),se(32,JB,8,1,"div",206),T()}if(r&2){let e,o,n,i=t.ngIf,s=M(2);R(6),Bt(" This Exercise (",((e=s.currentBaseExercise())==null?null:e.name)||"Current",") - Completed Sets (",s.allPreviousLoggedSetsForCurrentExercise().length,") "),R(),L("ngClass",us(17,zS,s.showCompletedSetsForExerciseInfo())),R(2),L("ngIf",s.allPreviousLoggedSetsForCurrentExercise().length>0&&s.showCompletedSetsForExerciseInfo()),R(),L("ngIf",s.allPreviousLoggedSetsForCurrentExercise().length===0&&s.showCompletedSetsForExerciseInfo()),R(6),Se(" Today's Logged Sets (All Exercises) (",s.allPreviousLoggedSetsForCurrentSession().length,") "),R(),L("ngClass",us(19,zS,s.showCompletedSetsForDayInfo())),R(2),L("ngIf",s.allPreviousLoggedSetsForCurrentSession().length>0&&s.showCompletedSetsForDayInfo()),R(),L("ngIf",s.allPreviousLoggedSetsForCurrentSession().length===0&&s.showCompletedSetsForDayInfo()),R(),L("ngIf",s.trackingService.findPreviousSetPerformance(s.lastPerformanceForCurrentExercise,i.setData,i.setIndex)),R(),L("ngIf",!s.lastPerformanceForCurrentExercise&&s.activeSetInfo()&&!(!((o=s.activeSetInfo())==null||o.exerciseData==null||o.exerciseData.exerciseId==null)&&o.exerciseData.exerciseId.startsWith("custom-"))),R(),L("ngIf",s.exercisePBs().length>0||s.currentBaseExercise()&&!(!((n=s.currentBaseExercise())==null||n.id==null)&&n.id.startsWith("custom-"))),R(5),L("ngIf",i.setData.reps!==void 0),R(),L("ngIf",i.setData.weight!==void 0&&i.setData.weight!==null),R(),L("ngIf",i.setData.duration!==void 0),R(),L("ngIf",i.setData.tempo),R(),L("ngIf",i.setData.notes)}}function tV(r,t){if(r&1){let e=ye();k(0,"div",176)(1,"div",177)(2,"header",178)(3,"div",179),_e(),k(4,"svg",180),ce(5,"path",181),T(),He(),k(6,"h3",182),O(7,"Performance Insights & Targets"),T()(),k(8,"button",149),ne("click",function(){J(e);let n=M();return ee(n.closePerformanceInsights())}),_e(),k(9,"svg",183),ce(10,"path",184),T()()(),se(11,eV,33,21,"div",185),He(),k(12,"footer",186)(13,"button",187),ne("click",function(){J(e);let n=M();return ee(n.closePerformanceInsights())}),O(14," Done "),T()()()()}if(r&2){let e=M();R(11),L("ngIf",e.activeSetInfo())}}function rV(r,t){if(r&1&&(k(0,"span",285),O(1),et(2,"titlecase"),et(3,"titlecase"),T()),r&2){let e=M().$implicit;R(),Bt("",Dt(2,2,e.category)," ",e.primaryMuscleGroup?Dt(3,4," - "+e.primaryMuscleGroup):"")}}function oV(r,t){if(r&1){let e=ye();k(0,"li",280),ne("click",function(){let n=J(e).$implicit,i=M(2);return ee(i.selectExerciseToAddFromModal(n))}),k(1,"div")(2,"span",281),O(3),T(),se(4,rV,4,6,"span",282),T(),_e(),k(5,"svg",283),ce(6,"path",284),T()()}if(r&2){let e=t.$implicit;R(3),We(e.name),R(),L("ngIf",e.category)}}function nV(r,t){r&1&&(k(0,"li",286),O(1,"No exercises match your search."),T())}function iV(r,t){r&1&&(k(0,"li",286),O(1,"Exercise library is empty or still loading."),T())}function sV(r,t){if(r&1){let e=ye();k(0,"div",262),ne("click",function(){J(e);let n=M();return ee(n.closeExerciseSelectionModal())}),k(1,"div",263),ne("click",function(n){return J(e),ee(n.stopPropagation())}),k(2,"div",264)(3,"div",265)(4,"h3",266),O(5,"Add Exercise to Session"),T(),k(6,"button",267),ne("click",function(){J(e);let n=M();return ee(n.closeExerciseSelectionModal())}),_e(),k(7,"svg",268),ce(8,"path",269),T()()(),He(),k(9,"div",270)(10,"input",271,6),ne("ngModelChange",function(n){J(e);let i=M();return ee(i.modalSearchTerm.set(n))}),T()(),k(12,"div",272)(13,"ul",273),se(14,oV,7,2,"li",274)(15,nV,2,0,"li",275)(16,iV,2,0,"li",275),T()(),k(17,"div",276)(18,"button",277),ne("click",function(){J(e);let n=M();return ee(n.handleTrulyCustomExerciseEntry())}),O(19," Or, create a new custom exercise entry... "),T()()(),k(20,"div",278)(21,"button",279),ne("click",function(){J(e);let n=M();return ee(n.closeExerciseSelectionModal())}),O(22," Cancel "),T()()()()}if(r&2){let e=M();R(10),L("ngModel",e.modalSearchTerm()),R(4),L("ngForOf",e.filteredAvailableExercises()),R(),L("ngIf",e.filteredAvailableExercises().length===0&&e.availableExercises.length>0),R(),L("ngIf",e.availableExercises.length===0)}}function aV(r,t){r&1&&(k(0,"div",287)(1,"p",288),O(2,"Loading workout player..."),T()())}function lV(r,t){if(r&1){let e=ye();k(0,"app-modal",289),ls("isOpenChange",function(n){J(e);let i=M();return as(i.isSimpleModalOpen,n)||(i.isSimpleModalOpen=n),ee(n)}),ce(1,"app-exercise-detail",290),T()}if(r&2){let e=M();ss("isOpen",e.isSimpleModalOpen),L("modalTitle",e.exerciseDetailsName),R(),L("id",e.exerciseDetailsId)("isModal",!0)}}var US=(o=>(o.PerformingSet="performing_set",o.PresetCountdown="preset_countdown",o.Resting="resting",o))(US||{}),up=class r{route=De(Ca);router=De(Zn);workoutService=De(Ea);exerciseService=De(ti);trackingService=De(ei);alertService=De(Ta);toastService=De(Na);fb=De(Md);storageService=De(Vd);cdr=De(ba);unitService=De(ri);appSettingsService=De(OS);platformId=De(ya);routine=Ee(void 0);program=Ee(void 0);sessionState=Ee("loading");PlayerSubState=US;playerSubState=Ee("performing_set");currentExerciseIndex=Ee(0);currentSetIndex=Ee(0);currentBlockRound=Ee(1);totalBlockRounds=Ee(1);myExerciseInput;sessionTimerDisplay=Ee("00:00:00");workoutStartTime=0;sessionTimerElapsedSecondsBeforePause=0;timerSub;timedSetTimerState=Ee("idle");timedSetElapsedSeconds=Ee(0);timedSetIntervalSub;soundPlayedForThisCountdownSegment=!1;presetTimerCountdownDisplay=Ee(null);presetTimerDuration=Ee(0);presetTimerSub;isRestTimerVisible=Ee(!1);restDuration=Ee(0);restTimerDisplay=Ee(null);restTimerMainText=Ee("RESTING");restTimerNextUpText=Ee(null);nextActionButtonLabel=Et(()=>{switch(this.playerSubState()){case"preset_countdown":return"GETTING READY...";case"resting":return"RESTING...";case"performing_set":default:return"SET DONE"}});currentSetForm;lastPerformanceForCurrentExercise=null;editingTarget=null;editingTargetValue="";routineId=null;isExerciseModalOpen=Ee(!1);availableExercises=[];modalSearchTerm=Ee("");filteredAvailableExercises=Et(()=>{let t=this.modalSearchTerm().toLowerCase();return t?this.availableExercises.filter(e=>e.name.toLowerCase().includes(t)||e.category.toLowerCase().includes(t)||e.primaryMuscleGroup&&e.primaryMuscleGroup.toLowerCase().includes(t)):this.availableExercises});PAUSED_WORKOUT_KEY="fitTrackPro_pausedWorkoutState";PAUSED_STATE_VERSION="1.2";originalRoutineSnapshot=[];currentWorkoutLogExercises=Ee([]);wasRestTimerVisibleOnPause=!1;restTimerRemainingSecondsOnPause=0;restTimerInitialDurationOnPause=0;restTimerMainTextOnPause="RESTING";restTimerNextUpTextOnPause=null;wasTimedSetRunningOnPause=!1;autoSaveSub;AUTO_SAVE_INTERVAL_MS=8e3;isSessionConcluded=!1;routerEventsSub;isInitialLoadComplete=!1;exercisesProposedThisCycle={doLater:!1,skipped:!1};intervalListItems;isTabataMode=Ee(!1);tabataIntervals=Ee([]);currentTabataIntervalIndex=Ee(0);tabataTimeRemaining=Ee(0);currentTabataInterval=Et(()=>{let t=this.tabataIntervals(),e=this.currentTabataIntervalIndex();return t[e]||null});tabataIntervalMap=[];tabataTimerSub;shouldStartWithPresetTimer=Et(()=>{let t=this.activeSetInfo();if(!t)return!1;let e=this.appSettingsService.enablePresetTimer(),o=this.appSettingsService.presetTimerDurationSeconds();if(!e||o<=0)return!1;let n=this.routine(),i=t.exerciseIndex,s=t.setIndex;if(!n||!n.exercises[i]||!n.exercises[i].sets[s])return!1;let a=i===0&&s===0&&this.currentBlockRound()===1,l=1/0;if(s>0)l=n.exercises[i].sets[s-1].restAfterSet;else if(i>0){let u=n.exercises[i-1];l=u.sets[u.sets.length-1].restAfterSet}return a||l===0});mainActionButtonLabel=Et(()=>{let t=this.activeSetInfo(),e=this.routine();switch(this.playerSubState()){case"preset_countdown":return`PREPARING... ${this.presetTimerCountdownDisplay()}s`;case"resting":return`RESTING: ${this.restTimerDisplay()}`;case"performing_set":if(this.checkIfLatestSetOfWorkoutConsideringPending()){let o=this.activeSetInfo()?.exerciseData.sessionStatus;if(o==="skipped"||o==="do_later"){if(t&&e&&t.exerciseData.sets.length>0){let n=this.currentWorkoutLogExercises().find(s=>s.exerciseId===t.exerciseData.exerciseId);if(!(n&&n.sets.length===t.exerciseData.sets.length))return this.checkIfSetIsPartOfRounds()?this.checkIfLatestSetOfRound()?"COMPLETE ROUND":"SET DONE":this.checkIfLatestSetOfExercise()?"COMPLETE EXERCISE":"SET DONE"}return o==="skipped"?"SKIPPED":"DO LATER"}if(t!==null){let n=this.currentWorkoutLogExercises().find(s=>s.exerciseId===t.exerciseData.exerciseId);if(n&&n.sets.length===t.exerciseData.sets.length){if(this.checkIfLatestSetOfExercise())return this.checkIfSetIsPartOfRounds()?this.checkIfLatestSetOfRound()?this.checkIfLatestRoundOfRounds()?"FINISH WORKOUT":"COMPLETE ROUND":"COMPLETE EXERCISE":"SET DONE"}else return this.checkIfSetIsPartOfRounds()?this.checkIfLatestSetOfRound()?"COMPLETE ROUND":"SET DONE":this.checkIfLatestSetOfExercise()?"COMPLETE EXERCISE":"SET DONE"}return"FINISH WORKOUT"}else return this.checkIfLatestSetOfExercise()?this.checkIfSetIsPartOfRounds()&&this.checkIfLatestSetOfRound()?"COMPLETE ROUND":"COMPLETE EXERCISE":"SET DONE";default:return"SET DONE"}});destroy$=new aS;routeSub;rpeValue=Ee(null);rpeOptions=Array.from({length:10},(t,e)=>e+1);showRpeSlider=Ee(!1);timedSetDisplay=Et(()=>{let t=this.timedSetTimerState(),e=this.timedSetElapsedSeconds(),n=this.activeSetInfo()?.setData?.duration;return t==="idle"?(n!==void 0&&n>0?n:this.csf?.actualDuration?.value??0).toString():n!==void 0&&n>0?(n-e).toString():e.toString()});isTimedSetOvertime=Et(()=>{if(this.timedSetTimerState()==="idle")return!1;let e=this.timedSetElapsedSeconds(),o=this.activeSetInfo()?.setData?.duration;return o!==void 0&&o>0&&e>o});unloadNotification(t){this.sessionState()==="playing"&&this.routine()&&this.currentWorkoutLogExercises().length>0&&this.captureAndSaveStateForUnload()}get weightUnitDisplaySymbol(){return this.unitService.getUnitLabel()}getWorkingSetCountForCurrentExercise=Et(()=>{let t=this.routine(),e=this.currentExerciseIndex();return t&&t.exercises[e]?t.exercises[e].sets.filter(o=>o.type!=="warmup").length:0});getCurrentWorkingSetNumber=Et(()=>{let t=this.activeSetInfo(),e=this.routine();if(!t||!e||t.type==="warmup")return 0;let o=e.exercises[t.exerciseIndex],n=0;for(let i=0;i<=t.setIndex;i++)o.sets[i].type!=="warmup"&&n++;return n});getCurrentWarmupSetNumber=Et(()=>{let t=this.activeSetInfo(),e=this.routine();if(!t||!e||t.type!=="warmup")return 0;let o=e.exercises[t.exerciseIndex],n=0;for(let i=0;i<=t.setIndex;i++)o.sets[i].type==="warmup"&&n++;return n});activeSetInfo=Et(()=>{let t=this.routine(),e=this.currentExerciseIndex(),o=this.currentSetIndex();if(t&&t.exercises[e]&&t.exercises[e].sets[o]){let n=t.exercises[e],i=t.exercises[e].sets[o],a=this.currentWorkoutLogExercises().find(l=>l.exerciseId===n.exerciseId)?.sets.find(l=>l.plannedSetId===i.id);return{exerciseIndex:e,setIndex:o,exerciseData:n,setData:i,type:i.type??"standard",baseExerciseInfo:void 0,isCompleted:!!a,actualReps:a?.repsAchieved,actualWeight:a?.weightUsed,actualDuration:a?.durationPerformed,notes:a?.notes}}return null});currentBaseExercise=Ee(void 0);exercisePBs=Ee([]);allPreviousLoggedSetsForCurrentExercise=Et(()=>{let t=this.activeSetInfo();if(!t||t.setIndex===0)return[];let e=this.currentWorkoutLogExercises().find(o=>o.exerciseId===t.exerciseData.exerciseId);if(e&&e.sets.length>0){let o=[];for(let n=0;n<t.setIndex;n++){let i=t.exerciseData.sets[n]?.id;if(i){let s=e.sets.find(a=>a.plannedSetId===i);s&&o.push(s)}}return o}return[]});allPreviousLoggedSetsForCurrentSession=Et(()=>{let t=this.activeSetInfo();if(!t)return[];let e=[];for(let o of this.currentWorkoutLogExercises())for(let n of o.sets){let i=this.routine();if(!i)continue;let s=i.exercises.findIndex(a=>a.exerciseId===o.exerciseId);if(!(s<0)){if(s<t.exerciseIndex)e.push(n);else if(s===t.exerciseIndex){let a=i.exercises[s].sets.findIndex(l=>l.id===n.plannedSetId);a>-1&&a<t.setIndex&&e.push(n)}}}return e});isWorkoutMenuVisible=Ee(!1);isPerformanceInsightsVisible=Ee(!1);showCompletedSetsInfo=Ee(!1);isPerformingDeferredExercise=!1;lastActivatedDeferredExerciseId=null;constructor(){this.initializeCurrentSetForm(),bS(()=>{let t=this.currentTabataIntervalIndex();this.intervalListItems&&this.intervalListItems.length>t&&this.intervalListItems.toArray()[t].nativeElement.scrollIntoView({behavior:"smooth",block:"start"})})}resetAndPatchCurrentSetForm(){this.currentSetForm.reset({rpe:null,setNotes:""}),this.rpeValue.set(null),this.showRpeSlider.set(!1),this.resetTimedSet(),this.patchActualsFormBasedOnSessionTargets()}startSessionTimer(){this.sessionState()!=="paused"&&(this.timerSub&&this.timerSub.unsubscribe(),this.timerSub=tp(0,1e3).pipe(Yn(this.destroy$)).subscribe(()=>{if(this.sessionState()==="playing"){let t=Math.floor((Date.now()-this.workoutStartTime)/1e3),e=this.sessionTimerElapsedSecondsBeforePause+t,o=Math.floor(e/3600),n=Math.floor(e%3600/60),i=e%60;this.sessionTimerDisplay.set(`${String(o).padStart(2,"0")}:${String(n).padStart(2,"0")}:${String(i).padStart(2,"0")}`)}}))}updateRestTimerDisplay(t){let e=Math.floor(t/60),o=t%60;this.restTimerDisplay.set(`${String(e).padStart(2,"0")}:${String(o).padStart(2,"0")}`)}addLoggedSetToCurrentLog(t,e){let o=this.currentWorkoutLogExercises(),n=this.routine()?.exercises.findIndex(a=>a.id===t.id),i,s=-1;for(let a=0;a<o.length;a++){let l=o[a],u=this.routine()?.exercises.find(c=>c.id===t.id);if(l.exerciseId===t.exerciseId&&u&&u.id===t.id&&u.id===l.id){i=l,s=a;break}}if(i){let a=i.sets.findIndex(l=>l.plannedSetId===e.plannedSetId);a>-1?i.sets[a]=e:i.sets.push(e)}else{let a=this.currentBaseExercise()?.name||t.exerciseName||"Unknown Exercise",l={id:t.id,exerciseId:t.exerciseId,exerciseName:a,sets:[e],rounds:t.rounds||0,type:e.type||"standard"};t.rounds&&t.rounds>0&&(l.supersetId=t.supersetId?t.supersetId:null,l.supersetOrder=t.supersetOrder!==null?t.supersetOrder:null,l.supersetSize=t.supersetSize!==null?t.supersetSize:null,l.supersetRounds=t.supersetRounds!==null?t.supersetRounds:null),typeof n=="number"&&n>=0&&n<=o.length?o.splice(n,0,l):o.push(l)}this.currentWorkoutLogExercises.set([...o])}finishWorkout(){return j(this,null,function*(){yield this.finishWorkoutAndReportStatus()})}comparePerformedToOriginal(t,e){let o=[],n=!1,i=e.filter(c=>t.some(p=>p.exerciseId===c.exerciseId)),s=new Set(e.map(c=>c.exerciseId)),a=new Set(e.map(c=>c.exerciseName)),l=[],u=[];for(let c of t)s.has(c.exerciseId)||a.has(c.exerciseName)?l.push(c):u.push(c);if((l.length!==e.length||u.length>0)&&(o.push(`Number of exercises or their content changed [Original number exercises: ${e.length}, performed number exercises: ${l.length}].`),n=!0),u.length>0)for(let c of u)o.push(`${c.exerciseName} exercise added.`);for(let c of e){let p=t.find(d=>d.exerciseId===c.exerciseId);if(!p){o.push(`Exercise "${c.exerciseName||c.exerciseId}" was in the plan but not performed.`),n=!0;continue}if(p.sets.length!==c.sets.length&&p.rounds!==c.rounds)o.push(`Set count for "${p.exerciseName||p.exerciseId}" changed (was ${c.sets.length}, now ${p.sets.length}).`),n=!0;else for(let d=0;d<p.sets.length;d++){let m=c.sets[d]?.type==="warmup",f=p.sets[d]?.type==="warmup";if(m!==f){o.push(`Warm-up status for set ${d+1} of "${p.exerciseName}" changed.`),n=!0;break}}}return{majorDifference:n,details:o}}convertLoggedToWorkoutExercises(t){let e=this.routine();return t.map(o=>{let n=e?.exercises.find(s=>s.exerciseId===o.exerciseId);return{id:Ft(),exerciseId:o.exerciseId,exerciseName:o.exerciseName,supersetId:n?.supersetId||null,supersetOrder:n?.supersetOrder??null,supersetSize:n?.supersetSize??null,rounds:n?.rounds??1,notes:n?.notes,sets:o.sets.map(s=>{let a=n?.sets.find(l=>l.id===s.plannedSetId);return{id:Ft(),reps:s.targetReps??s.repsAchieved,weight:s.targetWeight??s.weightUsed,duration:s.targetDuration??s.durationPerformed,tempo:s.targetTempo||a?.tempo,restAfterSet:a?.restAfterSet||60,notes:s.notes,type:s.type}}),type:(n?.supersetSize??0)>=1?"superset":"standard"}})}get csf(){return this.currentSetForm.controls}toggleTimedSetTimer(){if(this.sessionState()==="paused"){this.toastService.warning("Session is paused. Please resume to use the timer.",3e3,"Paused");return}let t=this.timedSetTimerState();t==="idle"||t==="paused"?this.startOrResumeTimedSet():t==="running"&&this.pauseTimedSet()}startOrResumeTimedSet(){if(this.timedSetTimerState()==="idle"){this.timedSetElapsedSeconds.set(0);let t=this.activeSetInfo()?.setData?.duration;t!==void 0&&t>0&&this.currentSetForm.get("actualDuration")?.setValue(t,{emitEvent:!1}),this.soundPlayedForThisCountdownSegment=!1}this.timedSetTimerState.set("running"),this.timedSetIntervalSub&&this.timedSetIntervalSub.unsubscribe(),this.timedSetIntervalSub=tp(0,1e3).pipe(Yn(this.destroy$)).subscribe(()=>{if(this.timedSetTimerState()==="running"){this.timedSetElapsedSeconds.update(s=>s+1);let t=this.timedSetElapsedSeconds();this.currentSetForm.get("actualDuration")?.setValue(t,{emitEvent:!1});let o=this.activeSetInfo()?.setData?.duration,n=this.appSettingsService.enableTimerCountdownSound(),i=this.appSettingsService.countdownSoundSeconds();if(n&&o&&o>20&&t>0){let s=o-t;s<=i&&s>=0&&(s===0?(this.playClientGong(),this.soundPlayedForThisCountdownSegment=!0):this.playClientBeep())}}else this.timedSetIntervalSub&&this.timedSetIntervalSub.unsubscribe()})}pauseTimedSet(){this.timedSetIntervalSub&&(this.timedSetIntervalSub.unsubscribe(),this.timedSetIntervalSub=void 0),this.timedSetTimerState.set("paused")}resetTimedSet(){this.timedSetIntervalSub&&(this.timedSetIntervalSub.unsubscribe(),this.timedSetIntervalSub=void 0),this.timedSetTimerState.set("idle"),this.timedSetElapsedSeconds.set(0);let t=this.activeSetInfo()?.setData?.duration;this.currentSetForm.get("actualDuration")?.setValue(t??0,{emitEvent:!1}),this.soundPlayedForThisCountdownSegment=!1}stopAndLogTimedSet(){(this.timedSetTimerState()==="running"||this.timedSetTimerState()==="paused")&&this.pauseTimedSet()}checkIfLatestSetOfExercise(){let t=this.activeSetInfo(),e=this.routine();if(!t||!e)return!1;if(t.exerciseData.sessionStatus&&t.exerciseData.sessionStatus!=="pending")return!0;let o=e.exercises[t.exerciseIndex];if(t.setIndex===o.sets.length-1)return!0;for(let n=t.setIndex+1;n<o.sets.length;n++)if(o.sets[n].type!=="warmup")return!1;return!0}checkIfLatestSetOfRound(){let t=this.activeSetInfo(),e=this.routine();if(!t||!e)return!1;let o=e.exercises[t.exerciseIndex];if(!o.supersetId&&(!o.rounds||o.rounds<=1))return!1;let n=t.exerciseIndex,i=t.exerciseIndex;return o.supersetId&&o.supersetOrder!==null&&(n=t.exerciseIndex-o.supersetOrder,i=n+(o.supersetSize?o.supersetSize-1:0)),t.exerciseIndex===i&&t.setIndex===e.exercises[i].sets.length-1}checkIfLatestRoundOfRounds(){let t=this.routine(),e=this.activeSetInfo();if(!t||!e)return!1;let o=t.exercises[e.exerciseIndex];if(!o)return!1;let n=o.rounds??1;return o.supersetId&&o.supersetOrder!==null&&(n=t.exercises.find(s=>s.supersetId===o.supersetId&&s.supersetOrder===0)?.rounds??1),this.currentBlockRound()===n}checkIfSetIsPartOfRounds(){let t=this.activeSetInfo(),e=this.routine();if(!t||!e)return!1;let o=e.exercises[t.exerciseIndex];return o?o.supersetId&&o.supersetOrder!==null?(e.exercises.find(a=>a.supersetId===o.supersetId&&a.supersetOrder===0)?.rounds??1)>0:(o.rounds&&o.supersetId!==void 0&&o.supersetId!==null?1:0)>0:!1}checkIfLatestSetOfWorkout(){return this.checkIfLatestSetOfWorkoutConsideringPending()}checkIfLatestSetOfWorkoutConsideringPending(){let t=this.activeSetInfo(),e=this.routine();if(!t||!e)return!1;if(t.exerciseData.sessionStatus&&t.exerciseData.sessionStatus!=="pending"){for(let i=t.exerciseIndex+1;i<e.exercises.length;i++)if(e.exercises[i].sessionStatus==="pending")return!1;return!e.exercises.some(i=>(i.sessionStatus==="do_later"||i.sessionStatus==="skipped")&&!this.isExerciseFullyLogged(i.exerciseId,t.exerciseIndex,i.id))}if(!this.checkIfLatestSetOfExercise())return!1;for(let n=t.exerciseIndex+1;n<e.exercises.length;n++)if(e.exercises[n].sessionStatus==="pending"&&e.exercises[n].sets.length>0)return!1;return!e.exercises.some((n,i)=>(n.sessionStatus==="do_later"||n.sessionStatus==="skipped")&&!this.isExerciseFullyLogged(n.exerciseId,i,n.id))}getUnfinishedOrDeferredExercises(t){let e=t.exercises[this.currentExerciseIndex()],o=this.getUnfinishedExercises().filter(a=>a.id!==e.id);console.log("Unfinished exercises (excluding current):",o.map(a=>a.exerciseName));let n=t.exercises.map((a,l)=>lr(Xt({},a),{originalIndex:l})).filter((a,l)=>(a.sessionStatus==="do_later"||a.sessionStatus==="skipped")&&!this.isExerciseFullyLogged(a.exerciseId,l,a.id)).sort((a,l)=>a.sessionStatus==="do_later"&&l.sessionStatus==="skipped"?-1:a.sessionStatus==="skipped"&&l.sessionStatus==="do_later"?1:a.originalIndex-l.originalIndex),i=o.map((a,l)=>lr(Xt({},a),{originalIndex:t.exercises.findIndex(u=>u.id===a.id)})),s=[...n,...i].filter((a,l,u)=>u.findIndex(c=>c.id===a.id)===l);return s.sort((a,l)=>{let u=t.exercises.findIndex(p=>p.id===a.id),c=t.exercises.findIndex(p=>p.id===l.id);return u-c}),s}tryProceedToDeferredExercisesOrFinish(t){return j(this,null,function*(){console.log("tryProceedToDeferredExercisesOrFinish: ENTERED. Proposed flags before:",JSON.stringify(this.exercisesProposedThisCycle));let e=this.getUnfinishedOrDeferredExercises(t);if(console.log("tryProceedToDeferredExercisesOrFinish: Found unfinished deferred/skipped:",e.map(o=>`${o.exerciseName} (${o.sessionStatus})`)),e.length>0){let o=!1,n,i=!1,s=!1;if(e.length===1){let a=e[0],l=yield this.alertService.showConfirmationDialog(`Unfinished: ${a.exerciseName}`,`You have "${a.exerciseName}" (${a.sessionStatus==="do_later"?"Do Later":"Skipped"}) remaining. Complete it now?`,[{text:"Complete It",role:"confirm",data:a.originalIndex,cssClass:"bg-blue-500 hover:bg-blue-600 text-white"},{text:"Finish Workout",role:"destructive",data:"finish_now",cssClass:"bg-green-500 hover:bg-green-600 text-white"},{text:"Cancel (Decide Later)",role:"cancel",data:"cancel_deferred_choice"}]);l&&typeof l.data=="number"?(o=!0,n=l.data):l&&l.data==="finish_now"?i=!0:s=!0}else{let l=[...e.map(c=>{let p="",d="bg-gray-500 dark:bg-gray-700 dark:text-gray-100 hover:bg-gray-300 hover:text-gray-500 hover:dark:bg-gray-300 hover:dark:text-gray-500";switch(c.sessionStatus){case"do_later":p="Do Later",d="bg-orange-500 hover:bg-orange-600 text-white";break;case"skipped":p="Skipped",d="bg-yellow-500 hover:bg-yellow-600 text-black";break;case"pending":p="Pending",d="bg-violet-500 hover:bg-violet-600 text-black";break;default:p=c.sessionStatus||""}return{text:`${c.exerciseName} (${p})`,role:"confirm",data:c.originalIndex,cssClass:d}}),{text:"Finish Workout Now",role:"destructive",data:"finish_now",cssClass:"bg-green-500 hover:bg-green-600 text-white mt-4"},{text:"Cancel (Decide Later)",role:"cancel",data:"cancel_deferred_choice"}],u=yield this.alertService.showConfirmationDialog("Unfinished Exercises","You have unfinished exercises. Would you like to complete any of them now, or finish the workout?",l);u&&typeof u.data=="number"?(o=!0,n=u.data):u&&u.data==="finish_now"?i=!0:s=!0}if(i){console.log("tryProceedToDeferredExercisesOrFinish: User chose 'Finish Workout Now'."),yield this.finishWorkoutAndReportStatus();return}if(s){console.log("tryProceedToDeferredExercisesOrFinish: User cancelled choice of deferred exercises. Setting proposal flags."),e.forEach(a=>{a.sessionStatus==="do_later"&&(this.exercisesProposedThisCycle.doLater=!0),a.sessionStatus==="skipped"&&(this.exercisesProposedThisCycle.skipped=!0)}),console.log("tryProceedToDeferredExercisesOrFinish: Proposed flags after cancel:",JSON.stringify(this.exercisesProposedThisCycle)),this.cdr.detectChanges();return}if(o&&n!==void 0){let a=t.exercises[n];console.log(`tryProceedToDeferredExercisesOrFinish: User selected exercise: ${a.exerciseName}`),this.isPerformingDeferredExercise=!0,this.lastActivatedDeferredExerciseId=a.id;let l=JSON.parse(JSON.stringify(t));l.exercises[n].sessionStatus="pending",this.routine.set(l),this.currentExerciseIndex.set(n),this.currentSetIndex.set(this.findFirstUnloggedSetIndex(a.exerciseId,a.sets.map(c=>c.id))||0),this.currentBlockRound.set(1);let u=l.exercises[n];if(!u.supersetId||u.supersetOrder===0)this.totalBlockRounds.set(u.rounds??1);else{let c=l.exercises.find(p=>p.supersetId===u.supersetId&&p.supersetOrder===0);this.totalBlockRounds.set(c?.rounds??1)}this.lastPerformanceForCurrentExercise=null,this.playerSubState.set("performing_set"),yield this.prepareCurrentSet();return}}console.log("tryProceedToDeferredExercisesOrFinish: No unfinished exercises to propose or all paths handled. Finishing workout.");{let o=yield this.alertService.showConfirmationDialog("Continue or End","The current session is finished! Would you like to add a new exercise or complete it?",[{text:"Add exercise",role:"add_exercise",data:"add_exercise",cssClass:"bg-primary hover:bg-primary-dark text-white"},{text:"End session",role:"end_session",data:"end_session",cssClass:"bg-blue-500 hover:bg-blue-600 text-white"}]);o&&o.role==="end_session"?yield this.finishWorkoutAndReportStatus():this.openExerciseSelectionModal()}})}isExerciseFullyLogged(t,e,o){let n=this.routine();if(!n)return!1;let i=n.exercises.find(c=>c.exerciseId===t&&c.id===o);if(!i)return!1;let s=this.currentWorkoutLogExercises().find(c=>c.exerciseId===t&&i.exerciseId===c.exerciseId&&c.id===o);if(!s)return!1;let a=i.rounds??1;i.supersetId&&i.supersetOrder!==null&&(a=n.exercises.find(p=>p.supersetId===i.supersetId&&p.supersetOrder===0)?.rounds??1);let l=i.sets.length,u=l*a;return s.sets.length>=l}findFirstUnloggedSetIndex(t,e){let o=this.currentWorkoutLogExercises().find(i=>i.exerciseId===t);if(!o)return 0;let n=new Set(o.sets.map(i=>i.plannedSetId));for(let i=0;i<e.length;i++)if(!n.has(e[i]))return i;return null}fetchLastPerformanceAndPatchForm(){return j(this,null,function*(){yield this.prepareCurrentSet()})}patchCurrentSetFormWithData(t){this.patchActualsFormBasedOnSessionTargets()}startEditTarget(t){let e=this.activeSetInfo();if(e)switch(this.editingTarget=t,t){case"reps":this.editingTargetValue=e.setData.reps??"";break;case"weight":this.editingTargetValue=e.setData.weight??"";break;case"duration":this.editingTargetValue=e.setData.duration??"";break}}cancelEditTarget(){this.editingTarget=null,this.editingTargetValue=""}formatPbValue(t){let e="";return t.weightUsed!==void 0&&t.weightUsed!==null?(e+=`${t.weightUsed}${this.unitService.getUnitSuffix()}`,t.repsAchieved>1&&!t.pbType.includes("RM (Actual)")&&(e+=` x ${t.repsAchieved}`)):t.repsAchieved>0&&t.pbType.includes("Max Reps")?e=`${t.repsAchieved} reps`:t.durationPerformed&&t.durationPerformed>0&&t.pbType.includes("Max Duration")&&(e=`${t.durationPerformed}s`),e||"N/A"}initializeCurrentSetForm(){this.currentSetForm=this.fb.group({actualReps:[null,[ut.min(0)]],actualWeight:[null,[ut.min(0)]],actualDuration:[null,[ut.min(0)]],setNotes:[""],rpe:[null,[ut.min(1),ut.max(10)]]})}prepareCurrentSet(){return j(this,null,function*(){if(console.log("prepareCurrentSet: START"),this.sessionState()==="paused"){console.log("prepareCurrentSet: Session is paused, deferring preparation.");return}let t=this.routine();if(!t||t.exercises.length===0){console.warn("prepareCurrentSet: No sessionRoutine or no exercises in routine. Current routine:",t),this.sessionState.set("error"),this.toastService.error("Cannot prepare set: Routine data is missing or empty.",0,"Error");return}let e=this.currentExerciseIndex(),o=this.currentSetIndex();if(console.log(`prepareCurrentSet: Initial target - exIndex: ${e}, sIndex: ${o}, sessionStatus: ${t.exercises[e]?.sessionStatus}`),t.exercises[e]?.sessionStatus!=="pending"){console.log(`prepareCurrentSet: Initial target Ex ${e} (name: ${t.exercises[e]?.exerciseName}) is ${t.exercises[e]?.sessionStatus}. Finding first 'pending'.`);let y=this.findFirstPendingExerciseAndSet(t);if(y)e=y.exerciseIndex,o=y.setIndex,this.currentExerciseIndex.set(e),this.currentSetIndex.set(o),this.isPerformingDeferredExercise=!1,console.log(`prepareCurrentSet: Found first pending - exIndex: ${e} (name: ${t.exercises[e]?.exerciseName}), sIndex: ${o}`);else{console.log("prepareCurrentSet: No 'pending' exercises found in the entire routine. Proceeding to deferred/finish evaluation."),this.exercisesProposedThisCycle={doLater:!1,skipped:!1},yield this.tryProceedToDeferredExercisesOrFinish(t);return}}if(e>=t.exercises.length||!t.exercises[e]||o>=t.exercises[e].sets.length||!t.exercises[e].sets[o]){this.currentSetForm.reset({rpe:null,setNotes:""}),this.resetTimedSet(),this.currentBaseExercise.set(null),this.exercisePBs.set([]),this.lastPerformanceForCurrentExercise=null,this.rpeValue.set(null),this.showRpeSlider.set(!1),console.error(`prepareCurrentSet: CRITICAL ERROR - Calculated exIndex ${e} or sIndex ${o} is out of bounds or data is invalid.`),this.sessionState.set("error"),this.toastService.error("Error preparing set: Invalid exercise or set index.",0,"Load Error");return}let n=t.exercises[e],i=n.sets[o];console.log(`prepareCurrentSet: Preparing for Ex: "${n.exerciseName}", Set: ${o+1}, Type: ${i.type}`);let a=(this.originalRoutineSnapshot.find(y=>y.exerciseId===n.exerciseId)||n)?.sets[o]||i;this.loadBaseExerciseAndPBs(n.exerciseId),(!this.lastPerformanceForCurrentExercise||this.lastPerformanceForCurrentExercise.sets[0]?.exerciseId!==n.exerciseId)&&(this.lastPerformanceForCurrentExercise=yield Xn(this.trackingService.getLastPerformanceForExercise(n.exerciseId).pipe(hr(1))));let l=this.trackingService.findPreviousSetPerformance(this.lastPerformanceForCurrentExercise,a,o),u;a.type==="warmup"?u=Xt({},a):u=this.workoutService.suggestNextSetParameters(l,a,t.goal),u.id=i.id,u.type=i.type,u.notes=i.notes||u.notes;let c=JSON.parse(JSON.stringify(t));c.exercises[e].sets[o]=u,this.routine.set(c),this.patchActualsFormBasedOnSessionTargets();let p=this.appSettingsService.enablePresetTimer(),d=this.appSettingsService.enablePresetTimerAfterRest(),m=this.appSettingsService.presetTimerDurationSeconds(),f=this.currentWorkoutLogExercises().length===0&&this.currentBlockRound()===1&&e===this.findFirstPendingExerciseAndSet(t)?.exerciseIndex&&o===this.findFirstPendingExerciseAndSet(t)?.setIndex,g=1/0;if(o>0)g=n.sets[o-1].restAfterSet;else if(e>0){let y=e-1,b=!1;for(;y>=0;){if(this.isExerciseFullyLogged(t.exercises[y].exerciseId,y,t.exercises[y].id)||t.exercises[y].sessionStatus==="pending"&&this.currentWorkoutLogExercises().some(I=>I.exerciseId===t.exercises[y].exerciseId)){let I=t.exercises[y];I.sets.length>0&&(g=I.sets[I.sets.length-1].restAfterSet,b=!0);break}y--}b||(g=1/0)}if(p&&m>0&&(this.playerSubState()!=="resting"&&(f||g===0)||d)){console.log("prepareCurrentSet: Starting pre-set timer for:",n.exerciseName,"Set:",o+1),this.playerSubState.set("preset_countdown");let y=this.activeSetInfo();y?this.startPresetTimer(m,y):(console.error("prepareCurrentSet: ActiveSetInfo is null before starting preset timer. Aborting preset."),this.playerSubState.set("performing_set"))}else console.log("prepareCurrentSet: No pre-set timer, setting to PerformingSet for:",n.exerciseName,"Set:",o+1),this.playerSubState.set("performing_set");this.sessionState()!=="playing"&&this.sessionState()!=="paused"&&(console.log("prepareCurrentSet: Setting sessionState to Playing."),this.sessionState.set("playing")),console.log("prepareCurrentSet: END")})}findFirstPendingExerciseAndSet(t){if(!t||!t.exercises)return null;for(let e=0;e<t.exercises.length;e++){let o=t.exercises[e];if(o.sessionStatus==="pending"&&o.sets&&o.sets.length>0){let n=this.findFirstUnloggedSetIndex(o.exerciseId,o.sets.map(i=>i.id))??0;if(n<o.sets.length)return{exerciseIndex:e,setIndex:n};console.warn(`Exercise ${o.exerciseName} is pending, but all sets appear logged or index is invalid.`)}}return null}patchActualsFormBasedOnSessionTargets(){if(this.sessionState()==="paused"){console.log("patchActualsFormBasedOnSessionTargets: Session is paused, deferring preparation.");return}this.currentSetForm.patchValue({rpe:null},{emitEvent:!1}),this.rpeValue.set(null),this.showRpeSlider.set(!1),this.resetTimedSet();let t=this.activeSetInfo();if(!t)return;let o=this.currentWorkoutLogExercises().find(s=>s.exerciseId===t.exerciseData.exerciseId)?.sets.find(s=>s.plannedSetId===t.setData.id),n=t.setData.duration??null;o&&o.durationPerformed!==void 0&&(n=o.durationPerformed);let i=t.setData.weight;if(i==null){let a=(this.currentWorkoutLogExercises().find(l=>l.exerciseId===t.exerciseData.exerciseId)?.sets||[]).filter(l=>{let u=t.exerciseData.sets.find(c=>c.id===l.plannedSetId);return u&&t.exerciseData.sets.indexOf(u)<t.setIndex}).sort((l,u)=>t.exerciseData.sets.findIndex(c=>c.id===l.plannedSetId)-t.exerciseData.sets.findIndex(c=>c.id===u.plannedSetId));if(a.length>0){let l=a[a.length-1];l.weightUsed!==null&&l.weightUsed!==void 0&&(i=l.weightUsed,t.type)}else t.type==="warmup"&&(t.setData.weight===null||t.setData.weight===void 0)&&(i=t.setData.weight??null)}o?(this.currentSetForm.patchValue({actualReps:o.repsAchieved,actualWeight:o.weightUsed,actualDuration:n,setNotes:o.notes??"",rpe:o.rpe},{emitEvent:!1}),o.rpe&&this.rpeValue.set(o.rpe)):this.currentSetForm.patchValue({actualReps:t.setData.reps??(t.type==="warmup"?8:null),actualWeight:i??null,actualDuration:n,setNotes:t.setData.notes||(t.type==="warmup"?"Warm-up":""),rpe:null},{emitEvent:!1})}editWeightWithPrompt(){return j(this,null,function*(){if(this.getDisabled()||this.playerSubState()!=="performing_set"){this.toastService.warning("Cannot edit weight now.",2e3);return}if(!this.activeSetInfo())return;let e=this.csf.actualWeight.value,o=yield this.alertService.showPromptDialog("Enter Weight","",[{name:"newWeight",type:"number",placeholder:`Current: ${e??"0"} ${this.weightUnitDisplaySymbol}`,value:e??void 0,attributes:{step:1,min:"0",inputmode:"decimal"}}],"Set Weight");if(o&&o.newWeight!==void 0&&o.newWeight!==null){let n=parseFloat(String(o.newWeight));!isNaN(n)&&n>=0?this.currentSetForm.patchValue({actualWeight:n}):this.toastService.error("Invalid weight entered.",3e3,"Error")}})}loadBaseExerciseAndPBs(t){if(t.startsWith("custom-exercise-")){this.currentBaseExercise.set({id:t,name:this.activeSetInfo()?.exerciseData.exerciseName||"Custom Exercise",category:"custom",description:"",iconName:"custom-exercise",muscleGroups:[],primaryMuscleGroup:"",equipment:"",imageUrls:[]}),this.exercisePBs.set([]);return}this.currentBaseExercise.set(void 0),this.exercisePBs.set([]),this.exerciseService.getExerciseById(t).subscribe(e=>{this.currentBaseExercise.set(e?lr(Xt({},e),{iconName:this.exerciseService.determineExerciseIcon(e,e?.name)}):null)}),this.trackingService.getAllPersonalBestsForExercise(t).pipe(hr(1)).subscribe(e=>this.exercisePBs.set(e))}confirmEditTarget(){let t=this.activeSetInfo();if(!t||this.editingTarget===null)return;let e=parseFloat(this.editingTargetValue);if(isNaN(e)||e<0){this.toastService.error(`Invalid value for ${this.editingTarget}. Must be non-negative.`,3e3,"Input Error");return}let o=this.routine,n=o();if(!n)return;let i=JSON.parse(JSON.stringify(n)),a=i.exercises[t.exerciseIndex].sets[t.setIndex];switch(this.editingTarget){case"reps":a.reps=e;break;case"weight":a.weight=e;break;case"duration":a.duration=e;break}o.set(i),this.toastService.success(`Target ${this.editingTarget} updated to ${e}.`,3e3,"Target Updated"),this.cancelEditTarget(),this.patchActualsFormBasedOnSessionTargets()}completeAndLogCurrentSet(){let t=this.activeSetInfo(),e=this.routine();if(!t||!e){this.toastService.error("Cannot log set: data unavailable.",0);return}if(t.setData.duration&&t.setData.duration>0&&(this.timedSetTimerState()==="running"||this.timedSetTimerState()==="paused")&&this.stopAndLogTimedSet(),this.soundPlayedForThisCountdownSegment=!1,this.currentSetForm.invalid){this.currentSetForm.markAllAsTouched();let s="";for(let a of Object.keys(this.currentSetForm.controls))if(this.currentSetForm.controls[a].invalid){s=a;break}this.toastService.error(`Please correct input: ${s?s+" is invalid.":"form invalid."}`,0,"Validation Error");return}let o=this.currentSetForm.value,n=o.actualDuration;t.setData.duration&&t.setData.duration>0&&this.timedSetElapsedSeconds()>0?n=this.timedSetElapsedSeconds():o.actualDuration===null&&t.setData.duration&&(n=t.setData.duration);let i={id:Ft(),exerciseName:t.exerciseData.exerciseName,plannedSetId:t.setData.id,exerciseId:t.exerciseData.exerciseId,type:t.setData.type,repsAchieved:o.actualReps??(t.setData.type==="warmup"?0:t.setData.reps??0),weightUsed:o.actualWeight??(t.setData.type==="warmup"?null:t.setData.weight),durationPerformed:n,rpe:o.rpe??void 0,targetReps:t.setData.reps,targetWeight:t.setData.weight,targetDuration:t.setData.duration,targetTempo:t.setData.tempo,notes:o.setNotes?.trim()||void 0,timestamp:new Date().toISOString()};this.addLoggedSetToCurrentLog(t.exerciseData,i),this.sessionState()==="playing"&&this.captureAndSaveStateForUnload(),this.rpeValue.set(null),this.showRpeSlider.set(!1),this.editingTarget=null,this.currentSetForm.patchValue({setNotes:""},{emitEvent:!1}),this.navigateToNextStepInWorkout(t,e)}findNextExerciseBlockStartIndex(t,e){for(let o=t+1;o<e.exercises.length;o++){let n=e.exercises[o];if(n.sessionStatus==="pending"&&(!n.supersetId||n.supersetOrder===0))return o}return-1}getNextUpText(t,e){if(!t||!e)return"Next Set/Exercise";let o=e.exercises,n=t.exerciseIndex,i=t.setIndex,s=(f,g)=>{let x=this.currentWorkoutLogExercises().find(I=>I.exerciseId===f.exerciseId&&e.exercises[g].id===f.id),y=(f.sets?.length??0)*(f.rounds??1),b=x?.sets?.length??0;return f.sessionStatus==="pending"&&b<y},a=f=>{let g=f.rounds??1;return f.supersetId&&f.supersetOrder!==null&&(g=o.find(b=>b.supersetId===f.supersetId&&b.supersetOrder===0)?.rounds??1),{round:this.currentBlockRound?this.currentBlockRound():1,totalRounds:g}},l=o[n];if(l){if(i+1<l.sets.length){let f=l.sets[i+1],g=1;f.type==="warmup"?g=l.sets.slice(0,i+2).filter(N=>N.type==="warmup").length:g=l.sets.slice(0,i+2).filter(N=>N.type!=="warmup").length;let x=f.type==="warmup"?"Warm-up":"Set",{round:y,totalRounds:b}=a(l),I=b>1?` (Round ${y}/${b})`:"";return`${x} ${g}/${l.sets.length} of ${l.exerciseName}${I}`}for(let f=n+1;f<o.length;f++){let g=o[f];if(s(g,f)){let y=g.sets[0].type==="warmup"?"Warm-up":"Set",b=1,{round:I,totalRounds:N}=a(g),F=N>1?` (Round ${I}/${N})`:"";return`${y} ${b} of ${g.exerciseName}${F}`}}}if(o.some(f=>f.sessionStatus==="do_later"&&!this.exercisesProposedThisCycle.doLater))return"Do Later Exercises";if(o.some(f=>f.sessionStatus==="skipped"&&!this.exercisesProposedThisCycle.skipped))return"Skipped Exercises";let{round:p,totalRounds:d}=a(l);if(d>1&&p<d){let f="";if(l.supersetId&&l.supersetOrder!==null){let g=o.filter(y=>y.supersetId===l.supersetId),x=l.supersetOrder??0;x+1<g.length?f=g[x+1].exerciseName||"":f=g[0].exerciseName||""}else f=l.exerciseName||"";return`Complete Round ${p}/${d}${f?` [Next exercise: ${f}]`:""}${l.sets?.length?` (${l.sets.length} sets)`:""}`}let m=this.getUnfinishedOrDeferredExercises(e);if(m.length>0){let f=t.exerciseIndex,g=m.slice().sort((y,b)=>y.originalIndex-b.originalIndex),x=g.find(y=>y.originalIndex>f)??g[0];if(x){let y="";switch(x.sessionStatus){case"do_later":y="Do Later";break;case"skipped":y="Skipped";break;case"pending":y="Pending";break;default:y=x.sessionStatus||""}return`Next: ${x.exerciseName} (${y})`}}return d>=1?"":"Complete"}skipRest(){if(this.sessionState()==="paused"){this.toastService.warning("Session is paused. Resume to skip rest.",3e3,"Paused");return}(this.isRestTimerVisible()||this.playerSubState()==="resting")&&this.handleRestTimerSkipped()}pauseSession(){return j(this,null,function*(){this.sessionState()==="playing"&&(this.isPerformanceInsightsVisible.set(!1),this.closeWorkoutMenu(),this.sessionTimerElapsedSecondsBeforePause+=Math.floor((Date.now()-this.workoutStartTime)/1e3),this.timerSub&&this.timerSub.unsubscribe(),this.wasTimedSetRunningOnPause=this.timedSetTimerState()==="running",this.timedSetTimerState()==="running"&&this.pauseTimedSet(),this.wasRestTimerVisibleOnPause=this.isRestTimerVisible(),this.wasRestTimerVisibleOnPause&&(this.restTimerRemainingSecondsOnPause=this.restDuration(),this.restTimerInitialDurationOnPause=this.restDuration(),this.restTimerMainTextOnPause=this.restTimerMainText(),this.restTimerNextUpTextOnPause=this.restTimerNextUpText(),this.isRestTimerVisible.set(!1)),this.stopAutoSave(),this.sessionState.set("paused"),this.savePausedSessionState(),this.toastService.info("Workout Paused",3e3))})}loadStateFromPausedSession(t){return j(this,null,function*(){if(this.routineId=t.routineId,this.routine.set(t.sessionRoutine),this.currentWorkoutLogExercises.set(t.currentWorkoutLogExercises),t.isTabataMode){console.log("Resuming a paused Tabata session."),this.sessionState.set("playing"),this.workoutStartTime=Date.now(),this.sessionTimerElapsedSecondsBeforePause=t.sessionTimerElapsedSecondsBeforePause,this.setupTabataMode(t.sessionRoutine,t.tabataCurrentIntervalIndex,t.tabataTimeRemainingOnPause),this.startSessionTimer(),this.toastService.success("Tabata session resumed.",3e3,"Resumed");return}this.originalRoutineSnapshot=t.originalRoutineSnapshot?JSON.parse(JSON.stringify(t.originalRoutineSnapshot)):[],this.currentExerciseIndex.set(t.currentExerciseIndex),this.currentSetIndex.set(t.currentSetIndex),this.workoutStartTime=Date.now(),this.sessionTimerElapsedSecondsBeforePause=t.sessionTimerElapsedSecondsBeforePause,this.currentBlockRound.set(t.currentBlockRound),this.totalBlockRounds.set(t.totalBlockRounds),this.timedSetTimerState.set(t.timedSetTimerState),this.timedSetElapsedSeconds.set(t.timedSetElapsedSeconds),this.wasTimedSetRunningOnPause=t.timedSetTimerState==="running"||t.timedSetTimerState==="paused",this.lastPerformanceForCurrentExercise=t.lastPerformanceForCurrentExercise,this.wasRestTimerVisibleOnPause=t.isRestTimerVisibleOnPause,this.restTimerRemainingSecondsOnPause=t.restTimerRemainingSecondsOnPause,this.restTimerInitialDurationOnPause=t.restTimerInitialDurationOnPause,this.restTimerMainTextOnPause=t.restTimerMainTextOnPause,this.restTimerNextUpTextOnPause=t.restTimerNextUpTextOnPause,this.exercisesProposedThisCycle={doLater:!1,skipped:!1},this.isPerformingDeferredExercise=!1,this.lastActivatedDeferredExerciseId=null,yield this.prepareCurrentSet(),this.sessionState()!=="error"&&this.routine()&&(this.sessionState.set("playing"),this.startSessionTimer(),this.startAutoSave()),(t.timedSetTimerState==="running"||t.timedSetTimerState==="paused")&&(this.startOrResumeTimedSet(),t.timedSetTimerState==="paused"&&this.pauseTimedSet()),this.wasRestTimerVisibleOnPause&&this.restTimerRemainingSecondsOnPause>0&&this.startRestPeriod(this.restTimerRemainingSecondsOnPause,!0),this.cdr.detectChanges(),this.toastService.success("Workout session resumed.",3e3,"Resumed")})}savePausedSessionState(){if(this.sessionState()==="end"){this.stopAllActivity();return}let t=this.routine();if(!t){console.warn("Cannot save paused state: routine data is not available.");return}let e=this.sessionTimerElapsedSecondsBeforePause;this.sessionState()==="playing"&&this.workoutStartTime>0&&(e+=Math.floor((Date.now()-this.workoutStartTime)/1e3));let o,n=this.currentWorkoutLogExercises()[0]?.sets[0]?.timestamp,i=n?new Date(n):this.workoutStartTime>0?new Date(this.workoutStartTime-this.sessionTimerElapsedSecondsBeforePause*1e3):new Date;o=xr(i,"yyyy-MM-dd");let s={version:this.PAUSED_STATE_VERSION,routineId:this.routineId,sessionRoutine:JSON.parse(JSON.stringify(t)),originalRoutineSnapshot:JSON.parse(JSON.stringify(this.originalRoutineSnapshot)),currentExerciseIndex:this.currentExerciseIndex(),currentSetIndex:this.currentSetIndex(),currentWorkoutLogExercises:JSON.parse(JSON.stringify(this.currentWorkoutLogExercises())),workoutStartTimeOriginal:this.workoutStartTime,sessionTimerElapsedSecondsBeforePause:e,currentBlockRound:this.currentBlockRound(),totalBlockRounds:this.totalBlockRounds(),timedSetTimerState:this.timedSetTimerState(),timedSetElapsedSeconds:this.timedSetElapsedSeconds(),isResting:this.isRestTimerVisible(),isRestTimerVisibleOnPause:this.playerSubState()==="resting",restTimerRemainingSecondsOnPause:this.restDuration(),restTimerInitialDurationOnPause:this.restTimerInitialDurationOnPause,restTimerMainTextOnPause:this.restTimerMainText(),restTimerNextUpTextOnPause:this.restTimerNextUpText(),lastPerformanceForCurrentExercise:this.lastPerformanceForCurrentExercise?JSON.parse(JSON.stringify(this.lastPerformanceForCurrentExercise)):null,workoutDate:o,isTabataMode:this.isTabataMode()};this.isTabataMode()&&(s.tabataCurrentIntervalIndex=this.currentTabataIntervalIndex(),s.tabataTimeRemainingOnPause=this.tabataTimeRemaining()),this.storageService.setItem(this.PAUSED_WORKOUT_KEY,s),console.log("Paused session state saved.",s)}captureAndSaveStateForUnload(){let t=this.sessionTimerElapsedSecondsBeforePause;this.sessionState()==="playing"&&this.workoutStartTime>0&&(t+=Math.floor((Date.now()-this.workoutStartTime)/1e3));let e=this.sessionTimerElapsedSecondsBeforePause;this.sessionTimerElapsedSecondsBeforePause=t,this.savePausedSessionState(),this.sessionTimerElapsedSecondsBeforePause=e,console.log("Session state attempt saved via beforeunload.")}addWarmupSet(){return j(this,null,function*(){if(this.sessionState()==="paused"){this.toastService.warning("Session is paused. Resume to add warm-up.",3e3,"Paused");return}let t=this.routine(),e=this.activeSetInfo();if(!t||!e){this.toastService.error("Cannot add warm-up: data unavailable.",0,"Error");return}let o=t.exercises[e.exerciseIndex],n=o.sets.findIndex(c=>c.type!=="warmup"),i=o.supersetId&&o.supersetOrder!==null,s=e.setIndex===n&&n!==-1;if(i&&s){let c={id:`warmup-${Ft()}`,type:"warmup",reps:8,weight:0,duration:void 0,restAfterSet:30,notes:"Warm-up set"},p=JSON.parse(JSON.stringify(t)),d=e.exerciseIndex-(o.supersetOrder??0);d<0&&(d=0);let m={id:`warmup-ex-${Ft()}`,exerciseId:o.exerciseId,exerciseName:`${o.exerciseName} (Warm-up)`,sets:[c],rounds:1,supersetId:null,supersetOrder:null,supersetSize:null,sessionStatus:"pending",type:"standard"};this.addExerciseToCurrentRoutine(m,d),this.toastService.success("Warm-up set added as a separate exercise before superset.",4e3,"Warm-up Added"),this.closeWorkoutMenu(),this.closePerformanceInsights();return}if(e.setIndex>0&&e.setIndex>n&&n!==-1){let c=yield this.alertService.showConfirm("Add Warm-up Set","You are past the first working set. Adding a warm-up set now will insert it before the current set. Continue?");if(!c||!c.data)return}let a={id:`warmup-${Ft()}`,type:"warmup",reps:8,weight:0,duration:void 0,restAfterSet:30,notes:"Warm-up set"},l=JSON.parse(JSON.stringify(t));l.exercises[e.exerciseIndex].sets.splice(e.setIndex,0,a),this.routine.set(l),this.toastService.success("Warm-up set added. Fill details & complete.",4e3,"Warm-up Added"),yield this.prepareCurrentSet(),this.closeWorkoutMenu(),this.closePerformanceInsights()})}getSets(){let t=this.activeSetInfo(),e=t?.exerciseData.sets||[];return t?.setData.type==="warmup"?e.filter(o=>o.type!=="warmup"):e}getWarmUpSets(){let t=this.activeSetInfo(),e=t?.exerciseData.sets||[];return t?.setData.type==="warmup"?e.filter(o=>o.type==="warmup"):[]}getTotalWarmupSetsForCurrentExercise=Et(()=>{let t=this.routine(),e=this.currentExerciseIndex();return t&&t.exercises[e]?t.exercises[e].sets.filter(o=>o.type==="warmup").length:0});canAddWarmupSet=Et(()=>{let t=this.activeSetInfo(),e=this.routine();if(!t||!e||this.sessionState()==="paused")return!1;let o=e.exercises[t.exerciseIndex].sets;return!(this.currentWorkoutLogExercises().find(i=>i.exerciseId===t.exerciseData.exerciseId)?.sets.some(i=>i.plannedSetId===t.setData.id)&&t.type!=="warmup")});getIconPath(t){return this.exerciseService.getIconPath(t)}toggleWorkoutMenu(){this.sessionState()==="paused"&&!this.isWorkoutMenuVisible()||(this.isWorkoutMenuVisible.update(t=>!t),this.isWorkoutMenuVisible()&&this.isPerformanceInsightsVisible.set(!1))}closeWorkoutMenu(){this.isWorkoutMenuVisible.set(!1),window.scrollTo(0,0)}skipCurrentSet(){return j(this,null,function*(){if(this.sessionState()==="paused"){this.toastService.warning("Session is paused. Resume to skip set.",3e3,"Paused");return}let t=this.activeSetInfo(),e=this.routine();if(!t||!e){this.toastService.error("Cannot skip set: No active set information.",0,"Error");return}if(t.setIndex===t.exerciseData.sets.length-1&&t.exerciseData.sessionStatus==="pending"){let o=yield this.alertService.showConfirmationDialog("Last Set",`This is the last set of "${t.exerciseData.exerciseName}". Skip the entire exercise instead?`,[{text:"Skip Set Only",role:"cancel",data:"skip_set"},{text:"Skip Exercise",role:"confirm",data:"skip_exercise",cssClass:"bg-orange-500"}]);if(o&&o.data==="skip_exercise"){yield this.markCurrentExerciseStatus("skipped"),this.closeWorkoutMenu();return}else if(!o||o.role==="cancel"&&o.data!=="skip_set")return}else{let o=yield this.alertService.showConfirm("Skip Current Set",`Skip current ${t.type==="warmup"?"warm-up":"set "+this.getCurrentWorkingSetNumber()} of "${t.exerciseData.exerciseName}"? It won't be logged.`);if(!o||!o.data)return}this.soundPlayedForThisCountdownSegment=!1,this.toastService.info(`Skipped set of ${t.exerciseData.exerciseName}.`,2e3),this.resetTimedSet(),this.navigateToNextStepInWorkout(t,e),this.closeWorkoutMenu(),this.closePerformanceInsights()})}skipCurrentExercise(){return j(this,null,function*(){yield this.markCurrentExerciseStatus("skipped")})}markCurrentExerciseDoLater(){return j(this,null,function*(){yield this.markCurrentExerciseStatus("do_later")})}markCurrentExerciseStatus(t){return j(this,null,function*(){if(this.sessionState()==="paused"){this.toastService.warning("Session is paused. Resume to mark exercise.",3e3,"Paused");return}let e=this.routine(),o=this.activeSetInfo();if(!e||!o){this.toastService.error("Cannot update exercise status: data unavailable.",0,"Error");return}let n=o.exerciseData.exerciseName,i=t==="skipped"?"Skip":"Mark for Later",s=JSON.parse(JSON.stringify(e)),a=s.exercises.find(l=>l.id===o.exerciseData.id);if(a){let l=a.sessionStatus;a.sessionStatus=t;let u=t.replace(/(^\w)/g,c=>c[0].toUpperCase()).replace(/([-_]\w)/g,c=>" "+c[1].toUpperCase()).trim();this.routine.set(s),this.toastService.info(`"${n}" marked as ${u}.`,2e3),this.resetTimedSet(),this.isPerformingDeferredExercise&&o.exerciseData.id===this.lastActivatedDeferredExerciseId?(console.log(`markCurrentExerciseStatus: Re-marking a deferred exercise (${n}) as ${t}. Re-evaluating all deferred.`),this.isPerformingDeferredExercise=!1,this.lastActivatedDeferredExerciseId=null,this.exercisesProposedThisCycle={doLater:!1,skipped:!1},yield this.tryProceedToDeferredExercisesOrFinish(s)):(console.log(`markCurrentExerciseStatus: Marking main sequence exercise (${n}) as ${t}. Advancing.`),yield this.navigateToNextStepInWorkout(o,s,!0))}this.closeWorkoutMenu(),this.closePerformanceInsights()})}addExerciseDuringSession(){return j(this,null,function*(){if(this.sessionState()==="paused"){this.toastService.warning("Session is paused. Resume to add exercise.",3e3,"Paused"),this.closeWorkoutMenu();return}this.openExerciseSelectionModal()})}selectExerciseToAddFromModal(t){return j(this,null,function*(){if(this.closeExerciseSelectionModal(),!this.routine()){this.toastService.error("Cannot add exercise: routine data unavailable.",0,"Error");return}let o=this.unitService.currentUnit()==="kg"?10:22.2,n=60,i=10,s=3,a=yield this.alertService.showPromptDialog(`Add ${t.name}`,"",[{label:"Exercise name",name:"name",type:"string",placeholder:"Exercise name",value:t.name,attributes:{required:!0}},{label:"Number of Reps",name:"numReps",type:"number",placeholder:"Number of Reps (e.g., 10)",value:10,attributes:{min:0,required:!0}},{label:"Number of Sets",name:"numSets",type:"number",placeholder:"Number of Sets (e.g., 3)",value:3,attributes:{min:1,required:!0}},{label:"Target weight",name:"weight",type:"number",placeholder:"e.g., 10",value:o,attributes:{min:0,required:!0}},{label:"Rest between sets",name:"rest",type:"number",placeholder:"e.g., 60",value:"60",attributes:{min:"1",required:!0}}]);if(a){let l=a.name,u=isNaN(parseInt(String(a.numSets)))?s:parseInt(String(a.numSets)),c=isNaN(parseInt(String(a.numReps)))?i:parseInt(String(a.numReps)),p=isNaN(parseInt(String(a.weight)))?o:parseInt(String(a.weight)),d=isNaN(parseInt(String(a.rest)))?n:parseInt(String(a.rest));if(!l||u==null||isNaN(u)||c==null||isNaN(c)||p==null||isNaN(p)||d==null||isNaN(d)){this.toastService.info("Exercise addition cancelled or invalid parameter.",2e3),this.selectExerciseToAddFromModal(t);return}let m=[];for(let x=0;x<u;x++)m.push({id:`custom-set-${Ft()}`,reps:8,weight:p,duration:void 0,restAfterSet:d,type:"standard",notes:""});let f={id:t.id,exerciseId:t.id,exerciseName:t.name,sets:m,rounds:1,supersetId:null,supersetOrder:null,supersetSize:null,sessionStatus:"pending",type:"standard"},g=this.exerciseService.mapWorkoutExerciseToExercise(f,t);this.exerciseService.addExercise(g),this.addExerciseToCurrentRoutine(f)}})}handleTrulyCustomExerciseEntry(){return j(this,null,function*(){if(this.closeExerciseSelectionModal(),!this.routine())return;let e={id:`custom-adhoc-ex-${Ft()}`,name:"Custom exercise",description:"",category:"bodyweight/calisthenics",muscleGroups:[],primaryMuscleGroup:"",imageUrls:[]};this.selectExerciseToAddFromModal(e)})}addExerciseToCurrentRoutine(t,e){return j(this,null,function*(){let o=this.routine();if(!o)return;let n=e!=null,i=JSON.parse(JSON.stringify(o)),s=e??this.currentExerciseIndex()+1,a=this.activeSetInfo();if(!n&&a&&a.exerciseData.supersetId&&a.exerciseData.supersetOrder!==null&&a.exerciseData.supersetSize&&(s=a.exerciseIndex-a.exerciseData.supersetOrder+a.exerciseData.supersetSize),i.exercises.splice(s,0,t),this.routine.set(i),n)this.currentExerciseIndex.set(s),this.currentSetIndex.set(0),this.currentBlockRound.set(1),this.totalBlockRounds.set(t.rounds??1),this.lastPerformanceForCurrentExercise=null,this.isPerformingDeferredExercise=!0,this.playerSubState.set("performing_set"),yield this.prepareCurrentSet();else{let l;this.routineId==="-1"&&this.routine()?.exercises?.length===1?(l={data:!0},this.sessionState.set("playing"),this.startSessionTimer(),this.startAutoSave()):l=yield this.alertService.showConfirm("Exercise Added",`"${t.exerciseName}" added. Start it now? (Otherwise, it will appear after your current block)`),l&&l.data||this.routineId==="-1"?(this.currentExerciseIndex.set(s),this.currentSetIndex.set(0),this.currentBlockRound.set(1),this.totalBlockRounds.set(t.rounds??1),this.lastPerformanceForCurrentExercise=null,this.isPerformingDeferredExercise=!0,this.lastActivatedDeferredExerciseId=t.id,this.playerSubState.set("performing_set"),yield this.prepareCurrentSet()):this.toastService.success(`"${t.exerciseName}" added to the queue.`,3e3,"Exercise Added")}})}addCustomExercise(){return j(this,null,function*(){if(this.sessionState()==="paused"){this.toastService.warning("Session is paused. Resume to add exercise.",3e3,"Paused");return}let t=this.routine();if(!t){this.toastService.error("Cannot add exercise: routine data unavailable.",0,"Error");return}let e=[{name:"exerciseName",type:"text",placeholder:"Exercise Name (e.g., Custom Bicep Curl)",value:"",attributes:{required:!0}},{name:"numSets",type:"number",placeholder:"Number of Sets (e.g., 3)",value:"3",attributes:{min:"1",required:!0}},{name:"repsPerSet",type:"number",placeholder:"Reps per Set (e.g., 10)",value:"10",attributes:{min:"0"}},{name:"weightPerSet",type:"number",placeholder:"Weight (optional)",value:"",attributes:{min:"0",step:"any"}},{name:"restAfterSet",type:"number",placeholder:"Rest after set (sec, e.g., 60)",value:"60",attributes:{min:"0"}}],o=yield this.alertService.showPromptDialog("Add asdasdds Exercise","Define the new exercise:",e,"Add Exercise");if(o&&o.exerciseName&&o.numSets){let n=String(o.exerciseName).trim(),i=parseInt(String(o.numSets),10),s=o.repsPerSet?parseInt(String(o.repsPerSet),10):null,a=o.weightPerSet!==""&&o.weightPerSet!==null?parseFloat(String(o.weightPerSet)):null,l=o.restAfterSet?parseInt(String(o.restAfterSet),10):60;if(!n||i<=0){this.toastService.error("Invalid input for custom exercise.",0,"Error");return}let u=[];for(let g=0;g<i;g++)u.push({id:`custom-set-${Ft()}`,reps:s||8,weight:a,duration:void 0,restAfterSet:l,type:"standard",notes:""});let c={id:`custom-ex-${Ft()}`,exerciseId:`custom-exercise-${Ft()}`,exerciseName:n,sets:u,rounds:1,supersetId:null,sessionStatus:"pending",supersetOrder:null,type:"standard"},p=JSON.parse(JSON.stringify(t)),d=this.currentExerciseIndex()+1,m=this.activeSetInfo();m&&m.exerciseData.supersetId&&m.exerciseData.supersetOrder!==null&&m.exerciseData.supersetSize&&(d=m.exerciseIndex-m.exerciseData.supersetOrder+m.exerciseData.supersetSize),p.exercises.splice(d,0,c),this.routine.set(p);let f=yield this.alertService.showConfirm("Exercise Added",`"${n}" added. Start it now? (Otherwise, it will appear after your current block)`);f&&f.data?(this.currentExerciseIndex.set(d),this.currentSetIndex.set(0),this.currentBlockRound.set(1),this.totalBlockRounds.set(c.rounds??1),this.lastPerformanceForCurrentExercise=null,this.playerSubState.set("performing_set"),yield this.prepareCurrentSet()):this.toastService.success(`"${n}" added to the queue.`,3e3,"Exercise Added")}this.closeWorkoutMenu()})}finishWorkoutEarly(){return j(this,null,function*(){if(this.sessionState()==="paused"){this.toastService.warning("Please resume before finishing early.",3e3,"Paused");return}let t=yield this.alertService.showConfirm("Finish Workout Early","Finish workout now? Current progress will be saved.");t&&t.data&&(this.closeWorkoutMenu(),this.closePerformanceInsights(),(yield this.finishWorkoutAndReportStatus())||(this.toastService.info("Workout finished early. Paused session cleared.",4e3),this.storageService.removeItem(this.PAUSED_WORKOUT_KEY),this.router.url.includes("/play")&&this.router.navigate(["/workout"])))})}mapWorkoutExerciseToLoggedWorkoutExercise(t){return{id:t.id,exerciseId:t.exerciseId,exerciseName:t.exerciseName||"",sets:t.sets.map(e=>({id:Ft(),exerciseName:t.exerciseName,plannedSetId:e.id,exerciseId:t.exerciseId,type:t.type,repsAchieved:0,weightUsed:void 0,durationPerformed:void 0,rpe:void 0,targetReps:e.reps,targetWeight:e.weight,targetDuration:e.duration,targetTempo:e.tempo,notes:e.notes,timestamp:new Date().toISOString()})),rounds:t.rounds??1,type:(t.sets&&t.sets[0]&&t.sets[0].type||t.type)??"standard"}}finishWorkoutAndReportStatus(){return j(this,null,function*(){if(this.stopAutoSave(),this.sessionState()==="paused")return this.toastService.warning("Please resume workout before finishing.",3e3,"Session Paused"),!1;if(this.sessionState()==="loading")return this.toastService.info("Workout is still loading.",3e3,"Loading"),!1;let t=this.currentWorkoutLogExercises().filter(y=>y.sets.length>0);if(t===void 0||t.length===0)return!1;if(t.length===0)return this.toastService.info("No sets logged. Workout not saved.",3e3,"Empty Workout"),this.storageService.removeItem(this.PAUSED_WORKOUT_KEY),this.router.url.includes("/play")&&this.router.navigate(["/workout"]),!1;this.storageService.removeItem(this.PAUSED_WORKOUT_KEY),this.timerSub&&this.timerSub.unsubscribe();let e=this.routine(),o=this.program(),n=!0,i=!1,s=!1,a=e?.name?`${e.name} - ${xr(new Date,"MMM d")}`:`Ad-hoc Workout - ${xr(new Date,"MMM d, HH:mm")}`,l=this.originalRoutineSnapshot.filter(y=>e?.exercises.find(b=>b.id===y.id&&b.sessionStatus==="pending")||t.some(b=>b.exerciseId===y.exerciseId));if(this.routineId&&this.originalRoutineSnapshot&&this.originalRoutineSnapshot.length>0&&e){let y=this.comparePerformedToOriginal(t,l);if(y.majorDifference){console.log("Major differences",y.details);let b=yield this.alertService.showConfirmationDialog("Routine Structure Changed","You made some changes to the routine structure. Would you like to save this as a new routine, update the original, or cancel?",[{text:"Simply log",role:"log",data:"log",cssClass:"bg-purple-600"},{text:"Update Original Routine and log",role:"destructive",data:"update",cssClass:"bg-blue-600"},{text:"Save as New Routine",role:"confirm",data:"new",cssClass:"bg-green-600"},{text:"Cancel",role:"cancel",data:"cancel"}],{listItems:y.details});if(b&&b.data==="new"){let I=yield this.alertService.showPromptDialog("New Routine Name","Enter a name for your new routine:",[{name:"newRoutineName",type:"text",placeholder:a,value:a,attributes:{required:!0}}],"Save Routine");I&&String(I.newRoutineName).trim()?(a=String(I.newRoutineName).trim(),i=!0):n=!1}else b&&b.data==="update"?s=!0:b&&b.data==="log"?(s=!1,n=!0):n=!1}}else if(!this.routineId&&t.length>0){i=!0;let y=yield this.alertService.showPromptDialog("Save as New Routine","Enter a name for your new routine:",[{name:"newRoutineName",type:"text",placeholder:a,value:a,attributes:{required:!0}}],"Save Routine");y&&String(y.newRoutineName).trim()?a=String(y.newRoutineName).trim():y||(n=!1)}if(!n)return this.toastService.info("Finish workout cancelled. Session remains active/paused.",3e3,"Cancelled"),this.sessionState()==="playing"&&this.startAutoSave(),!1;let u=Date.now(),c=this.workoutStartTime-this.sessionTimerElapsedSecondsBeforePause*1e3,p=Math.round((u-c)/(1e3*60)),d=Math.round((u-c)/1e3),m=this.routineId||void 0,f=e?.name||"Ad-hoc Workout";if(i){let y={name:a,description:e?.description||"Workout performed on "+xr(new Date,"MMM d, yyyy"),goal:e?.goal||"custom",exercises:this.convertLoggedToWorkoutExercises(t)},b=this.workoutService.addRoutine(y);m=b.id,f=b.name,this.toastService.success(`New routine "${b.name}" created.`,4e3)}let g={routineId:m,routineName:f,date:xr(new Date(c),"yyyy-MM-dd"),startTime:c,endTime:u,durationMinutes:p,durationSeconds:d,exercises:t,notes:e?.notes,programId:o?.id},x=this.trackingService.addWorkoutLog(g);if(this.isTabataMode()?this.toastService.success("Tabata Workout Complete!",5e3,"Workout Finished"):this.toastService.success("Congrats! Workout completed!",5e3,"Workout Finished"),m){let y=yield Xn(this.workoutService.getRoutineById(m).pipe(hr(1)));if(y){let b=lr(Xt({},y),{lastPerformed:new Date(c).toISOString()});s&&!i&&this.routineId===m&&(b.exercises=this.convertLoggedToWorkoutExercises(t)),this.workoutService.updateRoutine(b)}}return this.stopAllActivity(),this.storageService.removeItem(this.PAUSED_WORKOUT_KEY),this.router.navigate(["/workout/summary",x.id]),!0})}quitWorkout(){return j(this,null,function*(){let t=yield this.alertService.showConfirm("Quit Workout","Quit workout? Unsaved progress (if not paused) will be lost.");t&&t.data&&(this.stopAllActivity(),this.isSessionConcluded=!0,this.storageService.removeItem(this.PAUSED_WORKOUT_KEY),this.closeWorkoutMenu(),this.closePerformanceInsights(),this.router.navigate(["/workout"]),this.toastService.info("Workout quit. No progress saved for this session.",4e3))})}toggleCompletedSetsInfo(){this.showCompletedSetsInfo.update(t=>!t)}openPerformanceInsights(){if(this.sessionState()==="paused"){this.toastService.warning("Session is paused. Resume to view insights.",3e3,"Paused");return}this.isPerformanceInsightsVisible.set(!0),this.isWorkoutMenuVisible.set(!1)}closePerformanceInsights(){this.isPerformanceInsightsVisible.set(!1),this.editingTarget&&this.cancelEditTarget()}openPerformanceInsightsFromMenu(){this.closeWorkoutMenu(),this.openPerformanceInsights()}goBack(){this.currentWorkoutLogExercises().length>0&&this.sessionState()==="playing"?this.alertService.showConfirm("Exit Workout?","You have an active workout. Are you sure you want to exit? Your progress might be lost unless you pause first.").then(t=>{t&&t.data&&this.router.navigate(["/workout"])}):this.router.navigate(["/workout"])}incrementWeight(t=.5){let e=this.appSettingsService.getSettings().weightStep||t,o=this.csf.actualWeight.value??0;this.currentSetForm.patchValue({actualWeight:parseFloat((o+e).toFixed(2))})}decrementWeight(t=.5){let e=this.appSettingsService.getSettings().weightStep||t,o=this.csf.actualWeight.value??0,n=parseFloat((o-e).toFixed(2))>=0?parseFloat((o-e).toFixed(2)):0;this.currentSetForm.patchValue({actualWeight:n})}pressStartTime=null;weightIncrementIntervalId=null;weightDecrementIntervalId=null;intervalId=null;onShortPressWeightIncrement(){this.incrementWeight()}onLongPressWeightIncrement(){this.intervalId=setInterval(()=>this.incrementWeight(),200)}onPressRelease(){this.intervalId&&(clearInterval(this.intervalId),this.intervalId=null)}onShortPressWeightDecrement(){this.decrementWeight()}onLongPressWeightDecrement(){this.intervalId=setInterval(()=>this.decrementWeight(),200)}onShortPressRepsIncrement(){this.incrementReps()}onLongPressRepsIncrement(){this.intervalId=setInterval(()=>this.incrementReps(),200)}onShortPressRepsDecrement(){this.decrementReps()}onLongPressRepsDecrement(){this.intervalId=setInterval(()=>this.decrementReps(),200)}incrementReps(t=1){let e=t,o=this.csf.actualReps.value??0;this.currentSetForm.patchValue({actualReps:o+e})}decrementReps(t=1){let e=t,o=this.csf.actualReps.value??0;this.currentSetForm.patchValue({actualReps:Math.max(0,o-e)})}toggleRpeInput(){this.showRpeSlider.update(t=>!t)}updateRpe(t){let e=typeof t=="string"?parseInt(t,10):t;e!==null&&!isNaN(e)&&e>=1&&e<=10?(this.rpeValue.set(e),this.currentSetForm.patchValue({rpe:e})):e===null&&(this.rpeValue.set(null),this.currentSetForm.patchValue({rpe:null}))}startAutoSave(){gr(this.platformId)&&(this.autoSaveSub&&this.autoSaveSub.unsubscribe(),this.autoSaveSub=cS(this.AUTO_SAVE_INTERVAL_MS).pipe(Yn(this.destroy$)).subscribe(()=>{this.sessionState()==="playing"&&this.routine()&&(console.log("Auto-saving workout state..."),this.savePausedSessionState())}))}stopAutoSave(){this.autoSaveSub&&(this.autoSaveSub.unsubscribe(),this.autoSaveSub=void 0)}ngOnInit(){return j(this,null,function*(){gr(this.platformId)&&window.scrollTo(0,0);let t=this.storageService.getItem(this.PAUSED_WORKOUT_KEY);(yield this.checkForPausedSession(!1))?this.isInitialLoadComplete=!0:this.loadNewWorkoutFromRoute(),gr(this.platformId)&&(this.routerEventsSub=this.router.events.pipe(Sd(o=>o instanceof CS),is(o=>j(this,null,function*(){let n=this.route.snapshot,i=o.urlAfterRedirects.startsWith("/workout/play/"),s=n.paramMap.get("routineId");i&&(this.routineId===s&&this.isInitialLoadComplete&&this.sessionState()!=="playing"?!(yield this.checkForPausedSession(!0))&&this.sessionState()!=="playing"&&this.loadNewWorkoutFromRoute():this.routineId)})),Yn(this.destroy$)).subscribe()),this.loadAvailableExercises()})}loadNewWorkoutFromRoute(){return j(this,null,function*(){console.log("loadNewWorkoutFromRoute - START"),this.isInitialLoadComplete=!1,this.sessionState.set("loading"),this.exercisesProposedThisCycle={doLater:!1,skipped:!1},this.isPerformingDeferredExercise=!1,this.lastActivatedDeferredExerciseId=null,this.stopAllActivity(),this.workoutStartTime=Date.now(),this.sessionTimerElapsedSecondsBeforePause=0,this.originalRoutineSnapshot=[],this.currentWorkoutLogExercises.set([]),this.currentSetIndex.set(0),this.currentBlockRound.set(1),this.routine.set(void 0),this.program.set(void 0),this.routeSub&&this.routeSub.unsubscribe(),this.routeSub=this.route.paramMap.pipe(ga(t=>{let e=t.get("routineId");return console.log("loadNewWorkoutFromRoute - paramMap emitted, newRoutineId:",e),(!e||e==="-1")&&e!=="-1"?(this.toastService.error("No routine specified to play.",0,"Error"),this.router.navigate(["/workout"]),this.sessionState.set("error"),jn(null)):(this.routineId=e,this.workoutService.getRoutineById(this.routineId).pipe(ns(o=>{if(o){console.log("loadNewWorkoutFromRoute: Fetched original routine -",o.name),this.originalRoutineSnapshot=JSON.parse(JSON.stringify(o.exercises));let n=JSON.parse(JSON.stringify(o));return n.exercises.forEach(i=>{i.sessionStatus="pending",i.id||(i.id=Ft()),i.sets.forEach(s=>{s.id||(s.id=Ft()),s.type||(s.type="standard")})}),n}return console.warn("loadNewWorkoutFromRoute: No original routine found for ID:",this.routineId),null})))}),is(t=>j(this,null,function*(){if(console.log("loadNewWorkoutFromRoute - tap operator. Session routine copy:",t?t.name:"null"),t?.goal==="tabata"){this.setupTabataMode(t),this.startSessionTimer(),this.isInitialLoadComplete=!0;return}if(this.sessionState()==="paused"){console.log("loadNewWorkoutFromRoute - tap: Session is paused, skipping setup."),this.isInitialLoadComplete=!0;return}if(t){this.exercisesProposedThisCycle={doLater:!1,skipped:!1},this.isPerformingDeferredExercise=!1,this.lastActivatedDeferredExerciseId=null,this.routine.set(t);let e=this.findFirstPendingExerciseAndSet(t);if(e){this.currentExerciseIndex.set(e.exerciseIndex),this.currentSetIndex.set(e.setIndex),console.log(`loadNewWorkoutFromRoute - Initial pending set to Ex: ${e.exerciseIndex}, Set: ${e.setIndex}`);let o=t.exercises[e.exerciseIndex];if(!o.supersetId||o.supersetOrder===0)this.totalBlockRounds.set(o.rounds??1);else{let n=t.exercises.find(i=>i.supersetId===o.supersetId&&i.supersetOrder===0);this.totalBlockRounds.set(n?.rounds??1)}}else{console.log("loadNewWorkoutFromRoute: Routine loaded but no initial pending exercises. Will try deferred/finish."),this.currentExerciseIndex.set(0),this.currentSetIndex.set(0),this.totalBlockRounds.set(1),this.exercisesProposedThisCycle={doLater:!1,skipped:!1},yield this.tryProceedToDeferredExercisesOrFinish(t),this.isInitialLoadComplete=!0;return}this.currentBlockRound.set(1),this.currentWorkoutLogExercises.set([]),yield this.prepareCurrentSet(),this.sessionState()!=="error"&&this.sessionState()!=="paused"&&(this.startSessionTimer(),this.startAutoSave())}else if(this.routineId)if(this.routineId==="-1"){let e={name:"New session",createdAt:new Date().toISOString(),goal:"custom",exercises:[]};this.routine.set(e),this.openExerciseSelectionModal()}else console.error("loadNewWorkoutFromRoute - tap: Failed to load routine for ID or routine was null:",this.routineId),this.routine.set(null),this.sessionState.set("error"),this.toastService.error("Failed to load workout routine.",0,"Load Error"),gr(this.platformId)&&this.router.navigate(["/workout"]),this.stopAutoSave();this.isInitialLoadComplete=!0,console.log("loadNewWorkoutFromRoute - END tap operator. Final sessionState:",this.sessionState())})),Yn(this.destroy$)).subscribe({error:t=>{console.error("loadNewWorkoutFromRoute - Error in observable pipeline:",t),this.routine.set(null),this.sessionState.set("error"),this.toastService.error("Critical error loading workout.",0,"Load Error"),gr(this.platformId)&&this.router.navigate(["/workout"]),this.isInitialLoadComplete=!0}})})}checkForPausedSession(t=!1){return j(this,null,function*(){let e=this.storageService.getItem(this.PAUSED_WORKOUT_KEY),o=this.route.snapshot.paramMap.get("routineId"),n=this.route.snapshot.queryParamMap.get("resume")==="true";if(console.log("WorkoutPlayer.checkForPausedSession ...",!!e),e&&e.version===this.PAUSED_STATE_VERSION){if(o&&e.routineId===null)return console.log("WorkoutPlayer.checkForPausedSession - Current route is for a specific routine, but paused session was ad-hoc. Discarding paused session."),this.storageService.removeItem(this.PAUSED_WORKOUT_KEY),!1;if(!o&&e.routineId!==null)return console.log("WorkoutPlayer.checkForPausedSession - Current route is ad-hoc, but paused session was for a specific routine. Discarding paused session."),this.storageService.removeItem(this.PAUSED_WORKOUT_KEY),!1;if(o&&e.routineId&&o!==e.routineId)return console.log("WorkoutPlayer.checkForPausedSession - Paused session routine ID does not match current route routine ID. Discarding paused session."),this.storageService.removeItem(this.PAUSED_WORKOUT_KEY),!1;let i=!1;if(n)i=!0,this.router.navigate([],{relativeTo:this.route,queryParams:{resume:null},queryParamsHandling:"merge",replaceUrl:!0});else if(t)i=!0;else{let s=yield this.alertService.showConfirmationDialog("Resume Paused Workout?","You have a paused workout session. Would you like to resume it?",[{text:"Resume",role:"confirm",data:!0,cssClass:"bg-green-600"},{text:"Discard",role:"cancel",data:!1,cssClass:"bg-red-600"}]);i=!!(s&&s.data===!0)}return i?(this.stopAllActivity(),this.routeSub&&this.routeSub.unsubscribe(),yield this.loadStateFromPausedSession(e),this.storageService.removeItem(this.PAUSED_WORKOUT_KEY),this.isInitialLoadComplete=!0,!0):(this.storageService.removeItem(this.PAUSED_WORKOUT_KEY),this.toastService.info("Paused session discarded.",3e3),!1)}return!1})}stopAllActivity(){this.isSessionConcluded=!0,console.log("stopAllActivity - Stopping timers and auto-save."),this.stopAutoSave(),this.timerSub&&this.timerSub.unsubscribe(),this.timedSetIntervalSub&&this.timedSetIntervalSub.unsubscribe(),this.tabataTimerSub&&this.tabataTimerSub.unsubscribe(),this.isRestTimerVisible.set(!1),this.sessionState.set("end")}resumeSession(){return j(this,null,function*(){this.sessionState()==="paused"?(console.log("resumeSession button clicked - transitioning from Paused to Playing"),this.workoutStartTime=Date.now(),this.sessionState.set("playing"),this.startSessionTimer(),this.startAutoSave(),this.wasTimedSetRunningOnPause&&this.timedSetTimerState()==="paused"&&this.startOrResumeTimedSet(),this.wasTimedSetRunningOnPause=!1,this.wasRestTimerVisibleOnPause&&this.restTimerRemainingSecondsOnPause>0&&this.startRestPeriod(this.restTimerRemainingSecondsOnPause,!0),this.wasRestTimerVisibleOnPause=!1,this.closeWorkoutMenu(),this.closePerformanceInsights(),this.toastService.info("Workout session resumed.",3e3)):!(yield this.checkForPausedSession(!0))&&this.sessionState()!=="playing"&&this.routineId&&this.loadNewWorkoutFromRoute()})}ngOnDestroy(){this.destroy$.next(),this.destroy$.complete(),this.stopAllActivity(),this.isRestTimerVisible.set(!1),gr(this.platformId)&&!this.isSessionConcluded&&(this.sessionState()==="playing"||this.sessionState()==="paused")&&this.routine()&&this.currentWorkoutLogExercises().length>0&&(console.log("WorkoutPlayer ngOnDestroy - Saving state..."),this.savePausedSessionState())}playClientBeep(t=800,e=150){if(gr(this.platformId))try{let o=window.AudioContext||window.webkitAudioContext;if(!o){console.warn("Web Audio API not supported in this browser.");return}let n=new o,i=n.createOscillator();i.type="sine",i.frequency.setValueAtTime(t,n.currentTime),i.connect(n.destination),i.start(),i.stop(n.currentTime+e/1e3),setTimeout(()=>{n.state!=="closed"&&n.close()},e+50)}catch(o){console.error("Error playing beep sound:",o)}}playClientGong(t=440,e=700){if(gr(this.platformId))try{let o=window.AudioContext||window.webkitAudioContext;if(!o){console.warn("Web Audio API not supported in this browser.");return}let n=new o,i=n.createOscillator(),s=n.createGain();i.type="triangle",i.frequency.setValueAtTime(200,n.currentTime),s.gain.setValueAtTime(1,n.currentTime),s.gain.exponentialRampToValueAtTime(.001,n.currentTime+2),i.connect(s),s.connect(n.destination),i.start(),i.stop(n.currentTime+2)}catch(o){console.error("Error playing gong sound:",o)}}startPresetTimer(t,e){this.playerSubState.set("preset_countdown"),this.presetTimerDuration.set(t);let o=t;this.presetTimerCountdownDisplay.set(String(o)),this.restTimerMainText.set(`GET READY: ${e.exerciseData.exerciseName}`);let n=e.type==="warmup"?`Warm-up ${this.getWarmupSetNumberForDisplay(e.exerciseData,e.setIndex)}/${this.getTotalWarmupSetsForExercise(e.exerciseData)}`:`Set ${this.getWorkingSetNumberForDisplay(e.exerciseData,e.setIndex)}/${this.getWorkingSetCountForExercise(e.exerciseData)}`;this.restTimerNextUpText.set(n),this.presetTimerSub&&this.presetTimerSub.unsubscribe(),this.presetTimerSub=tp(0,1e3).pipe(Yn(this.destroy$),hr(t+1)).subscribe({next:()=>{this.presetTimerCountdownDisplay.set(String(o)),o<=this.appSettingsService.countdownSoundSeconds()&&o>0&&this.appSettingsService.enableTimerCountdownSound()&&t>5&&this.playClientBeep(600,150),o--},complete:()=>{this.playerSubState()==="preset_countdown"&&(this.playClientBeep(1e3,250),this.handlePresetTimerFinished())}})}handlePresetTimerFinished(){this.presetTimerSub&&(this.presetTimerSub.unsubscribe(),this.presetTimerSub=void 0),this.presetTimerCountdownDisplay.set(null),this.playerSubState.set("performing_set"),this.cdr.detectChanges(),console.log("Pre-set timer finished. Player state set to PerformingSet.")}skipPresetTimer(){this.playerSubState()==="preset_countdown"&&(this.presetTimerSub&&(this.presetTimerSub.unsubscribe(),this.presetTimerSub=void 0),this.handlePresetTimerFinished())}getWarmupSetNumberForDisplay(t,e){let o=0;for(let n=0;n<=e;n++)t.sets[n].type==="warmup"&&o++;return o}getTotalWarmupSetsForExercise(t){return t.sets.filter(e=>e.type==="warmup").length}getWorkingSetNumberForDisplay(t,e){let o=0;for(let n=0;n<=e;n++)t.sets[n].type!=="warmup"&&o++;return o}getWorkingSetCountForExercise(t){return t.sets.filter(e=>e.type!=="warmup").length}findNextPlayableItemIndices(t,e,o,n=!1){let i=t,s=e,a=!1,l=!1,u=!1,c=o.exercises[t];if(n||s>=c.sets.length-1){if(s=0,!n&&c.supersetId&&c.supersetOrder!==null&&c.supersetOrder<(c.supersetSize||1)-1){let m=t+1;for(;m<o.exercises.length&&(o.exercises[m].supersetId!==c.supersetId||o.exercises[m].sessionStatus!=="pending");)m++;if(m<o.exercises.length&&o.exercises[m].supersetId===c.supersetId)return i=m,{nextExIdx:i,nextSetIdx:s,blockChanged:a,isEndOfAllPending:l,roundIncremented:u}}let p=this.totalBlockRounds();if(!n&&this.currentBlockRound()<p){this.currentBlockRound.update(x=>x+1),u=!0;let m=t;c.supersetId&&c.supersetOrder!==null&&(m=t-c.supersetOrder);let f=m,g=!1;for(;f<o.exercises.length&&(c.supersetId?o.exercises[f].supersetId===c.supersetId:f===m);){if(o.exercises[f].sessionStatus==="pending"){i=f,g=!0;break}f++}if(!g)this.currentBlockRound.set(p),u=!1;else return{nextExIdx:i,nextSetIdx:s,blockChanged:a,isEndOfAllPending:l,roundIncremented:u}}a=!0,this.currentBlockRound.set(1),u=!1;let d=t+1;c.supersetId&&c.supersetOrder!==null&&(d=t-c.supersetOrder+(c.supersetSize||1)),i=-1;for(let m=d;m<o.exercises.length;m++){let f=o.exercises[m];if(f.sessionStatus==="pending"){if(!f.supersetId||f.supersetOrder===0){i=m;break}let g=m-(f.supersetOrder||0);if(g>=0&&o.exercises[g].sessionStatus==="pending"&&o.exercises[g].supersetId===f.supersetId){i=g;break}}}}else s++;return(i===-1||i>=o.exercises.length||i!==-1&&o.exercises[i].sessionStatus!=="pending")&&(l=!0,i=-1),{nextExIdx:i,nextSetIdx:s,blockChanged:a,isEndOfAllPending:l,roundIncremented:u}}getUnfinishedExercises(){let t=this.routine();return t?t.exercises.filter((e,o)=>!this.isExerciseFullyLogged(e.exerciseId,o,e.id)):[]}getFinishedExercises(){let t=this.routine(),e=this.currentWorkoutLogExercises();return t?t.exercises.filter((o,n)=>{let i=e.find(s=>s.exerciseId===o.exerciseId&&t.exercises[n].id===o.id);return i&&i.sets.length>=o.sets.length}):[]}navigateToNextStepInWorkout(t,e,o=!1){return j(this,null,function*(){let n=t.exerciseData,i=this.isExerciseFullyLogged(n.exerciseId,t.exerciseIndex,n.id);if(this.isPerformingDeferredExercise&&n.id===this.lastActivatedDeferredExerciseId&&i){console.log("navigateToNextStepInWorkout: Completed an explicitly chosen deferred/skipped exercise. Re-evaluating all remaining."),this.isPerformingDeferredExercise=!1,this.lastActivatedDeferredExerciseId=null,this.exercisesProposedThisCycle={doLater:!1,skipped:!1},yield this.tryProceedToDeferredExercisesOrFinish(e);return}let s=this.checkIfLatestSetOfRound();if(this.getUnfinishedOrDeferredExercises(e).length>0&&s&&this.currentBlockRound()<this.totalBlockRounds()){if(this.currentBlockRound()<this.totalBlockRounds()){this.currentBlockRound.update(F=>F+1);let b=t.exerciseIndex,I=e.exercises[t.exerciseIndex];I.supersetId&&I.supersetOrder!==null&&(b=t.exerciseIndex-I.supersetOrder);let N=!1;for(let F=b;F<e.exercises.length;F++){let B=e.exercises[F];if((I.supersetId?B.supersetId===I.supersetId:F===b)&&B.sessionStatus==="pending"){this.currentExerciseIndex.set(F),this.currentSetIndex.set(0),this.lastPerformanceForCurrentExercise=null,N=!0;break}if(I.supersetId&&B.supersetId!==I.supersetId||!I.supersetId&&F>b)break}if(N){yield this.prepareCurrentSet();return}}let x=-1;for(let b=t.exerciseIndex+1;b<e.exercises.length;b++)if(e.exercises[b].sessionStatus==="pending"&&!this.isExerciseFullyLogged(e.exercises[b].exerciseId,b,e.exercises[b].id)){x=b;break}if(x!==-1){this.currentExerciseIndex.set(x),this.currentSetIndex.set(0),this.currentBlockRound.set(1),this.lastPerformanceForCurrentExercise=null,yield this.prepareCurrentSet();return}let y=yield this.alertService.showConfirmationDialog("End of Round","You have unfinished exercises in this round. What would you like to do?",[{text:"Continue to Next Round",role:"confirm",data:"continue",cssClass:"bg-blue-600 text-white"},{text:"Review Unfinished Exercises",role:"destructive",data:"review",cssClass:"bg-orange-500 text-white"}]);if(y&&y.data==="review"){yield this.jumpToExercise();return}}let{nextExIdx:l,nextSetIdx:u,blockChanged:c,isEndOfAllPending:p,roundIncremented:d}=this.findNextPlayableItemIndices(t.exerciseIndex,t.setIndex,e,o);if(p){console.log("navigateToNextStepInWorkout: No more 'pending' exercises in main sequence. Attempting to proceed to deferred or finish."),this.isPerformingDeferredExercise=!1,this.lastActivatedDeferredExerciseId=null,this.exercisesProposedThisCycle={doLater:!1,skipped:!1},yield this.tryProceedToDeferredExercisesOrFinish(e);return}if(l===-1)return;let m=e.exercises[l];if(m&&n&&m.id===n.id&&console.log("Next exercise is the same as just completed:",m.exerciseName),this.currentWorkoutLogExercises().some(x=>x.exerciseId===m?.exerciseId&&e.exercises.find(y=>y.id===m?.id)&&this.isExerciseFullyLogged(m?.exerciseId,l,m.id))&&!this.checkIfSetIsPartOfRounds()&&(console.log("Next exercise is already logged in currentWorkoutLogExercises:",m?.exerciseName),this.tryProceedToDeferredExercisesOrFinish(e)),this.currentExerciseIndex.set(l),this.currentSetIndex.set(u),t.exerciseIndex!==l&&e.exercises[l].id!==this.lastActivatedDeferredExerciseId&&(this.isPerformingDeferredExercise=!1,this.lastActivatedDeferredExerciseId=null),(c||d||o||t.exerciseIndex!==l)&&(this.lastPerformanceForCurrentExercise=null),c){let x=e.exercises[l];if(!x.supersetId||x.supersetOrder===0)this.totalBlockRounds.set(x.rounds??1);else{let y=e.exercises.find(b=>b.supersetId===x.supersetId&&b.supersetOrder===0);this.totalBlockRounds.set(y?.rounds??1)}}let g=t.setData.restAfterSet;g>0&&!o?this.startRestPeriod(g):(this.playerSubState.set("performing_set"),yield this.prepareCurrentSet())})}startRestPeriod(t,e=!1){if(!this.isTabataMode())if(this.playerSubState.set("resting"),this.restDuration.set(t),gr(this.platformId)&&t>0){let o=this.routine();if(e)this.restTimerMainText.set(this.restTimerMainTextOnPause),this.restTimerNextUpText.set(this.restTimerNextUpTextOnPause);else{this.restTimerMainText.set("RESTING");let n=this.peekNextSetInfo(),i="Next Exercise";if(n&&n.exerciseData&&n.exerciseData.sets){let s=n.type==="warmup",a=s?this.getWarmupSetNumberForDisplay(n.exerciseData,n.setIndex):this.getWorkingSetNumberForDisplay(n.exerciseData,n.setIndex),l=s?this.getTotalWarmupSetsForExercise(n.exerciseData):this.getWorkingSetCountForExercise(n.exerciseData),u=n.exerciseData.exerciseName||"Exercise",c="";if(o){let p=n.exerciseData,d=p.rounds??0;if(p.supersetId&&p.supersetOrder!==null){let m=o.exercises.find(f=>f.supersetId===p.supersetId&&f.supersetOrder===0);m&&(d=m.rounds??1)}d>=1&&p.supersetSize!==void 0&&p.supersetSize!==null&&p.supersetSize>0&&(c=` (Round ${this.currentBlockRound()}/${d})`)}i=`${s?"Warm-up ":""}Set ${a}/${l} of ${u}${c}`}this.restTimerNextUpText.set(i)}this.playerSubState.set("resting"),this.restDuration.set(t),this.isRestTimerVisible.set(!0),this.updateRestTimerDisplay(t)}else this.isRestTimerVisible.set(!1),this.playerSubState.set("performing_set"),this.prepareCurrentSet()}peekNextSetInfo(){let t=this.routine(),e=this.currentExerciseIndex(),o=this.currentSetIndex();if(t&&t.exercises[e]&&t.exercises[e].sets[o]){let n=t.exercises[e],i=t.exercises[e].sets[o];return{exerciseIndex:e,setIndex:o,exerciseData:n,setData:i,type:i.type??"standard",isCompleted:!1}}return null}handleRestTimerFinished(){console.log("Rest timer finished."),this.isRestTimerVisible.set(!1),this.prepareCurrentSet()}handleRestTimerSkipped(){console.log("Rest timer skipped."),this.isRestTimerVisible.set(!1),this.toastService.clearAll(),this.toastService.info("Rest skipped.",2e3),this.playerSubState.set("performing_set"),this.prepareCurrentSet()}getDisabled(){return this.timedSetTimerState()==="running"||this.sessionState()==="paused"||this.playerSubState()==="preset_countdown"||this.playerSubState()==="resting"}handleMainAction(){if(this.sessionState()==="paused"){this.toastService.warning("Session is paused. Please resume to continue.",3e3,"Paused");return}switch(this.playerSubState()){case"performing_set":{this.completeAndLogCurrentSet();break}case"preset_countdown":this.skipPresetTimer();break;case"resting":this.skipRest();break}}shouldRunPresetTimerForCurrentSet=Et(()=>{let t=this.appSettingsService.enablePresetTimer(),e=this.appSettingsService.presetTimerDurationSeconds();if(!t||e<=0)return!1;let o=this.routine(),n=this.currentExerciseIndex(),i=this.currentSetIndex();if(!o||!o.exercises[n]||!o.exercises[n].sets[i])return!1;let s=n===0&&i===0&&this.currentBlockRound()===1,a=1/0;if(i>0)a=o.exercises[n].sets[i-1].restAfterSet;else if(n>0){let l=o.exercises[n-1];a=l.sets[l.sets.length-1].restAfterSet}return s||a===0});getIncompleteExercises(){let t=this.routine(),e=this.currentWorkoutLogExercises();return t?t.exercises.filter(o=>{if(o.sessionStatus!=="pending")return!1;let n=e.find(i=>i.exerciseId===o.exerciseId);return n?n.sets.length<o.sets.length:!0}):[]}jumpToExercise(){return j(this,null,function*(){if(this.sessionState()==="paused"){this.toastService.warning("Session is paused. Resume to jump to an exercise.",3e3,"Paused"),this.closeWorkoutMenu();return}let t=this.routine();if(!t||!t.exercises||t.exercises.length===0){this.toastService.error("No exercises available to jump to.",0,"Error"),this.closeWorkoutMenu();return}let e=t.exercises.map((i,s)=>lr(Xt({},i),{originalIndex:s,isFullyLogged:this.isExerciseFullyLogged(i.exerciseId,s,i.id)})).filter(i=>!i.isFullyLogged||i.sessionStatus==="pending"||i.sessionStatus==="do_later"||i.sessionStatus==="skipped");if(e.length===0){this.toastService.info("All exercises are completed or no suitable exercises to jump to.",3e3),this.closeWorkoutMenu();return}let o=e.map(i=>{let s="",a="";i.id===this.activeSetInfo()?.exerciseData.id&&i.sessionStatus==="pending"&&!i.isFullyLogged?s=" (Current)":i.isFullyLogged&&i.sessionStatus!=="skipped"&&i.sessionStatus!=="do_later"?s=" (Completed - Restart?)":i.sessionStatus==="skipped"?s=" (Skipped)":i.sessionStatus==="do_later"&&(s=" (Do Later)");let l="";i.supersetId&&i.supersetOrder!==null&&(l=" border-2 border-primary bg-primary/50 text-white");let u="bg-gray-500 dark:bg-gray-700 dark:text-gray-100 hover:bg-gray-300 hover:text-gray-500 hover:dark:bg-gray-300 hover:dark:text-gray-500";switch(i.sessionStatus){case"pending":u=s.includes("Current")?"bg-blue-600 text-white":u;break;case"do_later":u="bg-orange-500 hover:bg-orange-600 text-white";break;case"skipped":u="bg-yellow-500 hover:bg-yellow-600 text-black";break;default:u="bg-gray-500 dark:bg-gray-700 dark:text-gray-100 hover:bg-gray-300 hover:text-gray-500 hover:dark:bg-gray-300 hover:dark:text-gray-500";break}l&&!s.includes("Current")?u=l:s.includes("Current")&&(u=u+" bg-blue-600 text-white"+(l?" border-2 border-primary":""));let c="",p;if(i.supersetId){let m=t.exercises.filter(g=>g.supersetId===i.supersetId).findIndex(g=>g.id===i.id),f=1;if(i.rounds&&i.rounds>1){let g=this.currentWorkoutLogExercises().find(x=>x.exerciseId===i.exerciseId&&x.id===i.id);g&&typeof g.rounds=="number"&&g.rounds>1?f=g.rounds:f=this.currentBlockRound?this.currentBlockRound():1}m!==-1&&(c=` [SuperSet #${m+1}${i.rounds&&i.rounds>1?`, Round ${f}/${i.rounds}`:""}]`),p=`${i.supersetId}-round${f}`}return p&&(u+=` superset-group-${p}`),{text:`${i.exerciseName}${s}${c}`,role:"confirm",data:i.originalIndex,cssClass:u,groupKey:p}});o.push({text:"Cancel",role:"cancel",data:"cancel_jump"}),this.closeWorkoutMenu();let n=yield this.alertService.showConfirmationDialog("Jump to Exercise","Select an exercise to start or continue:",o);if(n&&n.data!=="cancel_jump"&&typeof n.data=="number"){let i=n.data,s=t.exercises[i];if(!s){this.toastService.error("Selected exercise not found.",0,"Error");return}console.log(`Jumping to exercise: ${s.exerciseName} at index ${i}`),this.stopOngoingTimers();let a=JSON.parse(JSON.stringify(t)),l=a.exercises[i],u=l.sessionStatus==="do_later"||l.sessionStatus==="skipped";if(l.sessionStatus="pending",this.routine.set(a),this.currentExerciseIndex.set(i),this.currentSetIndex.set(this.findFirstUnloggedSetIndex(s.exerciseId,s.sets.map(c=>c.id))||0),this.currentBlockRound.set(1),!s.supersetId||s.supersetOrder===0)this.totalBlockRounds.set(s.rounds??1);else{let c=a.exercises.find(p=>p.supersetId===s.supersetId&&p.supersetOrder===0);this.totalBlockRounds.set(c?.rounds??1)}this.lastPerformanceForCurrentExercise=null,this.isPerformingDeferredExercise=u,this.lastActivatedDeferredExerciseId=u?s.id:null,this.playerSubState.set("performing_set"),yield this.prepareCurrentSet(),this.toastService.info(`Jumped to ${s.exerciseName}.`,2500)}})}stopOngoingTimers(){this.isRestTimerVisible()&&this.isRestTimerVisible.set(!1),this.playerSubState(),this.playerSubState()==="preset_countdown"&&this.presetTimerSub&&(this.presetTimerSub.unsubscribe(),this.presetTimerSub=void 0,this.presetTimerCountdownDisplay.set(null)),this.timedSetTimerState()!=="idle"&&this.timedSetIntervalSub&&this.resetTimedSet()}loadAvailableExercises(){this.exerciseService.getExercises().pipe(hr(1)).subscribe(t=>{this.availableExercises=t})}openExerciseSelectionModal(){if(this.sessionState()==="paused"){this.toastService.warning("Session is paused. Resume to add exercise.",3e3,"Paused");return}this.availableExercises.length===0&&this.loadAvailableExercises(),this.modalSearchTerm.set(""),this.isExerciseModalOpen.set(!0),this.closeWorkoutMenu(),setTimeout(()=>this.myExerciseInput.nativeElement?.focus())}closeExerciseSelectionModal(){this.isExerciseModalOpen.set(!1)}onModalSearchTermChange(t){let e=t.target;this.modalSearchTerm.set(e.value)}isExerciseDetailModalOpen=Ee(!1);isSimpleModalOpen=Ee(!1);exerciseDetailsId="";exerciseDetailsName="";performAction(){console.log("Action performed from modal footer!"),this.isExerciseDetailModalOpen.set(!1)}openModal(t){this.exerciseDetailsId=t.exerciseId,this.exerciseDetailsName=t.exerciseName||"Exercise details",this.isSimpleModalOpen.set(!0)}showCompletedSetsForExerciseInfo=Ee(!1);toggleCompletedSetsForExerciseInfo(){this.showCompletedSetsForExerciseInfo.update(t=>!t)}showCompletedSetsForDayInfo=Ee(!1);toggleCompletedSetsForDayInfo(){this.showCompletedSetsForDayInfo.update(t=>!t)}setupTabataMode(t,e=0,o){let n=[];this.startOrResumeTimedSet();let i=[];n.push({type:"prepare",duration:10,exerciseName:"Get Ready"}),i.push([0,0]);let s=t.exercises.length;t.exercises.forEach((u,c)=>{let p=u.sets.length;u.sets.forEach((d,m)=>{n.push({type:"work",duration:d.duration||5,exerciseName:u.exerciseName}),i.push([c,m]);let f=c===s-1,g=m===p-1;d.restAfterSet>0&&!(f&&g)&&(n.push({type:"rest",duration:d.restAfterSet||20,exerciseName:"Rest"}),i.push([c,m]))})}),this.tabataIntervalMap=i;let a=n.length,l=n.map((u,c)=>lr(Xt({},u),{totalIntervals:a,currentIntervalNumber:c+1}));this.tabataIntervals.set(l),this.sessionState.set("playing"),this.routine.set(t),this.isTabataMode.set(!0),this.setPlayerStateFromTabataIndex(e),o!==void 0&&o>0?this.startCurrentTabataInterval(o):this.startCurrentTabataInterval()}startCurrentTabataInterval(t){if(this.tabataTimerSub&&this.tabataTimerSub.unsubscribe(),this.sessionState()==="paused")return;let e=this.currentTabataInterval();if(!e){this.sessionState.set("end"),this.finishWorkoutAndReportStatus();return}let o=t!==void 0?t:e.duration;this.tabataTimeRemaining.set(o),this.tabataTimerSub=tp(0,1e3).pipe(hr(e.duration+1),Yn(this.destroy$)).subscribe({next:()=>{this.tabataTimeRemaining.update(n=>n-1)},complete:()=>{this.sessionState()==="playing"&&this.nextTabataInterval()}})}nextTabataInterval(){let t=this.currentTabataIntervalIndex()+1;t<=this.tabataIntervals().length&&(t===this.tabataIntervals().length?(this.completeAndLogCurrentSet(),this.tabataTimeRemaining.set(0),this.tabataTimerSub&&this.tabataTimerSub.unsubscribe(),this.sessionState.set("end")):(this.currentTabataInterval()!==null&&this.currentTabataInterval()?.type!=="prepare"&&this.currentTabataInterval()?.type!=="rest"&&this.completeAndLogCurrentSet(),this.currentTabataIntervalIndex.set(t),this.startCurrentTabataInterval()))}previousTabataInterval(){let t=this.currentTabataIntervalIndex()-1;t>=0&&(this.currentTabataIntervalIndex.set(t),this.startCurrentTabataInterval())}toggleTabataPause(){this.sessionState()==="playing"?(this.sessionState.set("paused"),this.tabataTimerSub&&this.tabataTimerSub.unsubscribe(),this.timerSub&&this.timerSub.unsubscribe(),this.sessionTimerElapsedSecondsBeforePause+=Math.floor((Date.now()-this.workoutStartTime)/1e3)):this.sessionState()==="paused"&&(this.sessionState.set("playing"),this.workoutStartTime=Date.now(),this.startSessionTimer(),this.startCurrentTabataInterval())}getCurrentSetInfo(){let t=this.routine(),e=this.currentExerciseIndex(),o=this.currentSetIndex();if(t&&t.exercises[e]&&t.exercises[e].sets[o]){let n=t.exercises[e],i=t.exercises[e].sets[o],a=this.currentWorkoutLogExercises().find(l=>l.exerciseId===n.exerciseId)?.sets.find(l=>l.plannedSetId===i.id);return{exerciseIndex:e,setIndex:o,exerciseData:n,setData:i,type:i.type??"standard",baseExerciseInfo:void 0,isCompleted:!!a,actualReps:a?.repsAchieved,actualWeight:a?.weightUsed,actualDuration:a?.durationPerformed,notes:a?.notes}}return null}setPlayerStateFromTabataIndex(t){this.currentTabataIntervalIndex.set(t);let e=this.tabataIntervalMap[t];if(e){let[o,n]=e;this.currentExerciseIndex.set(o),this.currentSetIndex.set(n),console.log(`Tabata Sync: Interval ${t} maps to Exercise ${o}, Set ${n}`)}else{let o=this.tabataIntervalMap[this.tabataIntervalMap.length-1];o&&(this.currentExerciseIndex.set(o[0]),this.currentSetIndex.set(o[1]))}}static \u0275fac=function(e){return new(e||r)};static \u0275cmp=yo({type:r,selectors:[["app-workout-player"]],viewQuery:function(e,o){if(e&1&&(Po(yM,5),Po(vM,5)),e&2){let n;Ao(n=Do())&&(o.myExerciseInput=n.first),Ao(n=Do())&&(o.intervalListItems=n)}},hostBindings:function(e,o){e&1&&ne("beforeunload",function(i){return o.unloadNotification(i)},_d)},features:[kd([en])],decls:8,vars:10,consts:[["loadingOrError",""],["standardPlayer",""],["intervalListItem",""],["workoutCompleteOrError",""],["routineNotFound",""],["loadingBaseExIcon",""],["exerciseSearchFied",""],["style","height: 60px; position: fixed; top: 0; left: 0; right: 0; z-index: 50;",4,"ngIf","ngIfElse"],[3,"timerFinished","timerSkipped","isVisible","durationSeconds","mainText","nextUpText"],["class","fixed inset-0 z-50 bg-black/70 backdrop-blur-md flex flex-col items-center justify-center p-4 space-y-2 sm:space-y-3","style","padding-top: env(safe-area-inset-top); padding-bottom: env(safe-area-inset-bottom);",4,"ngIf"],["style","z-index: 100","class","fixed inset-0 bg-gray-900/70 dark:bg-black/80 backdrop-blur-md flex items-center justify-center p-4 transition-opacity duration-300 ease-in-out",4,"ngIf"],["class","fixed inset-0 bg-gray-700 bg-opacity-75 transition-opacity overflow-y-auto h-full w-full z-[70] flex items-center justify-center p-4 backdrop-blur-sm",3,"click",4,"ngIf"],[3,"isOpen","modalTitle","isOpenChange",4,"ngIf"],[2,"height","60px","position","fixed","top","0","left","0","right","0","z-index","50"],["class","tabata-player",4,"ngIf","ngIfElse"],[1,"tabata-player"],[4,"ngIf"],[1,"fixed","inset-0","transition-all","duration-700","ease-in-out",3,"ngClass"],[1,"relative","z-10","flex","flex-col","text-white","px-4","font-sans"],[1,"flex","justify-between","items-center","w-full","px-4","flex-shrink-0","mt-2"],[1,"text-sm","font-medium","bg-black/20","px-3","py-1","rounded-full"],[1,"flex","items-center","space-x-2"],[1,"bg-black/20","rounded-full","hover:bg-black/40","transition",3,"click"],["xmlns","http://www.w3.org/2000/svg","class","h-12 w-12","fill","none","viewBox","0 0 24 24","stroke","currentColor",4,"ngIf"],[1,"flex","flex-col","items-center","justify-center","text-center"],[1,"text-[250px]","md:text-[450px]","font-bold","tabular-nums","leading-none","tracking-tighter","text-shadow-lg"],[1,"text-2xl","md:text-3xl","font-semibold","capitalize","mt-2","text-shadow"],[1,"flex-shrink-0","max-h-48","overflow-y-auto","mb-2","scrollbar-hide","px-2"],[1,"space-y-0"],["class","text-lg px-2 py-0 transition-all duration-300 ease-in-out",4,"ngFor","ngForOf"],[1,"flex-shrink-0","flex","justify-between","items-center","w-full"],[1,"p-2","disabled:opacity-30","hover:scale-110","active:scale-95","transition-transform",3,"click","disabled"],["xmlns","http://www.w3.org/2000/svg","fill","none","viewBox","0 0 24 24","stroke","currentColor",1,"h-10","w-10"],["stroke-linecap","round","stroke-linejoin","round","stroke-width","2","d","M11 19l-7-7 7-7m8 14l-7-7 7-7"],[1,"text-2xl","font-semibold","bg-black/20","px-4","py-2","rounded-full","tabular-nums"],["stroke-linecap","round","stroke-linejoin","round","stroke-width","2","d","M13 5l7 7-7 7M5 5l7 7-7 7"],["xmlns","http://www.w3.org/2000/svg","fill","none","viewBox","0 0 24 24","stroke","currentColor",1,"h-12","w-12"],["stroke-linecap","round","stroke-linejoin","round","stroke-width","2","d","M10 9v6m4-6v6"],["stroke-linecap","round","stroke-linejoin","round","stroke-width","2","d","M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z"],[1,"text-lg","px-2","py-0","transition-all","duration-300","ease-in-out"],[1,"rounded-md","flex","items-center","p-2","transition-all","duration-200","ease-in-out",3,"ngClass"],[1,"font-mono","w-8","text-right","mr-2"],[1,"capitalize","font-medium"],["class","ml-2 font-light truncate",4,"ngIf"],[1,"ml-2","font-light","truncate"],["class","workout-player-container bg-gray-50 dark:bg-gray-950 flex flex-col",4,"ngIf","ngIfElse"],[1,"workout-player-container","bg-gray-50","dark:bg-gray-950","flex","flex-col"],["class","fixed inset-0 z-[60] bg-black/70 backdrop-blur-sm flex flex-col items-center justify-center space-y-6 p-4",4,"ngIf"],[1,"fixed","top-0","left-0","right-0","z-30","bg-gray-50","dark:bg-gray-950","border-b","border-gray-200","dark:border-gray-800","p-2","flex","items-center","justify-between","h-14"],[1,"text-gray-600","dark:text-gray-300","hover:text-primary","dark:hover:text-primary-light","p-2","-ml-1",3,"click"],["fill","none","stroke","currentColor","viewBox","0 0 24 24","xmlns","http://www.w3.org/2000/svg",1,"w-6","h-6"],["stroke-linecap","round","stroke-linejoin","round","stroke-width","2","d","M15 19l-7-7 7-7"],[1,"text-center"],[1,"text-m","font-semibold","text-gray-700","dark:text-gray-300","uppercase","tracking-wider","truncate","max-w-[calc(100vw-120px)]",3,"title"],[1,"text-xs","text-gray-500","dark:text-gray-400"],[1,"text-gray-600","dark:text-gray-300","hover:text-primary","dark:hover:text-primary-light","p-2","-mr-1","disabled:opacity-50",3,"click","disabled"],["xmlns","http://www.w3.org/2000/svg","fill","none","viewBox","0 0 24 24","stroke","currentColor","stroke-width","2",1,"h-6","w-6"],["stroke-linecap","round","stroke-linejoin","round","d","M12 5v.01M12 12v.01M12 19v.01M12 6a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2z"],[1,"flex-grow","overflow-y-auto","pt-10","your-main-container"],["class","p-4 max-w-md mx-auto",4,"ngIf","ngIfElse"],["class","fixed bottom-[76px] left-0 right-0 z-10 bg-gray-100 dark:bg-gray-900 border-t border-gray-200 dark:border-gray-700 p-2 text-center h-auto min-h-[60px] flex flex-col justify-center shadow-[0_-1px_3px_rgba(0,0,0,0.07)]",4,"ngIf"],[1,"fixed","inset-0","z-[60]","bg-black/70","backdrop-blur-sm","flex","flex-col","items-center","justify-center","space-y-6","p-4"],[1,"text-4xl","font-bold","text-white"],[1,"text-lg","text-gray-200"],[1,"bg-green-500","hover:bg-green-600","text-white","font-bold","py-3","px-8","rounded-lg","text-xl","shadow-lg","w-full","max-w-xs",3,"click"],[1,"text-m","text-red-300","hover:text-red-100","font-medium","py-2","px-4","rounded-md","border","border-red-300","hover:bg-red-700/30","w-full","max-w-xs","mt-2",3,"click"],[1,"p-4","max-w-md","mx-auto"],[1,"flex","text-center","justify-center","items-center","mb-1","hover:cursor-pointer",3,"click","title"],["class","mr-2 h-8 w-8 flex-shrink-0",4,"ngIf","ngIfElse"],[1,"text-2xl","font-bold","text-gray-800","dark:text-gray-100","truncate",3,"title"],[1,"text-center","mb-2"],[1,"text-m","text-gray-500","dark:text-gray-400"],["class","text-blue-500 dark:text-blue-400",4,"ngIf"],["class","ml-2",4,"ngIf"],["class","ml-2 text-purple-500 dark:text-purple-400 italic",4,"ngIf"],["class","text-center mb-3",4,"ngIf"],["class","text-center mb-6 animate-fadeIn",4,"ngIf"],["class","left-0 right-0 z-20 p-3",4,"ngIf"],["class","text-wrap text-sm text-center text-gray-800 dark:text-gray-100 px-2 text-s",3,"title",4,"ngIf"],[1,"mr-2","h-8","w-8","flex-shrink-0"],["class","w-full h-full object-contain",3,"src","alt","ngClass",4,"ngIf"],[1,"w-full","h-full","object-contain",3,"src","alt","ngClass"],[1,"w-8","h-8","bg-gray-200","dark:bg-gray-700","rounded-md","animate-pulse","mr-2","flex-shrink-0"],[1,"text-blue-500","dark:text-blue-400"],[1,"ml-2"],[1,"ml-2","text-purple-500","dark:text-purple-400","italic"],[1,"text-center","mb-3"],["class","px-2 py-0.5 text-xs font-semibold text-red-700 bg-red-100 dark:bg-red-900 dark:text-red-200 rounded-full",4,"ngIf"],["class","px-2 py-0.5 text-xs font-semibold text-yellow-700 bg-yellow-100 dark:bg-yellow-800 dark:text-yellow-200 rounded-full",4,"ngIf"],[1,"px-2","py-0.5","text-xs","font-semibold","text-red-700","bg-red-100","dark:bg-red-900","dark:text-red-200","rounded-full"],[1,"px-2","py-0.5","text-xs","font-semibold","text-yellow-700","bg-yellow-100","dark:bg-yellow-800","dark:text-yellow-200","rounded-full"],[1,"text-center","mb-6","animate-fadeIn"],[1,"text-xl","font-semibold","text-blue-600","dark:text-blue-400"],[1,"text-4xl","sm:text-5xl","font-bold","text-blue-500","dark:text-blue-300","my-3"],[1,"text-m","text-gray-600","dark:text-gray-400"],[1,"mt-4","text-xs","text-primary","dark:text-primary-light","hover:underline",3,"click"],[1,"space-y-4","mb-2",3,"formGroup"],[1,"mt-3"],["for","setNotes",1,"block","text-xs","font-medium","text-gray-500","dark:text-gray-400","uppercase","tracking-wider","text-center","mb-1"],["id","setNotes","formControlName","setNotes","rows","2","placeholder","e.g., felt good, struggled on last rep...",1,"w-full","p-2","border","border-gray-300","dark:border-gray-600","rounded-md","shadow-sm","focus:ring-primary","focus:border-primary","dark:bg-gray-800","dark:text-gray-200","text-m","disabled:opacity-60",3,"disabled"],[1,"block","text-xs","font-medium","text-gray-500","dark:text-gray-400","uppercase","tracking-wider","text-center","mb-1"],[1,"flex","items-center","justify-center","space-x-2"],["type","button","appPress","",1,"p-3","bg-gray-200","dark:bg-gray-700","rounded-lg","text-gray-700","dark:text-gray-200","hover:bg-gray-300","dark:hover:bg-gray-600","disabled:opacity-50",3,"shortPress","longPress","pressRelease","disabled"],["fill","none","stroke","currentColor","viewBox","0 0 24 24",1,"w-5","h-5"],["stroke-linecap","round","stroke-linejoin","round","stroke-width","2","d","M20 12H4"],[1,"w-28","text-center","text-3xl","font-bold","bg-transparent","p-0","text-gray-800","dark:text-gray-100","cursor-pointer","hover:bg-gray-100","dark:hover:bg-gray-800","rounded-md","py-1",3,"click"],["type","number","formControlName","actualWeight",1,"hidden"],[1,"text-lg","text-gray-700","dark:text-gray-200","-ml-1"],["stroke-linecap","round","stroke-linejoin","round","stroke-width","2","d","M12 4v16m8-8H4"],["type","number","formControlName","actualReps","readonly","","placeholder","0",1,"w-28","text-center","text-3xl","font-bold","bg-transparent","border-none","p-0","focus:ring-0","text-gray-800","dark:text-gray-100"],["for","timedSetDisplay",1,"block","text-xs","font-medium","text-gray-500","dark:text-gray-400","uppercase","tracking-wider","text-center","mb-2"],["id","timedSetDisplay",1,"mt-1","block","w-full","p-3","border-none","text-3xl","font-bold","text-center","bg-transparent","focus:ring-0",3,"ngClass"],["type","number","formControlName","actualDuration",1,"hidden"],[1,"flex","space-x-2","mt-2","justify-center"],["type","button",1,"flex-grow","max-w-[150px]","text-white","font-medium","p-3","rounded-full","transition-colors","text-m","disabled:opacity-50",3,"click","ngClass"],["type","button","class","flex-grow max-w-[150px] bg-gray-300 hover:bg-gray-400 dark:bg-gray-700 dark:hover:bg-gray-500 text-gray-800 dark:text-gray-200 font-medium py-2 px-3  rounded-full transition-colors text-m disabled:opacity-50",3,"click",4,"ngIf"],["type","button",1,"flex-grow","max-w-[150px]","bg-gray-300","hover:bg-gray-400","dark:bg-gray-700","dark:hover:bg-gray-500","text-gray-800","dark:text-gray-200","font-medium","py-2","px-3","rounded-full","transition-colors","text-m","disabled:opacity-50",3,"click"],[1,"left-0","right-0","z-20","p-3"],[1,"max-w-md","mx-auto"],[1,"w-full","font-bold","py-3.5","px-4","rounded-full","shadow-md","text-lg","transition-colors","focus:outline-none","focus:ring-2","disabled:opacity-70","text-white","transition-colors","duration-150",3,"click","disabled","ngClass"],[1,"text-wrap","text-sm","text-center","text-gray-800","dark:text-gray-100","px-2","text-s",3,"title"],[1,"font-medium"],[1,"text-center","py-10","pt-16"],[1,"text-2xl","font-semibold","text-gray-700","dark:text-gray-200"],["class","text-gray-600 dark:text-gray-400 mt-2",4,"ngIf"],["class","mt-6 bg-primary hover:bg-primary-dark text-white font-bold py-3 px-6 rounded-lg shadow-md text-lg transition-colors",3,"click",4,"ngIf"],["routerLink","/workout","class","mt-1 w-full max-w-xs bg-gray-500 hover:bg-gray-600 text-white font-semibold py-2 px-6 rounded-lg text-md shadow-md disabled:opacity-60 disabled:cursor-not-allowed",4,"ngIf"],[1,"w-full","max-w-xs","bg-purple-500","hover:bg-purple-600","text-white","font-semibold","py-2","px-6","rounded-lg","text-md","shadow-md","disabled:opacity-60","disabled:cursor-not-allowed","ml-1","mt-1",3,"click","disabled"],[1,"text-gray-600","dark:text-gray-400","mt-2"],[1,"mt-6","bg-primary","hover:bg-primary-dark","text-white","font-bold","py-3","px-6","rounded-lg","shadow-md","text-lg","transition-colors",3,"click"],["routerLink","/workout",1,"mt-1","w-full","max-w-xs","bg-gray-500","hover:bg-gray-600","text-white","font-semibold","py-2","px-6","rounded-lg","text-md","shadow-md","disabled:opacity-60","disabled:cursor-not-allowed"],[1,"fixed","bottom-[76px]","left-0","right-0","z-10","bg-gray-100","dark:bg-gray-900","border-t","border-gray-200","dark:border-gray-700","p-2","text-center","h-auto","min-h-[60px]","flex","flex-col","justify-center","shadow-[0_-1px_3px_rgba(0,0,0,0.07)]"],[1,"max-w-md","mx-auto","w-full"],[1,"text-xs","font-semibold","text-gray-500","dark:text-gray-400","uppercase","tracking-wider"],[1,"text-base","font-medium","text-gray-800","dark:text-gray-100","truncate","px-4",3,"title"],[1,"text-m","text-gray-600","dark:text-gray-300"],[1,"ml-2","text-xs","text-primary","dark:text-primary-light","hover:underline",3,"click"],[1,"text-xl","font-bold","text-blue-600","dark:text-blue-300"],[1,"mt-0.5","text-xs","text-primary","dark:text-primary-light","hover:underline",3,"click"],[1,"fixed","top-0","left-0","right-0","z-30","bg-gray-50","dark:bg-gray-950","border-b","border-gray-200","dark:border-gray-800","p-4","flex","items-center","justify-between","h-16"],[1,"text-gray-600","dark:text-gray-300","hover:text-primary","dark:hover:text-primary-light","p-2","-ml-2",3,"click"],[1,"text-m","font-semibold","text-gray-700","dark:text-gray-300","uppercase","tracking-wider"],[1,"w-6"],[1,"text-center","py-20","pt-24"],[1,"text-2xl","font-semibold","text-red-600","dark:text-red-400","mb-4"],[1,"text-gray-600","dark:text-gray-400"],["routerLink","/workout",1,"text-gray-600","dark:text-gray-300","hover:text-primary","dark:hover:text-primary-light","p-2","-ml-1"],[1,"fixed","inset-0","z-50","bg-black/70","backdrop-blur-md","flex","flex-col","items-center","justify-center","p-4","space-y-2","sm:space-y-3",2,"padding-top","env(safe-area-inset-top)","padding-bottom","env(safe-area-inset-bottom)"],[1,"flex","columns-3"],[1,"p-1.5","rounded-full","text-gray-500","hover:text-gray-700","dark:text-gray-400","dark:hover:text-gray-200","hover:bg-gray-100","dark:hover:bg-gray-700/70","focus:outline-none","transition-colors",3,"click"],["_ngcontent-ng-c2442506092","","xmlns","http://www.w3.org/2000/svg","fill","none","viewBox","0 0 24 24","stroke","currentColor","stroke-width","2.5",1,"h-6","w-6"],["_ngcontent-ng-c2442506092","","stroke-linecap","round","stroke-linejoin","round","d","M6 18L18 6M6 6l12 12"],[1,"text-2xl","sm:text-3xl","font-bold","text-white","mb-2"],[1,"flex","justify-center","items-center","w-full","max-w-xs","bg-yellow-500","hover:bg-yellow-600","text-white","font-bold","py-2.5","px-6","rounded-lg","text-lg","shadow-lg","disabled:opacity-60","disabled:cursor-not-allowed",3,"click","disabled"],["viewBox","0 0 20 20","xmlns","http://www.w3.org/2000/svg",1,"h-8","w-8","text-white","mr-2"],["cx","10","cy","10","r","8","fill","none","stroke","currentColor","stroke-width","2"],["x","7","y","6","width","2","height","9","rx","4","ry","4","fill","currentColor"],["x","11","y","6","width","2","height","9","rx","4","ry","4","fill","currentColor"],[1,"flex","justify-center","items-center","w-full","max-w-xs","bg-fuchsia-500","hover:bg-fuchsia-600","text-white","font-semibold","py-2","px-6","rounded-lg","text-md","shadow-md","disabled:opacity-60","disabled:cursor-not-allowed",3,"click","disabled"],["xmlns","http://www.w3.org/2000/svg","viewBox","0 0 400 500","width","55","height","20","fill","white"],["d","M96 64c0-17.7 14.3-32 32-32l32 0c17.7 0 32 14.3 32 32l0 160 0 64 0 160c0 17.7-14.3 32-32 32l-32 0c-17.7 0-32-14.3-32-32l0-64-32 0c-17.7 0-32-14.3-32-32l0-64c-17.7 0-32-14.3-32-32s14.3-32 32-32l0-64c0-17.7 14.3-32 32-32l32 0 0-64zm448 0l0 64 32 0c17.7 0 32 14.3 32 32l0 64c17.7 0 32 14.3 32 32s-14.3 32-32 32l0 64c0 17.7-14.3 32-32 32l-32 0 0 64c0 17.7-14.3 32-32 32l-32 0c-17.7 0-32-14.3-32-32l0-160 0-64 0-160c0-17.7 14.3-32 32-32l32 0c17.7 0 32 14.3 32 32zM416 224l0 64-192 0 0-64 192 0z"],[1,"flex","items-center","justify-center","align-center","w-full","max-w-xs","bg-cyan-500","hover:bg-cyan-600","text-white","font-semibold","py-2","px-6","rounded-lg","text-md","shadow-md","disabled:opacity-60","disabled:cursor-not-allowed",3,"click","disabled"],["xmlns","http://www.w3.org/2000/svg","fill","none","viewBox","0 0 24 24","stroke","white","stroke-width","2",1,"h-8","w-8","text-gray-500","dark:text-gray-400"],["stroke-linecap","round","stroke-linejoin","round","d","M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-3 7h3m-3 4h3m-6-4h.01M9 16h.01"],[1,"w-full","items-center","max-w-xs","bg-sky-500","hover:bg-sky-600","text-white","font-semibold","py-2","px-6","rounded-lg","text-md","shadow-md","disabled:opacity-60","disabled:cursor-not-allowed",3,"click","disabled"],["class","text-xs text-white ml-2",4,"ngIf"],[1,"flex","items-center","justify-center","align-center","w-full","max-w-xs","bg-purple-500","hover:bg-purple-600","text-white","font-semibold","py-2","px-6","rounded-lg","text-md","shadow-md","disabled:opacity-60","disabled:cursor-not-allowed",3,"click","disabled"],["version","1.1","id","Capa_1","xmlns","http://www.w3.org/2000/svg","stroke","currentColor","stroke-width","1.5",0,"xmlns","xlink","http://www.w3.org/1999/xlink","viewBox","-3 0 60 60",0,"xml","space","preserve",1,"w-8","h-8","transition-all",2,"enable-background","new 0 0 49.495 49.495"],["d",`M1.434,28.084c1.527,0.188,3.644,0.847,3.644,1.587c0,0.207,0.128,0.393,0.321,0.467c0.189,0.073,0.412,0.021,0.551-0.133
			c0.026-0.027,2.688-2.917,7.878-2.917c5.405,0,8.5,2.556,8.5,3.25c0,0.241,0.172,0.447,0.408,0.491
			c0.24,0.044,0.471-0.087,0.559-0.312c0.019-0.051,1.904-4.85,4.922-4.85c0.01,0,0.021,0,0.027,0
			c1.557,0.018,4.362,0.042,6.073,2.143c0.193,0.269,0.318,0.438,0.354,0.486c0.16,0.223,0.467,0.271,0.688,0.116
			s0.281-0.456,0.136-0.686c-0.118-0.184-0.243-0.354-0.372-0.518c-1.658-2.314-8.548-12.151-8.548-15.794
			c0-0.194-0.112-0.371-0.288-0.453c-0.175-0.083-0.382-0.056-0.531,0.068c-0.058,0.047-5.736,4.688-10.149,1.041
			c-0.052-0.056-1.274-1.379-0.466-2.437c0.094-0.123,0.124-0.282,0.085-0.432s-0.146-0.272-0.289-0.333
			c-0.008-0.003-0.812-0.354-1.062-1.093c-0.164-0.483-0.062-1.055,0.304-1.7c1.356-2.392,3.701-4.431,3.779-4.506
			c0.012-0.014,1.186-1.341,3.882,0.116c0.351,0.189,0.768,0.409,1.236,0.656c3.612,1.901,10.334,5.439,12.925,9.109
			c0.548,0.773,1.248,1.658,2.062,2.682c3.635,4.578,9.113,11.486,9.43,19.683c-0.25,0.541-1.715,3.412-5.574,5.773
			c-3.948,2.418-11.291,4.786-23.824,2.332c-0.13-0.025-0.272,0.002-0.385,0.082c-0.113,0.079-0.187,0.2-0.206,0.338
			c-0.006,0.039-0.591,3.967-2.71,6.318c-0.185,0.205-0.168,0.521,0.037,0.706c0.096,0.086,0.216,0.128,0.335,0.128
			c0.137,0,0.272-0.056,0.372-0.166c1.867-2.074,2.626-5.123,2.865-6.331c3.566,0.67,6.729,0.956,9.533,0.956
			c16.356-0.001,20.479-9.74,20.523-9.854c0.026-0.064,0.038-0.135,0.036-0.203c-0.276-8.578-5.917-15.683-9.646-20.385
			c-0.806-1.012-1.496-1.887-2.025-2.638c-2.729-3.866-9.592-7.477-13.278-9.417c-0.465-0.245-0.879-0.463-1.228-0.651
			c-3.397-1.837-5.051,0.036-5.063,0.062c-0.102,0.087-2.499,2.169-3.941,4.715c-0.515,0.908-0.643,1.758-0.378,2.525
			c0.237,0.689,0.741,1.144,1.126,1.405c-0.558,1.27,0.255,2.644,0.868,3.285c4.082,3.376,8.941,0.736,10.749-0.476
			c0.651,3.412,4.48,9.436,6.937,13.036c-1.628-0.668-3.354-0.686-4.443-0.695c-2.725-0.035-4.565,2.925-5.363,4.513
			c-1.268-1.495-4.704-3.096-8.974-3.096c-4.277,0-6.947,1.781-8.048,2.708c-0.904-1.229-3.599-1.627-4.225-1.704
			c-0.268-0.035-0.522,0.161-0.557,0.437C0.965,27.799,1.16,28.05,1.434,28.084z`],["d",`M30.738,39.531c1.036,0,2.114-0.15,3.146-0.551c1.934-0.75,3.356-2.25,4.239-4.457c0.104-0.256-0.021-0.547-0.276-0.65
			c-0.256-0.103-0.547,0.021-0.647,0.279c-0.771,1.938-2.013,3.248-3.671,3.895c-3.604,1.402-8.104-0.721-8.146-0.743
			c-0.25-0.119-0.549-0.015-0.668,0.233c-0.12,0.249-0.016,0.547,0.233,0.667C25.093,38.275,27.739,39.531,30.738,39.531z`],[1,"w-full","max-w-xs","bg-blue-500","hover:bg-blue-600","text-white","font-semibold","py-2","px-6","rounded-lg","text-md","shadow-md","disabled:opacity-60","disabled:cursor-not-allowed",3,"click","disabled"],[1,"w-full","max-w-xs","bg-indigo-500","hover:bg-indigo-600","text-white","font-semibold","py-2","px-6","rounded-lg","text-md","shadow-md","disabled:opacity-60","disabled:cursor-not-allowed",3,"click","disabled"],[1,"w-full","max-w-xs","bg-orange-500","hover:bg-orange-600","text-white","font-semibold","py-2","px-6","rounded-lg","text-md","shadow-md","disabled:opacity-60","disabled:cursor-not-allowed",3,"click","disabled"],[1,"w-full","max-w-xs","bg-teal-500","hover:bg-teal-600","text-white","font-semibold","py-2","px-6","rounded-lg","text-md","shadow-md","disabled:opacity-60","disabled:cursor-not-allowed",3,"click","disabled"],[1,"w-full","max-w-xs","text-red-300","hover:text-red-100","font-medium","py-2","px-6","rounded-lg","border","border-red-400","hover:bg-red-700/50","text-md",3,"click"],[1,"text-xs","text-white","ml-2"],[1,"fixed","inset-0","bg-gray-900/70","dark:bg-black/80","backdrop-blur-md","flex","items-center","justify-center","p-4","transition-opacity","duration-300","ease-in-out",2,"z-index","100"],[1,"bg-white","dark:bg-gray-800","rounded-xl","shadow-2xl","w-full","max-w-xl","max-h-[90vh]","flex","flex-col","overflow-hidden","transform","transition-all","duration-300","ease-in-out","scale-95","opacity-0","animate-modal-appear"],[1,"p-5","border-b","border-gray-200","dark:border-gray-700","flex","justify-between","items-center"],[1,"flex","items-center","gap-3"],["xmlns","http://www.w3.org/2000/svg","fill","none","viewBox","0 0 24 24","stroke","currentColor","stroke-width","2",1,"h-7","w-7","text-primary","dark:text-primary-light"],["stroke-linecap","round","stroke-linejoin","round","d","M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"],[1,"text-xl","font-semibold","text-gray-800","dark:text-gray-100"],["xmlns","http://www.w3.org/2000/svg","fill","none","viewBox","0 0 24 24","stroke","currentColor","stroke-width","2.5",1,"h-6","w-6"],["stroke-linecap","round","stroke-linejoin","round","d","M6 18L18 6M6 6l12 12"],["class","p-5 overflow-y-auto space-y-6 flex-grow custom-scrollbar",4,"ngIf"],[1,"p-4","bg-gray-50","dark:bg-gray-800","border-t","border-gray-200","dark:border-gray-700","text-right"],[1,"bg-primary","hover:bg-primary-dark","focus:ring-4","focus:ring-primary-focus","text-white","font-semibold","py-2.5","px-6","rounded-lg","text-sm","transition-colors","shadow-md","hover:shadow-lg",3,"click"],[1,"p-5","overflow-y-auto","space-y-6","flex-grow","custom-scrollbar"],[1,"rounded-lg","border","border-gray-200","dark:border-gray-700/80"],[1,"w-full","flex","items-center","justify-between","p-3","text-left","text-sm","font-medium","text-gray-700","dark:text-gray-300","hover:bg-gray-50","dark:hover:bg-gray-700/50","transition-colors","rounded-t-lg",3,"click"],[1,"flex","items-center","gap-2"],["xmlns","http://www.w3.org/2000/svg","fill","none","viewBox","0 0 24 24","stroke","currentColor","stroke-width","2",1,"h-5","w-5","text-gray-500","dark:text-gray-400"],["xmlns","http://www.w3.org/2000/svg","fill","none","viewBox","0 0 24 24","stroke","currentColor","stroke-width","2",1,"h-5","w-5","transform","transition-transform","duration-200",3,"ngClass"],["stroke-linecap","round","stroke-linejoin","round","d","M19 9l-7 7-7-7"],["class","bg-gray-50 dark:bg-gray-700/30 p-3 border-t border-gray-200 dark:border-gray-700/80 space-y-3 max-h-40 overflow-y-auto custom-scrollbar rounded-b-lg",4,"ngIf"],["class","p-3 text-xs text-center text-gray-500 dark:text-gray-400 border-t border-gray-200 dark:border-gray-700/80 rounded-b-lg",4,"ngIf"],["stroke-linecap","round","stroke-linejoin","round","d","M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"],["class","bg-gray-50 dark:bg-gray-700/30 p-3 border-t border-gray-200 dark:border-gray-700/80 space-y-3 max-h-48 overflow-y-auto custom-scrollbar rounded-b-lg",4,"ngIf"],["class","p-3 bg-blue-50 dark:bg-blue-900/30 border border-blue-200 dark:border-blue-700 rounded-lg text-xs",4,"ngIf"],["class","p-3 bg-gray-50 dark:bg-gray-700/50 border border-gray-200 dark:border-gray-600 rounded-lg text-xs text-center text-gray-500 dark:text-gray-400 italic",4,"ngIf"],["class","p-3 bg-yellow-50 dark:bg-yellow-900/30 border border-yellow-200 dark:border-yellow-700 rounded-lg text-xs",4,"ngIf"],[1,"space-y-4","pt-4","border-t","border-gray-200","dark:border-gray-700"],[1,"text-sm","font-semibold","text-gray-700","dark:text-gray-200"],[1,"grid","grid-cols-1","sm:grid-cols-2","gap-4"],["class","p-3 bg-gray-50 dark:bg-gray-700/80 rounded-lg shadow",4,"ngIf"],["class","mt-4 p-3 bg-gray-100 dark:bg-gray-700/60 rounded-lg text-xs",4,"ngIf"],[1,"bg-gray-50","dark:bg-gray-700/30","p-3","border-t","border-gray-200","dark:border-gray-700/80","space-y-3","max-h-40","overflow-y-auto","custom-scrollbar","rounded-b-lg"],["class","text-xs p-2 bg-white dark:bg-gray-700 rounded-md shadow-sm border border-gray-200 dark:border-gray-600",4,"ngFor","ngForOf"],[1,"text-xs","p-2","bg-white","dark:bg-gray-700","rounded-md","shadow-sm","border","border-gray-200","dark:border-gray-600"],[1,"font-semibold","text-gray-700","dark:text-gray-200","mb-1"],["class","text-blue-600 dark:text-blue-400 font-normal",4,"ngIf"],[1,"grid","grid-cols-2","gap-x-2","gap-y-1","text-gray-600","dark:text-gray-300"],["class","col-span-2",4,"ngIf"],["class","mt-1.5 text-gray-500 dark:text-gray-400 italic text-2xs border-t border-gray-100 dark:border-gray-600 pt-1.5",4,"ngIf"],[1,"text-blue-600","dark:text-blue-400","font-normal"],[1,"dark:text-gray-100"],[1,"col-span-2"],[1,"mt-1.5","text-gray-500","dark:text-gray-400","italic","text-2xs","border-t","border-gray-100","dark:border-gray-600","pt-1.5"],[1,"p-3","text-xs","text-center","text-gray-500","dark:text-gray-400","border-t","border-gray-200","dark:border-gray-700/80","rounded-b-lg"],[1,"bg-gray-50","dark:bg-gray-700/30","p-3","border-t","border-gray-200","dark:border-gray-700/80","space-y-3","max-h-48","overflow-y-auto","custom-scrollbar","rounded-b-lg"],[1,"text-sm","text-primary","dark:text-primary-light"],[1,"p-3","bg-blue-50","dark:bg-blue-900/30","border","border-blue-200","dark:border-blue-700","rounded-lg","text-xs"],[1,"font-medium","text-blue-700","dark:text-blue-300","mb-1"],[1,"flex","items-center","gap-1.5"],["xmlns","http://www.w3.org/2000/svg","fill","none","viewBox","0 0 24 24","stroke","currentColor","stroke-width","2",1,"h-4","w-4"],["stroke-linecap","round","stroke-linejoin","round","d","M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"],[1,"list-none","space-y-0.5","ml-1","text-blue-600","dark:text-blue-400"],["class","flex items-center",4,"ngIf"],["class","mt-1 italic border-t border-blue-200 dark:border-blue-600 pt-1",4,"ngIf"],[1,"flex","items-center"],[1,"w-16"],[1,"dark:text-blue-200"],[1,"mt-1","italic","border-t","border-blue-200","dark:border-blue-600","pt-1"],[1,"p-3","bg-gray-50","dark:bg-gray-700/50","border","border-gray-200","dark:border-gray-600","rounded-lg","text-xs","text-center","text-gray-500","dark:text-gray-400","italic"],[1,"p-3","bg-yellow-50","dark:bg-yellow-900/30","border","border-yellow-200","dark:border-yellow-700","rounded-lg","text-xs"],[1,"font-medium","text-yellow-700","dark:text-yellow-300","mb-2"],["stroke-linecap","round","stroke-linejoin","round","d","M5 3v4M3 5h4M6 17v4m-2-2h4m5-12v4m-2-2h4m5 10v4m-2-2h4M5 3a2 2 0 00-2 2v1c0 1.1.9 2 2 2h4a2 2 0 002-2V6a2 2 0 00-2-2H5zm14 0a2 2 0 00-2 2v1c0 1.1.9 2 2 2h4a2 2 0 002-2V6a2 2 0 00-2-2h-4zM5 17a2 2 0 00-2 2v1c0 1.1.9 2 2 2h4a2 2 0 002-2v-1a2 2 0 00-2-2H5zm14 0a2 2 0 00-2 2v1c0 1.1.9 2 2 2h4a2 2 0 002-2v-1a2 2 0 00-2-2h-4z"],["class","grid grid-cols-1 sm:grid-cols-2 gap-x-4 gap-y-1 text-yellow-600 dark:text-yellow-400",4,"ngIf"],["class","italic text-yellow-600 dark:text-yellow-400",4,"ngIf"],[1,"grid","grid-cols-1","sm:grid-cols-2","gap-x-4","gap-y-1","text-yellow-600","dark:text-yellow-400"],[4,"ngFor","ngForOf"],[1,"dark:text-yellow-200"],[1,"text-yellow-500","dark:text-yellow-500","text-2xs","ml-1"],[1,"italic","text-yellow-600","dark:text-yellow-400"],[1,"p-3","bg-gray-50","dark:bg-gray-700/80","rounded-lg","shadow"],[1,"block","text-xs","font-medium","text-gray-500","dark:text-gray-400","mb-1"],["class","text-3xl font-bold text-primary dark:text-primary-light cursor-pointer hover:opacity-80 p-1.5 rounded-md min-h-[48px] flex items-center",3,"click",4,"ngIf"],["class","flex items-center space-x-2",4,"ngIf"],[1,"text-3xl","font-bold","text-primary","dark:text-primary-light","cursor-pointer","hover:opacity-80","p-1.5","rounded-md","min-h-[48px]","flex","items-center",3,"click"],["type","number","autofocus","",1,"w-24","p-2","text-2xl","border-gray-300","dark:border-gray-600","rounded-md","focus:ring-primary-focus","focus:border-primary-focus","dark:bg-gray-600","dark:text-gray-100","shadow-sm",3,"ngModelChange","keyup.enter","keyup.escape","ngModel"],[1,"p-2","text-green-600","hover:text-green-500","dark:text-green-400","dark:hover:text-green-300","rounded-full","hover:bg-green-100","dark:hover:bg-green-700/50",3,"click"],["fill","currentColor","viewBox","0 0 20 20",1,"w-5","h-5"],["fill-rule","evenodd","d","M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z","clip-rule","evenodd"],[1,"p-2","text-red-600","hover:text-red-500","dark:text-red-400","dark:hover:text-red-300","rounded-full","hover:bg-red-100","dark:hover:bg-red-700/50",3,"click"],["fill-rule","evenodd","d","M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z","clip-rule","evenodd"],[1,"text-xl","ml-0.5"],[1,"text-xl","font-semibold","text-gray-700","dark:text-gray-100","p-1.5","block","min-h-[48px]","flex","items-center"],[1,"mt-4","p-3","bg-gray-100","dark:bg-gray-700/60","rounded-lg","text-xs"],[1,"font-medium","text-gray-600","dark:text-gray-300","mb-1"],["stroke-linecap","round","stroke-linejoin","round","d","M7 8h10M7 12h4m1 8l-4-4H5a2 2 0 01-2-2V6a2 2 0 012-2h14a2 2 0 012 2v8a2 2 0 01-2 2h-3l-4 4z"],[1,"text-gray-700","dark:text-gray-200","italic"],[1,"fixed","inset-0","bg-gray-700","bg-opacity-75","transition-opacity","overflow-y-auto","h-full","w-full","z-[70]","flex","items-center","justify-center","p-4","backdrop-blur-sm",3,"click"],[1,"relative","transform","overflow-hidden","rounded-lg","bg-white","dark:bg-gray-700","text-left","shadow-xl","transition-all","sm:my-8","sm:w-full","sm:max-w-lg",3,"click"],[1,"bg-white","dark:bg-gray-700","px-4","pt-5","pb-4","sm:p-6","sm:pb-4"],[1,"flex","justify-between","items-center","pb-3"],[1,"text-xl","font-semibold","text-gray-900","dark:text-gray-100"],["type","button",1,"p-1","rounded-full","text-gray-400","hover:text-gray-600","dark:hover:text-gray-300","focus:outline-none",3,"click"],["xmlns","http://www.w3.org/2000/svg","fill","none","viewBox","0 0 24 24","stroke-width","1.5","stroke","currentColor",1,"w-6","h-6"],["stroke-linecap","round","stroke-linejoin","round","d","M6 18 18 6M6 6l12 12"],[1,"my-4"],["type","text","placeholder","Search exercises...",1,"w-full","p-2","border","border-gray-300","dark:border-gray-600","rounded-md","dark:bg-gray-700","dark:text-gray-200",3,"ngModelChange","ngModel"],[1,"mt-2","max-h-60","sm:max-h-80","overflow-y-auto","pr-2"],[1,"space-y-1"],["class","p-3 hover:bg-gray-100 dark:hover:bg-gray-800 rounded-md cursor-pointer transition-all duration-150 ease-in-out flex justify-between items-center",3,"click",4,"ngFor","ngForOf"],["class","text-gray-500 dark:text-gray-400 text-center p-4",4,"ngIf"],[1,"mt-4","pt-4","border-t","border-gray-200","dark:border-gray-600","text-center"],["type","button",1,"text-sm","text-primary","dark:text-primary-light","hover:underline",3,"click"],[1,"bg-gray-50","dark:bg-gray-800","px-4","py-3","sm:flex","sm:flex-row-reverse","sm:px-6"],["type","button",1,"mt-3","inline-flex","w-full","justify-center","rounded-md","bg-white","dark:bg-gray-600","px-3","py-2","text-sm","font-semibold","text-gray-900","dark:text-gray-200","shadow-sm","ring-1","ring-inset","ring-gray-300","dark:ring-gray-500","hover:bg-gray-50","dark:hover:bg-gray-500","sm:mt-0","sm:w-auto",3,"click"],[1,"p-3","hover:bg-gray-100","dark:hover:bg-gray-800","rounded-md","cursor-pointer","transition-all","duration-150","ease-in-out","flex","justify-between","items-center",3,"click"],[1,"font-medium","text-gray-800","dark:text-gray-200"],["class","block text-xs text-gray-500 dark:text-gray-400",4,"ngIf"],["xmlns","http://www.w3.org/2000/svg","viewBox","0 0 20 20","fill","currentColor",1,"w-5","h-5","text-primary","dark:text-primary-light"],["fill-rule","evenodd","d","M10.75 4.75a.75.75 0 0 0-1.5 0v4.5h-4.5a.75.75 0 0 0 0 1.5h4.5v4.5a.75.75 0 0 0 1.5 0v-4.5h4.5a.75.75 0 0 0 0-1.5h-4.5V4.75Z","clip-rule","evenodd"],[1,"block","text-xs","text-gray-500","dark:text-gray-400"],[1,"text-gray-500","dark:text-gray-400","text-center","p-4"],[1,"text-center","py-20"],[1,"text-xl","text-gray-600","dark:text-gray-400"],[3,"isOpenChange","isOpen","modalTitle"],[3,"id","isModal"]],template:function(e,o){if(e&1){let n=ye();se(0,mB,4,2,"ng-container",7),k(1,"app-full-screen-rest-timer",8),ne("timerFinished",function(){return J(n),ee(o.handleRestTimerFinished())})("timerSkipped",function(){return J(n),ee(o.handleRestTimerSkipped())}),T(),se(2,gB,45,11,"div",9)(3,tV,15,1,"div",10)(4,sV,23,4,"div",11)(5,aV,3,0,"ng-template",null,0,Lo)(7,lV,2,4,"app-modal",12)}if(e&2){let n=Fo(6);L("ngIf",o.routine())("ngIfElse",n),R(),L("isVisible",o.playerSubState()===o.PlayerSubState.Resting&&o.isRestTimerVisible())("durationSeconds",o.restDuration())("mainText",o.restTimerMainText())("nextUpText",o.restTimerNextUpText()),R(),L("ngIf",o.isWorkoutMenuVisible()),R(),L("ngIf",o.isPerformanceInsightsVisible()),R(),L("ngIf",o.isExerciseModalOpen()),R(3),L("ngIf",o.exerciseDetailsId)}},dependencies:[wo,Qn,Jo,So,en,Sa,wa,Jn,Bd,$d,Nd,Pd,_a,Rd,Ad,Dd,Ia,ka,$a,Kd,Ra,MS,LS],styles:["@keyframes _ngcontent-%COMP%_modal-appear-animation{0%{opacity:0;transform:scale(.95) translateY(10px)}to{opacity:1;transform:scale(1) translateY(0)}}.animate-modal-appear[_ngcontent-%COMP%]{animation:_ngcontent-%COMP%_modal-appear-animation .3s ease-out forwards}.custom-scrollbar[_ngcontent-%COMP%]::-webkit-scrollbar{width:6px;height:6px}.custom-scrollbar[_ngcontent-%COMP%]::-webkit-scrollbar-track{background:transparent;border-radius:3px}.custom-scrollbar[_ngcontent-%COMP%]::-webkit-scrollbar-thumb{background-color:#0003;border-radius:3px}.dark[_ngcontent-%COMP%]   .custom-scrollbar[_ngcontent-%COMP%]::-webkit-scrollbar-thumb{background-color:#fff3}.custom-scrollbar[_ngcontent-%COMP%]::-webkit-scrollbar-thumb:hover{background-color:#0000004d}.dark[_ngcontent-%COMP%]   .custom-scrollbar[_ngcontent-%COMP%]::-webkit-scrollbar-thumb:hover{background-color:#ffffff4d}.tabata-work-bg[_ngcontent-%COMP%]{background-image:linear-gradient(to bottom right,var(--tw-gradient-stops));--tw-gradient-from: #ef4444 var(--tw-gradient-from-position);--tw-gradient-to: rgb(239 68 68 / 0) var(--tw-gradient-to-position);--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);--tw-gradient-to: #b91c1c var(--tw-gradient-to-position)}.tabata-rest-bg[_ngcontent-%COMP%]{background-image:linear-gradient(to bottom right,var(--tw-gradient-stops));--tw-gradient-from: #22c55e var(--tw-gradient-from-position);--tw-gradient-to: rgb(34 197 94 / 0) var(--tw-gradient-to-position);--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);--tw-gradient-to: #15803d var(--tw-gradient-to-position)}.tabata-prepare-bg[_ngcontent-%COMP%]{background-image:linear-gradient(to bottom right,var(--tw-gradient-stops));--tw-gradient-from: #3b82f6 var(--tw-gradient-from-position);--tw-gradient-to: rgb(59 130 246 / 0) var(--tw-gradient-to-position);--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);--tw-gradient-to: #1d4ed8 var(--tw-gradient-to-position)}.text-shadow[_ngcontent-%COMP%]{text-shadow:0 2px 4px rgba(0,0,0,.2)}.text-shadow-lg[_ngcontent-%COMP%]{text-shadow:0 4px 10px rgba(0,0,0,.25)}.scrollbar-hide[_ngcontent-%COMP%]::-webkit-scrollbar{display:none}.scrollbar-hide[_ngcontent-%COMP%]{-ms-overflow-style:none;scrollbar-width:none}.your-main-container[_ngcontent-%COMP%]{height:calc(100vh - 90px);top:70px}"]})};function uV(r,t){if(r&1&&(k(0,"div",17)(1,"span",18),O(2,"Total Volume:"),T(),k(3,"span",19),O(4),et(5,"number"),T()()),r&2){let e=M(2);R(4),Bt("",ao(5,2,e.sessionTotalVolume(),"1.0-0")," ",e.unitsService.getUnitLabel())}}function cV(r,t){if(r&1&&(k(0,"li",29)(1,"p",30),O(2),T(),k(3,"p",31),O(4),T()()),r&2){let e=t.$implicit;R(2),Bt("",e.exerciseName," - ",e.pbType," "),R(2),We(e.value)}}function pV(r,t){if(r&1&&(k(0,"div",25)(1,"h2",26),O(2," \u{1F389} New Personal Bests! \u{1F389} "),T(),k(3,"ul",27),se(4,cV,5,3,"li",28),T()()),r&2){let e=M(2);R(4),L("ngForOf",e.sessionPBs())}}function dV(r,t){if(r&1&&(k(0,"div",32)(1,"h3",33),O(2,"Your Notes for this Session:"),T(),k(3,"p",34),O(4),T()()),r&2){let e=M().ngIf;R(4),We(e.notes)}}function mV(r,t){if(r&1){let e=ye();vo(0),k(1,"div",3)(2,"button",4),_e(),k(3,"svg",5),ce(4,"path",6),T()(),He(),k(5,"div",7)(6,"div",8),_e(),k(7,"svg",9)(8,"defs")(9,"mask",10),ce(10,"rect",11)(11,"path",12),T()(),ce(12,"circle",13),T()(),He(),k(13,"h1",14),O(14,"Workout Complete!"),T(),k(15,"p",15),O(16,"Great job on finishing your session."),T()(),k(17,"div",16)(18,"div",17)(19,"span",18),O(20,"Routine:"),T(),k(21,"span",19),O(22),T()(),k(23,"div",17)(24,"span",18),O(25,"Date:"),T(),k(26,"span",19),O(27),et(28,"date"),T()(),k(29,"div",17)(30,"span",18),O(31,"Duration:"),T(),k(32,"span",19),O(33),T()(),se(34,uV,6,5,"div",20),T(),se(35,pV,5,1,"div",21)(36,dV,5,1,"div",22),k(37,"div",23)(38,"button",24),ne("click",function(){J(e);let n=M();return ee(n.viewFullLog())}),O(39," View Full Log Details "),T()()(),bo()}if(r&2){let e=t.ngIf,o=M();R(22),We(e.routineName||"Ad-hoc Workout"),R(5),We(ao(28,6,e.startTime,"fullDate")),R(6),Se("",e.durationMinutes," minutes"),R(),L("ngIf",o.sessionTotalVolume()>0),R(),L("ngIf",o.sessionPBs().length>0),R(),L("ngIf",e.notes)}}function fV(r,t){r&1&&(k(0,"div",35)(1,"p",36),O(2,"Loading workout summary..."),T()())}var qd=class r{route=De(Ca);router=De(Zn);trackingService=De(ei);exerciseService=De(ti);statsService=De(BS);unitsService=De(ri);workoutLog=Ee(void 0);displayExercisesSummary=Ee([]);sessionPBs=Ee([]);sessionTotalVolume=Ee(0);logId;ngOnInit(){(this.logId?jn(this.logId):this.route.paramMap.pipe(ns(e=>e.get("logId")))).pipe(ga(e=>e?this.trackingService.getWorkoutLogById(e):jn(null)),is(e=>{e?(this.workoutLog.set(e),this.sessionTotalVolume.set(this.statsService.calculateWorkoutVolume(e)),this.prepareDisplayExercisesSummary(e.exercises),this.identifySessionPBs(e)):(this.workoutLog.set(null),this.displayExercisesSummary.set([]),this.sessionPBs.set([]))})).subscribe()}prepareDisplayExercisesSummary(t){if(!t||t.length===0){this.displayExercisesSummary.set([]);return}let e=t.map(o=>this.exerciseService.getExerciseById(o.exerciseId).pipe(ns(n=>{let i=0;return o.sets.forEach(s=>{i+=(s.repsAchieved||0)*(s.weightUsed||0)}),lr(Xt({},o),{baseExercise:n||null,sessionVolume:i})})));uS(e).subscribe({next:o=>this.displayExercisesSummary.set(o),error:o=>{console.error("Error fetching exercise details for summary:",o),this.displayExercisesSummary.set(t.map(n=>lr(Xt({},n),{baseExercise:null,sessionVolume:0})))}})}identifySessionPBs(t){let e=[];this.trackingService.personalBests$.pipe(hr(1)).subscribe(o=>{t.exercises.forEach(i=>{let s=o[i.exerciseId];s&&i.sets.forEach(a=>{s.forEach(l=>{l.id===a.id&&l.timestamp===a.timestamp&&a.weightUsed===l.weightUsed&&a.repsAchieved===l.repsAchieved&&e.push({exerciseName:i.exerciseName,pbType:l.pbType,value:this.formatPbValueForSummary(l),isNewOrImproved:!0})})})});let n=Array.from(new Map(e.map(i=>[`${i.exerciseName}-${i.pbType}`,i])).values());this.sessionPBs.set(n)})}formatPbValueForSummary(t){let e="";return t.weightUsed!==void 0&&t.weightUsed!==null&&t.weightUsed!==0?(e+=`${t.weightUsed}kg`,t.repsAchieved>0&&(t.pbType.includes("Heaviest")||t.repsAchieved>1&&!t.pbType.includes("RM"))&&(e+=` x ${t.repsAchieved}`)):t.repsAchieved>0&&t.pbType.includes("Max Reps")?e=`${t.repsAchieved} reps`:t.durationPerformed&&t.durationPerformed>0&&t.pbType.includes("Max Duration")&&(e=`${t.durationPerformed}s`),e||"N/A"}viewFullLog(){this.workoutLog()&&this.router.navigate(["/history/log",this.workoutLog().id])}navigateToRoutines(){this.router.navigate(["/workout"])}startNewWorkout(){this.router.navigate(["/workout"])}static \u0275fac=function(e){return new(e||r)};static \u0275cmp=yo({type:r,selectors:[["app-workout-summary"]],inputs:{logId:"logId"},decls:4,vars:2,consts:[["loadingOrNotFoundSummary",""],[1,"container","mx-auto","p-2"],[4,"ngIf","ngIfElse"],[1,"bg-white","dark:bg-gray-700","rounded-xl","shadow-2xl","p-6","md:p-8","max-w-2xl","mx-auto"],["routerLink","/history/list",1,"text-gray-600","dark:text-gray-300","hover:text-primary","dark:hover:text-primary-light","p-2","-ml-1"],["fill","none","stroke","currentColor","viewBox","0 0 24 24","xmlns","http://www.w3.org/2000/svg",1,"w-6","h-6"],["stroke-linecap","round","stroke-linejoin","round","stroke-width","2","d","M15 19l-7-7 7-7"],[1,"text-center","mb-8"],[1,"flex","justify-center","text-center"],["width","36","height","36","viewBox","0 0 24 24","fill","none","xmlns","http://www.w3.org/2000/svg",1,"w-16","h-16","text-green-500","mx-auto","mb-3"],["id","tickCutoutMask"],["x","0","y","0","width","24","height","24","fill","white"],["d","M7.5 12.5L10.5 15.5L16.5 9.5","stroke","black","stroke-width","2.5","stroke-linecap","round","stroke-linejoin","round","fill","none"],["cx","12","cy","12","r","10","fill","#2fd636","mask","url(#tickCutoutMask)"],[1,"text-4xl","font-bold","text-gray-800","dark:text-gray-100"],[1,"text-lg","text-gray-600","dark:text-gray-400","mt-1"],[1,"space-y-4","mb-8"],[1,"flex","justify-between","items-baseline","p-3","bg-gray-50","dark:bg-gray-700","rounded-md"],[1,"text-m","font-medium","text-gray-600","dark:text-gray-300"],[1,"text-md","font-semibold","text-gray-800","dark:text-gray-100"],["class","flex justify-between items-baseline p-3 bg-gray-50 dark:bg-gray-700 rounded-md",4,"ngIf"],["class","mb-8",4,"ngIf"],["class","mb-8 p-3 bg-yellow-50 dark:bg-yellow-900/30 rounded-md",4,"ngIf"],[1,"mt-8","pt-6","border-t","border-gray-200","dark:border-gray-700","space-y-3","md:space-y-0","md:flex","md:justify-center","md:space-x-4"],[1,"w-full","md:w-auto","flex","items-center","justify-center","px-6","py-3","border","border-transparent","rounded-md","shadow-sm","text-base","font-medium","text-white","bg-primary","hover:bg-primary-dark","focus:outline-none","focus:ring-2","focus:ring-offset-2","focus:ring-primary-dark",3,"click"],[1,"mb-8"],[1,"text-xl","font-semibold","text-gray-700","dark:text-gray-300","mb-3","text-center","border-b","pb-2","dark:border-gray-700"],[1,"space-y-2","mt-3"],["class","p-2 bg-green-50 dark:bg-green-900/30 rounded-md text-center",4,"ngFor","ngForOf"],[1,"p-2","bg-green-50","dark:bg-green-900/30","rounded-md","text-center"],[1,"text-m","font-medium","text-green-700","dark:text-green-300"],[1,"text-lg","font-bold","text-green-600","dark:text-green-200"],[1,"mb-8","p-3","bg-yellow-50","dark:bg-yellow-900/30","rounded-md"],[1,"text-m","font-medium","text-yellow-800","dark:text-yellow-300","mb-1"],[1,"text-m","text-yellow-700","dark:text-yellow-200","italic","whitespace-pre-line"],[1,"text-center","py-20"],[1,"text-xl","text-gray-600","dark:text-gray-400"]],template:function(e,o){if(e&1&&(k(0,"div",1),se(1,mV,40,9,"ng-container",2)(2,fV,3,0,"ng-template",null,0,Lo),T()),e&2){let n=Fo(3);R(),L("ngIf",o.workoutLog())("ngIfElse",n)}},dependencies:[wo,Jo,So,en,wa,Jn],encapsulation:2})};var RR=Kx(HS());var cs=class{constructor(t,e){this.backend=t,this.dataMover=e,this.data=new WeakMap,this.dataIdsCount=0}get(t){return this.data.has(t)||this.dataMover.moveData(this.backend,t),this.data.get(t)}set(t,e){this.dataIdsCount++,this.data.set(t,e)}has(t){return this.data.has(t)}delete(t){return this.dataIdsCount--,this.data.delete(t)}numDataIds(){return this.dataIdsCount}},Cn=class{refCount(t){return zr("refCount")}incRef(t){return zr("incRef")}timerAvailable(){return!0}time(t){return zr("time")}read(t){return zr("read")}readSync(t){return zr("readSync")}readToGPU(t,e){return zr("readToGPU")}numDataIds(){return zr("numDataIds")}disposeData(t,e){return zr("disposeData")}write(t,e,o){return zr("write")}move(t,e,o,n,i){return zr("move")}createTensorFromGPUData(t,e,o){return zr("createTensorFromGPUData")}memory(){return zr("memory")}floatPrecision(){return zr("floatPrecision")}epsilon(){return this.floatPrecision()===32?1e-7:1e-4}dispose(){return zr("dispose")}};function zr(r){throw new Error(`'${r}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function KS(r){let t=r.length,e=0;for(;t>0;)e=Math.random()*t|0,t--,jd(r,t,e)}function hV(r,t){if(r.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${r.length}Second array length was ${t.length}`);let e=r.length,o=0;for(;e>0;)o=Math.random()*e|0,e--,jd(r,e,o),jd(t,e,o)}function Pa(r,t,e){return Math.max(r,Math.min(t,e))}function gV(r){return r%2===0?r:r+1}function jd(r,t,e){let o=r[t];r[t]=r[e],r[e]=o}function xV(r){let t=0;for(let e=0;e<r.length;e++)t+=r[e];return t}function yV(r,t){let e=Math.random();return t*e+(1-e)*r}function vV(r,t){let e=0;for(let o=0;o<r.length;o++){let n=Number(r[o])-Number(t[o]);e+=n*n}return e}function D(r,t){if(!r)throw new Error(typeof t=="string"?t:t())}function Nt(r,t,e=""){D(Ur(r,t),()=>e+` Shapes ${r} and ${t} must match`)}function lo(r){D(r!=null,()=>"The input to the tensor constructor must be a non-null value.")}function Ke(r){if(r.length===0)return 1;let t=r[0];for(let e=1;e<r.length;e++)t*=r[e];return t}function bV(r){return r.length===0}function ey(r,t){if(r===t)return!0;if(r==null||t==null||r.length!==t.length)return!1;for(let e=0;e<r.length;e++)if(r[e]!==null&&t[e]!==null&&r[e]!==t[e])return!1;return!0}function Ur(r,t){if(r===t)return!0;if(r==null||t==null||r.length!==t.length)return!1;for(let e=0;e<r.length;e++)if(r[e]!==t[e])return!1;return!0}function _n(r){return r%1===0}function SV(r){if(Math.tanh!=null)return Math.tanh(r);if(r===1/0)return 1;if(r===-1/0)return-1;{let t=Math.exp(2*r);return(t-1)/(t+1)}}function wV(r){let t=Math.ceil(Math.sqrt(r));return[t,Math.ceil(r/t)]}function CV(r){let t=new Uint32Array(r);for(let e=0;e<r;++e)t[e]=e;return KS(t),t}function ds(r,t){return t<=r.length?r:r+" ".repeat(t-r.length)}function _V(r,t=n=>0,e,o){return new Promise((n,i)=>{let s=0,a=()=>{if(r()){n();return}s++;let l=t(s);if(e!=null&&s>=e){i();return}o!=null?o(a,l):setTimeout(a,l)};a()})}function kV(r,t){let e=1,o=-1;for(let i=0;i<r.length;++i)if(r[i]>=0)e*=r[i];else if(r[i]===-1){if(o!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${o} and dim ${i}`);o=i}else if(r[i]<0)throw Error(`Shapes can not be < 0. Found ${r[i]} at dim ${i}`);if(o===-1){if(t>0&&t!==e)throw Error(`Size(${t}) must match the product of shape ${r}`);return r}if(e===0)throw Error(`Cannot infer the missing size in [${r}] when there are 0 elements`);if(t%e!==0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${e}`);let n=r.slice();return n[o]=t/e,n}function oi(r,t){let e=t.length;return r=r==null?t.map((o,n)=>n):[].concat(r),D(r.every(o=>o>=-e&&o<e),()=>`All values in axis param must be in range [-${e}, ${e}) but got axis ${r}`),D(r.every(o=>_n(o)),()=>`All values in axis param must be integers but got axis ${r}`),r.map(o=>o<0?e+o:o)}function ty(r,t){let e=[],o=[],n=t!=null&&Array.isArray(t)&&t.length===0,i=t==null||n?null:oi(t,r).sort(),s=0;for(let a=0;a<r.length;++a){if(i!=null){if(i[s]===a&&r[a]!==1)throw new Error(`Can't squeeze axis ${a} since its dim '${r[a]}' is not 1`);(i[s]==null||i[s]>a)&&r[a]===1&&(e.push(r[a]),o.push(a)),i[s]<=a&&s++}r[a]!==1&&(e.push(r[a]),o.push(a))}return{newShape:e,keptDims:o}}function ry(r,t){return Xd(r,t)}function Xd(r,t){let e=null;if(r==null||r==="float32")e=new Float32Array(t);else if(r==="int32")e=new Int32Array(t);else if(r==="bool")e=new Uint8Array(t);else if(r==="string")e=new Array(t);else throw new Error(`Unknown data type ${r}`);return e}function oy(r,t){for(let e=0;e<r.length;e++){let o=r[e];if(isNaN(o)||!isFinite(o))throw Error(`A tensor of type ${t} being uploaded contains ${o}.`)}}function ny(r){return r==="bool"||r==="complex64"||r==="float32"||r==="int32"||r==="string"}function IV(r,t){return!(t==="complex64"||t==="float32"&&r!=="complex64"||t==="int32"&&r!=="float32"&&r!=="complex64"||t==="bool"&&r==="bool")}function Aa(r){if(r==="float32"||r==="int32")return 4;if(r==="complex64")return 8;if(r==="bool")return 1;throw new Error(`Unknown dtype ${r}`)}function iy(r){if(r==null)return 0;let t=0;return r.forEach(e=>t+=e.length),t}function Da(r){return typeof r=="string"||r instanceof String}function qS(r){return typeof r=="boolean"}function jS(r){return typeof r=="number"}function ni(r){return Array.isArray(r)?ni(r[0]):r instanceof Float32Array?"float32":r instanceof Int32Array||r instanceof Uint8Array||r instanceof Uint8ClampedArray?"int32":jS(r)?"float32":Da(r)?"string":qS(r)?"bool":"float32"}function Fa(r){return!!(r&&r.constructor&&r.call&&r.apply)}function Oa(r,t){for(let e=t;e<r;++e)if(r%e===0)return e;return r}function tn(r){let t=r.length;if(t<2)return[];let e=new Array(t-1);e[t-2]=r[t-1];for(let o=t-3;o>=0;--o)e[o]=e[o+1]*r[o+1];return e}function XS(r,t,e,o=!1){let n=new Array;if(t.length===1){let i=t[0]*(o?2:1);for(let s=0;s<i;s++)n[s]=e[r+s]}else{let i=t[0],s=t.slice(1),a=s.reduce((l,u)=>l*u)*(o?2:1);for(let l=0;l<i;l++)n[l]=XS(r+l*a,s,e,o)}return n}function ps(r,t,e=!1){if(r.length===0)return t[0];let o=r.reduce((n,i)=>n*i)*(e?2:1);if(o===0)return[];if(o!==t.length)throw new Error(`[${r}] does not match the input size ${t.length}${e?" for a complex tensor":""}.`);return XS(0,r,t,e)}function TV(r,t){if(Array.isArray(r))return r;if(t==="float32")return r instanceof Float32Array?r:new Float32Array(r);if(t==="int32")return r instanceof Int32Array?r:new Int32Array(r);if(t==="bool"||t==="string")return Uint8Array.from(new Int32Array(r));throw new Error(`Unknown dtype ${t}`)}function cp(r,t){let e=La(r,t);for(let o=0;o<e.length;o++)e[o]=1;return e}function La(r,t){if(t==null||t==="float32"||t==="complex64")return new Float32Array(r);if(t==="int32")return new Int32Array(r);if(t==="bool")return new Uint8Array(r);throw new Error(`Unknown data type ${t}`)}function EV(r,t){let e=r.reduce((o,n)=>o*n,1);if(t==null||t==="float32")return ps(r,new Float32Array(e));if(t==="int32")return ps(r,new Int32Array(e));if(t==="bool")return ps(r,new Uint8Array(e));throw new Error(`Unknown data type ${t}`)}function vt(r){r.forEach(t=>{D(Number.isInteger(t)&&t>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${r}].`)})}function NV(r,t,e){if(t===0)return 0;if(t===1)return r[0];let o=r[r.length-1];for(let n=0;n<r.length-1;++n)o+=e[n]*r[n];return o}function RV(r,t,e){if(t===0)return[];if(t===1)return[r];let o=new Array(t);for(let n=0;n<o.length-1;++n)o[n]=Math.floor(r/e[n]),r-=o[n]*e[n];return o[o.length-1]=r,o}function ms(r){return r&&r.then&&typeof r.then=="function"}var YS="tfjsflags",pp=class{constructor(t){this.global=t,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=PV,this.populateURLFlags()}setPlatform(t,e){this.platform!=null&&(G().getBool("IS_TEST")||G().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`)),this.platformName=t,this.platform=e}registerFlag(t,e,o){if(this.flagRegistry[t]={evaluationFn:e,setHook:o},this.urlFlags[t]!=null){let n=this.urlFlags[t];G().getBool("IS_TEST")||G().getBool("PROD")||console.warn(`Setting feature override from URL ${t}: ${n}.`),this.set(t,n)}}getAsync(t){return j(this,null,function*(){return t in this.flags?this.flags[t]:(this.flags[t]=yield this.evaluateFlag(t),this.flags[t])})}get(t){if(t in this.flags)return this.flags[t];let e=this.evaluateFlag(t);if(ms(e))throw new Error(`Flag ${t} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[t]=e,this.flags[t]}getNumber(t){return this.get(t)}getBool(t){return this.get(t)}getString(t){return this.get(t)}getFlags(){return this.flags}get features(){return this.flags}set(t,e){if(this.flagRegistry[t]==null)throw new Error(`Cannot set flag ${t} as it has not been registered.`);this.flags[t]=e,this.flagRegistry[t].setHook!=null&&this.flagRegistry[t].setHook(e)}evaluateFlag(t){if(this.flagRegistry[t]==null)throw new Error(`Cannot evaluate flag '${t}': no evaluation function found.`);return this.flagRegistry[t].evaluationFn()}setFlags(t){this.flags=Object.assign({},t)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global>"u"||typeof this.global.location>"u"||typeof this.global.location.search>"u")return;let t=this.getQueryParams(this.global.location.search);YS in t&&t[YS].split(",").forEach(o=>{let[n,i]=o.split(":");this.urlFlags[n]=DV(n,i)})}};function PV(r){let t={};return r.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(e,...o)=>(AV(t,o[0],o[1]),o.join("="))),t}function AV(r,t,e){r[decodeURIComponent(t)]=decodeURIComponent(e||"")}function DV(r,t){let e=t.toLowerCase();return e==="true"||e==="false"?e==="true":`${+e}`===e?+e:t}function G(){return sy}var sy=null;function QS(r){sy=r}var ay;function ly(){if(ay==null){let r;if(typeof window<"u")r=window;else if(typeof global<"u")r=global;else if(typeof process<"u")r=process;else if(typeof self<"u")r=self;else throw new Error("Could not find a global object");ay=r}return ay}function FV(){let r=ly();return r._tfGlobals==null&&(r._tfGlobals=new Map),r._tfGlobals}function dp(r,t){let e=FV();if(e.has(r))return e.get(r);{let o=t();return e.set(r,o),e.get(r)}}var fs="Abs",Ma="Acos",Ba="Acosh",rn="Add",Va="AddN",Wa="All",za="Any",Ua="ArgMax",Ga="ArgMin",Ha="Asin",Ka="Asinh",qa="Atan",ja="Atanh",Xa="Atan2",Ya="AvgPool",Yd="AvgPoolGrad",Qa="AvgPool3D",Qd="AvgPool3DGrad",Za="BatchMatMul",Ja="BatchToSpaceND",el="Bincount",tl="BitwiseAnd";var rl="BroadcastArgs",kn="Cast",ii="Ceil",ol="ClipByValue",hs="Complex",nl="ComplexAbs",il="Concat",sl="Conv2D",al="Conv2DBackpropFilter",ll="Conv2DBackpropInput",ul="Conv3D",Zd="Conv3DBackpropFilterV2",cl="Conv3DBackpropInputV2",pl="Cos",dl="Cosh",ml="Cumprod",fl="Cumsum",hl="CropAndResize",gl="DenseBincount",xl="DepthToSpace",yl="DepthwiseConv2dNative",vl="DepthwiseConv2dNativeBackpropFilter",bl="DepthwiseConv2dNativeBackpropInput",Sl="Diag",wl="Dilation2D",ZS="Dilation2DBackpropInput",JS="Dilation2DBackpropFilter",mp="Draw",Cl="RealDiv",_l="Einsum",kl="Elu",Jd="EluGrad",Il="Erf",si="Equal",ai="Exp",Tl="ExpandDims",li="Expm1",El="FFT",Nl="Fill",Rl="FlipLeftRight",ui="Floor",ci="FloorDiv",$l="FusedBatchNorm",Pl="GatherV2",Al="GatherNd",pi="Greater",di="GreaterEqual",In="Identity",Dl="IFFT",Fl="Imag",Ol="IsFinite",Ll="IsInf",Ml="IsNan",Bl="LeakyRelu",mi="Less",fi="LessEqual",Vl="LinSpace",hi="Log",Wl="Log1p",zl="LogicalAnd",Ul="LogicalNot",Gl="LogicalOr";var Hl="LRN",em="LRNGrad";var Kl="Max",gi="Maximum",ql="MaxPool",tm="MaxPoolGrad",jl="MaxPool3D",rm="MaxPool3DGrad",Xl="MaxPoolWithArgmax",Yl="Mean",Ql="Min",xi="Minimum",Zl="MirrorPad",Jl="Mod",eu="Multinomial",yi="Multiply",gs="Neg",vi="NotEqual",tu="NonMaxSuppressionV3",om="NonMaxSuppressionV4",ru="NonMaxSuppressionV5",ou="OnesLike",nu="OneHot",iu="Pack",su="PadV2";var au="Pow",lu="Prelu",xs="Prod",nm="RaggedGather",im="RaggedRange",sm="RaggedTensorToTensor",uu="Range",ys="Real",cu="Reciprocal",pu="Relu",du="Reshape",mu="ResizeNearestNeighbor",am="ResizeNearestNeighborGrad",fu="ResizeBilinear",lm="ResizeBilinearGrad",hu="Relu6",gu="Reverse",xu="Round",bi="Rsqrt",yu="ScatterNd",vu="TensorScatterUpdate",bu="SearchSorted",Su="Select",wu="Selu",vs="Slice",Cu="Sin",_u="Sinh",ku="Sign",Si="Sigmoid",Iu="Softplus",wi="Sqrt",Tu="Sum",Eu="SpaceToBatchND",Nu="SplitV",Ru="Softmax",um="SparseFillEmptyRows",cm="SparseReshape",$u="SparseSegmentMean",Pu="SparseSegmentSum",Au="SparseToDense",Ci="SquaredDifference",pm="Square",Du="StaticRegexReplace",Fu="StridedSlice",Ou="StringNGrams",dm="StringSplit",mm="StringToHashBucketFast",_i="Sub",Lu="Tan",Mu="Tanh",ki="Tile",Bu="TopK",Vu="Transform",Ii="Transpose",fm="Unique",Wu="Unpack",zu="UnsortedSegmentSum";var Uu="ZerosLike",Gu="Step",bs="FromPixels",Hu="RotateWithOffset",Ss="_FusedMatMul",ws="FusedConv2D",Cs="FusedDepthwiseConv2D";function Tn(...r){G().getBool("IS_TEST")||G().getBool("PROD")||console.warn(...r)}function OV(...r){G().getBool("IS_TEST")||G().getBool("PROD")||console.log(...r)}var hm=dp("kernelRegistry",()=>new Map),LV=dp("gradRegistry",()=>new Map);function Ku(r,t){let e=t2(r,t);return hm.get(e)}function uy(r){return LV.get(r)}function cy(r){let t=hm.entries(),e=[];for(;;){let{done:o,value:n}=t.next();if(o)break;let[i,s]=n,[a]=i.split("_");a===r&&e.push(s)}return e}function gm(r){let{kernelName:t,backendName:e}=r,o=t2(t,e);hm.has(o)&&Tn(`The kernel '${t}' for backend '${e}' is already registered`),hm.set(o,r)}function t2(r,t){return`${t}_${r}`}var S={};dt(S,{arraysEqual:()=>Ur,arraysEqualWithNull:()=>ey,assert:()=>D,assertNonNegativeIntegerDimensions:()=>vt,assertNonNull:()=>lo,assertShapesMatch:()=>Nt,bytesFromStringArray:()=>iy,bytesPerElement:()=>Aa,checkConversionForErrors:()=>oy,clamp:()=>Pa,computeStrides:()=>tn,convertBackendValuesAndArrayBuffer:()=>TV,createScalarValue:()=>GV,createShuffledIndices:()=>CV,decodeString:()=>Qu,distSquared:()=>vV,encodeString:()=>Yu,fetch:()=>KV,fingerPrint64:()=>UV,flatten:()=>Ei,getArrayFromDType:()=>Xd,getTypedArrayFromDType:()=>ry,hasEncodingLoss:()=>IV,hexToLong:()=>fp,indexToLoc:()=>RV,inferDtype:()=>ni,inferFromImplicitShape:()=>kV,isBoolean:()=>qS,isFunction:()=>Fa,isInt:()=>_n,isNumber:()=>jS,isPromise:()=>ms,isScalarShape:()=>bV,isString:()=>Da,isTypedArray:()=>ur,isValidDtype:()=>ny,locToIndex:()=>NV,makeOnesTypedArray:()=>cp,makeZerosNestedTypedArray:()=>EV,makeZerosTypedArray:()=>La,nearestDivisor:()=>Oa,nearestLargerEven:()=>gV,now:()=>Es,parseAxisParam:()=>oi,randUniform:()=>yV,repeatedTry:()=>_V,rightPad:()=>ds,shuffle:()=>KS,shuffleCombo:()=>hV,sizeFromShape:()=>Ke,sizeToSquarishShape:()=>wV,squeezeShape:()=>ty,sum:()=>xV,swap:()=>jd,tanh:()=>SV,toNestedArray:()=>ps,toTypedArray:()=>Xu});function xm(r){return r instanceof Float32Array||r instanceof Int32Array||r instanceof Uint8Array||r instanceof Uint8ClampedArray}var fy=Kx(d2());var Ts=fy.default||fy;function fp(r){return Ts.fromString(r,!0,16)}var f2=fp("c3a5c85c97cb3127"),Is=fp("b492b66fbe98f273"),yr=fp("9ae16a3b2f90404f");function my(r){return r.xor(r.shru(47))}function h2(r,t,e){let o=r.slice(t,t+e);return Ts.fromBytes(Array.from(o),!0,!0)}function bt(r,t){return h2(r,t,8)}function m2(r,t){return h2(r,t,4)}function Yt(r,t){return t===0?r:r.shru(t).or(r.shl(64-t))}function Ti(r,t,e=fp("9ddfea08eb382d69")){let o=r.xor(t).mul(e);o=o.xor(o.shru(47));let n=t.xor(o).mul(e);return n=n.xor(n.shru(47)),n=n.mul(e),n}function BV(r,t,e,o,n,i){n=n.add(r),i=Yt(i.add(n).add(o),21);let s=n;return n=n.add(t),n=n.add(e),i=i.add(Yt(n,44)),[n.add(o),i.add(s)]}function vm(r,t,e,o){return BV(bt(r,t),bt(r,t+8),bt(r,t+16),bt(r,t+24),e,o)}function VV(r,t=r.length){if(t>=8){let e=yr.add(t*2),o=bt(r,0).add(yr),n=bt(r,t-8),i=Yt(n,37).mul(e).add(o),s=Yt(o,25).add(n).mul(e);return Ti(i,s,e)}if(t>=4){let e=yr.add(t*2),o=m2(r,0);return Ti(o.shl(3).add(t),m2(r,t-4),e)}if(t>0){let e=r[0],o=r[t>>1],n=r[t-1],i=e+(o<<8),s=t+(n<<2);return my(yr.mul(i).xor(f2.mul(s))).mul(yr)}return yr}function WV(r,t=r.length){let e=yr.add(t*2),o=bt(r,0).mul(Is),n=bt(r,8),i=bt(r,t-8).mul(e),s=bt(r,t-16).mul(yr);return Ti(Yt(o.add(n),43).add(Yt(i,30)).add(s),o.add(Yt(n.add(yr),18)).add(i),e)}function zV(r,t=r.length){let e=yr.add(t*2),o=bt(r,0).mul(yr),n=bt(r,8),i=bt(r,t-8).mul(e),s=bt(r,t-16).mul(yr),a=Yt(o.add(n),43).add(Yt(i,30)).add(s),l=Ti(a,o.add(Yt(n.add(yr),18)).add(i),e),u=bt(r,16).mul(e),c=bt(r,24),p=a.add(bt(r,t-32)).mul(e),d=l.add(bt(r,t-24)).mul(e);return Ti(Yt(u.add(c),43).add(Yt(p,30)).add(d),u.add(Yt(c.add(o),18)).add(p),e)}function UV(r,t=r.length){let e=Ts.fromNumber(81,!0);if(t<=32)return t<=16?VV(r,t):WV(r,t);if(t<=64)return zV(r,t);let o=e,n=e.mul(Is).add(113),i=my(n.mul(yr).add(113)).mul(yr),s=[Ts.UZERO,Ts.UZERO],a=[Ts.UZERO,Ts.UZERO];o=o.mul(yr).add(bt(r,0));let l=0,u=(t-1>>6)*64,c=u+(t-1&63)-63;do o=Yt(o.add(n).add(s[0]).add(bt(r,l+8)),37).mul(Is),n=Yt(n.add(s[1]).add(bt(r,l+48)),42).mul(Is),o=o.xor(a[1]),n=n.add(s[0]).add(bt(r,l+40)),i=Yt(i.add(a[0]),33).mul(Is),s=vm(r,l,s[1].mul(Is),o.add(a[0])),a=vm(r,l+32,i.add(a[1]),n.add(bt(r,l+16))),[i,o]=[o,i],l+=64;while(l!==u);let p=Is.add(i.and(255).shl(1));return l=c,a[0]=a[0].add(t-1&63),s[0]=s[0].add(a[0]),a[0]=a[0].add(s[0]),o=Yt(o.add(n).add(s[0]).add(bt(r,l+8)),37).mul(p),n=Yt(n.add(s[1]).add(bt(r,l+48)),42).mul(p),o=o.xor(a[1].mul(9)),n=n.add(s[0].mul(9).add(bt(r,l+40))),i=Yt(i.add(a[0]),33).mul(p),s=vm(r,l,s[1].mul(p),o.add(a[0])),a=vm(r,l+32,i.add(a[1]),n.add(bt(r,l+16))),[i,o]=[o,i],Ti(Ti(s[0],a[0],p).add(my(n).mul(f2)).add(i),Ti(s[1],a[1],p).add(o),p)}function GV(r,t){return t==="string"?Yu(r):Xu([r],t)}function HV(r,t){return r instanceof Float32Array&&t==="float32"||r instanceof Int32Array&&t==="int32"||r instanceof Uint8Array&&t==="bool"}function Xu(r,t){if(t==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(r)&&(r=Ei(r)),G().getBool("DEBUG")&&oy(r,t),HV(r,t))return r;if(t==null||t==="float32"||t==="complex64")return new Float32Array(r);if(t==="int32")return new Int32Array(r);if(t==="bool"){let e=new Uint8Array(r.length);for(let o=0;o<e.length;++o)Math.round(r[o])!==0&&(e[o]=1);return e}else throw new Error(`Unknown data type ${t}`)}function Es(){return G().platform.now()}function KV(r,t){return G().platform.fetch(r,t)}function Yu(r,t="utf-8"){return t=t||"utf-8",G().platform.encode(r,t)}function Qu(r,t="utf-8"){return t=t||"utf-8",G().platform.decode(r,t)}function ur(r){return G().platform.isTypedArray!=null?G().platform.isTypedArray(r):xm(r)}function Ei(r,t=[],e=!1){if(t==null&&(t=[]),typeof r=="boolean"||typeof r=="number"||typeof r=="string"||ms(r)||r==null||ur(r)&&e)t.push(r);else if(Array.isArray(r)||ur(r))for(let o=0;o<r.length;++o)Ei(r[o],t,e);else{let o=-1;for(let n of Object.keys(r))/^([1-9]+[0-9]*|0)$/.test(n)&&(o=Math.max(o,Number(n)));for(let n=0;n<=o;n++)Ei(r[n],t,e)}return t}var bm=class{constructor(t,e){this.backendTimer=t,this.logger=e,e==null&&(this.logger=new hy)}profileKernel(t,e,o){let n,i=()=>{n=o()},s,a=Es();if(this.backendTimer.timerAvailable())s=this.backendTimer.time(i);else{i();for(let u of n)u.dataSync();s=Promise.resolve({kernelMs:Es()-a})}if(G().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let u=0;u<n.length;u++){let c=n[u];c.data().then(p=>{qV(p,c.dtype,t)})}return{kernelName:t,outputs:n,inputs:e,timeMs:s.then(u=>u.kernelMs),extraInfo:s.then(u=>u.getExtraProfileInfo!=null?u.getExtraProfileInfo():"")}}logKernelProfile(t){let{kernelName:e,outputs:o,timeMs:n,inputs:i,extraInfo:s}=t;o.forEach(a=>{Promise.all([a.data(),n,s]).then(l=>{this.logger.logKernelProfile(e,a,l[0],l[1],i,l[2])})})}};function qV(r,t,e){if(t!=="float32")return!1;for(let o=0;o<r.length;o++){let n=r[o];if(isNaN(n)||!isFinite(n))return console.warn(`Found ${n} in the result of '${e}'`),!0}return!1}var hy=class{logKernelProfile(t,e,o,n,i,s){let a=typeof n=="number"?ds(`${n}ms`,9):n.error,l=ds(t,25),u=e.rank,c=e.size,p=ds(e.shape.toString(),14),d="";for(let m in i){let f=i[m];if(f!=null){let g=f.shape||e.shape,x=g.length;d+=`${m}: ${x}D ${x>0?g:""} `}}console.log(`%c${l}	%c${a}	%c${u}D ${p}	%c${c}	%c${d}	%c${s}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}};function g2(r,t,e){let o={},n={};for(let l=0;l<t.length;l++)o[t[l].id]=!0;for(let l=0;l<r.length;l++){let u=r[l],c=u.inputs;for(let p in c){let d=c[p],m=!1;for(let f=0;f<t.length;f++)if(o[d.id]){u.outputs.forEach(g=>o[g.id]=!0),m=!0,n[u.id]=!0;break}if(m)break}}let i={};i[e.id]=!0;let s={};for(let l=r.length-1;l>=0;l--){let u=r[l],c=u.inputs;for(let p=0;p<u.outputs.length;p++)if(i[u.outputs[p].id]){for(let d in c)i[c[d].id]=!0,s[u.id]=!0;break}}let a=[];for(let l=0;l<r.length;l++){let u=r[l];if(n[u.id]&&s[u.id]){let c={};for(let d in u.inputs){let m=u.inputs[d];o[m.id]&&(c[d]=m)}let p=Object.assign({},u);p.inputs=c,p.outputs=u.outputs,a.push(p)}}return a}function x2(r,t,e,o){for(let n=t.length-1;n>=0;n--){let i=t[n],s=[];if(i.outputs.forEach(l=>{let u=r[l.id];u!=null?s.push(u):s.push(null)}),i.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${i.kernelName}.`);let a=i.gradient(s);for(let l in i.inputs){if(!(l in a))throw new Error(`Cannot backprop through input ${l}. Available gradients found: ${Object.keys(a)}.`);let u=e(()=>a[l]());if(u.dtype!=="float32")throw new Error(`Error in gradient for op ${i.kernelName}. The gradient of input ${l} must have 'float32' dtype, but has '${u.dtype}'`);let c=i.inputs[l];if(!Ur(u.shape,c.shape))throw new Error(`Error in gradient for op ${i.kernelName}. The gradient of input '${l}' has shape '${u.shape}', which does not match the shape of the input '${c.shape}'`);if(r[c.id]==null)r[c.id]=u;else{let p=r[c.id];r[c.id]=o(p,u),p.dispose()}}}}var y2=20,hp=3,gy=7;function v2(r,t,e,o){let n=tn(t),i=jV(r,t,e,n),s=t.length,a=Sm(r,t,e,n,i),l=["Tensor"];return o&&(l.push(`  dtype: ${e}`),l.push(`  rank: ${s}`),l.push(`  shape: [${t}]`),l.push("  values:")),l.push(a.map(u=>"    "+u).join(`
`)),l.join(`
`)}function jV(r,t,e,o){let n=Ke(t),i=o[o.length-1],s=new Array(i).fill(0),a=t.length,l=e==="complex64"?xp(r):r;if(a>1)for(let u=0;u<n/i;u++){let c=u*i;for(let p=0;p<i;p++)s[p]=Math.max(s[p],gp(l[c+p],0,e).length)}return s}function gp(r,t,e){let o;return Array.isArray(r)?o=`${parseFloat(r[0].toFixed(gy))} + ${parseFloat(r[1].toFixed(gy))}j`:Da(r)?o=`'${r}'`:e==="bool"?o=b2(r):o=parseFloat(r.toFixed(gy)).toString(),ds(o,t)}function b2(r){return r===0?"false":"true"}function Sm(r,t,e,o,n,i=!0){let s=e==="complex64"?2:1,a=t[0],l=t.length;if(l===0){if(e==="complex64"){let g=xp(r);return[gp(g[0],0,e)]}return e==="bool"?[b2(r[0])]:[r[0].toString()]}if(l===1){if(a>y2){let x=hp*s,y=Array.from(r.slice(0,x)),b=Array.from(r.slice((a-hp)*s,a*s));return e==="complex64"&&(y=xp(y),b=xp(b)),["["+y.map((I,N)=>gp(I,n[N],e)).join(", ")+", ..., "+b.map((I,N)=>gp(I,n[a-hp+N],e)).join(", ")+"]"]}return["["+(e==="complex64"?xp(r):Array.from(r)).map((x,y)=>gp(x,n[y],e)).join(", ")+"]"]}let u=t.slice(1),c=o.slice(1),p=o[0]*s,d=[];if(a>y2){for(let g=0;g<hp;g++){let x=g*p,y=x+p;d.push(...Sm(r.slice(x,y),u,e,c,n,!1))}d.push("...");for(let g=a-hp;g<a;g++){let x=g*p,y=x+p;d.push(...Sm(r.slice(x,y),u,e,c,n,g===a-1))}}else for(let g=0;g<a;g++){let x=g*p,y=x+p;d.push(...Sm(r.slice(x,y),u,e,c,n,g===a-1))}let m=l===2?",":"";d[0]="["+(a>0?d[0]+m:"");for(let g=1;g<d.length-1;g++)d[g]=" "+d[g]+m;let f=`,
`;for(let g=2;g<l;g++)f+=`
`;return d[d.length-1]=" "+d[d.length-1]+"]"+(i?"":f),d}function xp(r){let t=[];for(let e=0;e<r.length;e+=2)t.push([r[e],r[e+1]]);return t}var uo=class{constructor(t,e,o){if(this.dtype=e,this.shape=t.slice(),this.size=Ke(t),o!=null){let n=o.length;D(n===this.size,()=>`Length of values '${n}' does not match the size inferred by the shape '${this.size}'.`)}if(e==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=o||Xd(e,this.size),this.strides=tn(t)}set(t,...e){e.length===0&&(e=[0]),D(e.length===this.rank,()=>`The number of provided coordinates (${e.length}) must match the rank (${this.rank})`);let o=this.locToIndex(e);this.values[o]=t}get(...t){t.length===0&&(t=[0]);let e=0;for(let n of t){if(n<0||n>=this.shape[e]){let i=`Requested out of range element at ${t}.   Buffer shape=${this.shape}`;throw new Error(i)}e++}let o=t[t.length-1];for(let n=0;n<t.length-1;++n)o+=this.strides[n]*t[n];return this.values[o]}locToIndex(t){if(this.rank===0)return 0;if(this.rank===1)return t[0];let e=t[t.length-1];for(let o=0;o<t.length-1;++o)e+=this.strides[o]*t[o];return e}indexToLoc(t){if(this.rank===0)return[];if(this.rank===1)return[t];let e=new Array(this.shape.length);for(let o=0;o<e.length-1;++o)e[o]=Math.floor(t/this.strides[o]),t-=e[o]*this.strides[o];return e[e.length-1]=t,e}get rank(){return this.shape.length}toTensor(){return Bo().makeTensor(this.values,this.shape,this.dtype)}},Bo=null,Zu=null,XV=null;function S2(r){Bo=r}function w2(r){Zu=r}function C2(r){XV=r}var at=class{constructor(t,e,o,n){this.kept=!1,this.isDisposedInternal=!1,this.shape=t.slice(),this.dtype=e||"float32",this.size=Ke(t),this.strides=tn(t),this.dataId=o,this.id=n,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}buffer(){return j(this,null,function*(){let t=yield this.data();return Zu.buffer(this.shape,this.dtype,t)})}bufferSync(){return Zu.buffer(this.shape,this.dtype,this.dataSync())}array(){return j(this,null,function*(){let t=yield this.data();return ps(this.shape,t,this.dtype==="complex64")})}arraySync(){return ps(this.shape,this.dataSync(),this.dtype==="complex64")}data(){return j(this,null,function*(){this.throwIfDisposed();let t=Bo().read(this.dataId);if(this.dtype==="string"){let e=yield t;try{return e.map(o=>Qu(o))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return t})}dataToGPU(t){return this.throwIfDisposed(),Bo().readToGPU(this.dataId,t)}dataSync(){this.throwIfDisposed();let t=Bo().readSync(this.dataId);if(this.dtype==="string")try{return t.map(e=>Qu(e))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return t}bytes(){return j(this,null,function*(){this.throwIfDisposed();let t=yield Bo().read(this.dataId);return this.dtype==="string"?t:new Uint8Array(t.buffer)})}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),Bo().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(t=!1){return Zu.print(this,t)}clone(){return this.throwIfDisposed(),Zu.clone(this)}toString(t=!1){let e=this.dataSync();return v2(e,this.shape,this.dtype,t)}cast(t){return this.throwIfDisposed(),Zu.cast(this,t)}variable(t=!0,e,o){return this.throwIfDisposed(),Bo().makeVariable(this,t,e,o)}};Object.defineProperty(at,Symbol.hasInstance,{value:r=>!!r&&r.data!=null&&r.dataSync!=null&&r.throwIfDisposed!=null});function xy(){return dp("Tensor",()=>at)}xy();var En=class extends at{constructor(t,e,o,n){super(t.shape,t.dtype,t.dataId,n),this.trainable=e,this.name=o}assign(t){if(t.dtype!==this.dtype)throw new Error(`dtype of the new value (${t.dtype}) and previous value (${this.dtype}) must match`);if(!Ur(t.shape,this.shape))throw new Error(`shape of the new value (${t.shape}) and previous value (${this.shape}) must match`);Bo().disposeTensor(this),this.dataId=t.dataId,Bo().incRef(this,null)}dispose(){Bo().disposeVariable(this),this.isDisposedInternal=!0}};Object.defineProperty(En,Symbol.hasInstance,{value:r=>r instanceof at&&r.assign!=null&&r.assign instanceof Function});var _2=function(r){return r.float32="float32",r.int32="int32",r.bool="int32",r.complex64="complex64",r}(_2||{}),k2=function(r){return r.float32="float32",r.int32="int32",r.bool="bool",r.complex64="complex64",r}(k2||{}),I2=function(r){return r.float32="float32",r.int32="float32",r.bool="float32",r.complex64="complex64",r}(I2||{}),T2=function(r){return r.float32="complex64",r.int32="complex64",r.bool="complex64",r.complex64="complex64",r}(T2||{}),YV={float32:I2,int32:_2,bool:k2,complex64:T2};function It(r,t){if(r==="string"||t==="string"){if(r==="string"&&t==="string")return"string";throw new Error(`Can not upcast ${r} with ${t}`)}return YV[r][t]}function Nn(r){return It(r,"int32")}function wm(r){return r!=null&&typeof r=="object"&&"texture"in r&&r.texture instanceof WebGLTexture}function Cm(r){return typeof GPUBuffer<"u"&&r!=null&&typeof r=="object"&&"buffer"in r&&r.buffer instanceof GPUBuffer}function Ge(r,t){if(r.dtype===t.dtype)return[r,t];let e=It(r.dtype,t.dtype);return[r.cast(e),t.cast(e)]}function E2(r,t){D(r.dtype===t.dtype,()=>`The dtypes of the first(${r.dtype}) and second(${t.dtype}) input must match`)}function _m(r){let t=[];return N2(r,t,new Set),t}function N2(r,t,e){if(r==null)return;if(r instanceof at){t.push(r);return}if(!QV(r))return;let o=r;for(let n in o){let i=o[n];e.has(i)||(e.add(i),N2(i,t,e))}}function QV(r){return Array.isArray(r)||typeof r=="object"}function yy(r){return r.kernelName!=null}var km=class{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(t=>t.name)))}}}dispose(){for(let t in this.registeredVariables)this.registeredVariables[t].dispose()}},ZV=(()=>{class r{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new km}ready(){return j(this,null,function*(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;let e=this.getSortedBackends();for(let o=0;o<e.length;o++){let n=e[o];if(yield this.initializeBackend(n).success){yield this.setBackend(n);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")})}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){let{name:e,asyncInit:o}=this.initializeBackendsAndReturnBest();if(o)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry))if(e in this.registryFactory){let{asyncInit:o}=this.initializeBackend(e);if(o)return null}else return null;return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,o,n=1){return e in this.registryFactory?(Tn(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:o,priority:n},!0)}setBackend(e){return j(this,null,function*(){if(this.registryFactory[e]==null)throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,this.registry[e]==null){this.backendInstance=null;let{success:o,asyncInit:n}=this.initializeBackend(e);if(!(n?yield o:o))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new bm(this.backendInstance),!0})}setupRegisteredKernels(){cy(this.backendName).forEach(o=>{o.setupFunc!=null&&o.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){cy(e).forEach(n=>{n.disposeFunc!=null&&n.disposeFunc(this.registry[e])})}initializeBackend(e){let o=this.registryFactory[e];if(o==null)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{let n=o.factory();if(n&&!(n instanceof Cn)&&typeof n.then=="function"){let i=++this.pendingBackendInitId,s=n.then(a=>i<this.pendingBackendInitId?!1:(this.registry[e]=a,this.pendingBackendInit=null,!0)).catch(a=>(i<this.pendingBackendInitId||(this.pendingBackendInit=null,Tn(`Initialization of backend ${e} failed`),Tn(a.stack||a.message)),!1));return this.pendingBackendInit=s,{success:s,asyncInit:!0}}else return this.registry[e]=n,{success:!0,asyncInit:!1}}catch(n){return Tn(`Initialization of backend ${e} failed`),Tn(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,o)=>this.registryFactory[o].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){let e=this.getSortedBackends();for(let o=0;o<e.length;o++){let n=e[o],{success:i,asyncInit:s}=this.initializeBackend(n);if(s||i)return{name:n,asyncInit:s}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,o){let n=this.state.tensorInfo.get(o),i=n.backend,s=this.readSync(o),a=i.refCount(o);i.disposeData(o,!0),n.backend=e,e.move(o,s,n.shape,n.dtype,a),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,o){let n=null;if(o==null){if(typeof e!="function")throw new Error("Please provide a function to tidy()");o=e}else{if(typeof e!="string"&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof o!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");n=e}let i;return this.scopedRun(()=>this.startScope(n),()=>this.endScope(i),()=>(i=o(),i instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),i))}scopedRun(e,o,n){e();try{let i=n();return o(),i}catch(i){throw o(),i}}nextTensorId(){return r.nextTensorId++}nextVariableId(){return r.nextVariableId++}clone(e){let o=A.runKernel(In,{x:e}),n={x:e},i=a=>({x:()=>{let l="float32",u={x:a},c={dtype:l};return A.runKernel(kn,u,c)}}),s=[];return this.addTapeNode(this.state.activeScope.name,n,[o],i,s,{}),o}runKernel(e,o,n){if(this.backendName==null&&this.backend,!(Ku(e,this.backendName)!=null))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:o,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,o,n){let i=this.backend.numDataIds(),s=0;n.forEach(u=>{s+=u.dtype==="complex64"?3:1});let a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],l=i-o-s-a;if(l>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${l} data ids) after running '${e}'`)}runKernelFunc(e){let o,n=[],i=this.isTapeOn(),s=this.state.numBytes,a=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let l;this.backendName==null&&this.backend;let u,c=yy(e)?e.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(yy(e)){let{kernelName:g,inputs:x,attrs:y}=e;this.backendName==null&&this.backend;let b=Ku(g,this.backendName);D(b!=null,()=>`Cannot find registered kernel '${g}' for backend '${this.backendName}'`),l=()=>{let I=this.backend.numDataIds();u=b.kernelFunc({inputs:x,attrs:y,backend:this.backend});let N=Array.isArray(u)?u:[u];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(g,I,N);let F=N.map(B=>B.rank!=null?B:this.makeTensorFromTensorInfo(B));if(i){let B=this.getTensorsForGradient(g,x,F);n=this.saveTensorsForBackwardMode(B)}return F}}else{let{forwardFunc:g}=e,x=y=>{i&&(n=y.map(b=>this.keep(this.clone(b))))};l=()=>{let y=this.backend.numDataIds();u=this.tidy(()=>g(this.backend,x));let b=Array.isArray(u)?u:[u];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(c,y,b),b}}let{inputs:p,attrs:d}=e,m=yy(e)?null:e.backwardsFunc,f;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?o=l():(f=this.profiler.profileKernel(c,p,()=>l()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(f),o=f.outputs)}),i&&this.addTapeNode(c,p,o,m,n,d),this.state.profiling&&this.state.activeProfile.kernels.push({name:c,bytesAdded:this.state.numBytes-s,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-a,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(p).map(g=>p[g]!=null?p[g].shape:null),outputShapes:o.map(g=>g.shape),kernelTimeMs:f.timeMs,extraInfo:f.extraInfo}),Array.isArray(u)?o:o[0]}saveTensorsForBackwardMode(e){return e.map(n=>this.keep(this.clone(n)))}getTensorsForGradient(e,o,n){let i=uy(e);if(i!=null){let s=i.inputsToSave||[],a=i.outputsToSave||[],l;i.saveAllInputs?(D(Array.isArray(o),()=>"saveAllInputs is true, expected inputs to be an array."),l=Object.keys(o).map(c=>o[c])):l=s.map(c=>o[c]);let u=n.filter((c,p)=>a[p]);return l.concat(u)}return[]}makeTensor(e,o,n,i){if(e==null)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",i=i||this.backend;let s=e;n==="string"&&Da(e[0])&&(s=e.map(u=>Yu(u)));let a=i.write(s,o,n),l=new at(o,n,a,this.nextTensorId());if(this.trackTensor(l,i),n==="string"){let u=this.state.tensorInfo.get(a),c=iy(s);this.state.numBytes+=c-u.bytes,u.bytes=c}return l}makeTensorFromDataId(e,o,n,i){n=n||"float32";let s={dataId:e,shape:o,dtype:n};return this.makeTensorFromTensorInfo(s,i)}makeTensorFromTensorInfo(e,o){let{dataId:n,shape:i,dtype:s}=e,a=new at(i,s,n,this.nextTensorId());return this.trackTensor(a,o),a}makeVariable(e,o=!0,n,i){n=n||this.nextVariableId().toString(),i!=null&&i!==e.dtype&&(e=e.cast(i));let s=new En(e,o,n,this.nextTensorId());if(this.state.registeredVariables[s.name]!=null)throw new Error(`Variable with name ${s.name} was already registered`);return this.state.registeredVariables[s.name]=s,this.incRef(s,this.backend),s}trackTensor(e,o){this.state.numTensors++,e.dtype==="string"&&this.state.numStringTensors++;let n=0;e.dtype!=="complex64"&&e.dtype!=="string"&&(n=e.size*Aa(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:o||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof En||this.track(e)}incRef(e,o){this.trackTensor(e,o),this.backend.incRef(e.dataId)}removeDataId(e,o){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===o&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;let o=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,e.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=o.bytes),e.dtype!=="complex64"&&e.dtype!=="string"){let n=e.size*Aa(e.dtype);this.state.numBytes-=n}o.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,o.backend)}disposeVariables(){for(let e in this.state.registeredVariables){let o=this.state.registeredVariables[e];this.disposeVariable(o)}}disposeVariable(e){this.disposeTensor(e),this.state.registeredVariables[e.name]!=null&&delete this.state.registeredVariables[e.name]}memory(){let e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,e.reasons==null&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}profile(e){return j(this,null,function*(){this.state.profiling=!0;let o=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=yield e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(i=>i.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-o,this.state.activeProfile.newTensors=this.state.numTensors-n;for(let i of this.state.activeProfile.kernels)i.kernelTimeMs=yield i.kernelTimeMs,i.extraInfo=yield i.extraInfo;return this.state.activeProfile})}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(e,o,n,i,s,a){let l={id:this.state.nextTapeNodeId++,kernelName:e,inputs:o,outputs:n,saved:s},u=uy(e);u!=null&&(i=u.gradFunc),i!=null&&(l.gradient=c=>(c=c.map((p,d)=>{if(p==null){let m=n[d],f=La(m.size,m.dtype);return this.makeTensor(f,m.shape,m.dtype)}return p}),i(c.length>1?c:c[0],s,a))),this.state.activeTape.push(l)}keep(e){return e.kept=!0,e}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){let o={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(o.name=e),this.state.scopeStack.push(o),this.state.activeScope=o}endScope(e){let o=_m(e),n=new Set(o.map(s=>s.id));for(let s=0;s<this.state.activeScope.track.length;s++){let a=this.state.activeScope.track[s];!a.kept&&!n.has(a.id)&&a.dispose()}let i=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],o.forEach(s=>{!s.kept&&s.scopeId===i.id&&this.track(s)})}gradients(e,o,n,i=!1){if(D(o.length>0,()=>"gradients() received an empty list of xs."),n!=null&&n.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);let s=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));D(s instanceof at,()=>"The result y returned by f() must be a tensor.");let a=g2(this.state.activeTape,o,s);if(!i&&a.length===0&&o.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{let l={};l[s.id]=n??JV(s.shape),x2(l,a,c=>this.tidy(c),e5);let u=o.map(c=>l[c.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(c=>{for(let p of c.saved)p.dispose()}),this.state.activeTape=null),{value:s,grads:u}})}customGrad(e){return D(Fa(e),()=>"The f passed in customGrad(f) must be a function."),(...o)=>{D(o.every(l=>l instanceof at),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let n,i={};o.forEach((l,u)=>{i[u]=l});let s=(l,u)=>(n=e(...o,u),D(n.value instanceof at,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),D(Fa(n.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),n.value),a=(l,u)=>{let c=n.gradFunc(l,u),p=Array.isArray(c)?c:[c];D(p.length===o.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),D(p.every(m=>m instanceof at),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");let d={};return p.forEach((m,f)=>{d[f]=()=>m}),d};return this.runKernelFunc({forwardFunc:s,backwardsFunc:a,inputs:i})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,o){return this.state.tensorInfo.get(e).backend.readToGPU(e,o)}time(e){return j(this,null,function*(){let o=Es(),n=yield this.backend.time(e);return n.wallMs=Es()-o,n})}track(e){return this.state.activeScope!=null&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new km;for(let e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}return r.nextTensorId=0,r.nextVariableId=0,r})();function JV(r){let t=cp(Ke(r),"float32");return A.makeTensor(t,r,"float32")}function vy(){let r=ly();if(r._tfengine==null){let t=new pp(r);r._tfengine=new ZV(t)}return QS(r._tfengine.ENV),S2(()=>r._tfengine),r._tfengine}var A=vy();function e5(r,t){let e={a:r,b:t};return A.runKernel(rn,e)}var Ni={};dt(Ni,{isBrowser:()=>Sy,isMobile:()=>o5,mockIsMobile:()=>r5});function t5(){return typeof navigator<"u"&&navigator!=null}var by;function r5(r){by=r}function o5(r){if(by!==void 0)return by;if(r||t5()){if(r||(r=navigator),r.product==="ReactNative")return!0;let t=r.userAgent||r.vendor||(typeof window<"u"?window.opera:"");if(!t){let e=r;return e.userAgentData&&e.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function Sy(){return typeof window<"u"&&window.document!=null||typeof WorkerGlobalScope<"u"}var Er=G();Er.registerFlag("DEBUG",()=>!1,r=>{r&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});Er.registerFlag("IS_BROWSER",()=>Sy());Er.registerFlag("IS_NODE",()=>typeof process<"u"&&typeof process.versions<"u"&&typeof process.versions.node<"u");Er.registerFlag("IS_CHROME",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));Er.registerFlag("IS_SAFARI",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor));Er.registerFlag("PROD",()=>!1);Er.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>Er.getBool("DEBUG"));Er.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);Er.registerFlag("IS_TEST",()=>!1);Er.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>Er.getBool("DEBUG"));Er.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);Er.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1);Er.registerFlag("USE_SETTIMEOUTCUSTOM",()=>!1);function Nr(r,t){let e=r;if(ur(r))return t==="string"?[]:[r.length];if(wm(r)){let n=r.channels||"RGBA";return[r.height,r.width*n.length]}else if(Cm(r))return[r.buffer.size/(t==null?4:Aa(t))];if(!Array.isArray(r))return[];let o=[];for(;Array.isArray(e)||ur(e)&&t!=="string";)o.push(e.length),e=e[0];return Array.isArray(r)&&G().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&$2(r,o,[]),o}function $2(r,t,e){if(e=e||[],!Array.isArray(r)&&!ur(r)){D(t.length===0,()=>`Element arr[${e.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`);return}D(t.length>0,()=>`Element arr[${e.join("][")}] should be a primitive, but is an array of ${r.length} elements`),D(r.length===t[0],()=>`Element arr[${e.join("][")}] should have ${t[0]} elements, but has ${r.length} elements`);let o=t.slice(1);for(let n=0;n<r.length;++n)$2(r[n],o,e.concat(n))}function R2(r,t,e,o){if(r!=="string_or_numeric"){if(r==null)throw new Error("Expected dtype cannot be null.");if(r!=="numeric"&&r!==t||r==="numeric"&&t==="string")throw new Error(`Argument '${e}' passed to '${o}' must be ${r} tensor, but got ${t} tensor`)}}function C(r,t,e,o="numeric"){if(r instanceof xy())return R2(o,r.dtype,t,e),r;let n=ni(r);if(n!=="string"&&["bool","int32","float32"].indexOf(o)>=0&&(n=o),R2(o,n,t,e),r==null||!ur(r)&&!Array.isArray(r)&&typeof r!="number"&&typeof r!="boolean"&&typeof r!="string"){let l=r==null?"null":r.constructor.name;throw new Error(`Argument '${t}' passed to '${e}' must be a Tensor or TensorLike, but got '${l}'`)}let i=Nr(r,n);!ur(r)&&!Array.isArray(r)&&(r=[r]);let a=n!=="string"?Xu(r,n):Ei(r,[],!0);return A.makeTensor(a,i,n)}function Ns(r,t,e,o="numeric"){if(!Array.isArray(r))throw new Error(`Argument ${t} passed to ${e} must be a \`Tensor[]\` or \`TensorLike[]\``);return r.map((i,s)=>C(i,`${t}[${s}]`,e,o))}var wy="__op";function E(r){let t=Object.keys(r);if(t.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let e=t[0],o=r[e];e.endsWith("_")&&(e=e.substring(0,e.length-1)),e=e+wy;let n=(...i)=>{A.startScope(e);try{let s=o(...i);return ms(s)&&console.error("Cannot return a Promise inside of tidy."),A.endScope(s),s}catch(s){throw A.endScope(null),s}};return Object.defineProperty(n,"name",{value:e,configurable:!0}),n}function n5(r,t){let e=C(r,"real","complex"),o=C(t,"imag","complex");Nt(e.shape,o.shape,`real and imag shapes, ${e.shape} and ${o.shape}, must match in call to tf.complex().`);let n={real:e,imag:o};return A.runKernel(hs,n)}var Rr=E({complex_:n5});function vr(r,t,e,o){if(o==null)o=ni(r);else if(o==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(Cm(r)||wm(r)){if(o!=="float32"&&o!=="int32")throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${o}.`);return A.backend.createTensorFromGPUData(r,t||e,o)}if(!ur(r)&&!Array.isArray(r)&&typeof r!="number"&&typeof r!="boolean"&&typeof r!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(t!=null){vt(t);let n=Ke(t),i=Ke(e);D(n===i,()=>`Based on the provided shape, [${t}], the tensor should have ${n} values but has ${i}`);for(let s=0;s<e.length;++s){let a=e[s],l=s===e.length-1?a!==Ke(t.slice(s)):!0;D(e[s]===t[s]||!l,()=>`Error creating a new Tensor. Inferred shape (${e}) does not match the provided shape (${t}). `)}}return!ur(r)&&!Array.isArray(r)&&(r=[r]),t=t||e,r=o!=="string"?Xu(r,o):Ei(r,[],!0),A.makeTensor(r,t,o)}function br(r,t,e){let o=Nr(r,e);return vr(r,t,o,e)}var Rn={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};var er=class r{static join(t){return new r(t).slice()}constructor(t){if(this.shards=[],this.previousShardIndex=0,t==null||(t instanceof Array||(t=[t]),t=t.map(o=>ur(o)?o.buffer:o),t.length===0))return;this.bufferUniformSize=t[0].byteLength;let e=0;for(let o=0;o<t.length;o++){let n=t[o];o!==t.length-1&&n.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);let i=e+n.byteLength;this.shards.push({buffer:n,start:e,end:i}),e=i}this.shards.length===0&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(t=0,e=this.byteLength){if(this.shards.length===0)return new ArrayBuffer(0);if(t=isNaN(Number(t))?0:t,e=isNaN(Number(e))?0:e,t=Math.max(0,t),e=Math.min(this.byteLength,e),e<=t)return new ArrayBuffer(0);let o=this.findShardForByte(t);if(o===-1)throw new Error(`Could not find start shard for byte ${t}`);let n=e-t,i=new ArrayBuffer(n),s=new Uint8Array(i),a=0;for(let l=o;l<this.shards.length;l++){let u=this.shards[l],p=t+a-u.start,d=a,f=Math.min(e,u.end)-u.start,g=new Uint8Array(u.buffer,p,f-p);if(s.set(g,d),a+=g.length,e<u.end)break}return i}findShardForByte(t){if(this.shards.length===0||t<0||t>=this.byteLength)return-1;if(this.bufferUniformSize!=null)return this.previousShardIndex=Math.floor(t/this.bufferUniformSize),this.previousShardIndex;function e(n){return t<n.start?-1:t>=n.end?1:0}if(e(this.shards[this.previousShardIndex])===0)return this.previousShardIndex;let o=i5(this.shards,e);return o===-1?-1:(this.previousShardIndex=o,this.previousShardIndex)}};function i5(r,t){let e=0,o=r.length;for(;e<=o;){let n=Math.floor((o-e)/2)+e,i=t(r[n]);if(i===0)return n;i<0?o=n:e=n+1}return-1}function s5(r){G().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(r+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}C2(s5);function cr(){return A}function Ne(r,t){return A.tidy(r,t)}function Xe(r){_m(r).forEach(e=>e.dispose())}function $r(r){return A.keep(r)}function Cy(r){return A.setBackend(r)}function _y(){return A.ready()}function on(){return A.backendName}function Im(r,t,e=1){return A.registerBackend(r,t,e)}function Ri(){return A.backend}var $i=4;function D2(r,t){return j(this,null,function*(){let e=[],o=[],n=Array.isArray(r)?r.map(s=>s.name):Object.keys(r);for(let s=0;s<n.length;++s){let a=n[s],l=Array.isArray(r)?r[s].tensor:r[a];if(l.dtype!=="float32"&&l.dtype!=="int32"&&l.dtype!=="bool"&&l.dtype!=="string"&&l.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${a}': ${l.dtype}`);let u={name:a,shape:l.shape,dtype:l.dtype};if(l.dtype==="string"){let c=new Promise(p=>j(null,null,function*(){let d=yield l.bytes(),m=d.reduce((x,y)=>x+y.length,0)+$i*d.length,f=new Uint8Array(m),g=0;for(let x=0;x<d.length;x++){let y=d[x],b=new Uint8Array(new Uint32Array([y.length]).buffer);f.set(b,g),g+=$i,f.set(y,g),g+=y.length}p(f)}));o.push(c)}else o.push(l.data());t!=null&&(u.group=t),e.push(u)}let i=yield Promise.all(o);return{data:u5(i),specs:e}})}function Tm(r,t){let e=new er(r),o={},n=0;for(let i of t){let s=a5(i,(a,l)=>e.slice(n+a,n+l));o[i.name]=F2(i,e.slice(n,n+s)),n+=s}return o}function a5(r,t){let e=Ke(r.shape),o;if("quantization"in r){let n=r.quantization;o=Rn[n.dtype]}else if(r.dtype==="string"){let n=0;for(let i=0;i<e;i++)n+=$i+new Uint32Array(t(n,n+$i))[0];return n}else o=Rn[r.dtype];return e*o}function l5(r,t){return j(this,null,function*(){let e=Ke(r.shape),o;if("quantization"in r){let n=r.quantization;o=Rn[n.dtype]}else if(r.dtype==="string"){let n=0;for(let i=0;i<e;i++)n+=$i+new Uint32Array(yield t(n,n+$i))[0];return n}else o=Rn[r.dtype];return e*o})}function F2(r,t){let e=r.name,o=r.dtype,n=r.shape,i=Ke(n),s,a=0;if("quantization"in r){let l=r.quantization;if(l.dtype==="uint8"||l.dtype==="uint16"){if(!("min"in l&&"scale"in l))throw new Error(`Weight ${r.name} with quantization ${l.dtype} doesn't have corresponding metadata min and scale.`)}else if(l.dtype==="float16"){if(o!=="float32")throw new Error(`Weight ${r.name} is quantized with ${l.dtype} which only supports weights of type float32 not ${o}.`)}else throw new Error(`Weight ${r.name} has unknown quantization dtype ${l.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);let u=Rn[l.dtype],c=l.dtype==="uint8"?new Uint8Array(t):new Uint16Array(t);if(o==="float32")if(l.dtype==="uint8"||l.dtype==="uint16"){s=new Float32Array(c.length);for(let p=0;p<c.length;p++){let d=c[p];s[p]=d*l.scale+l.min}}else if(l.dtype==="float16")s=m5()(c);else throw new Error(`Unsupported quantization type ${l.dtype} for weight type float32.`);else if(o==="int32"){if(l.dtype!=="uint8"&&l.dtype!=="uint16")throw new Error(`Unsupported quantization type ${l.dtype} for weight type int32.`);s=new Int32Array(c.length);for(let p=0;p<c.length;p++){let d=c[p];s[p]=Math.round(d*l.scale+l.min)}}else throw new Error(`Unsupported dtype in weight '${e}': ${o}`);a+=i*u}else if(o==="string"){let l=Ke(r.shape);s=[];for(let u=0;u<l;u++){let c=new Uint32Array(t.slice(a,a+$i))[0];a+=$i;let p=new Uint8Array(t.slice(a,a+c));s.push(p),a+=c}}else{let l=Rn[o];if(o==="float32")s=new Float32Array(t);else if(o==="int32")s=new Int32Array(t);else if(o==="bool")s=new Uint8Array(t);else if(o==="complex64"){s=new Float32Array(t);let u=new Float32Array(s.length/2),c=new Float32Array(s.length/2);for(let f=0;f<u.length;f++)u[f]=s[f*2],c[f]=s[f*2+1];let p=br(u,n,"float32"),d=br(c,n,"float32"),m=Rr(p,d);return p.dispose(),d.dispose(),m}else throw new Error(`Unsupported dtype in weight '${e}': ${o}`);a+=i*l}return br(s,n,o)}function P2(r,t,e){return j(this,null,function*(){let o=new Uint8Array(t);for(;o.byteLength<e;){let{done:n,value:i}=yield r.read();if(n&&i==null){let a=e-o.byteLength;throw new Error(`Reader is done but ${a} bytes are still expected`)}let s=new Uint8Array(o.length+i.byteLength);s.set(o,0),s.set(new Uint8Array(i),o.length),o=s}return o.buffer})}function Em(r,t){return j(this,null,function*(){let e={},o=r.getReader(),n=new ArrayBuffer(0);for(let i of t){let s=yield l5(i,(u,c)=>j(null,null,function*(){return n=yield P2(o,n,c),n.slice(u,c)}));n=yield P2(o,n,s);let a=n.slice(0,s);n=n.slice(s);let l=F2(i,a);if(e[i.name]=l,on()==="webgpu"){let u=Ri();"uploadToGPU"in u&&Ke(l.shape)>=G().get("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD")&&u.uploadToGPU(l.dataId)}}return e})}function u5(r){if(r===null)throw new Error(`Invalid input value: ${JSON.stringify(r)}`);let t=0,e=[];r.forEach(i=>{if(t+=i.byteLength,e.push(i.byteLength===i.buffer.byteLength?i:new i.constructor(i)),!(i instanceof Float32Array||i instanceof Int32Array||i instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${i.constructor.name}`)});let o=new Uint8Array(t),n=0;return e.forEach(i=>{o.set(new Uint8Array(i.buffer),n),n+=i.byteLength}),o.buffer}var ky=typeof Buffer<"u"&&(typeof Blob>"u"||typeof atob>"u"||typeof btoa>"u");function A2(r){return ky?Buffer.byteLength(r,"utf8"):new Blob([r]).size}function O2(r){if(ky)return Buffer.from(r).toString("base64");let t=new Uint8Array(r),e="";for(let o=0,n=t.length;o<n;o++)e+=String.fromCharCode(t[o]);return btoa(e)}function L2(r){if(ky){let o=Buffer.from(r,"base64");return o.buffer.slice(o.byteOffset,o.byteOffset+o.byteLength)}let t=atob(r),e=new Uint8Array(t.length);for(let o=0;o<t.length;++o)e.set([t.charCodeAt(o)],o);return e.buffer}function M2(r){return er.join(r)}function Iy(r){let t="/";for(r=r.trim();r.endsWith(t);)r=r.slice(0,r.length-1);let e=r.split(t);return e[e.length-1]}function Nm(r,t){let e={modelTopology:r.modelTopology,format:r.format,generatedBy:r.generatedBy,convertedBy:r.convertedBy,weightsManifest:t};return r.signature!=null&&(e.signature=r.signature),r.userDefinedMetadata!=null&&(e.userDefinedMetadata=r.userDefinedMetadata),r.modelInitializer!=null&&(e.modelInitializer=r.modelInitializer),r.initializerSignature!=null&&(e.initializerSignature=r.initializerSignature),r.trainingConfig!=null&&(e.trainingConfig=r.trainingConfig),e}function Ty(r,t,e){let o={modelTopology:r.modelTopology,format:r.format,generatedBy:r.generatedBy,convertedBy:r.convertedBy};if(r.trainingConfig!=null&&(o.trainingConfig=r.trainingConfig),r.weightsManifest!=null){if(!t)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!e)throw new Error("modelJSON has weightsManifest but weightData is null");o.weightSpecs=t,o.weightData=e}return r.signature!=null&&(o.signature=r.signature),r.userDefinedMetadata!=null&&(o.userDefinedMetadata=r.userDefinedMetadata),r.modelInitializer!=null&&(o.modelInitializer=r.modelInitializer),r.initializerSignature!=null&&(o.initializerSignature=r.initializerSignature),o}function Ju(r,t){return j(this,null,function*(){let e,o;return r.weightsManifest!=null&&([e,o]=yield t(r.weightsManifest)),Ty(r,e,o)})}function nn(r){if(r.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:r.modelTopology==null?0:A2(JSON.stringify(r.modelTopology)),weightSpecsBytes:r.weightSpecs==null?0:A2(JSON.stringify(r.weightSpecs)),weightDataBytes:r.weightData==null?0:new er(r.weightData).byteLength}}function yp(r){let t=[];for(let e of r)t.push(...e.weights);return t}function c5(){let r=e=>{let o=e<<13,n=0;for(;(o&8388608)===0;)n-=8388608,o<<=1;return o&=-8388609,n+=947912704,o|n},t=new Uint32Array(2048);t[0]=0;for(let e=1;e<1024;e++)t[e]=r(e);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}function p5(){let r=new Uint32Array(64);r[0]=0,r[31]=1199570944,r[32]=2147483648,r[63]=3347054592;for(let t=1;t<31;t++)r[t]=t<<23;for(let t=33;t<63;t++)r[t]=2147483648+(t-32<<23);return r}function d5(){let r=new Uint32Array(64);for(let t=0;t<64;t++)r[t]=1024;return r[0]=r[32]=0,r}function m5(){let r=c5(),t=p5(),e=d5();return o=>{let n=new ArrayBuffer(4*o.length),i=new Uint32Array(n);for(let s=0;s<o.length;s++){let a=o[s],l=r[e[a>>10]+(a&1023)]+t[a>>10];i[s]=l}return new Float32Array(n)}}var Ht=class r{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return r.instance==null&&(r.instance=new r),r.instance}static registerSaveRouter(t){r.getInstance().saveRouters.push(t)}static registerLoadRouter(t){r.getInstance().loadRouters.push(t)}static getSaveHandlers(t){return r.getHandlers(t,"save")}static getLoadHandlers(t,e){return r.getHandlers(t,"load",e)}static getHandlers(t,e,o){let n=[];return(e==="load"?r.getInstance().loadRouters:r.getInstance().saveRouters).forEach(s=>{let a=s(t,o);a!==null&&n.push(a)}),n}},B2=r=>Ht.registerSaveRouter(r),V2=r=>Ht.registerLoadRouter(r),W2=r=>Ht.getSaveHandlers(r),z2=(r,t)=>Ht.getLoadHandlers(r,t);var Ey="tensorflowjs",Ny=1,Rs="models_store",Pi="model_info_store";function U2(){if(!G().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");let r=typeof window>"u"?self:window,t=r.indexedDB||r.mozIndexedDB||r.webkitIndexedDB||r.msIndexedDB||r.shimIndexedDB;if(t==null)throw new Error("The current browser does not appear to support IndexedDB.");return t}function Ry(r){let t=r.result;t.createObjectStore(Rs,{keyPath:"modelPath"}),t.createObjectStore(Pi,{keyPath:"modelPath"})}var $s=(()=>{class r{constructor(e){if(this.indexedDB=U2(),e==null||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}save(e){return j(this,null,function*(){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)})}load(){return j(this,null,function*(){return this.databaseAction(this.modelPath)})}databaseAction(e,o){return new Promise((n,i)=>{let s=this.indexedDB.open(Ey,Ny);s.onupgradeneeded=()=>Ry(s),s.onsuccess=()=>{let a=s.result;if(o==null){let l=a.transaction(Rs,"readonly"),c=l.objectStore(Rs).get(this.modelPath);c.onsuccess=()=>{if(c.result==null)return a.close(),i(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));n(c.result.modelArtifacts)},c.onerror=p=>(a.close(),i(c.error)),l.oncomplete=()=>a.close()}else{o.weightData=er.join(o.weightData);let l=nn(o),u=a.transaction(Pi,"readwrite"),c=u.objectStore(Pi),p;try{p=c.put({modelPath:this.modelPath,modelArtifactsInfo:l})}catch(m){return i(m)}let d;p.onsuccess=()=>{d=a.transaction(Rs,"readwrite");let m=d.objectStore(Rs),f;try{f=m.put({modelPath:this.modelPath,modelArtifacts:o,modelArtifactsInfo:l})}catch(g){return i(g)}f.onsuccess=()=>n({modelArtifactsInfo:l}),f.onerror=g=>{c=u.objectStore(Pi);let x=c.delete(this.modelPath);x.onsuccess=()=>(a.close(),i(f.error)),x.onerror=y=>(a.close(),i(f.error))}},p.onerror=m=>(a.close(),i(p.error)),u.oncomplete=()=>{d==null?a.close():d.oncomplete=()=>a.close()}}},s.onerror=a=>i(s.error)})}}return r.URL_SCHEME="indexeddb://",r})();var G2=r=>G().getBool("IS_BROWSER")&&!Array.isArray(r)&&r.startsWith($s.URL_SCHEME)?f5(r.slice($s.URL_SCHEME.length)):null;Ht.registerSaveRouter(G2);Ht.registerLoadRouter(G2);function f5(r){return new $s(r)}function h5(r){return r.startsWith($s.URL_SCHEME)?r.slice($s.URL_SCHEME.length):r}var Rm=class{constructor(){this.indexedDB=U2()}listModels(){return j(this,null,function*(){return new Promise((t,e)=>{let o=this.indexedDB.open(Ey,Ny);o.onupgradeneeded=()=>Ry(o),o.onsuccess=()=>{let n=o.result,i=n.transaction(Pi,"readonly"),a=i.objectStore(Pi).getAll();a.onsuccess=()=>{let l={};for(let u of a.result)l[u.modelPath]=u.modelArtifactsInfo;t(l)},a.onerror=l=>(n.close(),e(a.error)),i.oncomplete=()=>n.close()},o.onerror=n=>e(o.error)})})}removeModel(t){return j(this,null,function*(){return t=h5(t),new Promise((e,o)=>{let n=this.indexedDB.open(Ey,Ny);n.onupgradeneeded=()=>Ry(n),n.onsuccess=()=>{let i=n.result,s=i.transaction(Pi,"readwrite"),a=s.objectStore(Pi),l=a.get(t),u;l.onsuccess=()=>{if(l.result==null)return i.close(),o(new Error(`Cannot find model with path '${t}' in IndexedDB.`));{let c=a.delete(t),p=()=>{u=i.transaction(Rs,"readwrite");let m=u.objectStore(Rs).delete(t);m.onsuccess=()=>e(l.result.modelArtifactsInfo),m.onerror=f=>o(l.error)};c.onsuccess=p,c.onerror=d=>(p(),i.close(),o(l.error))}},l.onerror=c=>(i.close(),o(l.error)),s.oncomplete=()=>{u==null?i.close():u.oncomplete=()=>i.close()}},n.onerror=i=>o(n.error)})})}};var $n="/",ec="tensorflowjs_models",H2="info",g5="model_topology",x5="weight_specs",y5="weight_data",v5="model_metadata";function K2(r){return{info:[ec,r,H2].join($n),topology:[ec,r,g5].join($n),weightSpecs:[ec,r,x5].join($n),weightData:[ec,r,y5].join($n),modelMetadata:[ec,r,v5].join($n)}}function q2(r){for(let t of Object.values(r))window.localStorage.removeItem(t)}function b5(r){let t=r.split($n);if(t.length<3)throw new Error(`Invalid key format: ${r}`);return t.slice(1,t.length-1).join($n)}function S5(r){return r.startsWith(Ps.URL_SCHEME)?r.slice(Ps.URL_SCHEME.length):r}var Ps=(()=>{class r{constructor(e){if(!G().getBool("IS_BROWSER")||typeof window>"u"||typeof window.localStorage>"u")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,e==null||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=K2(this.modelPath)}save(e){return j(this,null,function*(){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{let o=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),i=nn(e),s=er.join(e.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(i)),this.LS.setItem(this.keys.topology,o),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,O2(s));let a={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:e.signature!=null?e.signature:void 0,userDefinedMetadata:e.userDefinedMetadata!=null?e.userDefinedMetadata:void 0,modelInitializer:e.modelInitializer!=null?e.modelInitializer:void 0,initializerSignature:e.initializerSignature!=null?e.initializerSignature:void 0,trainingConfig:e.trainingConfig!=null?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(a)),{modelArtifactsInfo:i}}catch{throw q2(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${i.modelTopologyBytes}, weightSpecsBytes=${i.weightSpecsBytes}, weightDataBytes=${i.weightDataBytes}.`)}}})}load(){return j(this,null,function*(){let e=JSON.parse(this.LS.getItem(this.keys.info));if(e==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(e.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");let o={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(n==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);o.modelTopology=n;let i=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(i==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);o.weightSpecs=i;let s=this.LS.getItem(this.keys.modelMetadata);if(s!=null){let l=JSON.parse(s);o.format=l.format,o.generatedBy=l.generatedBy,o.convertedBy=l.convertedBy,l.signature!=null&&(o.signature=l.signature),l.userDefinedMetadata!=null&&(o.userDefinedMetadata=l.userDefinedMetadata),l.modelInitializer!=null&&(o.modelInitializer=l.modelInitializer),l.initializerSignature!=null&&(o.initializerSignature=l.initializerSignature),l.trainingConfig!=null&&(o.trainingConfig=l.trainingConfig)}let a=this.LS.getItem(this.keys.weightData);if(a==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return o.weightData=L2(a),o})}}return r.URL_SCHEME="localstorage://",r})();var j2=r=>G().getBool("IS_BROWSER")&&!Array.isArray(r)&&r.startsWith(Ps.URL_SCHEME)?w5(r.slice(Ps.URL_SCHEME.length)):null;Ht.registerSaveRouter(j2);Ht.registerLoadRouter(j2);function w5(r){return new Ps(r)}var $m=class{constructor(){D(G().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),D(typeof window>"u"||typeof window.localStorage<"u",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}listModels(){return j(this,null,function*(){let t={},e=ec+$n,o=$n+H2;for(let n=0;n<this.LS.length;++n){let i=this.LS.key(n);if(i.startsWith(e)&&i.endsWith(o)){let s=b5(i);t[s]=JSON.parse(this.LS.getItem(i))}}return t})}removeModel(t){return j(this,null,function*(){t=S5(t);let e=K2(t);if(this.LS.getItem(e.info)==null)throw new Error(`Cannot find model at path '${t}'`);let o=JSON.parse(this.LS.getItem(e.info));return q2(e),o})}};var tc="://",Vo=class r{constructor(){this.managers={}}static getInstance(){return r.instance==null&&(r.instance=new r),r.instance}static registerManager(t,e){D(t!=null,()=>"scheme must not be undefined or null."),t.endsWith(tc)&&(t=t.slice(0,t.indexOf(tc))),D(t.length>0,()=>"scheme must not be an empty string.");let o=r.getInstance();D(o.managers[t]==null,()=>`A model store manager is already registered for scheme '${t}'.`),o.managers[t]=e}static getManager(t){let e=r.getInstance().managers[t];if(e==null)throw new Error(`Cannot find model manager for scheme '${t}'`);return e}static getSchemes(){return Object.keys(r.getInstance().managers)}};function Pm(r){if(r.indexOf(tc)===-1)throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${Vo.getSchemes().join(",")}`);return{scheme:r.split(tc)[0],path:r.split(tc)[1]}}function X2(r,t,e=!1){return j(this,null,function*(){D(r!==t,()=>`Old path and new path are the same: '${r}'`);let o=Ht.getLoadHandlers(r);D(o.length>0,()=>`Copying failed because no load handler is found for source URL ${r}.`),D(o.length<2,()=>`Copying failed because more than one (${o.length}) load handlers for source URL ${r}.`);let n=o[0],i=Ht.getSaveHandlers(t);D(i.length>0,()=>`Copying failed because no save handler is found for destination URL ${t}.`),D(i.length<2,()=>`Copying failed because more than one (${o.length}) save handlers for destination URL ${t}.`);let s=i[0],a=Pm(r).scheme,l=Pm(r).path,u=a===Pm(r).scheme,c=yield n.load();e&&u&&(yield Vo.getManager(a).removeModel(l));let p=yield s.save(c);return e&&!u&&(yield Vo.getManager(a).removeModel(l)),p.modelArtifactsInfo})}function Y2(){return j(this,null,function*(){let r=Vo.getSchemes(),t={};for(let e of r){let o=yield Vo.getManager(e).listModels();for(let n in o){let i=e+tc+n;t[i]=o[n]}}return t})}function Q2(r){return j(this,null,function*(){let t=Pm(r);return Vo.getManager(t.scheme).removeModel(t.path)})}function Z2(r,t){return j(this,null,function*(){return X2(r,t,!1)})}function J2(r,t){return j(this,null,function*(){return X2(r,t,!0)})}var $y=class{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(t,e){return fetch(t,e)}now(){return performance.now()}encode(t,e){if(e!=="utf-8"&&e!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${e}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(t)}decode(t,e){return new TextDecoder(e).decode(t)}setTimeoutCustom(t,e){if(typeof window>"u"||!G().getBool("USE_SETTIMEOUTCUSTOM")){setTimeout(t,e);return}this.functionRefs.push(t),setTimeout(()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")},e),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",o=>{if(o.source===window&&o.data.name===this.messageName){o.stopPropagation();let n=this.functionRefs[o.data.index];n(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}},!0))}isTypedArray(t){return xm(t)}};if(G().get("IS_BROWSER")){G().setPlatform("browser",new $y);try{Vo.registerManager(Ps.URL_SCHEME,new $m)}catch{}try{Vo.registerManager($s.URL_SCHEME,new Rm)}catch{}}var _5={importFetch:()=>tw()},Py;var Ay=class{constructor(){this.util=rw(),this.textEncoder=new this.util.TextEncoder}fetch(t,e){return G().global.fetch!=null?G().global.fetch(t,e):(Py==null&&(Py=_5.importFetch()),Py(t,e))}now(){let t=process.hrtime();return t[0]*1e3+t[1]/1e6}encode(t,e){if(e!=="utf-8"&&e!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${e}`);return this.textEncoder.encode(t)}decode(t,e){return t.length===0?"":new this.util.TextDecoder(e).decode(t)}isTypedArray(t){return this.util.types.isFloat32Array(t)||this.util.types.isInt32Array(t)||this.util.types.isUint8Array(t)||this.util.types.isUint8ClampedArray(t)}};G().get("IS_NODE")&&!G().get("IS_BROWSER")&&G().setPlatform("node",new Ay);function Le(r,t="float32",e){return t=t||"float32",vt(r),new uo(r,t,e)}function k5(r,t){let e=C(r,"x","cast");if(!ny(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if(t==="string"&&e.dtype!=="string"||t!=="string"&&e.dtype==="string")throw new Error("Only strings can be casted to strings");let o={x:e},n={dtype:t};return A.runKernel(kn,o,n)}var Ue=E({cast_:k5});function I5(r){let e={x:C(r,"x","clone","string_or_numeric")};return A.runKernel(In,e)}var Kr=E({clone_:I5});function Am(r,t=!1){console.log(r.toString(t))}vy();var T5={buffer:Le,cast:Ue,clone:Kr,print:Am};w2(T5);function E5(r,t){let e=C(r,"a","add"),o=C(t,"b","add");[e,o]=Ge(e,o);let n={a:e,b:o};return A.runKernel(rn,n)}var fe=E({add_:E5});function N5(r,t){let e=C(r,"a","floorDiv"),o=C(t,"b","floorDiv");[e,o]=Ge(e,o);let n={a:e,b:o};return A.runKernel(ci,n)}var Dm=E({floorDiv_:N5});function R5(r,t){let e=C(r,"a","div"),o=C(t,"b","div");if([e,o]=Ge(e,o),e.dtype==="int32"&&o.dtype==="int32")return Dm(e,o);let n={a:e,b:o},i={};return A.runKernel(Cl,n,i)}var Fe=E({div_:R5});function $5(r,t){let e=C(r,"a","mul"),o=C(t,"b","mul");[e,o]=Ge(e,o);let n={a:e,b:o};return A.runKernel(yi,n)}var ae=E({mul_:$5});function P5(r){let t=C(r,"x","abs");if(t.dtype==="complex64"){let e={x:t};return A.runKernel(nl,e)}else{let e={x:t};return A.runKernel(fs,e)}}var Qt=E({abs_:P5});function A5(r){let e={x:C(r,"x","acos")};return A.runKernel(Ma,e)}var ow=E({acos_:A5});function D5(r){let e={x:C(r,"x","acosh")};return A.runKernel(Ba,e)}var nw=E({acosh_:D5});function F5(r){D(Array.isArray(r),()=>"The argument passed to tf.addN() must be a list of tensors"),D(r.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${r.length}`);let t=r.map((n,i)=>C(n,`tensors${i}`,"addN")),e=t[0];t.forEach(n=>{if(n.dtype!==e.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),t.forEach(n=>{if(!Ur(n.shape,e.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});let o=t;return A.runKernel(Va,o)}var iw=E({addN_:F5});function O5(r,t=null,e=!1){let n={x:C(r,"x","all","bool")},i={axis:t,keepDims:e};return A.runKernel(Wa,n,i)}var sw=E({all_:O5});function L5(r,t=null,e=!1){let n={x:C(r,"x","any","bool")},i={axis:t,keepDims:e};return A.runKernel(za,n,i)}var aw=E({any_:L5});function M5(r,t=0){let o={x:C(r,"x","argMax")},n={axis:t};return A.runKernel(Ua,o,n)}var Fm=E({argMax_:M5});function B5(r,t=0){let o={x:C(r,"x","argMin")},n={axis:t};return A.runKernel(Ga,o,n)}var lw=E({argMin_:B5});function V5(r){let e={x:C(r,"x","asin")};return A.runKernel(Ha,e)}var uw=E({asin_:V5});function W5(r){let e={x:C(r,"x","asinh")};return A.runKernel(Ka,e)}var cw=E({asinh_:W5});function z5(r){let e={x:C(r,"x","atan")};return A.runKernel(qa,e)}var pw=E({atan_:z5});function U5(r,t){let e=C(r,"a","atan2"),o=C(t,"b","atan2");[e,o]=Ge(e,o);let n={a:e,b:o};return A.runKernel(Xa,n)}var dw=E({atan2_:U5});function G5(r){let e={x:C(r,"x","atanh")};return A.runKernel(ja,e)}var mw=E({atanh_:G5});function H5(r,t,e,o,n="NHWC",i){let s=r[3],a=[...t,s],l=hw(n);return Fs(r,a,e,i,o,null,null,l)}function Fy(r,t,e,o,n,i,s="channelsLast"){let[a,l]=vp(t),u;if(s==="channelsLast")u=[a,l,r[3],r[3]];else if(s==="channelsFirst")u=[a,l,r[1],r[1]];else throw new Error(`Unknown dataFormat ${s}`);return Fs(r,u,e,o,n,i,!1,s)}function K5(r,t,e,o,n,i,s="NDHWC"){let[a,l,u]=Dy(t),c,p;if(s==="NDHWC")p="channelsLast",c=[a,l,u,r[4],r[4]];else if(s==="NCDHW")p="channelsFirst",c=[a,l,u,r[1],r[1]];else throw new Error(`Unknown dataFormat ${s}`);return fw(r,c,e,o,n,!1,p,i)}function Fs(r,t,e,o,n,i,s=!1,a="channelsLast"){let[l,u,c,p]=[-1,-1,-1,-1];if(a==="channelsLast")[l,u,c,p]=r;else if(a==="channelsFirst")[l,p,u,c]=r;else throw new Error(`Unknown dataFormat ${a}`);let[d,m,,f]=t,[g,x]=vp(e),[y,b]=vp(o),I=oc(d,y),N=oc(m,b),{padInfo:F,outHeight:B,outWidth:z}=X5(n,u,c,g,x,I,N,i,a),H=s?f*p:f,K;return a==="channelsFirst"?K=[l,H,B,z]:a==="channelsLast"&&(K=[l,B,z,H]),{batchSize:l,dataFormat:a,inHeight:u,inWidth:c,inChannels:p,outHeight:B,outWidth:z,outChannels:H,padInfo:F,strideHeight:g,strideWidth:x,filterHeight:d,filterWidth:m,effectiveFilterHeight:I,effectiveFilterWidth:N,dilationHeight:y,dilationWidth:b,inShape:r,outShape:K,filterShape:t}}function fw(r,t,e,o,n,i=!1,s="channelsLast",a){let[l,u,c,p,d]=[-1,-1,-1,-1,-1];if(s==="channelsLast")[l,u,c,p,d]=r;else if(s==="channelsFirst")[l,d,u,c,p]=r;else throw new Error(`Unknown dataFormat ${s}`);let[m,f,g,,x]=t,[y,b,I]=Dy(e),[N,F,B]=Dy(o),z=oc(m,N),H=oc(f,F),K=oc(g,B),{padInfo:X,outDepth:te,outHeight:ue,outWidth:pe}=Y5(n,u,c,p,y,b,I,z,H,K,a),xe=i?x*d:x,be;return s==="channelsFirst"?be=[l,xe,te,ue,pe]:s==="channelsLast"&&(be=[l,te,ue,pe,xe]),{batchSize:l,dataFormat:s,inDepth:u,inHeight:c,inWidth:p,inChannels:d,outDepth:te,outHeight:ue,outWidth:pe,outChannels:xe,padInfo:X,strideDepth:y,strideHeight:b,strideWidth:I,filterDepth:m,filterHeight:f,filterWidth:g,effectiveFilterDepth:z,effectiveFilterHeight:H,effectiveFilterWidth:K,dilationDepth:N,dilationHeight:F,dilationWidth:B,inShape:r,outShape:be,filterShape:t}}function q5(r,t,e,o,n){o==null&&(o=Oy(r,t,e));let i=r[0],s=r[1],a=bp((i-t+2*o)/e+1,n),l=bp((s-t+2*o)/e+1,n);return[a,l]}function j5(r,t,e,o,n,i){n==null&&(n=Oy(r,t[0],o[0]));let s=[0,0,0,e];for(let a=0;a<3;a++)r[a]+2*n>=t[a]&&(s[a]=bp((r[a]-t[a]+2*n)/o[a]+1,i));return s}function Oy(r,t,e,o=1){let n=oc(t,o);return Math.floor((r[0]*(e-1)-e+n)/2)}function vp(r){return typeof r=="number"?[r,r,r]:r.length===2?[r[0],r[1],1]:r}function Dy(r){return typeof r=="number"?[r,r,r]:r}function oc(r,t){return t<=1?r:r+(r-1)*(t-1)}function X5(r,t,e,o,n,i,s,a,l){let u,c,p;if(typeof r=="number"){u={top:r,bottom:r,left:r,right:r,type:r===0?"VALID":"NUMBER"};let m=q5([t,e],i,o,r,a);c=m[0],p=m[1]}else if(r==="same"){c=Math.ceil(t/o),p=Math.ceil(e/n);let d=Math.max(0,(c-1)*o+i-t),m=Math.max(0,(p-1)*n+s-e),f=Math.floor(d/2),g=d-f,x=Math.floor(m/2),y=m-x;u={top:f,bottom:g,left:x,right:y,type:"SAME"}}else if(r==="valid")u={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((t-i+1)/o),p=Math.ceil((e-s+1)/n);else if(typeof r=="object"){let d=l==="channelsLast"?r[1][0]:r[2][0],m=l==="channelsLast"?r[1][1]:r[2][1],f=l==="channelsLast"?r[2][0]:r[3][0],g=l==="channelsLast"?r[2][1]:r[3][1];u={top:d,bottom:m,left:f,right:g,type:d===0&&m===0&&f===0&&g===0?"VALID":"EXPLICIT"},c=bp((t-i+d+m)/o+1,a),p=bp((e-s+f+g)/n+1,a)}else throw Error(`Unknown padding parameter: ${r}`);return{padInfo:u,outHeight:c,outWidth:p}}function Y5(r,t,e,o,n,i,s,a,l,u,c){let p,d,m,f;if(r==="valid"&&(r=0),typeof r=="number"){p={top:r,bottom:r,left:r,right:r,front:r,back:r,type:r===0?"VALID":"NUMBER"};let x=j5([t,e,o,1],[a,l,u],1,[n,i,s],r,c);d=x[0],m=x[1],f=x[2]}else if(r==="same"){d=Math.ceil(t/n),m=Math.ceil(e/i),f=Math.ceil(o/s);let g=(d-1)*n+a-t,x=(m-1)*i+l-e,y=(f-1)*s+u-o,b=Math.floor(g/2),I=g-b,N=Math.floor(x/2),F=x-N,B=Math.floor(y/2),z=y-B;p={top:N,bottom:F,left:B,right:z,front:b,back:I,type:"SAME"}}else throw Error(`Unknown padding parameter: ${r}`);return{padInfo:p,outDepth:d,outHeight:m,outWidth:f}}function bp(r,t){if(!t)return Math.trunc(r);switch(t){case"round":return Math.round(r);case"ceil":return Math.ceil(r);case"floor":return Math.floor(r);default:throw new Error(`Unknown roundingMode ${t}`)}}function Ds(r){let[t,e,o]=vp(r);return t===1&&e===1&&o===1}function pr(r,t){return Ds(r)||Ds(t)}function sn(r){return vp(r).every(t=>t>0)}function hw(r){if(r==="NHWC")return"channelsLast";if(r==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${r}`)}function Ot(r,t,e){if(e!=null){if(typeof t=="string")throw Error(`Error in ${r}: pad must be an integer when using dimRoundingMode ${e} but got pad ${t}.`);if(typeof t=="number")D(_n(t),()=>`Error in ${r}: pad must be an integer when using dimRoundingMode ${e} but got pad ${t}.`);else if(typeof t=="object")t.forEach(o=>{o.forEach(n=>{D(_n(n),()=>`Error in ${r}: pad must be an integer when using dimRoundingMode ${e} but got pad ${n}.`)})});else throw Error(`Error in ${r}: Unknown padding parameter: ${t}`)}}function Q5(r,t){let o={x:C(r,"x","reshape","string_or_numeric")},n={shape:t};return A.runKernel(du,o,n)}var Y=E({reshape_:Q5});function Z5(r,t,e,o,n){let i=C(r,"x","avgPool","float32"),s=1;D(pr(e,s),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${e} and dilations '${s}'`);let a=i,l=!1;i.rank===3&&(l=!0,a=Y(i,[1,i.shape[0],i.shape[1],i.shape[2]])),D(a.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${a.rank}.`),Ot("avgPool",o,n);let u={x:a},c={filterSize:t,strides:e,pad:o,dimRoundingMode:n},p=A.runKernel(Ya,u,c);return p=Ue(p,i.dtype),l?Y(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var Om=E({avgPool_:Z5});function J5(r,t,e,o,n,i="NDHWC"){let s=C(r,"x","avgPool3d","float32"),a=s,l=!1;s.rank===4&&(l=!0,a=Y(s,[1,s.shape[0],s.shape[1],s.shape[2],s.shape[3]])),D(a.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${a.rank}.`),D(i==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${i}`),D(typeof e=="number"&&e>0||Array.isArray(e)&&e[0]>0&&e[1]>0&&e[2]>0,()=>`Error in avgPool3d: Stride must be > 0, but got '${e}'`),Ot("avgPool3d",o,n);let u={x:a},c={filterSize:t,strides:e,pad:o,dimRoundingMode:n,dataFormat:i},p=A.runKernel(Qa,u,c);return p=Ue(p,a.dtype),l?Y(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}var gw=E({avgPool3d_:J5});function eW(r,t=0){D(r.length>=1,()=>"Pass at least one tensor to concat");let e=Ns(r,"tensors","concat","string_or_numeric");if(e[0].dtype==="complex64"&&e.forEach(i=>{if(i.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${i.dtype}. `)}),e.length===1)return Kr(e[0]);let o=e,n={axis:t};return A.runKernel(il,o,n)}var mt=E({concat_:eW});function tW(r,t,e=!1,o=!1){let n=C(r,"a","matMul"),i=C(t,"b","matMul");[n,i]=Ge(n,i);let s={a:n,b:i},a={transposeA:e,transposeB:o};return A.runKernel(Za,s,a)}var tt=E({matMul_:tW});function rW(r){let e={x:C(r,"x","sigmoid","float32")};return A.runKernel(Si,e)}var qr=E({sigmoid_:rW});function oW(r,t,e){let o=C(r,"x","slice","string_or_numeric");if(o.rank===0)throw new Error("Slicing scalar is not possible");let n={x:o},i={begin:t,size:e};return A.runKernel(vs,n,i)}var Oe=E({slice_:oW});function nW(r){let e={x:C(r,"x","tanh","float32")};return A.runKernel(Mu,e)}var Sp=E({tanh_:nW});function iW(r,t,e,o,n,i){let s=C(r,"forgetBias","basicLSTMCell"),a=C(t,"lstmKernel","basicLSTMCell"),l=C(e,"lstmBias","basicLSTMCell"),u=C(o,"data","basicLSTMCell"),c=C(n,"c","basicLSTMCell"),p=C(i,"h","basicLSTMCell"),d=mt([u,p],1),m=tt(d,a),f=fe(m,l),g=f.shape[0],x=f.shape[1]/4,y=[g,x],b=Oe(f,[0,0],y),I=Oe(f,[0,x],y),N=Oe(f,[0,x*2],y),F=Oe(f,[0,x*3],y),B=fe(ae(qr(b),Sp(I)),ae(c,qr(fe(s,N)))),z=ae(Sp(B),qr(F));return[B,z]}var xw=E({basicLSTMCell_:iW});function sW(r,t,e){let o=C(r,"x","batchToSpaceND"),n=t.reduce((a,l)=>a*l);D(o.rank>=1+t.length,()=>`input rank is ${o.rank} but should be > than blockShape.length ${t.length}`),D(e.length===t.length,()=>`crops.length is ${e.length} but should be equal to blockShape.length  ${t.length}`),D(o.shape[0]%n===0,()=>`input tensor batch is ${o.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${n}`);let i={x:o},s={blockShape:t,crops:e};return A.runKernel(Ja,i,s)}var Lm=E({batchToSpaceND_:sW});function yw(r){let t;return r.rank===0||r.rank===1?t=Y(r,[1,1,1,r.size]):r.rank===2?t=Y(r,[1,1,r.shape[0],r.shape[1]]):r.rank===3?t=Y(r,[1,r.shape[0],r.shape[1],r.shape[2]]):t=r,t}function aW(r,t,e,o,n,i){i==null&&(i=.001);let s=C(r,"x","batchNorm"),a=C(t,"mean","batchNorm"),l=C(e,"variance","batchNorm"),u;n!=null&&(u=C(n,"scale","batchNorm"));let c;o!=null&&(c=C(o,"offset","batchNorm")),D(a.rank===l.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),D(c==null||a.rank===c.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),D(u==null||a.rank===u.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let d={x:yw(s),scale:u,offset:c,mean:a,variance:l},m={varianceEpsilon:i},f=A.runKernel($l,d,m);return Y(f,s.shape)}var Ai=E({batchNorm_:aW});function lW(r,t,e,o,n,i){let s=C(r,"x","batchNorm"),a=C(t,"mean","batchNorm"),l=C(e,"variance","batchNorm"),u;n!=null&&(u=C(n,"scale","batchNorm"));let c;return o!=null&&(c=C(o,"offset","batchNorm")),D(s.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${s.rank}.`),D(a.rank===2||a.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${a.rank}.`),D(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`),u!=null&&D(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`),c!=null&&D(c.rank===2||c.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`),Ai(s,a,l,c,u,i)}var vw=E({batchNorm2d_:lW});function uW(r,t,e,o,n,i){let s=C(r,"x","batchNorm"),a=C(t,"mean","batchNorm"),l=C(e,"variance","batchNorm"),u;n!=null&&(u=C(n,"scale","batchNorm"));let c;return o!=null&&(c=C(o,"offset","batchNorm")),D(s.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${s.rank}.`),D(a.rank===3||a.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${a.rank}.`),D(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`),u!=null&&D(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`),c!=null&&D(c.rank===3||c.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`),Ai(s,a,l,c,u,i)}var bw=E({batchNorm3d_:uW});function cW(r,t,e,o,n,i){let s=C(r,"x","batchNorm"),a=C(t,"mean","batchNorm"),l=C(e,"variance","batchNorm"),u;n!=null&&(u=C(n,"scale","batchNorm"));let c;return o!=null&&(c=C(o,"offset","batchNorm")),D(s.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${s.rank}.`),D(a.rank===4||a.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${a.rank}.`),D(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`),u!=null&&D(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`),c!=null&&D(c.rank===4||c.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`),Ai(s,a,l,c,u,i)}var Sw=E({batchNorm4d_:cW});function pW(r,t,e){let o=C(r,"x","bincount"),n=C(t,"weights","bincount");D(o.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${o.dtype}`),D(e>=0,()=>`size must be non-negative, but got ${e}.`),D(n.size===o.size||n.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${o.shape}, weights shape: ${n.shape}.`);let i={x:o,weights:n},s={size:e};return A.runKernel(el,i,s)}var Mm=E({bincount_:pW});function dW(r,t){let e=C(r,"x","bitwiseAnd"),o=C(t,"y","bitwiseAnd");if(!Ur(e.shape,o.shape))throw new Error(`BitwiseAnd: Tensors must have the same shape. x: ${e.shape}, y: ${o.shape}`);if(e.dtype!=="int32"||o.dtype!=="int32")throw new Error(`BitwiseAnd: Only supports 'int32' values in tensor, found type of x: ${e.dtype} and type of y: ${o.dtype}`);let n={a:e,b:o};return A.runKernel(tl,n)}var ww=E({bitwiseAnd_:dW});function mW(r,t){let e=C(r,"s0","broadcastArgs","int32"),o=C(t,"s1","broadcastArgs","int32");if(e.rank!==1)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${e.rank}`);if(o.rank!==1)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${o.rank}`);let n={s0:e,s1:o};return A.runKernel(rl,n)}var Cw=E({broadcastArgs_:mW});function fW(r,t){let e=C(r,"broadcastTo","x"),o=e.shape;if(vt(t),t.length<e.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${e.rank}.`);if(t.length>e.rank){let u=e.shape.slice();for(;u.length<t.length;)u.unshift(1);e=Y(e,u)}let n=e.shape,i=Array.from(t);for(let u=t.length-1;u>=0;u--)if(n[u]===t[u])i[u]=1;else if(e.shape[u]!==1)throw new Error(`broadcastTo(): [${o}] cannot be broadcast to [${t}].`);if(i.map((u,c)=>u>1?c:-1).filter(u=>u>=0).length===0)return Kr(e);let a={x:e},l={reps:i};return A.runKernel(ki,a,l)}var Di=E({broadcastTo_:fW});function hW(r){let e={x:C(r,"x","ceil","float32")};return A.runKernel(ii,e)}var _w=E({ceil_:hW});function ln(r,t,e){vt(r),e=e||ni(t);let o={shape:r,value:t,dtype:e};return A.runKernel(Nl,{},o)}function gW(r,t,e){let o=C(r,"x","clipByValue");if(D(t<=e,()=>`Error in clip: min (${t}) must be less than or equal to max (${e}).`),t===e)return ln(o.shape,t,o.dtype);let n={x:o},i={clipValueMin:t,clipValueMax:e};return A.runKernel(ol,n,i)}var Bm=E({clipByValue_:gW});function xW(r){return mt(r,0)}var kw=E({concat1d_:xW});function yW(r,t){return mt(r,t)}var Iw=E({concat2d_:yW});function vW(r,t){return mt(r,t)}var Tw=E({concat3d_:vW});function bW(r,t){return mt(r,t)}var Ew=E({concat4d_:bW});function SW(r,t,e,o,n="NHWC",i=[1,1],s){let a=C(r,"x","conv2d","float32"),l=C(t,"filter","conv2d","float32"),u=a,c=!1;a.rank===3&&(c=!0,u=Y(a,[1,a.shape[0],a.shape[1],a.shape[2]])),D(u.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`),D(l.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`),Ot("conv2d",o,s);let p=n==="NHWC"?u.shape[3]:u.shape[1];D(p===l.shape[2],()=>`Error in conv2d: depth of input (${p}) must match input depth for filter ${l.shape[2]}.`),D(pr(e,i),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${e} and dilations '${i}'`),D(sn(i),()=>"Error in conv2D: Dilated rates should be larger than 0."),D(sn(e),()=>"Error in conv2D: Strides should be larger than 0.");let d={x:u,filter:l},m={strides:e,pad:o,dataFormat:n,dilations:i,dimRoundingMode:s},f=A.runKernel(sl,d,m);return c?Y(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var Fi=E({conv2d_:SW});function wW(r,t,e,o,n="NWC",i=1,s){let a=C(r,"x","conv1d"),l=C(t,"filter","conv1d"),u=a,c=!1;a.rank===2&&(c=!0,u=Y(a,[1,a.shape[0],a.shape[1]])),D(u.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`),D(l.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`),Ot("conv1d",o,s),D(u.shape[2]===l.shape[1],()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`),D(pr(e,i),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${e} and dilation '${i}'`),D(sn(i),()=>"Error in conv1D: Dilated rates should be larger than 0."),D(sn(e),()=>"Error in conv1D: Stride should be larger than 0."),D(n==="NWC",()=>`Error in conv1d: got dataFormat of ${n} but only NWC is currently supported.`);let p=Y(l,[1,l.shape[0],l.shape[1],l.shape[2]]),d=Y(u,[u.shape[0],1,u.shape[1],u.shape[2]]),x=Fi(d,p,[1,e],o,"NHWC",[1,i],s);return c?Y(x,[x.shape[2],x.shape[3]]):Y(x,[x.shape[0],x.shape[2],x.shape[3]])}var Nw=E({conv1d_:wW});function CW(r,t,e,o,n,i="NHWC",s){D(r.length===t.rank,()=>`Length of inShape (${r.length}) and rank of dy (${t.rank}) must match`);let a=r,l=t,u=!1;t.rank===3&&(u=!0,l=Y(t,[1,t.shape[0],t.shape[1],t.shape[2]]),a=[1,r[0],r[1],r[2]]),D(a.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${a.length}.`),D(l.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`),D(e.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${e.rank}`);let c=i==="NHWC"?a[3]:a[1],p=i==="NHWC"?l.shape[3]:l.shape[1];D(c===e.shape[2],()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${e.shape[2]}.`),D(p===e.shape[3],()=>`Error in conv2dDerInput: depth of output (${p}) must match output depth for filter ${e.shape[3]}.`),Ot("conv2dDerInput",n,s);let d={dy:l,filter:e},m={strides:o,pad:n,dataFormat:i,dimRoundingMode:s,inputShape:a},f=A.runKernel(ll,d,m);return u?Y(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var Vm=E({conv2DBackpropInput_:CW});function _W(r,t,e,o,n,i){let s=C(r,"x","conv2dTranspose"),a=C(t,"filter","conv2dTranspose");return Vm(e,s,a,o,n,"NHWC",i)}var Rw=E({conv2dTranspose_:_W});function kW(r,t,e,o,n="NDHWC",i=[1,1,1]){let s=C(r,"x","conv3d"),a=C(t,"filter","conv3d"),l=s,u=!1;s.rank===4&&(u=!0,l=Y(s,[1,s.shape[0],s.shape[1],s.shape[2],s.shape[3]])),D(l.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`),D(a.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${a.rank}.`),D(l.shape[4]===a.shape[3],()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${a.shape[3]}.`),D(pr(e,i),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${e} and dilations '${i}'`),D(n==="NDHWC",()=>`Error in conv3d: got dataFormat of ${n} but only NDHWC is currently supported.`),D(sn(i),()=>"Error in conv3D: Dilated rates should be larger than 0."),D(sn(e),()=>"Error in conv3D: Strides should be larger than 0.");let c={x:l,filter:a},p={strides:e,pad:o,dataFormat:n,dilations:i},d=A.runKernel(ul,c,p);return u?Y(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}var $w=E({conv3d_:kW});function IW(r,t,e,o,n){D(r.length===t.rank,()=>`Length of inShape (${r.length}) and rank of dy (${t.rank}) must match`);let i=r,s=t,a=!1;t.rank===4&&(a=!0,s=Y(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),i=[1,r[0],r[1],r[2],r[3]]);let l=i[4],u=s.shape[4];D(i.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${i.length}.`),D(s.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${s.rank}`),D(e.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${e.rank}`),D(l===e.shape[3],()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${e.shape[3]}.`),D(u===e.shape[4],()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${e.shape[4]}.`);let c={dy:s,filter:e},p={pad:n,strides:o,inputShape:i},d=A.runKernel(cl,c,p);return a?Y(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}var Pw=E({conv3DBackpropInput_:IW});function TW(r,t,e,o,n){let i=C(r,"x","conv3dTranspose"),s=C(t,"filter","conv3dTranspose");return Pw(e,i,s,o,n)}var Aw=E({conv3dTranspose_:TW});function EW(r){let e={x:C(r,"x","cos","float32")};return A.runKernel(pl,e)}var Dw=E({cos_:EW});function NW(r){let e={x:C(r,"x","cosh","float32")};return A.runKernel(dl,e)}var Fw=E({cosh_:NW});function RW(r,t=0,e=!1,o=!1){let i={x:C(r,"x","cumprod")},s={axis:t,exclusive:e,reverse:o};return A.runKernel(ml,i,s)}var Ow=E({cumprod_:RW});function $W(r,t=0,e=!1,o=!1){let i={x:C(r,"x","cumsum")},s={axis:t,exclusive:e,reverse:o};return A.runKernel(fl,i,s)}var Lw=E({cumsum_:$W});function PW(r,t,e,o=!1){let n=C(r,"x","denseBincount"),i=C(t,"weights","denseBincount");D(n.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${n.dtype}`),D(n.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${n.rank}.`),D(e>=0,()=>`size must be non-negative, but got ${e}.`),D(i.size===n.size||i.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${n.shape}, weights shape: ${i.shape}.`);let s={x:n,weights:i},a={size:e,binaryOutput:o};return A.runKernel(gl,s,a)}var Mw=E({denseBincount_:PW});function AW(r,t,e="NHWC"){let o=C(r,"x","depthToSpace","float32"),n=e==="NHWC"?o.shape[1]:o.shape[2],i=e==="NHWC"?o.shape[2]:o.shape[3],s=e==="NHWC"?o.shape[3]:o.shape[1];D(t>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`),D(n*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${n} and ${t}  for depthToSpace with input shape
    ${o.shape}`),D(i*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${i} and ${t} for depthToSpace with input shape
        ${o.shape}`),D(s%(t*t)===0,()=>`Dimension size must be evenly divisible by ${t*t} but is ${s} for depthToSpace with input shape ${o.shape}`);let a={x:o},l={blockSize:t,dataFormat:e};return A.runKernel(xl,a,l)}var Bw=E({depthToSpace_:AW});function DW(r,t,e,o,n="NHWC",i=[1,1],s){let a=C(r,"x","depthwiseConv2d","float32"),l=C(t,"filter","depthwiseConv2d","float32"),u=a,c=!1;a.rank===3&&(c=!0,u=Y(a,[1,a.shape[0],a.shape[1],a.shape[2]])),D(u.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`),D(l.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`);let p=n==="NHWC"?u.shape[3]:u.shape[1];D(p===l.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${p}) must match the inChannels dimension in filter ${l.shape[2]}.`),Ot("depthwiseConv2d",o,s);let d={x:u,filter:l},m={strides:e,pad:o,dataFormat:n,dilations:i,dimRoundingMode:s},f=A.runKernel(yl,d,m);return c?Y(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var nc=E({depthwiseConv2d_:DW});function FW(r){let e={x:C(r,"x","diag")};return A.runKernel(Sl,e)}var Vw=E({diag_:FW});function OW(r,t,e,o,n=[1,1],i="NHWC"){let s=C(r,"x","dilation2d"),a=C(t,"filter","dilation2d");D(s.rank===3||s.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${s.rank}.`),D(a.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${a.rank}.`),D(i==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${i}`);let l=s,u=!1;s.rank===3&&(l=Y(s,[1,s.shape[0],s.shape[1],s.shape[2]]),u=!0),D(l.shape[3]===a.shape[2],()=>`Error in dilation2d:  input and filter must have the same depth: ${l.shape[3]} vs ${a.shape[2]}`);let c={x:l,filter:a},p={strides:e,pad:o,dilations:n},d=A.runKernel(wl,c,p);return u?Y(d,[d.shape[1],d.shape[2],d.shape[3]]):d}var Ww=E({dilation2d_:OW});var un={};dt(un,{assertAndGetBroadcastShape:()=>Je,getBroadcastDims:()=>zw,getReductionAxes:()=>Wm});function zw(r,t){let e=r.length,o=[];for(let n=0;n<e;n++){let i=e-1-n,s=r[i]||1;(t[t.length-1-n]||1)>1&&s===1&&o.unshift(i)}return o}function Wm(r,t){let e=[];for(let o=0;o<t.length;o++){let n=r[r.length-o-1],i=t.length-o-1,s=t[i];(n==null||n===1&&s>1)&&e.unshift(i)}return e}function Je(r,t){let e=Math.max(r.length,t.length),o=new Array(e);for(let n=0;n<e;n++){let i=r[r.length-n-1];i==null&&(i=1);let s=t[t.length-n-1];if(s==null&&(s=1),i===1)o[e-n-1]=s;else if(s===1)o[e-n-1]=i;else if(i!==s){let a=`Operands could not be broadcast together with shapes ${r} and ${t}.`;throw Error(a)}else o[e-n-1]=i}return o}function LW(r,t){let e=C(r,"a","equal","string_or_numeric"),o=C(t,"b","equal","string_or_numeric");[e,o]=Ge(e,o),Je(e.shape,o.shape);let n={a:e,b:o};return A.runKernel(si,n)}var zm=E({equal_:LW});function MW(r,t,e){let o=C(t,"a","where"),n=C(e,"b","where"),i=C(r,"condition","where","bool"),s=Je(Je(i.shape,o.shape),n.shape),a=Di(i,s),l=Di(o,s),u=Di(n,s),c={condition:a,t:l,e:u};return A.runKernel(Su,c)}var co=E({where_:MW});function BW(r){let e={x:C(r,"x","zerosLike")};return A.runKernel(Uu,e)}var zt=E({zerosLike_:BW});function VW(r,t){let e=C(r,"a","div"),o=C(t,"b","div");[e,o]=Ge(e,o);let n=Fe(e,o),i=zt(n),s=zm(o,i);return co(s,i,n)}var Uw=E({divNoNan_:VW});function WW(r,t){let e=C(r,"t1","dot"),o=C(t,"t2","dot");D((e.rank===1||e.rank===2)&&(o.rank===1||o.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${e.rank} and ${o.rank}.`);let n=e.rank===1?e.size:e.shape[1],i=o.rank===1?o.size:o.shape[0];if(D(n===i,()=>`Error in dot: inner dimensions of inputs must match, but got ${n} and ${i}.`),e.rank===1&&o.rank===1){let s=Y(e,[1,-1]),a=Y(o,[-1,1]),l=tt(s,a);return Y(l,[])}else if(e.rank===1&&o.rank===2){let s=Y(e,[1,-1]),a=Y(o,[o.shape[0],o.shape[1]]),l=tt(s,a);return Y(l,[l.size])}else if(e.rank===2&&o.rank===1){let s=Y(o,[-1,1]),a=tt(e,s);return Y(a,[a.size])}else{let s=Y(o,[o.shape[0],o.shape[1]]);return tt(e,s)}}var Gw=E({dot_:WW});function zW(r,...t){let e=t.map((n,i)=>C(n,`tensors${i}`,"einsum")),o={equation:r};return A.runKernel(_l,e,o)}var Oi=E({einsum_:zW});function UW(r){let e={x:C(r,"x","elu","float32")};return A.runKernel(kl,e)}var Um=E({elu_:UW});function GW(r,t){let e=C(r,"x","ensureShape","string_or_numeric");if(!ey(e.shape,t))throw new Error(`EnsureShape: Shape of tensor ${e.shape} is not compatible with expected shape ${t}`);return r}var Hw=E({ensureShape_:GW});function HW(r){let t=C(r,"x","erf");D(t.dtype==="int32"||t.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),t.dtype==="int32"&&(t=Ue(t,"float32"));let e={x:t};return A.runKernel(Il,e)}var Kw=E({erf_:HW});function Ly(r,t){for(let e=0;e<r.length;++e)if(r[r.length-e-1]!==t-1-e)return!1;return!0}function qw(r,t,e){let o=r.length+t.length,n=[],i=0,s=0;for(let a=0;a<o;a++)e.indexOf(a)===-1?n.push(r[i++]):n.push(t[s++]);return n}function KW(r,t){let e=[],o=r.length;for(let i=0;i<o;i++)t.indexOf(i)===-1&&e.push(r[i]);let n=t.map(i=>r[i]);return[e,n]}function Pn(r,t){let e=t.map(o=>1);return qw(r,e,t)}function qW(r,t,e){D(Ly(t,e),()=>`${r} supports only inner-most axes for now. Got axes ${t} and rank-${e} input.`)}function jW(r,t){if(Ly(r,t))return null;let e=[];for(let o=0;o<t;++o)r.indexOf(o)===-1&&e.push(o);return r.forEach(o=>e.push(o)),e}function XW(r){return r.map((t,e)=>[e,t]).sort((t,e)=>t[1]-e[1]).map(t=>t[0])}function YW(r,t){let e=[];for(let o=t-r;o<t;++o)e.push(o);return e}function ZW(r,t=null,e=!1){let n={x:C(r,"x","max")},i={reductionIndices:t,keepDims:e};return A.runKernel(Kl,n,i)}var cn=E({max_:ZW});function JW(r,t=null,e=!1){let n={x:C(r,"x","min")},i={axis:t,keepDims:e};return A.runKernel(Ql,n,i)}var wp=E({min_:JW});function e6(r,t){let e=C(r,"base","pow"),o=C(t,"exp","pow");[e,o]=Ge(e,o);let n={a:e,b:o};return A.runKernel(au,n)}var An=E({pow_:e6});function Re(r,t){if((ur(r)&&t!=="string"||Array.isArray(r))&&t!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(t==="string"&&ur(r)&&!(r instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return vr(r,[],[],t)}function t6(r){let e={x:C(r,"x","sqrt","float32")};return A.runKernel(wi,e)}var Pr=E({sqrt_:t6});function r6(r){let t=C(r,"x","square"),e={};return A.runKernel("Square",{x:t},e)}var Ut=E({square_:r6});function o6(r,t=null,e=!1){let o=C(r,"x","sum");o.dtype==="bool"&&(o=Ue(o,"int32"));let n={x:o},i={axis:t,keepDims:e};return A.runKernel(Tu,n,i)}var rt=E({sum_:o6});function n6(r,t="euclidean",e=null,o=!1){r=C(r,"x","norm");let n=jw(r,t,e),i=n.shape;if(o){let s=oi(e,r.shape);i=Pn(n.shape,s)}return Y(n,i)}function jw(r,t,e=null){if(r.rank===0)return Qt(r);if(r.rank!==1&&e===null)return jw(Y(r,[-1]),t,e);if(r.rank===1||typeof e=="number"||Array.isArray(e)&&e.length===1){if(t===1)return rt(Qt(r),e);if(t===1/0)return cn(Qt(r),e);if(t===-1/0)return wp(Qt(r),e);if(t==="euclidean"||t===2)return Pr(rt(An(Qt(r),Re(2,"int32")),e));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(e)&&e.length===2){if(t===1)return cn(rt(Qt(r),e[0]),e[1]-1);if(t===1/0)return cn(rt(Qt(r),e[1]),e[0]);if(t===-1/0)return wp(rt(Qt(r),e[1]),e[0]);if(t==="fro"||t==="euclidean")return Pr(rt(Ut(r),e));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${e}`)}var Os=E({norm_:n6});function i6(r,t=null,e=!1){return Os(r,"euclidean",t,e)}var Xw=E({euclideanNorm_:i6});function s6(r){let e={x:C(r,"x","exp")};return A.runKernel(ai,e)}var Ar=E({exp_:s6});function a6(r,t=0){let e=C(r,"x","expandDims","string_or_numeric");D(t<=e.rank,()=>"Axis must be <= rank of the tensor");let o={input:e},n={dim:t};return A.runKernel(Tl,o,n)}var dr=E({expandDims_:a6});function l6(r){let e={x:C(r,"x","expm1")};return A.runKernel(li,e)}var Yw=E({expm1_:l6});function u6(r,t){let e=C(r,"x","tile","string_or_numeric");D(e.rank===t.length,()=>`Error in transpose: rank of input ${e.rank} must match length of reps ${t}.`);let o={x:e},n={reps:t};return A.runKernel(ki,o,n)}var Li=E({tile_:u6});function c6(r,t,e,o="float32"){t==null&&(t=r);let n=Le([r,t],o),i=r<=t?r:t;for(let a=0;a<i;++a)n.set(1,a,a);let s=Y(n.toTensor(),[r,t]);if(e==null)return s;if(e.length===1)return Li(dr(s,0),[e[0],1,1]);if(e.length===2)return Li(dr(dr(s,0),0),[e[0],e[1],1,1]);if(e.length===3)return Li(dr(dr(dr(s,0),0),0),[e[0],e[1],e[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${e.length}D.`)}var Gm=E({eye_:c6});function p6(r){let e={x:C(r,"x","floor","float32")};return A.runKernel(ui,e)}var Hm=E({floor_:p6});function d6(r,t,e=0,o=0){let n=C(r,"x","gather"),i=C(t,"indices","gather","int32"),s={x:n,indices:i},a={axis:e,batchDims:o};return A.runKernel(Pl,s,a)}var Km=E({gather_:d6});function m6(r,t){let e=C(r,"a","greater","string_or_numeric"),o=C(t,"b","greater","string_or_numeric");[e,o]=Ge(e,o),Je(e.shape,o.shape);let n={a:e,b:o};return A.runKernel(pi,n)}var Ls=E({greater_:m6});function f6(r,t){let e=C(r,"a","greaterEqual","string_or_numeric"),o=C(t,"b","greaterEqual","string_or_numeric");[e,o]=Ge(e,o),Je(e.shape,o.shape);let n={a:e,b:o};return A.runKernel(di,n)}var qm=E({greaterEqual_:f6});function h6(r){let e={input:C(r,"input","imag")};return A.runKernel(Fl,e)}var Mi=E({imag_:h6});function g6(r){let e={x:C(r,"x","isFinite")};return A.runKernel(Ol,e)}var Qw=E({isFinite_:g6});function x6(r){let e={x:C(r,"x","isInf")};return A.runKernel(Ll,e)}var Zw=E({isInf_:x6});function y6(r){let e={x:C(r,"x","isNaN")};return A.runKernel(Ml,e)}var Jw=E({isNaN_:y6});function v6(r,t=.2){let o={x:C(r,"x","leakyRelu")},n={alpha:t};return A.runKernel(Bl,o,n)}var jm=E({leakyRelu_:v6});function b6(r,t){let e=C(r,"a","less","string_or_numeric"),o=C(t,"b","less","string_or_numeric");[e,o]=Ge(e,o),Je(e.shape,o.shape);let n={a:e,b:o};return A.runKernel(mi,n)}var Cp=E({less_:b6});function S6(r,t){let e=C(r,"a","lessEqual","string_or_numeric"),o=C(t,"b","lessEqual","string_or_numeric");[e,o]=Ge(e,o),Je(e.shape,o.shape);let n={a:e,b:o};return A.runKernel(fi,n)}var ic=E({lessEqual_:S6});function eC(r,t,e){if(e<=0)throw new Error("The number of values should be positive.");let o={start:r,stop:t,num:e};return A.runKernel(Vl,{},o)}function w6(r,t=5,e=1,o=1,n=.5){let i=C(r,"x","localResponseNormalization");D(i.rank===4||i.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${i.rank}.`),D(_n(t),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`);let s=i,a=!1;i.rank===3&&(a=!0,s=Y(i,[1,i.shape[0],i.shape[1],i.shape[2]]));let l={x:s},u={depthRadius:t,bias:e,alpha:o,beta:n},c=A.runKernel(Hl,l,u);return a?Y(c,[c.shape[1],c.shape[2],c.shape[3]]):c}var tC=E({localResponseNormalization_:w6});function C6(r){let e={x:C(r,"x","log","float32")};return A.runKernel(hi,e)}var Dn=E({log_:C6});function _6(r){let e={x:C(r,"x","log1p")};return A.runKernel(Wl,e)}var Xm=E({log1p_:_6});function rC(r,t){D(Fa(r),()=>"The f passed in variableGrads(f) must be a function"),D(t==null||Array.isArray(t)&&t.every(u=>u instanceof En),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");let e=t!=null;if(!e){t=[];for(let u in A.registeredVariables)t.push(A.registeredVariables[u])}let o=e?t.filter(u=>!u.trainable):null,n=t.length;t=t.filter(u=>u.trainable),D(t.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${n} variables is trainable.`);let i=!0,{value:s,grads:a}=A.gradients(r,t,null,i);D(a.some(u=>u!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),D(s.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${s.rank} tensor`);let l={};return t.forEach((u,c)=>{a[c]!=null&&(l[u.name]=a[c])}),o?.forEach(u=>l[u.name]=null),{value:s,grads:l}}function Dr(r){return A.customGrad(r)}function k6(r){let e={x:C(r,"x","neg")};return A.runKernel(gs,e)}var tr=E({neg_:k6});function I6(r){let e={x:C(r,"x","softplus")};return A.runKernel(Iu,e)}var Ym=E({softplus_:I6});function T6(r){let t=C(r,"x","logSigmoid");return Dr(o=>({value:tr(Ym(tr(o))),gradFunc:s=>ae(s,qr(tr(o)))}))(t)}var oC=E({logSigmoid_:T6});function E6(r,t){let e=C(r,"a","sub"),o=C(t,"b","sub");[e,o]=Ge(e,o);let n={a:e,b:o};return A.runKernel(_i,n)}var $e=E({sub_:E6});function N6(r,t=-1){let e=C(r,"logits","logSoftmax");if(t===-1&&(t=e.rank-1),t!==e.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${e.rank} and axis was ${t}`);return Dr((n,i)=>{let a=cn(n,t,!0),l=$e(n,a),u=$e(Ue(l,"float32"),Dn(rt(Ar(l),t,!0)));return i([u]),{value:u,gradFunc:(p,d)=>{let[m]=d,f=!0,g=Ar(m);return $e(p,ae(rt(p,t,f),g))}}})(e)}var nC=E({logSoftmax_:N6});function R6(r,t=null,e=!1){let o=C(r,"x","logSumExp"),n=oi(t,o.shape),i=cn(o,n,!0),s=$e(o,i),a=Ar(s),l=rt(a,n),u=Dn(l),c=fe(Y(i,u.shape),u);if(e){let p=Pn(c.shape,n);return Y(c,p)}return c}var Qm=E({logSumExp_:R6});function $6(r,t){let e=C(r,"a","logicalAnd","bool"),o=C(t,"b","logicalAnd","bool");Je(e.shape,o.shape);let n={a:e,b:o};return A.runKernel(zl,n)}var Ms=E({logicalAnd_:$6});function P6(r){let e={x:C(r,"x","logicalNot","bool")};return A.runKernel(Ul,e)}var Zm=E({logicalNot_:P6});function A6(r,t){let e=C(r,"a","logicalOr","bool"),o=C(t,"b","logicalOr","bool");Je(e.shape,o.shape);let n={a:e,b:o};return A.runKernel(Gl,n)}var Jm=E({logicalOr_:A6});function D6(r,t){let e=C(r,"a","logicalXor","bool"),o=C(t,"b","logicalXor","bool");return Je(e.shape,o.shape),Ms(Jm(r,t),Zm(Ms(r,t)))}var iC=E({logicalXor_:D6});var ef=2147483648;function F6(r,t,e="left"){let o=C(r,"sortedSequence","searchSorted"),n=C(t,"values","searchSorted"),i=o.shape[o.shape.length-1],s=n.shape[n.shape.length-1],a=Y(o,[-1,i]),l=Y(n,[-1,s]);if(a.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(a.shape[0]!==l.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(Ke(l.shape)>=ef)throw new Error(`values tensor size must less than ${ef}`);if(a.shape[1]>=ef)throw new Error(`trailing dim_size must less than ${ef} for int32 output type, was ${a.shape[1]}`);let u={sortedSequence:a,values:l},c={side:e};return A.runKernel(bu,u,c)}var _p=E({searchSorted_:F6});function sC(r,t){return _p(r,t,"left")}function O6(r,t,e,o,n){let i=C(r,"x","maxPool"),s=1,a=i,l=!1;i.rank===3&&(l=!0,a=Y(i,[1,i.shape[0],i.shape[1],i.shape[2]])),D(a.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${a.rank}.`),D(pr(e,s),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${e} and dilations '${s}'`),Ot("maxPool",o,n);let u={x:a},c={filterSize:t,strides:e,pad:o,dimRoundingMode:n},p=A.runKernel(ql,u,c);return l?Y(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var tf=E({maxPool_:O6});function L6(r,t=[1,1,1],e,o,n,i="NDHWC"){let s=C(r,"x","maxPool3d"),a=s,l=!1;s.rank===4&&(l=!0,a=Y(s,[1,s.shape[0],s.shape[1],s.shape[2],s.shape[3]])),D(a.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${a.rank}.`),D(i==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${i}`),Ot("maxPool3d",o,n);let u={x:a},c={filterSize:t,strides:e,pad:o,dimRoundingMode:n,dataFormat:i},p=A.runKernel(jl,u,c);return l?Y(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}var aC=E({maxPool3d_:L6});function M6(r,t,e,o,n=!1){let s={x:C(r,"x","maxPoolWithArgmax")},a={filterSize:t,strides:e,pad:o,includeBatchInIndex:n},l=A.runKernel(Xl,s,a);return{result:l[0],indexes:l[1]}}var lC=E({maxPoolWithArgmax_:M6});function B6(r,t){let e=C(r,"a","maximum"),o=C(t,"b","maximum");[e,o]=Ge(e,o),e.dtype==="bool"&&(e=Ue(e,"int32"),o=Ue(o,"int32")),Je(e.shape,o.shape);let n={a:e,b:o};return A.runKernel(gi,n)}var rf=E({maximum_:B6});function V6(r,t=null,e=!1){let n={x:C(r,"x","mean")},i={axis:t,keepDims:e};return A.runKernel(Yl,n,i)}var Bs=E({mean_:V6});function Sr(r,t="float32"){if(vt(r),t==="complex64"){let o=Sr(r,"float32"),n=Sr(r,"float32");return Rr(o,n)}let e=La(Ke(r),t);return A.makeTensor(e,r,t)}function pn(r,t="float32"){if(vt(r),t==="complex64"){let o=pn(r,"float32"),n=Sr(r,"float32");return Rr(o,n)}let e=cp(Ke(r),t);return A.makeTensor(e,r,t)}function uC(r,t,{indexing:e="xy"}={}){if(e!=="xy"&&e!=="ij")throw new TypeError(`${e} is not a valid third argument to meshgrid`);if(r===void 0)return[];let o=C(r,"x","meshgrid",r instanceof at?r.dtype:"float32");if(t===void 0)return[o];let n=C(t,"y","meshgrid",t instanceof at?t.dtype:"float32"),i=Ke(o.shape),s=Ke(n.shape);return e==="xy"?(o=Y(o,[1,-1]),n=Y(n,[-1,1]),[tt(pn([s,1],o.dtype),o),tt(n,pn([1,i],n.dtype))]):(o=Y(o,[-1,1]),n=Y(n,[1,-1]),[tt(o,pn([1,s],o.dtype)),tt(pn([i,1],n.dtype),n)])}function W6(r,t){let e=C(r,"a","minimum"),o=C(t,"b","minimum");[e,o]=Ge(e,o),e.dtype==="bool"&&(e=Ue(e,"int32"),o=Ue(o,"int32")),Je(e.shape,o.shape);let n={a:e,b:o};return A.runKernel(xi,n)}var Fn=E({minimum_:W6});function z6(r,t,e){D(e==="reflect"||e==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${e}.`);let o=C(r,"x","mirrorPad");if(o.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");D(t.length===o.rank,()=>`Padding doesn't match input. Must be ${o.rank}. Got ${t.length}.`);let n=e==="reflect"?1:0;for(let a=0;a<o.rank;a++)D(t[a].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),D(t[a][0]>=0&&t[a][0]<=o.shape[a]-n&&t[a][1]>=0&&t[a][1]<=o.shape[a]-n,()=>`Padding in dimension ${a} cannot be greater than or equal to ${o.shape[a]-n} or less than 0 for input of shape ${o.shape}`);let i={paddings:t,mode:e},s={x:o};return A.runKernel(Zl,s,i)}var of=E({mirrorPad_:z6});function U6(r,t){let e=C(r,"a","mod"),o=C(t,"b","mod");[e,o]=Ge(e,o);let n={a:e,b:o};return A.runKernel(Jl,n)}var cC=E({mod_:U6});function G6(r,t=null,e=!1){r=C(r,"x","moments");let o=oi(t,r.shape),n=Bs(r,o,e),i=n.shape;e||(i=Pn(n.shape,o));let s=Ut($e(Ue(r,"float32"),Y(n,i))),a=Bs(s,o,e);return{mean:n,variance:a}}var pC=E({moments_:G6});function H6(r,t,e,o){let n=C(t,"data","multiRNNCell"),i=Ns(e,"c","multiRNNCell"),s=Ns(o,"h","multiRNNCell"),a=n,l=[];for(let p=0;p<r.length;p++){let d=r[p](a,i[p],s[p]);l.push(d[0]),l.push(d[1]),a=d[1]}let u=[],c=[];for(let p=0;p<l.length;p+=2)u.push(l[p]),c.push(l[p+1]);return[u,c]}var dC=E({multiRNNCell_:H6});function K6(r,t,e,o=!1){let n=C(r,"logits","multinomial"),i=n.size,s=n.rank;if(i<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${i}.`);if(s>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${s}`);e=e||Math.random();let l={logits:s===1?Y(n,[1,-1]):n},u={numSamples:t,seed:e,normalized:o},c=A.runKernel(eu,l,u);return s===1?Y(c,[c.size]):c}var mC=E({multinomial_:K6});function q6(r,t){let e=C(r,"a","notEqual","string_or_numeric"),o=C(t,"b","notEqual","string_or_numeric");[e,o]=Ge(e,o),Je(e.shape,o.shape);let n={a:e,b:o};return A.runKernel(vi,n)}var nf=E({notEqual_:q6});function j6(r,t,e=1,o=0,n="int32"){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);let s={indices:C(r,"indices","oneHot","int32")},a={dtype:n,depth:t,onValue:e,offValue:o};return A.runKernel(nu,s,a)}var fC=E({oneHot_:j6});function X6(r){let e={x:C(r,"x","onesLike")};return A.runKernel(ou,e)}var hC=E({onesLike_:X6});function Y6(r,t){let e=C(r,"v1","outerProduct"),o=C(t,"v2","outerProduct");D(e.rank===1&&o.rank===1,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${e.rank} and ${o.rank}.`);let n=Y(e,[-1,1]),i=Y(o,[1,-1]);return tt(n,i)}var gC=E({outerProduct_:Y6});function Q6(r,t,e=0){let o=C(r,"x","pad");if(o.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");let n={paddings:t,constantValue:e},i={x:o};return A.runKernel(su,i,n)}var jr=E({pad_:Q6});function Z6(r,t,e=0){return D(t.length===2,()=>"Invalid number of paddings. Must be length of 2."),jr(r,[t],e)}var xC=E({pad1d_:Z6});function J6(r,t,e=0){return D(t.length===2&&t[0].length===2&&t[1].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),jr(r,t,e)}var yC=E({pad2d_:J6});function ez(r,t,e=0){return D(t.length===3&&t[0].length===2&&t[1].length===2&&t[2].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),jr(r,t,e)}var vC=E({pad3d_:ez});function tz(r,t,e=0){return D(t.length===4&&t[0].length===2&&t[1].length===2&&t[2].length===2&&t[3].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),jr(r,t,e)}var bC=E({pad4d_:tz});function rz(r,t,e){let o=C(r,"x","spaceToBatchND");D(o.rank>=1+t.length,()=>`input rank ${o.rank} should be > than [blockShape] ${t.length}`),D(e.length===t.length,()=>`paddings.shape[0] ${e.length} must be equal to [blockShape] ${t.length}`),D(o.shape.reduce((s,a,l)=>l>0&&l<=t.length?s&&(a+e[l-1][0]+e[l-1][1])%t[l-1]===0:s,!0),()=>`input spatial dimensions ${o.shape.slice(1)} with paddings ${e.toString()} must be divisible by blockShapes ${t.toString()}`);let n={x:o},i={blockShape:t,paddings:e};return A.runKernel(Eu,n,i)}var sf=E({spaceToBatchND_:rz});function oz(r,t,e,o,n,i,s){n==null&&(n=[1,1]),i==null&&(i=1),o===0&&(o="valid");let a=C(r,"x","maxPool"),l=a,u=!1;a.rank===3&&(u=!0,l=Y(a,[1,a.shape[0],a.shape[1],a.shape[2]])),D(pr(i,n),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${i} and dilations '${n}'`);let c=Fy(l.shape,t,i,n,o),p=[c.dilationHeight,c.dilationWidth],d;o==="same"?d=iz([c.filterHeight,c.filterWidth],p):d=[[0,0],[0,0]];let m=p[0]===1&&p[1]===1,[f,g]=nz([c.inHeight,c.inWidth],p,d),x=m?o:"valid",y=m?l:sf(l,p,f),I=(e==="avg"?()=>Om(y,t,i,x,s):()=>tf(y,t,i,x,s))(),N=m?I:Lm(I,p,g);return u?Y(N,[N.shape[1],N.shape[2],N.shape[3]]):N}function nz(r,t,e){let o=e.map(c=>c[0]),n=e.map(c=>c[1]),i=r.concat(o,n),s=t.map((c,p)=>(c-i[p]%c)%c),a=n.map((c,p)=>c+s[p]),l=t.map((c,p)=>[o[p],a[p]]),u=t.map((c,p)=>[0,s[p]]);return[l,u]}function iz(r,t){let o=r.map((s,a)=>s+(s-1)*(t[a]-1)).map(s=>s-1),n=o.map(s=>Math.floor(s/2)),i=o.map((s,a)=>s-n[a]);return o.map((s,a)=>[n[a],i[a]])}var SC=E({pool_:oz});function sz(r,t){let e=C(r,"x","prelu"),o=C(t,"alpha","prelu"),n={x:e,alpha:o};return A.runKernel(lu,n)}var af=E({prelu_:sz});function az(r,t=null,e=!1){let o=C(r,"x","prod");o.dtype==="bool"&&(o=Ue(o,"int32"));let n={x:o},i={axis:t,keepDims:e};return A.runKernel(xs,n,i)}var wC=E({prod_:az});function lz(r,t,e,o){let n=r.map((c,p)=>C(c,`tensors${p}`,"raggedGather","int32")),i=C(t,"paramsDenseValues","raggedGather"),s=C(e,"indices","raggedGather","int32"),a={paramsNestedSplits:n,paramsDenseValues:i,indices:s},l={outputRaggedRank:o},u=A.runKernel(nm,a,l);return{outputNestedSplits:u.slice(0,u.length-1),outputDenseValues:u[u.length-1]}}var CC=E({raggedGather_:lz});function uz(r,t,e){let o=C(r,"starts","raggedRange"),n=C(t,"limits","raggedRange",o.dtype),i=C(e,"deltas","raggedRange",o.dtype),s={starts:o,limits:n,deltas:i},a=A.runKernel(im,s);return{rtNestedSplits:a[0],rtDenseValues:a[1]}}var _C=E({raggedRange_:uz});function cz(r,t,e,o,n){let i=C(r,"shape","raggedTensorToTensor","int32"),s=C(t,"values","raggedTensorToTensor"),a=C(e,"defaultValue","raggedTensorToTensor",s.dtype),l=o.map((p,d)=>C(p,`tensors${d}`,"raggedTensorToTensor","int32")),u={shape:i,values:s,defaultValue:a,rowPartitionTensors:l},c={rowPartitionTypes:n};return A.runKernel(sm,u,c)}var kC=E({raggedTensorToTensor_:cz});function pz(r,t,e){vt(r);let o=Ke(r),n=null;if(e==null||e==="float32")n=new Float32Array(o);else if(e==="int32")n=new Int32Array(o);else if(e==="bool")n=new Uint8Array(o);else throw new Error(`Unknown data type ${e}`);for(let i=0;i<o;i++)n[i]=t();return A.makeTensor(n,r,e)}var IC=E({rand_:pz});var pf=Kx(UC());var Ws=class{constructor(t,e,o,n,i){this.mean=t,this.stdDev=e,this.dtype=o,this.nextVal=NaN,this.truncated=n,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);let s=i||Math.random();this.random=pf.alea(s.toString())}nextValue(){if(!isNaN(this.nextVal)){let n=this.nextVal;return this.nextVal=NaN,n}let t,e,o=!1;for(;!o;){let n,i,s;do n=2*this.random()-1,i=2*this.random()-1,s=n*n+i*i;while(s>=1||s===0);let a=Math.sqrt(-2*Math.log(s)/s);t=this.mean+this.stdDev*n*a,e=this.mean+this.stdDev*i*a,(!this.truncated||this.isValidTruncated(t))&&(o=!0)}return(!this.truncated||this.isValidTruncated(e))&&(this.nextVal=this.convertValue(e)),this.convertValue(t)}convertValue(t){return this.dtype==null||this.dtype==="float32"?t:Math.round(t)}isValidTruncated(t){return t<=this.upper&&t>=this.lower}},uf=class{constructor(t,e,o,n){this.alpha=t,this.beta=1/e,this.dtype=o;let i=n||Math.random();this.randu=pf.alea(i.toString()),this.randn=new Ws(0,1,o,!1,this.randu()),t<1?this.d=t+2/3:this.d=t-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let t,e,o,n,i,s;for(;;){do n=this.randn.nextValue(),s=1+this.c*n;while(s<=0);if(s*=s*s,t=n*n,e=1-.331*t*t,o=.5*t+this.d*(1-s+Math.log(s)),i=this.randu(),i<e||Math.log(i)<o)break}return s=1/this.beta*this.d*s,this.alpha<1&&(s*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(s)}convertValue(t){return this.dtype==="float32"?t:Math.round(t)}},cf=class{constructor(t=0,e=1,o,n){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=t,this.range=e-t,this.dtype=o,n==null&&(n=Math.random()),typeof n=="number"&&(n=n.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${t} - ${e} <= 1 and dtype is not float`);this.random=pf.alea(n)}convertValue(t){return this.canReturnFloat()?t:Math.round(t)}nextValue(){return this.convertValue(this.min+this.range*this.random())}};function yz(r,t,e=1,o="float32",n){if(vt(r),e==null&&(e=1),o==null&&(o="float32"),o!=="float32"&&o!=="int32")throw new Error(`Unsupported data type ${o}`);let i=new uf(t,e,o,n),s=Le(r,o);for(let a=0;a<s.values.length;a++)s.values[a]=i.nextValue();return s.toTensor()}var GC=E({randomGamma_:yz});function vz(r,t=0,e=1,o,n){if(vt(r),o!=null&&o==="bool")throw new Error(`Unsupported data type ${o}`);let i=new Ws(t,e,o,!1,n),s=Le(r,o);for(let a=0;a<s.values.length;a++)s.values[a]=i.nextValue();return s.toTensor()}var df=E({randomNormal_:vz});function bz(r,t,e){if(t!=null&&t==="bool")throw new Error(`Unsupported data type ${t}`);return df(r,0,1,t,e)}var HC=E({randomStandardNormal_:bz});function Sz(r,t=0,e=1,o="float32",n){vt(r);let i=Le(r,o),s=new cf(t,e,null,n);for(let a=0;a<i.values.length;a++)i.values[a]=s.nextValue();return i.toTensor()}var sc=E({randomUniform_:Sz});function wz(r,t,e,o){return sc(r,t,e,"int32",o)}var KC=E({randomUniformInt_:wz});function Bi(r,t,e=1,o="float32"){if(e===0)throw new Error("Cannot have a step of zero");let n={start:r,stop:t,step:e,dtype:o};return A.runKernel(uu,{},n)}function Cz(r){let e={input:C(r,"input","real")};return A.runKernel(ys,e)}var On=E({real_:Cz});function _z(r){let e={x:C(r,"x","reciprocal")};return A.runKernel(cu,e)}var qC=E({reciprocal_:_z});function kz(r){let e={x:C(r,"x","relu")};return A.runKernel(pu,e)}var Vi=E({relu_:kz});function Iz(r){let e={x:C(r,"x","relu6")};return A.runKernel(hu,e)}var mf=E({relu6_:Iz});function Tz(r,t){let o={x:C(r,"x","reverse")},n={dims:t};return A.runKernel(gu,o,n)}var po=E({reverse_:Tz});function Ez(r){let t=C(r,"x","reverse");return D(t.rank===1,()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`),po(t,0)}var jC=E({reverse1d_:Ez});function Nz(r,t){let e=C(r,"x","reverse");return D(e.rank===2,()=>`Error in reverse2D: x must be rank 2 but got rank ${e.rank}.`),po(e,t)}var XC=E({reverse2d_:Nz});function Rz(r,t){let e=C(r,"x","reverse");return D(e.rank===3,()=>`Error in reverse3D: x must be rank 3 but got rank ${e.rank}.`),po(e,t)}var YC=E({reverse3d_:Rz});function $z(r,t){let e=C(r,"x","reverse");return D(e.rank===4,()=>`Error in reverse4D: x must be rank 4 but got rank ${e.rank}.`),po(e,t)}var QC=E({reverse4d_:$z});function Pz(r){let e={x:C(r,"x","round")};return A.runKernel(xu,e)}var ff=E({round_:Pz});function Az(r){let e={x:C(r,"x","rsqrt","float32")};return A.runKernel(bi,e)}var ZC=E({rsqrt_:Az});function Dz(r){let e={x:C(r,"x","selu")};return A.runKernel(wu,e)}var JC=E({selu_:Dz});function Fz(r,t,e,o,n,i=[1,1],s="NHWC"){let a=C(r,"x","separableConv2d"),l=C(t,"depthwiseFilter","separableConv2d"),u=C(e,"pointwiseFilter","separableConv2d"),c=a,p=!1;if(a.rank===3&&(p=!0,c=Y(a,[1,a.shape[0],a.shape[1],a.shape[2]])),s==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");D(c.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`),D(l.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`),D(u.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`),D(u.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`),D(u.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`);let d=l.shape[2],m=l.shape[3];D(u.shape[2]===d*m,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*m}, but got ${u.shape[2]}.`);let f=nc(c,l,o,n,s,i),x=Fi(f,u,1,"valid",s);return p?Y(x,[x.shape[1],x.shape[2],x.shape[3]]):x}var e_=E({separableConv2d_:Fz});function Oz(r,t){return j(this,null,function*(){let e=C(r,"x","setdiff1d"),o=C(t,"y","setdiff1d");D(e.dtype===o.dtype,()=>`x and y should have the same dtype, but got x (${e.dtype}) and y (${o.dtype}).`),D(e.rank===1,()=>`x should be 1D tensor, but got x (${e.shape}).`),D(o.rank===1,()=>`y should be 1D tensor, but got y (${o.shape}).`);let n=yield e.data(),i=yield o.data(),s=new Set(i),a=0;for(let c=0;c<n.length;c++)s.has(n[c])||a++;let l=new uo([a],e.dtype),u=new uo([a],"int32");for(let c=0,p=0;c<n.length;c++)s.has(n[c])||(l.values[p]=n[c],u.values[p]=c,p++);return[l.toTensor(),u.toTensor()]})}var t_=Oz;function Lz(r){let e={x:C(r,"x","sign")};return A.runKernel(ku,e)}var r_=E({sign_:Lz});function Mz(r){let e={x:C(r,"x","sin","float32")};return A.runKernel(Cu,e)}var o_=E({sin_:Mz});function Bz(r){let e={x:C(r,"x","sinh")};return A.runKernel(_u,e)}var n_=E({sinh_:Bz});function Vz(r,t,e){let o=C(r,"x","slice1d");return D(o.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${o.rank} tensor`),Oe(o,[t],[e])}var i_=E({slice1d_:Vz});function Wz(r,t,e){let o=C(r,"x","slice2d");return D(o.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${o.rank} tensor`),Oe(o,t,e)}var s_=E({slice2d_:Wz});function zz(r,t,e){let o=C(r,"x","slice3d");return D(o.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${o.rank} tensor`),Oe(o,t,e)}var a_=E({slice3d_:zz});function Uz(r,t,e){let o=C(r,"x","slice4d");return D(o.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${o.rank} tensor`),Oe(o,t,e)}var l_=E({slice4d_:Uz});function Gz(r,t=-1){let e=C(r,"logits","softmax","float32");if(t===-1&&(t=e.rank-1),t!==e.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${e.rank} and dim was ${t}`);let o={logits:e},n={dim:t};return A.runKernel(Ru,o,n)}var u_=E({softmax_:Gz});function Hz(r){D(r.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${r.dtype}.`);let t={input:r};return A.runKernel(El,t)}var ac=E({fft_:Hz});function Kz(r){D(r.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${r.dtype}.`);let t={input:r};return A.runKernel(Dl,t)}var zs=E({ifft_:Kz});function qz(r){let t=r.shape[r.shape.length-1],e=r.size/t,o;if(t<=2){let n=Y(r,[e,t]);o=zs(n)}else{let n=[e,2*(t-1)],i=Y(On(r),[e,t]),s=Y(Mi(r),[e,t]),a=po(Oe(i,[0,1],[e,t-2]),1),l=ae(po(Oe(s,[0,1],[e,t-2]),1),Re(-1)),u=mt([i,a],1),c=mt([s,l],1),p=Y(Rr(u,c),[n[0],n[1]]);o=zs(p)}if(o=On(o),r.rank===3&&r.shape[0]!==0){let n=o,i=r.shape[0];o=Y(o,[i,o.shape[0]/i,o.shape[1]]),n.dispose()}return o}var hf=E({irfft_:qz});function jz(r,t,e=0){let n={x:C(r,"x","split")},i={numOrSizeSplits:t,axis:e};return A.runKernel(Nu,n,i)}var Ln=E({split_:jz});function Xz(r,t){D(r.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${r.dtype}`);let e=r.shape[r.shape.length-1],o=r.size/e,n;if(t!=null&&t<e){let f=r.shape.map(x=>0),g=r.shape.map(x=>x);g[r.shape.length-1]=t,n=Oe(r,f,g),e=t}else if(t!=null&&t>e){let f=r.shape.map(g=>g);f[r.shape.length-1]=t-e,n=mt([r,Sr(f)],r.shape.length-1),e=t}else n=r;let i=zt(n),s=Y(Rr(n,i),[o,e]),a=ac(s),l=Math.floor(e/2)+1,u=On(a),c=Mi(a),p=Ln(u,[l,e-l],u.shape.length-1),d=Ln(c,[l,e-l],c.shape.length-1),m=n.shape.slice();return m[n.shape.length-1]=l,Y(Rr(p[0],d[0]),m)}var lc=E({rfft_:Xz});function Yz(r,t){let e=C(r,"a","squaredDifference"),o=C(t,"b","squaredDifference");[e,o]=Ge(e,o),Je(e.shape,o.shape);let n={a:e,b:o},i={};return A.runKernel(Ci,n,i)}var gf=E({squaredDifference_:Yz});function Qz(r,t){let e=C(r,"x","squeeze","string_or_numeric");return Y(e,ty(e.shape,t).newShape)}var ct=E({squeeze_:Qz});function Zz(r,t=0){let e=Ns(r,"tensors","stack","string_or_numeric");D(e.length>=1,()=>"Pass at least one tensor to tf.stack"),e.length>0&&D(t<=e[0].rank,()=>"Axis must be <= rank of the tensor");let o=e,n={axis:t};return A.runKernel(iu,o,n)}var wr=E({stack_:Zz});function Jz(r,t=0){let o={x:C(r,"x","step")},n={alpha:t};return A.runKernel(Gu,o,n)}var xf=E({step_:Jz});function eU(r,t,e,o,n=0,i=0,s=0,a=0,l=0){let c={x:C(r,"x","stridedSlice","string_or_numeric")},p={begin:t,end:e,strides:o,beginMask:n,endMask:i,ellipsisMask:s,newAxisMask:a,shrinkAxisMask:l};return A.runKernel(Fu,c,p)}var c_=E({stridedSlice_:eU});function tU(r){let e={x:C(r,"x","tan","float32")};return A.runKernel(Lu,e)}var p_=E({tan_:tU});function Rt(r,t){lo(r);let e=Nr(r,t);if(e.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return vr(r,null,e,t)}function Cr(r,t,e){if(lo(r),t!=null&&t.length!==2)throw new Error("tensor2d() requires shape to have two numbers");let o=Nr(r,e);if(o.length!==2&&o.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(o.length===1&&t==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return vr(r,t,o,e)}function yf(r,t,e){if(lo(r),t!=null&&t.length!==3)throw new Error("tensor3d() requires shape to have three numbers");let o=Nr(r,e);if(o.length!==3&&o.length!==1)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(o.length===1&&t==null)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return vr(r,t,o,e)}function d_(r,t,e){if(lo(r),t!=null&&t.length!==4)throw new Error("tensor4d() requires shape to have four numbers");let o=Nr(r,e);if(o.length!==4&&o.length!==1)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(o.length===1&&t==null)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return vr(r,t,o,e)}function m_(r,t,e){if(lo(r),t!=null&&t.length!==5)throw new Error("tensor5d() requires shape to have five numbers");let o=Nr(r,e);if(o.length!==5&&o.length!==1)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(o.length===1&&t==null)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return vr(r,t,o,e)}function f_(r,t,e){if(lo(r),t!=null&&t.length!==6)throw new Error("tensor6d() requires shape to have six numbers");let o=Nr(r,e);if(o.length!==6&&o.length!==1)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(o.length===1&&t==null)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return t=t||o,vr(r,t,o,e)}function h_(r,t,e){let o=t.rank>1?t.shape[t.rank-1]:1,n=t.rank>1?t.rank-1:1,i=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${e.shape}, indices.shape: ${t.shape}, shape: ${r}, sliceDim: ${o}, and batchDim: ${n}.`;if(e.rank<n)throw new Error(i+` update.rank < ${n}. `);if(r.length<o+(e.rank-n))throw new Error(i+` Output shape length < ${o+(e.rank-n)}`);if(e.rank!==n+r.length-o)throw new Error(i+` update.rank != ${n+r.length-o}`);for(let s=0;s<n;++s)if(e.shape[s]!==t.shape[s])throw new Error(i+` updates.shape[${s}] (${e.shape[s]}) != indices.shape[${s}] (${t.shape[s]}).`);for(let s=0;s<e.rank-n;++s)if(e.shape[s+n]!==r[s+o])throw new Error(i+` updates.shape[${s+n}] (${e.shape[s+n]}) != shape[${s+n}] (${r[s+n]})`)}function kp(r,t,e){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(r.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${r.rank}.`);if(t.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(e.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${e}`);if(e.length===0){if(t.size===0)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(r.size===0)throw new Error(`Updates specified for empty output. updates shape: ${r.shape}`)}h_(e,t,r)}function rU(r,t,e){let o=t.shape.length,n=o>1?t.shape[o-1]:1,i=e.length,s=1;for(let p=n;p<i;++p)s*=e[p];let a=n<1?1:n,l=Ke(t.shape)/a,u=[...tn(e.slice(0,n)),1],c=Ke(e);return{sliceRank:n,numUpdates:l,sliceSize:s,strides:u,outputSize:c}}function oU(r,t,e){let o=C(r,"tensor","tensorScatterupdate"),n=C(t,"indices","tensorScatterupdate","int32"),i=C(e,"updates","tensorScatterupdate");if(kp(i,n,o.shape),o.dtype!==i.dtype)throw new Error(`tensor and updates must have the same dtype, instead they are ${o.dtype} and ${i.dtype}.`);let s={tensor:o,indices:n,updates:i},a={};return A.runKernel(vu,s,a)}var x_=E({tensorScatterUpdate_:oU});function nU(r,t=1,e=!0){let o=C(r,"x","topk");if(o.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");let n=o.shape[o.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>n)throw new Error(`'k' passed to topk() must be <= the last dimension (${n}) but got ${t}`);let i={x:o},s={k:t,sorted:e},[a,l]=A.runKernel(Bu,i,s);return{values:a,indices:l}}var y_=E({topk_:nU});function iU(r,t=0,e=1,o,n){if(vt(r),o!=null&&o==="bool")throw new Error("Unsupported data type $ { dtype }");let i=new Ws(t,e,o,!0,n),s=Le(r,o);for(let a=0;a<s.values.length;a++)s.values[a]=i.nextValue();return s.toTensor()}var v_=E({truncatedNormal_:iU});function sU(r,t=0){let e=C(r,"x","unique","string_or_numeric");D(e.rank>0,()=>"The input tensor must be at least 1D");let o={x:e},n={axis:t},[i,s]=A.runKernel(fm,o,n);return{values:i,indices:s}}var b_=E({unique_:sU});function aU(r,t,e){let o=C(r,"x","unsortedSegmentSum"),n=C(t,"segmentIds","unsortedSegmentSum","int32");D(_n(e),()=>"numSegments must be of dtype int");let i={x:o,segmentIds:n},s={numSegments:e};return A.runKernel(zu,i,s)}var S_=E({unsortedSegmentSum_:aU});function lU(r,t=0){let e=C(r,"x","unstack","string_or_numeric");D(t>=-e.shape.length&&t<e.shape.length,()=>`Axis = ${t} is not in [-${e.shape.length}, ${e.shape.length})`);let o={value:e},n={axis:t};return A.runKernel(Wu,o,n)}var mo=E({unstack_:lU});function w_(r,t){return _p(r,t,"right")}function C_(r,t=!0,e,o){return A.makeVariable(r,t,e,o)}function vf(r,t){let e=[];for(let i=0;i<t.length;i++)t[i]&&e.push(i);let o=Le(r,"int32"),n=Le([e.length,r.length],"int32");for(let i=0;i<e.length;i++){let s=o.indexToLoc(e[i]),a=i*r.length;n.values.set(s,a)}return n.toTensor()}function uU(r){return j(this,null,function*(){let t=C(r,"condition","whereAsync","bool"),e=yield t.data(),o=vf(t.shape,e);return r!==t&&t.dispose(),o})}var bf=uU;function cU(r,t,e){return j(this,null,function*(){let o=C(r,"tensor","boolMask"),n=C(t,"mask","boolMask","bool"),i=e??0,s=n.rank,a=o.shape;D(s>0,()=>"mask cannot be scalar"),Nt(a.slice(i,i+s),n.shape,"mask's shape must match the first K dimensions of tensor's shape,");let l=1;for(let g=i;g<i+s;g++)l*=a[g];let u=a.slice(0,i).concat([l],a.slice(i+s)),c=Y(o,u),p=Y(n,[-1]),d=yield bf(p),m=ct(d,[1]),f=Km(c,m,i);return r!==o&&o.dispose(),t!==n&&n.dispose(),m.dispose(),c.dispose(),p.dispose(),d.dispose(),f})}var pU=cU;function dU(r,t,e){let o=C(r,"x","transpose");if(t==null&&(t=o.shape.map((s,a)=>a).reverse()),D(o.rank===t.length,()=>`Error in transpose: rank of input ${o.rank} must match length of perm ${t}.`),t.forEach(s=>{D(s>=0&&s<o.rank,()=>`All entries in 'perm' must be between 0 and ${o.rank-1} but got ${t}`)}),o.rank<=1)return o.clone();let n={x:o},i={perm:t};return o.dtype==="complex64"?Ne(()=>{let s=On(o),a=Mi(o);return s=A.runKernel(Ii,{x:s},i),a=A.runKernel(Ii,{x:a},i),e&&(a=tr(a)),Rr(s,a)}):A.runKernel(Ii,n,i)}var Sf=E({transpose_:dU});function mU(r,t,e,o,n=!0){let i=C(r,"v","movingAverage"),s=C(t,"x","movingAverage"),a=C(e,"decay","movingAverage");E2(i,s),D(Ur(i.shape,s.shape),()=>"Shape mismatch in v and x");let l=Re(1),u=$e(l,a),c=ae($e(s,i),u);if(n){D(o!=null,()=>"When using zeroDebias: true, step is required.");let p=C(o,"step","movingAverage");c=Fe(c,$e(l,An(a,p)))}return fe(i,c)}var fU=E({movingAverage_:mU});function hU(r,t,e){vt(e);let o=C(r,"indices","scatterND","int32"),n=C(t,"updates","scatterND");kp(n,o,e);let i={indices:o,updates:n},s={shape:e};return A.runKernel(yu,i,s)}var gU=E({scatterND_:hU});function __(r,t,e,o){if(r.dtype!=="int32")throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${r.dtype}.`);if(r.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${r.shape}.`);let n=r.rank>0?r.shape[0]:1,i=r.rank>1?r.shape[1]:1;if(e.length!==i)throw new Error(`outputShape has incorrect number of elements:, ${e.length}, should be: ${i}.`);let s=t.size;if(!(t.rank===0||t.rank===1&&s===n))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${n}]`);if(t.dtype!==o.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}function yU(r,t,e,o=0){vt(e);let n=C(r,"sparseIndices","sparseToDense","int32"),i=C(t,"sparseValues","sparseToDense","string_or_numeric"),s=C(o,"defaultValue","sparseToDense",i.dtype);__(n,i,e,s);let a={sparseIndices:n,sparseValues:i,defaultValue:s},l={outputShape:e};return A.runKernel(Au,a,l)}var vU=E({sparseToDense_:yU});function bU(r,t){let e=C(t,"indices","gatherND","int32"),n={params:C(r,"x","gatherND","string_or_numeric"),indices:e};return A.runKernel(Al,n)}var SU=E({gatherND_:bU});function k_(r,t){if(t==null)return r.shape.slice();if(Ur(r.shape,t))return t;if(r.shape.length===t.length){let e=[];for(let o=0;o<r.shape.length;o++)t[o]==null&&r.shape[o]!=null?e.push(r.shape[o]):e.push(t[o]);return e}return t}function wU(r,t,e,o){let n=C(r,"x","dropout");if(D(n.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${n.dtype} tensor instead.`),D(t>=0&&t<1,()=>`rate must be a float in the range [0, 1), but got ${t}.`),t===0)return r instanceof at?n.clone():n;let i=k_(n,e),s=1-t,a=Fe(Hm(fe(sc(i,0,1,"float32",o),s)),s);return ae(n,a)}var CU=E({dropout_:wU});function Gy(r){return Math.floor(Math.pow(2,Math.ceil(Math.log(r)/Math.log(2))))}function Ip(r,t,e){let o=1-r%2,n=new Float32Array(r);for(let i=0;i<r;++i){let s=2*Math.PI*i/(r+o-1);n[i]=t-e*Math.cos(s)}return Rt(n,"float32")}function _U(r,t,e=1){return j(this,null,function*(){let o=C(r,"predictions","inTopK"),n=C(t,"targets","inTopK");D(o.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${o.rank}`),D(o.rank-1===n.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${o.rank} and targets rank ${n.rank}`),Nt(o.shape.slice(0,o.shape.length-1),n.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");let i=o.shape[o.shape.length-1];D(e>0&&e<=i,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${i}), but got ${e}`);let s=yield o.data(),a=yield n.data(),[l,u]=[s.length/i,i],c=ry("bool",l);for(let p=0;p<l;p++){let d=p*u,m=s.subarray(d,d+u),f=[];for(let g=0;g<m.length;g++)f.push({value:m[g],index:g});f.sort((g,x)=>x.value-g.value),c[p]=0;for(let g=0;g<e;g++)if(f[g].index===a[p]){c[p]=1;break}}return r!==o&&o.dispose(),t!==n&&n.dispose(),br(c,n.shape,"bool")})}var kU=_U;var Hy={};dt(Hy,{conv2d:()=>T_,depthwiseConv2d:()=>R_,matMul:()=>$_});function IU(r,t,e,o,n,i="NHWC",s){let a=r;r.rank===3&&(a=Y(r,[1,r.shape[0],r.shape[1],r.shape[2]]));let l=t;l.rank===3&&(l=Y(t,[1,t.shape[0],t.shape[1],t.shape[2]])),D(a.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${a.shape}.`),D(l.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`),D(e.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${e}.`);let u=i==="NHWC"?a.shape[3]:a.shape[1],c=i==="NHWC"?l.shape[3]:l.shape[1];D(u===e[2],()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${e[2]}.`),D(c===e[3],()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${e[3]}).`),Ot("conv2dDerFilter",n,s);let p={x:a,dy:l},d={strides:o,pad:n,dataFormat:i,dimRoundingMode:s,filterShape:e};return A.runKernel(al,p,d)}var I_=E({conv2DBackpropFilter_:IU});function Us(r,t,e){if(e==null||e==="linear")return r;if(e==="relu")return ae(r,xf(t));throw new Error(`Cannot compute gradient for fused activation ${e}.`)}function Gs(r,t){let e=t,o=Wm(r.shape,t.shape);return o.length>0&&(e=rt(e,o)),Y(e,r.shape)}function Hs(r,t,e,o){if(t==="linear")return r;if(t==="relu")return Vi(r);if(t==="elu")return Um(r);if(t==="relu6")return mf(r);if(t==="prelu")return af(r,e);if(t==="leakyrelu")return jm(r,o);if(t==="sigmoid")return qr(r);throw new Error(`Unknown fused activation ${t}.`)}var Ks=(r,t)=>!(r>0)||t==="linear";function TU({x:r,filter:t,strides:e,pad:o,dataFormat:n="NHWC",dilations:i=[1,1],dimRoundingMode:s,bias:a,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(l=l||"linear",Ks(A.state.gradientDepth,l)===!1){D(n==="NHWC",()=>`Error in fused conv2d: got dataFormat of ${n} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let B=Fi(r,t,e,o,n,i,s);return a!=null&&(B=fe(B,a)),Hs(B,l,u,c)}let p=C(r,"x","conv2d","float32"),d=C(t,"filter","conv2d","float32"),m=p,f=!1;p.rank===3&&(f=!0,m=Y(p,[1,p.shape[0],p.shape[1],p.shape[2]])),D(m.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${m.rank}.`),D(d.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${d.rank}.`),Ot("fused conv2d",o,s);let g=n==="NHWC"?m.shape[3]:m.shape[1];D(d.shape[2]===g,()=>`Error in conv2d: depth of input (${g}) must match input depth for filter ${d.shape[2]}.`),D(pr(e,i),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${e} and dilations '${i}'`);let x=Fs(m.shape,d.shape,e,i,o,s),y;a!=null&&(y=C(a,"bias","fused conv2d"),[y]=Ge(y,p),n==="NHWC"?Je(x.outShape,y.shape):(D(y.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${y.shape.length}.`),D(y.shape.length===0||y.shape[0]===x.outChannels||y.shape[0]===1,()=>`Error in fused conv2d: bias shape (${y.shape}) is not compatible with the number of output channels (${x.outChannels})`)));let b;if(u!=null){let B=u.shape;if(D(B.length<=1||B.length===3,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${B.length}.`),B.length===1)D(B[0]===1||B[0]===x.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${B}) is not compatible with the number of output channels (${x.outChannels}).`);else if(B.length===3)try{Je(B,x.outShape)}catch{let H=`Error in fused conv2d: PReLU activation weights (${B}) is not compatible with the output shape of the conv2d (${x.outShape}).`;throw Error(H)}b=C(u,"prelu weights","fused conv2d")}let I=(B,z)=>{D(n==="NHWC",()=>`Error in gradient of fused conv2D: got dataFormat of ${n} but only NHWC is currently supported.`);let[H,K,X,te]=z,ue=Us(B,X,l);D(Ds(i),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${i}'`);let pe=Vm(K.shape,ue,H,e,o),xe=I_(K,ue,H.shape,e,o),be=[pe,xe];if(te!=null){let Te=Gs(te,ue);be.push(Te)}return be},N={x:m,filter:d,bias:y,preluActivationWeights:b},F={strides:e,pad:o,dataFormat:n,dilations:i,dimRoundingMode:s,activation:l,leakyreluAlpha:c};return a==null?Dr((z,H,K)=>{let X=A.runKernel(ws,N,F);return K([H,z,X]),f&&(X=Y(X,[X.shape[1],X.shape[2],X.shape[3]])),{value:X,gradFunc:I}})(m,d):Dr((z,H,K,X)=>{let te=A.runKernel(ws,N,F);return X([H,z,te,K]),f&&(te=Y(te,[te.shape[1],te.shape[2],te.shape[3]])),{value:te,gradFunc:I}})(m,d,y)}var T_=E({fusedConv2d_:TU});function EU(r,t,e,o,n,i=[1,1],s){let a=r;r.rank===3&&(a=Y(r,[1,r.shape[0],r.shape[1],r.shape[2]]));let l=t;l.rank===3&&(l=Y(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let u={x:a,dy:l},c={strides:o,pad:n,dimRoundingMode:s,dilations:i,filterShape:e};return A.runKernel(vl,u,c)}var E_=E({depthwiseConv2dNativeBackpropFilter_:EU});function NU(r,t,e,o,n,i=[1,1],s){let a=t,l=!1;t.rank===3&&(l=!0,a=Y(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let u={dy:a,filter:e},c={strides:o,pad:n,dimRoundingMode:s,dilations:i,inputShape:r},p=A.runKernel(bl,u,c);return l?Y(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var N_=E({depthwiseConv2dNativeBackpropInput_:NU});function RU({x:r,filter:t,strides:e,pad:o,dataFormat:n="NHWC",dilations:i=[1,1],dimRoundingMode:s,bias:a,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(Ks(A.state.gradientDepth,l)===!1){let F=nc(r,t,e,o,n,i,s);return a!=null&&(F=fe(F,a)),Hs(F,l,u,c)}let p=C(r,"x","depthwiseConv2d","float32"),d=C(t,"filter","depthwiseConv2d","float32"),m=p,f=!1;p.rank===3&&(f=!0,m=Y(p,[1,p.shape[0],p.shape[1],p.shape[2]])),D(m.rank===4,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${m.rank}.`),D(d.rank===4,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${d.rank}.`),D(m.shape[3]===d.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${m.shape[3]}) must match the inChannels dimension in filter ${d.shape[2]}.`),i==null&&(i=[1,1]),D(pr(e,i),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${e} and dilations '${i}'`),Ot("fused depthwiseConv2d",o,s);let g=Fs(m.shape,d.shape,e,i,o,s,!0),x;a!=null&&(x=C(a,"bias","fused conv2d"),[x]=Ge(x,p),Je(g.outShape,x.shape));let y;u!=null&&(y=C(u,"prelu weights","fused depthwiseConv2d"));let b=(F,B)=>{D(Ds(i),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${i}'`);let[z,H,K,X]=B,te=Us(F,K,l),ue=N_(H.shape,te,z,e,o,i,s),pe=E_(H,te,z.shape,e,o,i,s);if(X!=null){let xe=Gs(x,te);return[ue,pe,xe]}return[ue,pe]},I={x:m,filter:d,bias:x,preluActivationWeights:y},N={strides:e,pad:o,dataFormat:n,dilations:i,dimRoundingMode:s,activation:l,leakyreluAlpha:c};return a==null?Dr((B,z,H)=>{let K=A.runKernel(Cs,I,N);return H([z,B,K]),f&&(K=Y(K,[K.shape[1],K.shape[2],K.shape[3]])),{value:K,gradFunc:b}})(m,d):Dr((B,z,H,K)=>{let X=A.runKernel(Cs,I,N);return K([z,B,X,H]),f&&(X=Y(X,[X.shape[1],X.shape[2],X.shape[3]])),{value:X,gradFunc:b}})(m,d,x)}var R_=E({fusedDepthwiseConv2d_:RU});function $U({a:r,b:t,transposeA:e=!1,transposeB:o=!1,bias:n,activation:i="linear",preluActivationWeights:s,leakyreluAlpha:a=.2}){if(Ks(A.state.gradientDepth,i)===!1){let te=tt(r,t,e,o);return n!=null&&(te=fe(te,n)),Hs(te,i,s,a)}let l=C(r,"a","fused matMul"),u=C(t,"b","fused matMul");[l,u]=Ge(l,u);let c=e?l.shape[l.rank-2]:l.shape[l.rank-1],p=o?u.shape[u.rank-1]:u.shape[u.rank-2],d=e?l.shape[l.rank-1]:l.shape[l.rank-2],m=o?u.shape[u.rank-2]:u.shape[u.rank-1],f=l.shape.slice(0,-2),g=u.shape.slice(0,-2),x=Ke(f),y=Ke(g);D(c===p,()=>`Error in fused matMul: inner shapes (${c}) and (${p}) of Tensors with shapes ${l.shape} and ${u.shape} and transposeA=${e} and transposeB=${o} must match.`);let I=Je(l.shape.slice(0,-2),u.shape.slice(0,-2)).concat([d,m]),N=e?Y(l,[x,c,d]):Y(l,[x,d,c]),F=o?Y(u,[y,m,p]):Y(u,[y,p,m]),B;n!=null&&(B=C(n,"bias","fused matMul"),[B]=Ge(B,l),Je(I,B.shape));let z;s!=null&&(z=C(s,"prelu weights","fused matMul"));let H=(te,ue)=>{let[pe,xe,be,Te]=ue,qe=Us(Y(te,be.shape),be,i),je,st;if(!e&&!o?(je=tt(qe,xe,!1,!0),st=tt(pe,qe,!0,!1)):!e&&o?(je=tt(qe,xe,!1,!1),st=tt(qe,pe,!0,!1)):e&&!o?(je=tt(xe,qe,!1,!0),st=tt(pe,qe,!1,!1)):(je=tt(xe,qe,!0,!0),st=tt(qe,pe,!0,!0)),n!=null){let qt=Gs(Te,qe);return[je,st,qt]}else return[je,st]},K={a:N,b:F,bias:B,preluActivationWeights:z},X={transposeA:e,transposeB:o,activation:i,leakyreluAlpha:a};return n==null?Dr((ue,pe,xe)=>{let be=A.runKernel(Ss,K,X);return xe([ue,pe,be]),{value:Y(be,I),gradFunc:H}})(N,F):Dr((ue,pe,xe,be)=>{let Te=A.runKernel(Ss,K,X);return be([ue,pe,Te,xe]),{value:Y(Te,I),gradFunc:H}})(N,F,B)}var $_=E({fusedMatMul_:$U});function PU(r){return Ip(r,.54,.46)}var P_=E({hammingWindow_:PU});function AU(r){return Ip(r,.5,.5)}var wf=E({hannWindow_:AU});function DU(r,t,e,o=!1,n=0){let i=0,s=[];for(;i+t<=r.size;)s.push(Oe(r,i,t)),i+=e;if(o)for(;i<r.size;){let a=i+t-r.size,l=mt([Oe(r,i,t-a),ln([a],n)]);s.push(l),i+=e}return s.length===0?Cr([],[0,t]):Y(mt(s),[s.length,t])}var Cf=E({frame_:DU});function FU(r,t,e,o,n=wf){o==null&&(o=Gy(t));let i=Cf(r,t,e),s=ae(i,n(t));return lc(s,o)}var A_=E({stft_:FU});function OU(r,t,e,o,n="bilinear",i=0){let s=C(r,"image","cropAndResize"),a=C(t,"boxes","cropAndResize","float32"),l=C(e,"boxInd","cropAndResize","int32"),u=a.shape[0];D(s.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${s.rank}.`),D(a.rank===2&&a.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${a.shape}.`),D(l.rank===1&&l.shape[0]===u,()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${a.shape}.`),D(o.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${o.length}.`),D(o[0]>=1&&o[1]>=1,()=>`cropSize must be atleast [1,1], but was ${o}`),D(n==="bilinear"||n==="nearest",()=>`method must be bilinear or nearest, but was ${n}`);let c={image:s,boxes:a,boxInd:l},p={method:n,extrapolationValue:i,cropSize:o};return A.runKernel(hl,c,p)}var D_=E({cropAndResize_:OU});function LU(r){let t=C(r,"image","flipLeftRight","float32");D(t.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`);let e={image:t};return A.runKernel(Rl,e,{})}var F_=E({flipLeftRight_:LU});function MU(r){let t=C(r,"image","grayscaleToRGB"),e=t.rank-1,o=t.shape[e];D(t.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`),D(o===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${o}.`);let n=new Array(t.rank);return n.fill(1,0,e),n[e]=3,Li(t,n)}var O_=E({grayscaleToRGB_:MU});function BU(r){let t=C(r,"image","RGBToGrayscale"),e=t.rank-1,o=t.shape[e];D(t.rank>=2,()=>`Error in RGBToGrayscale: images must be at least rank 2, but got rank ${t.rank}.`),D(o===3,()=>`Error in RGBToGrayscale: last dimension of an RGB image should be size 3, but got size ${o}.`);let n=t.dtype,i=Ue(t,"float32"),s=Rt([.2989,.587,.114]),a;switch(t.rank){case 2:a=Oi("ij,j->i",i,s);break;case 3:a=Oi("ijk,k->ij",i,s);break;case 4:a=Oi("ijkl,l->ijk",i,s);break;case 5:a=Oi("ijklm,m->ijkl",i,s);break;case 6:a=Oi("ijklmn,n->ijklm",i,s);break;default:throw new Error("Not a valid tensor rank.")}return a=dr(a,-1),Ue(a,n)}var L_=E({rgbToGrayscale_:BU});function VU(r,t,e=0,o=.5){let n=C(r,"image","rotateWithOffset","float32");D(n.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${n.rank}.`);let i={image:n},s={radians:t,fillValue:e,center:o};return A.runKernel(Hu,i,s)}var M_=E({rotateWithOffset_:VU});function Io(r,t,e,o,n,i){o==null&&(o=.5),n==null&&(n=Number.NEGATIVE_INFINITY),i==null&&(i=0);let s=r.shape[0];return e=Math.min(e,s),D(0<=o&&o<=1,()=>`iouThreshold must be in [0, 1], but was '${o}'`),D(r.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${r.rank}'`),D(r.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${r.shape[1]}`),D(t.rank===1,()=>"scores must be a 1D tensor"),D(t.shape[0]===s,()=>`scores has incompatible shape with boxes. Expected ${s}, but was ${t.shape[0]}`),D(0<=i&&i<=1,()=>`softNmsSigma must be in [0, 1], but was '${i}'`),{maxOutputSize:e,iouThreshold:o,scoreThreshold:n,softNmsSigma:i}}function WU(r,t,e,o=.5,n=Number.NEGATIVE_INFINITY){let i=C(r,"boxes","nonMaxSuppression","float32"),s=C(t,"scores","nonMaxSuppression","float32"),a=Io(i,s,e,o,n);e=a.maxOutputSize,o=a.iouThreshold,n=a.scoreThreshold;let l={maxOutputSize:e,iouThreshold:o,scoreThreshold:n};return A.runKernel(tu,{boxes:i,scores:s},l)}var B_=E({nonMaxSuppression_:WU});function V_(r,t,e){let o=zU(r,t,e),n=o<0?-(o+1):o;r.splice(n,0,t)}function zU(r,t,e){return GU(r,t,e||UU)}function UU(r,t){return r>t?1:r<t?-1:0}function GU(r,t,e){let o=0,n=r.length,i=0,s=!1;for(;o<n;){i=o+(n-o>>>1);let a=e(t,r[i]);a>0?o=i+1:(n=i,s=!a)}return s?o:-o-1}function _f(r,t,e,o,n){return Ky(r,t,e,o,n,0)}function kf(r,t,e,o,n,i){return Ky(r,t,e,o,n,0,!1,i,!0)}function If(r,t,e,o,n,i){return Ky(r,t,e,o,n,i,!0)}function Ky(r,t,e,o,n,i,s=!1,a=!1,l=!1){let u=[];for(let x=0;x<t.length;x++)t[x]>n&&u.push({score:t[x],boxIndex:x,suppressBeginIndex:0});u.sort(W_);let c=i>0?-.5/i:0,p=[],d=[];for(;p.length<e&&u.length>0;){let x=u.pop(),{score:y,boxIndex:b,suppressBeginIndex:I}=x;if(y<n)break;let N=!1;for(let F=p.length-1;F>=I;--F){let B=HU(r,b,p[F]);if(B>=o){N=!0;break}if(x.score=x.score*KU(o,c,B),x.score<=n)break}x.suppressBeginIndex=p.length,N||(x.score===y?(p.push(b),d.push(x.score)):x.score>n&&V_(u,x,W_))}let m=p.length,f=e-m;a&&f>0&&(p.push(...new Array(f).fill(0)),d.push(...new Array(f).fill(0)));let g={selectedIndices:p};return s&&(g.selectedScores=d),l&&(g.validOutputs=m),g}function HU(r,t,e){let o=r.subarray(t*4,t*4+4),n=r.subarray(e*4,e*4+4),i=Math.min(o[0],o[2]),s=Math.min(o[1],o[3]),a=Math.max(o[0],o[2]),l=Math.max(o[1],o[3]),u=Math.min(n[0],n[2]),c=Math.min(n[1],n[3]),p=Math.max(n[0],n[2]),d=Math.max(n[1],n[3]),m=(a-i)*(l-s),f=(p-u)*(d-c);if(m<=0||f<=0)return 0;let g=Math.max(i,u),x=Math.max(s,c),y=Math.min(a,p),b=Math.min(l,d),I=Math.max(y-g,0)*Math.max(b-x,0);return I/(m+f-I)}function KU(r,t,e){let o=Math.exp(t*e*e);return e<=r?o:0}function W_(r,t){return r.score-t.score||r.score===t.score&&t.boxIndex-r.boxIndex}function qU(i,s,a){return j(this,arguments,function*(r,t,e,o=.5,n=Number.NEGATIVE_INFINITY){let l=C(r,"boxes","nonMaxSuppressionAsync"),u=C(t,"scores","nonMaxSuppressionAsync"),c=Io(l,u,e,o,n);e=c.maxOutputSize,o=c.iouThreshold,n=c.scoreThreshold;let p=yield Promise.all([l.data(),u.data()]),d=p[0],m=p[1],{selectedIndices:f}=_f(d,m,e,o,n);return l!==r&&l.dispose(),u!==t&&u.dispose(),Rt(f,"int32")})}var z_=qU;function jU(r,t,e,o=.5,n=Number.NEGATIVE_INFINITY,i=0){let s=C(r,"boxes","nonMaxSuppression"),a=C(t,"scores","nonMaxSuppression"),l=Io(s,a,e,o,n,i);e=l.maxOutputSize,o=l.iouThreshold,n=l.scoreThreshold,i=l.softNmsSigma;let u={boxes:s,scores:a},c={maxOutputSize:e,iouThreshold:o,scoreThreshold:n,softNmsSigma:i},p=A.runKernel(ru,u,c);return{selectedIndices:p[0],selectedScores:p[1]}}var U_=E({nonMaxSuppressionWithScore_:jU});function XU(s,a,l){return j(this,arguments,function*(r,t,e,o=.5,n=Number.NEGATIVE_INFINITY,i=0){let u=C(r,"boxes","nonMaxSuppressionAsync"),c=C(t,"scores","nonMaxSuppressionAsync"),p=Io(u,c,e,o,n,i);e=p.maxOutputSize,o=p.iouThreshold,n=p.scoreThreshold,i=p.softNmsSigma;let d=yield Promise.all([u.data(),c.data()]),m=d[0],f=d[1],{selectedIndices:g,selectedScores:x}=If(m,f,e,o,n,i);return u!==r&&u.dispose(),c!==t&&c.dispose(),{selectedIndices:Rt(g,"int32"),selectedScores:Rt(x)}})}var G_=XU;function YU(r,t,e,o=.5,n=Number.NEGATIVE_INFINITY,i=!1){let s=C(r,"boxes","nonMaxSuppression"),a=C(t,"scores","nonMaxSuppression"),l=Io(s,a,e,o,n,null),u=l.maxOutputSize,c=l.iouThreshold,p=l.scoreThreshold,d={boxes:s,scores:a},m={maxOutputSize:u,iouThreshold:c,scoreThreshold:p,padToMaxOutputSize:i},f=A.runKernel(om,d,m);return{selectedIndices:f[0],validOutputs:f[1]}}var H_=E({nonMaxSuppressionPadded_:YU});function QU(s,a,l){return j(this,arguments,function*(r,t,e,o=.5,n=Number.NEGATIVE_INFINITY,i=!1){let u=C(r,"boxes","nonMaxSuppressionAsync"),c=C(t,"scores","nonMaxSuppressionAsync"),p=Io(u,c,e,o,n,null),d=p.maxOutputSize,m=p.iouThreshold,f=p.scoreThreshold,[g,x]=yield Promise.all([u.data(),c.data()]),{selectedIndices:y,validOutputs:b}=kf(g,x,d,m,f,i);return u!==r&&u.dispose(),c!==t&&c.dispose(),{selectedIndices:Rt(y,"int32"),validOutputs:Re(b,"int32")}})}var K_=QU;function ZU(r,t,e=!1,o=!1){let n=C(r,"images","resizeBilinear");D(n.rank===3||n.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${n.rank}.`),D(t.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`),D(o===!1||e===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let i=n,s=!1;n.rank===3&&(s=!0,i=Y(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let[]=t,a={images:i},l={alignCorners:e,halfPixelCenters:o,size:t},u=A.runKernel(fu,a,l);return s?Y(u,[u.shape[1],u.shape[2],u.shape[3]]):u}var q_=E({resizeBilinear_:ZU});function JU(r,t,e=!1,o=!1){let n=C(r,"images","resizeNearestNeighbor");D(n.rank===3||n.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${n.rank}.`),D(t.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`),D(n.dtype==="float32"||n.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),D(o===!1||e===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let i=n,s=!1;n.rank===3&&(s=!0,i=Y(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let[]=t,a={images:i},l={alignCorners:e,halfPixelCenters:o,size:t},u=A.runKernel(mu,a,l);return s?Y(u,[u.shape[1],u.shape[2],u.shape[3]]):u}var j_=E({resizeNearestNeighbor_:JU});function eG(r,t="binary",e=!1,o=.5){let n=C(r,"image","threshold"),i=.2989,s=.587,a=.114,l=n.shape[0]*n.shape[1],u=ae(Rt([o]),255),c,p,d,m;if(D(n.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${n.rank}.`),D(n.shape[2]===3||n.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${n.shape[2]}.`),D(n.dtype==="int32"||n.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${n.dtype}.`),D(t==="otsu"||t==="binary",()=>`Method must be binary or otsu, but was ${t}`),n.shape[2]===3){[c,p,d]=Ln(n,[1,1,1],-1);let x=ae(c,i),y=ae(p,s),b=ae(d,a);m=fe(fe(x,y),b)}else m=r;if(t==="otsu"){let x=Mm(Ue(ff(m),"int32"),br([]),256);u=tG(x,l)}let f=e?ic(m,u):Ls(m,u);return Ue(ae(f,255),"int32")}function tG(r,t){let e=Rt([-1]),o=Rt([0]),n=Rt([0]),i,s,a,l,u,c;for(let p=0;p<r.size-1;p++){i=Oe(r,0,p+1),s=Oe(r,p+1),u=Fe(rt(i),t),c=Fe(rt(s),t);let d=rt(ae(i,Bi(0,i.size)));a=Fe(d,rt(i));let m=ln(s.shape,i.size),f=fe(Bi(0,s.size),m),g=ae(s,f);l=Fe(rt(g),rt(s));let x=$e(a,l),y=$e(a,l),b=ae(u,c);n=ae(ae(b,x),y);let I=Ls(n,o);o=co(I,n,o),e=co(I,Rt([p]),e)}return e}var X_=E({threshold_:eG});function rG(r,t,e="nearest",o="constant",n=0,i){let s=C(r,"image","transform","float32"),a=C(t,"transforms","transform","float32");D(s.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${s.rank}.`),D(a.rank===2&&(a.shape[0]===s.shape[0]||a.shape[0]===1)&&a.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),D(i==null||i.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${i}.`);let l={image:s,transforms:a},u={interpolation:e,fillMode:o,fillValue:n,outputShape:i};return A.runKernel(Vu,l,u)}var Y_=E({transform_:rG});function oG(r,t,e){let o=C(r,"a","bandPart");D(o.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${o.rank}.`);let n=o.shape,[i,s]=o.shape.slice(-2),a,l;typeof t=="number"?(D(t%1===0,()=>`bandPart(): numLower must be an integer, got ${t}.`),D(t<=i,()=>`bandPart(): numLower (${t}) must not be greater than the number of rows (${i}).`),a=C(t<0?i:t,"numLower","bandPart")):(D(t.dtype==="int32",()=>"bandPart(): numLower's dtype must be an int32."),a=co(Cp(t,0),i,Fn(t,i))),typeof e=="number"?(D(e%1===0,()=>`bandPart(): numUpper must be an integer, got ${e}.`),D(e<=s,()=>`bandPart(): numUpper (${e}) must not be greater than the number of columns (${s}).`),l=C(e<0?s:e,"numUpper","bandPart")):(D(e.dtype==="int32",()=>"bandPart(): numUpper's dtype must be an int32."),l=co(Cp(e,0),s,Fn(e,s)));let u=Y(Bi(0,i,1,"int32"),[-1,1]),c=Bi(0,s,1,"int32"),p=$e(u,c),d=Ms(ic(p,a),qm(p,tr(l))),m=Sr([i,s],o.dtype);return Y(wr(mo(Y(o,[-1,i,s])).map(f=>co(d,f,m))),n)}var Q_=E({bandPart_:oG});function nG(r){let t;if(Array.isArray(r)){t=!1,D(r!=null&&r.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");let n=r[0].shape[0];for(let i=1;i<r.length;++i)D(r[i].shape[0]===n,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${r[i].shape[0]} vs. ${n})`)}else t=!0,r=Ln(r,r.shape[0],0).map(n=>ct(n,[0]));D(r.length<=r[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${r.length}) exceeds number of dimensions (${r[0].shape[0]}).`);let e=[],o=r;for(let n=0;n<r.length;++n)e.push(A.tidy(()=>{let i=o[n];if(n>0)for(let s=0;s<n;++s){let a=ae(rt(ae(e[s],i)),e[s]);i=$e(i,a)}return Fe(i,Os(i,"euclidean"))}));return t?wr(e,0):e}var Z_=E({gramSchmidt_:nG});function iG(r,t=!1){if(D(r.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${r.rank}`),r.rank===2)return J_(r,t);{let e=r.shape.slice(0,r.shape.length-2).reduce((l,u)=>l*u),o=mo(Y(r,[e,r.shape[r.shape.length-2],r.shape[r.shape.length-1]]),0),n=[],i=[];o.forEach(l=>{let[u,c]=J_(l,t);n.push(u),i.push(c)});let s=Y(wr(n,0),r.shape),a=Y(wr(i,0),r.shape);return[s,a]}}function J_(r,t=!1){return A.tidy(()=>{D(r.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${r.shape.length}D Tensor.`);let e=r.shape[0],o=r.shape[1],n=Gm(e),i=Kr(r),s=Cr([[1]],[1,1]),a=Kr(s),l=e>=o?o:e;for(let u=0;u<l;++u){let c=i,p=a,d=n;[a,i,n]=A.tidy(()=>{let m=Oe(i,[u,u],[e-u,1]),f=Os(m),g=Oe(i,[u,u],[1,1]),x=co(Ls(g,0),Cr([[-1]]),Cr([[1]])),y=$e(g,ae(x,f)),b=Fe(m,y);b.shape[0]===1?a=Kr(s):a=mt([s,Oe(b,[1,0],[b.shape[0]-1,b.shape[1]])],0);let I=tr(Fe(tt(x,y),f)),N=Oe(i,[u,0],[e-u,o]),F=ae(I,a),B=Sf(a);if(u===0)i=$e(N,tt(F,tt(B,N)));else{let K=$e(N,tt(F,tt(B,N)));i=mt([Oe(i,[0,0],[u,o]),K],0)}let z=Sf(F),H=Oe(n,[0,u],[e,n.shape[1]-u]);if(u===0)n=$e(H,tt(tt(H,a),z));else{let K=$e(H,tt(tt(H,a),z));n=mt([Oe(n,[0,0],[e,u]),K],1)}return[a,i,n]}),Xe([c,p,d])}return!t&&e>o&&(n=Oe(n,[0,0],[e,o]),i=Oe(i,[0,0],[o,o])),[n,i]})}var ek=E({qr_:iG});var Lt=function(r){return r[r.NONE=0]="NONE",r[r.MEAN=1]="MEAN",r[r.SUM=2]="SUM",r[r.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS",r}(Lt||{});function sG(r,t,e=Lt.SUM_BY_NONZERO_WEIGHTS){let o=C(r,"losses","computeWeightedLoss"),n=null;t!=null&&(n=C(t,"weights","computeWeightedLoss"));let i=n==null?o:ae(o,n);if(e===Lt.NONE)return i;if(e===Lt.SUM)return rt(i);if(e===Lt.MEAN){if(n==null)return Bs(i);{let s=o.size/n.size,a=Fe(rt(i),rt(n));return s>1?Fe(a,Re(s)):a}}if(e===Lt.SUM_BY_NONZERO_WEIGHTS){if(n==null)return Fe(rt(i),Re(o.size));{let s=ae(n,pn(o.shape)),a=Ue(rt(nf(s,Re(0))),"float32");return Fe(rt(i),a)}}throw Error(`Unknown reduction: ${e}`)}var rr=E({computeWeightedLoss_:sG});function aG(r,t,e,o=Lt.SUM_BY_NONZERO_WEIGHTS){let n=C(r,"labels","absoluteDifference"),i=C(t,"predictions","absoluteDifference"),s=null;e!=null&&(s=C(e,"weights","absoluteDifference")),Nt(n.shape,i.shape,"Error in absoluteDifference: ");let a=Qt($e(n,i));return rr(a,s,o)}var tk=E({absoluteDifference_:aG});function lG(r,t,e,o,n=Lt.SUM_BY_NONZERO_WEIGHTS){let i=C(r,"labels","cosineDistance"),s=C(t,"predictions","cosineDistance"),a=null;o!=null&&(a=C(o,"weights","cosineDistance")),Nt(i.shape,s.shape,"Error in cosineDistance: ");let l=Re(1),u=$e(l,rt(ae(i,s),e,!0));return rr(u,a,n)}var rk=E({cosineDistance_:lG});function uG(r,t,e,o=Lt.SUM_BY_NONZERO_WEIGHTS){let n=C(r,"labels","hingeLoss"),i=C(t,"predictions","hingeLoss"),s=null;e!=null&&(s=C(e,"weights","hingeLoss")),Nt(n.shape,i.shape,"Error in hingeLoss: ");let a=Re(1);n=$e(ae(Re(2),n),a);let l=Vi($e(a,ae(n,i)));return rr(l,s,o)}var ok=E({hingeLoss_:uG});function cG(r,t,e,o=1,n=Lt.SUM_BY_NONZERO_WEIGHTS){let i=C(r,"labels","huberLoss"),s=C(t,"predictions","huberLoss"),a=null;e!=null&&(a=C(e,"weights","huberLoss")),Nt(i.shape,s.shape,"Error in huberLoss: ");let l=Re(o),u=Qt($e(s,i)),c=Fn(u,l),p=$e(u,c),d=fe(ae(Re(.5),Ut(c)),ae(l,p));return rr(d,a,n)}var nk=E({huberLoss_:cG});function pG(r,t,e,o=1e-7,n=Lt.SUM_BY_NONZERO_WEIGHTS){let i=C(r,"labels","logLoss"),s=C(t,"predictions","logLoss"),a=null;e!=null&&(a=C(e,"weights","logLoss")),Nt(i.shape,s.shape,"Error in logLoss: ");let l=Re(1),u=Re(o),c=tr(ae(i,Dn(fe(s,u)))),p=ae($e(l,i),Dn(fe($e(l,s),u))),d=$e(c,p);return rr(d,a,n)}var ik=E({logLoss_:pG});function dG(r,t,e,o=Lt.SUM_BY_NONZERO_WEIGHTS){let n=C(r,"labels","meanSquaredError"),i=C(t,"predictions","meanSquaredError"),s=null;e!=null&&(s=C(e,"weights","meanSquaredError")),Nt(n.shape,i.shape,"Error in meanSquaredError: ");let a=gf(n,i);return rr(a,s,o)}var sk=E({meanSquaredError_:dG});function mG(r,t){let e=C(r,"labels","sigmoidCrossEntropyWithLogits"),o=C(t,"logits","sigmoidCrossEntropyWithLogits");Nt(e.shape,o.shape,"Error in sigmoidCrossEntropyWithLogits: ");let n=Vi(o),i=ae(o,e),s=Xm(Ar(tr(Qt(o))));return fe($e(n,i),s)}function fG(r,t,e,o=0,n=Lt.SUM_BY_NONZERO_WEIGHTS){let i=C(r,"multiClassLabels","sigmoidCrossEntropy"),s=C(t,"logits","sigmoidCrossEntropy"),a=null;if(e!=null&&(a=C(e,"weights","sigmoidCrossEntropy")),Nt(i.shape,s.shape,"Error in sigmoidCrossEntropy: "),o>0){let u=Re(o),c=Re(1),p=Re(.5);i=fe(ae(i,$e(c,u)),ae(p,u))}let l=mG(i,s);return rr(l,a,n)}var ak=E({sigmoidCrossEntropy_:fG});function hG(r,t,e=-1){if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${e}`);return Dr((n,i,s)=>{let l=Qm(i,[e],!0),u=$e(Ue(i,"float32"),l);s([n,u]);let c=tr(ae(u,n));return{value:rt(c,[e]),gradFunc:(m,f)=>{let[g,x]=f,y=Pn(m.shape,[e]);return[ae(Y(m,y),$e(Ue(g,"float32"),Ar(x))),ae(Y(m,y),$e(Ar(x),Ue(g,"float32")))]}}})(r,t)}function gG(r,t,e,o=0,n=Lt.SUM_BY_NONZERO_WEIGHTS){let i=C(r,"onehotLabels","softmaxCrossEntropy"),s=C(t,"logits","softmaxCrossEntropy"),a=null;if(e!=null&&(a=C(e,"weights","softmaxCrossEntropy")),Nt(i.shape,s.shape,"Error in softmaxCrossEntropy: "),o>0){let u=Re(o),c=Re(1),p=Re(i.shape[1]);i=fe(ae(i,$e(c,u)),Fe(u,p))}let l=hG(i,s);return rr(l,a,n)}var lk=E({softmaxCrossEntropy_:gG});function xG(r,t,e,o){let n=C(r,"indices","sparseFillEmptyRows","int32"),i=C(t,"values","sparseFillEmptyRows"),s=C(e,"denseShape","sparseFillEmptyRows","int32"),a=C(o,"defaultValue","sparseFillEmptyRows",i.dtype);if(n.rank!==2)throw new Error(`Indices should be Tensor2D but received shape
        ${n.shape}`);if(i.rank!==1)throw new Error(`Values should be Tensor1D but received shape ${i.shape}`);if(s.rank!==1)throw new Error(`Dense shape should be Tensor1D but received shape ${s.shape}`);if(a.rank!==0)throw new Error(`Default value should be a scalar but received shape ${a.shape}`);let l={indices:n,values:i,denseShape:s,defaultValue:a},u=A.runKernel(um,l);return{outputIndices:u[0],outputValues:u[1],emptyRowIndicator:u[2],reverseIndexMap:u[3]}}var uk=E({sparseFillEmptyRows_:xG});function yG(r,t,e){let o=C(r,"inputIndices","sparseReshape","int32"),n=C(t,"inputShape","sparseReshape","int32"),i=C(e,"newShape","sparseReshape","int32");if(o.rank!==2)throw new Error(`Input indices should be Tensor2D but received shape
        ${o.shape}`);if(n.rank!==1)throw new Error(`Input shape should be Tensor1D but received shape ${n.shape}`);if(i.rank!==1)throw new Error(`New shape should be Tensor1D but received shape ${i.shape}`);let s={inputIndices:o,inputShape:n,newShape:i},a=A.runKernel(cm,s);return{outputIndices:a[0],outputShape:a[1]}}var ck=E({sparseReshape_:yG});function vG(r,t,e){let o=C(r,"data","sparseSegmentMean"),n=C(t,"indices","sparseSegmentMean","int32"),i=C(e,"segmentIds","sparseSegmentMean","int32");if(o.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(n.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
          ${n.shape}`);if(i.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
          ${i.shape}`);let s={data:o,indices:n,segmentIds:i};return A.runKernel($u,s)}var pk=E({sparseSegmentMean_:vG});function bG(r,t,e){let o=C(r,"data","sparseSegmentSum"),n=C(t,"indices","sparseSegmentSum","int32"),i=C(e,"segmentIds","sparseSegmentSum","int32");if(o.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(n.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
         ${n.shape}`);if(i.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
         ${i.shape}`);let s={data:o,indices:n,segmentIds:i};return A.runKernel(Pu,s)}var dk=E({sparseSegmentSum_:bG});function SG(r,t,e,o,n,i,s,a){let l=C(r,"data","stringNGrams","string");if(l.dtype!=="string")throw new Error("Data must be of datatype string");if(l.shape.length!==1)throw new Error(`Data must be a vector, saw: ${l.shape}`);let u=C(t,"dataSplits","stringNGrams");if(u.dtype!=="int32")throw new Error("Data splits must be of datatype int32");let c={separator:e,nGramWidths:o,leftPad:n,rightPad:i,padWidth:s,preserveShortSequences:a},p={data:l,dataSplits:u},d=A.runKernel(Ou,p,c);return{nGrams:d[0],nGramsSplits:d[1]}}var mk=E({stringNGrams_:SG});function wG(r,t,e=!0){let o=C(r,"input","stringSplit","string"),n=C(t,"delimiter","stringSplit","string");if(o.rank!==1)throw new Error(`Input should be Tensor1D but received shape ${o.shape}`);if(n.rank!==0)throw new Error(`Delimiter should be a scalar but received shape ${n.shape}`);let i={skipEmpty:e},s={input:o,delimiter:n},a=A.runKernel(dm,s,i);return{indices:a[0],values:a[1],shape:a[2]}}var fk=E({stringSplit_:wG});function CG(r,t){let e=C(r,"input","stringToHashBucketFast","string"),o={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");let n={input:e};return A.runKernel(mm,n,o)}var hk=E({stringToHashBucketFast_:CG});function _G(r,t,e,o=!0){let n=C(r,"input","staticRegexReplace","string"),i={pattern:t,rewrite:e,replaceGlobal:o};return A.runKernel(Du,{x:n},i)}var gk=E({staticRegexReplace_:_G});var kG={fft:ac,ifft:zs,rfft:lc,irfft:hf},IG={hammingWindow:P_,hannWindow:wf,frame:Cf,stft:A_},Mn={flipLeftRight:F_,grayscaleToRGB:O_,resizeNearestNeighbor:j_,resizeBilinear:q_,rgbToGrayscale:L_,rotateWithOffset:M_,cropAndResize:D_,nonMaxSuppression:B_,nonMaxSuppressionAsync:z_,nonMaxSuppressionWithScore:U_,nonMaxSuppressionWithScoreAsync:G_,nonMaxSuppressionPadded:H_,nonMaxSuppressionPaddedAsync:K_,threshold:X_,transform:Y_},TG={bandPart:Q_,gramSchmidt:Z_,qr:ek},EG={absoluteDifference:tk,computeWeightedLoss:rr,cosineDistance:rk,hingeLoss:ok,huberLoss:nk,logLoss:ik,meanSquaredError:sk,sigmoidCrossEntropy:ak,softmaxCrossEntropy:lk},NG={sparseFillEmptyRows:uk,sparseReshape:ck,sparseSegmentMean:pk,sparseSegmentSum:dk},RG={stringNGrams:mk,stringSplit:fk,stringToHashBucketFast:hk,staticRegexReplace:gk};var $G=new Map,PG=new Map,Tf=class{getClassName(){return this.constructor.className}static fromConfig(t,e){return new t(e)}},qy=class r{constructor(){this.classNameMap={}}static getMap(){return r.instance==null&&(r.instance=new r),r.instance}static register(t){r.getMap().classNameMap[t.className]=[t,t.fromConfig]}};function xk(r,t,e){D(r.className!=null,()=>"Class being registered does not have the static className property defined."),D(typeof r.className=="string",()=>"className is required to be a string, but got type "+typeof r.className),D(r.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),typeof t>"u"&&(t="Custom"),typeof e>"u"&&(e=r.className);let o=e,n=t+">"+o;return qy.register(r),$G.set(n,r),PG.set(r,n),r}var Fr=class extends Tf{minimize(t,e=!1,o){let{value:n,grads:i}=this.computeGradients(t,o);if(o!=null){let s=o.map(a=>({name:a.name,tensor:i[a.name]}));this.applyGradients(s)}else this.applyGradients(i);return Xe(i),e?n:(n.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(t,e){return rC(t,e)}dispose(){this.iterations_!=null&&Xe(this.iterations_)}saveIterations(){return j(this,null,function*(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:Re(this.iterations_,"int32")}})}getWeights(){return j(this,null,function*(){throw new Error("getWeights() is not implemented for this optimizer yet.")})}setWeights(t){return j(this,null,function*(){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)})}extractIterations(t){return j(this,null,function*(){return this.iterations_=(yield t[0].tensor.data())[0],t.slice(1)})}};Object.defineProperty(Fr,Symbol.hasInstance,{value:r=>r.minimize!=null&&r.computeGradients!=null&&r.applyGradients!=null});var Ef=class extends Fr{static get className(){return"Adadelta"}constructor(t,e,o=null){super(),this.learningRate=t,this.rho=e,this.epsilon=o,this.accumulatedGrads=[],this.accumulatedUpdates=[],o==null&&(this.epsilon=A.backend.epsilon())}applyGradients(t){(Array.isArray(t)?t.map(o=>o.name):Object.keys(t)).forEach((o,n)=>{let i=A.registeredVariables[o],s=!1;this.accumulatedGrads[n]==null&&(this.accumulatedGrads[n]={originalName:`${o}/accum_grad`,variable:Ne(()=>zt(i).variable(s))}),this.accumulatedUpdates[n]==null&&(this.accumulatedUpdates[n]={originalName:`${o}/accum_var`,variable:Ne(()=>zt(i).variable(s))});let a=Array.isArray(t)?t[n].tensor:t[o];if(a==null)return;let l=this.accumulatedGrads[n].variable,u=this.accumulatedUpdates[n].variable;Ne(()=>{let c=fe(ae(l,this.rho),ae(Ut(a),1-this.rho)),p=ae(Fe(Pr(fe(u,this.epsilon)),Pr(fe(l,this.epsilon))),a),d=fe(ae(u,this.rho),ae(Ut(p),1-this.rho));l.assign(c),u.assign(d);let m=fe(ae(p,-this.learningRate),i);i.assign(m)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(Xe(this.accumulatedGrads.map(t=>t.variable)),Xe(this.accumulatedUpdates.map(t=>t.variable)))}getWeights(){return j(this,null,function*(){let t=[...this.accumulatedGrads,...this.accumulatedUpdates];return[yield this.saveIterations()].concat(t.map(e=>({name:e.originalName,tensor:e.variable})))})}setWeights(t){return j(this,null,function*(){t=yield this.extractIterations(t);let e=t.length/2,o=!1;this.accumulatedGrads=t.slice(0,e).map(n=>({originalName:n.name,variable:n.tensor.variable(o)})),this.accumulatedUpdates=t.slice(e,e*2).map(n=>({originalName:n.name,variable:n.tensor.variable(o)}))})}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.rho,e.epsilon)}};var Nf=class extends Fr{static get className(){return"Adagrad"}constructor(t,e=.1){super(),this.learningRate=t,this.initialAccumulatorValue=e,this.accumulatedGrads=[]}applyGradients(t){(Array.isArray(t)?t.map(o=>o.name):Object.keys(t)).forEach((o,n)=>{let i=A.registeredVariables[o];this.accumulatedGrads[n]==null&&(this.accumulatedGrads[n]={originalName:`${o}/accumulator`,variable:Ne(()=>ln(i.shape,this.initialAccumulatorValue).variable(!1))});let s=Array.isArray(t)?t[n].tensor:t[o];if(s==null)return;let a=this.accumulatedGrads[n].variable;Ne(()=>{let l=fe(a,Ut(s));a.assign(l);let u=fe(ae(Fe(s,Pr(fe(l,A.backend.epsilon()))),-this.learningRate),i);i.assign(u)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&Xe(this.accumulatedGrads.map(t=>t.variable))}getWeights(){return j(this,null,function*(){return[yield this.saveIterations()].concat(this.accumulatedGrads.map(t=>({name:t.originalName,tensor:t.variable})))})}setWeights(t){return j(this,null,function*(){t=yield this.extractIterations(t);let e=!1;this.accumulatedGrads=t.map(o=>({originalName:o.name,variable:o.tensor.variable(e)}))})}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(t,e){return new t(e.learningRate,e.initialAccumulatorValue)}};var Rf=class extends Fr{static get className(){return"Adam"}constructor(t,e,o,n=null){super(),this.learningRate=t,this.beta1=e,this.beta2=o,this.epsilon=n,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],Ne(()=>{this.accBeta1=Re(e).variable(),this.accBeta2=Re(o).variable()}),n==null&&(this.epsilon=A.backend.epsilon())}applyGradients(t){let e=Array.isArray(t)?t.map(o=>o.name):Object.keys(t);Ne(()=>{let o=$e(1,this.accBeta1),n=$e(1,this.accBeta2);e.forEach((i,s)=>{let a=A.registeredVariables[i],l=!1;this.accumulatedFirstMoment[s]==null&&(this.accumulatedFirstMoment[s]={originalName:`${i}/m`,variable:Ne(()=>zt(a).variable(l))}),this.accumulatedSecondMoment[s]==null&&(this.accumulatedSecondMoment[s]={originalName:`${i}/v`,variable:Ne(()=>zt(a).variable(l))});let u=Array.isArray(t)?t[s].tensor:t[i];if(u==null)return;let c=this.accumulatedFirstMoment[s].variable,p=this.accumulatedSecondMoment[s].variable,d=fe(ae(c,this.beta1),ae(u,1-this.beta1)),m=fe(ae(p,this.beta2),ae(Ut(u),1-this.beta2)),f=Fe(d,o),g=Fe(m,n);c.assign(d),p.assign(m);let x=fe(ae(Fe(f,fe(Pr(g),this.epsilon)),-this.learningRate),a);a.assign(x)}),this.accBeta1.assign(ae(this.accBeta1,this.beta1)),this.accBeta2.assign(ae(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&Xe(this.accumulatedFirstMoment.map(t=>t.variable)),this.accumulatedSecondMoment!=null&&Xe(this.accumulatedSecondMoment.map(t=>t.variable))}getWeights(){return j(this,null,function*(){let t=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[yield this.saveIterations()].concat(t.map(e=>({name:e.originalName,tensor:e.variable})))})}setWeights(t){return j(this,null,function*(){t=yield this.extractIterations(t),Ne(()=>{this.accBeta1.assign(An(this.beta1,this.iterations_+1)),this.accBeta2.assign(An(this.beta2,this.iterations_+1))});let e=t.length/2,o=!1;this.accumulatedFirstMoment=t.slice(0,e).map(n=>({originalName:n.name,variable:n.tensor.variable(o)})),this.accumulatedSecondMoment=t.slice(e,e*2).map(n=>({originalName:n.name,variable:n.tensor.variable(o)}))})}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon)}};var $f=class extends Fr{static get className(){return"Adamax"}constructor(t,e,o,n=null,i=0){super(),this.learningRate=t,this.beta1=e,this.beta2=o,this.epsilon=n,this.decay=i,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],Ne(()=>{this.iteration=Re(0).variable(),this.accBeta1=Re(e).variable()}),n==null&&(this.epsilon=A.backend.epsilon())}applyGradients(t){let e=Array.isArray(t)?t.map(o=>o.name):Object.keys(t);Ne(()=>{let o=$e(1,this.accBeta1),n=Fe(-this.learningRate,fe(ae(this.iteration,this.decay),1));e.forEach((i,s)=>{let a=A.registeredVariables[i],l=!1;this.accumulatedFirstMoment[s]==null&&(this.accumulatedFirstMoment[s]={originalName:`${i}/m`,variable:zt(a).variable(l)}),this.accumulatedWeightedInfNorm[s]==null&&(this.accumulatedWeightedInfNorm[s]={originalName:`${i}/v`,variable:zt(a).variable(l)});let u=Array.isArray(t)?t[s].tensor:t[i];if(u==null)return;let c=this.accumulatedFirstMoment[s].variable,p=this.accumulatedWeightedInfNorm[s].variable,d=fe(ae(c,this.beta1),ae(u,1-this.beta1)),m=ae(p,this.beta2),f=Qt(u),g=rf(m,f);c.assign(d),p.assign(g);let x=fe(ae(Fe(n,o),Fe(d,fe(g,this.epsilon))),a);a.assign(x)}),this.iteration.assign(fe(this.iteration,1)),this.accBeta1.assign(ae(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&Xe(this.accumulatedFirstMoment.map(t=>t.variable)),this.accumulatedWeightedInfNorm!=null&&Xe(this.accumulatedWeightedInfNorm.map(t=>t.variable))}getWeights(){return j(this,null,function*(){throw new Error("getWeights() is not implemented for Adamax yet.")})}setWeights(t){return j(this,null,function*(){throw new Error("setWeights() is not implemented for Adamax yet.")})}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon,e.decay)}};var uc=class extends Fr{static get className(){return"SGD"}constructor(t){super(),this.learningRate=t,this.setLearningRate(t)}applyGradients(t){(Array.isArray(t)?t.map(o=>o.name):Object.keys(t)).forEach((o,n)=>{let i=Array.isArray(t)?t[n].tensor:t[o];if(i==null)return;let s=A.registeredVariables[o];Ne(()=>{let a=fe(ae(this.c,i),s);s.assign(a)})}),this.incrementIterations()}setLearningRate(t){this.learningRate=t,this.c!=null&&this.c.dispose(),this.c=$r(Re(-t))}dispose(){this.c.dispose()}getWeights(){return j(this,null,function*(){return[yield this.saveIterations()]})}setWeights(t){return j(this,null,function*(){if(t=yield this.extractIterations(t),t.length!==0)throw new Error("SGD optimizer does not have settable weights.")})}getConfig(){return{learningRate:this.learningRate}}static fromConfig(t,e){return new t(e.learningRate)}};var Pf=class extends uc{static get className(){return"Momentum"}constructor(t,e,o=!1){super(t),this.learningRate=t,this.momentum=e,this.useNesterov=o,this.accumulations=[],this.m=Re(this.momentum)}applyGradients(t){(Array.isArray(t)?t.map(o=>o.name):Object.keys(t)).forEach((o,n)=>{let i=A.registeredVariables[o];this.accumulations[n]==null&&(this.accumulations[n]={originalName:`${o}/momentum`,variable:Ne(()=>zt(i).variable(!1))});let s=this.accumulations[n].variable,a=Array.isArray(t)?t[n].tensor:t[o];a!=null&&Ne(()=>{let l,u=fe(ae(this.m,s),a);this.useNesterov?l=fe(ae(this.c,fe(a,ae(u,this.m))),i):l=fe(ae(this.c,u),i),s.assign(u),i.assign(l)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&Xe(this.accumulations.map(t=>t.variable))}setMomentum(t){this.momentum=t}getWeights(){return j(this,null,function*(){return[yield this.saveIterations()].concat(this.accumulations.map(t=>({name:t.originalName,tensor:t.variable})))})}setWeights(t){return j(this,null,function*(){t=yield this.extractIterations(t);let e=!1;this.accumulations=t.map(o=>({originalName:o.name,variable:o.tensor.variable(e)}))})}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(t,e){return new t(e.learningRate,e.momentum,e.useNesterov)}};var Af=class extends Fr{static get className(){return"RMSProp"}constructor(t,e=.9,o=0,n=null,i=!1){if(super(),this.learningRate=t,this.decay=e,this.momentum=o,this.epsilon=n,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=i,n==null&&(this.epsilon=A.backend.epsilon()),t==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(t){(Array.isArray(t)?t.map(o=>o.name):Object.keys(t)).forEach((o,n)=>{let i=A.registeredVariables[o],s=!1;this.accumulatedMeanSquares[n]==null&&(this.accumulatedMeanSquares[n]={originalName:`${o}/rms`,variable:Ne(()=>zt(i).variable(s))}),this.accumulatedMoments[n]==null&&(this.accumulatedMoments[n]={originalName:`${o}/momentum`,variable:Ne(()=>zt(i).variable(s))}),this.accumulatedMeanGrads[n]==null&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${o}/mg`,variable:Ne(()=>zt(i).variable(s))});let a=Array.isArray(t)?t[n].tensor:t[o];if(a==null)return;let l=this.accumulatedMeanSquares[n].variable,u=this.accumulatedMoments[n].variable;Ne(()=>{let c=fe(ae(l,this.decay),ae(Ut(a),1-this.decay));if(this.centered){let p=this.accumulatedMeanGrads[n].variable,d=fe(ae(p,this.decay),ae(a,1-this.decay)),m=Fe(ae(a,this.learningRate),Pr($e(c,fe(Ut(d),this.epsilon)))),f=fe(ae(u,this.momentum),m);l.assign(c),p.assign(d),u.assign(f);let g=$e(i,f);i.assign(g)}else{let p=fe(ae(l,this.decay),ae(Ut(a),1-this.decay)),d=fe(ae(u,this.momentum),Fe(ae(a,this.learningRate),Pr(fe(p,this.epsilon))));l.assign(p),u.assign(d);let m=$e(i,d);i.assign(m)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&Xe(this.accumulatedMeanSquares.map(t=>t.variable)),this.accumulatedMeanGrads!=null&&this.centered&&Xe(this.accumulatedMeanGrads.map(t=>t.variable)),this.accumulatedMoments!=null&&Xe(this.accumulatedMoments.map(t=>t.variable))}getWeights(){return j(this,null,function*(){let t=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&t.push(...this.accumulatedMeanGrads),[yield this.saveIterations()].concat(t.map(e=>({name:e.originalName,tensor:e.variable})))})}setWeights(t){return j(this,null,function*(){t=yield this.extractIterations(t);let e=this.centered?t.length/3:t.length/2,o=!1;this.accumulatedMeanSquares=t.slice(0,e).map(n=>({originalName:n.name,variable:n.tensor.variable(o)})),this.accumulatedMoments=t.slice(e,e*2).map(n=>({originalName:n.name,variable:n.tensor.variable(o)})),this.centered&&(this.accumulatedMeanGrads=t.slice(e*2,e*3).map(n=>({originalName:n.name,variable:n.tensor.variable(o)})))})}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(t,e){return new t(e.learningRate,e.decay,e.momentum,e.epsilon,e.centered)}};var AG=[Ef,Nf,Rf,$f,Pf,Af,uc];function yk(){for(let r of AG)xk(r)}var Ep={};dt(Ep,{CompositeArrayBuffer:()=>er,browserFiles:()=>bk,browserHTTPRequest:()=>kk,concatenateArrayBuffers:()=>M2,copyModel:()=>Z2,decodeWeights:()=>Tm,decodeWeightsStream:()=>Em,encodeWeights:()=>D2,fromMemory:()=>Ik,fromMemorySync:()=>e1,getLoadHandlers:()=>z2,getModelArtifactsForJSON:()=>Ju,getModelArtifactsForJSONSync:()=>Ty,getModelArtifactsInfoForJSON:()=>nn,getSaveHandlers:()=>W2,getWeightSpecs:()=>yp,http:()=>Ff,isHTTPScheme:()=>Df,listModels:()=>Y2,loadWeights:()=>wk,moveModel:()=>J2,registerLoadRouter:()=>V2,registerSaveRouter:()=>B2,removeModel:()=>Q2,weightsLoaderFactory:()=>Zy,withSaveHandler:()=>Tk,withSaveHandlerSync:()=>Ek});var DG="model",FG=".json",OG=".weights.bin";function vk(r){return new Promise(t=>setTimeout(t)).then(r)}var jy=(()=>{class r{constructor(e){if(!G().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(r.URL_SCHEME)&&(e=e.slice(r.URL_SCHEME.length)),(e==null||e.length===0)&&(e=DG),this.modelJsonFileName=e+FG,this.weightDataFileName=e+OG}save(e){return j(this,null,function*(){if(typeof document>"u")throw new Error("Browser downloads are not supported in this environment since `document` is not present");let o=er.join(e.weightData),n=window.URL.createObjectURL(new Blob([o],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{let i=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],s=Nm(e,i),a=window.URL.createObjectURL(new Blob([JSON.stringify(s)],{type:"application/json"})),l=this.modelJsonAnchor==null?document.createElement("a"):this.modelJsonAnchor;if(l.download=this.modelJsonFileName,l.href=a,yield vk(()=>l.dispatchEvent(new MouseEvent("click"))),e.weightData!=null){let u=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;u.download=this.weightDataFileName,u.href=n,yield vk(()=>u.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:nn(e)}}})}}return r.URL_SCHEME="downloads://",r})();var Xy=class{constructor(t){if(t==null||t.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${t}`);this.jsonFile=t[0],this.weightsFiles=t.slice(1)}load(){return j(this,null,function*(){return new Promise((t,e)=>{let o=new FileReader;o.onload=n=>{let i=JSON.parse(n.target.result),s=i.modelTopology;if(s==null){e(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));return}if(i.weightsManifest==null){e(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));return}if(this.weightsFiles.length===0){t({modelTopology:s});return}let l=Ju(i,u=>this.loadWeights(u));t(l)},o.onerror=n=>e(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),o.readAsText(this.jsonFile)})})}loadWeights(t){let e=[],o=[];for(let s of t)e.push(...s.weights),o.push(...s.paths);let n=this.checkManifestAndWeightFiles(t),i=o.map(s=>this.loadWeightsFile(s,n[s]));return Promise.all(i).then(s=>[e,s])}loadWeightsFile(t,e){return new Promise((o,n)=>{let i=new FileReader;i.onload=s=>{let a=s.target.result;o(a)},i.onerror=s=>n(`Failed to weights data from file of path '${t}'.`),i.readAsArrayBuffer(e)})}checkManifestAndWeightFiles(t){let e=[],o=this.weightsFiles.map(i=>Iy(i.name)),n={};for(let i of t)i.paths.forEach(s=>{let a=Iy(s);if(e.indexOf(a)!==-1)throw new Error(`Duplicate file basename found in weights manifest: '${a}'`);if(e.push(a),o.indexOf(a)===-1)throw new Error(`Weight file with basename '${a}' is not provided.`);n[s]=this.weightsFiles[o.indexOf(a)]});if(e.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${e.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return n}},LG=r=>G().getBool("IS_BROWSER")&&!Array.isArray(r)&&r.startsWith(jy.URL_SCHEME)?MG(r.slice(jy.URL_SCHEME.length)):null;Ht.registerSaveRouter(LG);function MG(r="model"){return new jy(r)}function bk(r){return new Xy(r)}function Yy(r,t,e,o){s(r),e=e??0,o=o??1,a(e,o);let n=0,i=l=>(l.then(u=>{let c=e+ ++n/r.length*(o-e);return t(c),u}),l);function s(l){D(l!=null&&Array.isArray(l)&&l.length>0,()=>"promises must be a none empty array")}function a(l,u){D(l>=0&&l<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${l}`),D(u>=0&&u<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${u}`),D(u>=l,()=>`startFraction must be no more than endFraction, but got startFraction ${l} and endFraction ${u}`)}return Promise.all(r.map(i))}function Qy(r,t){return j(this,null,function*(){t==null&&(t={});let e=t.fetchFunc==null?G().platform.fetch:t.fetchFunc,o=r.map(p=>e(p,t.requestInit,{isBinary:!0})),a=(t.onProgress==null?yield Promise.all(o):yield Yy(o,t.onProgress,0,.5)).map(p=>p.arrayBuffer());return t.onProgress==null?yield Promise.all(a):yield Yy(a,t.onProgress,.5,1)})}function Sk(r,t){var e;let o=t.fetchFunc==null?G().platform.fetch:t.fetchFunc,n=0,i;return(e=t.onProgress)===null||e===void 0||e.call(t,0),new ReadableStream({pull:s=>j(null,null,function*(){for(var a;n<r.length;){i||(i=(yield o(r[n],t.requestInit,{isBinary:!0})).body.getReader());let{done:l,value:u}=yield i.read();if(l){n++,i=void 0,(a=t.onProgress)===null||a===void 0||a.call(t,n/r.length);continue}s.enqueue(u);return}s.close()})})}function wk(r,t="",e,o){return j(this,null,function*(){return Zy(s=>Qy(s,{requestInit:o}))(r,t,e)})}function Zy(r){return(t,e="",o)=>j(null,null,function*(){let n=t.map(()=>!1),i={},s=o!=null?o.map(()=>!1):[],a=[];if(t.forEach((m,f)=>{let g=0;m.weights.forEach(x=>{let y="quantization"in x?x.quantization.dtype:x.dtype,b=Rn[y]*Ke(x.shape),I=()=>{n[f]=!0,i[f]==null&&(i[f]=[]),i[f].push({manifestEntry:x,groupOffset:g,sizeBytes:b})};o!=null?o.forEach((N,F)=>{N===x.name&&(I(),s[F]=!0)}):I(),a.push(x.name),g+=b})}),!s.every(m=>m)){let m=o.filter((f,g)=>!s[g]);throw new Error(`Could not find weights in manifest with names: ${m.join(", ")}. 
Manifest JSON has weights with names: ${a.join(", ")}.`)}let l=n.reduce((m,f,g)=>(f&&m.push(g),m),[]),u=[];l.forEach(m=>{t[m].paths.forEach(f=>{let g=e+(e.endsWith("/")?"":"/")+f;u.push(g)})});let c=yield r(u),p={},d=0;return l.forEach(m=>{let f=t[m].paths.length,g=new er(c.slice(d,d+f));i[m].forEach(y=>{let b=g.slice(y.groupOffset,y.groupOffset+y.sizeBytes),I=Tm(b,[y.manifestEntry]);for(let N in I)p[N]=I[N]}),d+=f}),p})}var BG="application/octet-stream",VG="application/json",Ck=(()=>{class r{constructor(e,o){if(this.DEFAULT_METHOD="POST",o==null&&(o={}),this.weightPathPrefix=o.weightPathPrefix,this.weightUrlConverter=o.weightUrlConverter,o.fetchFunc!=null?(D(typeof o.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=o.fetchFunc):this.fetch=G().platform.fetch,D(e!=null&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&D(e.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,o.requestInit!=null&&o.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=o.requestInit||{},this.loadOptions=o}save(e){return j(this,null,function*(){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");let o=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);o.body=new FormData;let n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],i=Nm(e,n);if(o.body.append("model.json",new Blob([JSON.stringify(i)],{type:VG}),"model.json"),e.weightData!=null){let a=er.join(e.weightData);o.body.append("model.weights.bin",new Blob([a],{type:BG}),"model.weights.bin")}let s=yield this.fetch(this.path,o);if(s.ok)return{modelArtifactsInfo:nn(e),responses:[s]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${s.status}.`)})}loadModelJSON(){return j(this,null,function*(){let e=yield this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let o;try{o=yield e.json()}catch{let a=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?a+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":a+=" Please make sure the server is serving valid JSON for this request.",new Error(a)}let n=o.modelTopology,i=o.weightsManifest;if(n==null&&i==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return o})}load(){return j(this,null,function*(){if(this.loadOptions.streamWeights)return this.loadStream();let e=yield this.loadModelJSON();return Ju(e,o=>this.loadWeights(o))})}loadStream(){return j(this,null,function*(){let e=yield this.loadModelJSON(),o=yield this.getWeightUrls(e.weightsManifest),n=yp(e.weightsManifest),i=()=>Sk(o,this.loadOptions);return Object.assign(Object.assign({},e),{weightSpecs:n,getWeightStream:i})})}getWeightUrls(e){return j(this,null,function*(){let o=Array.isArray(this.path)?this.path[1]:this.path,[n,i]=WG(o),s=this.weightPathPrefix||n,a=[],l=[];for(let u of e)for(let c of u.paths)this.weightUrlConverter!=null?l.push(this.weightUrlConverter(c)):a.push(s+c+i);return this.weightUrlConverter&&a.push(...yield Promise.all(l)),a})}loadWeights(e){return j(this,null,function*(){let o=yield this.getWeightUrls(e),n=yp(e),i=yield Qy(o,this.loadOptions);return[n,i]})}}return r.URL_SCHEME_REGEX=/^https?:\/\//,r})();function WG(r){let t=r.lastIndexOf("/"),e=r.lastIndexOf("?"),o=r.substring(0,t),n=e>t?r.substring(e):"";return[o+"/",n]}function Df(r){return r.match(Ck.URL_SCHEME_REGEX)!=null}var _k=(r,t)=>{if(typeof fetch>"u"&&(t==null||t.fetchFunc==null))return null;{let e=!0;if(Array.isArray(r)?e=r.every(o=>Df(o)):e=Df(r),e)return Ff(r,t)}return null};Ht.registerSaveRouter(_k);Ht.registerLoadRouter(_k);function Ff(r,t){return new Ck(r,t)}function kk(r,t){return Ff(r,t)}var Tp=class{constructor(t){this.modelArtifacts=t}load(){return this.modelArtifacts}},Of=class{constructor(t){this.saveHandler=t}save(t){return this.saveHandler(t)}},Jy=class{constructor(t){t.load&&(this.load=()=>Promise.resolve(t.load())),t.save&&(this.save=e=>Promise.resolve(t.save(e)))}};function Ik(r,t,e,o){let n=arguments;return new Jy(e1(...n))}function e1(r,t,e,o){return arguments.length===1?r.modelTopology!=null||r.weightSpecs!=null?new Tp(r):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Tp({modelTopology:r})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Tp({modelTopology:r,weightSpecs:t,weightData:e,trainingConfig:o}))}function Tk(r){return new Of(r)}function Ek(r){return new Of(r)}var Wi={};dt(Wi,{draw:()=>XG,fromPixels:()=>YG,fromPixelsAsync:()=>KG,toPixels:()=>jG});var qs,Nk=!1;function Rk(r,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(r==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let e=!1,o=!1,n=!1,i=!1,s=!1,a=!1;if(r.data instanceof Uint8Array)e=!0;else if(typeof ImageData<"u"&&r instanceof ImageData)o=!0;else if(typeof HTMLVideoElement<"u"&&r instanceof HTMLVideoElement)n=!0;else if(typeof HTMLImageElement<"u"&&r instanceof HTMLImageElement)i=!0;else if(r.getContext!=null)s=!0;else if(typeof ImageBitmap<"u"&&r instanceof ImageBitmap)a=!0;else throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${r.constructor.name}`);if(Ku(bs,A.backendName)!=null){let f={pixels:r},g={numChannels:t};return A.runKernel(bs,f,g)}let[u,c]=n?[r.videoWidth,r.videoHeight]:[r.width,r.height],p;if(s)p=r.getContext("2d").getImageData(0,0,u,c).data;else if(o||e)p=r.data;else if(i||n||a){if(qs==null)if(typeof document>"u")if(typeof OffscreenCanvas<"u"&&typeof OffscreenCanvasRenderingContext2D<"u")qs=new OffscreenCanvas(1,1).getContext("2d");else throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");else qs=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});qs.canvas.width=u,qs.canvas.height=c,qs.drawImage(r,0,0,u,c),p=qs.getImageData(0,0,u,c).data}let d;if(t===4)d=new Int32Array(p);else{let f=u*c;d=new Int32Array(f*t);for(let g=0;g<f;g++)for(let x=0;x<t;++x)d[g*t+x]=p[g*4+x]}return yf(d,[c,u,t],"int32")}function zG(r){return r!=null&&r.data instanceof Uint8Array}function UG(){return typeof window<"u"&&typeof ImageBitmap<"u"&&window.hasOwnProperty("createImageBitmap")}function GG(r){return r!=null&&r.width!==0&&r.height!==0}function HG(r){return UG()&&!(r instanceof ImageBitmap)&&GG(r)&&!zG(r)}function KG(r,t=3){return j(this,null,function*(){let e=null;if(G().getBool("WRAP_TO_IMAGEBITMAP")&&HG(r)){let o;try{o=yield createImageBitmap(r,{premultiplyAlpha:"none"})}catch{o=null}o!=null&&o.width===r.width&&o.height===r.height?e=o:e=r}else e=r;return Rk(e,t)})}function $k(r){if(r.rank!==2&&r.rank!==3)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${r.rank}.`);let t=r.rank===2?1:r.shape[2];if(t>4||t===2)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${t}`);if(r.dtype!=="float32"&&r.dtype!=="int32")throw new Error(`Unsupported type for toPixels: ${r.dtype}. Please use float32 or int32 tensors.`)}function qG(r){let t=r?.alpha||1;if(t>1||t<0)throw new Error(`Alpha value ${t} is suppoed to be in range [0 - 1].`)}function jG(r,t){return j(this,null,function*(){let e=C(r,"img","toPixels");if(!(r instanceof at)){let u=e;e=Ue(u,"int32"),u.dispose()}$k(e);let[o,n]=e.shape.slice(0,2),i=e.rank===2?1:e.shape[2],s=yield e.data(),a=e.dtype==="float32"?255:1,l=new Uint8ClampedArray(n*o*4);for(let u=0;u<o*n;++u){let c=[0,0,0,255];for(let d=0;d<i;d++){let m=s[u*i+d];if(e.dtype==="float32"){if(m<0||m>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${m}.`)}else if(e.dtype==="int32"&&(m<0||m>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${m}.`);i===1?(c[0]=m*a,c[1]=m*a,c[2]=m*a):c[d]=m*a}let p=u*4;l[p+0]=Math.round(c[0]),l[p+1]=Math.round(c[1]),l[p+2]=Math.round(c[2]),l[p+3]=Math.round(c[3])}if(t!=null){Nk||Ku(mp,A.backendName)!=null&&(console.warn("tf.browser.toPixels is not efficient to draw tensor on canvas. Please try tf.browser.draw instead."),Nk=!0),t.width=n,t.height=o;let u=t.getContext("2d"),c=new ImageData(l,n,o);u.putImageData(c,0,0)}return e!==r&&e.dispose(),l})}function XG(r,t,e){let o=C(r,"img","draw");if(!(r instanceof at)){let s=o;o=Ue(s,"int32"),s.dispose()}$k(o),qG(e?.imageOptions);let n={image:o},i={canvas:t,options:e};A.runKernel(mp,n,i)}var YG=E({fromPixels_:Rk});function QG(r,t){let e=r.shape.length,o=t.shape.length;if(e<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${e}.`);if(o<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${o}.`);if(t.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[o-1]>e)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[o-1]} vs. ${e}`);if(Ke(r.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${r.shape}.`);let n=t.shape,i=n[n.length-1],s=1;for(let p=0;p<n.length-1;++p)s*=n[p];let a=r.shape,l=n.slice();l.pop();let u=1;for(let p=i;p<e;++p)u*=a[p],l.push(a[p]);let c=[...tn(r.shape).map(p=>p/u),1].slice(0,i);return[l,s,u,c]}var Gt={};dt(Gt,{assertParamsValid:()=>JG,computeFlatOffset:()=>n7,computeOutShape:()=>t7,getNormalizedAxes:()=>r7,isSliceContinous:()=>o7,maskToAxes:()=>e7,parseSliceParams:()=>i7,sliceInfo:()=>s7,startForAxis:()=>Bk,startIndicesWithElidedDims:()=>Ok,stopForAxis:()=>Vk,stopIndicesWithElidedDims:()=>Lk,stridesForAxis:()=>Mk,stridesWithElidedDims:()=>Ak});var t1=-2,ZG=-1;function JG(r,t,e){let o=r.shape.length;D(o===t.length,()=>`Error in slice${o}D: Length of begin ${t} must match the rank of the array (${o}).`),D(o===e.length,()=>`Error in slice${o}D: Length of size ${e} must match the rank of the array (${o}).`);for(let n=0;n<o;++n)D(t[n]+e[n]<=r.shape[n],()=>`Error in slice${o}D: begin[${n}] + size[${n}] (${t[n]+e[n]}) would overflow input.shape[${n}] (${r.shape[n]})`)}function e7(r){let t=[],e=0;for(;r>0;)r&1&&t.push(e),r/=2,e++;return t}function t7(r,t,e){let o=[];for(let n=0;n<r.length;n++)o[n]=Math.ceil((t[n]-r[n])/e[n]);return o}function Ak(r,t,e,o){let n=[...r];for(let i=n.length;i<o.length;i++)n.push(1);for(let i=0;i<e;i++)i===0?n[t]=1:(n.splice(t,0,1),n.pop());return n}function Dk(r,t,e){return e<=r?e:e-(t-1)}function Fk(r,t){let e=[];for(let o=0;o<r;o++)e.push(t+o);return e}function r7(r,t,e,o,n,i,s,a,l){let u=r.length,c=new Array(u),p=new Array(u),d=new Array(u);if(t.length&&e>0){let m=t[0],f=e+1;c=Ok(s,m,f,o,r),p=Lk(a,m,f,n,r),d=Ak(i,m,f,r)}else for(let m=0;m<u;m++)c[m]=Bk(s,o,i,r,m,l),p[m]=Vk(a,n,i,r,m,l),d[m]=Mk(i,m,l);return{begin:c,end:p,strides:d}}function Ok(r,t,e,o,n){let i=[...n],s=Fk(e,t);for(let a=0;a<i.length;a++)if(s.indexOf(a)>-1)i[a]=0;else{let l=Dk(t,e,a),u=o[l];r&1<<l&&(u=0),i[a]=u}return i}function Lk(r,t,e,o,n){let i=[...n],s=Fk(e,t);for(let a=0;a<i.length;a++)if(s.indexOf(a)>-1)i[a]=Number.MAX_SAFE_INTEGER;else{let l=Dk(t,e,a),u=o[l];r&1<<l&&(u=Number.MAX_SAFE_INTEGER),i[a]=u}for(let a=0;a<i.length;a++){let l=n[a];i[a]<0&&(i[a]+=l),i[a]=Pa(0,i[a],n[a])}return i}function Mk(r,t,e){let o=r[t];return(e&1<<t||o==null)&&(o=1),o}function Bk(r,t,e,o,n,i){let s=t[n],a=e[n]||1;(r&1<<n||i&1<<n||s==null)&&(a>0?s=Number.MIN_SAFE_INTEGER:s=Number.MAX_SAFE_INTEGER);let l=o[n];return s<0&&(s+=l),s=Pa(0,s,l-1),s}function Vk(r,t,e,o,n,i){let s=t[n],a=e[n]||1;(r&1<<n||i&1<<n||s==null)&&(a>0?s=Number.MAX_SAFE_INTEGER:s=Number.MIN_SAFE_INTEGER);let l=o[n];return s<0&&(s+=l),a>0?s=Pa(0,s,l):s=Pa(-1,s,l-1),s}function o7(r,t,e){let o=e.length;for(let n=0;n<e.length;n++)if(e[n]>1){o=n;break}for(let n=o+1;n<e.length;n++)if(t[n]>0||e[n]!==r[n])return!1;return!0}function n7(r,t){let e=r.length>0?r[r.length-1]:1;for(let o=0;o<r.length-1;o++)e+=r[o]*t[o];return e}function i7(r,t,e){let o,n=r.shape.length;typeof t=="number"?o=[t,...new Array(n-1).fill(0)]:t.length<n?o=t.concat(new Array(n-t.length).fill(0)):o=t.slice(),o.forEach(s=>{D(s!==-1,()=>"slice() does not support negative begin indexing.")});let i;return e==null?i=new Array(n).fill(-1):typeof e=="number"?i=[e,...new Array(n-1).fill(-1)]:e.length<n?i=e.concat(new Array(n-e.length).fill(-1)):i=e,i=i.map((s,a)=>s>=0?s:(D(s===-1,()=>`Negative size values should be exactly -1 but got ${s} for the slice() size at index ${a}.`),r.shape[a]-o[a])),[o,i]}function s7(r,t,e,o,n,i,s,a,l){let u;if(o==null?(u=new Array(t.length),u.fill(1)):u=o,s!=null&&(s&s-1)!==0)throw new Error("Multiple ellipses in slice is not allowed.");let c=!1,p={dims:u.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:e.slice(),strides:u.slice(),beginMask:n,endMask:i,ellipsisMask:s,newAxisMask:a,shrinkAxisMask:l};for(let I=0;I<p.dims;I++)c&&(1<<I&a)!==0&&p.numAddAxisAfterEllipsis++,1<<I&s&&(c=!0);c||(p.ellipsisMask|=1<<p.dims,p.dims++);let d={dims:r.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};a7(p,d);let m=!0,f=!0,g=!0,x=[],y=[];for(let I=0;I<r.length;++I){if(d.strides[I]===0)throw Error(`strides[${I}] must be non-zero`);let N=!!(d.shrinkAxisMask&1<<I),F=r[I];if(F===-1){x.push(N?1:-1);continue}let B=[d.beginMask&1<<I,d.endMask&1<<I],z=[d.strides[I]>0?0:-1,d.strides[I]>0?F:F-1];if(N&&d.strides[I]<=0)throw Error("only stride 1 allowed on non-range indexing.");g=g&&d.strides[I]===1;let H=!!(d.beginMask&1<<I&&d.endMask&1<<I);if(d.beginValid&&d.endValid){if(N){let ue=d.begin[I]<0?F+d.begin[I]:d.begin[I];if(d.begin[I]=ue,d.end[I]=d.begin[I]+1,ue<0||ue>=F)throw Error(`slice index ${d.begin[I]} of dimension ${I} out of bounds.`)}else d.begin[I]=Pk(d.begin[I],0,d.strides[I],F,B,z),d.end[I]=Pk(d.end[I],1,d.strides[I],F,B,z);let te=d.strides[I]===1&&d.begin[I]===0&&d.end[I]===F;m=m&&te,f=f&&(I===0&&d.strides[I]===1||te)}else m=m&&d.strides[I]===1&&H,f=f&&(I===0&&d.strides[I]===1||H);let K,X=!1;if(d.beginValid&&d.endValid?(K=d.end[I]-d.begin[I],X=!0):N?(K=1,X=!0):H&&F>=0&&(d.strides[I]<0?K=-F:K=F,X=!0),X){let te;K===0||K<0!=d.strides[I]<0?te=0:te=Math.trunc(K/d.strides[I])+(K%d.strides[I]!==0?1:0),x.push(te)}else x.push(-1)}for(let I=0;I<d.finalShapeGatherIndices.length;++I){let N=d.finalShapeGatherIndices[I];N>=0?y.push(x[N]):N===t1&&y.push(1)}return{finalShapeSparse:y.filter((I,N)=>d.finalShapeGatherIndices[N]!==t1),finalShape:y,isIdentity:m,sliceDim0:f,isSimpleSlice:g,begin:d.begin,end:d.end,strides:d.strides}}function a7(r,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let e=0;t.beginValid=r.begin!=null,t.endValid=r.end!=null,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let o=0;o<r.dims;o++)if(1<<o&r.ellipsisMask){let n=Math.min(t.dims-(r.dims-o)+1+r.numAddAxisAfterEllipsis,t.dims);for(;e<n;e++)t.begin[e]=0,t.end[e]=0,t.strides[e]=1,t.beginMask|=1<<e,t.endMask|=1<<e,t.finalShapeGatherIndices.push(e),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[e]=o}else if(1<<o&r.newAxisMask)t.finalShapeGatherIndices.push(t1),t.finalShapeGatherIndicesSparse.push(-1);else{if(e===t.begin.length)throw Error(`Index out of range using input dim ${e}; input has only ${t.dims} dims, ${t.begin.length}.`);r.begin!=null&&(t.begin[e]=r.begin[o]),r.end!=null&&(t.end[e]=r.end[o]),t.strides[e]=r.strides[o],r.beginMask&1<<o&&(t.beginMask|=1<<e),r.endMask&1<<o&&(t.endMask|=1<<e),r.shrinkAxisMask&1<<o?(t.finalShapeGatherIndices.push(ZG),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<e):(t.finalShapeGatherIndices.push(e),t.finalShapeGatherIndicesSparse.push(o)),t.inputShapeGatherIndicesSparse[e]=o,e++}}function Pk(r,t,e,o,n,i){if(n[t])return e>0?i[t]:i[t+1&1];{let s=r<0?o+r:r;return s<i[0]?i[0]:s>i[1]?i[1]:s}}var l7=typeof requestAnimationFrame<"u"?requestAnimationFrame:typeof setImmediate<"u"?setImmediate:r=>r();function r1(){return new Promise(r=>l7(()=>r()))}var $={};dt($,{ERF_A1:()=>k7,ERF_A2:()=>I7,ERF_A3:()=>T7,ERF_A4:()=>E7,ERF_A5:()=>N7,ERF_P:()=>_7,PARALLELIZE_THRESHOLD:()=>Lf,RowPartitionType:()=>Bn,SELU_SCALE:()=>C7,SELU_SCALEALPHA:()=>w7,applyActivation:()=>Hs,assertAndGetBroadcastShape:()=>Je,assertAxesAreInnerMostDims:()=>qW,assertParamsConsistent:()=>u7,assignToTypedArray:()=>F7,axesAreInnerMostDims:()=>Ly,calculateShapes:()=>rU,checkEinsumDimSizes:()=>W7,checkPadOnDimRoundingMode:()=>Ot,combineLocations:()=>qw,combineRaggedTensorToTensorShapes:()=>p7,complexWithEvenIndex:()=>P7,complexWithOddIndex:()=>A7,computeConv2DInfo:()=>Fs,computeConv3DInfo:()=>fw,computeDefaultPad:()=>Oy,computeDilation2DInfo:()=>H5,computeOptimalWindowSize:()=>h7,computeOutAndReduceShapes:()=>KW,computeOutShape:()=>c7,computePool2DInfo:()=>Fy,computePool3DInfo:()=>K5,convertConv2DDataFormat:()=>hw,decodeEinsumEquation:()=>B7,eitherStridesOrDilationsAreOne:()=>pr,expandShapeToKeepDim:()=>Pn,exponent:()=>L7,exponents:()=>O7,fromStringArrayToUint8:()=>l8,fromUint8ToStringArray:()=>a8,getAxesPermutation:()=>jW,getBroadcastDims:()=>zw,getComplexWithIndex:()=>D7,getEinsumComputePath:()=>z7,getEinsumPermutation:()=>V7,getFusedBiasGradient:()=>Gs,getFusedDyActivation:()=>Us,getImageCenter:()=>g7,getInnerMostAxes:()=>YW,getPermuted:()=>y7,getRaggedRank:()=>m7,getReductionAxes:()=>Wm,getReshaped:()=>x7,getReshapedPermuted:()=>v7,getRowPartitionTypesHelper:()=>d7,getSliceBeginCoords:()=>b7,getSliceSize:()=>S7,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>K7,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>q7,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>j7,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>Q7,getSparseReshapeInputOutputMismatchErrorMessage:()=>J7,getSparseReshapeInputOutputMultipleErrorMessage:()=>Z7,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>X7,getSparseReshapeNegativeOutputDimErrorMessage:()=>Y7,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>o8,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>e8,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>t8,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>r8,getUndoAxesPermutation:()=>XW,isIdentityPermutation:()=>U7,log:()=>OV,mergeRealAndImagArrays:()=>R7,prepareAndValidate:()=>QG,prepareSplitSize:()=>H7,segment_util:()=>n1,shouldFuse:()=>Ks,slice_util:()=>Gt,splitRealAndImagArrays:()=>$7,stridesOrDilationsArePositive:()=>sn,tupleValuesAreOne:()=>Ds,upcastType:()=>It,validateDefaultValueShape:()=>f7,validateInput:()=>kp,validateUpdateShape:()=>h_,warn:()=>Tn});function u7(r,t){let e=r[0].length;r.forEach((n,i)=>{D(n.length===e,()=>`Error in concat${e}D: rank of tensors[${i}] must be the same as the rank of the rest (${e})`)}),D(t>=0&&t<e,()=>`Error in concat${e}D: axis must be between 0 and ${e-1}.`);let o=r[0];r.forEach((n,i)=>{for(let s=0;s<e;s++)D(s===t||n[s]===o[s],()=>`Error in concat${e}D: Shape of tensors[${i}] (${n}) does not match the shape of the rest (${o}) along the non-concatenated axis ${i}.`)})}function c7(r,t){let e=r[0].slice();for(let o=1;o<r.length;o++)e[t]+=r[o][t];return e}var Bn=function(r){return r[r.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",r[r.VALUE_ROWIDS=1]="VALUE_ROWIDS",r[r.ROW_LENGTHS=2]="ROW_LENGTHS",r[r.ROW_SPLITS=3]="ROW_SPLITS",r[r.ROW_LIMITS=4]="ROW_LIMITS",r[r.ROW_STARTS=5]="ROW_STARTS",r}(Bn||{});function p7(r,t,e){let o=new Array;if(e==null&&t==null)return o;if(t==null)for(;o.length<r+e.length;)o.push(-1);else o=t.slice();if(e==null)return o;if(r+e.length!==o.length)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.rank = ${r+e.length}, but shape.rank = ${o.length}`);for(let n=1;n<e.length;++n){let i=e[n],s=o[o.length-e.length+n],a=o[s];if(i>=0)if(a>=0){if(a!==i)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.shape[${n+r}] = ${i} but shape[${n+r}] = ${a}`)}else o[s]=i}return o}function d7(r){let t={FIRST_DIM_SIZE:Bn.FIRST_DIM_SIZE,VALUE_ROWIDS:Bn.VALUE_ROWIDS,ROW_LENGTHS:Bn.ROW_LENGTHS,ROW_SPLITS:Bn.ROW_SPLITS,ROW_LIMITS:Bn.ROW_LIMITS,ROW_STARTS:Bn.ROW_STARTS},e=[];for(let o of r)if(o in t)e.push(t[o]);else break;return e}function m7(r){return r.length===0?0:r[0]===Bn.FIRST_DIM_SIZE?r.length-1:r.length}function f7(r,t){if(r==null||t==null)return;let e=r.length,o=t.length;if(e>=o)throw new Error(`defaultValue.shape=${r} and ragged tensor flatValues.shape=${t}, are incompatible: defaultValue.rank = ${e} must be less than ragged tensor input flatValues.rank = ${o})`);for(let n=0;n<Math.min(e,o-1);++n){let i=r[n],s=t[n+1];if(i>=0&&s>=0&&i!==1&&i!==s)throw new Error(`defaultValue.shape=${r}, and ragged tensor input flatValues.shape=${t} are incompatible: defaultValue.shape[${n-r.length}] = ${i} but ragged tensor input.flatValues.shape[${n-r.length}] = ${s}`)}}var Lf=30;function h7(r){return r<=Lf?r:Oa(r,Math.floor(Math.sqrt(r)))}function g7(r,t,e){let o=e*(typeof r=="number"?r:r[0]),n=t*(typeof r=="number"?r:r[1]);return[o,n]}function x7(r,t,e,o=!0){let n=[];if(o)n=n.concat(t.slice(0)),n.push(r[0]/e),n=n.concat(r.slice(1));else{n=n.concat(r[0]);let i=t.length;for(let s=0;s<i;++s)n=n.concat([r[s+1]/t[s],t[s]]);n=n.concat(r.slice(i+1))}return n}function y7(r,t,e=!0){let o=[];if(e){o.push(t);for(let n=t+1;n<r;++n)n<=2*t?(o.push(n),o.push(n-(t+1))):o.push(n)}else{let n=[],i=[];for(let s=1;s<r;++s)s>=t*2+1||s%2===1?i.push(s):n.push(s);o.push(...n),o.push(0),o.push(...i)}return o}function v7(r,t,e,o=!0){let n=[];o?n.push(r[0]/e):n.push(r[0]*e);for(let i=1;i<r.length;++i)i<=t.length?o?n.push(t[i-1]*r[i]):n.push(r[i]/t[i-1]):n.push(r[i]);return n}function b7(r,t){let e=[0];for(let o=0;o<t;++o)e.push(r[o][0]);return e}function S7(r,t,e){let o=r.slice(0,1);for(let n=0;n<e;++n)o.push(r[n+1]-t[n][0]-t[n][1]);return o}var w7=1.7580993408473768,C7=1.0507009873554805;var _7=.3275911,k7=.254829592,I7=-.284496736,T7=1.421413741,E7=-1.453152027,N7=1.061405429;function R7(r,t){if(r.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${r.length}, imag: ${t.length}.`);let e=new Float32Array(r.length*2);for(let o=0;o<e.length;o+=2)e[o]=r[o/2],e[o+1]=t[o/2];return e}function $7(r){let t=new Float32Array(r.length/2),e=new Float32Array(r.length/2);for(let o=0;o<r.length;o+=2)t[o/2]=r[o],e[o/2]=r[o+1];return{real:t,imag:e}}function P7(r){let t=Math.ceil(r.length/4),e=new Float32Array(t),o=new Float32Array(t);for(let n=0;n<r.length;n+=4)e[Math.floor(n/4)]=r[n],o[Math.floor(n/4)]=r[n+1];return{real:e,imag:o}}function A7(r){let t=Math.floor(r.length/4),e=new Float32Array(t),o=new Float32Array(t);for(let n=2;n<r.length;n+=4)e[Math.floor(n/4)]=r[n],o[Math.floor(n/4)]=r[n+1];return{real:e,imag:o}}function D7(r,t){let e=r[t*2],o=r[t*2+1];return{real:e,imag:o}}function F7(r,t,e,o){r[o*2]=t,r[o*2+1]=e}function O7(r,t){let e=new Float32Array(r/2),o=new Float32Array(r/2);for(let n=0;n<Math.ceil(r/2);n++){let i=(t?2:-2)*Math.PI*(n/r);e[n]=Math.cos(i),o[n]=Math.sin(i)}return{real:e,imag:o}}function L7(r,t,e){let o=(e?2:-2)*Math.PI*(r/t),n=Math.cos(o),i=Math.sin(o);return{real:n,imag:i}}var o1="->",M7=/->/g,Wk=",",zk="...";function B7(r,t){r=r.replace(/\s/g,"");let e=(r.length-r.replace(M7,"").length)/o1.length;if(e<1)throw new Error("Equations without an arrow are not supported.");if(e>1)throw new Error(`Equation must contain exactly one arrow ("${o1}").`);let[o,n]=r.split(o1);D(o.indexOf(zk)===-1,()=>`The ellipsis notation ("${zk}") is not supported yet.`);let i=o.split(Wk),s=i.length;if(t!==s)throw new Error(`Expected ${s} input tensors, received ${t}`);if(s>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");let a=[];for(let d=0;d<n.length;++d){let m=n[d];if(!i.some(f=>f.indexOf(m)!==-1))throw new Error(`Output subscripts contain the label ${m} not present in the input subscripts.`);a.indexOf(m)===-1&&a.push(m)}for(let d=0;d<o.length;++d){let m=o[d];a.indexOf(m)===-1&&m!==Wk&&a.push(m)}let l=new Array(i.length);for(let d=0;d<s;++d){if(new Set(i[d].split("")).size!==i[d].length)throw new Error(`Found duplicate axes in input component ${i[d]}. Support for duplicate axes in input is not implemented yet.`);l[d]=[];for(let m=0;m<i[d].length;++m)l[d].push(a.indexOf(i[d][m]))}let u=a.length,c=n.length,p=[];for(let d=c;d<u;++d)p.push(d);return{allDims:a,summedDims:p,idDims:l}}function V7(r,t){let e=new Array(r);e.fill(-1);for(let n=0;n<t.length;++n)e[t[n]]=n;let o=[];for(let n=0;n<r;++n)e[n]===-1&&o.push(n);return e=e.filter(n=>n!==-1),{permutationIndices:e,expandDims:o}}function W7(r,t,e){let o=new Array(r);for(let n=0;n<e.length;++n){let i=e[n].shape;for(let s=0;s<t[n].length;++s)o[t[n][s]]===void 0?o[t[n][s]]=i[s]:D(o[t[n][s]]===i[s],()=>`Expected dimension ${o[t[n][s]]} at axis ${s} of input shaped ${JSON.stringify(i)}, but got dimension ${i[s]}`)}}function z7(r,t){let e=r,o=[],n=0;r.length===0&&e.push(-1),n=r.length+1;for(let s=0;s<n;++s)o.push([]);let i=[];for(let s=0;s<e.length;++s){let a=e[s],l=G7(t,a);for(let u of l)i.indexOf(u)===-1&&(o[s].push(u),i.push(u))}return{path:e,steps:o}}function U7(r){return r.every((t,e)=>t===e)}function G7(r,t){let e=[];for(let o=0;o<r.length;++o)(r[o].length===0||r[o].indexOf(t)!==-1||t===-1)&&e.push(o);return e}function H7(r,t,e=0){let o=[];if(typeof t=="number")D(r.shape[e]%t===0,()=>"Number of splits must evenly divide the axis."),o=new Array(t).fill(r.shape[e]/t);else{let n=t.reduce((s,a)=>(a===-1&&(s+=1),s),0);D(n<=1,()=>"There should be only one negative value in split array.");let i=t.indexOf(-1);if(i!==-1){let s=t.reduce((a,l)=>l>0?a+l:a);t[i]=r.shape[e]-s}D(r.shape[e]===t.reduce((s,a)=>s+a),()=>"The sum of sizes must match the size of the axis dimension."),o=t}return o}function K7(r){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${r}`}function q7(r,t){return`indices(${r}, 0) is invalid: ${t} < 0`}function j7(r,t,e){return`indices(${r}, 0) is invalid: ${t} >= ${e}`}function X7(r,t){return`only one output dimension may be -1, not both ${r} and ${t}`}function Y7(r,t){return`size ${r} must be non-negative, not ${t}`}function Q7(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function Z7(r,t){let e=Ke(r),o=Ke(t);return`Input to reshape is a SparseTensor with ${e}
  dense values, but the requested shape requires a multiple of ${o}. inputShape=${r} outputShape= ${t}`}function J7(r,t){let e=Ke(r),o=Ke(t);return`Input to reshape is a tensor with ${e} dense values, but the requested shape has ${o}. inputShape=${r} outputShape=${t}`}function e8(){return"segment ids must be >= 0"}function t8(){return"segment ids are not increasing"}function r8(r,t){return`Segment id ${r} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function o8(r,t,e){return`Bad: indices[${r}] == ${t} out of range [0, ${e})`}var n1={};dt(n1,{collectGatherOpShapeInfo:()=>s8,computeOutShape:()=>i8,segOpComputeOptimalWindowSize:()=>n8});function n8(r,t){let e=!1,o;for(r<=Lf?(o=r,e=!0):o=Oa(r,Math.floor(Math.sqrt(r)));!e;)o>t||o===r?e=!0:o=Oa(r,o+1);return o}function i8(r,t,e){let o=[],n=r.length;for(let i=0;i<n;i++)i!==t?o.push(r[i]):o.push(e);return o}function s8(r,t,e,o){let n=t.shape.length,i=r.shape.length;if(o!==0&&(o<-n||o>n))throw new Error(`Expect batchDims in the range of [-${n}, ${n}], but got ${o}`);if(o<0&&(o+=n),o>i)throw new Error(`batchDims (${o}) must be less than rank(x) (
    ${i}).`);if(e<o)throw new Error(`batchDims (${o}) must be less than or equal to axis (${e}).`);for(let p=0;p<o;++p)if(r.shape[p]!==t.shape[p])throw new Error(`x.shape[${p}]: ${r.shape[p]} should be equal to indices.shape[${p}]: ${t.shape[p]}.`);let s=r.shape[e],a=[],l=1,u=1,c=1;for(let p=0;p<o;++p)a.push(r.shape[p]),l*=r.shape[p];for(let p=o;p<e;p++)a.push(r.shape[p]),u*=r.shape[p];for(let p=o;p<n;p++)a.push(t.shape[p]);for(let p=e+1;p<i;p++)a.push(r.shape[p]),c*=r.shape[p];return{batchSize:l,sliceSize:c,outerSize:u,dimSize:s,outputShape:a}}function a8(r){try{return r.map(t=>Qu(t))}catch(t){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${t}`)}}function l8(r){return r.map(t=>Yu(t))}var Xr={};dt(Xr,{nonMaxSuppressionV3Impl:()=>_f,nonMaxSuppressionV4Impl:()=>kf,nonMaxSuppressionV5Impl:()=>If,whereImpl:()=>vf});yk();var u8=G();u8.registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,r=>{r&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")});var Yr=function(r){return r[r.DT_INVALID=0]="DT_INVALID",r[r.DT_FLOAT=1]="DT_FLOAT",r[r.DT_DOUBLE=2]="DT_DOUBLE",r[r.DT_INT32=3]="DT_INT32",r[r.DT_UINT8=4]="DT_UINT8",r[r.DT_INT16=5]="DT_INT16",r[r.DT_INT8=6]="DT_INT8",r[r.DT_STRING=7]="DT_STRING",r[r.DT_COMPLEX64=8]="DT_COMPLEX64",r[r.DT_INT64=9]="DT_INT64",r[r.DT_BOOL=10]="DT_BOOL",r[r.DT_QINT8=11]="DT_QINT8",r[r.DT_QUINT8=12]="DT_QUINT8",r[r.DT_QINT32=13]="DT_QINT32",r[r.DT_BFLOAT16=14]="DT_BFLOAT16",r[r.DT_QINT16=15]="DT_QINT16",r[r.DT_QUINT16=16]="DT_QUINT16",r[r.DT_UINT16=17]="DT_UINT16",r[r.DT_COMPLEX128=18]="DT_COMPLEX128",r[r.DT_HALF=19]="DT_HALF",r[r.DT_RESOURCE=20]="DT_RESOURCE",r[r.DT_VARIANT=21]="DT_VARIANT",r[r.DT_UINT32=22]="DT_UINT32",r[r.DT_UINT64=23]="DT_UINT64",r[r.DT_FLOAT_REF=101]="DT_FLOAT_REF",r[r.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",r[r.DT_INT32_REF=103]="DT_INT32_REF",r[r.DT_UINT8_REF=104]="DT_UINT8_REF",r[r.DT_INT16_REF=105]="DT_INT16_REF",r[r.DT_INT8_REF=106]="DT_INT8_REF",r[r.DT_STRING_REF=107]="DT_STRING_REF",r[r.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",r[r.DT_INT64_REF=109]="DT_INT64_REF",r[r.DT_BOOL_REF=110]="DT_BOOL_REF",r[r.DT_QINT8_REF=111]="DT_QINT8_REF",r[r.DT_QUINT8_REF=112]="DT_QUINT8_REF",r[r.DT_QINT32_REF=113]="DT_QINT32_REF",r[r.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",r[r.DT_QINT16_REF=115]="DT_QINT16_REF",r[r.DT_QUINT16_REF=116]="DT_QUINT16_REF",r[r.DT_UINT16_REF=117]="DT_UINT16_REF",r[r.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",r[r.DT_HALF_REF=119]="DT_HALF_REF",r[r.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",r[r.DT_VARIANT_REF=121]="DT_VARIANT_REF",r[r.DT_UINT32_REF=122]="DT_UINT32_REF",r[r.DT_UINT64_REF=123]="DT_UINT64_REF",r}(Yr||{}),Uk;(function(r){let t;(function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"})(t=r.CheckpointFormatVersion||(r.CheckpointFormatVersion={}))})(Uk||(Uk={}));var p8={};function Bf(r){return p8[r]}function w(r,t,e,o,n){let i=t.inputParams[r];if(i&&i.inputIndexStart!==void 0){let a=i.inputIndexStart,l=i.inputIndexEnd===0?void 0:i.inputIndexEnd===void 0?a+1:i.inputIndexEnd,u=a<0?t.inputNames.length+a:a;if(i.type==="tensor")return Mt(t.inputNames[u],e,o,n);if(i.type==="tensors"){let d=t.inputs.slice(a,l);return t.inputNames.slice(a,l).filter((f,g)=>{var x;return((x=d[g])===null||x===void 0?void 0:x.op)!=="NoOp"}).map(f=>Mt(f,e,o,n))}let c=Mt(t.inputNames[u],e,o,n),p=c.dataSync();return i.type==="number"?p[0]:S.toNestedArray(c.shape,p)}let s=t.attrParams[r];return s&&s.value}function Mt(r,t,e,o){let[n,i]=_r(r,e);if(o!=null){let a=o.getHashTableHandleByName(n);if(a!=null)return a}let s=e.currentContextIds.find(a=>!!t[Vf(n,a)]);return s!==void 0?t[Vf(n,s)][i]:void 0}function i1(r,t,e){return t[Vf(r,e.currentContextId)]}function Wo(r,t){let[e,o,n]=_r(r,t);return[Vf(e,t&&t.currentContextId),o,n]}function Vf(r,t){return t?`${r}-${t}`:r}function _r(r,t){if(r==="")return["",0,void 0];let e=t!=null&&t.parseNodeNameCache!=null;if(e){let i=t.parseNodeNameCache.get(r);if(i!=null)return i}let o=r.split(":"),n;if(o.length===1)n=[r,0,void 0];else{let i=o[0],s=o.length===3?o[1]:void 0,a=Number(o[o.length-1]);n=[i,a,s]}return e&&t.parseNodeNameCache.set(r,n),n}function Np(r,t,e){let o=w("pad",r,t,e);if(o==="explicit"){o=w("explicitPaddings",r,t,e);let n=[[0,0],[0,0],[0,0],[0,0]];for(let i=0;i<4;i++)n[i][0]=o[i*2],n[i][1]=o[i*2+1];return n}return o}function zo(r){return r.kept?r:Kr(r)}var s1={};dt(s1,{json:()=>d8});var d8=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var a1={};dt(a1,{json:()=>m8});var m8=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsFinite",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsInf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var l1={};dt(l1,{json:()=>f8});var f8=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}];var u1={};dt(u1,{json:()=>h8});var h8=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}];var c1={};dt(c1,{json:()=>g8});var g8=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniformInt",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number"},{tfName:"maxval",name:"maxval",type:"number"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}];var p1={};dt(p1,{json:()=>x8});var x8=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var d1={};dt(d1,{json:()=>y8});var y8=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}];var m1={};dt(m1,{json:()=>v8});var v8=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}];var f1={};dt(f1,{json:()=>b8});var b8=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"InitializeTable",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]},{tfOpName:"InitializeTableV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]}];var h1={};dt(h1,{json:()=>S8});var S8=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}];var g1={};dt(g1,{json:()=>w8});var w8=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BitwiseAnd",category:"logical",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}]}];var x1={};dt(x1,{json:()=>C8});var C8=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"MatrixBandPart",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"numLower",type:"tensor"},{start:1,name:"numUpper",type:"tensor"}]}];var y1={};dt(y1,{json:()=>_8});var _8=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]}];var v1={};dt(v1,{json:()=>k8});var k8=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}];var b1={};dt(b1,{json:()=>I8});var I8=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]},{tfOpName:"TensorScatterUpdate",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"values",type:"tensor"}]}];var S1={};dt(S1,{json:()=>T8});var T8=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}];var w1={};dt(w1,{json:()=>E8});var E8=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}];var C1={};dt(C1,{json:()=>N8});var N8=[{tfOpName:"StaticRegexReplace",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"pattern",name:"pattern",type:"string"},{tfName:"rewrite",name:"rewrite",type:"string"},{tfName:"replace_global",name:"replaceGlobal",type:"bool"}]},{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}];var _1={};dt(_1,{json:()=>R8});var R8=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"EnsureShape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}];var Rp=class{static get Instance(){return this._instance||(this._instance=new this)}constructor(){let t=[s1,a1,l1,u1,c1,p1,d1,m1,f1,h1,g1,x1,y1,v1,b1,S1,w1,C1,_1],e=[].concat(...t.map(o=>o.json));this.opMappers=e.reduce((o,n)=>(o[n.tfOpName]=n,o),{})}transformGraph(t,e={}){let o=t.node,n=[],i=[],s=[],a=o.reduce((g,x)=>(g[x.name]=this.mapNode(x),x.op.startsWith("Placeholder")?n.push(g[x.name]):x.op==="Const"?i.push(g[x.name]):(x.input==null||x.input.length===0)&&s.push(g[x.name]),g),{}),l=[],u=[],c={},p={};e!=null&&(c=this.mapSignatureEntries(e.inputs),p=this.mapSignatureEntries(e.outputs));let d=Object.keys(a);d.forEach(g=>{let x=a[g];x.inputNames.forEach((y,b)=>{let[I,,N]=Wo(y),F=a[I];if(F.outputs!=null){let B=F.outputs.indexOf(N);if(B!==-1){let z=`${I}:${B}`;x.inputNames[b]=z}}x.inputs.push(F),F.children.push(x)})}),Object.keys(p).length===0?d.forEach(g=>{let x=a[g];x.children.length===0&&u.push(x)}):Object.keys(p).forEach(g=>{let[x]=Wo(g),y=a[x];y!=null&&(y.signatureKey=p[g],u.push(y))}),Object.keys(c).length>0?Object.keys(c).forEach(g=>{let[x]=Wo(g),y=a[x];y&&(y.signatureKey=c[g],l.push(y))}):l=n;let m={};t.library!=null&&t.library.function!=null&&(m=t.library.function.reduce((g,x)=>(g[x.signature.name]=this.mapFunction(x),g),{}));let f={nodes:a,inputs:l,outputs:u,weights:i,placeholders:n,signature:e,functions:m};return s.length>0&&(f.initNodes=s),f}mapSignatureEntries(t){return Object.keys(t||{}).reduce((e,o)=>(e[t[o].name]=o,e),{})}mapNode(t){let e=Bf(t.op)||this.opMappers[t.op]||{};t.attr==null&&(t.attr={});let o={name:t.name,op:t.op,category:e.category,inputNames:(t.input||[]).map(n=>n.startsWith("^")?n.slice(1):n),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:t.attr,outputs:e.outputs};return e.inputs!=null&&(o.inputParams=e.inputs.reduce((n,i)=>(n[i.name]={type:i.type,inputIndexStart:i.start,inputIndexEnd:i.end},n),{})),e.attrs!=null&&(o.attrParams=e.attrs.reduce((n,i)=>{let s=i.type,a;switch(i.type){case"string":a=Wf(t.attr,i.tfName,i.defaultValue),a===void 0&&i.tfDeprecatedName&&(a=Wf(t.attr,i.tfDeprecatedName,i.defaultValue));break;case"string[]":a=jf(t.attr,i.tfName,i.defaultValue),a===void 0&&i.tfDeprecatedName&&(a=jf(t.attr,i.tfDeprecatedName,i.defaultValue));break;case"number":a=Uf(t.attr,i.tfName,i.defaultValue||0),a===void 0&&i.tfDeprecatedName&&(a=Uf(t.attr,i.tfDeprecatedName,i.defaultValue));break;case"number[]":a=qf(t.attr,i.tfName,i.defaultValue),a===void 0&&i.tfDeprecatedName&&(a=qf(t.attr,i.tfDeprecatedName,i.defaultValue));break;case"bool":a=zf(t.attr,i.tfName,i.defaultValue),a===void 0&&i.tfDeprecatedName&&(a=zf(t.attr,i.tfDeprecatedName,i.defaultValue));break;case"bool[]":a=Yf(t.attr,i.tfName,i.defaultValue),a===void 0&&i.tfDeprecatedName&&(a=Yf(t.attr,i.tfDeprecatedName,i.defaultValue));break;case"shape":a=Kf(t.attr,i.tfName,i.defaultValue),a===void 0&&i.tfDeprecatedName&&(a=Kf(t.attr,i.tfDeprecatedName,i.defaultValue));break;case"shape[]":a=Xf(t.attr,i.tfName,i.defaultValue),a===void 0&&i.tfDeprecatedName&&(a=Xf(t.attr,i.tfDeprecatedName,i.defaultValue));break;case"dtype":a=Gf(t.attr,i.tfName,i.defaultValue),a===void 0&&i.tfDeprecatedName&&(a=Gf(t.attr,i.tfDeprecatedName,i.defaultValue));break;case"dtype[]":a=Hf(t.attr,i.tfName,i.defaultValue),a===void 0&&i.tfDeprecatedName&&(a=Hf(t.attr,i.tfDeprecatedName,i.defaultValue));break;case"func":a=Gk(t.attr,i.tfName,i.defaultValue),a===void 0&&i.tfDeprecatedName&&(a=Gk(t.attr,i.tfDeprecatedName,i.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${i.type} for op: ${t.op}`)}return n[i.name]={value:a,type:s},n},{})),o}mapFunction(t){let e=t.nodeDef,o=[],n=[],i={};e!=null&&(i=e.reduce((p,d)=>(p[d.name]=this.mapNode(d),d.op==="Const"&&n.push(p[d.name]),p),{}));let s=[],a=[];t.signature.inputArg.forEach(p=>{let[d]=Wo(p.name),m={name:d,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:k1(p.type),type:"dtype"}},children:[]};m.signatureKey=p.name,s.push(m),i[d]=m}),Object.keys(i).forEach(p=>{let d=i[p];d.inputNames.forEach((m,f)=>{let[g,,x]=Wo(m),y=i[g];if(y.outputs!=null){let b=y.outputs.indexOf(x);if(b!==-1){let I=`${g}:${b}`;d.inputNames[f]=I}}d.inputs.push(y),y.children.push(d)})});let u=t.ret;t.signature.outputArg.forEach(p=>{let[d,m]=Wo(u[p.name]),f=i[d];f!=null&&(f.defaultOutput=m,a.push(f))});let c=this.mapArgsToSignature(t);return{nodes:i,inputs:s,outputs:a,weights:n,placeholders:o,signature:c}}mapArgsToSignature(t){return{methodName:t.signature.name,inputs:t.signature.inputArg.reduce((e,o)=>(e[o.name]=this.mapArgToTensorInfo(o),e),{}),outputs:t.signature.outputArg.reduce((e,o)=>(e[o.name]=this.mapArgToTensorInfo(o,t.ret),e),{})}}mapArgToTensorInfo(t,e){let o=t.name;return e!=null&&(o=e[o]),{name:o,dtype:t.type}}};function $8(r){let t=G().global;if(typeof t.atob<"u")return t.atob(r);if(typeof Buffer<"u")return new Buffer(r,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}function Hk(r,t){let e=Array.isArray(r)?String.fromCharCode.apply(null,r):$8(r);return t?e:e.toLowerCase()}function Wf(r,t,e,o=!1){let n=r[t];return n!=null?Hk(n.s,o):e}function zf(r,t,e){let o=r[t];return o?o.b:e}function Uf(r,t,e){let o=r[t]||{},n=o.i!=null?o.i:o.f!=null?o.f:e;return typeof n=="number"?n:parseInt(n,10)}function k1(r){switch(typeof r=="string"&&(r=Yr[r]),r){case Yr.DT_FLOAT:case Yr.DT_HALF:return"float32";case Yr.DT_INT32:case Yr.DT_INT64:case Yr.DT_INT8:case Yr.DT_UINT8:return"int32";case Yr.DT_BOOL:return"bool";case Yr.DT_DOUBLE:return"float32";case Yr.DT_STRING:return"string";case Yr.DT_COMPLEX64:case Yr.DT_COMPLEX128:return"complex64";default:return null}}function Gk(r,t,e){let o=r[t];return o&&o.func?o.func.name:e}function Gf(r,t,e){let o=r[t];return o&&o.type?k1(o.type):e}function Hf(r,t,e){let o=r[t];return o&&o.list&&o.list.type?o.list.type.map(n=>k1(n)):e}function Kk(r){if(!r.unknownRank)return r.dim!=null?r.dim.map(t=>typeof t.size=="number"?t.size:parseInt(t.size,10)):[]}function Kf(r,t,e){let o=r[t];return o&&o.shape?Kk(o.shape):e}function qf(r,t,e){let o=r[t];return o?((o.list.f&&o.list.f.length?o.list.f:o.list.i)||[]).map(n=>typeof n=="number"?n:parseInt(n,10)):e}function jf(r,t,e,o=!1){let n=r[t];return n&&n.list&&n.list.s?n.list.s.map(i=>Hk(i,o)):e}function Xf(r,t,e){let o=r[t];return o&&o.list&&o.list.shape?o.list.shape.map(n=>Kk(n)):e}function Yf(r,t,e){let o=r[t];return o&&o.list&&o.list.b?o.list.b:e}var Qf=class{constructor(t,e,o){this.node=t,this.tensorMap=e,this.context=o,this.inputs=[],this.attrs={},this.inputs=t.inputNames.map(n=>this.getInput(n)),t.rawAttrs!=null&&(this.attrs=Object.keys(t.rawAttrs).reduce((n,i)=>(n[i]=this.getAttr(i),n),{}))}getInput(t){return Mt(t,this.tensorMap,this.context)}getAttr(t,e){let o=this.node.rawAttrs[t];if(o.tensor!=null)return Mt(t,this.tensorMap,this.context);if(o.i!=null||o.f!=null)return Uf(this.node.rawAttrs,t,e);if(o.s!=null)return Wf(this.node.rawAttrs,t,e);if(o.b!=null)return zf(this.node.rawAttrs,t,e);if(o.shape!=null)return Kf(this.node.rawAttrs,t,e);if(o.type!=null)return Gf(this.node.rawAttrs,t,e);if(o.list!=null){if(o.list.i!=null||o.list.f!=null)return qf(this.node.rawAttrs,t,e);if(o.list.s!=null)return jf(this.node.rawAttrs,t,e);if(o.list.shape!=null)return Xf(this.node.rawAttrs,t,e);if(o.list.b!=null)return Yf(this.node.rawAttrs,t,e);if(o.list.type!=null)return Hf(this.node.rawAttrs,t,e)}return e}};var Qe={};dt(Qe,{OP_SCOPE_SUFFIX:()=>wy,abs:()=>Qt,acos:()=>ow,acosh:()=>nw,add:()=>fe,addN:()=>iw,all:()=>sw,any:()=>aw,argMax:()=>Fm,argMin:()=>lw,asin:()=>uw,asinh:()=>cw,atan:()=>pw,atan2:()=>dw,atanh:()=>mw,avgPool:()=>Om,avgPool3d:()=>gw,basicLSTMCell:()=>xw,batchNorm:()=>Ai,batchNorm2d:()=>vw,batchNorm3d:()=>bw,batchNorm4d:()=>Sw,batchToSpaceND:()=>Lm,bincount:()=>Mm,bitwiseAnd:()=>ww,booleanMaskAsync:()=>pU,broadcastArgs:()=>Cw,broadcastTo:()=>Di,buffer:()=>Le,cast:()=>Ue,ceil:()=>_w,clipByValue:()=>Bm,clone:()=>Kr,complex:()=>Rr,concat:()=>mt,concat1d:()=>kw,concat2d:()=>Iw,concat3d:()=>Tw,concat4d:()=>Ew,conv1d:()=>Nw,conv2d:()=>Fi,conv2dTranspose:()=>Rw,conv3d:()=>$w,conv3dTranspose:()=>Aw,cos:()=>Dw,cosh:()=>Fw,cosineWindow:()=>Ip,cumprod:()=>Ow,cumsum:()=>Lw,denseBincount:()=>Mw,depthToSpace:()=>Bw,depthwiseConv2d:()=>nc,diag:()=>Vw,dilation2d:()=>Ww,div:()=>Fe,divNoNan:()=>Uw,dot:()=>Gw,dropout:()=>CU,einsum:()=>Oi,elu:()=>Um,enclosingPowerOfTwo:()=>Gy,ensureShape:()=>Hw,equal:()=>zm,erf:()=>Kw,euclideanNorm:()=>Xw,exp:()=>Ar,expandDims:()=>dr,expm1:()=>Yw,eye:()=>Gm,fft:()=>ac,fill:()=>ln,floor:()=>Hm,floorDiv:()=>Dm,fused:()=>Hy,gather:()=>Km,gatherND:()=>SU,greater:()=>Ls,greaterEqual:()=>qm,ifft:()=>zs,imag:()=>Mi,image:()=>Mn,inTopKAsync:()=>kU,irfft:()=>hf,isFinite:()=>Qw,isInf:()=>Zw,isNaN:()=>Jw,leakyRelu:()=>jm,less:()=>Cp,lessEqual:()=>ic,linalg:()=>TG,linspace:()=>eC,localResponseNormalization:()=>tC,log:()=>Dn,log1p:()=>Xm,logSigmoid:()=>oC,logSoftmax:()=>nC,logSumExp:()=>Qm,logicalAnd:()=>Ms,logicalNot:()=>Zm,logicalOr:()=>Jm,logicalXor:()=>iC,losses:()=>EG,lowerBound:()=>sC,matMul:()=>tt,max:()=>cn,maxPool:()=>tf,maxPool3d:()=>aC,maxPoolWithArgmax:()=>lC,maximum:()=>rf,mean:()=>Bs,meshgrid:()=>uC,min:()=>wp,minimum:()=>Fn,mirrorPad:()=>of,mod:()=>cC,moments:()=>pC,movingAverage:()=>fU,mul:()=>ae,multiRNNCell:()=>dC,multinomial:()=>mC,neg:()=>tr,norm:()=>Os,notEqual:()=>nf,oneHot:()=>fC,ones:()=>pn,onesLike:()=>hC,op:()=>E,outerProduct:()=>gC,pad:()=>jr,pad1d:()=>xC,pad2d:()=>yC,pad3d:()=>vC,pad4d:()=>bC,pool:()=>SC,pow:()=>An,prelu:()=>af,print:()=>Am,prod:()=>wC,raggedGather:()=>CC,raggedRange:()=>_C,raggedTensorToTensor:()=>kC,rand:()=>IC,randomGamma:()=>GC,randomNormal:()=>df,randomStandardNormal:()=>HC,randomUniform:()=>sc,randomUniformInt:()=>KC,range:()=>Bi,real:()=>On,reciprocal:()=>qC,relu:()=>Vi,relu6:()=>mf,reshape:()=>Y,reverse:()=>po,reverse1d:()=>jC,reverse2d:()=>XC,reverse3d:()=>YC,reverse4d:()=>QC,rfft:()=>lc,round:()=>ff,rsqrt:()=>ZC,scalar:()=>Re,scatterND:()=>gU,searchSorted:()=>_p,selu:()=>JC,separableConv2d:()=>e_,setdiff1dAsync:()=>t_,sigmoid:()=>qr,sign:()=>r_,signal:()=>IG,sin:()=>o_,sinh:()=>n_,slice:()=>Oe,slice1d:()=>i_,slice2d:()=>s_,slice3d:()=>a_,slice4d:()=>l_,softmax:()=>u_,softplus:()=>Ym,spaceToBatchND:()=>sf,sparse:()=>NG,sparseToDense:()=>vU,spectral:()=>kG,split:()=>Ln,sqrt:()=>Pr,square:()=>Ut,squaredDifference:()=>gf,squeeze:()=>ct,stack:()=>wr,step:()=>xf,stridedSlice:()=>c_,string:()=>RG,sub:()=>$e,sum:()=>rt,tan:()=>p_,tanh:()=>Sp,tensor:()=>br,tensor1d:()=>Rt,tensor2d:()=>Cr,tensor3d:()=>yf,tensor4d:()=>d_,tensor5d:()=>m_,tensor6d:()=>f_,tensorScatterUpdate:()=>x_,tile:()=>Li,topk:()=>y_,transpose:()=>Sf,truncatedNormal:()=>v_,unique:()=>b_,unsortedSegmentSum:()=>S_,unstack:()=>mo,upperBound:()=>w_,variable:()=>C_,where:()=>co,whereAsync:()=>bf,zeros:()=>Sr,zerosLike:()=>zt});var qk=(r,t,e,o=Qe)=>{switch(r.op){case"BiasAdd":case"AddV2":case"Add":return[o.add(w("a",r,t,e),w("b",r,t,e))];case"AddN":return[o.addN(w("tensors",r,t,e))];case"FloorMod":case"Mod":return[o.mod(w("a",r,t,e),w("b",r,t,e))];case"Mul":return[o.mul(w("a",r,t,e),w("b",r,t,e))];case"RealDiv":case"Div":return[o.div(w("a",r,t,e),w("b",r,t,e))];case"DivNoNan":return[o.divNoNan(w("a",r,t,e),w("b",r,t,e))];case"FloorDiv":return[o.floorDiv(w("a",r,t,e),w("b",r,t,e))];case"Sub":return[o.sub(w("a",r,t,e),w("b",r,t,e))];case"Minimum":return[o.minimum(w("a",r,t,e),w("b",r,t,e))];case"Maximum":return[o.maximum(w("a",r,t,e),w("b",r,t,e))];case"Pow":return[o.pow(w("a",r,t,e),w("b",r,t,e))];case"SquaredDifference":return[o.squaredDifference(w("a",r,t,e),w("b",r,t,e))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var jk=(r,t,e,o=Qe)=>{switch(r.op){case"Abs":case"ComplexAbs":return[o.abs(w("x",r,t,e))];case"Acos":return[o.acos(w("x",r,t,e))];case"Acosh":return[o.acosh(w("x",r,t,e))];case"Asin":return[o.asin(w("x",r,t,e))];case"Asinh":return[o.asinh(w("x",r,t,e))];case"Atan":return[o.atan(w("x",r,t,e))];case"Atan2":return[o.atan2(w("x",r,t,e),w("y",r,t,e))];case"Atanh":return[o.atanh(w("x",r,t,e))];case"Ceil":return[o.ceil(w("x",r,t,e))];case"Complex":return[o.complex(w("real",r,t,e),w("imag",r,t,e))];case"Cos":return[o.cos(w("x",r,t,e))];case"Cosh":return[o.cosh(w("x",r,t,e))];case"Elu":return[o.elu(w("x",r,t,e))];case"Erf":return[o.erf(w("x",r,t,e))];case"Exp":return[o.exp(w("x",r,t,e))];case"Expm1":return[o.expm1(w("x",r,t,e))];case"Floor":return[o.floor(w("x",r,t,e))];case"Log":return[o.log(w("x",r,t,e))];case"Log1p":return[o.log1p(w("x",r,t,e))];case"Imag":return[o.imag(w("x",r,t,e))];case"Neg":return[o.neg(w("x",r,t,e))];case"Reciprocal":return[o.reciprocal(w("x",r,t,e))];case"Real":return[o.real(w("x",r,t,e))];case"Relu":return[o.relu(w("x",r,t,e))];case"Round":return[o.round(w("x",r,t,e))];case"Selu":return[o.selu(w("x",r,t,e))];case"Sigmoid":return[o.sigmoid(w("x",r,t,e))];case"Sin":return[o.sin(w("x",r,t,e))];case"Sign":return[o.sign(w("x",r,t,e))];case"Sinh":return[o.sinh(w("x",r,t,e))];case"Softplus":return[o.softplus(w("x",r,t,e))];case"Sqrt":return[o.sqrt(w("x",r,t,e))];case"Square":return[o.square(w("x",r,t,e))];case"Tanh":return[o.tanh(w("x",r,t,e))];case"Tan":return[o.tan(w("x",r,t,e))];case"ClipByValue":return[o.clipByValue(w("x",r,t,e),w("clipValueMin",r,t,e),w("clipValueMax",r,t,e))];case"Relu6":return[o.relu6(w("x",r,t,e))];case"Rsqrt":return[o.rsqrt(Mt(r.inputNames[0],t,e))];case"LeakyRelu":return[o.leakyRelu(w("x",r,t,e),w("alpha",r,t,e))];case"Prelu":return[o.prelu(w("x",r,t,e),w("alpha",r,t,e))];case"IsNan":return[o.isNaN(Mt(r.inputNames[0],t,e))];case"IsInf":return[o.isInf(Mt(r.inputNames[0],t,e))];case"IsFinite":return[o.isFinite(Mt(r.inputNames[0],t,e))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};function Qr(r,t,e=""){if(!(typeof r=="number"||typeof t=="number")){S.assert(r.length===t.length,()=>e+` Shapes ${r} and ${t} must match`);for(let o=0;o<r.length;o++){let n=r[o],i=t[o];S.assert(n<0||i<0||n===i,()=>e+` Shapes ${r} and ${t} must match`)}}}function Xk(r){return!(typeof r=="number"||r.some(t=>t<0))}function cc(r,t,e){let o=Zf(r,e),n=!Xk(o);if(n&&t.length===0)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${o}`);if(n&&t.forEach(i=>{o=Zf(i.shape,o)}),!Xk(o))throw new Error(`Non-fully-defined elementShape: ${o}`);return o}function Zf(r,t){if(typeof r=="number")return t;if(typeof t=="number")return r;if(r.length!==t.length)throw new Error(`Incompatible ranks during merge: ${r} vs. ${t}`);let e=[];for(let o=0;o<r.length;++o){let n=r[o],i=t[o];if(n>=0&&i>=0&&n!==i)throw new Error(`Incompatible shape during merge: ${r} vs. ${t}`);e[o]=n>=0?n:i}return e}var Jf=class{constructor(t,e,o,n,i,s,a){this.name=t,this.dtype=e,this.maxSize=o,this.elementShape=n,this.identicalElementShapes=i,this.dynamicSize=s,this.clearAfterRead=a,this.tensors=[],this.closed_=!1,this.idTensor=Re(0),$r(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(t){this.tensors.forEach(e=>{(t==null||!t.has(e.tensor.id))&&e.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(t<0||t>=this.size())throw new Error(`Tried to read from index ${t}, but array size is: ${this.size()}`);let e=this.tensors[t];if(e.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${t} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(e.cleared=!0),e.read=!0,e.tensor}readMany(t){return t.map(e=>this.read(e))}write(t,e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(t<0||!this.dynamicSize&&t>=this.maxSize)throw new Error(`Tried to write to index ${t}, but array is not resizeable and size is: ${this.maxSize}`);let o=this.tensors[t]||{};if(e.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t},
          because the value dtype is ${e.dtype}, but TensorArray dtype is ${this.dtype}.`);if(this.size()===0&&(this.elementShape==null||this.elementShape.length===0)&&(this.elementShape=e.shape),Qr(this.elementShape,e.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${t}.`),o.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t}, because it has already been read.`);if(o.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t}, because it has already been written.`);o.tensor=e,$r(e),o.written=!0,this.tensors[t]=o}writeMany(t,e){if(t.length!==e.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${t.length} is not the same as tensors size: ${e.length}.`);t.forEach((o,n)=>this.write(o,e[n]))}gather(t,e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${e}`);if(t)t=t.slice(0,this.size());else{t=[];for(let n=0;n<this.size();n++)t.push(n)}if(t.length===0)return br([],[0].concat(this.elementShape));let o=this.readMany(t);return Qr(this.elementShape,o[0].shape,"TensorArray shape mismatch: "),wr(o,0)}concat(t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${t}`);if(this.size()===0)return br([],[0].concat(this.elementShape));let e=[];for(let n=0;n<this.size();n++)e.push(n);let o=this.readMany(e);return Qr(this.elementShape,o[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${o[0].shape})`),mt(o,0)}scatter(t,e){if(e.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${e.dtype}`);if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);let o=Math.max(...t);if(!this.dynamicSize&&o>=this.maxSize)throw new Error(`Max index must be < array size (${o}  vs. ${this.maxSize})`);this.writeMany(t,mo(e,0))}split(t,e){if(e.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${e.dtype}`);let o=0,n=t.map(l=>(o+=l,o));if(o!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${o}, and tensor's shape is: ${e.shape}`);if(!this.dynamicSize&&t.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${t.length}), and the TensorArray is not marked as dynamically resizeable`);let i=o===0?0:e.size/o,s=[];Ne(()=>{e=Y(e,[1,o,i]);for(let l=0;l<t.length;++l){let c=[0,l===0?0:n[l-1],0],p=[1,t[l],i];s[l]=Y(Oe(e,c,p),this.elementShape)}return s});let a=[];for(let l=0;l<t.length;l++)a[l]=l;this.writeMany(a,s)}};var pc=class r{get id(){return this.idTensor.id}constructor(t,e,o,n=-1){this.tensors=t,this.elementShape=e,this.elementDtype=o,t?.forEach(i=>{if(o!==i.dtype)throw new Error(`Invalid data types; op elements ${o}, but list elements ${i.dtype}`);Qr(e,i.shape,"TensorList shape mismatch: "),$r(i)}),this.idTensor=Re(0),this.maxNumElements=n,$r(this.idTensor)}copy(){return new r([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(t){this.tensors.forEach(e=>{(t==null||!t.has(e.id))&&e.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(t,e,o=-1){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);if(o!==-1&&this.tensors.length!==o)throw new Error(`Operation expected a list with ${o} elements but got a list with ${this.tensors.length} elements.`);Qr(t,this.elementShape,"TensorList shape mismatch: ");let n=cc(this.elementShape,this.tensors,t);return Ne(()=>{let i=this.tensors.map(s=>Y(s,n));return wr(i,0)})}popBack(t,e){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);if(this.size()===0)throw new Error("Trying to pop from an empty list.");let o=cc(this.elementShape,this.tensors,t),n=this.tensors.pop();return n.kept=!1,Qr(n.shape,t,"TensorList shape mismatch: "),Y(n,o)}pushBack(t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(Qr(t.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");$r(t),this.tensors.push(t)}resize(t){if(t<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${t}`);if(this.maxNumElements!==-1&&t>this.maxNumElements)throw new Error(`TensorListResize input size ${t} is greater maxNumElement ${this.maxNumElements}.`);let e=new r([],this.elementShape,this.elementDtype,this.maxNumElements);e.tensors.length=t;for(let o=0;o<Math.min(this.tensors.length,t);++o)e.tensors[o]=this.tensors[o];return e}getItem(t,e,o){if(o!==this.elementDtype)throw new Error(`Invalid data types; op elements ${o}, but list elements ${this.elementDtype}`);if(t<0||t>this.tensors.length)throw new Error(`Trying to access element ${t} in a list with ${this.tensors.length} elements.`);if(this.tensors[t]==null)throw new Error(`element at index ${t} is null.`);Qr(this.tensors[t].shape,e,"TensorList shape mismatch: ");let n=cc(this.elementShape,this.tensors,e);return Y(this.tensors[t],n)}setItem(t,e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(t<0||this.maxNumElements!==-1&&t>=this.maxNumElements)throw new Error(`Trying to set element ${t} in a list with max ${this.maxNumElements} elements.`);Qr(this.elementShape,e.shape,"TensorList shape mismatch: "),$r(e),this.tensors[t]!=null&&(this.tensors[t].kept=!1),this.tensors[t]=e}gather(t,e,o){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);Qr(this.elementShape,o,"TensorList shape mismatch: "),t=t.slice(0,this.size());let n=cc(this.elementShape,this.tensors,o);return t.length===0?br([],[0].concat(n)):Ne(()=>{let i=t.map(s=>Y(this.tensors[s],n));return wr(i,0)})}concat(t,e){if(t&&t!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${t}`);Qr(this.elementShape,e,"TensorList shape mismatch: ");let o=cc(this.elementShape,this.tensors,e);return this.size()===0?br([],[0].concat(o)):Ne(()=>{let n=this.tensors.map(i=>Y(i,o));return mt(n,0)})}};function Yk(r,t,e){let o=r.dtype;if(r.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${r.shape}`);if(r.dtype!==e)throw new Error(`Invalid data types; op elements ${r.dtype}, but list elements ${e}`);let n=r.shape.slice(1);Qr(n,t,"TensorList shape mismatch: ");let i=mo(r);return new pc(i,t,o)}function Qk(r,t,e,o){return new pc([],r,t,o)}function Zk(r,t,e,o){if(t.length!==r.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${r.shape[0]}`);let n=Math.max(...t);if(o!=null&&o!==-1&&n>=o)throw new Error(`Max index must be < array size (${n}  vs. ${o})`);let i=new pc([],e,r.dtype,o),s=mo(r,0);return t.forEach((a,l)=>{i.setItem(a,s[l])}),i}function Jk(r,t,e){let o=0,n=t.map(c=>(o+=c,o));if(o!==r.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${o}, and tensor's shape is: ${r.shape}`);let i=r.shape.slice(1),s=Zf(i,e),a=o===0?0:r.size/o,l=Ne(()=>{let c=[];r=Y(r,[1,o,a]);for(let p=0;p<t.length;++p){let m=[0,p===0?0:n[p-1],0],f=[1,t[p],a];c[p]=Y(Oe(r,m,f),s)}return r.dispose(),c}),u=new pc([],e,r.dtype,t.length);for(let c=0;c<l.length;c++)u.setItem(c,l[c]);return u}var eI=(r,t,e)=>j(null,null,function*(){switch(r.op){case"If":case"StatelessIf":{let o=w("thenBranch",r,t,e),n=w("elseBranch",r,t,e),i=w("cond",r,t,e),s=w("args",r,t,e);return(yield i.data())[0]?e.functionMap[o].executeFunctionAsync(s,e.tensorArrayMap,e.tensorListMap):e.functionMap[n].executeFunctionAsync(s,e.tensorArrayMap,e.tensorListMap)}case"While":case"StatelessWhile":{let o=w("body",r,t,e),n=w("cond",r,t,e),i=w("args",r,t,e),s=yield e.functionMap[n].executeFunctionAsync(i,e.tensorArrayMap,e.tensorListMap),a=i.map(c=>c.id),l=yield s[0].data();s.forEach(c=>{!c.kept&&a.indexOf(c.id)===-1&&c.dispose()});let u=i;for(;l[0];){let c=u;u=yield e.functionMap[o].executeFunctionAsync(u,e.tensorArrayMap,e.tensorListMap);let p=u.map(m=>m.id);c.forEach(m=>{!m.kept&&a.indexOf(m.id)===-1&&p.indexOf(m.id)===-1&&m.dispose()});let d=yield e.functionMap[n].executeFunctionAsync(u,e.tensorArrayMap,e.tensorListMap);l=yield d[0].data(),d.forEach(m=>{!m.kept&&a.indexOf(m.id)===-1&&p.indexOf(m.id)===-1&&m.dispose()})}return u}case"LoopCond":{let o=w("pred",r,t,e);return[zo(o)]}case"Switch":{let o=w("pred",r,t,e),n=w("data",r,t,e);return n.kept||(n=zo(n)),(yield o.data())[0]?[void 0,n]:[n,void 0]}case"Merge":{let o=r.inputNames.find(n=>Mt(n,t,e)!==void 0);if(o){let n=Mt(o,t,e);return[zo(n)]}return}case"Enter":{let o=w("frameName",r,t,e),n=w("tensor",r,t,e);return e.enterFrame(o),[zo(n)]}case"Exit":{let o=w("tensor",r,t,e);return e.exitFrame(),[zo(o)]}case"NextIteration":{let o=w("tensor",r,t,e);return e.nextIteration(),[zo(o)]}case"TensorArrayV3":{let o=w("size",r,t,e),n=w("dtype",r,t,e),i=w("elementShape",r,t,e),s=w("dynamicSize",r,t,e),a=w("clearAfterRead",r,t,e),l=w("identicalElementShapes",r,t,e),u=w("name",r,t,e),c=new Jf(u,n,o,i,l,s,a);return e.addTensorArray(c),[c.idTensor,Re(1)]}case"TensorArrayWriteV3":{let o=w("tensorArrayId",r,t,e),n=w("index",r,t,e),i=w("tensor",r,t,e),s=e.getTensorArray(o.id);return s.write(n,i),[s.idTensor]}case"TensorArrayReadV3":{let o=w("tensorArrayId",r,t,e),n=w("index",r,t,e);return[e.getTensorArray(o.id).read(n)]}case"TensorArrayGatherV3":{let o=w("tensorArrayId",r,t,e),n=w("indices",r,t,e),i=w("dtype",r,t,e);return[e.getTensorArray(o.id).gather(n,i)]}case"TensorArrayScatterV3":{let o=w("tensorArrayId",r,t,e),n=w("indices",r,t,e),i=w("tensor",r,t,e),s=e.getTensorArray(o.id);return s.scatter(n,i),[s.idTensor]}case"TensorArrayConcatV3":{let o=w("tensorArrayId",r,t,e),n=e.getTensorArray(o.id),i=w("dtype",r,t,e);return[n.concat(i)]}case"TensorArraySplitV3":{let o=w("tensorArrayId",r,t,e),n=w("tensor",r,t,e),i=w("lengths",r,t,e),s=e.getTensorArray(o.id);return s.split(i,n),[s.idTensor]}case"TensorArraySizeV3":{let o=w("tensorArrayId",r,t,e),n=e.getTensorArray(o.id);return[Re(n.size(),"int32")]}case"TensorArrayCloseV3":{let o=w("tensorArrayId",r,t,e),n=e.getTensorArray(o.id);return n.clearAndClose(),[n.idTensor]}case"TensorListSetItem":{let o=w("tensorListId",r,t,e),n=w("index",r,t,e),i=w("tensor",r,t,e),s=e.getTensorList(o.id);return s.setItem(n,i),[s.idTensor]}case"TensorListGetItem":{let o=w("tensorListId",r,t,e),n=w("index",r,t,e),i=w("elementShape",r,t,e),s=w("elementDType",r,t,e);return[e.getTensorList(o.id).getItem(n,i,s)]}case"TensorListScatterV2":case"TensorListScatter":{let o=w("indices",r,t,e),n=w("tensor",r,t,e),i=w("elementShape",r,t,e),s=w("numElements",r,t,e),a=Zk(n,o,i,s);return e.addTensorList(a),[a.idTensor]}case"TensorListReserve":case"EmptyTensorList":{let o=w("elementShape",r,t,e),n=w("elementDType",r,t,e),i;r.op==="TensorListReserve"?i="numElements":i="maxNumElements";let s=w(i,r,t,e),a=r.op==="TensorListReserve"?-1:s,l=Qk(o,n,s,a);return e.addTensorList(l),[l.idTensor]}case"TensorListGather":{let o=w("tensorListId",r,t,e),n=w("indices",r,t,e),i=w("elementShape",r,t,e),s=w("elementDType",r,t,e);return[e.getTensorList(o.id).gather(n,s,i)]}case"TensorListStack":{let o=w("tensorListId",r,t,e),n=w("elementShape",r,t,e),i=w("elementDType",r,t,e),s=w("numElements",r,t,e);return[e.getTensorList(o.id).stack(n,i,s)]}case"TensorListFromTensor":{let o=w("tensor",r,t,e),n=w("elementShape",r,t,e),i=w("elementDType",r,t,e),s=Yk(o,n,i);return e.addTensorList(s),[s.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{let o=w("tensorListId",r,t,e),n=e.getTensorList(o.id),i=w("dtype",r,t,e),s=w("elementShape",r,t,e);return[n.concat(i,s)]}case"TensorListPushBack":{let o=w("tensorListId",r,t,e),n=w("tensor",r,t,e),i=e.getTensorList(o.id);return i.pushBack(n),[i.idTensor]}case"TensorListPopBack":{let o=w("tensorListId",r,t,e),n=w("elementShape",r,t,e),i=w("elementDType",r,t,e);return[e.getTensorList(o.id).popBack(n,i)]}case"TensorListSplit":{let o=w("tensor",r,t,e),n=w("elementShape",r,t,e),i=w("lengths",r,t,e),s=Jk(o,i,n);return e.addTensorList(s),[s.idTensor]}case"TensorListLength":{let o=w("tensorListId",r,t,e),n=e.getTensorList(o.id);return[Re(n.size(),"int32")]}case"TensorListResize":{let o=w("tensorListId",r,t,e),n=w("size",r,t,e),s=e.getTensorList(o.id).resize(n);return e.addTensorList(s),[s.idTensor]}default:throw TypeError(`Node type ${r.op} is not implemented`)}});function tI(r,t,e){let[o,n]=w("fusedOps",r,t,e),i=o==="biasadd",s=!i,a=n==="prelu",l=o==="fusedbatchnorm",u=w("numArgs",r,t,e);if(i){if(a&&u!==2)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!a&&i&&u!==1)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(l)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");let c=w("strides",r,t,e),p=Np(r,t,e),d=w("dataFormat",r,t,e).toUpperCase(),m=w("dilations",r,t,e),[f,g]=w("args",r,t,e);s&&(g=f,f=void 0);let x=w("leakyreluAlpha",r,t,e);return{stride:c,pad:p,dataFormat:d,dilations:m,biasArg:f,preluArg:g,activationFunc:n,leakyreluAlpha:x}}var rI=(r,t,e,o=Qe)=>{switch(r.op){case"Conv1D":{let n=w("stride",r,t,e),i=w("pad",r,t,e),s=w("dataFormat",r,t,e).toUpperCase(),a=w("dilation",r,t,e);return[o.conv1d(w("x",r,t,e),w("filter",r,t,e),n,i,s,a)]}case"Conv2D":{let n=w("strides",r,t,e),i=Np(r,t,e),s=w("dataFormat",r,t,e).toUpperCase(),a=w("dilations",r,t,e);return[o.conv2d(w("x",r,t,e),w("filter",r,t,e),[n[1],n[2]],i,s,[a[1],a[2]])]}case"_FusedConv2D":{let{stride:n,pad:i,dataFormat:s,dilations:a,biasArg:l,preluArg:u,activationFunc:c,leakyreluAlpha:p}=tI(r,t,e);return[o.fused.conv2d({x:w("x",r,t,e),filter:w("filter",r,t,e),strides:[n[1],n[2]],pad:i,dataFormat:s,dilations:[a[1],a[2]],bias:l,activation:c,preluActivationWeights:u,leakyreluAlpha:p})]}case"FusedDepthwiseConv2dNative":{let{stride:n,pad:i,dataFormat:s,dilations:a,biasArg:l,preluArg:u,activationFunc:c,leakyreluAlpha:p}=tI(r,t,e);return[o.fused.depthwiseConv2d({x:w("x",r,t,e),filter:w("filter",r,t,e),strides:[n[1],n[2]],pad:i,dataFormat:s,dilations:[a[1],a[2]],bias:l,activation:c,preluActivationWeights:u,leakyreluAlpha:p})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{let n=w("outputShape",r,t,e),i=w("strides",r,t,e),s=Np(r,t,e);return[o.conv2dTranspose(w("x",r,t,e),w("filter",r,t,e),n,[i[1],i[2]],s)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{let n=w("strides",r,t,e),i=Np(r,t,e),s=w("dilations",r,t,e),a=w("dataFormat",r,t,e).toUpperCase();return[o.depthwiseConv2d(w("input",r,t,e),w("filter",r,t,e),[n[1],n[2]],i,a,[s[1],s[2]])]}case"Conv3D":{let n=w("strides",r,t,e),i=w("pad",r,t,e),s=w("dataFormat",r,t,e).toUpperCase(),a=w("dilations",r,t,e);return[o.conv3d(w("x",r,t,e),w("filter",r,t,e),[n[1],n[2],n[3]],i,s,[a[1],a[2],a[3]])]}case"AvgPool":{let n=w("strides",r,t,e),i=w("pad",r,t,e),s=w("kernelSize",r,t,e);return[o.avgPool(w("x",r,t,e),[s[1],s[2]],[n[1],n[2]],i)]}case"MaxPool":{let n=w("strides",r,t,e),i=w("pad",r,t,e),s=w("kernelSize",r,t,e);return[o.maxPool(w("x",r,t,e),[s[1],s[2]],[n[1],n[2]],i)]}case"MaxPoolWithArgmax":{let n=w("strides",r,t,e),i=w("pad",r,t,e),s=w("kernelSize",r,t,e),a=w("includeBatchInIndex",r,t,e),{result:l,indexes:u}=o.maxPoolWithArgmax(w("x",r,t,e),[s[1],s[2]],[n[1],n[2]],i,a);return[l,u]}case"AvgPool3D":{let n=w("strides",r,t,e),i=w("pad",r,t,e),s=w("kernelSize",r,t,e);return[o.avgPool3d(w("x",r,t,e),[s[1],s[2],s[3]],[n[1],n[2],n[3]],i)]}case"MaxPool3D":{let n=w("strides",r,t,e),i=w("pad",r,t,e),s=w("kernelSize",r,t,e);return[o.maxPool3d(w("x",r,t,e),[s[1],s[2],s[3]],[n[1],n[2],n[3]],i)]}case"Dilation2D":{let n=w("strides",r,t,e),i=w("pad",r,t,e),s=w("dilations",r,t,e),a=n[1],l=n[2],u=s[1],c=s[2];return[o.dilation2d(w("x",r,t,e),w("filter",r,t,e),[a,l],i,[u,c],"NHWC")]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var oI=(r,t,e,o=Qe)=>{switch(r.op){case"Fill":{let n=w("shape",r,t,e),i=w("dtype",r,t,e),s=w("value",r,t,e);return[o.fill(n,s,i)]}case"LinSpace":{let n=w("start",r,t,e),i=w("stop",r,t,e),s=w("num",r,t,e);return[o.linspace(n,i,s)]}case"Multinomial":{let n=w("logits",r,t,e),i=w("numSamples",r,t,e),s=w("seed",r,t,e);return[o.multinomial(n,i,s)]}case"OneHot":{let n=w("indices",r,t,e),i=w("depth",r,t,e),s=w("onValue",r,t,e),a=w("offValue",r,t,e),l=w("dtype",r,t,e);return[o.oneHot(n,i,s,a,l)]}case"Ones":return[o.ones(w("shape",r,t,e),w("dtype",r,t,e))];case"OnesLike":return[o.onesLike(w("x",r,t,e))];case"RandomStandardNormal":return[o.randomStandardNormal(w("shape",r,t,e),w("dtype",r,t,e),w("seed",r,t,e))];case"RandomUniform":return[o.randomUniform(w("shape",r,t,e),w("minval",r,t,e),w("maxval",r,t,e),w("dtype",r,t,e))];case"RandomUniformInt":return[o.randomUniformInt(w("shape",r,t,e),w("minval",r,t,e),w("maxval",r,t,e),w("seed",r,t,e))];case"Range":{let n=w("start",r,t,e),i=w("stop",r,t,e),s=w("step",r,t,e);return[o.range(n,i,s,w("dtype",r,t,e))]}case"TruncatedNormal":{let n=w("shape",r,t,e),i=w("mean",r,t,e),s=w("stdDev",r,t,e),a=w("seed",r,t,e);return[o.truncatedNormal(n,i,s,w("dtype",r,t,e),a)]}case"Zeros":return[o.zeros(w("shape",r,t,e),w("dtype",r,t,e))];case"ZerosLike":return[o.zerosLike(w("x",r,t,e))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};function I1(r,t,e){let o=w("boxes",r,t,e),n=w("scores",r,t,e),i=w("maxOutputSize",r,t,e),s=w("iouThreshold",r,t,e),a=w("scoreThreshold",r,t,e),l=w("softNmsSigma",r,t,e);return{boxes:o,scores:n,maxOutputSize:i,iouThreshold:s,scoreThreshold:a,softNmsSigma:l}}var nI=(i,s,a,l,...u)=>j(null,[i,s,a,l,...u],function*(r,t,e,o,n=Qe){switch(r.op){case"NonMaxSuppressionV5":{let{boxes:c,scores:p,maxOutputSize:d,iouThreshold:m,scoreThreshold:f,softNmsSigma:g}=I1(r,t,e),x=yield n.image.nonMaxSuppressionWithScoreAsync(c,p,d,m,f,g);return[x.selectedIndices,x.selectedScores]}case"NonMaxSuppressionV4":{let{boxes:c,scores:p,maxOutputSize:d,iouThreshold:m,scoreThreshold:f}=I1(r,t,e),g=w("padToMaxOutputSize",r,t,e),x=yield n.image.nonMaxSuppressionPaddedAsync(c,p,d,m,f,g);return[x.selectedIndices,x.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{let{boxes:c,scores:p,maxOutputSize:d,iouThreshold:m,scoreThreshold:f}=I1(r,t,e);return[yield n.image.nonMaxSuppressionAsync(c,p,d,m,f)]}case"Where":{let c=n.cast(w("condition",r,t,e),"bool"),p=[yield n.whereAsync(c)];return c.dispose(),p}case"ListDiff":return n.setdiff1dAsync(w("x",r,t,e),w("y",r,t,e));default:throw TypeError(`Node type ${r.op} is not implemented`)}});var iI=(r,t,e,o=Qe)=>{switch(r.op){case"LowerBound":{let n=w("sortedSequence",r,t,e),i=w("values",r,t,e);return[o.lowerBound(n,i)]}case"TopKV2":{let n=w("x",r,t,e),i=w("k",r,t,e),s=w("sorted",r,t,e),a=o.topk(n,i,s);return[a.values,a.indices]}case"UpperBound":{let n=w("sortedSequence",r,t,e),i=w("values",r,t,e);return[o.upperBound(n,i)]}case"Unique":{let n=w("x",r,t,e),i=o.unique(n);return[i.values,i.indices]}case"UniqueV2":{let n=w("x",r,t,e),i=w("axis",r,t,e),s=o.unique(n,i);return[s.values,s.indices]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var sI=(r,t,e,o=Qe)=>{switch(r.op){case"Const":return t[r.name];case"PlaceholderWithDefault":let n=w("default",r,t,e);return[Mt(r.name,t,e)||n];case"Placeholder":return[Mt(r.name,t,e)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{let c=w("x",r,t,e);return[zo(c)]}case"IdentityN":return w("x",r,t,e).map(c=>zo(c));case"Snapshot":let i=w("x",r,t,e);return[zo(i)];case"Shape":return[o.tensor1d(w("x",r,t,e).shape,"int32")];case"ShapeN":return w("x",r,t,e).map(c=>o.tensor1d(c.shape));case"Size":return[o.scalar(w("x",r,t,e).size,"int32")];case"Rank":return[o.scalar(w("x",r,t,e).rank,"int32")];case"NoOp":return[o.scalar(1)];case"Print":let s=w("x",r,t,e),a=w("data",r,t,e),l=w("message",r,t,e),u=w("summarize",r,t,e);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(l);for(let c=0;c<a.length;c++)console.log(Array.prototype.slice.call(a[c].dataSync()).slice(0,u));return[s];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var eh=class{get id(){return this.handle.id}constructor(t,e){this.keyDType=t,this.valueDType=e,this.handle=Re(0),this.tensorMap=new Map,$r(this.handle)}clearAndClose(){this.tensorMap.forEach(t=>t.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return Re(this.size(),"int32")}import(t,e){return j(this,null,function*(){this.checkKeyAndValueTensor(t,e);let o=yield t.data();return this.tensorMap.forEach(n=>n.dispose()),this.tensorMap.clear(),Ne(()=>{let n=mo(e),i=o.length,s=n.length;S.assert(i===s,()=>`The number of elements doesn't match, keys has ${i} elements, the values has ${s} elements.`);for(let a=0;a<i;a++){let l=o[a],u=n[a];$r(u),this.tensorMap.set(l,u)}return this.handle})})}find(t,e){return j(this,null,function*(){this.checkKeyAndValueTensor(t,e);let o=yield t.data();return Ne(()=>{let n=[];for(let i=0;i<o.length;i++){let s=o[i],a=this.findWithDefault(s,e);n.push(a)}return wr(n)})})}findWithDefault(t,e){let o=this.tensorMap.get(t);return o??e}checkKeyAndValueTensor(t,e){if(t.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${t.dtype}`);if(e.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${e.dtype}`)}};var aI=(r,t,e,o)=>j(null,null,function*(){switch(r.op){case"HashTable":case"HashTableV2":{let n=o.getHashTableHandleByName(r.name);if(n!=null)return[n];{let i=w("keyDType",r,t,e),s=w("valueDType",r,t,e),a=new eh(i,s);return o.addHashTable(r.name,a),[a.handle]}}case"InitializeTable":case"InitializeTableV2":case"LookupTableImport":case"LookupTableImportV2":{let n=w("tableHandle",r,t,e,o),i=w("keys",r,t,e),s=w("values",r,t,e);return[yield o.getHashTableById(n.id).import(i,s)]}case"LookupTableFind":case"LookupTableFindV2":{let n=w("tableHandle",r,t,e,o),i=w("keys",r,t,e),s=w("defaultValue",r,t,e);return[yield o.getHashTableById(n.id).find(i,s)]}case"LookupTableSize":case"LookupTableSizeV2":{let n=w("tableHandle",r,t,e,o);return[o.getHashTableById(n.id).tensorSize()]}default:throw TypeError(`Node type ${r.op} is not implemented`)}});var lI=(r,t,e,o=Qe)=>{switch(r.op){case"ResizeBilinear":{let n=w("images",r,t,e),i=w("size",r,t,e),s=w("alignCorners",r,t,e),a=w("halfPixelCenters",r,t,e);return[o.image.resizeBilinear(n,[i[0],i[1]],s,a)]}case"ResizeNearestNeighbor":{let n=w("images",r,t,e),i=w("size",r,t,e),s=w("alignCorners",r,t,e),a=w("halfPixelCenters",r,t,e);return[o.image.resizeNearestNeighbor(n,[i[0],i[1]],s,a)]}case"CropAndResize":{let n=w("image",r,t,e),i=w("boxes",r,t,e),s=w("boxInd",r,t,e),a=w("cropSize",r,t,e),l=w("method",r,t,e),u=w("extrapolationValue",r,t,e);return[o.image.cropAndResize(n,i,s,a,l,u)]}case"ImageProjectiveTransformV3":{let n=w("images",r,t,e),i=w("transforms",r,t,e),s=w("outputShape",r,t,e),a=w("fillValue",r,t,e),l=w("interpolation",r,t,e),u=w("fillMode",r,t,e);return[o.image.transform(n,i,l.toLowerCase(),u.toLowerCase(),a,s)]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var uI=(r,t,e,o=Qe)=>{switch(r.op){case"Equal":return[o.equal(w("a",r,t,e),w("b",r,t,e))];case"NotEqual":return[o.notEqual(w("a",r,t,e),w("b",r,t,e))];case"Greater":return[o.greater(w("a",r,t,e),w("b",r,t,e))];case"GreaterEqual":return[o.greaterEqual(w("a",r,t,e),w("b",r,t,e))];case"Less":return[o.less(w("a",r,t,e),w("b",r,t,e))];case"LessEqual":return[o.lessEqual(w("a",r,t,e),w("b",r,t,e))];case"LogicalAnd":return[o.logicalAnd(w("a",r,t,e),w("b",r,t,e))];case"LogicalNot":return[o.logicalNot(w("a",r,t,e))];case"LogicalOr":return[o.logicalOr(w("a",r,t,e),w("b",r,t,e))];case"Select":case"SelectV2":return[o.where(w("condition",r,t,e),w("a",r,t,e),w("b",r,t,e))];case"BitwiseAnd":return[o.bitwiseAnd(w("a",r,t,e),w("b",r,t,e))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var cI=(r,t,e,o=Qe)=>{switch(r.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[o.matMul(w("a",r,t,e),w("b",r,t,e),w("transposeA",r,t,e),w("transposeB",r,t,e))];case"Einsum":return[o.einsum(w("equation",r,t,e),...w("tensors",r,t,e))];case"Transpose":return[o.transpose(w("x",r,t,e),w("perm",r,t,e))];case"_FusedMatMul":let[n,i]=w("fusedOps",r,t,e),s=n==="biasadd",a=i==="prelu",l=w("numArgs",r,t,e),u=w("leakyreluAlpha",r,t,e);if(s){if(a&&l!==2)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!a&&l!==1)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}let[c,p]=w("args",r,t,e);return[o.fused.matMul({a:w("a",r,t,e),b:w("b",r,t,e),transposeA:w("transposeA",r,t,e),transposeB:w("transposeB",r,t,e),bias:c,activation:i,preluActivationWeights:p,leakyreluAlpha:u})];case"MatrixBandPart":return[o.linalg.bandPart(w("a",r,t,e),w("numLower",r,t,e),w("numUpper",r,t,e))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var pI=(r,t,e,o=Qe)=>{switch(r.op){case"EuclideanNorm":return[o.euclideanNorm(w("x",r,t,e),w("axis",r,t,e),w("keepDims",r,t,e))];case"FusedBatchNorm":case"FusedBatchNormV2":return[o.batchNorm(w("x",r,t,e),w("mean",r,t,e),w("variance",r,t,e),w("offset",r,t,e),w("scale",r,t,e),w("epsilon",r,t,e))];case"FusedBatchNormV3":return[o.batchNorm(w("x",r,t,e),w("mean",r,t,e),w("variance",r,t,e),w("offset",r,t,e),w("scale",r,t,e),w("epsilon",r,t,e))];case"LRN":return[o.localResponseNormalization(w("x",r,t,e),w("radius",r,t,e),w("bias",r,t,e),w("alpha",r,t,e),w("beta",r,t,e))];case"Softmax":return[o.softmax(w("x",r,t,e))];case"LogSoftmax":return[o.logSoftmax(w("x",r,t,e))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var dI=(r,t,e,o=Qe)=>{switch(r.op){case"RaggedGather":{let{outputNestedSplits:n,outputDenseValues:i}=o.raggedGather(w("paramsNestedSplits",r,t,e),w("paramsDenseValues",r,t,e),w("indices",r,t,e),w("outputRaggedRank",r,t,e));return n.concat(i)}case"RaggedRange":{let{rtNestedSplits:n,rtDenseValues:i}=o.raggedRange(w("starts",r,t,e),w("limits",r,t,e),w("splits",r,t,e));return[n,i]}case"RaggedTensorToTensor":return[o.raggedTensorToTensor(w("shape",r,t,e),w("values",r,t,e),w("defaultValue",r,t,e),w("rowPartitionTensors",r,t,e),w("rowPartitionTypes",r,t,e))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var mI=(r,t,e,o=Qe)=>{switch(r.op){case"Max":{let a=w("axis",r,t,e),l=w("keepDims",r,t,e);return[o.max(w("x",r,t,e),a,l)]}case"Mean":{let a=w("axis",r,t,e),l=w("keepDims",r,t,e);return[o.mean(w("x",r,t,e),a,l)]}case"Min":{let a=w("axis",r,t,e),l=w("keepDims",r,t,e);return[o.min(w("x",r,t,e),a,l)]}case"Sum":{let a=w("axis",r,t,e),l=w("keepDims",r,t,e);return[o.sum(w("x",r,t,e),a,l)]}case"All":{let a=w("axis",r,t,e),l=w("keepDims",r,t,e);return[o.all(w("x",r,t,e),a,l)]}case"Any":{let a=w("axis",r,t,e),l=w("keepDims",r,t,e);return[o.any(w("x",r,t,e),a,l)]}case"ArgMax":{let a=w("axis",r,t,e);return[o.argMax(w("x",r,t,e),a)]}case"ArgMin":{let a=w("axis",r,t,e);return[o.argMin(w("x",r,t,e),a)]}case"Prod":{let a=w("axis",r,t,e),l=w("keepDims",r,t,e);return[o.prod(w("x",r,t,e),a,l)]}case"Cumprod":{let a=w("axis",r,t,e),l=w("exclusive",r,t,e),u=w("reverse",r,t,e);return[o.cumprod(w("x",r,t,e),a,l,u)]}case"Cumsum":{let a=w("axis",r,t,e),l=w("exclusive",r,t,e),u=w("reverse",r,t,e);return[o.cumsum(w("x",r,t,e),a,l,u)]}case"Bincount":let n=w("x",r,t,e),i=w("weights",r,t,e),s=w("size",r,t,e);return[o.bincount(n,i,s)];case"DenseBincount":{let a=w("x",r,t,e),l=w("weights",r,t,e),u=w("size",r,t,e),c=w("binaryOutput",r,t,e);return[o.denseBincount(a,l,u,c)]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var fI=(r,t,e,o=Qe)=>{switch(r.op){case"ConcatV2":case"Concat":{let n=w("n",r,t,e),i=w("axis",r,t,e),s=w("tensors",r,t,e);return s=s.slice(0,n),[o.concat(s,i)]}case"Gather":{let n=w("x",r,t,e),i=w("indices",r,t,e);return[o.gather(n,o.cast(i,"int32"),0)]}case"GatherV2":{let n=w("axis",r,t,e),i=w("batchDims",r,t,e),s=w("x",r,t,e),a=w("indices",r,t,e);return[o.gather(s,o.cast(a,"int32"),n,i)]}case"Reverse":{let n=w("dims",r,t,e),i=[];for(let a=0;a<n.length;a++)n[a]&&i.push(a);let s=w("x",r,t,e);return[o.reverse(s,i)]}case"ReverseV2":{let n=w("axis",r,t,e),i=w("x",r,t,e);return[o.reverse(i,n)]}case"Slice":{let n=w("begin",r,t,e),i=w("size",r,t,e);return[o.slice(w("x",r,t,e),n,i)]}case"StridedSlice":{let n=w("begin",r,t,e),i=w("end",r,t,e),s=w("strides",r,t,e),a=w("beginMask",r,t,e),l=w("endMask",r,t,e),u=w("ellipsisMask",r,t,e),c=w("newAxisMask",r,t,e),p=w("shrinkAxisMask",r,t,e),d=w("x",r,t,e);return[o.stridedSlice(d,n,i,s,a,l,u,c,p)]}case"Pack":return Ne(()=>{let n=w("axis",r,t,e),i=w("tensors",r,t,e),s=i[0].shape,a=o.squeeze(i[0]).shape,l=i.map(u=>{let c=S.arraysEqual(u.shape,s);if(!c&&!S.arraysEqual(o.squeeze(u).shape,a))throw new Error("the input tensors shape does not match");return c?u:o.reshape(u,s)});return[o.stack(l,n)]});case"Unpack":{let n=w("axis",r,t,e),i=w("tensor",r,t,e);return o.unstack(i,n)}case"Tile":{let n=w("reps",r,t,e);return[o.tile(w("x",r,t,e),n)]}case"Split":case"SplitV":{let n=w("axis",r,t,e),i=w("numOrSizeSplits",r,t,e),s=w("x",r,t,e);return o.split(s,i,n)}case"ScatterNd":{let n=w("indices",r,t,e),i=w("values",r,t,e),s=w("shape",r,t,e);return[o.scatterND(n,i,s)]}case"GatherNd":{let n=w("x",r,t,e),i=w("indices",r,t,e);return[o.gatherND(n,i)]}case"SparseToDense":{let n=w("sparseIndices",r,t,e),i=w("outputShape",r,t,e),s=w("sparseValues",r,t,e),a=w("defaultValue",r,t,e);return[o.sparseToDense(n,s,i,s.dtype===a.dtype?a:o.cast(a,s.dtype))]}case"TensorScatterUpdate":{let n=w("indices",r,t,e),i=w("values",r,t,e),s=w("tensor",r,t,e);return[o.tensorScatterUpdate(s,n,i)]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var hI=(r,t,e,o=Qe)=>{switch(r.op){case"SparseFillEmptyRows":{let{outputIndices:n,outputValues:i,emptyRowIndicator:s,reverseIndexMap:a}=o.sparse.sparseFillEmptyRows(w("indices",r,t,e),w("values",r,t,e),w("denseShape",r,t,e),w("defaultValue",r,t,e));return[n,i,s,a]}case"SparseReshape":{let{outputIndices:n,outputShape:i}=o.sparse.sparseReshape(w("inputIndices",r,t,e),w("inputShape",r,t,e),w("newShape",r,t,e));return[n,i]}case"SparseSegmentMean":return[o.sparse.sparseSegmentMean(w("data",r,t,e),w("indices",r,t,e),w("segmentIds",r,t,e))];case"SparseSegmentSum":return[o.sparse.sparseSegmentSum(w("data",r,t,e),w("indices",r,t,e),w("segmentIds",r,t,e))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var gI=(r,t,e,o=Qe)=>{switch(r.op){case"FFT":return[o.fft(w("x",r,t,e))];case"IFFT":return[o.ifft(w("x",r,t,e))];case"RFFT":return[o.rfft(w("x",r,t,e))];case"IRFFT":return[o.irfft(w("x",r,t,e))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var xI=(r,t,e,o=Qe)=>{switch(r.op){case"StaticRegexReplace":return[o.string.staticRegexReplace(w("input",r,t,e),w("pattern",r,t,e),w("rewrite",r,t,e),w("replaceGlobal",r,t,e))];case"StringNGrams":{let{nGrams:n,nGramsSplits:i}=o.string.stringNGrams(w("data",r,t,e),w("dataSplits",r,t,e),w("separator",r,t,e),w("nGramWidths",r,t,e),w("leftPad",r,t,e),w("rightPad",r,t,e),w("padWidth",r,t,e),w("preserveShortSequences",r,t,e));return[n,i]}case"StringSplit":{let{indices:n,values:i,shape:s}=o.string.stringSplit(w("input",r,t,e),w("delimiter",r,t,e),w("skipEmpty",r,t,e));return[n,i,s]}case"StringToHashBucketFast":return[o.string.stringToHashBucketFast(w("input",r,t,e),w("numBuckets",r,t,e))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var yI=(r,t,e,o=Qe)=>{switch(r.op){case"Cast":return[o.cast(w("x",r,t,e),w("dtype",r,t,e))];case"ExpandDims":{let n=w("axis",r,t,e);return[o.expandDims(w("x",r,t,e),n)]}case"Squeeze":{let n=w("axis",r,t,e);return[o.squeeze(w("x",r,t,e),n)]}case"Reshape":return[o.reshape(w("x",r,t,e),w("shape",r,t,e))];case"EnsureShape":return[o.ensureShape(w("x",r,t,e),w("shape",r,t,e))];case"MirrorPad":return[o.mirrorPad(w("x",r,t,e),w("padding",r,t,e),w("mode",r,t,e))];case"PadV2":case"Pad":return[o.pad(w("x",r,t,e),w("padding",r,t,e),w("constantValue",r,t,e))];case"SpaceToBatchND":{let n=w("blockShape",r,t,e),i=w("paddings",r,t,e);return[o.spaceToBatchND(w("x",r,t,e),n,i)]}case"BatchToSpaceND":{let n=w("blockShape",r,t,e),i=w("crops",r,t,e);return[o.batchToSpaceND(w("x",r,t,e),n,i)]}case"DepthToSpace":{let n=w("blockSize",r,t,e),i=w("dataFormat",r,t,e).toUpperCase();return[o.depthToSpace(w("x",r,t,e),n,i)]}case"BroadcastTo":return[o.broadcastTo(w("x",r,t,e),w("shape",r,t,e))];case"BroadcastArgs":return[o.broadcastArgs(w("s0",r,t,e),w("s1",r,t,e))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};function T1(r,t,e,o,n=Ne){let i=((s,a,l)=>{switch(s.category){case"arithmetic":return n(()=>qk(s,a,l));case"basic_math":return n(()=>jk(s,a,l));case"control":return eI(s,a,l);case"convolution":return n(()=>rI(s,a,l));case"creation":return n(()=>oI(s,a,l));case"dynamic":return nI(s,a,l);case"evaluation":return n(()=>iI(s,a,l));case"image":return n(()=>lI(s,a,l));case"graph":return n(()=>sI(s,a,l));case"logical":return n(()=>uI(s,a,l));case"matrices":return n(()=>cI(s,a,l));case"normalization":return n(()=>pI(s,a,l));case"ragged":return n(()=>dI(s,a,l));case"reduction":return n(()=>mI(s,a,l));case"slice_join":return n(()=>fI(s,a,l));case"sparse":return n(()=>hI(s,a,l));case"spectral":return n(()=>gI(s,a,l));case"string":return n(()=>xI(s,a,l));case"transformation":return n(()=>yI(s,a,l));case"hash_table":return aI(s,a,l,o);case"custom":let u=Bf(s.op);if(u&&u.customExecutor)return u.customExecutor(new Qf(s,a,l));throw TypeError(`Custom op ${s.op} is not registered.`);default:throw TypeError(`Unknown op '${s.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(r,t,e);return S.isPromise(i)?i.then(s=>[].concat(s)):[].concat(i)}var $p=class{constructor(t={},e={},o={},n={},i){this.weightMap=t,this.tensorArrayMap=e,this.tensorListMap=o,this.functionMap=n,this.parseNodeNameCache=i,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(t,e){return{id:t,frameName:e,iterationId:0}}set currentContext(t){this.contexts!==t&&(this.contexts=t,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){let t=[];for(let e=0;e<this.contexts.length-1;e++){let o=this.contexts.slice(0,this.contexts.length-e);t.push(this.contextIdforContexts(o))}t.push(""),this._currentContextIds=t}contextIdforContexts(t){return t?t.map(e=>e.id===0&&e.iterationId===0?"":`${e.frameName}-${e.iterationId}`).join("/"):""}enterFrame(t){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,t)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(this.contexts&&this.contexts.length>1)this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift();else throw new Error("Cannot exit frame, the context is empty")}nextIteration(){if(this.contexts&&this.contexts.length>0){this.contexts=this.contexts.slice(),this.lastId++;let t=Object.assign({},this.contexts[this.contexts.length-1]);t.iterationId+=1,t.id=this.lastId,this.contexts.splice(-1,1,t),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}else throw new Error("Cannot increase frame iteration, the context is empty")}getWeight(t){return this.weightMap[t]}addTensorArray(t){this.tensorArrayMap[t.id]=t}getTensorArray(t){return this.tensorArrayMap[t]}addTensorList(t){this.tensorListMap[t.id]=t}getTensorList(t){return this.tensorListMap[t]}dispose(t){for(let e in this.tensorArrayMap)this.tensorArrayMap[e].clearAndClose(t);for(let e in this.tensorListMap)this.tensorListMap[e].clearAndClose(t)}};function E1(r,t,e,o){let n=new Set,i=[],s=null,a=null,l=new Set,u=new Set(Object.keys(r).map(d=>_r(d)[0]));o=o||[];let c=new Set(o.map(d=>_r(d.name)[0])),p=[...t];for(;p.length>0;){let d=p.pop();if((zi(d)||oH(d)||nH(d))&&s==null&&(s=d,a=s.children.map(m=>m.name).filter(m=>n.has(m))),n.add(d.name),e[d.name]==null&&!u.has(d.name)&&!c.has(d.name)){if(d.inputs.length===0){i.push(d.name);continue}d.inputs.forEach(m=>{l.has(m.name)||(l.add(m.name),p.push(m))})}}return{inputs:r,outputs:t,usedNodes:n,missingInputs:i,dynamicNode:s,syncInputs:a}}function vI(r,t){let{usedNodes:e,inputs:o}=t,n=Object.keys(o).map(x=>_r(x)[0]).map(x=>r.nodes[x]),i=r.initNodes||[],s=x=>e.has(typeof x=="string"?x:x.name);function a(x){return[...new Map(x.map(y=>[y.name,y])).values()]}let l=a([...n,...r.weights,...i]).filter(s),u=a([...l,...Object.values(r.nodes)]).filter(s),c=new Map(u.map(x=>[x.name,x])),p={};for(let x of u){p[x.name]=p[x.name]||0;for(let y of x.children)s(y)||(p[y.name]=Number.POSITIVE_INFINITY),p[y.name]=(p[y.name]||0)+1}let d=Object.entries(p).filter(([,x])=>x===0).map(([x])=>x),m=[...d];for(;d.length>0;){let x=d.pop(),y=c.get(x);for(let b of y.children.filter(s))--p[b.name]===0&&(m.push(b.name),d.push(b.name))}let f=m.map(x=>c.get(x)),g=Z8(f,l);return J8(g,l),g}function Z8(r,t){let e=new Map(r.map(s=>[s.name,s])),o=t.map(s=>s.name),n=new Set(o);for(;o.length>0;){let s=o.pop(),a=e.get(s);for(let l of a.children)!e.has(l.name)||n.has(l.name)||(n.add(l.name),o.push(l.name))}return r.filter(s=>n.has(s.name))}var dc=class extends Error{constructor(t){super(`NodesExecutionOrderError: ${t}`)}};function J8(r,t){let e=new Map(r.map((a,l)=>[a.name,l])),o=new Set(t.map(a=>a.name)),n=a=>o.has(typeof a=="string"?a:a.name),i=new Set(r.map(a=>a.name)),s=a=>i.has(typeof a=="string"?a:a.name);for(let a of r){for(let l of a.children.filter(s)){if(!e.has(l.name))throw new dc(`Child ${l.name} of node ${a.name} is unreachable.`);if(e.get(a.name)>e.get(l.name))throw new dc(`Node ${a.name} is scheduled to run after its child ${l.name}.`)}if(!n(a))for(let l of a.inputs){if(!e.has(l.name))throw new dc(`Input ${l.name} of node ${a.name} is unreachable.`);if(e.get(l.name)>e.get(a.name))throw new dc(`Node ${a.name} is scheduled to run before its input ${l.name}.`)}}}function bI(r){let t=new Map(r.map((a,l)=>[a.name,l])),e=Number.MAX_SAFE_INTEGER,o=r.map((a,l)=>zi(a)?e:l),n=a=>{let l=o[t.get(a.name)];return l??-1},i=r.map((a,l)=>a.children.map(n).reduce((u,c)=>Math.max(u,c),o[l])),s=new Map;for(let a=0;a<r.length;++a){let l=i[a];if(l===e)continue;let u=r[a],c=r[l];s.has(c.name)||s.set(c.name,[]),s.get(c.name).push(u)}return s}var eH=new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),tH=new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),rH=new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]);function zi(r){return eH.has(r.op)}function oH(r){return tH.has(r.op)}function nH(r){return rH.has(r.op)}var Pp=class r{get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(t){let e=Object.keys(t).map(o=>t[o].map(n=>n.id));this._weightIds=[].concat(...e),this._weightMap=t}set resourceManager(t){this._resourceManager=t}get inputs(){return this._inputs.map(t=>({name:t.name,shape:t.attrParams.shape?t.attrParams.shape.value:void 0,dtype:t.attrParams.dtype?t.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(t=>({name:t.name,shape:t.attrParams.shape?t.attrParams.shape.value:void 0,dtype:t.attrParams.dtype?t.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(t=>t.signatureKey||t.name)}get outputNodes(){return this._outputs.map(t=>{let e=t.signatureKey||t.name;return t.defaultOutput?`${e}:${t.defaultOutput}`:e})}get functions(){return Object.keys(this._functions).reduce((t,e)=>(t[e]=this._functions[e].signature,t),{})}constructor(t,e){this.graph=t,this.parent=e,this.compiledMap=new Map,this.parseNodeNameCache=new Map,this._weightMap={},this.SEPARATOR=",",this._functions={},this._functionExecutorMap={},this.keepIntermediateTensors=!1,this._outputs=t.outputs,this._inputs=t.inputs,this._initNodes=t.initNodes,this._signature=t.signature,this._functions=t.functions,t.functions!=null&&Object.keys(t.functions).forEach(o=>{this._functionExecutorMap[o]=new r(t.functions[o],this)})}getCompilationKey(t,e){let o=t.map(i=>i.name).sort(),n=e.map(i=>i.name).sort();return o.join(this.SEPARATOR)+"--"+n.join(this.SEPARATOR)}compile(t,e){let o=E1(t,e,this.weightMap,this._initNodes),{missingInputs:n,dynamicNode:i,syncInputs:s}=o;if(i!=null)throw new Error(`This execution contains the node '${i.name}', which has the dynamic op '${i.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${s}]`);if(n.length>0){let u=e.map(p=>p.name),c=Object.keys(t);throw new Error(`Cannot compute the outputs [${u}] from the provided inputs [${c}]. Missing the following inputs: [${n}]`)}let a=vI(this.graph,o),l=bI(a);return{orderedNodes:a,nodeLiveUntilMap:l}}cloneAndKeepTensor(t){if(t==null)return null;let e=t.clone();return $r(e),e}cloneTensorList(t){return t?t.map(o=>this.cloneAndKeepTensor(o)):null}cloneTensorMap(t){return Object.fromEntries(Object.entries(t).map(([e,o])=>[e,this.cloneTensorList(o)]))}execute(t,e){this.disposeIntermediateTensors(),t=this.mapInputs(t);let o=Object.keys(t).sort();this.checkInputs(t),this.checkInputShapeAndType(t),e=this.mapOutputs(e),this.checkOutputs(e);let n=o.map(d=>this.graph.nodes[_r(d)[0]]),i=e.map(d=>_r(d)[0]),s=new Set(i),a=i.map(d=>this.graph.nodes[d]);a.length===0&&(a=this._outputs);let l=this.getCompilationKey(n,a),u=this.compiledMap.get(l);u==null&&(u=this.compile(t,a),this.compiledMap.set(l,u));try{this.keepIntermediateTensors=G().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(d){this.keepIntermediateTensors=!1,console.warn(d.message)}let c={},p={};return Ne(()=>{let d=new $p(this.weightMap,c,p,this.functionExecutorMap,this.parseNodeNameCache),m=Object.assign({},this.weightMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap)),Object.keys(t).forEach(y=>{let[b,I]=_r(y,d),N=[];N[I]=t[y],m[b]=N,this.keepIntermediateTensors&&(this.clonedTensorsMap[b]=this.cloneTensorList(N))});let f=this.getFrozenTensorIds(m),{orderedNodes:g,nodeLiveUntilMap:x}=u;for(let y of g){if(m[y.name])continue;let b=T1(y,m,d,this._resourceManager);if(S.isPromise(b))throw new Error(`The execution of the op '${y.op}' returned a promise. Please use model.executeAsync() instead.`);m[y.name]=b,this.keepIntermediateTensors&&(this.clonedTensorsMap[y.name]=this.cloneTensorList(b)),this.checkTensorForDisposalWithNodeLiveUntilInfo(y,m,d,f,s,x.get(y.name))}return this.parent==null&&d.dispose(f),e.map(y=>Mt(y,m,d))})}getFrozenTensorIds(t){let e=[].concat.apply([],Object.keys(t).map(o=>t[o]).map(o=>o.map(n=>n.id)));return new Set(e)}checkTensorForDisposal(t,e,o,n,i,s,a){if(!(zi(e)||s.has(t))){for(let l of o[t])l!=null&&(a[l.id]=(a[l.id]||0)+e.children.length);for(let l of e.inputs){if(zi(l))continue;let u=i1(l.name,o,n);if(u!=null)for(let c of u){if(!c||c.kept||i.has(c.id))continue;let p=a[c.id];p===1?(c.dispose(),delete a[c.id]):p!=null&&a[c.id]--}}}}checkTensorForDisposalWithNodeLiveUntilInfo(t,e,o,n,i,s){function a(l){return zi(l)||i.has(l.name)}if(!(zi(t)||s==null))for(let l of s){if(a(l))continue;let u=i1(l.name,e,o);for(let c of u)!c||c.kept||n.has(c.id)||c.dispose()}}executeAsync(t,e){return j(this,null,function*(){return this._executeAsync(t,e)})}disposeIntermediateTensors(){this.clonedTensorsMap&&(Object.values(this.clonedTensorsMap).forEach(t=>{for(let e of t)e&&!e.isDisposed&&e.dispose()}),this.clonedTensorsMap=null)}getIntermediateTensors(){return this.clonedTensorsMap}_executeAsync(s,a){return j(this,arguments,function*(t,e,o=!1,n={},i={}){this.disposeIntermediateTensors(),o||(t=this.mapInputs(t),this.checkInputs(t),this.checkInputShapeAndType(t),e=this.mapOutputs(e),this.checkOutputs(e));try{this.keepIntermediateTensors=G().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(f){this.keepIntermediateTensors=!1,console.warn(f.message)}let l=new $p(this.weightMap,n,i,this.functionExecutorMap,this.parseNodeNameCache);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap));let u=yield this.executeWithControlFlow(t,l,e,o),c=e.map(f=>Mt(f,u,l)),p=c.map(f=>f.id),d=Object.keys(t).map(f=>t[f].id),m=new Set([...p,...d,...this.weightIds]);return Object.values(u).forEach(f=>{f.forEach(g=>{g&&!g.isDisposed&&!m.has(g.id)&&g.dispose()})}),this.parent==null&&l.dispose(m),c})}executeFunctionAsync(t,e,o){return j(this,null,function*(){let n=t.reduce((i,s,a)=>(i[this.inputs[a].name]=s,i),{});return this._executeAsync(n,this.outputNodes,!0,e,o)})}executeWithControlFlow(t,e,o,n){return j(this,null,function*(){let i=Object.keys(t),s=i.map(N=>this.graph.nodes[_r(N)[0]]),a=o.map(N=>_r(N)[0]),l=new Set(a),u=a.map(N=>this.graph.nodes[N]);u.length===0&&(u=this._outputs);let{usedNodes:c,missingInputs:p,dynamicNode:d,syncInputs:m}=E1(t,u,this.weightMap,this._initNodes),f=[...s,...this.graph.weights,...this._initNodes||[]].map(N=>({node:N,contexts:e.currentContext})),g=Object.assign({},this.weightMap);Object.keys(t).forEach(N=>{let[F,B]=_r(N),z=[];z[B]=t[N],g[F]=z});let x={},y=this.getFrozenTensorIds(g),b={};for(;f.length>0;){let N=this.processStack(s,f,e,g,b,y,l,x,c);yield Promise.all(N)}d==null&&!n&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");let I=u.filter(N=>!zi(N)&&!Mt(N.name,g,e)).map(N=>N.name);if(I.length>0){let N="";throw d!=null&&(N=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${m}]`),new Error(`Cannot compute the outputs [${I}] from the provided inputs [${i}]. Consider providing the following inputs: [${p}]. ${N}`)}return g})}processStack(t,e,o,n,i,s,a,l,u){let c=[];for(;e.length>0;){let p=e.pop();o.currentContext=p.contexts;let d="";if(p.node.op==="Enter"&&w("isConstant",p.node,n,o)&&([d]=Wo(p.node.name,o)),n[p.node.name]==null){let m=T1(p.node,n,o,this._resourceManager);d||([d]=Wo(p.node.name,o));let f=o.currentContext;S.isPromise(m)?c.push(m.then(g=>(n[d]=g,this.keepIntermediateTensors&&(this.clonedTensorsMap[d]=this.cloneTensorList(g)),o.currentContext=f,this.checkTensorForDisposal(d,p.node,n,o,s,a,l),this.processChildNodes(p.node,e,o,n,i,u),g))):(n[d]=m,this.keepIntermediateTensors&&(this.clonedTensorsMap[d]=this.cloneTensorList(m)),this.checkTensorForDisposal(d,p.node,n,o,s,a,l),this.processChildNodes(p.node,e,o,n,i,u))}else this.processChildNodes(p.node,e,o,n,i,u)}return c}processChildNodes(t,e,o,n,i,s){t.children.forEach(a=>{let[l]=Wo(a.name,o);i[l]||!s.has(a.name)||(a.op==="Merge"?a.inputNames.some(u=>!!Mt(u,n,o))&&(i[l]=!0,e.push({contexts:o.currentContext,node:a})):a.inputNames.every(u=>!!Mt(u,n,o))&&(i[l]=!0,e.push({contexts:o.currentContext,node:a})))})}dispose(){Object.keys(this.weightMap).forEach(t=>this.weightMap[t].forEach(e=>e.dispose()))}checkInputShapeAndType(t){Object.keys(t).forEach(e=>{let o=t[e],[n]=_r(e),i=this.graph.nodes[n];if(i.attrParams.shape&&i.attrParams.shape.value){let s=i.attrParams.shape.value,a=s.length===o.shape.length&&o.shape.every((l,u)=>s[u]===-1||s[u]===l);S.assert(a,()=>`The shape of dict['${i.name}'] provided in model.execute(dict) must be [${s}], but was [${o.shape}]`)}i.attrParams.dtype&&i.attrParams.dtype.value&&S.assert(o.dtype===i.attrParams.dtype.value,()=>`The dtype of dict['${i.name}'] provided in model.execute(dict) must be ${i.attrParams.dtype.value}, but was ${o.dtype}`)})}mapInputs(t){var e,o;let n={};for(let i in t){let s=(o=(e=this._signature)===null||e===void 0?void 0:e.inputs)===null||o===void 0?void 0:o[i];s!=null?n[s.name]=t[i]:n[i]=t[i]}return n}checkInputs(t){let e=Object.keys(t).filter(o=>{let[n]=_r(o);return this.graph.nodes[n]==null});if(e.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${e}] that are not part of graph`)}mapOutputs(t){return t.map(e=>{var o,n;let i=(n=(o=this._signature)===null||o===void 0?void 0:o.outputs)===null||n===void 0?void 0:n[e];return i!=null?i.name:e},{})}checkOutputs(t){t.forEach(e=>{let[o]=_r(e);if(!this.graph.nodes[o])throw new Error(`The output '${e}' is not found in the graph`)})}};var th=class{constructor(t={},e={}){this.hashTableNameToHandle=t,this.hashTableMap=e}addHashTable(t,e){this.hashTableNameToHandle[t]=e.handle,this.hashTableMap[e.id]=e}getHashTableHandleByName(t){return this.hashTableNameToHandle[t]}getHashTableById(t){return this.hashTableMap[t]}dispose(){for(let t in this.hashTableMap)this.hashTableMap[t].clearAndClose(),delete this.hashTableMap[t];for(let t in this.hashTableNameToHandle)this.hashTableNameToHandle[t].dispose(),delete this.hashTableNameToHandle[t]}};var iH="?tfjs-format=file",sH="model.json",rh=class{get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}constructor(t,e={},o=Ep){this.modelUrl=t,this.loadOptions=e,this.version="n/a",this.io=o,e==null&&(this.loadOptions={}),this.resourceManager=new th}findIOHandler(){let t=this.modelUrl;if(t.load!=null)this.handler=t;else if(this.loadOptions.requestInit!=null)this.handler=this.io.browserHTTPRequest(t,this.loadOptions);else{let e=this.io.getLoadHandlers(t,this.loadOptions);if(e.length===0)e.push(this.io.browserHTTPRequest(t,this.loadOptions));else if(e.length>1)throw new Error(`Found more than one (${e.length}) load handlers for URL '${[t]}'`);this.handler=e[0]}}load(){if(this.findIOHandler(),this.handler.load==null)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let t=this.handler.load();return S.isPromise(t)?t.then(e=>e.getWeightStream==null?this.loadSync(e):this.loadStreaming(e)):this.loadSync(t)}loadSync(t){let e=this.io.decodeWeights(t.weightData,t.weightSpecs);return this.loadWithWeightMap(t,e)}loadStreaming(t){return j(this,null,function*(){if(t.getWeightStream==null)throw new Error("Model artifacts missing streamWeights function");let e=yield Em(t.getWeightStream(),t.weightSpecs);return this.loadWithWeightMap(t,e)})}loadWithWeightMap(t,e){this.artifacts=t;let o=this.artifacts.modelTopology,n=this.artifacts.signature;if(this.artifacts.userDefinedMetadata!=null){let i=this.artifacts.userDefinedMetadata;i.signature!=null&&(n=i.signature),i.structuredOutputKeys!=null&&(this.structuredOutputKeys=i.structuredOutputKeys)}if(this.signature=n,this.version=`${o.versions.producer}.${o.versions.minConsumer}`,this.executor=new Pp(Rp.Instance.transformGraph(o,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(e),this.executor.resourceManager=this.resourceManager,t.modelInitializer!=null&&t.modelInitializer.node!=null){let i=Rp.Instance.transformGraph(t.modelInitializer);this.initializer=new Pp(i),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializerSignature=t.initializerSignature}return!0}save(t,e){return j(this,null,function*(){if(typeof t=="string"){let o=this.io.getSaveHandlers(t);if(o.length===0)throw new Error(`Cannot find any save handlers for URL '${t}'`);if(o.length>1)throw new Error(`Found more than one (${o.length}) save handlers for URL '${t}'`);t=o[0]}if(t.save==null)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return t.save(this.artifacts)})}addStructuredOutputNames(t){if(this.structuredOutputKeys){let e=t instanceof at?[t]:t,o={};return e.forEach((n,i)=>o[this.structuredOutputKeys[i]]=n),o}return t}predict(t,e){let o=this.execute(t,this.outputNodes);return this.addStructuredOutputNames(o)}predictAsync(t,e){return j(this,null,function*(){let o=yield this.executeAsync(t,this.outputNodes);return this.addStructuredOutputNames(o)})}normalizeInputs(t){var e;if(!(t instanceof at)&&!Array.isArray(t)){let i=(e=this.signature)===null||e===void 0?void 0:e.inputs;if(i!=null)for(let s in i){let a=i[s];a.resourceId!=null&&(t[s]=this.resourceIdToCapturedInput[a.resourceId])}return t}t=Array.isArray(t)?t:[t];let o=Object.keys(this.resourceIdToCapturedInput).length;if(t.length+o!==this.inputNodes.length)throw new Error(`Input tensor count mismatch, the graph model has ${this.inputNodes.length-o} non-resource placeholders, while there are ${t.length} input tensors provided.`);let n=0;return this.inputNodes.reduce((i,s)=>{var a,l,u;let c=(u=(l=(a=this.signature)===null||a===void 0?void 0:a.inputs)===null||l===void 0?void 0:l[s])===null||u===void 0?void 0:u.resourceId;return c!=null?i[s]=this.resourceIdToCapturedInput[c]:i[s]=t[n++],i},{})}normalizeOutputs(t){return t=t||this.outputNodes,Array.isArray(t)?t:[t]}executeInitializerGraph(){return this.initializer==null?[]:this.initializerSignature==null?this.initializer.execute({},[]):this.initializer.execute({},Object.keys(this.initializerSignature.outputs))}executeInitializerGraphAsync(){return j(this,null,function*(){return this.initializer==null?[]:this.initializerSignature==null?this.initializer.executeAsync({},[]):this.initializer.executeAsync({},Object.keys(this.initializerSignature.outputs))})}setResourceIdToCapturedInput(t){if(this.resourceIdToCapturedInput={},this.initializerSignature){let e=this.initializerSignature.outputs,o=Object.keys(e);for(let n=0;n<o.length;n++){let i=o[n],s=e[i];this.resourceIdToCapturedInput[s.resourceId]=t[n]}}}execute(t,e){this.resourceIdToCapturedInput==null&&this.setResourceIdToCapturedInput(this.executeInitializerGraph()),t=this.normalizeInputs(t),e=this.normalizeOutputs(e);let o=this.executor.execute(t,e);return o.length>1?o:o[0]}executeAsync(t,e){return j(this,null,function*(){this.resourceIdToCapturedInput==null&&this.setResourceIdToCapturedInput(yield this.executeInitializerGraphAsync()),t=this.normalizeInputs(t),e=this.normalizeOutputs(e);let o=yield this.executor.executeAsync(t,e);return o.length>1?o:o[0]})}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(t){return Object.keys(t).reduce((e,o)=>(e[o]=[t[o]],e),{})}dispose(){this.executor.dispose(),this.initializer&&(this.initializer.dispose(),this.resourceIdToCapturedInput&&Xe(this.resourceIdToCapturedInput)),this.resourceManager.dispose()}};function Ui(o){return j(this,arguments,function*(r,t={},e=Ep){if(r==null)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");t==null&&(t={}),t.fromTFHub&&typeof r=="string"&&(r=aH(r));let n=new rh(r,t,e);return yield n.load(),n})}function aH(r){return r.endsWith("/")||(r=r+"/"),`${r}${sH}${iH}`}var fo=G();fo.registerFlag("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE",()=>15);fo.registerFlag("WEBGPU_CPU_FORWARD",()=>!0);fo.registerFlag("WEBGPU_MATMUL_PROGRAM_TYPE",()=>-1);fo.registerFlag("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE",()=>!0);fo.registerFlag("WEBGPU_USE_LOW_POWER_GPU",()=>!1);fo.registerFlag("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e3);fo.registerFlag("WEBGPU_USE_PROFILE_TOOL",()=>!1);fo.registerFlag("WEBGPU_IMPORT_EXTERNAL_TEXTURE",()=>!0);fo.registerFlag("WEBGPU_USE_NAIVE_CONV2D_DEBUG",()=>!1);fo.registerFlag("WEBGPU_THRESHOLD_TO_INCREASE_WORKGROUPS_FOR_MATMUL",()=>-1);fo.registerFlag("WEBGPU_CONV_SEPARATE_IM2COL_SHADER",()=>!1);fo.registerFlag("WEBGPU_PRINT_SHADER",()=>"");fo.registerFlag("WEBGPU_ENGINE_COMPILE_ONLY",()=>!1);var oh=class{constructor(t){t&&(this.vendor=t.vendor,this.architecture=t.architecture,this.intelGPUGeneration=this.getIntelGPUGeneration())}getIntelGPUGeneration(){if(this.isIntel()){if(this.architecture.startsWith("gen"))return Number(this.architecture.match(/\d+/));if(this.architecture.startsWith("xe"))return 12}return 0}isIntel(){return this.vendor==="intel"}};var nh=class{constructor(t){this.device=t,this.numUsedBuffers=0,this.numFreeBuffers=0,this.freeBuffers=new Map,this.usedBuffers=new Map,this.numBytesUsed=0,this.numBytesAllocated=0}acquireBuffer(t,e,o=!1,n=!0){let i,s=SI(t,e);return n?(this.freeBuffers.has(s)||this.freeBuffers.set(s,[]),this.freeBuffers.get(s).length>0?(i=this.freeBuffers.get(s).pop(),this.numFreeBuffers--):(i=this.device.createBuffer({size:t,usage:e,mappedAtCreation:o}),this.numBytesAllocated+=t)):(i=this.device.createBuffer({size:t,usage:e,mappedAtCreation:o}),this.numBytesAllocated+=t),this.usedBuffers.has(s)||this.usedBuffers.set(s,[]),this.usedBuffers.get(s).push(i),this.numUsedBuffers++,this.numBytesUsed+=t,i}releaseBuffer(t,e=!0){if(this.freeBuffers.size===0)return;let o=t.size,n=t.usage,i=SI(o,n),s=this.usedBuffers.get(i),a=s.indexOf(t);if(a<0)throw new Error("Cannot find the buffer in buffer manager");s[a]=s[s.length-1],s.pop(),this.numUsedBuffers--,this.numBytesUsed-=o,e?(this.freeBuffers.get(i).push(t),this.numFreeBuffers++):(t.destroy(),this.numBytesAllocated-=o)}getNumUsedBuffers(){return this.numUsedBuffers}getNumFreeBuffers(){return this.numFreeBuffers}dispose(){this.freeBuffers.forEach((t,e)=>{t.forEach(o=>{o.destroy()})}),this.usedBuffers.forEach((t,e)=>{t.forEach(o=>{o.destroy()})}),this.freeBuffers=new Map,this.usedBuffers=new Map,this.numUsedBuffers=0,this.numFreeBuffers=0,this.numBytesUsed=0,this.numBytesAllocated=0}};function SI(r,t){return`${r}_${t}`}var ih=class{constructor(t){this.device=t,this.numUsedTextures=0,this.numFreeTextures=0,this.freeTextures=new Map,this.usedTextures=new Map,this.numBytesUsed=0,this.numBytesAllocated=0}acquireTexture(t,e,o,n){let i=CI(o),s=t*e*i,a=wI(t,e,o,n);if(this.freeTextures.has(a)||this.freeTextures.set(a,[]),this.usedTextures.has(a)||this.usedTextures.set(a,[]),this.numBytesUsed+=s,this.numUsedTextures++,this.freeTextures.get(a).length>0){this.numFreeTextures--;let u=this.freeTextures.get(a).shift();return this.usedTextures.get(a).push(u),u}this.numBytesAllocated+=s;let l=this.device.createTexture({size:[t,e],format:o,usage:n});return this.usedTextures.get(a).push(l),l}releaseTexture(t){if(this.freeTextures.size===0)return;let e=t.width,o=t.height,n=t.format,i=t.usage,s=wI(e,o,n,i);this.freeTextures.has(s)||this.freeTextures.set(s,[]),this.freeTextures.get(s).push(t),this.numFreeTextures++,this.numUsedTextures--;let a=this.usedTextures.get(s),l=a.indexOf(t);if(l<0)throw new Error("Cannot release a texture that was never provided by this texture manager");a.splice(l,1);let u=CI(n),c=e*o*u;this.numBytesUsed-=c}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){this.freeTextures.forEach((t,e)=>{t.forEach(o=>{o.destroy()})}),this.usedTextures.forEach((t,e)=>{t.forEach(o=>{o.destroy()})}),this.freeTextures=new Map,this.usedTextures=new Map,this.numUsedTextures=0,this.numFreeTextures=0,this.numBytesUsed=0,this.numBytesAllocated=0}};function wI(r,t,e,o){return`${r}_${t}_${e}_${o}`}function CI(r){if(r==="rgba8unorm")return 16;throw new Error(`${r} is not supported!`)}function _I(r,t){if(Math.max(...r)>5)throw new Error("Cannot symbolically compute strides for rank > 6 tensor.");let e=r.length,o="xyzwuv",n=r.map(s=>`${t}.${o[s]}`),i=new Array(e-1);i[e-2]=n[e-1];for(let s=e-3;s>=0;--s)i[s]=`(${i[s+1]} * ${n[s+1]})`;return i}var Zr=(r,t,e)=>e==="int32"?`atomicAdd(${r}, bitcast<i32>(${t}));`:`
          {
            var oldValue = 0;
            loop {
              let newValueF32 = bitcast<f32>(oldValue) + (${t});
              let newValue = bitcast<i32>(newValueF32);
              let res = atomicCompareExchangeWeak(${r}, oldValue, newValue);
              if res.exchanged {
                break;
              }
              oldValue = res.old_value;
            }
          }`;var Hi=function(r){return r[r.FROM_PIXELS=0]="FROM_PIXELS",r[r.DRAW=1]="DRAW",r}(Hi||{}),EI=(r,t,e,o,n)=>{let i={dtype:o.dtype,shape:o.shape},s=uH(e,i,t),a=r.createShaderModule({code:s,label:t.constructor.name}),l=G().get("WEBGPU_PRINT_SHADER");if(l!==""){l=l.toLowerCase();let u=l.split(",");(l==="all"||u.some(c=>t.shaderKey.toLowerCase().includes(c)))&&(console.group(t.shaderKey),console.debug(s),console.groupEnd())}return n?r.createComputePipelineAsync({compute:{module:a,entryPoint:"_start"},label:t.constructor.name,layout:"auto"}):r.createComputePipeline({compute:{module:a,entryPoint:"_start"},label:t.constructor.name,layout:"auto"})},ze=(r,t="f32")=>{switch(r){case 1:return`${t}`;case 2:return`vec2<${t}>`;case 3:return`vec3<${t}>`;case 4:return`vec4<${t}>`;default:throw new Error(`${r}-component ${t} is not supported.`)}};function ft(r){if(r<=1)return"i32";if(r===2)return"vec2<i32>";if(r===3)return"vec3<i32>";if(r===4)return"vec4<i32>";if(r===5)return"vec5";if(r===6)return"vec6";throw Error(`GPU for rank ${r} is not yet supported`)}function To(r){if(r===0)return"x";if(r===1)return"y";if(r===2)return"z";if(r===3)return"w";if(r===4)return"u";if(r===5)return"v";throw Error(`Index ${r} is not yet supported`)}function Q(...r){let t;switch(r.length){case 0:t=`
        fn main()
      `;break;case 1:t=`
        fn main(${r[0]} : i32)
      `;break;default:throw Error("Unreachable")}return t}function kI(r,t){let e;return e=`
     ${lH(t)}
      fn _start(@builtin(local_invocation_id) LocalId : vec3<u32>,
                @builtin(global_invocation_id) GlobalId : vec3<u32>,
                @builtin(local_invocation_index) LocalIndex: u32,
                @builtin(workgroup_id) WorkgroupId : vec3<u32>,
                @builtin(num_workgroups) NumWorkgroups : vec3<u32>) {
        localId = LocalId;
        localIndex = LocalIndex;
        globalId = GlobalId;
        numWorkgroups = NumWorkgroups;
        workgroupId = WorkgroupId;
        ${r?"main(getGlobalIndex());":"main();"};
      }
    `,e}function lH(r){return`
  @compute @workgroup_size(${r.workgroupSize[0]}, ${r.workgroupSize[1]}, ${r.workgroupSize[2]})
`}function uH(r,t,e){let o=[],n=e.workgroupSize[0]*e.workgroupSize[1]*e.workgroupSize[2];if(e.outputComponent=e.outputComponent?e.outputComponent:1,o.push(`

      var<private> localId: vec3<u32>;
      var<private> localIndex: u32;
      var<private> globalId: vec3<u32>;
      var<private> numWorkgroups: vec3<u32>;
      var<private> workgroupId: vec3<u32>;

      // Only used when the y/z dimension of workgroup size is 1.
      fn getGlobalIndex() -> i32 {
        ${RI(e)?"  return i32(globalId.x);":`  return i32((workgroupId.z * numWorkgroups.x * numWorkgroups.y +
                workgroupId.y * numWorkgroups.x + workgroupId.x) * ${n}u +
                localIndex);
        `}
      }
    `),e.pixelsOpType!=null){let f=e.pixelsOpType===Hi.FROM_PIXELS?`@group(0) @binding(0) var<storage, read_write> result: array<${Gi(t.dtype,e.outputComponent)}>;`:`@group(0) @binding(1) var<storage, read> inBuf : array<${Gi(r[0].dtype,e.outputComponent)}>;`,g=t.shape.length===3?"vec2<i32>":"i32";o.push(`
        struct Uniform {
          outShapeStrides : ${g},
          size            : i32,
          numChannels     : i32,
          alpha           : f32,
        };

        ${f}
        @group(0) @binding(2) var<uniform> uniforms: Uniform;
      `);let x=TI(e);return[II,o.join(`
`),Ap(t.shape),e.getUserCode(),kI(x,e)].join(`
`)}let i,s,a="struct Uniforms { NAN : f32, INFINITY : f32, ";e.variableNames.forEach((f,g)=>{let x=ft(r[g].shape.length);a+=`${f.charAt(0).toLowerCase()+f.slice(1)}Shape : ${x}, `,i=r[g].shape.length-1,s=ft(i),a+=`${f.charAt(0).toLowerCase()+f.slice(1)}ShapeStrides: ${s}, `});let l=ft(t.shape.length);a+=`outShape : ${l}, `,i=t.shape.length-1,s=ft(i),a+=`
         outShapeStrides: ${s}, `,e.size&&(a+="size : i32, "),e.uniforms&&(a+=e.uniforms),a+="};",a=xH(a),o.push(a),e.atomic?o.push(`
      @group(0) @binding(0) var<storage, read_write> result: array<atomic<i32>>;
    `):o.push(`
      @group(0) @binding(0) var<storage, read_write> result: array<${Gi(t.dtype,e.outputComponent)}>;
    `),e.variableNames.forEach((f,g)=>{o.push(`
      @group(0) @binding(${1+g}) var<storage, read> ${f}: array<${e.variableComponents?Gi(r[g].dtype,e.variableComponents[g]):Gi(r[g].dtype,e.outputComponent)}>;
        `)}),a!==""&&o.push(`
      @group(0) @binding(${1+e.variableNames.length}) var<uniform> uniforms: Uniforms;
      `);let u=fH(t.shape,e.dispatchLayout),c=[II,o.join(`
`)+cH,Ap(t.shape),u,hH(t.shape.length)];e.atomic||c.push(gH(t.shape,t.dtype,e.outputComponent)),e.variableNames.forEach((f,g)=>{c.push(`${Ap(r[g].shape,f)}`)});let p=r.map((f,g)=>mH(f,t.shape,e.variableComponents?e.variableComponents[g]:e.outputComponent,e.dispatchLayout.x.length===t.shape.length)).join(`
`);c.push(p),c.push(e.getUserCode());let d=TI(e);return c.push(kI(d,e)),c.join(`
`)}function NI(r,t,e){let o=r.shaderKey;if(r.pixelsOpType!=null)return o;let n=[],i=[];t.forEach(c=>{n.push(c.shape),i.push(c.dtype)}),n.push(e.shape),i.push(e.dtype);let s=t.map(c=>$.getBroadcastDims(c.shape,e.shape)),a=t.map(c=>S.arraysEqual(c.shape,e.shape)).join("_"),l=s.map(c=>c.join("_")).join(";"),u=RI(r)?"flatDispatch":"";return o+="_"+(r.workgroupSize?r.workgroupSize.join(","):"")+n.map(c=>c.length).join(",")+i.join(",")+r.variableNames.join(",")+l+a+u,o}var II=`
  struct vec5 {x: i32, y: i32, z: i32, w: i32, u: i32};
  struct vec6 {x: i32, y: i32, z: i32, w: i32, u: i32, v: i32};

  // Checks whether coordinates lie within the bounds of the shape.
  fn coordsInBounds2D(coord : vec2<i32>, shape : vec2<i32>) -> bool {
    return all(coord >= vec2<i32>(0)) && all(coord < shape);
  }
  fn coordsInBounds3D(coord : vec3<i32>, shape : vec3<i32>) -> bool {
    return all(coord >= vec3<i32>(0)) && all(coord < shape);
  }
  fn coordsInBounds4D(coord : vec4<i32>, shape : vec4<i32>) -> bool {
    return all(coord >= vec4<i32>(0)) && all(coord < shape);
  }

  fn getIndexFromCoords1D(coord : i32, shape : i32) -> i32 {
    return coord;
  }
  fn getIndexFromCoords2D(coords : vec2<i32>, shape : vec2<i32>) -> i32 {
    return dot(coords, vec2<i32>(shape.y, 1));
  }
  fn getIndexFromCoords3D(coords : vec3<i32>, shape : vec3<i32>) -> i32 {
    return dot(coords, vec3<i32>(shape.y * shape.z, shape.z, 1));
  }
  fn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {
    return dot(coords, vec4<i32>(
        shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));
  }
  fn getIndexFromCoords5D(coords : vec5, shape : vec5) -> i32 {
    let shapeStrides: vec5 = vec5(shape.y * shape.z * shape.w * shape.u, shape.z * shape.w * shape.u, shape.w * shape.u, shape.u, 1);
    return coords.x*shapeStrides.x + coords.y*shapeStrides.y + coords.z*shapeStrides.z + coords.w*shapeStrides.w + coords.u*shapeStrides.u;
  }
  fn getIndexFromCoords6D(coords : vec6, shape : vec6) -> i32 {
    let shapeStrides: vec6 = vec6(shape.y * shape.z * shape.w * shape.u * shape.v, shape.z * shape.w * shape.u * shape.v, shape.w * shape.u * shape.v, shape.u * shape.v, shape.v, 1);
    return coords.x*shapeStrides.x + coords.y*shapeStrides.y + coords.z*shapeStrides.z + coords.w*shapeStrides.w + coords.u*shapeStrides.u + coords.v*shapeStrides.v;
  }

  // NaN defination in IEEE 754-1985 is :
  //   - sign = either 0 or 1.
  //   - biased exponent = all 1 bits.
  //   - fraction = anything except all 0 bits (since all 0 bits represents infinity).
  // https://en.wikipedia.org/wiki/IEEE_754-1985#Representation_of_non-numbers
  fn isnan(val: f32) -> bool {
    let floatToUint: u32 = bitcast<u32>(val);
    return (floatToUint & 0x7fffffffu) > 0x7f800000u;
  }
  fn isnanVec4(val : vec4<f32>) -> vec4<bool> {
    let floatToUint: vec4<u32> = bitcast<vec4<u32>>(val);
    return (floatToUint & vec4<u32>(0x7fffffffu)) > vec4<u32>(0x7f800000u);
  }
`,cH=`
  fn isinf(val: f32) -> bool {
    return abs(val) == uniforms.INFINITY;
  }
`;function Ap(r,t=""){let e=r.length,o=t!==""?`get${t.charAt(0).toUpperCase()+t.slice(1)}CoordsFromIndex`:"getCoordsFromIndex",n=t!==""?`${t.charAt(0).toLowerCase()+t.slice(1)}ShapeStrides`:"outShapeStrides";if(e<=1)return`fn ${o}(index : i32) -> i32 { return index; }`;let i=S.computeStrides(r),s=ft(e),a=[];for(let u=0;u<e;u++)a.push(`d${u}`);if(i.length===1)return`    fn ${o}(index : i32) -> vec2<i32> {
      let d0 = index / uniforms.${n}; let d1 = index - d0 * uniforms.${n};
      return vec2<i32>(d0, d1);
    }`;let l;return l="var index2 = index;"+i.map((u,c)=>{let p=`let ${a[c]} = index2 / uniforms.${n}.${To(c)}`,d=c===i.length-1?`let ${a[c+1]} = index2 - ${a[c]} * uniforms.${n}.${To(c)}`:`index2 = index2 - ${a[c]} * uniforms.${n}.${To(c)}`;return`${p}; ${d};`}).join(""),`
    fn ${o}(index : i32) -> ${s} {
      ${l}
      return ${s}(${a.join(",")});
    }
  `}function pH(r,t){let e=r.name,o=r.shape.length,n=ft(o),i="get"+e.charAt(0).toUpperCase()+e.slice(1),s=["d0","d1","d2","d3","d4","d5"].slice(0,o),a=s.map(c=>`${c} : i32`).join(", ");if(o<1)return`
      fn ${i}() -> ${ze(t)} {
        return ${ze(t)}(${e}[0]);
      }
    `;let l=`uniforms.${e.charAt(0).toLowerCase()+e.slice(1)}Shape`,u=`${o}D`;return o===0&&(u="1D"),`
    fn ${i}(${a}) -> ${ze(t)} {
      return ${ze(t)}(${e}[getIndexFromCoords${u}(${n}(${s.join(",")}),
        ${l})${t===1?"":` / ${t}`}]);
    }
   `}function dH(r,t,e,o){let n=r.name,i=n.charAt(0).toUpperCase()+n.slice(1),s="get"+i+"ByOutput",a=r.shape.length,l=t.length,u=ft(l);if(S.arraysEqual(r.shape,t)&&o)return`
    fn ${s}Index(globalIndex : i32) -> ${ze(e)} {
      return ${ze(e)}(${n}[globalIndex]);
    }

    fn ${s}Coords(coords : ${u}) -> ${ze(e)} {
      return ${ze(e)}(${n}[${l>1?"getOutputIndexFromCoords(coords)":"coords"}${e===1?"":` / ${e}`}]);
    }
    `;let c=$.getBroadcastDims(r.shape,t),p=l-a,d="";if(a===0)return`
    fn ${s}Index(globalIndex : i32) -> ${ze(e)}{
      return get${i}();
    }

    fn ${s}Coords(coords : ${u}) -> ${ze(e)}{
      return get${i}();
    }
  `;l<2&&c.length>=1?d="coords = 0;":d=c.map(x=>`coords.${To(x+p)} = 0;`).join(`
`);let m="";if(l<2&&a>0)m="coords";else if(l>1){let x=ft(a),y=r.shape.map((b,I)=>`coords.${To(I+p)}`).join(", ");m=`${x}(${y})`}else m="coords";let f=`uniforms.${n.charAt(0).toLowerCase()+n.slice(1)}Shape`,g=`${a}D`;return`
  fn ${s}Index(globalIndex : i32) -> ${ze(e)} {
    var coords = getCoordsFromIndex(globalIndex);
    ${d}
    return ${ze(e)}(${n}[getIndexFromCoords${g}(${m}, ${f})${e===1?"":` / ${e}`}]);
  }

  fn ${s}Coords(coordsIn : ${u}) -> ${ze(e)} {
    var coords = coordsIn;
    ${d}
    return ${ze(e)}(${n}[getIndexFromCoords${g}(${m}, ${f})${e===1?"":` / ${e}`}]);
  }
`}function mH(r,t,e,o){let n=pH(r,e);return r.shape.length<=t.length&&(n+=dH(r,t,e,o)),n}function fH(r,t){let{x:e,y:o=[],z:n=[]}=t,i=r.length,s=e.length+o.length+n.length;if(s!==i)return"";if(e.length===i)return`fn getOutputCoords() -> ${ft(i)}{
    let globalIndex = getGlobalIndex();
    return getCoordsFromIndex(globalIndex);
  }
  `;let a="",l=[e,o,n];for(let d=0;d<l.length;d++){let m=l[d];if(m.length!==0)if(m.length===1)a+=`let d${m[0]} = i32(globalId[${d}]);`;else{let f=_I(m,"uniforms.outShape");a+=`var index${d} = i32(globalId[${d}]);`;for(let g=0;g<f.length;g++)a+=`let d${m[g]} = index${d} / ${f[g]};`,g===f.length-1?a+=`let d${m[g+1]} = index${d} - d${m[g]} * ${f[g]};`:a+=`index${d} = index${d} - d${m[g]} * ${f[g]};`}}let u=[];for(let d=0;d<s;d++)u.push(`d${d}`);let c=ft(s),p=`fn getOutputCoords() -> ${c} {
  ${a}
`;return u.length===0?p+=`return ${c}(0); }`:p+=`return ${c}(${u.join(",")}); }`,p}function hH(r){let t="";switch(r){case 0:case 1:t+=`
        fn getOutputIndexFromCoords(coords : i32) -> i32 {
          return coords;
        }
        `;break;case 2:t+=`
        fn getOutputIndexFromCoords(coords : vec2<i32>) -> i32 {
          return dot(coords, vec2<i32>(uniforms.outShapeStrides, 1));
        }
        `;break;case 3:t+=`
        fn getOutputIndexFromCoords(coords : vec3<i32>) -> i32 {
          return dot(coords, vec3<i32>(uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, 1));
        }
        `;break;case 4:t+=`
        fn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {
          return dot(coords, vec4<i32>(
            uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, uniforms.outShapeStrides.z, 1));
        }
        `;break;case 5:t+=`
        fn getOutputIndexFromCoords(coords : vec5) -> i32 {
          return coords.x * uniforms.outShapeStrides.x +
              coords.y * uniforms.outShapeStrides.y +
              coords.z * uniforms.outShapeStrides.z +
              coords.w * uniforms.outShapeStrides.w +
              coords.u;
        }
        `;break;case 6:t+=`
        fn getOutputIndexFromCoords(coords : vec6) -> i32 {
          return coords.x * uniforms.outShapeStrides.x +
              coords.y * uniforms.outShapeStrides.y +
              coords.z * uniforms.outShapeStrides.z +
              coords.w * uniforms.outShapeStrides.w +
              coords.u * uniforms.outShapeStrides.u +
              coords.v;
        }
        `;break;default:S.assert(!1,()=>`Unsupported ${r}D shape`);break}return t}function RI(r){return r.dispatch[1]===1&&r.dispatch[2]===1}function Gi(r,t=1){if(r==="float32")return ze(t,"f32");if(r==="int32"||r==="bool")return ze(t,"i32");throw new Error(`type ${r} is not supported.`)}function gH(r,t,e){let o=r.length,n=Gi(t,e),i=`fn setOutputAtIndex(flatIndex : i32, value : ${ze(e)}) {
      result[flatIndex] = ${n}(value);
    }

    fn setOutputAtIndexI32(flatIndex : i32, value : ${ze(e,"i32")}) {
      result[flatIndex] = ${n}(value);
    }
    `;if(o>=2){let s=["d0","d1","d2","d3","d4","d5"].slice(0,o),a=ft(o);i+=`
      fn setOutputAtCoords(${s.map(l=>`${l} : i32`).join(", ")}, value : ${ze(e)}) {
        let flatIndex = getOutputIndexFromCoords(${a}(${s.join(", ")}));
        setOutputAtIndex(flatIndex${e===1?"":` / ${e}`}, value);
      }
      fn setOutputAtCoordsI32(${s.map(l=>`${l} : i32`).join(", ")}, value : ${ze(e,"i32")}) {
        let flatIndex = getOutputIndexFromCoords(${a}(${s.join(", ")}));
        setOutputAtIndexI32(flatIndex${e===1?"":` / ${e}`}, value);
      }
    `}return i}function xH(r){let t=/(\w+)\s*:\s*vec(5|6)/g;r=r.replace(t,o=>"@align(16) "+o);let e=/vec(5|6)\s*,\s*(\w+)/g;return r=r.replace(e,(o,n,i)=>`vec${n}, @align(16) ${i}`),r}function TI(r){return!(r.dispatchLayout.hasOwnProperty("y")&&r.dispatchLayout.y.length!==0||r.dispatchLayout.hasOwnProperty("z")&&r.dispatchLayout.z.length!==0)}var Ki={};dt(Ki,{GPUBytesPerElement:()=>sh,MatMulProgramType:()=>Uo,assertNotComplex:()=>Lp,computeDispatch:()=>Z,computeWorkPerThreadForConv2d:()=>Fp,computeWorkgroupInfoForMatMul:()=>N1,computeWorkgroupSizeForConv2d:()=>Dp,flatDispatchLayout:()=>oe,isWebGPUSupported:()=>Op,tilesFitEvenlyIntoShape:()=>vH});var js=r=>{let t=1;for(let e=0;e<r.length;e++)t*=r[e];return t};function vH(r,t){if(r.length!==t.length)throw new Error(`Cannot compute whether rank ${r.length} tiles fit evenly into rank ${t.length} shape - ranks must match.`);return t.every((e,o)=>e%r[o]===0)}function Z(r,t,e=[1,1,1],o=[1,1,1]){let[n,i,s]=[Math.ceil(js(r.x.map(a=>t[a]))/(e[0]*o[0])),r.y?Math.ceil(js(r.y.map(a=>t[a]))/(e[1]*o[1])):1,r.z?Math.ceil(js(r.z.map(a=>t[a]))/(e[2]*o[2])):1];return[n,i,s]}function N1(r,t,e,o=!1){let n=[8,8,1],i=[4,4,1];return o||(r<=8&&(i[1]=1),t<=16&&e<=16&&(n[0]=4)),{workgroupSize:n,elementsPerThread:i}}function Dp(r,t,e=!1){if(e)return[8,8,1];let o=js(r.x.map(i=>t[i])),n=js(r.y.map(i=>t[i]));return o<=4?[4,16,1]:n<=4?[16,4,1]:[16,16,1]}function Fp(r,t,e=!1){if(e)return[4,4,1];let o=js(r.x.map(i=>t[i])),n=js(r.y.map(i=>t[i]));return o<=4?[1,2,1]:n<=4?[2,1,1]:[2,2,1]}function oe(r){return{x:r.map((t,e)=>e)}}function sh(r){if(r==="float32"||r==="int32"||r==="bool"||r==="string")return 4;if(r==="complex64")return 8;throw new Error(`Unknown dtype ${r}`)}function Op(){return!!(typeof globalThis<"u"&&globalThis.navigator&&globalThis.navigator.gpu)}function Lp(r,t){Array.isArray(r)||(r=[r]),r.forEach(e=>{e!=null&&S.assert(e.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the WebGPU backend.`)})}var Uo=function(r){return r[r.MatMulReduceProgram=0]="MatMulReduceProgram",r[r.MatMulSplitKProgram=1]="MatMulSplitKProgram",r[r.MatMulSmallOutputSizeProgram=2]="MatMulSmallOutputSizeProgram",r[r.MatMulPackedProgram=3]="MatMulPackedProgram",r[r.MatMulMax=4]="MatMulMax",r}(Uo||{});var bH=G().getNumber("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD"),SH=(r,t)=>{let e=r.limits.maxComputeWorkgroupsPerDimension,o=t.dispatchLayout,n=t.dispatch;if(n.every(s=>s<=e))return n;S.assert(n[0]>e&&o.y===void 0&&o.z===void 0,()=>"Dispatch size exceeds WebGPU limits in Y or Z dimension.");let i=Math.ceil(Math.sqrt(n[0]));return i>e?(i=Math.ceil(Math.cbrt(n[0])),S.assert(i<=e,()=>"Total dispatch size exceeds WebGPU maximum."),[i,i,i]):[i,i,1]},mc=(()=>{class r extends Cn{nextDataId(){return r.nextDataId++}constructor(e,o){if(super(),this.commandQueueOwnedIds=new WeakSet,this.dispatchCountInPass=0,this.disposed=!1,this.downloadWaitMs=0,this.tensorDataPendingDisposal=[],this.queryResolveBuffer=null,this.querySet=null,this.querySetCount=2,this.stagingPendingDisposal=[],this.uniformPendingDisposal=[],this.uploadWaitMs=0,this.hasReadSyncWarned=!1,this.hasTimestampQueryWarned=!1,!Op())throw new Error("WebGPU is not supported on this device");this.pipelineCache={},this.device=e,this.queue=e.queue,this.commandEncoder=null,this.computePassEncoder=null,this.adapterInfo=new oh(o),this.supportTimestampQuery=this.device.features.has("timestamp-query"),this.thresholdToIncreaseWorkgroups=this.adapterInfo.intelGPUGeneration>=12?16:8,this.bufferManager=new nh(this.device),this.textureManager=new ih(this.device),this.tensorMap=new cs(this,cr()),G().getBool("WEBGPU_USE_PROFILE_TOOL")&&(this.dummyCanvas=document.createElement("canvas"),this.dummyCanvas.width=1,this.dummyCanvas.height=1,this.dummyContext=this.dummyCanvas.getContext("webgpu"),this.dummyContext.configure({device:e,format:"bgra8unorm"}),document.body.appendChild(this.dummyCanvas))}floatPrecision(){return 32}disposeData(e,o=!1){if(!this.tensorMap.has(e))return!0;let n=this.tensorMap.get(e);return o?n.refCount=0:n.refCount--,n.refCount>0?!1:(n.complexTensorInfos!=null&&(this.disposeData(n.complexTensorInfos.real.dataId),this.disposeData(n.complexTensorInfos.imag.dataId)),this.commandQueueOwnedIds.has(e)?(this.tensorDataPendingDisposal.push(e),!0):(this.releaseResource(e),this.tensorMap.delete(e),!0))}memory(){return{numBytesInGPU:this.bufferManager.numBytesUsed,numBytesAllocatedInGPU:this.bufferManager.numBytesAllocated,unreliable:!1}}releaseResource(e){let o=this.tensorMap.get(e);if(!(!o||!o.resource)){if(o.external){o.resource=null;return}o.resource instanceof GPUBuffer?this.bufferManager.releaseBuffer(o.resource):o.resource instanceof GPUTexture&&this.textureManager.releaseTexture(o.resource),o.resource=null}}refCount(e){return this.tensorMap.has(e)?this.tensorMap.get(e).refCount:0}incRef(e){let o=this.tensorMap.get(e);o.refCount++}decRef(e){if(this.tensorMap.has(e)){let o=this.tensorMap.get(e);o.refCount--}}write(e,o,n){if(n==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let i={id:this.nextDataId()};return this.tensorMap.set(i,{dtype:n,shape:o,values:e,refCount:1}),i}move(e,o,n,i,s){if(i==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.tensorMap.set(e,{dtype:i,shape:n,values:o,refCount:s})}submitQueue(){this.queue.submit([this.commandEncoder.finish()]),this.commandEncoder=null,this.dispatchCountInPass=0,this.commandQueueOwnedIds=new WeakSet,this.tensorDataPendingDisposal.forEach(e=>{this.releaseResource(e),this.tensorMap.delete(e)}),this.uniformPendingDisposal.forEach(e=>this.bufferManager.releaseBuffer(e)),this.stagingPendingDisposal.forEach(e=>this.bufferManager.releaseBuffer(e,!1)),this.tensorDataPendingDisposal=[],this.uniformPendingDisposal=[],this.stagingPendingDisposal=[]}ensureCommandEncoderReady(){this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder())}endComputePassEncoder(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}checkCompileCompletionAsync(){return j(this,null,function*(){let e;try{e=yield Promise.all(Object.values(this.pipelineCache))}catch(o){throw new Error(o.message)}Object.keys(this.pipelineCache).map((o,n)=>{this.pipelineCache[o]=e[n]})})}getBufferData(e){return j(this,null,function*(){if(G().getBool("WEBGPU_ENGINE_COMPILE_ONLY"))return console.warn("The data may be invalid since WEBGPU_ENGINE_COMPILE_ONLY is true, this can only be called when WEBGPU_ENGINE_COMPILE_ONLY is false"),null;let o=e.size,n=this.bufferManager.acquireBuffer(o,GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ);this.ensureCommandEncoderReady(),this.endComputePassEncoder(),this.commandEncoder.copyBufferToBuffer(e,0,n,0,o),this.submitQueue(),yield n.mapAsync(GPUMapMode.READ);let i=n.getMappedRange().slice(0);return n.unmap(),n!=null&&this.bufferManager.releaseBuffer(n),G().getBool("WEBGPU_USE_PROFILE_TOOL")&&(S.assert(this.dummyContext!==void 0,()=>"Fail to get context for profiling tool"),this.dummyContext.getCurrentTexture()),i})}convertAndCacheOnCPU(e,o){let n=this.tensorMap.get(e);return n.values=o,n.values}readSync(e){let o=this.tensorMap.get(e),{values:n,complexTensorInfos:i}=o;if(n!=null||o.dtype==="string")return n;if(o.dtype==="complex64"){let x=this.readSync(i.real.dataId),y=this.readSync(i.imag.dataId),b=S.convertBackendValuesAndArrayBuffer($.mergeRealAndImagArrays(x,y).buffer,"float32");return this.convertAndCacheOnCPU(e,b),b}this.hasReadSyncWarned||(this.hasReadSyncWarned=!0,console.warn("The performance of synchronously reading data from GPU to CPU is poor on the webgpu backend, please use asynchronous APIs instead."));let s=["opaque","premultiplied"],a=o.resource,l=a.size;S.assert(l%4===0,()=>"Because there is 4 bytes for one pixel, buffer size must be multiple of 4.");let u=l/4,c=new ArrayBuffer(l),p=256,d=256,m=s.map(x=>new OffscreenCanvas(p,d)),f=new OffscreenCanvas(p,d);this.endComputePassEncoder(),m.map((x,y)=>{let b=x.getContext("webgpu");return b.configure({device:this.device,format:"bgra8unorm",usage:GPUTextureUsage.COPY_DST,alphaMode:s[y]}),b.getCurrentTexture()}).map((x,y)=>{let b=p*4,I=(K,X,te)=>{this.ensureCommandEncoderReady(),this.commandEncoder.copyBufferToTexture({buffer:a,bytesPerRow:b,offset:te},{texture:x},{width:K,height:X}),this.submitQueue();let ue=f.getContext("2d",{willReadFrequently:!0});ue.clearRect(0,0,K,X),ue.drawImage(m[y],0,0);let pe=ue.getImageData(0,0,K,X).data,xe=s[y],be=new Uint8ClampedArray(c,te,K*X*4);for(let Te=0;Te<be.length;Te+=4)if(xe==="premultiplied")be[Te+3]=pe[Te+3];else{let qe=pe[Te];be[Te]=pe[Te+2],be[Te+1]=pe[Te+1],be[Te+2]=qe}},N=Math.floor(u/(p*d)),F=p,B=d,z=0;for(let K=0;K<N;K++)I(F,B,z),z+=p*d*4;let H=u%(p*d);B=Math.floor(H/p),B>0&&(I(F,B,z),z+=B*(p*4)),F=H%p,F>0&&I(F,1,z)});let g=S.convertBackendValuesAndArrayBuffer(c,o.dtype);return this.convertAndCacheOnCPU(e,g),g}read(e){return j(this,null,function*(){if(!this.tensorMap.has(e))throw new Error(`Tensor ${e} was not registered!`);let o=this.tensorMap.get(e),{values:n}=o;if(n!=null)return n;let i;if(o.dtype==="complex64"){let s=yield Promise.all([this.read(o.complexTensorInfos.real.dataId),this.read(o.complexTensorInfos.imag.dataId)]),a=s[0],l=s[1];i=$.mergeRealAndImagArrays(a,l)}else{let s=yield this.getBufferData(o.resource);i=S.convertBackendValuesAndArrayBuffer(s,o.dtype)}return this.convertAndCacheOnCPU(e,i),i})}copyBuffer(e){let o=e.size,n=e.usage,i=this.bufferManager.acquireBuffer(o,n);return this.ensureCommandEncoderReady(),this.endComputePassEncoder(),this.commandEncoder.copyBufferToBuffer(e,0,i,0,o),this.submitQueue(),i}createTensorFromGPUData(e,o,n){let i=e.buffer;if(n==="complex64")throw new Error("Cannot write to a complex64 dtype. ");let s={id:this.nextDataId()};this.tensorMap.set(s,{dtype:n,shape:o,values:null,refCount:1,external:e.zeroCopy});let a=this.tensorMap.get(s),l=sh(a.dtype)*S.sizeFromShape(a.shape);if(e.buffer.size<l)throw new Error(`GPUBuffer size(${e.buffer.size}) is smaller than tensor size(${l})!`);if((e.buffer.usage&(GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC))!==(GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC))throw new Error("GPUBuffer.usage should include GPUBufferUsage.STORAGE | GPUBufferUsage.COPY_SRC!");return e.zeroCopy!==!0&&(i=this.copyBuffer(i)),a.resource=i,cr().makeTensorFromDataId(s,o,n,this)}readToGPU(e){let o=this.tensorMap.get(e),{values:n,dtype:i,shape:s,resource:a}=o;if(i==="complex64")throw new Error("Does not support reading buffer for complex64 dtype.");if(a==null)throw n!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");let l=a,u=l.size,c=l.usage,p=this.bufferManager.acquireBuffer(u,c);this.ensureCommandEncoderReady(),this.endComputePassEncoder(),this.commandEncoder.copyBufferToBuffer(a,0,p,0,u),this.submitQueue();let d=this.makeTensorInfo(s,i),m=cr().makeTensorFromTensorInfo(d),f=this.tensorMap.get(d.dataId);return f.resource=p,{tensorRef:m,buffer:p}}bufferSync(e){let o=this.readSync(e.dataId);if(e.dtype==="string")try{let n=o.map(i=>S.decodeString(i));return Le(e.shape,e.dtype,n)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Le(e.shape,e.dtype,o)}time(e){return j(this,null,function*(){!this.supportTimestampQuery&&!this.hasTimestampQueryWarned&&(console.warn("This device doesn't support timestamp-query extension. Start Chrome browser with flag --enable-dawn-features=allow_unsafe_apis to try it again. Otherwise, zero will be shown for the kernel time when profiling mode is enabled."),this.hasTimestampQueryWarned=!0);let o=this.activeTimers,n=[],i=!1;this.programTimersStack==null?(this.programTimersStack=n,i=!0):this.activeTimers.push(n),this.activeTimers=n,e();let s=S.flatten(this.activeTimers.map(c=>c.query)).filter(c=>c!=null),a=S.flatten(this.activeTimers.map(c=>c.name)).filter(c=>c!=null);this.activeTimers=o,i&&(this.programTimersStack=null);let l={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null},u=yield Promise.all(s);return l.kernelMs=S.sum(u),l.getExtraProfileInfo=()=>u.map((c,p)=>({name:a[p],ms:c})).map(c=>`${c.name}: ${c.ms}`).join(", "),this.uploadWaitMs=0,this.downloadWaitMs=0,l})}makeTensorInfo(e,o,n){return o==="string"&&n!=null&&n.length>0&&S.isString(n[0])&&(n=n.map(s=>S.encodeString(s))),{dataId:this.write(n,e,o),shape:e,dtype:o}}tensorToBinding(e){if(!e)return null;let n=this.tensorMap.get(e.dataId).resource;return n instanceof GPUBuffer?{buffer:n}:n instanceof GPUTexture?n.createView():n}uploadToGPU(e){let o=this.tensorMap.get(e);if(o.resource!=null)return;let n=sh(o.dtype)*S.sizeFromShape(o.shape),i,s=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST;if(o.values){if(i=this.bufferManager.acquireBuffer(n,s,!0),i.mapState==="unmapped"){let a=this.bufferManager.acquireBuffer(n,GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC,!0,!1),l=a.getMappedRange();o.dtype==="int32"||o.dtype==="bool"?new Int32Array(l).set(o.values):new Float32Array(l).set(o.values),a.unmap(),this.ensureCommandEncoderReady(),this.endComputePassEncoder(),this.commandEncoder.copyBufferToBuffer(a,0,i,0,n),this.stagingPendingDisposal.push(a)}else{let a=i.getMappedRange();o.dtype==="int32"||o.dtype==="bool"?new Int32Array(a).set(o.values):new Float32Array(a).set(o.values),i.unmap()}o.values=null}else i=this.bufferManager.acquireBuffer(n,s);o.resource=i}makeUniforms(e){let o=0,n=0,i=[],s=1;e.forEach(u=>{u.data.length===0&&(u.data=[1]);let c;switch(u.data.length){case 1:c=4;break;case 2:c=8;break;case 3:c=16;break;case 4:c=16;break;case 5:c=16;break;case 6:c=16;break;default:S.assert(!1,()=>`Unsupported ${u.data.length}D shape`)}(n===5||n===6)&&(c=16),c>s&&(s=c),o=Math.ceil(o/c)*c,n=u.data.length,i.push(o),o+=u.data.length*4}),o=Math.ceil(o/s)*s;let a=new ArrayBuffer(o);e.forEach((u,c)=>{let p=i[c];u.type==="int32"?new Int32Array(a,p,u.data.length).set(u.data):u.type==="uint32"?new Uint32Array(a,p,u.data.length).set(u.data):new Float32Array(a,p,u.data.length).set(u.data)});let l=this.bufferManager.acquireBuffer(o,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);return this.queue.writeBuffer(l,0,a,0,o),this.uniformPendingDisposal.push(l),{offset:0,size:o,buffer:l}}runWebGPUProgram(e,o,n,i,s){if(s||(s=this.makeTensorInfo(e.outputShape,n)),S.sizeFromShape(s.shape)===0)return this.tensorMap.get(s.dataId).values=S.getTypedArrayFromDType(s.dtype,0),s;this.uploadToGPU(s.dataId),e.dispatch=SH(this.device,e);let a=o.map((u,c)=>{if(u.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");return this.uploadToGPU(u.dataId),{dtype:this.tensorMap.get(u.dataId).dtype,shape:u.shape,name:e.variableNames[c]}});e.shaderKey=NI(e,a,s);let l=G().getBool("WEBGPU_ENGINE_COMPILE_ONLY");return e.shaderKey in this.pipelineCache||(this.pipelineCache[e.shaderKey]=EI(this.device,e,a,s,l)),e.pipeline=this.pipelineCache[e.shaderKey],l||this.recordAndSubmit(e,s,o,i),s}recordAndSubmit(e,o,n,i){if(e.pipeline instanceof Promise)throw new Error("Please call checkCompileCompletionAsync to ensure parallel compilation is done!");let s=[],a=[],l="int32";if(e.pixelsOpType==null){s.push({type:"float32",data:[NaN]},{type:"float32",data:[1/0]}),a=n.concat(o).map(f=>f.shape);let m="int32";a.map(f=>{s.push({type:m,data:f});let g=S.computeStrides(f);s.push({type:m,data:g})})}else{let m=S.computeStrides(o.shape);s.push({type:l,data:m})}if(e.size){let m=S.sizeFromShape(e.outputShape);s.push({type:l,data:[e.outputComponent?m/e.outputComponent:m]})}i&&(s=[...s,...i]);let u=[this.tensorToBinding(o),...n.map(m=>this.tensorToBinding(m)),this.makeUniforms(s)];n.forEach(m=>{this.commandQueueOwnedIds.add(m.dataId)}),this.commandQueueOwnedIds.add(o.dataId);let c=this.device.createBindGroup({layout:e.pipeline.getBindGroupLayout(0),entries:u.map((m,f)=>({binding:f,resource:m}))}),p=this.activeTimers!=null;this.ensureCommandEncoderReady();let d={};p&&this.supportTimestampQuery?(this.endComputePassEncoder(),this.querySet==null&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:this.querySetCount})),d.timestampWrites={querySet:this.querySet,beginningOfPassWriteIndex:0,endOfPassWriteIndex:1},this.computePassEncoder=this.commandEncoder.beginComputePass(d)):this.computePassEncoder||(this.computePassEncoder=this.commandEncoder.beginComputePass(d)),this.computePassEncoder.setPipeline(e.pipeline),this.computePassEncoder.setBindGroup(0,c),this.computePassEncoder.dispatchWorkgroups(e.dispatch[0],e.dispatch[1],e.dispatch[2]),this.dispatchCountInPass++,(p||G().get("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE")<=this.dispatchCountInPass||e.pixelsOpType===Hi.DRAW)&&(this.endComputePassEncoder(),p?this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime()}):this.submitQueue())}getQueryTime(){return j(this,null,function*(){if(!this.supportTimestampQuery)return 0;this.queryResolveBuffer==null&&(this.queryResolveBuffer=this.bufferManager.acquireBuffer(this.querySetCount*8,GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST|GPUBufferUsage.QUERY_RESOLVE)),this.commandEncoder.resolveQuerySet(this.querySet,0,this.querySetCount,this.queryResolveBuffer,0);let e=this.bufferManager.acquireBuffer(this.querySetCount*8,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST);this.commandEncoder.copyBufferToBuffer(this.queryResolveBuffer,0,e,0,this.querySetCount*8),this.submitQueue(),yield e.mapAsync(GPUMapMode.READ);let o=new BigUint64Array(e.getMappedRange()),n=Number(o[1]-o[0])/1e6;return e.unmap(),this.bufferManager.releaseBuffer(e),n})}shouldExecuteOnCPU(e,o=bH){return G().getBool("WEBGPU_CPU_FORWARD")&&e.every(n=>this.tensorMap.get(n.dataId).resource==null&&S.sizeFromShape(n.shape)<o)}numDataIds(){return this.tensorMap.numDataIds()-this.tensorDataPendingDisposal.length}dispose(){this.disposed||(this.querySet!=null&&this.querySet.destroy(),this.bufferManager.dispose(),this.textureManager.dispose(),this.disposed=!0)}}return r.nextDataId=0,r})();Op()&&Im("webgpu",()=>j(null,null,function*(){let r={powerPreference:G().get("WEBGPU_USE_LOW_POWER_GPU")?"low-power":"high-performance"},t=yield navigator.gpu.requestAdapter(r),e={},o=[];t.features.has("timestamp-query")&&o.push("timestamp-query"),t.features.has("bgra8unorm-storage")&&o.push(["bgra8unorm-storage"]),e.requiredFeatures=o;let n=t.limits;e.requiredLimits={maxComputeWorkgroupStorageSize:n.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:n.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:n.maxStorageBufferBindingSize,maxBufferSize:n.maxBufferSize,maxComputeWorkgroupSizeX:n.maxComputeWorkgroupSizeX,maxComputeInvocationsPerWorkgroup:n.maxComputeInvocationsPerWorkgroup};let i=yield t.requestDevice(e),s="info"in t?t.info:"requestAdapterInfo"in t?yield t.requestAdapterInfo():void 0;return new mc(i,s)}),3);var Ce=function(r){return r[r.ADD=0]="ADD",r[r.ATAN2=1]="ATAN2",r[r.COMPLEX_MULTIPLY_IMAG=2]="COMPLEX_MULTIPLY_IMAG",r[r.COMPLEX_MULTIPLY_REAL=3]="COMPLEX_MULTIPLY_REAL",r[r.DIV=4]="DIV",r[r.ELU_DER=5]="ELU_DER",r[r.EQUAL=6]="EQUAL",r[r.FLOOR_DIV=7]="FLOOR_DIV",r[r.GREATER=8]="GREATER",r[r.GREATER_EQUAL=9]="GREATER_EQUAL",r[r.LESS=10]="LESS",r[r.LESS_EQUAL=11]="LESS_EQUAL",r[r.LOGICAL_AND=12]="LOGICAL_AND",r[r.LOGICAL_OR=13]="LOGICAL_OR",r[r.MAX=14]="MAX",r[r.MIN=15]="MIN",r[r.MOD=16]="MOD",r[r.MUL=17]="MUL",r[r.NOT_EQUAL=18]="NOT_EQUAL",r[r.POW=19]="POW",r[r.PRELU=20]="PRELU",r[r.SQUARED_DIFFERENCE=21]="SQUARED_DIFFERENCE",r[r.SUB=22]="SUB",r}(Ce||{}),wH="let resultTemp = a + b;",CH="let resultTemp = atan2(a, b);",_H="let resultTemp = areal * breal - aimag * bimag;",kH="let resultTemp = areal * bimag + aimag * breal;",IH="let resultTemp = a / b;",TH="let resultTemp = select(a * (b + 1.0), a, b >= b - b);",EH=`
  let zero = sign(a) * 0 + 0;
  let one = sign(b) * 0 + 1;
  let resultTemp = select(zero, one, a == b);
`,NH=`
  let remainder =
      select(a % b, round(a % b), (round(a) == a) & (round(b) == b));
  let quotient = (a - remainder) / b;
  let resultTemp =
      round(select(quotient, quotient - 1, sign(remainder) == -sign(b)));
`,RH=`
  let zero = sign(a) * 0 + 0;
  let one = sign(b) * 0 + 1;
  let resultTemp = select(zero, one, a > b);
`,$H=`
  let zero = sign(a) * 0 + 0;
  let one = sign(b) * 0 + 1;
  let resultTemp = select(zero, one, a >= b);
`,PH=`
  let zero = sign(a) * 0 + 0;
  let one = sign(b) * 0 + 1;
  let resultTemp = select(zero, one, a < b);
`,AH=`
  let zero = sign(a) * 0 + 0;
  let one = sign(b) * 0 + 1;
  let resultTemp = select(zero, one, a <= b);
`,DH="return f32(a >= 1.0 && b >= 1.0);",FH=`return (vec4<f32>(a >= vec4<f32>(1.0)) *
  vec4<f32>(b >= vec4<f32>(1.0)));`,OH="return f32(a >= 1.0 || b >= 1.0);",LH=`return min(vec4<f32>(a >= vec4<f32>(1.0)) +
  vec4<f32>(b >= vec4<f32>(1.0)), vec4<f32>(1.0));`,MH="let resultTemp = max(a, b);",BH="let resultTemp = min(a, b);",VH=`
  let isNaN = b == 0.;
  var resultTemp = a % b;
  resultTemp = select((resultTemp + b) % b, resultTemp,
      (a < 0. && b < 0.) || (a >= 0. && b > 0.));
`,WH=`
  let isNaN = !vec4<bool>(b);
  var resultTemp = vec4<f32>(a % b);
  if (!((a[0] < 0. && b[0] < 0.) || (a[0] >= 0. && b[0] > 0.))) {
    resultTemp[0] = (resultTemp[0] + b[0]) % b[0];
  }
  if (!((a[1] < 0. && b[1] < 0.) || (a[1] >= 0. && b[1] > 0.))) {
    resultTemp[1] = (resultTemp[1] + b[1]) % b[1];
  }
  if (!((a[2] < 0. && b[2] < 0.) || (a[2] >= 0. && b[2] > 0.))) {
    resultTemp[2] = (resultTemp[2] + b[2]) % b[2];
  }
  if (!((a[3] < 0. && b[3] < 0.) || (a[3] >= 0. && b[3] > 0.))) {
    resultTemp[3] = (resultTemp[3] + b[3]) % b[3];
  }
`,zH="let resultTemp = a * b;",UH=`
  var resultTemp = f32(a != b);
  let valueForNaN = 1.0;
`,GH=`
  var resultTemp = vec4<f32>(a != b);
  let valueForNaN = 1.0;
`,HH=`
  let isNaN = a < 0.0 && floor(b) < b;
  if (b == 0.0) {
    return 1.0;
  }
  var resultTemp = select(sign(a) * pow(abs(a), b), pow(abs(a), b),
      round(abs(b) % 2.0) != 1.0);
`,KH=`
  let isModRound1Bool = vec4<i32>(round(abs(b) % vec4<f32>(2.0))) == vec4<i32>(1);
  let isModRound1 = vec4<f32>(isModRound1Bool);
  let multiplier = sign(a) * isModRound1 + (vec4<f32>(1.0) - isModRound1);
  var resultTemp = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  let isExpZero = b == vec4<f32>(0.0);
  if (isExpZero.r) {
    resultTemp.r = 1.0;
  }
  if (isExpZero.g) {
    resultTemp.g = 1.0;
  }
  if (isExpZero.b) {
    resultTemp.b = 1.0;
  }
  if (isExpZero.a) {
    resultTemp.a = 1.0;
  }
  let isNaN = (a < vec4<f32>(0.0)) & (floor(b) < b);
`,qH="if (a < 0.0) { return b * a; }  return a;",jH=`
  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));
  return (aLessThanZero * (b * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);
`,XH="let resultTemp = (a - b) * (a - b);",YH="let resultTemp = a - b;";function fc(r,t){let e;do{switch(r){case Ce.ATAN2:e=CH;break;case Ce.MAX:e=MH;break;case Ce.MIN:e=BH;break;case Ce.MOD:e=t?WH:VH;break;case Ce.NOT_EQUAL:e=t?GH:UH;break;case Ce.POW:e=t?KH:HH;break;default:continue}let o,n,i;return t?(o="isnanVec4",n="vec4<f32>",i="vec4<bool>"):(o="isnan",n="f32",i="bool"),`
      let aIsNaN = ${o}(a);
      let aPostLegalization = select(a, ${n}(42), aIsNaN);
      let bIsNaN = ${o}(b);
      let bPostLegalization = select(b, ${n}(42), bIsNaN);
      let isNaN = false;
      let valueForNaN = uniforms.NAN;
      {
        let a = aPostLegalization;
        let b = bPostLegalization;
        ${e}
        return select(
            resultTemp, ${n}(valueForNaN),
            ${i}(isNaN) | aIsNaN | bIsNaN);
      }
    `}while(!1);switch(r){case Ce.ADD:e=wH;break;case Ce.COMPLEX_MULTIPLY_IMAG:e=kH;break;case Ce.COMPLEX_MULTIPLY_REAL:e=_H;break;case Ce.DIV:e=IH;break;case Ce.ELU_DER:e=TH;break;case Ce.EQUAL:e=EH;break;case Ce.FLOOR_DIV:e=NH;break;case Ce.GREATER:e=RH;break;case Ce.GREATER_EQUAL:e=$H;break;case Ce.LESS:e=PH;break;case Ce.LESS_EQUAL:e=AH;break;case Ce.LOGICAL_AND:return t?FH:DH;case Ce.LOGICAL_OR:return t?LH:OH;case Ce.MUL:e=zH;break;case Ce.PRELU:return t?jH:qH;case Ce.SQUARED_DIFFERENCE:e=XH;break;case Ce.SUB:e=YH;break;default:}return`
    ${e}
    return resultTemp;
  `}var ie=function(r){return r[r.ABS=0]="ABS",r[r.ACOS=1]="ACOS",r[r.ACOSH=2]="ACOSH",r[r.ASIN=3]="ASIN",r[r.ASINH=4]="ASINH",r[r.ATAN=5]="ATAN",r[r.ATANH=6]="ATANH",r[r.CEIL=7]="CEIL",r[r.COS=8]="COS",r[r.COSH=9]="COSH",r[r.ELU=10]="ELU",r[r.ERF=11]="ERF",r[r.EXP=12]="EXP",r[r.EXPM1=13]="EXPM1",r[r.FLOOR=14]="FLOOR",r[r.IS_FINITE=15]="IS_FINITE",r[r.IS_INF=16]="IS_INF",r[r.IS_NAN=17]="IS_NAN",r[r.LINEAR=18]="LINEAR",r[r.LOG=19]="LOG",r[r.LOG1P=20]="LOG1P",r[r.LOGICAL_NOT=21]="LOGICAL_NOT",r[r.NEG=22]="NEG",r[r.RELU=23]="RELU",r[r.RELU6=24]="RELU6",r[r.LEAKYRELU=25]="LEAKYRELU",r[r.RECIPROCAL=26]="RECIPROCAL",r[r.ROUND=27]="ROUND",r[r.RSQRT=28]="RSQRT",r[r.SELU=29]="SELU",r[r.SIGMOID=30]="SIGMOID",r[r.SIGN=31]="SIGN",r[r.SIN=32]="SIN",r[r.SINH=33]="SINH",r[r.SOFTPLUS=34]="SOFTPLUS",r[r.SQRT=35]="SQRT",r[r.SQUARE=36]="SQUARE",r[r.STEP=37]="STEP",r[r.TAN=38]="TAN",r[r.TANH=39]="TANH",r[r.TO_INT=40]="TO_INT",r}(ie||{}),QH="return abs(a);",ZH=`
  if (abs(a) > 1.) {
    return uniforms.NAN;
  }
  return acos(a);
`,JH=`
  if (a < 1.) {
    return uniforms.NAN;
  }
  return acosh(a);
`,e9=`
  if (abs(a) > 1.) {
    return uniforms.NAN;
  }
  return asin(a);
`,t9="return asinh(a);",r9=`
  if (isnan(a)) {
    return uniforms.NAN;
  }
  return atan(a);
`,o9=`
  if (abs(a) > 1.) {
    return uniforms.NAN;
  }
  if (a == 1.) {
    return uniforms.INFINITY;
  }
  if (a == -1.) {
    return -uniforms.INFINITY;
  }
  return atanh(a);
`,n9="return ceil(a);",i9="return cos(a);",s9=`
  let e2x = exp(-a);
  return (e2x + 1.0 / e2x) / 2.0;
`,a9="return exp(a) - 1.0;",l9="if (a >= 0.0) { return a; }  return (exp(a) - 1.0);",u9=`
  var resFloat = exp(a) - vec4<f32>(1.0);
  if (a.r >= 0.0) {
    resFloat.r = a.r;
  }
  if (a.g >= 0.0) {
    resFloat.g = a.g;
  }
  if (a.b >= 0.0) {
    resFloat.b = a.b;
  }
  if (a.a >= 0.0) {
    resFloat.a = a.a;
  }
  return resFloat;
`,c9=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  let p = ${$.ERF_P};
  let a1 = ${$.ERF_A1};
  let a2 = ${$.ERF_A2};
  let a3 = ${$.ERF_A3};
  let a4 = ${$.ERF_A4};
  let a5 = ${$.ERF_A5};

  let sign = sign(a);
  let absA = abs(a);
  let t = 1.0 / (1.0 + p * absA);
  return sign * (1.0 - (((((a5 * t + a4) * t) + a3) * t + a2) * t + a1) * t * exp(-absA * absA));
`,p9="return exp(a);",d9="return floor(a);",m9="return f32(!isnan(a) && !isinf(a));",f9="return f32(isinf(a));",h9="return f32(isnan(a));",g9="return a;",x9=`if (a < 0.0) { return uniforms.NAN; }
  return log(a);`,y9=`
  if (isnan(a)) { return a; }
  return log(1.0 + a);
`,v9="return f32(!(a >= 1.0));",b9="return -a;",S9="if (a < 0.0) { return uniforms.alpha * a; } return a;",w9=`
  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));
  return (aLessThanZero * (uniforms.alpha * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);
`,C9="return 1.0 / a;",_9="return select(a, 0.0, a < 0.0);",k9="return clamp(a, 0.0, 6.0);",I9="return clamp(a, vec4<f32>(0.0, 0.0, 0.0, 0.0), vec4<f32>(6.0, 6.0, 6.0, 6.0));",T9=`
  return select(a, vec4<f32>(0.0), a < vec4<f32>(0.0));
`,E9="return round(a);",N9="return inverseSqrt(a);",R9=`
  if (a >= 0.0) {
    return ${$.SELU_SCALE} * a;
  } else {
    return ${$.SELU_SCALEALPHA} * (exp(a) - 1.0);
  }
`,$9="return 1.0 / (1.0 + exp(-1.0 * a));",P9="return sign(a);",A9="return sin(a);",D9=`
  let e2x = exp(a);
  return (e2x - 1.0 / e2x) / 2.0;
`,F9=`
  let epsilon = 1.1920928955078125e-7;
  let threshold = log(epsilon) + 2.0;

  let too_large = a > -threshold;
  let too_small = a < threshold;
  let exp_a = exp(a);

  if (too_large) {
    return a;
  } else if (too_small) {
    return exp_a;
  } else {
    return log(exp_a + 1.0);
  }
`,O9="return sqrt(a);",L9="return a * a;",M9=`
  if (isnan(a)) {
    return a;
  }

  return select(uniforms.stepAlpha, 1.0, a > 0.0);
`,B9="return tan(a);",V9=`
  let e2x = exp(-2.0 * abs(a));
  return sign(a) * (1.0 - e2x) / (1.0 + e2x);
`,W9="return f32(i32((a)));";function Vn(r,t){switch(r){case ie.ABS:return QH;case ie.ACOS:return ZH;case ie.ACOSH:return JH;case ie.ASIN:return e9;case ie.ASINH:return t9;case ie.ATAN:return r9;case ie.ATANH:return o9;case ie.COS:return i9;case ie.COSH:return s9;case ie.CEIL:return n9;case ie.ELU:return t?u9:l9;case ie.ERF:return c9;case ie.EXP:return p9;case ie.EXPM1:return a9;case ie.FLOOR:return d9;case ie.IS_FINITE:return m9;case ie.IS_INF:return f9;case ie.IS_NAN:return h9;case ie.LINEAR:return g9;case ie.LOG:return x9;case ie.LOG1P:return y9;case ie.LOGICAL_NOT:return v9;case ie.NEG:return b9;case ie.LEAKYRELU:return t?w9:S9;case ie.RECIPROCAL:return C9;case ie.RELU:return t?T9:_9;case ie.RELU6:return t?I9:k9;case ie.ROUND:return E9;case ie.RSQRT:return N9;case ie.SELU:return R9;case ie.SIGMOID:return $9;case ie.SIGN:return P9;case ie.SIN:return A9;case ie.SINH:return D9;case ie.SOFTPLUS:return F9;case ie.SQRT:return O9;case ie.SQUARE:return L9;case ie.STEP:return M9;case ie.TAN:return B9;case ie.TANH:return V9;case ie.TO_INT:return W9;default:throw new Error(`BinaryType ${r} is not implemented!`)}}function or(r,t=!1,e=!1,o=3){if(r===null)return"";let n="";if(r==="linear")n=Vn(ie.LINEAR);else if(r==="relu")n=Vn(ie.RELU,e);else if(r==="elu")n=Vn(ie.ELU,e);else if(r==="relu6")n=Vn(ie.RELU6,e);else if(r==="prelu")n=fc(Ce.PRELU,e);else if(r==="sigmoid")n=Vn(ie.SIGMOID,e);else if(r==="leakyrelu")n=Vn(ie.LEAKYRELU,e);else throw new Error(`Activation ${r} has not been implemented for the WebGPU backend.`);let s=ze(e?4:1),a="";return t?a=`
      fn activation(a : ${s}, coords : vec${o}<i32>) -> ${s} {
        let b = getPreluActivationWeightsByOutputCoords(coords);
        ${n}
      }`:a=`
      fn activation(a : ${s}, coords : vec${o}<i32>) -> ${s} {
        ${n}
      }`,a}function Jr(r,t){return`
      ${r?"value = value + getBiasByOutputCoords(coords);":""}
      ${t?"value = activation(value, coords);":""}
      `}function R1(r,t,e=!1,o=!1,n=!1,i=1){S.assert(r&&i===1||!r,()=>`transposeA ${r} is not compatible with component size ${i}`);let s=`
      ${r?"value = getA(batch, col, row);":"value = getA(batch, row, col);"}

    `,a=t?"value = getB(batch, col, row);":"value = getB(batch, row, col);";return`
  fn mm_readA(batch: i32, row: i32, col: i32) -> ${ze(i)} {
    var value = ${ze(i)}(0.0);
    ${e&&n?s:`
    ${r?"if(row < uniforms.dimAOuter && col < uniforms.dimInner)":"if(row < uniforms.aShape[1] && col < uniforms.aShape[2])"}
    {
      ${s}
    }
    `}
    return value;
  }

  fn mm_readB(batch: i32, row: i32, col: i32) -> ${ze(i)} {
    var value = ${ze(i)}(0.0);
    ${a}
    return value;
  }
  `}function Mp(r,t,e,o,n=!1,i=!1,s=!1,a=1){return`
  ${R1(e,o,n,i,s,a)}
  fn mm_write(batch: i32, row: i32, col: i32, valueIn: ${ze(a)}) {
    ${n&&i?"":"if (row < uniforms.dimAOuter && col < uniforms.dimBOuter)"}
    {
      var value = valueIn;
      let coords = vec3<i32>(batch, row, col);
      ${Jr(r,t)}
      setOutputAtCoords(coords[0], coords[1], coords[2], value);
    }
  }
  `}var z9=(r,t)=>r?`
        mm_Asub[inputRow][inputCol] = mm_readA(batchA,
          kStart + inputRow,
          globalRowStart + inputCol * ${t});
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(batchA,
          globalRow + innerRow,
          kStart + inputCol * ${t});
        `,U9=(r,t,e,o)=>{if(r)return`
      for (var k = 0; k < ${o}; k++) {
        let BCached0 = mm_Bsub[k][tileCol];
        let ACached0 = mm_Asub[k][localRow];
        for (var i = 0; i < ${e}; i++) {
          acc[i] = fma(BCached0, vec4<f32>(ACached0[i]), acc[i]);
        }
      }`;{let n="",i="";for(let s=0;s<t;s++)n+=`let BCached${s} = mm_Bsub[k * ${t} + ${s}][tileCol];`,i+=`acc[i] = fma(BCached${s}, vec4<f32>(ACached[${s}]), acc[i]);`;return`
      for (var k = 0; k < ${o/t}; k++) {
        ${n}
        for (var i = 0; i < ${e}; i++) {
          let ACached = mm_Asub[tileRow + i][k];
          ${i}
        }
      }`}};function Xs(r,t,e=!1,o=32,n=!1,i=32,s=!1){let a=t[1]*r[1],l=t[0]*r[0],u=e?a:o,c=e?o:a,p=u/t[0],d=o/t[1],m=r[1],f=r[0];return S.assert((e&&p===4&&r[1]===4||!e&&(p===3||p===4))&&u%t[0]===0&&o%t[1]===0&&r[0]===4,()=>`If transposeA ${e} is true, innerElementSize ${p} and workPerThread[1] ${r[1]} must be 4.
          Otherwise, innerElementSize ${p} must be 3 or 4.
      tileAWidth ${u} must be divisible by workgroupSize[0]${t[0]}. tileInner ${o} must be divisible by workgroupSize[1] ${t[1]}. colPerThread ${r[0]} must be 4.`),`
  var<workgroup> mm_Asub : array<array<vec${p}<f32>, ${u/p}>, ${c}>;
  var<workgroup> mm_Bsub : array<array<vec4<f32>, ${l/r[0]}>, ${o}>;

  ${Q()} {
    let localRow = i32(localId.y);
    let tileRow = localRow * ${m};
    let tileCol = i32(localId.x);

    let globalRow = i32(globalId.y) * ${m};
    let globalCol = i32(globalId.x) * ${f};
    let batch = ${n?"0":"i32(globalId.z)"};
    let batchA = ${n||!s?"batch":"batch % uniforms.aShape[0]"};
    let batchB = ${n||!s?"batch":"batch % uniforms.bShape[0]"};
    let globalRowStart = i32(workgroupId.y) * ${a};

    let numTiles = ${n?`${Math.ceil(i/o)}`:`(uniforms.dimInner - 1) / ${o} + 1`};
    var kStart = ${n?`i32(globalId.z) * ${i}`:"0"};

    var acc: array<vec4<f32>, ${m}>;

    // Loop over shared dimension.
    let tileRowB = localRow * ${d};
    for (var t = 0; t < numTiles; t++) {
        // Load one tile of A into local memory.
        for (var innerRow = 0; innerRow < ${m}; innerRow++) {
            let inputRow = tileRow + innerRow;
            let inputCol = tileCol;
            ${z9(e,p)}
        }

        // Load one tile of B into local memory.
        for (var innerRow = 0; innerRow < ${d}; innerRow++) {
            let inputRow = tileRowB + innerRow;
            let inputCol = tileCol;
            mm_Bsub[inputRow][inputCol] = mm_readB(batchB, kStart + inputRow, globalCol);
        }
        kStart = kStart + ${o};
        workgroupBarrier();

        // Compute acc values for a single thread.
        ${U9(e,p,m,o)}
        workgroupBarrier();
    }

    for (var innerRow = 0; innerRow < ${m}; innerRow++) {
        mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);
    }
  }`}var $I=r=>r?`
        mm_Asub[inputRow][inputCol] = mm_readA(batchA,
          kStart + inputRow,
          globalRowStart + inputCol);
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(batchA,
          globalRowStart + inputRow,
          kStart + inputCol);
        `,G9=r=>r?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];";function Ys(r,t,e=!1,o=32,n=!1,i=32,s=!1,a=!1){let l=r[1]*t[1],u=r[0]*t[0],c=e?l:o,p=e?o:l;S.assert(p%t[1]===0&&c%t[0]===0&&o%t[1]===0,()=>`tileAHight ${p} must be divisible by workgroupSize[1]${t[1]}, tileAWidth ${c} must be divisible by workgroupSize[0]${t[0]}, tileInner ${o} must be divisible by workgroupSize[1]${t[1]}`);let d=p/t[1],m=c/t[0],f=o/t[1],g=r[1],x=r[0],y=s?`
      let localRow = i32(localId.y);
      let localCol = i32(localId.x);
      let globalRowStart = i32(workgroupId.y) * ${l};
      let globalColStart = i32(workgroupId.x) * ${u};

      // Loop over shared dimension.
      for (var t = 0; t < numTiles; t++) {
        // Load one tile of A into local memory.
        for (var inputRow = localRow; inputRow < ${p}; inputRow = inputRow + ${t[1]}) {
          for (var inputCol = localCol; inputCol < ${c}; inputCol = inputCol + ${t[0]}) {
            ${$I(e)}
          }
        }
        // Load one tile of B into local memory.
        for (var inputRow = localRow; inputRow < ${o}; inputRow = inputRow + ${t[1]}) {
              for (var inputCol = localCol; inputCol < ${u}; inputCol = inputCol + ${t[0]}) {
            mm_Bsub[inputRow][inputCol] = mm_readB(batchB,
              kStart + inputRow,
              globalColStart + inputCol);
          }
        }
        kStart = kStart + ${o};
        workgroupBarrier();

        // Compute acc values for a single thread.
        var BCached : array<f32, ${x}>;
        for (var k = 0; k < ${o}; k++) {
          for (var inner = 0; inner < ${x}; inner++) {
            BCached[inner] = mm_Bsub[k][localCol + inner * ${t[0]}];
          }
          for (var innerRow = 0; innerRow < ${g}; innerRow++) {
            let ACached = ${e?`mm_Asub[k][localRow + innerRow * ${t[1]}];`:`mm_Asub[localRow + innerRow * ${t[1]}][k];`}
            for (var innerCol = 0; innerCol < ${x}; innerCol++) {
              acc[innerRow][innerCol] =
                  fma(ACached, BCached[innerCol], acc[innerRow][innerCol]);
            }
          }
        }
        workgroupBarrier();
      }
      for (var innerRow = 0; innerRow < ${g}; innerRow++) {
        let gRow = globalRowStart + localRow + innerRow * ${t[1]};
        for (var innerCol = 0; innerCol < ${x}; innerCol++) {
          let gCol = globalColStart + localCol + innerCol * ${t[0]};
          mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);
        }
      }
      `:`
  let tileRow = i32(localId.y) * ${g};
  let tileCol = i32(localId.x) * ${x};

  let globalRow = i32(globalId.y) * ${g};
  let globalCol = i32(globalId.x) * ${x};
  let globalRowStart = i32(workgroupId.y) * ${l};

  let tileRowA = i32(localId.y) * ${d};
  let tileColA = i32(localId.x) * ${m};
  let tileRowB = i32(localId.y) * ${f};
  // Loop over shared dimension.
  for (var t = 0; t < numTiles; t++) {
    // Load one tile of A into local memory.
    for (var innerRow = 0; innerRow < ${d}; innerRow++) {
      for (var innerCol = 0; innerCol < ${m}; innerCol++) {
        let inputRow = tileRowA + innerRow;
        let inputCol = tileColA + innerCol;
        ${$I(e)}
      }
    }

    // Load one tile of B into local memory.
    for (var innerRow = 0; innerRow < ${f}; innerRow++) {
      for (var innerCol = 0; innerCol < ${x}; innerCol++) {
        let inputRow = tileRowB + innerRow;
        let inputCol = tileCol + innerCol;
        mm_Bsub[inputRow][inputCol] = mm_readB(batchB,
          kStart + inputRow,
          globalCol + innerCol);
      }
    }
    kStart = kStart + ${o};
    workgroupBarrier();

    // Compute acc values for a single thread.
    var BCached : array<f32, ${x}>;
    for (var k = 0; k < ${o}; k++) {
      for (var inner = 0; inner < ${x}; inner++) {
        BCached[inner] = mm_Bsub[k][tileCol + inner];
      }

      for (var innerRow = 0; innerRow < ${g}; innerRow++) {
        ${G9(e)}
        for (var innerCol = 0; innerCol < ${x}; innerCol++) {
          acc[innerRow][innerCol] =
              fma(ACached, BCached[innerCol], acc[innerRow][innerCol]);
        }
      }
    }

    workgroupBarrier();
  }

  for (var innerRow = 0; innerRow < ${g}; innerRow++) {
    for (var innerCol = 0; innerCol < ${x}; innerCol++) {
      mm_write(batch, globalRow + innerRow, globalCol + innerCol,
          acc[innerRow][innerCol]);
    }
  }
  `;return`
    var<workgroup> mm_Asub : array<array<f32, ${c}>, ${p}>;
    var<workgroup> mm_Bsub : array<array<f32, ${u}>, ${o}>;

    ${Q()} {
      let batch = ${n?"0":"i32(globalId.z)"};
      let batchA = ${n||!a?"batch":"batch % uniforms.aShape[0]"};
      let batchB = ${n||!a?"batch":"batch % uniforms.bShape[0]"};
      let numTiles = ${n?`${Math.ceil(i/o)}`:`(uniforms.dimInner - 1) / ${o} + 1`};
      var kStart = ${n?`i32(globalId.z) * ${i}`:"0"};

      var acc : array<array<f32, ${x}>, ${g}>;

      // Without this initialization strange values show up in acc.
      for (var innerRow = 0; innerRow < ${g}; innerRow++) {
        for (var innerCol = 0; innerCol < ${x}; innerCol++) {
          acc[innerRow][innerCol] = 0.0;
        }
      }
      ${y}
    }
  `}var H9=r=>r?`
      mm_readA(batchA, colA, globalRow),
      mm_readA(batchA, colA + 1, globalRow),
      mm_readA(batchA, colA + 2, globalRow),
      mm_readA(batchA, colA + 3, globalRow)
  `:`
      mm_readA(batchA, globalRow, colA),
      mm_readA(batchA, globalRow, colA + 1),
      mm_readA(batchA, globalRow, colA + 2),
      mm_readA(batchA, globalRow, colA + 3)
  `;function K9(r,t=!1){S.assert(r[1]===1&&r[2]===1,()=>`A linear work group size is required. But got ${r}.`);let e=r[0]*4;return`
    var<workgroup> mm_Asub : array<vec4<f32>, ${r[0]}>;

    ${Q()} {
      let tileCol = i32(localId.x);
      let globalCol = i32(globalId.x);
      let globalRow = i32(globalId.y);

      let numTiles = (uniforms.dimInner - 1) / ${e} + 1;
      let batch = i32(globalId.z);
      let batchA = batch % uniforms.aShape[0];
      let batchB = batch % uniforms.bShape[0];
      // Without this initialization strange values show up in acc.
      var acc = 0.0;

      // Loop over shared dimension.
      for (var t = 0; t < numTiles; t++) {
        // Load one tile of A into local memory.
        let colA = t * ${e} + tileCol * 4;
        mm_Asub[tileCol] = vec4<f32>(${H9(t)});
        workgroupBarrier();

        // Compute acc values for a single thread.
        for (var k = 0; k < ${e/4}; k++) {
          let rowB = t * ${e} + k * 4;
          let BCached = vec4<f32>(mm_readB(batchB, rowB, globalCol),
                              mm_readB(batchB, rowB + 1, globalCol),
                              mm_readB(batchB, rowB + 2, globalCol),
                              mm_readB(batchB, rowB + 3, globalCol));

          let ACached = mm_Asub[k];
          acc = acc + dot(ACached, BCached);
        }

        workgroupBarrier();
      }

      mm_write(batch, globalRow, globalCol, acc);
    }
  `}var ah=class{constructor(t,e,o=!1,n=!1,i=null,s=null,a=null,l=!1){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.outputShape=e,this.dispatchLayout={x:[2],y:[1],z:[0]};let u=o?t[1]:t[2];if(this.isVec4=(u%4===0&&!o||e[1]%4===0&&o)&&e[2]%4===0&&!n,this.outputComponent=this.isVec4?4:1,this.isVectorA=e[1]===1&&!o,!this.isVec4&&this.isVectorA)this.elementsPerThread=[1,1,1],this.workgroupSize=[32,1,1];else{let d=N1(e[1],u,e[2],o);this.workgroupSize=d.workgroupSize,this.elementsPerThread=d.elementsPerThread}this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize,this.elementsPerThread);let c=i!=null,p=a!=null;c&&this.variableNames.push("bias"),p&&this.variableNames.push("preluActivationWeights"),this.sequentialAccessByThreads=l,this.transposeA=o,this.transposeB=n,this.addBias=c,this.activation=s,this.hasPreluActivationWeights=p,[this.fitAOuter,this.fitBOuter,this.fitInner]=this.getShapeFit(e[1],e[2],u),this.shaderKey=`matMulPacked_${this.elementsPerThread}_${o}_${n}_${this.activation}_${this.fitAOuter}_${this.fitBOuter}_${this.fitInner}_${this.isVec4}_${this.isVectorA}_${this.sequentialAccessByThreads}`}getShapeFit(t,e,o){let n=this.workgroupSize[1]*this.elementsPerThread[1],i=this.workgroupSize[0]*this.elementsPerThread[0];!this.isVec4&&this.isVectorA?this.tileInner=this.workgroupSize[0]*4:this.tileInner=i;let s=t%n===0,a=e%i===0,l=o%this.tileInner===0;return[s,a,l]}getUserCode(){return`
      ${or(this.activation,this.hasPreluActivationWeights,this.isVec4)}
      ${Mp(this.addBias,this.activation,!1,this.transposeB,this.fitAOuter,this.fitBOuter,this.fitInner,this.isVec4?4:1)}
      ${this.isVec4?Xs(this.elementsPerThread,this.workgroupSize,this.transposeA,this.tileInner,!1,null,!0):this.isVectorA?K9(this.workgroupSize,this.transposeA):Ys(this.elementsPerThread,this.workgroupSize,this.transposeA,this.tileInner,!1,null,this.sequentialAccessByThreads,!0)}
    `}};function q9(r){return`
    var<workgroup> sumValues : array<f32, ${r}>;
    ${Q()} {
      let coords = getOutputCoords();
      let batch = coords[0];
      let batchA = batch % uniforms.aShape[0];
      let batchB = batch % uniforms.bShape[0];
      let row = coords[1];
      let col = coords[2];
      var sum = 0.0;
      let Length = uniforms.dimInner;
      for (var k = i32(localId.x); k < Length; k = k + ${r}) {
        let dataA = mm_readA(batchA, row, k);
        let dataB = mm_readB(batchB, k, col);
        sum = sum + dataA * dataB;
      }
      sumValues[localId.x] = sum;
      workgroupBarrier();

      for(var currentSize = ${r/2}u; currentSize > 1u;
          currentSize = currentSize / 2u) {
        if (localId.x < currentSize)
        {
          sumValues[localId.x] = sumValues[localId.x] + sumValues[localId.x + currentSize];
        }
        workgroupBarrier();
      }

      if (localId.x == 0u) {
        sum = sumValues[0] + sumValues[1];
        mm_write(batch, row, col, sum);
      }
    }
  `}var lh=class{constructor(t,e=!1,o=!1,n=null,i=null,s=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workgroupSize=[256,1,1],this.outputShape=t,this.dispatchLayout={x:[],y:[1,2],z:[0]},this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize);let a=n!=null,l=s!=null;a&&this.variableNames.push("bias"),l&&this.variableNames.push("preluActivationWeights"),this.transposeA=e,this.transposeB=o,this.addBias=a,this.activation=i,this.hasPreluActivationWeights=l,this.shaderKey=`matMulReduce_${this.activation}_${e}_${o}`}getUserCode(){return`
      ${or(this.activation,this.hasPreluActivationWeights)}
      ${Mp(this.addBias,this.activation,this.transposeA,this.transposeB)}
      ${q9(this.workgroupSize[0])}
    `}};function j9(r){let t=r[1],e=r[0],o=t>e?t:e;return`
  var<workgroup> mm_Asub : array<array<f32, ${o}>, ${t}>;
  var<workgroup> mm_Bsub : array<array<f32, ${e}>, ${o}>;

  // If the output size is small for matrix multiplication, avoid to use vec4
  // and handle some elements per thread to optimally utilize the ALU.
  // Read data from global memory to registers firstly, then store them into
  // shared memory, so it is instruction-Level parallelism for arithmetic
  // operations and others handle IO operations between barrier api, makes ALU
  // and load/store units work simultaneously, could improves the performance.
  ${Q()} {
    let tileRow = i32(localId.y);
    let tileCol = i32(localId.x);
    let globalRow = i32(globalId.y);
    let globalCol = i32(globalId.x);
    let batch = i32(globalId.z);
    let batchA = batch % uniforms.aShape[0];
    let batchB = batch % uniforms.bShape[0];

    // uniforms.dimInner should be greater than 0.
    let numTiles = (uniforms.dimInner - 1) / ${o} + 1;
    var acc = 0.0;

    var globalColA = tileCol;
    var globalRowB = 0;
    var regA = mm_readA(batchA, globalRow, globalColA);
    var regB0 = mm_readB(batchB, globalRowB + 2 * tileRow, globalCol);
    var regB1 = mm_readB(batchB, globalRowB + 2 * tileRow + 1, globalCol);
    globalColA = globalColA + ${o};
    globalRowB = globalRowB + ${o};

    for (var t = 0; t < numTiles; t = t + 1) {
      mm_Asub[tileRow][tileCol] = regA;
      mm_Bsub[2 * tileRow][tileCol] = regB0;
      mm_Bsub[2 * tileRow + 1][tileCol] = regB1;

      workgroupBarrier();

      regA = mm_readA(batchA, globalRow, globalColA);
      regB0 = mm_readB(batchB, globalRowB + 2 * tileRow, globalCol);
      regB1 = mm_readB(batchB, globalRowB + 2 * tileRow + 1, globalCol);
      globalColA = globalColA + ${o};
      globalRowB = globalRowB + ${o};

      for (var k = 0; k < ${o}; k = k + 1) {
        acc = acc + mm_Asub[tileRow][k] * mm_Bsub[k][tileCol];
      }
      workgroupBarrier();
    }

    mm_write(batch, globalRow, globalCol, acc);
  }
  `}var uh=class{constructor(t,e,o,n=!1,i=!1,s=null,a=null,l=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workgroupSize=[16,8,1],this.outputShape=o,this.dispatchLayout={x:[2],y:[1],z:[0]},this.dispatch=[Math.ceil(o[2]/this.workgroupSize[0]),Math.ceil(o[1]/this.workgroupSize[1]),o[0]];let u=s!=null;u&&this.variableNames.push("bias");let c=l!=null;c&&this.variableNames.push("preluActivationWeights"),this.transposeA=n,this.transposeB=i,this.addBias=u,this.activation=a,this.hasPreluActivationWeights=c,this.shaderKey=`matMulSmallOutputSize_${this.activation}_${n}_${i}`}getUserCode(){return`
      ${or(this.activation,this.hasPreluActivationWeights)}
      ${Mp(this.addBias,this.activation,this.transposeA,this.transposeB)}
      ${j9(this.workgroupSize)}
    `}};var ch=class{constructor(t,e,o=!1,n=!1){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workgroupSize=[8,8,1],this.atomic=!0,this.splitedDimInner=128,S.assert(t[0]===1,()=>"MatMulSplitKProgram only supports batch = 1."),this.outputShape=t,this.dispatchLayout={x:[2],y:[1],z:[0,3]};let i=(o&&this.outputShape[1]%4===0||!o&&e%4===0)&&this.outputShape[2]%4===0;this.elementsPerThread=[4,4,this.splitedDimInner],this.outputComponent=i?4:1,i||(this.outputShape[1]<16&&(this.elementsPerThread[1]=1),this.outputShape[2]<16&&(this.elementsPerThread[0]=1)),this.dispatch=Z(this.dispatchLayout,[this.outputShape[0],this.outputShape[1],this.outputShape[2],e],this.workgroupSize,this.elementsPerThread),this.transposeA=o,this.transposeB=n,this.shaderKey=`matMulSplitK_${o}_${n}_${this.elementsPerThread}_${this.outputComponent}`}getUserCode(){let t=this.outputComponent;return`
      ${R1(!1,this.transposeB,!1,!1,!1,t)}
      fn mm_write(batch: i32, row : i32, col : i32, value : ${ze(t)}) {
        if (row < uniforms.dimAOuter && col < uniforms.dimBOuter) {
          let coords = vec3<i32>(batch, row, col);
          let flatIndex = getOutputIndexFromCoords(coords);
          // The problem is that we should initialize output to zero before using.
          // Otherwise, the original value will be added to the result.
          for (var i = 0; i < ${t}; i = i + 1) {
            ${Zr("&result[flatIndex + i]",`${t>1?"value[i]":"value"}`,"float32")}
          }
        }
      }
      ${t===4?Xs(this.elementsPerThread,this.workgroupSize,this.transposeA,32,!0,this.splitedDimInner):Ys(this.elementsPerThread,this.workgroupSize,this.transposeA,32,!0,this.splitedDimInner)}
    `}},ph=class{constructor(t,e=null,o=null,n=null){this.uniforms="",this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=oe(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize),this.addBias=e!=null,this.hasPreluActivationWeights=n!=null,this.activation=o,this.addBias&&this.variableNames.push("bias"),this.hasPreluActivationWeights&&this.variableNames.push("preluActivationWeights"),this.shaderKey=`biasActivation_${o}`}getUserCode(){return`
    ${or(this.activation,this.hasPreluActivationWeights)}
    ${Q("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        var value = getXByOutputIndex(index);
        ${Jr(this.addBias,this.activation)}
        setOutputAtIndex(index, value);
      }
    }
    `}};var dh=class{constructor(t){this.variableNames=[],this.outputShape=[],this.uniforms="value : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=oe(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="fill"}getUserCode(){return`
    ${Q("index")} {
      if (index < uniforms.size) {
        setOutputAtIndex(index, uniforms.value);
      }
    }
  `}};function St(r){let{backend:t,attrs:e}=r,{shape:o,value:n}=e,{dtype:i}=e;if(i=i||S.inferDtype(n),i==="string"){let s=S.getArrayFromDType(i,S.sizeFromShape(o));return s.fill(n),t.makeTensorInfo(o,i,s)}else{let s=new dh(o),a=[{type:"float32",data:[n]}];return t.runWebGPUProgram(s,[],i,a)}}var PI={kernelName:Nl,backendName:"webgpu",kernelFunc:St};function me(r){let{inputs:t,attrs:e}=r,{x:o}=t,{shape:n}=e,i=S.sizeFromShape(o.shape),s=S.inferFromImplicitShape(n,i),a=S.sizeFromShape(s);return S.assert(i===a,()=>`The new shape (${s}) has ${a} elements and the old shape (${o.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`),r.backend.incRef(o.dataId),{dataId:o.dataId,shape:s,dtype:o.dtype}}var AI={kernelName:du,backendName:"webgpu",kernelFunc:me};function Qs({a:r,b:t,transposeA:e,transposeB:o,backend:n,bias:i=null,preluActivationWeights:s=null,leakyreluAlpha:a=0,activation:l=null}){let u=r.shape.length,c=t.shape.length,p=e?r.shape[u-2]:r.shape[u-1],d=o?t.shape[c-1]:t.shape[c-2],m=e?r.shape[u-1]:r.shape[u-2],f=o?t.shape[c-2]:t.shape[c-1],g=r.shape.slice(0,-2),x=t.shape.slice(0,-2),y=S.sizeFromShape(g),b=S.sizeFromShape(x),N=un.assertAndGetBroadcastShape(r.shape.slice(0,-2),t.shape.slice(0,-2)).concat([m,f]);S.assert(p===d,()=>`Error in matMul: inner shapes (${p}) and (${d}) of Tensors with shapes ${r.shape} and ${t.shape} and transposeA=${e} and transposeB=${o} must match.`);let F=e?[y,p,m]:[y,m,p],B=o?[b,f,d]:[b,d,f],z=me({inputs:{x:r},backend:n,attrs:{shape:F}}),H=me({inputs:{x:t},backend:n,attrs:{shape:B}}),K=[z,H],X=Math.max(y,b),te=[z,H],ue=[{type:"int32",data:[m]},{type:"int32",data:[f]},{type:"int32",data:[p]}],pe,xe,be=[X,m,f],Te=G().get("WEBGPU_MATMUL_PROGRAM_TYPE");if(Te<0){let je=G().getNumber("WEBGPU_THRESHOLD_TO_INCREASE_WORKGROUPS_FOR_MATMUL"),st=je>0?je:n.thresholdToIncreaseWorkgroups,qt=X*Math.ceil(m/32)*Math.ceil(f/32);qt<=st||m<=8&&qt<=st*2?X*m*f<=128?Te=Uo.MatMulReduceProgram:X===1&&d>=2e3?Te=Uo.MatMulSplitKProgram:Te=Uo.MatMulSmallOutputSizeProgram:Te=Uo.MatMulPackedProgram}switch(Te){case Uo.MatMulReduceProgram:pe=new lh(be,e,o,i,l,s);break;case Uo.MatMulSplitKProgram:{if(xe=St({backend:n,attrs:{shape:be,value:0,dtype:r.dtype}}),pe=new ch(be,d,e,o),i||l){xe=n.runWebGPUProgram(pe,te,r.dtype,ue,xe);let st=new ph(xe.shape,i,l,s),qt=null,Jt=[xe];i&&Jt.push(i),s&&Jt.push(s),l==="leakyrelu"&&(qt=[{type:"float32",data:[a]}],st.uniforms+=" alpha : f32,");let jo=n.runWebGPUProgram(st,Jt,xe.dtype,qt);K.push(xe);let yn=me({inputs:{x:jo},backend:n,attrs:{shape:N}});K.push(jo);for(let da of K)n.disposeData(da.dataId);return yn}break}case Uo.MatMulSmallOutputSizeProgram:pe=new uh(F,B,be,e,o,i,l,s);break;case Uo.MatMulPackedProgram:let je=n.adapterInfo.isIntel();pe=new ah(F,be,e,o,i,l,s,je);break;default:throw new Error(`Unsupported MatMulProgramType ${Te}.`)}i&&te.push(i),s&&te.push(s),l==="leakyrelu"&&(ue.push({type:"float32",data:[a]}),pe.uniforms+=" alpha : f32,"),xe=n.runWebGPUProgram(pe,te,r.dtype,ue,xe);let qe=me({inputs:{x:xe},backend:n,attrs:{shape:N}});K.push(xe);for(let je of K)n.disposeData(je.dataId);return qe}function X9(r){let{inputs:t,backend:e,attrs:o}=r,{a:n,b:i,bias:s,preluActivationWeights:a}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:p}=o;return Qs({a:n,b:i,transposeA:l,transposeB:u,backend:e,bias:s,preluActivationWeights:a,leakyreluAlpha:p,activation:c})}var DI={kernelName:Ss,backendName:"webgpu",kernelFunc:X9};var Bp=class{constructor(t,e,o){this.variableNames=["AReal","AImag","BReal","BImag"],this.workgroupSize=[128,1,1],this.size=!0,this.outputShape=$.assertAndGetBroadcastShape(e,o),this.dispatchLayout=oe(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey=`binaryOpComplex_${t}`,this.op=t}getUserCode(){return`
      fn binaryOpComplex(
          areal : f32, aimag : f32, breal : f32, bimag : f32) -> f32 {
        ${fc(this.op,!1)}
      }

      ${Q("index")} {
        if(index < uniforms.size) {
          let areal = getARealByOutputIndex(index);
          let aimag = getAImagByOutputIndex(index);
          let breal = getBRealByOutputIndex(index);
          let bimag = getBImagByOutputIndex(index);
          setOutputAtIndex(index, binaryOpComplex(areal, aimag, breal, bimag));
        }
      }
    `}};var Wn=class{constructor(t,e,o){if(this.size=!0,this.variableNames=["A","B"],this.outputShape=$.assertAndGetBroadcastShape(e,o),this.dispatchLayout=oe(this.outputShape),this.op=t,this.useSharedMemoryWithA=e.length<=1&&o.length>1&&e[0]<128,this.useSharedMemoryWithB=o.length<=1&&e.length>1&&o[0]<128,this.useSharedMemoryWithA||this.useSharedMemoryWithB)this.outputComponent=1,this.variableComponents=[1,1],this.lastDimensionSize=this.useSharedMemoryWithB?o[0]:e[0],this.shaderKey=`binary_${t}_${this.lastDimensionSize}`,this.type="shared",this.workgroupSize=[256,1,1];else{let n=e.length>0&&e[e.length-1]%4===0,i=o.length>0&&o[o.length-1]%4===0;n&&i?(this.outputComponent=4,this.variableComponents=[4,4]):n&&(S.isScalarShape(o)||o[o.length-1]===1)||i&&(S.isScalarShape(e)||e[e.length-1]===1)?(this.outputComponent=4,this.variableComponents=n?[4,1]:[1,4]):(this.outputComponent=1,this.variableComponents=[1,1]),this.type="nonshared",this.shaderKey=`binary_${t}_${this.variableComponents}`,this.workgroupSize=[128,1,1]}this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.outputComponent,1,1])}getUserCode(){let t,e=this.outputComponent===4?"vec4<f32>":"f32",o=`
    fn binaryOperation(a : ${e}, b : ${e}) -> ${e} {
      ${fc(this.op,this.outputComponent===4)}
    };
    `;if(this.type==="shared"){let n=this.lastDimensionSize>1?`coords[${this.outputShape.length-1}]`:"0",i=this.useSharedMemoryWithB?`let a = getAByOutputIndex(index);
          let b = sharedBuf[${n}];`:`let a = sharedBuf[${n}];
          let b = getBByOutputIndex(index);`;t=`
        ${o}
        var<workgroup> sharedBuf : array<f32, ${this.lastDimensionSize}>;
        ${Q("index")} {
          // Fill in the shared memory buffer.
          let localIndex = i32(localId.x);
          if(localIndex < ${this.lastDimensionSize}) {
            sharedBuf[localIndex] = f32(${this.useSharedMemoryWithB?"B":"A"}[localIndex]);
          }
          workgroupBarrier();

          if(index < uniforms.size) {
            let coords = getCoordsFromIndex(index);
            ${i}
            setOutputAtIndex(index, binaryOperation(a, b));
          }
        }
        `}else t=`
       ${o}
       ${Q("index")} {
         if (index < uniforms.size) {
           let coords = getCoordsFromIndex(index * ${this.outputComponent});
           let a = ${e}(getAByOutputCoords(coords));
           let b = ${e}(getBByOutputCoords(coords));
           setOutputAtIndex(index, binaryOperation(a, b));
         }
       }
       `;return t}};function $t(r){let{inputs:t}=r,{x:e}=t;return r.backend.incRef(e.dataId),{dataId:e.dataId,shape:e.shape,dtype:e.dtype}}var FI={kernelName:In,backendName:"webgpu",kernelFunc:$t};function ho(r){let{inputs:t,backend:e}=r,{real:o,imag:n}=t,i=e.makeTensorInfo(o.shape,"complex64"),s=e.tensorMap.get(i.dataId),a=$t({inputs:{x:o},backend:e}),l=$t({inputs:{x:n},backend:e});return s.complexTensorInfos={real:a,imag:l},i}var OI={kernelName:hs,backendName:"webgpu",kernelFunc:ho};var eo=class{constructor(t,e,o=""){this.variableNames=["A"],this.size=!0;let n=128;this.workgroupSize=[n,1,1],this.outputShape=t,this.dispatchLayout=oe(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize),this.op=e,o!==""&&(this.uniforms=o),this.shaderKey=`unary_${e}`}getUserCode(){return`
      fn unaryOperation(a : f32) -> f32 {
        ${Vn(this.op,!1)}
      }
      ${Q("index")} {
        if (index < uniforms.size) {
          let a = getAByOutputIndex(index);
          setOutputAtIndex(index, unaryOperation(a));
        }
      }
      `}};function ke({opType:r,cpuKernelImpl:t,dtype:e}){return({inputs:o,backend:n})=>{let{x:i}=o,s=n,a=e||i.dtype;if(s.shouldExecuteOnCPU([i])&&t!=null){let u=s.tensorMap.get(i.dataId),c=t(u.values,a);return s.makeTensorInfo(i.shape,a,c)}let l=new eo(i.shape,r);return s.runWebGPUProgram(l,[i],a)}}function Ze({opType:r,cpuKernelImpl:t,supportsComplex:e=!1,dtype:o}){return({inputs:n,backend:i})=>{let{a:s,b:a}=n,l=i;if(e&&s.dtype==="complex64"){let p=l.tensorMap.get(s.dataId),d=l.tensorMap.get(a.dataId),m,f;if(r!==Ce.MUL)[m,f]=[[p.complexTensorInfos.real,d.complexTensorInfos.real],[p.complexTensorInfos.imag,d.complexTensorInfos.imag]].map(x=>{let[y,b]=x,I={dataId:y.dataId,dtype:y.dtype,shape:s.shape},N={dataId:b.dataId,dtype:b.dtype,shape:a.shape},F=new Wn(r,s.shape,a.shape);return l.runWebGPUProgram(F,[I,N],It(y.dtype,b.dtype))});else{let x=new Bp(Ce.COMPLEX_MULTIPLY_REAL,s.shape,a.shape),y=new Bp(Ce.COMPLEX_MULTIPLY_IMAG,s.shape,a.shape),b=[{dataId:p.complexTensorInfos.real.dataId,dtype:p.complexTensorInfos.real.dtype,shape:s.shape},{dataId:p.complexTensorInfos.imag.dataId,dtype:p.complexTensorInfos.imag.dtype,shape:s.shape},{dataId:d.complexTensorInfos.real.dataId,dtype:d.complexTensorInfos.real.dtype,shape:a.shape},{dataId:d.complexTensorInfos.imag.dataId,dtype:d.complexTensorInfos.imag.dtype,shape:a.shape}];m=l.runWebGPUProgram(x,b,"float32"),f=l.runWebGPUProgram(y,b,"float32")}let g=ho({inputs:{real:m,imag:f},backend:l});return l.disposeData(m.dataId),l.disposeData(f.dataId),g}let u=o||It(s.dtype,a.dtype);if((s.dtype==="string"||a.dtype==="string"||l.shouldExecuteOnCPU([s,a]))&&t!=null){let p=l.tensorMap.get(s.dataId).values,d=l.tensorMap.get(a.dataId).values,m=s.dtype==="string"?$.fromUint8ToStringArray(p):p,f=s.dtype==="string"?$.fromUint8ToStringArray(d):d,[g,x]=t(s.shape,a.shape,m,f,u);return l.makeTensorInfo(x,u,g)}let c=new Wn(r,s.shape,a.shape);return l.runWebGPUProgram(c,[s,a],u)}}var Up={};dt(Up,{addImpl:()=>A1,bincountImpl:()=>BI,bincountReduceImpl:()=>VI,bitwiseAndImpl:()=>D1,castImpl:()=>P1,ceilImpl:()=>F1,concatImpl:()=>WI,equalImpl:()=>O1,expImpl:()=>L1,expm1Impl:()=>M1,floorDivImpl:()=>V1,floorImpl:()=>B1,gatherNdImpl:()=>zI,gatherV2Impl:()=>UI,greaterEqualImpl:()=>z1,greaterImpl:()=>W1,lessEqualImpl:()=>G1,lessImpl:()=>U1,linSpaceImpl:()=>GI,logImpl:()=>H1,maxImpl:()=>HI,maximumImpl:()=>K1,minimumImpl:()=>q1,multiplyImpl:()=>Wp,negImpl:()=>KI,notEqualImpl:()=>j1,prodImpl:()=>jI,raggedGatherImpl:()=>YI,raggedRangeImpl:()=>ZI,raggedTensorToTensorImpl:()=>tT,rangeImpl:()=>rT,rsqrtImpl:()=>Y1,scatterImpl:()=>oT,sigmoidImpl:()=>nT,simpleAbsImpl:()=>LI,sliceImpl:()=>iT,sparseFillEmptyRowsImpl:()=>sT,sparseReshapeImpl:()=>aT,sparseSegmentReductionImpl:()=>lT,sqrtImpl:()=>uT,squaredDifferenceImpl:()=>Q1,staticRegexReplaceImpl:()=>Z1,stridedSliceImpl:()=>cT,stringNGramsImpl:()=>pT,stringSplitImpl:()=>dT,stringToHashBucketFastImpl:()=>mT,subImpl:()=>ev,tileImpl:()=>fT,topKImpl:()=>gT,transposeImpl:()=>qI,uniqueImpl:()=>xT});function mh(r,t){Array.isArray(r)||(r=[r]),r.forEach(e=>{e!=null&&S.assert(e.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the CPU backend.`)})}function LI(r){let t=new Float32Array(r.length);for(let e=0;e<r.length;++e)t[e]=Math.abs(r[e]);return t}function ht(r){return(t,e,o,n,i)=>{let s=$.assertAndGetBroadcastShape(t,e),a=s.length,l=S.computeStrides(s),u=S.sizeFromShape(s),c=S.getTypedArrayFromDType(i,u),p=t.length,d=e.length,m=S.computeStrides(t),f=S.computeStrides(e),g=$.getBroadcastDims(t,s),x=$.getBroadcastDims(e,s);if(g.length+x.length===0)for(let y=0;y<c.length;++y)c[y]=r(o[y%o.length],n[y%n.length]);else for(let y=0;y<c.length;++y){let b=S.indexToLoc(y,a,l),I=b.slice(-p);g.forEach(z=>I[z]=0);let N=S.locToIndex(I,p,m),F=b.slice(-d);x.forEach(z=>F[z]=0);let B=S.locToIndex(F,d,f);c[y]=r(o[N],n[B])}return[c,s]}}function hc(r){let{inputs:t,backend:e}=r,{real:o,imag:n}=t,i=e.data.get(o.dataId).values,s=e.data.get(n.dataId).values,a=e.makeTensorInfo(o.shape,"complex64"),l=e.data.get(a.dataId);return l.complexTensorInfos={real:e.makeTensorInfo(o.shape,"float32",i),imag:e.makeTensorInfo(n.shape,"float32",s)},a}function fh(r,t,e="float32"){if(e==="complex64"){let n=fh(r,t,"float32"),i=fh(r,t,"float32");return hc({inputs:{real:n,imag:i},backend:r})}let o=S.makeZerosTypedArray(S.sizeFromShape(t),e);return r.makeTensorInfo(t,e,o)}function $1(r){let{inputs:t,backend:e}=r,{x:o}=t;return e.incRef(o.dataId),{dataId:o.dataId,shape:o.shape,dtype:o.dtype}}function MI(r){let{inputs:t,backend:e}=r,{input:o}=t,n=e.data.get(o.dataId).complexTensorInfos.real,i=e.data.get(n.dataId).values;return e.makeTensorInfo(n.shape,n.dtype,i)}function P1(r,t,e,o){if(o==="int32"){let n=Int32Array.from(r);return[t,"int32",n]}if(o==="bool"){let n=S.toTypedArray([0],e),[i,s]=ht((a,l)=>a!==l?1:0)(t,[],r,n,"bool");return[s,"bool",i]}throw new Error(`Error in Cast: failed to cast ${e} to ${o}`)}function Vp(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{dtype:i}=o;if(i==="complex64"){if(n.dtype==="complex64")return $1({inputs:{x:n},backend:e});let c=fh(e,n.shape,n.dtype),p=Vp({inputs:{x:n},backend:e,attrs:{dtype:"float32"}}),d=hc({inputs:{real:p,imag:c},backend:e});return e.disposeIntermediateTensorInfo(c),e.disposeIntermediateTensorInfo(p),d}if(n.dtype==="complex64"){let c=MI({inputs:{input:n},backend:e}),p=Vp({inputs:{x:c},backend:e,attrs:{dtype:i}});return e.disposeIntermediateTensorInfo(c),p}if(!S.hasEncodingLoss(n.dtype,i)){let c=$1({inputs:{x:n},backend:e});return{dataId:c.dataId,shape:c.shape,dtype:i}}let s=e.data.get(n.dataId).values,[a,l,u]=P1(s,n.shape,n.dtype,i);return e.makeTensorInfo(a,l,u)}function gt(r,t,e,o){return e==null?({inputs:n,backend:i})=>{let{a:s,b:a}=n,l=i;mh([s,a],r);let u=l.data.get(s.dataId).values,c=l.data.get(a.dataId).values,p=s.dtype==="string"?$.fromUint8ToStringArray(u):u,d=s.dtype==="string"?$.fromUint8ToStringArray(c):c,m=o||s.dtype,[f,g]=t(s.shape,a.shape,p,d,m);return l.makeTensorInfo(g,m,f)}:({inputs:n,backend:i})=>{let{a:s,b:a}=n,l=i;if(s.dtype==="complex64"||a.dtype==="complex64"){let u=Vp({inputs:{x:s},backend:l,attrs:{dtype:"complex64"}}),c=l.data.get(u.dataId),p=c.complexTensorInfos.real,d=c.complexTensorInfos.imag,m=l.data.get(p.dataId).values,f=l.data.get(d.dataId).values,g=Vp({inputs:{x:a},backend:l,attrs:{dtype:"complex64"}}),x=l.data.get(g.dataId),y=x.complexTensorInfos.real,b=x.complexTensorInfos.imag,I=l.data.get(y.dataId).values,N=l.data.get(b.dataId).values,[F,B,z]=e(s.shape,a.shape,m,f,I,N),H=l.makeTensorInfo(z,"float32",F),K=l.makeTensorInfo(z,"float32",B),X=hc({inputs:{real:H,imag:K},backend:l});return l.disposeIntermediateTensorInfo(u),l.disposeIntermediateTensorInfo(g),l.disposeIntermediateTensorInfo(H),l.disposeIntermediateTensorInfo(K),X}else{let u=l.data.get(s.dataId).values,c=l.data.get(a.dataId).values,p=o||s.dtype,[d,m]=t(s.shape,a.shape,u,c,p);return l.makeTensorInfo(m,p,d)}}}function gc(r){return(t,e,o,n,i,s)=>{let a=$.assertAndGetBroadcastShape(t,e),l=S.sizeFromShape(a),u=a.length,c=S.computeStrides(a),p=S.getTypedArrayFromDType("float32",l),d=S.getTypedArrayFromDType("float32",l),m=$.getBroadcastDims(t,a),f=$.getBroadcastDims(e,a),g=$.mergeRealAndImagArrays(o,n),x=$.mergeRealAndImagArrays(i,s),y=t.length,b=S.computeStrides(t),I=e.length,N=S.computeStrides(e);if(m.length+f.length===0)for(let F=0;F<p.length;F++){let B=F%g.length,z=F%x.length,H=r(g[B*2],g[B*2+1],x[z*2],x[z*2+1]);p[F]=H.real,d[F]=H.imag}else for(let F=0;F<p.length;F++){let B=S.indexToLoc(F,u,c),z=B.slice(-y);m.forEach(ue=>z[ue]=0);let H=S.locToIndex(z,y,b),K=B.slice(-I);f.forEach(ue=>K[ue]=0);let X=S.locToIndex(K,I,N),te=r(g[H*2],g[H*2+1],x[X*2],x[X*2+1]);p[F]=te.real,d[F]=te.imag}return[p,d,a]}}var A1=ht((r,t)=>r+t),Y9=gc((r,t,e,o)=>({real:r+e,imag:t+o})),uWe=gt(rn,A1,Y9);function BI(r,t,e,o,n){let i=S.sizeFromShape(o),s=S.makeZerosTypedArray(n,e);for(let a=0;a<r.length;a++){let l=r[a];if(l<0)throw new Error("Input x must be non-negative!");l>=n||(i>0?s[l]+=t[a]:s[l]+=1)}return s}function VI(r,t,e,o=!1){let n=r.shape[0],i=r.shape[1],s=Le([n,e],t.dtype);for(let a=0;a<n;a++)for(let l=0;l<i;l++){let u=r.get(a,l);if(u<0)throw new Error("Input x must be non-negative!");u>=e||(o?s.set(1,a,u):t.size>0?s.set(s.get(a,u)+t.get(a,l),a,u):s.set(s.get(a,u)+1,a,u))}return s}var D1=ht((r,t)=>r&t),gWe=gt(tl,D1);function Kt(r){return(t,e,o)=>{let n=S.getArrayFromDType(e,t.length);for(let i=0;i<t.length;++i)n[i]=r(t[i],o);return n}}function hh(r,t,e){let o=Kt(t);return Or(r,o,e)}function Or(r,t,e){return({inputs:o,attrs:n,backend:i})=>{let{x:s}=o;mh(s,r);let a=i,l=a.data.get(s.dataId).values,u;if(s.dtype==="string"){if(!Array.isArray(l))throw new Error("String tensor's value was not an instance of Array");u=$.fromUint8ToStringArray(l)}else u=l;let c=e||s.dtype,p=t(u,c,n);return a.makeTensorInfo(s.shape,c,p)}}var F1=Kt(r=>Math.ceil(r)),TWe=Or(ii,F1);function WI(r,t,e,o){let n=S.getArrayFromDType(e,S.sizeFromShape(t));if(o&&e!=="string"){let i=0;r.forEach(s=>{let a=S.sizeFromShape(s.shape);n.set(s.vals,i),i+=a})}else{let i=0;r.forEach(s=>{let a=e==="string"?$.fromUint8ToStringArray(s.vals):s.vals,l=0;for(let u=0;u<s.shape[0];++u){let c=u*t[1]+i;for(let p=0;p<s.shape[1];++p)n[c+p]=a[l++]}i+=s.shape[1]})}return n}var O1=ht((r,t)=>r===t?1:0),DWe=gt(si,O1,null,"bool");var L1=Kt(r=>Math.exp(r)),BWe=Or(ai,L1,"float32");var M1=Kt(r=>Math.expm1(r)),GWe=Or(li,M1);var B1=Kt(r=>Math.floor(r)),XWe=Or(ui,B1);var V1=ht((r,t)=>Math.floor(r/t)),e6e=gt(ci,V1,null,"int32");function zI(r,t,e,o,n,i,s,a,l){let u=Le([o,i],e);for(let c=0;c<o;c++){let p=[],d=0;for(let m=0;m<n;m++){let f=r[c*n+m];d+=f*s[m],p.push(f)}if(d<0||d>=l/i)throw new Error(`Invalid indices: ${p} does not index into ${a}`);for(let m=0;m<i;m++)u.values[c*i+m]=t.get(...t.indexToLoc(d*i+m))}return u}function UI(r,t,e){let o=Le(e,r.dtype);for(let n=0;n<o.size;++n){let s=o.indexToLoc(n).slice(),a=s[0],l=s[2],u=t.locToIndex([a,l]);s[2]=t.values[u];let c=r.locToIndex(s);0<=c&&c<r.values.length&&(o.values[n]=r.values[c])}return o}var W1=ht((r,t)=>r>t?1:0),u6e=gt(pi,W1,null,"bool");var z1=ht((r,t)=>r>=t?1:0),f6e=gt(di,z1,null,"bool");var U1=ht((r,t)=>r<t?1:0),v6e=gt(mi,U1,null,"bool");var G1=ht((r,t)=>r<=t?1:0),_6e=gt(fi,G1,null,"bool");function GI(r,t,e){let o=(t-r)/(e-1),n=S.makeZerosTypedArray(e,"float32");n[0]=r;for(let i=1;i<n.length;i++)n[i]=n[i-1]+o;return n}var H1=Kt(r=>Math.log(r)),$6e=Or(hi,H1);function HI(r,t,e,o){let n=S.getTypedArrayFromDType(o,S.sizeFromShape(e));for(let i=0;i<n.length;++i){let s=i*t,a=r[s];for(let l=0;l<t;++l){let u=r[s+l];(Number.isNaN(u)||u>a)&&(a=u)}n[i]=a}return n}var K1=ht((r,t)=>Math.max(r,t)),M6e=gt(gi,K1);var q1=ht((r,t)=>Math.min(r,t)),U6e=gt(xi,q1);var Wp=ht((r,t)=>r*t),Q9=gc((r,t,e,o)=>({real:r*e-t*o,imag:r*o+t*e})),j6e=gt(yi,Wp,Q9);function KI(r,t,e){let o=S.createScalarValue(-1,e);return Wp([],t,o,r,e)}var j1=ht((r,t)=>r!==t?1:0),rze=gt(vi,j1,null,"bool");function qI(r,t,e,o,n){let i=t.length,s=S.sizeFromShape(t),a=S.computeStrides(t),l=S.computeStrides(n),u=S.getTypedArrayFromDType(e,S.sizeFromShape(n));for(let c=0;c<s;++c){let p=S.indexToLoc(c,i,a),d=new Array(p.length);for(let f=0;f<d.length;f++)d[f]=p[o[f]];let m=S.locToIndex(d,i,l);u[m]=r[c]}return u}function jI(r,t,e,o){let[n,i]=$.computeOutAndReduceShapes(r,o),s=It(t,"int32"),a=S.makeZerosTypedArray(S.sizeFromShape(n),s),l=S.sizeFromShape(i);for(let u=0;u<a.length;++u){let c=u*l,p=1;for(let d=0;d<l;++d)p*=e[c+d];a[u]=p}return{outVals:a,outShape:n,outDtype:s}}function Z9(r,t,e){r.forEach((o,n)=>{if(o<0||o>=e){let i=S.indexToLoc(n,t.length,S.computeStrides(t)).join(",");throw new Error(`indices[${i}] = ${o} is not in [0, ${e})`)}})}function J9(r,t){for(let e=0;e<r.length;++e){let o=r[e],n=e===r.length-1?t:r[e+1].length;if(o.length===0)throw new Error("Ragged splits may not be empty");if(o[0]<0)throw new Error("Ragged splits must be non-negative");if(o[o.length-1]>n)throw new Error("Ragged splits must not point past values");for(let i=1;i<o.length;++i)if(o[i-1]>o[i])throw new Error("Ragged splits must be sorted in ascending order")}}function eK(r,t,e,o){let n=[],i=0,s=t.length-1+e.length,a=new Array(s).fill(null).map(()=>[0]);J9(e,o);let l=1;for(let u=0;u<t.length-1;++u){l*=t[u];let c=t[u+1];for(let p=1;p<l+1;++p)a[u].push(p*c)}for(let u=0;u<r.length;++u){let c=r[u],p=r[u]+1;for(let d=0;d<e.length;++d){let m=e[d],f=d+t.length-1;if(f>=0){let g=a[f],x=g[g.length-1]-m[c];for(let y=c;y<p;++y)a[f].push(m[y+1]+x)}c=m[c],p=m[p]}p!==c&&(n.push([c,p]),i+=p-c)}return{outSplits:a,valueSlices:n,numValues:i}}function tK(r){let t=[];for(let e=0;e<r.length;++e){let o=r[e].length,n=S.getArrayFromDType("int32",o);t.push(n),r[e].forEach((i,s)=>n[s]=i)}return t}function XI(r,t){let e=r.slice(0,t);for(;e.length<t;)e.push(1);for(let o=t;o<r.length;o++)e[t-1]*=r[o];return e}function rK(r,t,e,o,n,i){let s=XI(t,2)[1],a=XI(i,2)[1],l=0;for(let u of e)for(let c=u[0];c<u[1];++c){for(let p=0;p<o;++p)n[l*a+p]=r[c*s+p];++l}}function oK(r,t,e,o,n){let i=t.slice();i[0]=n;let s=S.getArrayFromDType(e,S.sizeFromShape(i)),a=r.length,l=a===0?0:a/t[0];return rK(r,t,o,l,s,i),[s,i]}function YI(r,t,e,o,n,i,s,a){if(r.length===0)throw new Error("paramsNestedSplits must be non empty");if(t[0].length===0)throw new Error("Split tensors must not be scalars");let l=t[0][0]-1;if(Z9(i,s,l),o.length===0)throw new Error("params.rank must be nonzero");let u=o[0],{outSplits:c,valueSlices:p,numValues:d}=eK(i,s,r,u),m=tK(c),f=oK(e,o,n,p,d);return[m,f[0],f[1]]}var QI=2147483647;function ZI(r,t,e,o,n,i,s){if(t.length>1)throw new Error("starts must be a scalar or vector");if(n.length>1)throw new Error("limits must be a scalar or vector");if(s.length>1)throw new Error("deltas must be a scalar or vector");let a=t.length===0,l=n.length===0,u=s.length===0,c=[];a||c.push(t[0]),l||c.push(n[0]),u||c.push(s[0]);for(let x=1;x<c.length;++x)if(c[x]!==c[x-1])throw new Error("starts, limits, and deltas must have the same shape");let p=c.length===0?1:c[0],d=S.getArrayFromDType("int32",p+1);d[0]=0;for(let x=0;x<p;++x){let y=a?r[0]:r[x],b=l?o[0]:o[x],I=u?i[0]:i[x];if(I===0)throw new Error("Requires delta != 0");let N;if(I>0&&b<y||I<0&&b>y)N=0;else if(N=Math.ceil(Math.abs((b-y)/I)),N>QI)throw new Error(`Requires ((limit - start) / delta) <= ${QI}`);d[x+1]=d[x]+N}let m=d[p],f=S.getArrayFromDType(e,m),g=0;for(let x=0;x<p;++x){let y=d[x+1]-d[x],b=a?r[0]:r[x],I=u?i[0]:i[x];for(let N=0;N<y;++N)f[g++]=b,b+=I}return[d,f]}var Eo=$.RowPartitionType,X1=class r{constructor(t,e,o,n,i,s,a,l,u,c){this.shape=t,this.shapeShape=e,this.values=o,this.valuesShape=n,this.valuesDType=i,this.defaultValue=s,this.defaultValueShape=a,this.rowPartitionValues=l,this.rowPartitionValuesShapes=u,this.rowPartitionTypes=$.getRowPartitionTypesHelper(c),this.raggedRank=$.getRaggedRank(this.rowPartitionTypes)}getRowPartitionTypeByDimension(t){return this.rowPartitionTypes[0]===Eo.FIRST_DIM_SIZE?this.rowPartitionTypes[t+1]:this.rowPartitionTypes[t]}getRowPartitionTensor(t){return this.rowPartitionTypes[0]===Eo.FIRST_DIM_SIZE?this.rowPartitionValues[t+1]:this.rowPartitionValues[t]}getMaxWidth(t){let e=this.getRowPartitionTensor(t-1);switch(this.getRowPartitionTypeByDimension(t-1)){case Eo.VALUE_ROWIDS:return r.getMaxWidthValueRowID(e);case Eo.ROW_SPLITS:return r.getMaxWidthRowSplit(e);default:throw new Error(`Cannot handle partition type ${Eo[this.getRowPartitionTypeByDimension(t-1)]}`)}}static getMaxWidthRowSplit(t){let e=t.length;if(e===0||e===1)return 0;let o=0;for(let n=0;n<e-1;++n){let i=t[n+1]-t[n];i>o&&(o=i)}return o}static getMaxWidthValueRowID(t){let e=t.length;if(e===0)return 0;let o=0,n=t[0],i=0;for(let s=1;s<e;++s){let a=t[s];a!==n&&(n=a,i=Math.max(s-o,i),o=s)}return Math.max(e-o,i)}tensorShapeFromTensor(t,e,o=!0){if(e.length===0){if(t[0]===-1)return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return eT(t,o)}calculateOutputSize(t){let e=this.valuesShape,o=this.defaultValueShape;$.validateDefaultValueShape(o,e);let n=this.tensorShapeFromTensor(this.shape,this.shapeShape),s=$.combineRaggedTensorToTensorShapes(this.raggedRank,n,e);s[0]<0&&(s[0]=t);for(let a=1;a<=this.raggedRank;++a)s[a]<0&&(s[a]=this.getMaxWidth(a));return s}calculateFirstParentOutputIndex(t,e,o){let n=Math.min(t,o),i=[],s=0;for(let a=0;a<n;++a,s+=e)i.push(s);for(let a=n;a<t;++a)i.push(-1);return S.assert(i.length===t,()=>"Final length of result must be equal to firstDimension."),i}calculateOutputIndexRowSplit(t,e,o,n){let i=t.length,s=[];for(let a=0;a<i-1;++a){let l=t[a+1]-t[a],u=Math.min(n,l),c=e[a];c===-1&&(u=0);for(let p=0;p<u;++p)s.push(c),c+=o;for(let p=0;p<l-u;++p)s.push(-1)}if(i>0&&s.length!==t[i-1])throw new Error("Invalid row split size.");return s}calculateOutputIndexValueRowID(t,e,o,n){let i=t.length,s=[];if(i===0)return[];let a=0,l=t[0];if(l>=e.length)throw new Error(`Got currentValueRowId=${l}, which is not less than ${e.length}`);let u=e[l];s.push(u);for(let c=1;c<i;++c){let p=t[c];if(p===l)u>=0&&(++a,a<n?u+=o:u=-1);else{if(a=0,l=p,p>=e.length)throw new Error(`Got nextValueRowId=${p} which is not less than ${e.length}`);u=e[p]}s.push(u)}if(s.length!==t.length)throw new Error("Invalid row ids.");return s}calculateOutputIndex(t,e,o,n){let i=this.getRowPartitionTensor(t),s=this.getRowPartitionTypeByDimension(t);switch(s){case Eo.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(i,e,o,n);case Eo.ROW_SPLITS:if(i.length-1>e.length)throw new Error(`Row partition size is greater than output size: ${i.length-1} > ${e.length}`);return this.calculateOutputIndexRowSplit(i,e,o,n);default:throw new Error(`Unsupported partition type: ${Eo[s]}`)}}getFirstDimensionSize(){let t=this.rowPartitionValues[0];if(this.rowPartitionTypes.length===0)throw new Error("No row_partition_types given.");let e=this.rowPartitionTypes[0];switch(e){case Eo.FIRST_DIM_SIZE:return t[0];case Eo.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case Eo.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${Eo[e]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");let e=this.getFirstDimensionSize(),o=this.calculateOutputSize(e),n=new Array(this.raggedRank+1);n[n.length-1]=1;for(let l=n.length-2;l>=0;--l)n[l]=n[l+1]*o[l+1];let i=eT(o,!1),s=S.getArrayFromDType(this.valuesDType,S.sizeFromShape(i));if(n[0]*o[0]>0){let l=this.calculateFirstParentOutputIndex(e,n[0],o[0]);for(let u=1;u<=this.raggedRank;++u)l=this.calculateOutputIndex(u-1,l,n[u],o[u]);this.setOutput(this.raggedRank,l,s,i)}return[i,s]}setOutput(t,e,o,n){if(o.length===0)return;let i=this.values,s=o,a=n.slice();a=a.slice(t+1);let l=S.sizeFromShape(a),u=e.length,c=this.defaultValue;if(c.length!==l&&c.length!==1){let f=this.defaultValueShape;Ne(()=>{let g=Y(c,f);c=Di(g,a).dataSync()})}let p=0,d=0,m=0;for(let f=0;f<=u;++f){let g=f<u?e[f]:-1;if(g===m){++m;continue}if(d<m){let x=i.subarray(p*l),y=s.subarray(d*l),b=(m-d)*l;JI(y,x,b)}if(f>=u){let x=o.length;g=Math.floor(x/l)}if(g>m)if(this.defaultValue.length===1)s.subarray(m*l,g*l).fill(this.defaultValue[0]),m=g;else for(;g>m;){let x=s.slice(m*l);JI(x,c,l),++m}g<0?(p=f+1,d=m):(p=f,d=m,m=d+1)}}};function JI(r,t,e){for(let o=0;o<e;o++)r[o]=t[o]}function eT(r,t){let e=[];for(let o of r){if(o<0){if(!t)throw new Error(`Dimension ${o} must be >= 0`);if(o<-1)throw new Error(`Dimension ${o} must be >= -1`);o=-1}e.push(o)}return e}function tT(r,t,e,o,n,i,s,a,l,u){return new X1(r,t,e,o,n,i,s,a,l,u).compute()}function rT(r,t,e,o){let n=r===t,i=r<t&&e<0,s=t<r&&e>1;if(n||i||s)return S.makeZerosTypedArray(0,o);let a=Math.abs(Math.ceil((t-r)/e)),l=S.makeZerosTypedArray(a,o);t<r&&e===1&&(e=-1),l[0]=r;for(let u=1;u<l.length;u++)l[u]=l[u-1]+e;return l}var Y1=Kt(r=>1/Math.sqrt(r)),vze=Or(bi,Y1);function oT(r,t,e,o,n,i,s,a,l,u){let c=[o/n,n],p=r.values,d=t.values;if(o===0)return Le(e,t.dtype);let m=l instanceof uo?l:Le(c,t.dtype);typeof l=="string"||typeof l=="number"?m.values.fill(l):typeof l=="boolean"&&m.values.fill(+l);for(let f=0;f<i;f++){let g=[],x=0;for(let y=0;y<s;y++){let b=p[f*s+y];g.push(b),x+=b*a[y]}if(x<0||x>=o/n)throw new Error(`Invalid indices: ${g} does not index into ${e}`);for(let y=0;y<n;y++)u?m.values[x*n+y]+=d[f*n+y]:m.values[x*n+y]=t.rank===0?d[0]:d[f*n+y]}return m}var nT=Kt(r=>1/(1+Math.exp(-r))),Ize=hh(Si,r=>1/(1+Math.exp(-r)));function iT(r,t,e,o,n){let i=Gt.isSliceContinous(o,t,e),s=S.sizeFromShape(e),a=S.computeStrides(o);if(i){let p=Gt.computeFlatOffset(t,a);return n==="string"?r.slice(p,p+s):r.subarray(p,p+s)}let l=n==="string"?$.fromUint8ToStringArray(r):r,u=Le(o,n,l),c=Le(e,n);for(let p=0;p<c.size;++p){let d=c.indexToLoc(p),m=d.map((f,g)=>f+t[g]);c.set(u.get(...m),...d)}return n==="string"?$.fromStringArrayToUint8(c.values):c.values}function sT(r,t,e,o,n,i,s){let a=t[0],l=i[0],u=new Array(l),c=new Array(a),p=t[1];if(l===0){if(a!==0)throw new Error($.getSparseFillEmptyRowsIndicesDenseShapeMismatch(a));let x=S.getArrayFromDType(e,0),y=S.getArrayFromDType(n,0);return[x,[0,p],y,u,c]}let d=!0,m=0,f=new Array(l).fill(0);for(let x=0;x<a;++x){let y=r[x*p];if(y<0)throw new Error($.getSparseFillEmptyRowsNegativeIndexErrorMessage(x,y));if(y>=l)throw new Error($.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(x,y,l));++f[y],d=d&&y>=m,m=y}let g=!0;for(let x=0;x<l;++x){let y=f[x]===0;u[x]=y,g=g&&!y,f[x]=Math.max(f[x],1),x>0&&(f[x]+=f[x-1])}if(g&&d){let x=r,y=o;for(let b=0;b<a;++b)c[b]=b;return[x,[a,p],y,u,c]}else{let x=f[l-1],y=S.getArrayFromDType(e,x*p),b=S.getArrayFromDType(n,x),I=new Array(l).fill(0);for(let N=0;N<a;++N){let F=r[N*p],B=I[F],z=(F===0?0:f[F-1])+B;I[F]++;for(let H=0;H<p;++H)y[z*p+H]=r[N*p+H];b[z]=o[N],c[N]=z}for(let N=0;N<l;++N)if(I[N]===0){let B=N===0?0:f[N-1];y[B*p+0]=N;for(let z=1;z<p;++z)y[B*p+z]=0;b[B]=s}return[y,[x,p],b,u,c]}}function aT(r,t,e,o,n){let i=S.sizeFromShape(o),s=t[0],a=n.length,l=[],u=1,c=-1;for(let x=0;x<a;++x){let y=n[x];if(y===-1){if(c!==-1)throw new Error($.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(c,x));c=x,l.push(1)}else{if(y<0)throw new Error($.getSparseReshapeNegativeOutputDimErrorMessage(x,y));u*=y,l.push(y)}}if(c!==-1){if(u<=0)throw new Error($.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());let x=Math.trunc(i/u);if(u*x!==i)throw new Error($.getSparseReshapeInputOutputMultipleErrorMessage(o,l));l[c]=x}if(S.sizeFromShape(l)!==i)throw new Error($.getSparseReshapeInputOutputMismatchErrorMessage(o,l));let d=o.length,m=[];if(d>0){m[d-1]=1;for(let x=d-2;x>=0;--x)m[x]=m[x+1]*o[x+1]}let f=[];if(a>0){f[a-1]=1;for(let x=a-2;x>=0;--x)f[x]=f[x+1]*l[x+1]}let g=S.getArrayFromDType(e,s*a);for(let x=0;x<s;++x){let y=0;for(let b=0;b<d;++b)y+=r[x*d+b]*m[b];for(let b=0;b<a;++b)g[x*a+b]=Math.trunc(y/f[b]),y%=f[b]}return[g,[s,a],l]}function lT(r,t,e,o,n,i=!1,s=0){let a=o.length,l=[t[0],r.length/t[0]],u=l[1],p=a>0?n[a-1]+1:0;if(p<0)throw new Error($.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let d=t.slice();d[0]=p;let m=d.reduce((I,N)=>I*N,1),f=S.getArrayFromDType(e,m);if(a===0)return p>0&&f.fill(s),[f,d];if(p<=0)throw new Error($.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let g=0,x=1,y=0,b=n[g];for(;;){let I=0;if(x<a){if(I=n[x],b===I){++x;continue}if(b>=I)throw new Error($.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(b<0||b>=p)throw new Error($.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(b,p));b>y&&f.fill(s,y*u,b*u);for(let N=g;N<x;++N){let F=o[N];if(F<0||F>=l[0])throw new Error($.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(N,o[N],l[0]));for(let B=0;B<u;B++)f[b*u+B]+=r[F*u+B]}if(i)for(let N=0;N<u;N++)f[b*u+N]/=x-g;if(g=x,++x,y=b+1,b=I,x>a)break}return y<p&&f.fill(s,y*u,p*u),[f,d]}var uT=Kt(r=>Math.sqrt(r)),Bze=hh(wi,r=>Math.sqrt(r));var Q1=ht((r,t)=>{let e=r-t;return e*e}),Gze=gt(Ci,Q1);var Z1=Kt((r,t)=>{let{pattern:e,replaceGlobal:o,rewrite:n}=t;return r.replace(new RegExp(e,o?"g":""),n)}),Xze=Or(Du,Z1);function cT(r,t,e,o){let n=Le(r,t.dtype);for(let i=0;i<n.size;i++){let s=n.indexToLoc(i),a=new Array(s.length);for(let l=0;l<a.length;l++)a[l]=s[l]*e[l]+o[l];n.set(t.get(...a),...s)}return n}var J1=class{constructor(t,e,o,n,i,s){this.separator=S.encodeString(t),this.nGramWidths=e,this.leftPad=S.encodeString(o),this.rightPad=S.encodeString(n),this.padWidth=i,this.preserveShort=s}getPadWidth(t){return Math.min(this.padWidth<0?t-1:this.padWidth,t-1)}getNumNGrams(t,e){let o=this.getPadWidth(e);return Math.max(0,t+2*o-e+1)}createNGrams(t,e,o,n,i,s){for(let a=0;a<i;++a){let l=this.getPadWidth(s),u=Math.max(0,l-a),c=Math.max(0,l-(i-(a+1))),p=s-(u+c),d=e+(u>0?0:a-l),m=0;m+=u*this.leftPad.length;for(let b=0;b<p;++b)m+=t[d+b].length;m+=c*this.rightPad.length;let f=u+c+p-1;m+=f*this.separator.length,o[n+a]=new Uint8Array(m);let g=o[n+a],x=0,y=b=>b.forEach(I=>g[x++]=I);for(let b=0;b<u;++b)y(this.leftPad),y(this.separator);for(let b=0;b<p-1;++b)y(t[d+b]),y(this.separator);if(p>0){y(t[d+p-1]);for(let b=0;b<c;++b)y(this.separator),y(this.rightPad)}else{for(let b=0;b<c-1;++b)y(this.rightPad),y(this.separator);y(this.rightPad)}}}compute(t,e){let o=t.length,n=e.length;if(n>0){let l=e[0];if(l!==0)throw new Error(`First split value must be 0, got ${l}`);for(let u=1;u<n;++u){let c=e[u]>=l;if(c=c&&e[u]<=o,!c)throw new Error(`Invalid split value ${e[u]}, must be in [${l}, ${o}]`);l=e[u]}if(l!==o)throw new Error(`Last split value must be data size. Expected ${o}, got ${l}`)}let i=n-1,s=S.getArrayFromDType("int32",n);if(o===0||n===0){let l=new Array(o);for(let u=0;u<=i;++u)s[u]=0;return[l,s]}s[0]=0;for(let l=1;l<=i;++l){let u=e[l]-e[l-1],c=0;this.nGramWidths.forEach(p=>{c+=this.getNumNGrams(u,p)}),this.preserveShort&&u>0&&c===0&&(c=1),s[l]=s[l-1]+c}let a=new Array(s[i]);for(let l=0;l<i;++l){let u=e[l],c=s[l];if(this.nGramWidths.forEach(p=>{let d=e[l+1]-e[l],m=this.getNumNGrams(d,p);this.createNGrams(t,u,a,c,m,p),c+=m}),this.preserveShort&&c===s[l]){let p=e[l+1]-e[l];if(p===0)continue;let d=p+2*this.padWidth;this.createNGrams(t,u,a,c,1,d)}}return[a,s]}};function pT(r,t,e,o,n,i,s,a){return new J1(e,o,n,i,s,a).compute(r,t)}function nK(r,t,e,o){if(!r.length)return;if(t.length===0){for(let i=0;i<r.length;++i)o.push(r.subarray(i,i+1));return}if(t.length===1){let i=t[0],s=r.indexOf(i);for(;s!==-1;){let a=r.subarray(0,s);(!e||a.length!==0)&&o.push(a),r=r.subarray(s+1),s=r.indexOf(i)}(!e||r.length!==0)&&o.push(r);return}let n=0;for(let i=0;i<r.length+1;i++)if(i===r.length||t.indexOf(r[i])!==-1){let s=r.subarray(n,i);(!e||s.length!==0)&&o.push(s),n=i+1}}function dT(r,t,e){let o=r.length,n=[],i=0,s=0,a=new Array(o);for(let d=0;d<o;++d){let m=n.length;nK(r[d],t,e,n);let f=n.length-m;a[d]=f,i+=f,s=Math.max(s,f)}let l=S.getArrayFromDType("int32",i*2),u=new Array(i),c=[o,s],p=0;for(let d=0;d<o;++d)for(let m=0;m<a[d];++m)l[p*2]=d,l[p*2+1]=m,u[p]=n[p],++p;return[l,u,c]}function mT(r,t){let e=S.getArrayFromDType("int32",r.length);for(let o=0;o<r.length;++o)e[o]=S.fingerPrint64(r[o]).modulo(t).getLowBitsUnsigned();return e}var ev=ht((r,t)=>r-t),iK=gc((r,t,e,o)=>({real:r-e,imag:t-o})),lUe=gt(_i,ev,iK);function fT(r,t){let e=new Array(r.rank);for(let n=0;n<e.length;n++)e[n]=r.shape[n]*t[n];let o=Le(e,r.dtype);for(let n=0;n<o.values.length;++n){let i=o.indexToLoc(n),s=new Array(r.rank);for(let l=0;l<s.length;l++)s[l]=i[l]%r.shape[l];let a=r.locToIndex(s);o.values[n]=r.values[a]}return o}var zp=(r,t)=>{let e=t.value-r.value;return e===0?r.index-t.index:e};function hT(r,t,e=0,o=r.length-1){for(;o>e;){if(o-e>600){let a=o-e+1,l=t-e+1,u=Math.log(a),c=.5*Math.exp(2*u/3),p=.5*Math.sqrt(u*c*(a-c)/a)*Math.sign(l-a/2),d=Math.max(e,Math.floor(t-l*c/a+p)),m=Math.min(o,Math.floor(t+(a-l)*c/a+p));hT(r,t,d,m)}let n=r[t],i=e,s=o;for(S.swap(r,e,t),zp(r[o],n)>0&&S.swap(r,e,o);i<s;){for(S.swap(r,i,s),i++,s--;zp(r[i],n)<0;)i=i+1;for(;zp(r[s],n)>0;)s=s-1}zp(r[e],n)===0?S.swap(r,e,s):(s=s+1,S.swap(r,s,o)),s<=t&&(e=s+1),t<=s&&(o=s-1)}}function gT(r,t,e,o,n){let i=t[t.length-1],[s,a]=[r.length/i,i],l=S.getTypedArrayFromDType(e,s*o),u=S.getTypedArrayFromDType("int32",s*o);for(let p=0;p<s;p++){let d=p*a,m=r.subarray(d,d+a),f=new Array(m.length);m.forEach((b,I)=>f[I]={value:b,index:I}),o<f.length&&(hT(f,o),f=f.slice(0,o)),n&&f.sort(zp);let g=p*o,x=l.subarray(g,g+o),y=u.subarray(g,g+o);for(let b=0;b<o;b++)x[b]=f[b].value,y[b]=f[b].index}let c=t.slice();return c[c.length-1]=o,[Le(c,e,l),Le(c,"int32",u)]}function xT(r,t,e,o){let n=S.parseAxisParam(t,e)[0],i=[1,e[0],1];for(let f=0;f<n;f++)i[0]*=e[f];i[1]=e[n];for(let f=n+1;f<e.length;f++)i[2]*=e[f];let s=new Map,a=new Int32Array(e[n]),l=new uo(i,o,r),u=[],c=i[0]===1&&i[2]===1;for(let f=0;f<e[n];f++){let g;if(c)g=r[f].toString();else{let y=[];for(let b=0;b<i[0];b++)for(let I=0;I<i[2];I++)y.push(l.get(b,f,I));g=y.join(",")}let x=s.get(g);if(x!=null)a[f]=x;else{let y=s.size;s.set(g,y),a[f]=y,u.push(f)}}let p=i.slice();p[1]=s.size;let d=new uo(p,o);u.forEach((f,g)=>{for(let x=0;x<i[0];x++)for(let y=0;y<i[2];y++)d.set(l.get(x,f,y),x,g,y)});let m=e.slice();return m[n]=p[1],{outputValues:d.values,outputShape:m,indices:a}}var{addImpl:yT,castImpl:vT,ceilImpl:bT,concatImpl:ST,equalImpl:wT,expImpl:CT,expm1Impl:_T,floorImpl:kT,floorDivImpl:IT,gatherNdImpl:TT,gatherV2Impl:ET,greaterEqualImpl:NT,greaterImpl:RT,lessEqualImpl:$T,lessImpl:PT,logImpl:AT,maxImpl:DT,maximumImpl:FT,minimumImpl:OT,multiplyImpl:LT,negImpl:MT,notEqualImpl:BT,prodImpl:VT,rangeImpl:WT,rsqrtImpl:zT,scatterImpl:UT,simpleAbsImpl:GT,sliceImpl:HT,stridedSliceImpl:KT,stringNGramsImpl:qT,subImpl:jT,tileImpl:XT,topKImpl:YT,transposeImpl:QT,uniqueImpl:dGe}=Up;var sK=ke({opType:ie.ABS,cpuKernelImpl:GT}),ZT={kernelName:fs,backendName:"webgpu",kernelFunc:sK};var aK=ke({opType:ie.ACOS}),JT={kernelName:Ma,backendName:"webgpu",kernelFunc:aK};var lK=ke({opType:ie.ACOSH}),eE={kernelName:Ba,backendName:"webgpu",kernelFunc:lK};var uK=Ze({opType:Ce.ADD,cpuKernelImpl:yT,supportsComplex:!0}),tE={kernelName:rn,backendName:"webgpu",kernelFunc:uK};var gh=class{constructor(t){this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t[0],this.variableNames=t.map((e,o)=>`T${o}`),this.dispatchLayout=oe(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.shaderKey="addN"}getUserCode(){let t=[];this.variableNames.forEach(n=>{t.push(`let v${n} = get${n}ByOutputCoords(coords);`)});let e=this.variableNames.map(n=>`v${n}`).join(" + ");return`
      ${Q("index")} {
        for (var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if (flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndex);
            ${t.join(`
        `)}
            setOutputAtIndex(flatIndex, ${e});
          }
        }
      }
    `}};function cK(r){let{inputs:t,backend:e}=r,o=t;if(o.length===1)return $t({inputs:{x:o[0]},backend:e});let n=o.map(a=>a.dtype).reduce((a,l)=>It(a,l)),i=o.map(a=>a.shape),s=new gh(i);return e.runWebGPUProgram(s,o,n)}var rE={kernelName:Va,backendName:"webgpu",kernelFunc:cK};var xh=class{constructor(t,e){this.variableNames=["A"],this.workgroupSize=[16,16,1];let o=new Array(t.length);for(let n=0;n<o.length;n++)o[n]=t[e[n]];this.outputShape=o,this.dispatchLayout={x:[0],y:[1]},this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize,[1,1,1]),this.shaderKey="transposeShared"}getUserCode(){S.assert(this.workgroupSize[0]===this.workgroupSize[1],()=>`Must be a square tile, current tile shape is ${this.workgroupSize[0]} x ${this.workgroupSize[1]}`);let t=this.workgroupSize[0];return`
      var<workgroup> tile : array<array<f32, ${this.workgroupSize[0]+1}>, ${this.workgroupSize[0]}>;
      ${Q()} {
        var x = i32(workgroupId.x) * ${t} + i32(localId.x);
        var y = i32(workgroupId.y) * ${t} + i32(localId.y);
        let width = uniforms.outShape[0];
        let height = uniforms.outShape[1];
        if (x < width && y < height) {
          tile[localId.y][localId.x] = f32(A[y * width + x]);
        }
        workgroupBarrier();

        x = i32(workgroupId.y) * ${t} + i32(localId.x);
        y = i32(workgroupId.x) * ${t} + i32(localId.y);
        if (x < height && y < width) {
          setOutputAtIndex((y * height + x), tile[localId.x]
            [localId.y]);
        }
      }
    `}};var yh=class{constructor(t,e){this.variableNames=["A"],this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0;let o=new Array(t.length);for(let n=0;n<o.length;n++)o[n]=t[e[n]];this.outputShape=o,this.dispatchLayout=oe(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.newDim=e,this.shaderKey=`transpose_${e}`}getUserCode(){let t=ft(this.outputShape.length),e=tv(this.newDim);return`
      ${Q("index")} {
        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if(flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndex);
            setOutputAtIndex(flatIndex, A[getIndexFromCoords${this.outputShape.length}D(
              ${t}(${e}), uniforms.aShape)]);
          }
        }
      }
    `}};function tv(r){let t=r.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);let e=new Array(t);for(let o=0;o<r.length;o++)e[r[o]]=`coords.${To(o)}`;return e.join()}function mr(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{perm:i}=o,s=e,a=n.shape.length,l=new Array(a);for(let c=0;c<l.length;c++)l[c]=n.shape[i[c]];if(e.shouldExecuteOnCPU([n])){let p=s.tensorMap.get(n.dataId).values,d=QT(p,n.shape,n.dtype,i,l);return e.makeTensorInfo(l,n.dtype,d)}if(n.shape.length===2&&S.arraysEqual(i,[1,0])){let c=new xh(n.shape,i);return s.runWebGPUProgram(c,[n],n.dtype)}let u=new yh(n.shape,i);return s.runWebGPUProgram(u,[n],n.dtype)}var oE={kernelName:Ii,backendName:"webgpu",kernelFunc:mr};var vh=class{constructor(t,e,o){this.variableNames=["x"],this.uniforms="reduceSize : i32,",this.size=!0,this.inputShape=[t.batchSize,t.inSize];let[n]=$.computeOutAndReduceShapes(this.inputShape,[1]);this.outputShape=n.length===0?[1]:n,t.inSize>=32768&&o>=512?this.workgroupSize=[512,1,1]:t.inSize>=4096?this.workgroupSize=[256,1,1]:this.workgroupSize=[64,1,1],this.dispatchLayout=oe(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,[1,1,1]),this.reduceType=e,this.shaderKey=`reduce_${e}`}getUserCode(){let t="",e="0.0",o=this.workgroupSize[0];this.reduceType==="min"||this.reduceType==="max"?(t=`
         if (isnan(candidate)) {
          bestValue = uniforms.NAN;
         } else if (!isnan(bestValue) && candidate ${this.reduceType==="min"?"<":">"} bestValue)
           {  bestValue = candidate; }`,e="f32(x[offset])"):this.reduceType==="sum"||this.reduceType==="mean"?t=" bestValue = bestValue + candidate; ":this.reduceType==="prod"?(t=" bestValue = bestValue * candidate; ",e="1.0"):this.reduceType==="all"?(t=" bestValue = f32(bestValue >= 1.0 && candidate >= 1.0); ",e="1.0"):this.reduceType==="any"&&(t=" bestValue = f32(bestValue >= 1.0 || candidate >= 1.0); ",e="0.0");let n=this.reduceType==="mean"?"setOutputAtIndex(outputIndex, bestValue / f32(uniforms.reduceSize));":"setOutputAtIndex(outputIndex, bestValue);";return`
       fn DIV_CEIL(a : u32, b : u32) -> u32 {
        return ((a - 1u) / b + 1u);
       }

       ${`
         var<workgroup> xBestValues : array<f32, ${o}>;
       `}
       fn getOffset(outputIndex : i32) -> i32 {
         let outputCoords = getCoordsFromIndex(outputIndex);
         let offset = ${this.outputShape.length===1?"outputCoords":"outputCoords[0]"} * uniforms.reduceSize;
          return offset;
       }
       ${Q("index")} {
         let outputIndex = index / ${o};
         let offset = getOffset(outputIndex);
         var bestValue = ${e};
         let Length = uniforms.reduceSize;
         let WorkPerThread = DIV_CEIL(u32(Length), ${o}u);
         for (var k = i32(localId.x); k < Length && outputIndex < uniforms.size;
             k = k + ${o}) {
           let candidate = f32(x[offset + k]);
           ${t}
         }
         xBestValues[localId.x] = bestValue;
         workgroupBarrier();

         var reduceSize = min(u32(Length), ${o}u);
         for (var currentSize = reduceSize / 2u; reduceSize > 1u;
             currentSize = reduceSize / 2u) {
           let interval = DIV_CEIL(reduceSize, 2u);
           if (localId.x < currentSize) {
            let candidate = xBestValues[localId.x + interval];
            ${t}
            xBestValues[localId.x] = bestValue;
           }
           reduceSize = interval;
           workgroupBarrier();
         }

         if (localId.x == 0u && outputIndex < uniforms.size) {
          ${n}
        }
       }
     `}};var pK={mean:"float32",all:"bool",any:"bool"};function to(r,t,e,o,n){let i=r.shape.length,s=[],a=S.parseAxisParam(t,r.shape),l=a,u=$.getAxesPermutation(l,i),c=r;u!=null&&(c=mr({inputs:{x:r},attrs:{perm:u},backend:n}),l=$.getInnerMostAxes(l.length,i),s.push(c)),$.assertAxesAreInnerMostDims(o,l,i);let[p,d]=$.computeOutAndReduceShapes(c.shape,l),m=p;e&&(m=$.expandShapeToKeepDim(p,a));let f;if((o==="max"||o==="prod")&&n.shouldExecuteOnCPU([c])){let g=n.tensorMap.get(c.dataId).values;switch(o){case"max":let x=DT(g,S.sizeFromShape(d),m,r.dtype);f=n.makeTensorInfo(m,r.dtype,x);break;case"prod":let{outVals:y,outShape:b,outDtype:I}=VT(c.shape,c.dtype,g,l);f=n.makeTensorInfo(b,I,y);break;default:throw new Error(`${o} CPU implementation is not yet supported.`)}}else{let g=S.sizeFromShape(d),y=S.sizeFromShape(c.shape)/g,b={windowSize:g,inSize:g,batchSize:y,outSize:1},I=pK[o]||Nn(r.dtype),N=[{type:"int32",data:[g]}],F=new vh(b,o,n.device.limits.maxComputeWorkgroupSizeX),B=n.runWebGPUProgram(F,[c],I,N);s.push(B),f=me({inputs:{x:B},attrs:{shape:m},backend:n})}return s.forEach(g=>n.disposeData(g.dataId)),f}function dK(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{keepDims:i,axis:s}=o;return to(n,s,i,"all",e)}var nE={kernelName:Wa,backendName:"webgpu",kernelFunc:dK};function mK(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{keepDims:i,axis:s}=o;return to(n,s,i,"any",e)}var iE={kernelName:za,backendName:"webgpu",kernelFunc:mK};var xc=class{constructor(t,e,o){this.workgroupSize=[64,1,1],this.variableNames=["x"],this.uniforms="infinityValue : f32,",this.size=!0;let n=[e];this.op=o==="min"?"<":">";let[i,s]=$.computeOutAndReduceShapes(t,n);this.outputShape=i.length===0?[1]:i,this.dispatchLayout=oe(this.outputShape),S.sizeFromShape(s)<32?(this.type="plain",this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize)):(this.type="shared",this.dispatch=Z(this.dispatchLayout,this.outputShape,[1,1,1])),this.inputShape=t,this.shaderKey=`argMinMax_${this.op}_${this.type}`}getUserCode(){let t=this.workgroupSize[0],e=()=>this.inputShape.length===1?"uniforms.xShape":`uniforms.xShape.${To(this.inputShape.length-1)}`,o=()=>{let n="";if(this.outputShape.length===1)this.inputShape.length!==1&&(n+="outputCoords,");else for(let i=0;i<this.outputShape.length;i++)n+=`outputCoords.${To(i)},`;return n};return this.type==="shared"?`
      fn DIV_CEIL(a : u32, b : u32) -> u32 {
        return ((a - 1u) / b + 1u);
      }

      ${`
      var<workgroup> xBestIndices : array<i32, ${t}>;
      var<workgroup> xBestValues : array<f32, ${t}>;
    `}

      ${Q("index")} {
        let outputIndex = index / ${t};
        let reduceLength = ${e()};

        var bestIndex = i32(localId.x);
        var bestValue = uniforms.infinityValue;
        let outputCoords = getCoordsFromIndex(outputIndex);
        for (var k = i32(localId.x); k < reduceLength && outputIndex < uniforms.size;
            k = k + ${t}) {
          let candidate = getX(${o()} k);
          if (!isnan(candidate) && candidate ${this.op} bestValue) {
            bestValue = candidate;
            bestIndex = k;
          }
        }
        xBestValues[localId.x] = bestValue;
        xBestIndices[localId.x] = bestIndex;
        workgroupBarrier();

        var reduceSize = min(u32(reduceLength), ${t}u);
        for (var currentSize = reduceSize / 2u; reduceSize > 1u;
            currentSize = reduceSize / 2u) {
          let interval = DIV_CEIL(reduceSize, 2u);
          if (localId.x < currentSize) {
            let candidate = xBestValues[localId.x + interval];
            if (candidate ${this.op} bestValue) {
              bestValue = candidate;
              xBestValues[localId.x] = bestValue;
              xBestIndices[localId.x] = xBestIndices[localId.x + interval];
            }
          }
          reduceSize = interval;
          workgroupBarrier();
        }

        if (localId.x == 0u && outputIndex < uniforms.size) {
          setOutputAtIndexI32(outputIndex, xBestIndices[localId.x]);
        }
      }
    `:`
      ${Q("index")} {
        if (index < uniforms.size) {
          let outputCoords = getCoordsFromIndex(index);
          var bestIndex = 0;
          var bestValue = getX(${o()} 0);
          let reduceLength = ${e()};
          for (var i = 1; i < reduceLength; i++) {
            let candidate = getX(${o()} i);
            if (candidate ${this.op} bestValue) {
              bestValue = candidate;
              bestIndex = i;
            }
          }
          setOutputAtIndexI32(index, bestIndex);
        }
      }
      `}};function fK(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{axis:i}=o,s=S.parseAxisParam(i,n.shape),a=$.getAxesPermutation(s,n.shape.length),l=n,u=[];a!=null&&(l=mr({inputs:{x:n},backend:e,attrs:{perm:a}}),u.push(l),s=$.getInnerMostAxes(s.length,l.shape.length)),$.assertAxesAreInnerMostDims("argMax",[s[0]],l.shape.length);let c=new xc(l.shape,s[0],"max"),p=[{type:"float32",data:[Number.NEGATIVE_INFINITY]}],d=e.runWebGPUProgram(c,[l],"int32",p);return u.forEach(m=>e.disposeData(m.dataId)),d}var sE={kernelName:Ua,backendName:"webgpu",kernelFunc:fK};function hK(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{axis:i}=o,s=S.parseAxisParam(i,n.shape),a=$.getAxesPermutation(s,n.shape.length),l=n,u=[];a!=null&&(l=mr({inputs:{x:n},backend:e,attrs:{perm:a}}),u.push(l),s=$.getInnerMostAxes(s.length,l.shape.length)),$.assertAxesAreInnerMostDims("argMin",[s[0]],l.shape.length);let c=new xc(l.shape,s[0],"min"),p=[{type:"float32",data:[Number.POSITIVE_INFINITY]}],d=e.runWebGPUProgram(c,[l],"int32",p);return u.forEach(m=>e.disposeData(m.dataId)),d}var aE={kernelName:Ga,backendName:"webgpu",kernelFunc:hK};var gK=ke({opType:ie.ASIN}),lE={kernelName:Ha,backendName:"webgpu",kernelFunc:gK};var xK=ke({opType:ie.ASINH}),uE={kernelName:Ka,backendName:"webgpu",kernelFunc:xK};var yK=ke({opType:ie.ATAN}),cE={kernelName:qa,backendName:"webgpu",kernelFunc:yK};var vK=Ze({opType:Ce.ATAN2}),pE={kernelName:Xa,backendName:"webgpu",kernelFunc:vK};var bK=ke({opType:ie.ATANH}),dE={kernelName:ja,backendName:"webgpu",kernelFunc:bK};var bh=class{constructor(t){this.variableNames=["x"],this.uniforms="strides : vec2<i32>,",this.workgroupSize=[256,1,1],this.size=!0,this.outputShape=t.outShape,this.dispatchLayout=oe(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="poolWithFilterSizeEqualsOne"}getUserCode(){return`
      ${Q("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let batch = coords[0];
          let d = coords[3];

          let xRCCorner = coords.yz * uniforms.strides;
          let xRCorner = xRCCorner.x;
          let xCCorner = xRCCorner.y;

          let value = getX(batch, xRCorner, xCCorner, d);
          setOutputAtIndex(index, value);
        }
      }
    `}};var dn=class{constructor(t,e,o=!1,n=!1,i=!1){if(this.variableNames=["x"],this.uniforms="strides : vec2<i32>, pads : vec2<i32>, dilations : vec2<i32>, convDims : vec2<i32>, filterDims : vec2<i32>,",this.workgroupSize=[128,1,1],this.size=!0,e==="avg"&&o)throw new Error("Cannot compute positions for average pool.");this.outputShape=t.outShape,this.dispatchLayout=oe(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize),this.poolType=e,this.computePositions=o,this.flattenPositions=n,this.includeBatchIndex=i,this.shaderKey=`pool2D_${e}_${o}_${n}_${i}`}getUserCode(){let t;this.poolType==="avg"?t="resultValue = resultValue + value; count = count + 1.0;":this.computePositions?t=`let currMaxValue = mix(value, maxValue, maxValueFound);
      if (value >= currMaxValue) {
        maxValue = value;
        maxValueFound = 1.0;
        maxPosition = ${this.flattenPositions?this.includeBatchIndex?"((batch * uniforms.xShape[1] + xR) * uniforms.xShape[2] + xC) * uniforms.xShape[3] + d":"(xR * uniforms.xShape[2] + xC) * uniforms.xShape[3] + d":"wR * uniforms.filterDims.y + wC"};
      }`:t="resultValue = max(value, resultValue);";let e="resultValue";return this.poolType==="avg"&&(e="resultValue / max(count, 1.0)"),`
      ${Q("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
          let batch = coords[0];
          let d = coords[3];
          let xRCCorner = vec2<i32>(coords.yz) * uniforms.strides - uniforms.pads;
          let xRCorner = xRCCorner.x;
          let xCCorner = xRCCorner.y;

          ${this.computePositions?`var maxValue = 0.0;
            var maxValueFound = 0.0;
            var maxPosition = 0;`:`var resultValue = ${this.poolType==="avg"?"0.0":"-1.0 / pow(10.0, -20.0)"};`}

          var count = 0.0;
          for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + uniforms.dilations.x) {
            let xR = xRCorner + wR;

            if (xR < 0 || xR >= uniforms.convDims.x) {
              continue;
            }

            for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + uniforms.dilations.y) {
              let xC = xCCorner + wC;
              if (xC < 0 || xC >= uniforms.convDims.y) {
                continue;
              }

              let value = getX(batch, xR, xC, d);
              ${t}
            }
          }

          ${this.computePositions?"setOutputAtIndexI32(index, maxPosition);":`setOutputAtIndex(index, ${e});`}
        }
      }
    `}},qi=class{constructor(t,e,o=!1,n=!1,i=!1){if(this.variableNames=["x"],this.uniforms="strides : vec3<i32>, pads : vec3<i32>, convDims : vec3<i32>, filterDims : vec3<i32>,",this.workgroupSize=[128,1,1],this.size=!0,e==="avg"&&o)throw new Error("Cannot compute positions for average pool.");this.outputShape=t.outShape,this.dispatchLayout=oe(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize),this.poolType=e,this.computePositions=o,this.flattenPositions=n,this.includeBatchIndex=i,this.shaderKey=`pool3D_${e}_${o}_${n}_${i}`}getUserCode(){let t;this.poolType==="avg"?t="resultValue += value; count += 1.0;":this.computePositions?t=`let currMaxValue = mix(value, maxValue, maxValueFound);
      if (value >= currMaxValue) {
        maxValue = value;
        maxValueFound = 1.0;
        maxPosition = ${this.flattenPositions?this.includeBatchIndex?"(((batch * uniforms.xShape.y + xD) * uniforms.xShape.z + xR) * uniforms.xShape.w + xC) * uniforms.xShape.u + ch":"((xD * uniforms.xShape.z + xR) * uniforms.xShape.w + xC) * uniforms.xShape.u + ch":"wD * uniforms.filterDims.y * uniforms.filterDims.y + wR * uniforms.filterDims.z + wC"};
      }`:t="resultValue = max(value, resultValue);";let e="resultValue";return this.poolType==="avg"&&(e="resultValue / max(count, 1.0)"),`
      ${Q("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let batch = coords.x;
          let ch = coords.u;

          let xCorner = vec3<i32>(coords.y, coords.z, coords.w) * uniforms.strides - uniforms.pads;
          let xDCorner = xCorner.x;
          let xRCorner = xCorner.y;
          let xCCorner = xCorner.z;

          ${this.computePositions?`var maxValue = 0.0;
            var maxValueFound = 0.0;
            var maxPosition = 0;`:`var resultValue = ${this.poolType==="avg"?"0.0":"-1.0 / pow(10.0, -20.0)"};`}

          var count = 0.0;
          for (var wD = 0; wD < uniforms.filterDims.x; wD++) {
            let xD = xDCorner + wD;
            if (xD < 0 || xD >= uniforms.convDims.x) {
              continue;
            }

            for (var wR = 0; wR < uniforms.filterDims.y; wR++) {
              let xR = xRCorner + wR;
              if (xR < 0 || xR >= uniforms.convDims.y) {
                continue;
              }

              for (var wC = 0; wC < uniforms.filterDims.z; wC++) {
                let xC = xCCorner + wC;
                if (xC < 0 || xC >= uniforms.convDims.z) {
                  continue;
                }

                let value = getX(batch, xD, xR, xC, ch);
                ${t}
              }
            }
          }

          ${this.computePositions?"setOutputAtIndexI32(index, maxPosition);":`setOutputAtIndex(index, ${e});`}
        }
      }
    `}};function rv(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{reductionIndices:i,keepDims:s}=o;return to(n,i,s,"max",e)}var mE={kernelName:Kl,backendName:"webgpu",kernelFunc:rv};function ov(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{keepDims:i,axis:s}=o;return to(n,s,i,"mean",e)}var fE={kernelName:Yl,backendName:"webgpu",kernelFunc:ov};function Sh(r,t,e,o){if(t.filterWidth===1&&t.filterHeight===1&&S.arraysEqual(t.inShape,t.outShape))return $t({inputs:{x:r},backend:o});if(t.filterWidth===t.inWidth&&t.filterHeight===t.inHeight&&t.batchSize===1&&t.padInfo.type==="VALID"){let s=r.shape.length,a=me({inputs:{x:r},backend:o,attrs:{shape:[r.shape[s-3]*r.shape[s-2],r.shape[s-1]]}}),l;e==="avg"?l=ov({inputs:{x:a},backend:o,attrs:{axis:0,keepDims:!1}}):(S.assert(e==="max",()=>`Invalid pool type ${e}`),l=rv({inputs:{x:a},backend:o,attrs:{reductionIndices:0,keepDims:!1}}));let u=me({inputs:{x:l},backend:o,attrs:{shape:t.outShape}});return o.disposeData(a.dataId),o.disposeData(l.dataId),u}let n,i=[{type:"int32",data:[t.strideHeight,t.strideWidth]}];return t.filterHeight===1&&t.filterWidth===1?n=new bh(t):(e==="avg"?n=new dn(t,"avg"):(S.assert(e==="max",()=>`Invalid pool type ${e}`),n=new dn(t,"max")),i.push({type:"int32",data:[t.padInfo.top,t.padInfo.left]},{type:"int32",data:[t.dilationHeight,t.dilationWidth]},{type:"int32",data:[t.inHeight,t.inWidth]},{type:"int32",data:[t.effectiveFilterHeight,t.effectiveFilterWidth]})),o.runWebGPUProgram(n,[r],r.dtype,i)}function SK(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{filterSize:i,strides:s,pad:a,dimRoundingMode:l}=o,c=$.computePool2DInfo(n.shape,i,s,1,a,l);return Sh(n,c,"avg",e)}var hE={kernelName:Ya,backendName:"webgpu",kernelFunc:SK};function wK(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{filterSize:i,strides:s,pad:a,dataFormat:l,dimRoundingMode:u}=o,c=[1,1,1],p=$.computePool3DInfo(n.shape,i,s,c,a,u,l),d=new qi(p,"avg"),m=[{type:"int32",data:[p.strideDepth,p.strideHeight,p.strideWidth]},{type:"int32",data:[p.padInfo.front,p.padInfo.top,p.padInfo.left]},{type:"int32",data:[p.inDepth,p.inHeight,p.inWidth]},{type:"int32",data:[p.effectiveFilterDepth,p.effectiveFilterHeight,p.effectiveFilterWidth]}];return e.runWebGPUProgram(d,[n],n.dtype,m)}var gE={kernelName:Qa,backendName:"webgpu",kernelFunc:wK};var wh=class{constructor(t){this.variableNames=["dy"],this.uniforms=`strides : vec2<i32>, pads : vec2<i32>, dilations : vec2<i32>, filterDims : vec2<i32>,
       outHeight : i32, outWidth : i32, avgMultiplier : f32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t.inShape,this.dispatchLayout=oe(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="avgPool2DBackprop"}getUserCode(){return`
      ${Q("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords[0];
        let d = coords[3];

        let dyRCCorner = vec2<i32>(coords.yz) - uniforms.pads;
        let dyRCorner = dyRCCorner.x;
        let dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var wR = 0; wR < uniforms.filterDims[0]; wR = wR + uniforms.dilations[0]) {
          let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[0]);

          if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
            continue;
          }
          let idyR = i32(dyR);

          for (var wC = 0; wC < uniforms.filterDims[1]; wC = wC + uniforms.dilations[1]) {
            let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[1]);

            if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
              continue;
            }
            let idyC = i32(dyC);

            let dyValue = getDy(batch, idyR, idyC, d);

            dotProd = dotProd + dyValue * uniforms.avgMultiplier;
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
    `}},Ch=class{constructor(t){this.variableNames=["dy"],this.uniforms=`strides : vec3<i32>, pads : vec3<i32>, filterDims : vec3<i32>,
       outDepth : i32, outHeight : i32, outWidth : i32, avgMultiplier : f32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t.inShape,this.dispatchLayout=oe(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="avgPool3DBackprop"}getUserCode(){return`
      ${Q("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords.x;
        let ch = coords.u;

        let dyCorner = vec3<i32>(coords.y, coords.z, coords.w) - uniforms.pads;
        let dyDCorner = dyCorner.x;
        let dyRCorner = dyCorner.y;
        let dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var wD = 0; wD < uniforms.filterDims[0]; wD++) {
          let dyD = f32(dyDCorner + wD) / f32(uniforms.strides[0]);

          if (dyD < 0.0 || dyD >= f32(uniforms.outDepth) || fract(dyD) > 0.0) {
            continue;
          }
          let idyD = i32(dyD);

          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {
            let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[1]);

            if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
              continue;
            }
            let idyR = i32(dyR);

            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {
              let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[2]);

              if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
                continue;
              }
              let idyC = i32(dyC);

              let dyValue = getDy(batch, idyD, idyR, idyC, ch);
              dotProd += dyValue * uniforms.avgMultiplier;
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
    `}};function CK(r){let{inputs:t,backend:e,attrs:o}=r,{dy:n,input:i}=t,s=i,{filterSize:a,strides:l,pad:u,dimRoundingMode:c}=o,p=$.computePool3DInfo(s.shape,a,l,1,u,c),d=new Ch(p),m=1/(p.filterDepth*p.filterHeight*p.filterWidth),f=[{type:"int32",data:[p.strideDepth,p.strideHeight,p.strideWidth]},{type:"int32",data:[p.effectiveFilterDepth-1-p.padInfo.front,p.effectiveFilterHeight-1-p.padInfo.top,p.effectiveFilterWidth-1-p.padInfo.left]},{type:"int32",data:[p.effectiveFilterDepth,p.effectiveFilterHeight,p.effectiveFilterWidth]},{type:"int32",data:[p.outDepth]},{type:"int32",data:[p.outHeight]},{type:"int32",data:[p.outWidth]},{type:"float32",data:[m]}];return e.runWebGPUProgram(d,[n],s.dtype,f)}var xE={kernelName:Qd,backendName:"webgpu",kernelFunc:CK};function _K(r){let{inputs:t,backend:e,attrs:o}=r,{dy:n,input:i}=t,s=i;Lp([n,i],"avgPoolGrad");let{filterSize:a,strides:l,pad:u}=o,c=$.computePool2DInfo(s.shape,a,l,1,u),p=new wh(c),d=1/(c.filterHeight*c.filterWidth),m=[{type:"int32",data:[c.strideHeight,c.strideWidth]},{type:"int32",data:[c.effectiveFilterHeight-1-c.padInfo.top,c.effectiveFilterWidth-1-c.padInfo.left]},{type:"int32",data:[c.dilationHeight,c.dilationWidth]},{type:"int32",data:[c.effectiveFilterHeight,c.effectiveFilterWidth]},{type:"int32",data:[c.outHeight]},{type:"int32",data:[c.outWidth]},{type:"float32",data:[d]}];return e.runWebGPUProgram(p,[n],s.dtype,m)}var yE={kernelName:Yd,backendName:"webgpu",kernelFunc:_K};function kK(r){let{inputs:t,backend:e,attrs:o}=r,{a:n,b:i}=t,{transposeA:s,transposeB:a}=o;return Qs({a:n,b:i,transposeA:s,transposeB:a,backend:e})}var vE={kernelName:Za,backendName:"webgpu",kernelFunc:kK};var _h=class{constructor(t,e){this.variableNames=["source"],this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.rank=e.length,this.dispatchLayout=oe(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.start=t,this.uniforms=`start : ${ft(t.length)}, `,this.shaderKey="slice"}getUserCode(){let t=ft(this.rank),e=IK(this.rank),o;return this.start.length===1?o=this.outputShape.map((i,s)=>"sourceLoc = uniforms.start + coords;"):o=this.outputShape.map((i,s)=>`sourceLoc.${nv[s]} = uniforms.start.${To(s)} + coords.${nv[s]};`),`
      ${Q("index")} {
        if (index < uniforms.size) {
          var sourceLoc : ${t};
          let coords = getCoordsFromIndex(index);
          ${o.join(`
`)}
          setOutputAtIndex(index, getSource(${e}));
        }
      }
    `}},nv=["x","y","z","w","u","v"];function IK(r){if(r===1)return"sourceLoc";if(r<=6)return nv.slice(0,r).map(t=>`sourceLoc.${t}`).join(",");throw Error(`Slicing for rank ${r} is not yet supported`)}function Go(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{begin:i,size:s}=o,[a,l]=Gt.parseSliceParams(n,i,s);if(Gt.assertParamsValid(n,a,l),e.shouldExecuteOnCPU([n])||n.dtype==="string"){let p=e.tensorMap.get(n.dataId),d=HT(p.values,a,l,n.shape,n.dtype);return e.makeTensorInfo(l,n.dtype,d)}if(S.sizeFromShape(l)===0)return e.makeTensorInfo(l,n.dtype,[]);let u=new _h(a,l),c=[{type:"int32",data:a}];return e.runWebGPUProgram(u,[n],n.dtype,c)}var bE={kernelName:vs,backendName:"webgpu",kernelFunc:Go};var TK=r=>{let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{blockShape:i,crops:s}=o;S.assert(n.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGPU backend not implemented yet");let a=i.reduce((b,I)=>b*I),l=$.getReshaped(n.shape,i,a),u=$.getPermuted(l.length,i.length),c=$.getReshapedPermuted(n.shape,i,a),p=$.getSliceBeginCoords(s,i.length),d=$.getSliceSize(c,s,i.length),m=[],f=me({inputs:{x:n},backend:e,attrs:{shape:l}}),g=mr({inputs:{x:f},backend:e,attrs:{perm:u}}),x=me({inputs:{x:g},backend:e,attrs:{shape:c}}),y=Go({inputs:{x},backend:e,attrs:{begin:p,size:d}});return m.push(f),m.push(g),m.push(x),m.forEach(b=>e.disposeData(b.dataId)),y},SE={kernelName:Ja,backendName:"webgpu",kernelFunc:TK};var EK=`
  fn bincount_write(index: i32, value: f32) {
    ${Zr("&result[index]","value","float32")}
  }
`,NK=`
  fn bincount_write(index: i32, value: f32) {
    atomicStore(&result[index], bitcast<i32>(value));
  }
`,yc=class{constructor(t,e,o=!1){this.outputShape=[],this.variableNames=["x"],this.uniforms="binCountSize : i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.hasWeights=!0,this.binaryOutput=!1,this.outputShape=t,this.rank=t.length,this.dispatchLayout=oe(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize),this.binaryOutput=o,o&&(this.atomic=!1),this.hasWeights=e,this.hasWeights&&this.variableNames.push("w"),this.shaderKey=`bincount_${this.hasWeights}_${this.binaryOutput}_${this.rank}`}getUserCode(){return`
    ${this.binaryOutput?NK:EK}
  ${Q("index")} {
    ${this.rank===1?`if (index < uniforms.xShape) {
      let indexVal = i32(getX(index));
      if (indexVal < uniforms.binCountSize) {
        let value = ${this.binaryOutput?1:this.hasWeights?"getW(index)":"1."};
        bincount_write(indexVal, value);
      }
    }`:`let coord = getCoordsFromIndex(index);
    if (coordsInBounds2D(coord, uniforms.xShape)) {
      let indexVal = i32(getX(coord[0], coord[1]));
      if (indexVal < uniforms.binCountSize) {
        let value = ${this.binaryOutput?1:this.hasWeights?"getW(coord[0], coord[1])":"1."};
        bincount_write(coord.x * uniforms.binCountSize + indexVal, value);
      }
    }`}
  }
  `}};function RK(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,weights:i}=t,{size:s}=o,a=S.sizeFromShape(n.shape),u=S.sizeFromShape(i.shape)>0,c=[s],p=i.dtype,d=St({backend:e,attrs:{shape:c,value:0,dtype:p}}),m=new yc([a],u),f=[{type:"int32",data:[s]}],g=u?[n,i]:[n];return e.runWebGPUProgram(m,g,p,f,d)}var wE={kernelName:el,backendName:"webgpu",kernelFunc:RK};var kh=class{constructor(t){this.outputShape=[],this.variableNames=["s0","s1"],this.uniforms="s0Size : i32, s1Size : i32, ",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[t],this.dispatchLayout=oe(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="broadcastArgs"}getUserCode(){return`
  ${Q("index")} {
    if (index < uniforms.size) {
      var s0 = 1.0;
      var s1 = 1.0;
      let indexS0 = index - uniforms.size + uniforms.s0Size;
      let indexS1 = index - uniforms.size + uniforms.s1Size;
      if (indexS0 >= 0) {
        s0 = getS0(indexS0);
      }
      if (indexS1 >= 0) {
        s1 = getS1(indexS1);
      }

      if (s0 == 1.0) {
        setOutputAtIndex(index, s1);
      } else if (s1 == 1.0) {
        setOutputAtIndex(index, s0);
      } else if (s0 != s1) {
        setOutputAtIndex(index, uniforms.NAN);
      } else {
        setOutputAtIndex(index, s0);
      }
    }
  }
  `}};function $K(r){let{inputs:t,backend:e}=r,{s0:o,s1:n}=t;if(e.shouldExecuteOnCPU([o,n])){let c=e.tensorMap.get(o.dataId),p=e.tensorMap.get(n.dataId),d=c.values,m=p.values,f=$.assertAndGetBroadcastShape(Array.from(d),Array.from(m));return e.makeTensorInfo([f.length],"int32",Int32Array.from(f))}let i=S.sizeFromShape(o.shape),s=S.sizeFromShape(n.shape),a=Math.max(i,s),l=new kh(a),u=[{type:"int32",data:[i]},{type:"int32",data:[s]}];return e.runWebGPUProgram(l,[o,n],"int32",u)}var CE={kernelName:rl,backendName:"webgpu",kernelFunc:$K};var iv=Ze({opType:Ce.NOT_EQUAL,dtype:"bool",cpuKernelImpl:BT}),_E={kernelName:vi,backendName:"webgpu",kernelFunc:iv};function zn(r){let{inputs:t,backend:e}=r,{input:o}=t,n=e.tensorMap.get(o.dataId);return $t({inputs:{x:n.complexTensorInfos.real},backend:e})}var kE={kernelName:ys,backendName:"webgpu",kernelFunc:zn};function IE(r,t){let e=new eo(r.shape,ie.TO_INT),o=t.runWebGPUProgram(e,[r],"int32");return{dataId:o.dataId,shape:o.shape,dtype:o.dtype}}function sv(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{dtype:i}=o;if(i==="complex64"){if(n.dtype==="complex64")return $t({inputs:{x:n},backend:e});let s=Sr(n.shape),a=sv({inputs:{x:n},backend:e,attrs:{dtype:"float32"}}),l=ho({inputs:{real:a,imag:s},backend:e});return s.dispose(),e.disposeData(a.dataId),l}if(n.dtype==="complex64"){let s=zn({inputs:{input:n},backend:e}),a=sv({inputs:{x:s},backend:e,attrs:{dtype:i}});return e.disposeData(s.dataId),a}if(!S.hasEncodingLoss(n.dtype,i)){let s=$t({inputs:{x:n},backend:e});return{dataId:s.dataId,shape:s.shape,dtype:i}}if(e.shouldExecuteOnCPU([n])){let s=e.tensorMap.get(n.dataId).values,[a,l,u]=vT(s,n.shape,n.dtype,i);return e.makeTensorInfo(a,l,u)}if(i==="int32")return IE(n,e);if(i==="bool"){let s=e.makeTensorInfo([],"bool",S.getTypedArrayFromDType("bool",1)),l=iv({inputs:{a:n,b:s},backend:e});return e.disposeData(s.dataId),l}throw new Error(`Error in Cast: failed to cast ${n.dtype} to ${i}`)}var TE={kernelName:kn,backendName:"webgpu",kernelFunc:sv};var PK=ke({opType:ie.CEIL,cpuKernelImpl:bT}),EE={kernelName:ii,backendName:"webgpu",kernelFunc:PK};var Ih=class{constructor(t){this.variableNames=["A"],this.uniforms="minVal : f32, maxVal : f32,",this.workPerThread=4,this.workgroupSize=[64,1,1],this.outputComponent=4,this.size=!0,this.outputShape=t,this.dispatchLayout=oe(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.shaderKey="clipVec4"}getUserCode(){return`
      ${Q("index")} {
        if(index < uniforms.size) {
          let value = getAByOutputIndex(index);
          var clampedValue = clamp(
              value, vec4<f32>(uniforms.minVal), vec4<f32>(uniforms.maxVal));
          clampedValue = select(clampedValue, value, isnanVec4(value));
          setOutputAtIndex(index, clampedValue);
        }
      }
    `}};var Th=class{constructor(t){this.variableNames=["A"],this.uniforms="minVal : f32, maxVal : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=oe(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="clip"}getUserCode(){return`
      ${Q("index")} {
        if(index < uniforms.size) {
          let value = getAByOutputIndex(index);
          if (isnan(value)) {
            setOutputAtIndex(index, value);
            return;
          }
          setOutputAtIndex(index, clamp(value, uniforms.minVal, uniforms.maxVal));
        }
      }
    `}};function AK(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{clipValueMin:i,clipValueMax:s}=o,a,l=[{type:"float32",data:[i]},{type:"float32",data:[s]}];return S.sizeFromShape(n.shape)%4===0?a=new Ih(n.shape):a=new Th(n.shape),e.runWebGPUProgram(a,[n],n.dtype,l)}var NE={kernelName:ol,backendName:"webgpu",kernelFunc:AK};var Eh=class{constructor(t){this.outputShape=[],this.variableNames=["real","imag"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=oe(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="complexAbs"}getUserCode(){return`
    ${Q("index")} {
      if (index < uniforms.size) {
        let re = abs(getRealByOutputIndex(index));
        let im = abs(getImagByOutputIndex(index));
        let mx = max(re, im);

        // The length function in wgsl may be not underflow-safe on some GPUs.
        // So the safe solution is to ensure underflow-safety in all cases.
        setOutputAtIndex(index, select(mx * length(vec2<f32>(1, min(re, im)/mx)), 0.0, mx == 0.0));
      }
    }
  `}};function RE(r,t){return{dataId:t.dataId,dtype:t.dtype,shape:r.shape}}function DK(r){let{inputs:t,backend:e}=r,{x:o}=t,n=e.tensorMap.get(o.dataId),i=new Eh(o.shape),s=[RE(o,n.complexTensorInfos.real),RE(o,n.complexTensorInfos.imag)];return e.runWebGPUProgram(i,s,s[0].dtype)}var $E={kernelName:nl,backendName:"webgpu",kernelFunc:DK};var Nh=class{constructor(t){this.uniforms="",this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=$.computeOutShape(t,1),this.variableNames=t.map((e,o)=>`T${o}`),this.dispatchLayout=oe(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.offsetLength=t.length-1;for(let e=0;e<this.offsetLength;e++)this.uniforms+=`offset${e} : i32,`;this.shaderKey="concat"}getUserCode(){let t=[];if(this.offsetLength>0){t.push("if (yC < uniforms.offset0){ setOutputAtCoords(coords.x, coords.y, getT0(yR, yC)); }");for(let i=1;i<this.offsetLength;i++)t.push(`else if (yC < uniforms.offset${[i]}){ setOutputAtCoords(coords.x, coords.y, getT${i}(yR, yC - uniforms.offset${i-1})); }`);let o=this.offsetLength,n=this.offsetLength-1;t.push(`else { setOutputAtCoords(coords.x, coords.y, getT${o}(yR, yC - uniforms.offset${n})); }`)}else t.push("setOutputAtCoords(coords.x, coords.y, getT0(yR, yC));");return`
      ${Q("index")} {
        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if(flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndex);
            let yR = coords.x;
            let yC = coords.y;

            ${t.join(`
        `)}
          }
        }
      }
    `}};function Zs(r){let{inputs:t,backend:e}=r,{input:o}=t,n=e.tensorMap.get(o.dataId);return $t({inputs:{x:n.complexTensorInfos.imag},backend:e})}var PE={kernelName:Fl,backendName:"webgpu",kernelFunc:Zs};function vc(r,t,e){let o=r[0].dtype;if(o==="complex64"){let f=r.map(I=>zn({inputs:{input:I},backend:e})),g=r.map(I=>Zs({inputs:{input:I},backend:e})),x=vc(f,t,e),y=vc(g,t,e),b=ho({inputs:{real:x,imag:y},backend:e});return f.forEach(I=>e.disposeData(I.dataId)),g.forEach(I=>e.disposeData(I.dataId)),e.disposeData(x.dataId),e.disposeData(y.dataId),b}let n=e.shouldExecuteOnCPU(r);if(o==="string"&&(n=!0),n){let f=r.map(F=>{let z=[-1,S.sizeFromShape(F.shape.slice(t))];return me({inputs:{x:F},backend:e,attrs:{shape:z}})}),g=f.map(F=>({vals:e.readSync(F.dataId),shape:F.shape})),x=$.computeOutShape(f.map(F=>F.shape),1),y=f[0].shape[0]===1,b=ST(g,x,o,y),I=$.computeOutShape(r.map(F=>F.shape),t),N=e.makeTensorInfo(I,o,b);return f.forEach(F=>e.disposeData(F.dataId)),N}let i=e.device.limits.maxStorageBuffersPerShaderStage-1;if(r.length>i){let f=[];for(let x=0;x<r.length;x+=i){let y=r.slice(x,x+i);f.push(vc(y,t,e))}let g=vc(f,t,e);for(let x of f)e.disposeData(x.dataId);return g}let{tensors2D:s,outShape:a}=FK(r,t,e),l=s.map(f=>f.shape),u=new Nh(l),c=[],p=new Array(l.length-1);if(p.length>0){p[0]=l[0][1],c.push({type:"int32",data:[p[0]]});for(let f=1;f<p.length;f++)p[f]=p[f-1]+l[f][1],c.push({type:"int32",data:[p[f]]})}let d=e.runWebGPUProgram(u,s,s[0].dtype,c);s.forEach(f=>e.disposeData(f.dataId));let m=me({inputs:{x:d},backend:e,attrs:{shape:a}});return e.disposeData(d.dataId),m}function FK(r,t,e){let o=$.computeOutShape(r.map(i=>i.shape),t);return{tensors2D:r.map(i=>me({inputs:{x:i},backend:e,attrs:{shape:[S.sizeFromShape(i.shape.slice(0,t)),S.sizeFromShape(i.shape.slice(t))]}})),outShape:o}}function av(r){let{inputs:t,backend:e,attrs:o}=r,{axis:n}=o,i=S.parseAxisParam(n,t[0].shape)[0],s=t.map(u=>u.shape);$.assertParamsConsistent(s,i);let a=$.computeOutShape(t.map(u=>u.shape),i);if(S.sizeFromShape(a)===0)return e.makeTensorInfo(a,t[0].dtype,[]);let l=t.filter(u=>S.sizeFromShape(u.shape)>0);return l.length===1?$t({inputs:{x:l[0]},backend:e}):vc(l,i,e)}var AE={kernelName:il,backendName:"webgpu",kernelFunc:av};function OK(r,t,e,o,n=!1,i=null,s=!1,a=4,l=4,u=4){let c=K=>{switch(K){case 1:return"resData = f32(x[xIndex]);";case 3:return"resData = vec3<f32>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);";case 4:return"resData = vec4<f32>(x[xIndex / 4]);";default:throw new Error(`innerElementSize ${K} is not supported.`)}},p=K=>{switch(K){case 1:return"return f32(W[row * uniforms.wShape[3] + col]);";case 4:return"return vec4<f32>(W[(row * uniforms.wShape[3] + col) / 4]);";default:throw new Error(`innerElementSize ${K} is not supported.`)}},d=r?`
      let coord = vec4<i32>(batch, xRow, xCol, xCh);
      `:`
      let coord = vec4<i32>(batch, xCh, xRow, xCol);
      `,m=r?`
      let coords = vec4<i32>(
        batch,
        row / outWidth,
        row % outWidth,
        col);
      `:`
      let coords = vec4<i32>(
        batch,
        row,
        col / outWidth,
        col % outWidth);
      `,f=r?"uniforms.xShape[1]":"uniforms.xShape[2]",g=r?"uniforms.xShape[2]":"uniforms.xShape[3]",x=r?"row":"col",y=r?"col":"row",b=`
      let inChannels = uniforms.wShape[2];
      let outWidth = ${r?"uniforms.outShape[2]":"uniforms.outShape[3]"};
      let outRow = ${x} / outWidth;
      let outCol = ${x} % outWidth;

      let WRow = ${y} / (uniforms.filterDims[1] * inChannels);
      let WCol = ${y} / inChannels % uniforms.filterDims[1];
      let xRow = outRow * uniforms.strides[0] + uniforms.dilations[0] * WRow - uniforms.pads[0];
      let xCol = outCol * uniforms.strides[1] + uniforms.dilations[1] * WCol - uniforms.pads[1];
      let xCh = ${y} % inChannels;
      var resData = ${ze(a)}(0.0);
      // The bounds checking is always needed since we use it to pad zero for
      // the 'same' padding type.
      if (xRow >= 0 && xRow < ${f} && xCol >= 0 && xCol < ${g}) {
        ${d}
        let xIndex = getIndexFromCoords4D(coord, uniforms.xShape);
        ${c(a)}
      }
      return resData;`,I=r?t&&o?`
      ${b}`:`
      if (row < uniforms.dimAOuter && col < uniforms.dimInner) {
        ${b}
      }
      return ${ze(a)}(0.0);`:o&&e?`
      ${b}`:`
      if (row < uniforms.dimInner && col < uniforms.dimBOuter) {
        ${b}
      }
      return ${ze(a)}(0.0);`,N=`${p(l)}`,F=ze(u),B=r?ze(a):ze(l),z=r?ze(l):ze(a);return`
      ${or(i,s,u===4,4)}
      fn mm_readA(batch: i32, row : i32, col : i32) -> ${B} {
        ${r?I:N}
      }

      fn mm_readB(batch: i32, row : i32, col : i32) -> ${z} {
        ${r?N:I}
      }

      fn mm_write(batch: i32, row : i32, col : i32, valueIn : ${F}) {
        if (row < uniforms.dimAOuter && col < uniforms.dimBOuter)
        {
        var value = valueIn;
        let outWidth = ${r?"uniforms.outShape[2]":"uniforms.outShape[3]"};
        ${m}
        ${Jr(n,i)}
        setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
        }
      }`}var Rh=class{constructor(t,e,o,n,i=!1,s=null,a=!1,l=!1){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, strides : vec2<i32>, dilations : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.outputShape=t.outShape,this.isChannelsLast=t.dataFormat==="channelsLast",this.isVec4=((t.inChannels%4===0||t.inChannels%3===0)&&this.isChannelsLast||t.outWidth%4===0&&!this.isChannelsLast)&&t.outChannels%4===0,this.dispatchLayout=this.isChannelsLast?{x:[3],y:[1,2],z:[0]}:{x:[2,3],y:[1],z:[0]},this.workgroupSize=Dp(this.dispatchLayout,this.outputShape,this.isVec4),this.elementsPerThread=Fp(this.dispatchLayout,this.outputShape,this.isVec4),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize,this.elementsPerThread),this.isVec4?(this.outputComponent=4,this.isChannelsLast&&t.inChannels%4!==0?(this.innerElementSize=3,this.variableComponents=[1,4]):(this.innerElementSize=4,this.variableComponents=[4,4]),i&&(this.variableNames.push("bias"),this.variableComponents.push(4)),a&&(this.variableNames.push("preluActivationWeights"),this.variableComponents.push(4))):(this.innerElementSize=this.elementsPerThread[0],i&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights")),this.sequentialAccessByThreads=l,this.addBias=i,this.activation=s,this.hasPreluActivationWeights=a,this.tileAOuter=this.workgroupSize[1]*this.elementsPerThread[1],this.tileBOuter=this.workgroupSize[0]*this.elementsPerThread[0],this.tileInner=Math.max(this.workgroupSize[0]*this.innerElementSize,this.workgroupSize[1]),this.fitAOuter=e%this.tileAOuter===0,this.fitBOuter=o%this.tileBOuter===0,this.fitInner=n%this.tileInner===0,this.shaderKey=`conv2DMM_${this.elementsPerThread}_${this.activation}}_${this.fitAOuter}_${this.fitBOuter}_${this.fitInner}_${this.isVec4}_${this.innerElementSize}_${this.isChannelsLast}_${this.sequentialAccessByThreads}`}getUserCode(){let t=this.isVec4?Xs(this.elementsPerThread,this.workgroupSize,!this.isChannelsLast,this.tileInner):Ys(this.elementsPerThread,this.workgroupSize,!this.isChannelsLast,this.tileInner,!1,null,this.sequentialAccessByThreads),e=this.isVec4?[this.innerElementSize,4,4]:[1,1,1];return`
    ${OK(this.isChannelsLast,this.fitAOuter,this.fitBOuter,this.fitInner,this.addBias,this.activation,this.hasPreluActivationWeights,e[0],e[1],e[2])}
    ${t}
  `}};var $h=class{constructor(t,e=!1,o=null,n=!1){this.variableNames=["x","W"],this.uniforms="filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>,",this.workgroupSize=[4,4,8],this.outputShape=t.outShape,this.isChannelsLast=t.dataFormat==="channelsLast",this.dispatchLayout=this.isChannelsLast?{x:[2],y:[1],z:[0,3]}:{x:[3],y:[2],z:[0,1]},this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize),this.addBias=e,this.activation=o,this.hasPreluActivationWeights=n,e&&this.variableNames.push("bias"),n&&this.variableNames.push("preluActivationWeights"),this.shaderKey=`conv2dnaive_${this.activation}_${this.isChannelsLast}`}getUserCode(){return`
       ${or(this.activation,this.hasPreluActivationWeights,!1,4)}
       fn readInp(batch : i32, row : i32, col : i32, chan : i32) -> f32{
         let coords = vec4<i32>(batch, row, col, chan);
         if (coordsInBounds4D(coords, uniforms.xShape)) {
           return  getX(batch, row, col, chan);
         } else {
          return 0.0;
         }
       }
       fn readFilt(row : i32, col : i32, xChannel : i32, outChannel : i32) -> f32{
         let coords = vec4<i32>(row, col, xChannel, outChannel);
         if(coordsInBounds4D(coords, uniforms.wShape)) {
           return getW(row, col, xChannel, outChannel);
          } else {
            return 0.0;
          }
       }
       fn writeResult(batch : i32, row : i32, col : i32, chan : i32, valueIn : f32) {
         let coords = ${this.isChannelsLast?"vec4<i32>(batch, row, col, chan);":"vec4<i32>(batch, chan, row, col);"}
         if (coordsInBounds4D(coords, uniforms.outShape)) {
           var value = valueIn;
           ${Jr(this.addBias,this.activation)}
           setOutputAtCoords(coords.x, coords.y, coords.z, coords.w, value);
         }
       }
       ${Q("index")} {
         let coords = getOutputCoords();
         let batch = coords[0];
         let outChannel = ${this.isChannelsLast?"coords[3];":"coords[1];"}
         let outRow = ${this.isChannelsLast?"coords[1];":"coords[2];"}
         let outCol = ${this.isChannelsLast?"coords[2];":"coords[3];"}
         var acc : f32 = 0.0;
         for (var row = 0; row < uniforms.filterDims[0]; row = row + 1) {
           for (var col = 0; col < uniforms.filterDims[1]; col = col + 1) {
             let xRow = outRow * uniforms.strides[0] + uniforms.dilations[0] * row - uniforms.pads[0];
             let xCol = outCol * uniforms.strides[1] + uniforms.dilations[1] * col - uniforms.pads[1];
             for (var xChannel = 0; xChannel < ${this.isChannelsLast?"uniforms.xShape[3];":"uniforms.xShape[1];"} xChannel = xChannel + 1) {
               ${this.isChannelsLast?"let v = readInp(batch, xRow, xCol, xChannel);":"let v = readInp(batch, xChannel, xRow, xCol);"}
               let f = readFilt(row, col, xChannel, outChannel);
               acc = acc + v * f;
             }
           }
         }
         writeResult(batch, outRow, outCol, outChannel, acc);
       }
     `}};var Ph=class{constructor(t,e){this.variableNames=["x"],this.uniforms=`pads : vec2<i32>, strides : vec2<i32>, dilations : vec2<i32>, outWidth : i32, itemsPerBlockRow : i32,
       inChannels : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=oe(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize),this.isChannelsLast=e,this.shaderKey=`im2col_${this.isChannelsLast}`}getUserCode(){let t=this.isChannelsLast?1:2,e=this.isChannelsLast?2:3,o=this.isChannelsLast?"coords[1]":"coords[2]",n=this.isChannelsLast?"coords[2]":"coords[1]",i=this.isChannelsLast?"getX(batch, xRow, xCol, ch)":"getX(batch, ch, xRow, xCol)";return`
    ${Q("index")} {
      let coords = getCoordsFromIndex(index);
      if(index < uniforms.size) {
        let batch = coords[0];
        let row = ${o};
        let col = ${n};
        let offsetY = (row / uniforms.outWidth) * uniforms.strides[0] - uniforms.pads[0];
        let xRow = offsetY + uniforms.dilations[0] * (col / uniforms.itemsPerBlockRow);
        var value = 0.0;
        if(xRow < uniforms.xShape[${t}] && xRow >= 0) {
          let offsetX = (row % uniforms.outWidth) * uniforms.strides[1] -
              uniforms.pads[1];
          let xCol = offsetX + uniforms.dilations[1] * ((col %
              uniforms.itemsPerBlockRow) / uniforms.inChannels);
          let ch = col % uniforms.inChannels;
          if(xCol < uniforms.xShape[${e}] && xCol >= 0) {
            value = ${i};
          }
        }
        setOutputAtIndex(index, value);
      }
    }
   `}};function Ah(r,t){let e=r.length;return e>=3?t?[...r.slice(0,-3),r[e-3]*r[e-2],r[e-1]]:[...r.slice(0,-3),r[e-3],r[e-2]*r[e-1]]:!t&&e===1&&r[0]>1?[r[0],1]:null}function LK({x:r,filter:t,convInfo:e,backend:o,bias:n=null,preluActivationWeights:i=null,leakyreluAlpha:s=0,activation:a=null}){let l=e.dataFormat==="channelsLast",u=!l,c=!1,p=l&&e.filterHeight===e.inHeight&&e.filterWidth===e.inWidth&&e.padInfo.type==="VALID",d=[],m,f;if(p){let y=e.inHeight*e.inWidth*e.inChannels;m=me({inputs:{x:r},backend:o,attrs:{shape:[1,e.batchSize,y]}}),f=me({inputs:{x:t},backend:o,attrs:{shape:[1,y,e.outChannels]}})}else m=me({inputs:{x:r},backend:o,attrs:{shape:l?[e.batchSize,e.inHeight*e.inWidth,e.inChannels]:[e.batchSize,e.inChannels,e.inHeight*e.inWidth]}}),f=me({inputs:{x:t},backend:o,attrs:{shape:[1,e.inChannels,e.outChannels]}});if(d.push(m),d.push(f),i!=null){let y=Ah(i.shape,l);y!=null&&(i=me({inputs:{x:i},backend:o,attrs:{shape:y}}),d.push(i))}if(n!=null){let y=Ah(n.shape,l);y!=null&&(n=me({inputs:{x:n},backend:o,attrs:{shape:y}}),d.push(n))}let g=Qs({a:l?m:f,b:l?f:m,transposeA:u,transposeB:c,backend:o,bias:n,activation:a,preluActivationWeights:i,leakyreluAlpha:s}),x=me({inputs:{x:g},backend:o,attrs:{shape:e.outShape}});d.push(g);for(let y of d)o.disposeData(y.dataId);return x}function MK({x:r,filter:t,convInfo:e,backend:o,bias:n=null,preluActivationWeights:i=null,leakyreluAlpha:s=0,activation:a=null}){let{filterWidth:l,filterHeight:u,inChannels:c,strideWidth:p,strideHeight:d,padInfo:m,outWidth:f,outHeight:g,dilationWidth:x,dilationHeight:y,dataFormat:b}=e,I=b==="channelsLast",N=l*u*c,F=g*f,B=I?[e.batchSize,F,N]:[e.batchSize,N,F],z=new Ph(B,I),H=[{type:"int32",data:[m.top,m.left]},{type:"int32",data:[d,p]},{type:"int32",data:[y,x]},{type:"int32",data:[f]},{type:"int32",data:[c*l]},{type:"int32",data:[c]}],K=o.runWebGPUProgram(z,[r],r.dtype,H),X=[];X.push(K);let te=me({inputs:{x:t},backend:o,attrs:{shape:[1,N,-1]}});if(X.push(te),i!=null){let Te=Ah(i.shape,I);Te!=null&&(i=me({inputs:{x:i},backend:o,attrs:{shape:Te}}),X.push(i))}if(n!=null){let Te=Ah(n.shape,I);Te!=null&&(n=me({inputs:{x:n},backend:o,attrs:{shape:Te}}),X.push(n))}let xe=Qs({a:I?K:te,b:I?te:K,transposeA:!I,transposeB:!1,backend:o,bias:n,activation:a,preluActivationWeights:i,leakyreluAlpha:s}),be=me({inputs:{x:xe},backend:o,attrs:{shape:e.outShape}});X.push(xe);for(let Te of X)o.disposeData(Te.dataId);return be}function Dh({x:r,filter:t,convInfo:e,backend:o,bias:n=null,preluActivationWeights:i=null,leakyreluAlpha:s=0,activation:a=null}){let l=n!=null,u=i!=null,c=e.dataFormat==="channelsLast",p=c&&e.filterHeight===e.inHeight&&e.filterWidth===e.inWidth&&e.padInfo.type==="VALID",d=G().getBool("WEBGPU_USE_NAIVE_CONV2D_DEBUG");if(!d&&(p||e.filterHeight===1&&e.filterWidth===1&&e.dilationHeight===1&&e.dilationWidth===1&&e.strideHeight===1&&e.strideWidth===1&&(e.padInfo.type==="SAME"||e.padInfo.type==="VALID")))return LK({x:r,filter:t,convInfo:e,backend:o,bias:n,activation:a,preluActivationWeights:i,leakyreluAlpha:s});let m=G().getNumber("WEBGPU_THRESHOLD_TO_INCREASE_WORKGROUPS_FOR_MATMUL"),f=m>-1?m:o.thresholdToIncreaseWorkgroups,g=e.batchSize*Math.ceil(e.outHeight*e.outWidth/32)*Math.ceil(e.outChannels/32);if(G().getBool("WEBGPU_CONV_SEPARATE_IM2COL_SHADER")||g<=f)return MK({x:r,filter:t,convInfo:e,backend:o,bias:n,preluActivationWeights:i,leakyreluAlpha:s,activation:a});let x,y=[e.padInfo.top,e.padInfo.left],b=[{type:"int32",data:[e.filterHeight,e.filterWidth]},{type:"int32",data:[...y]},{type:"int32",data:[e.strideHeight,e.strideWidth]},{type:"int32",data:[e.dilationHeight,e.dilationWidth]}];if(d)x=new $h(e,l,a,u);else{let B=c?e.outHeight*e.outWidth:e.outChannels,z=c?e.outChannels:e.outHeight*e.outWidth,H=e.filterHeight*e.filterWidth*e.inChannels;b.push({type:"int32",data:[B]},{type:"int32",data:[z]},{type:"int32",data:[H]});let K=o.adapterInfo.isIntel();x=new Rh(e,B,z,H,l,a,u,K)}let I=[],N=[r,t];l&&(!c&&n.shape.length===1&&(n=me({inputs:{x:n},backend:o,attrs:{shape:[n.shape[0],1,1]}}),I.push(n)),N.push(n)),u&&(!c&&i.shape.length===1&&(i=me({inputs:{x:i},backend:o,attrs:{shape:[i.shape[0],1,1]}}),I.push(i)),N.push(i)),a==="leakyrelu"&&(b.push({type:"float32",data:[s]}),x.uniforms+=" alpha : f32,");let F=o.runWebGPUProgram(x,N,r.dtype,b);for(let B of I)o.disposeData(B.dataId);return F}function BK(r){let{inputs:t,attrs:e,backend:o}=r,{x:n,filter:i}=t,{strides:s,pad:a,dataFormat:l,dilations:u,dimRoundingMode:c}=e,p=$.convertConv2DDataFormat(l),d=$.computeConv2DInfo(n.shape,i.shape,s,u,a,c,!1,p);return Dh({x:n,filter:i,convInfo:d,backend:o})}var DE={kernelName:sl,backendName:"webgpu",kernelFunc:BK};var Fh=class{constructor(t){this.variableNames=["dy","W"],this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, strides : vec2<i32>, outBackprop : vec4<i32>,",this.workgroupSize=[64,1,1],this.size=!1,this.isVec4=!1,this.workPerThread=1,this.outputShape=t.inShape,this.isChannelsLast=t.dataFormat==="channelsLast",this.isVec4=this.isChannelsLast&&t.outChannels%4===0&&t.inChannels%4===0,this.isVec4?(this.workPerThread=2,this.outputComponent=4,this.workgroupSize=[4,4,4],this.dispatchLayout={x:[3],y:[2],z:[0,1]},this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize,[4,this.workPerThread,1])):(this.size=!0,this.workPerThread=1,this.workgroupSize=[64,1,1],this.dispatchLayout=oe(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize)),this.shaderKey=`conv2DDerInput_${this.isChannelsLast}_${this.isVec4}_${this.workPerThread}`}getUserCode(){let t=this.isChannelsLast?1:2,e=this.isChannelsLast?2:3,o=this.isChannelsLast?3:1,n=`
    ${Q()} {
      let batch = i32(globalId.z) / uniforms.outShape[1];
      let r = i32(globalId.z) % uniforms.outShape[1];
      let c = i32(globalId.y) * ${this.workPerThread};
      let d1 = i32(globalId.x) * 4;

      let dyCorner = vec2<i32>(r, c) - uniforms.pads;

      // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
      // ? = to be determined. : = across all values in that axis.
      var dotProd: array<vec4<f32>, ${this.workPerThread}>;
      for (var i = 0; i < ${this.workPerThread}; i++) {
        dotProd[i] = vec4<f32>(0.0);
      }
      for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + 1) {
        let dyR = f32(dyCorner.x + wR) / f32(uniforms.strides.x);
        let wRPerm = uniforms.filterDims.x - 1 - wR;
        if (dyR < 0.0 || dyR >= f32(uniforms.outBackprop[1]) ||
            fract(dyR) > 0.0) {
          continue;
        }
        let idyR = i32(dyR);

        for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + 1) {
          let dyC = f32(dyCorner.y + wC) / f32(uniforms.strides.y);
          let dyC2 = f32(dyCorner.y + 1 + wC) / f32(uniforms.strides.y);
          let wCPerm = uniforms.filterDims.y - 1 - wC;
          var bDyCVal = true;
          var bDyCVal2 = true;
          if (dyC < 0.0 || dyC >= f32(uniforms.outBackprop[2]) ||
              fract(dyC) > 0.0) {
            bDyCVal = false;
          }
          if (dyC2 < 0.0 || dyC2 >= f32(uniforms.outBackprop[2]) ||
              fract(dyC2) > 0.0) {
            bDyCVal2 = false;
          }

          let idyC = i32(dyC);
          let idyC2 = i32(dyC2);
          if (bDyCVal && bDyCVal2) {
            let d2Length = uniforms.outBackprop[3];
            for (var d2 = 0; d2 < d2Length; d2 = d2 + 4) {
              let wValue0 = getW(wRPerm, wCPerm, d1, d2);
              let wValue1 = getW(wRPerm, wCPerm, d1 + 1, d2);
              let wValue2 = getW(wRPerm, wCPerm, d1 + 2, d2);
              let wValue3 = getW(wRPerm, wCPerm, d1 + 3, d2);
              var xValue =  getDy(batch, idyR, idyC, d2);
              let tmpval = vec4<f32>(dot(xValue, wValue0),
                                     dot(xValue, wValue1),
                                     dot(xValue, wValue2),
                                     dot(xValue, wValue3));
              dotProd[0] = dotProd[0] + tmpval;
              xValue = getDy(batch, idyR, idyC2, d2);
              dotProd[1] = dotProd[1] + vec4<f32>(dot(xValue, wValue0),
                                                  dot(xValue, wValue1),
                                                  dot(xValue, wValue2),
                                                  dot(xValue, wValue3));
            }
          } else if (bDyCVal) {
            let d2Length = uniforms.outBackprop[3];
            for (var d2 = 0; d2 < d2Length; d2 = d2 + 4) {
              let wValue0 = getW(wRPerm, wCPerm, d1, d2);
              let wValue1 = getW(wRPerm, wCPerm, d1 + 1, d2);
              let wValue2 = getW(wRPerm, wCPerm, d1 + 2, d2);
              let wValue3 = getW(wRPerm, wCPerm, d1 + 3, d2);
              var xValue =  getDy(batch, idyR, idyC, d2);
              let tmpval = vec4<f32>(dot(xValue, wValue0),
                                     dot(xValue, wValue1),
                                     dot(xValue, wValue2),
                                     dot(xValue, wValue3));
              dotProd[0] = dotProd[0] + tmpval;
            }
          } else if (bDyCVal2) {
            let d2Length = uniforms.outBackprop[3];
            for (var d2 = 0; d2 < d2Length; d2 = d2 + 4) {
              let wValue0 = getW(wRPerm, wCPerm, d1, d2);
              let wValue1 = getW(wRPerm, wCPerm, d1 + 1, d2);
              let wValue2 = getW(wRPerm, wCPerm, d1 + 2, d2);
              let wValue3 = getW(wRPerm, wCPerm, d1 + 3, d2);
              var xValue =  getDy(batch, idyR, idyC2, d2);
              let tmpval = vec4<f32>(dot(xValue, wValue0),
                                     dot(xValue, wValue1),
                                     dot(xValue, wValue2),
                                     dot(xValue, wValue3));
              dotProd[1] = dotProd[1] + tmpval;
            }
          }
        }
      }

      for (var i = 0; i < ${this.workPerThread}; i = i + 1) {
        let coords = vec4<i32>(batch, r, c + i, d1);
        if (coordsInBounds4D(coords, uniforms.outShape)) {
          setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], dotProd[i]);
        }
      }
    }
    `;return this.isVec4?`
    ${n}
    `:`
    ${Q("index")} {
      if(index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords[0];
        let d1 = coords[${o}];

        let dyCorner = vec2<i32>(coords[${t}], coords[${e}]) - uniforms.pads;
        let dyRCorner = dyCorner.x;
        let dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + 1) {
          let dyR = (f32(dyRCorner) + f32(wR)) / f32(uniforms.strides.x);
          let wRPerm = uniforms.filterDims.x - 1 - wR;
          if (dyR < 0.0 || dyR >= f32(uniforms.outBackprop[1]) || fract(dyR) > 0.0 ||
              wRPerm < 0) {
            continue;
          }
          let idyR = i32(dyR);

          for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + 1) {
            let dyC = (f32(dyCCorner) + f32(wC)) / f32(uniforms.strides.y);
            let wCPerm = uniforms.filterDims.y - 1 - wC;
            if (dyC < 0.0 || dyC >= f32(uniforms.outBackprop[2]) ||
                fract(dyC) > 0.0 || wCPerm < 0) {
              continue;
            }
            let idyC = i32(dyC);

            for (var d2 = 0; d2 < uniforms.outBackprop[3]; d2 = d2 + 1) {
              let xValue = ${this.isChannelsLast?"getDy(batch, idyR, idyC, d2)":"getDy(batch, d2, idyR, idyC)"};
              let wValue = getW(wRPerm, wCPerm, d1, d2);
              dotProd = dotProd + xValue * wValue;
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
  `}},Oh=class{constructor(t){this.variableNames=["x","dy"],this.uniforms="pads : vec2<i32>, strides : vec2<i32>, batchSize : i32, outHeight : i32, outWidth : i32, inHeight : i32, inWidth : i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t.filterShape,this.dispatchLayout=oe(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize),this.isChannelsLast=t.dataFormat==="channelsLast",this.shaderKey=`conv2DDerFilter_${this.isChannelsLast}`}getUserCode(){return`
    ${Q("index")} {
      if(index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let wR = coords[0];
        let wC = coords[1];
        let d1 = coords[2];
        let d2 = coords[3];

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var b = 0; b < uniforms.batchSize; b = b + 1) {
          for (var yR = 0; yR < uniforms.outHeight; yR = yR + 1) {
            let xR = wR + yR * uniforms.strides[0] - uniforms.pads[0];
            if (xR < 0 || xR >= uniforms.inHeight) {
              continue;
            }

            for (var yC = 0; yC < uniforms.outWidth; yC = yC + 1) {
              let xC = wC + yC * uniforms.strides[1] - uniforms.pads[1];

              if (xC < 0 || xC >= uniforms.inWidth) {
                continue;
              }

              if (${this.isChannelsLast}) {
                let dyValue = getDy(b, yR, yC, d2);
                let xValue = getX(b, xR, xC, d1);
                dotProd = dotProd + xValue * dyValue;
              } else {
                let dyValue = getDy(b, d2, yR, yC);
                let xValue = getX(b, d1, xR, xC);
                dotProd = dotProd + xValue * dyValue;
              }
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
  `}},Lh=class{constructor(t){this.variableNames=["x","dy"],this.uniforms=`pads : vec3<i32>, strides : vec3<i32>, batchSize : i32, outDepth : i32,
       outHeight : i32, outWidth : i32, inDepth : i32, inHeight : i32, inWidth : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t.filterShape,this.dispatchLayout=oe(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="conv3DDerFilter"}getUserCode(){return`
    ${Q("index")} {
      if(index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let wF = coords.x;
        let wR = coords.y;
        let wC = coords.z;
        let d1 = coords.w;
        let d2 = coords.u;

        var dotProd = 0.0;
        for (var b = 0; b < uniforms.batchSize; b++) {
          for (var yF = 0; yF < uniforms.outDepth; yF++) {
            let xF = wF + yF * uniforms.strides[0] - uniforms.pads[0];
            if (xF < 0 || xF >= uniforms.inDepth) {
              continue;
            }

            for (var yR = 0; yR < uniforms.outHeight; yR++) {
              let xR = wR + yR * uniforms.strides[1] - uniforms.pads[1];
              if (xR < 0 || xR >= uniforms.inHeight) {
                continue;
              }

              for (var yC = 0; yC < uniforms.outWidth; yC++) {
                let xC = wC + yC * uniforms.strides[2] - uniforms.pads[2];
                if (xC < 0 || xC >= uniforms.inWidth) {
                  continue;
                }

                let dyValue = getDy(b, yF, yR, yC, d2);
                let xValue = getX(b, xF, xR, xC, d1);
                dotProd += xValue * dyValue;
              }
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
  `}},Mh=class{constructor(t){this.variableNames=["dy","W"],this.uniforms=`filterDims : vec3<i32>, pads : vec3<i32>, strides : vec3<i32>,
      outDepth : i32, outHeight : i32, outWidth : i32, outChannels : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t.inShape,this.dispatchLayout=oe(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="conv3DDerInput"}getUserCode(){return`
    ${Q("index")} {
      if(index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords.x;
        let d1 = coords.u;

        let dyCorner = vec3<i32>(coords.y, coords.z, coords.w) - uniforms.pads;
        let dyFCorner = dyCorner.x;
        let dyRCorner = dyCorner.y;
        let dyCCorner = dyCorner.z;

        var dotProd = 0.0;
        for (var wF = 0; wF < uniforms.filterDims[0]; wF++) {
          let dyF = f32(dyFCorner + wF) / f32(uniforms.strides[0]);
          if (dyF < 0.0 || dyF >= f32(uniforms.outDepth) || fract(dyF) > 0.0) {
            continue;
          }
          let idyF = i32(dyF);

          let wFPerm = uniforms.filterDims[0] - 1 - wF;

          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {
            let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[1]);

            if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
              continue;
            }
            let idyR = i32(dyR);

            let wRPerm = uniforms.filterDims[1] - 1 - wR;

            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {
              let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[2]);

              if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
                continue;
              }
              let idyC = i32(dyC);

              let wCPerm = uniforms.filterDims[2] - 1 - wC;

              for (var d2 = 0; d2 < uniforms.outChannels; d2++) {
                let xValue = getDy(batch, idyF, idyR, idyC, d2);
                let wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
  `}};function VK(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,dy:i}=t,{strides:s,pad:a,dataFormat:l,dimRoundingMode:u,filterShape:c}=o,p=$.convertConv2DDataFormat(l),d=$.computeConv2DInfo(n.shape,c,s,1,a,u,!1,p),m=new Oh(d),f=[{type:"int32",data:[d.padInfo.top,d.padInfo.left]},{type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.batchSize]},{type:"int32",data:[d.outHeight]},{type:"int32",data:[d.outWidth]},{type:"int32",data:[d.inHeight]},{type:"int32",data:[d.inWidth]}];return e.runWebGPUProgram(m,[n,i],n.dtype,f)}var FE={kernelName:al,backendName:"webgpu",kernelFunc:VK};function WK(r=4){let t=i=>{switch(i){case 1:return"return W[getIndexFromCoords4D(coord, uniforms.wShape)];";case 4:return`
            let coord1 = vec4<i32>(coordX, coordY, col + 1, rowInner);
            let coord2 = vec4<i32>(coordX, coordY, col + 2, rowInner);
            let coord3 = vec4<i32>(coordX, coordY, col + 3, rowInner);
            let v0 = W[getIndexFromCoords4D(coord, uniforms.wShape)];
            let v1 = W[getIndexFromCoords4D(coord1, uniforms.wShape)];
            let v2 = W[getIndexFromCoords4D(coord2, uniforms.wShape)];
            let v3 = W[getIndexFromCoords4D(coord3, uniforms.wShape)];
            return vec4<f32>(v0, v1, v2, v3);
            `;default:throw new Error(`innerElementSize ${i} is not supported.`)}},o=`if (row < uniforms.dimAOuter && col < uniforms.dimInner) {
        ${`
      let outRow = row / uniforms.outShape[2];
      let outCol = row % uniforms.outShape[2];

      let WRow = col / (uniforms.filterDims[1] * uniforms.outBackprop[3]);
      let WCol = col / uniforms.outBackprop[3] % uniforms.filterDims[1];
      let xR = f32(outRow - uniforms.pads[0] + WRow) / f32(uniforms.strides[0]);
      let xC = f32(outCol - uniforms.pads[1] + WCol) / f32(uniforms.strides[1]);
      if (xR < 0.0 || xR >= f32(uniforms.outBackprop[1]) || fract(xR) > 0.0) {
        return ${ze(r)}(0.0);
      }
      if (xC < 0.0 || xC >= f32(uniforms.outBackprop[2]) || fract(xC) > 0.0) {
        return ${ze(r)}(0.0);
      }
      let coord = vec4<i32>(
          batch,
          i32(xR),
          i32(xC),
          col % uniforms.outBackprop[3]);
      return x[getIndexFromCoords4D(coord, uniforms.xShape)/${r}];`}
      }
      return ${ze(r)}(0.0);`;return`
  fn mm_readA(batch: i32, row : i32, col : i32) -> ${ze(r)} {
    ${o}
  }

  fn mm_readB(batch: i32, row : i32, col : i32) -> ${ze(r)} {
    let coordX = uniforms.filterDims.x - 1 -
        row / (uniforms.filterDims[1] * uniforms.outBackprop[3]);
    let coordY = uniforms.filterDims.y - 1 -
        (row / uniforms.outBackprop[3]) % uniforms.filterDims[1];
    if (row < uniforms.dimInner && col < uniforms.dimBOuter &&
        coordX >= 0 && coordY >= 0) {
      let rowInner = row % uniforms.outBackprop[3];
      let coord = vec4<i32>(coordX, coordY, col, rowInner);
      ${t(r)}
    }
    return ${ze(r)}(0.0);
  }

  fn mm_write(batch: i32, row : i32, col : i32, valueInput : ${ze(r)}) {
    if (row < uniforms.dimAOuter && col < uniforms.dimBOuter) {
      var value = valueInput;
      let outCoord = vec4<i32>(
          batch,
          row / uniforms.outShape[2],
          row % uniforms.outShape[2],
          col);
      result[getIndexFromCoords4D(outCoord, uniforms.outShape)/${r}] = value;
    }
  }`}var Bh=class{constructor(t){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, strides : vec2<i32>, outBackprop : vec4<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.outputShape=t.inShape,S.assert(t.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),this.isVec4=t.inChannels%4===0&&t.outChannels%4===0,this.dispatchLayout={x:[3],y:[1,2],z:[0]},this.workgroupSize=Dp(this.dispatchLayout,this.outputShape,this.isVec4),this.elementsPerThread=Fp(this.dispatchLayout,this.outputShape,this.isVec4),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize,this.elementsPerThread),this.isVec4&&(this.outputComponent=4,this.variableComponents=[4,1]),this.shaderKey=`conv2DDerInputMM_${this.isVec4}_${this.elementsPerThread}`}getUserCode(){let t=this.isVec4?Xs(this.elementsPerThread,this.workgroupSize):Ys(this.elementsPerThread,this.workgroupSize);return`
    ${WK(this.isVec4?4:1)}
    ${t}
    `}};function zK(r){let{inputs:t,backend:e,attrs:o}=r,{dy:n,filter:i}=t,{inputShape:s,strides:a,pad:l,dataFormat:u,dimRoundingMode:c}=o,p=$.convertConv2DDataFormat(u),d=$.computeConv2DInfo(s,i.shape,a,1,l,c,!1,p),m=[{type:"int32",data:[d.filterHeight,d.filterWidth]},{type:"int32",data:[d.filterHeight-1-d.padInfo.top,d.filterWidth-1-d.padInfo.left]},{type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.batchSize,d.outHeight,d.outWidth,d.outChannels]}],f;if(G().getBool("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE")||d.dataFormat!=="channelsLast")f=new Fh(d);else{f=new Bh(d);let g=d.inHeight*d.inWidth,x=d.inChannels,y=d.filterHeight*d.filterWidth*d.outChannels;m.push({type:"uint32",data:[g]},{type:"uint32",data:[x]},{type:"uint32",data:[y]})}return e.runWebGPUProgram(f,[n,i],"float32",m)}var OE={kernelName:ll,backendName:"webgpu",kernelFunc:zK};var Vh=class{constructor(t){this.variableNames=["x","W"],this.uniforms="filterDims: vec3<i32>, pads: vec3<i32>, strides: vec3<i32>, dilations: vec3<i32>,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t.outShape,this.dispatchLayout=oe(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="conv3dnaive"}getUserCode(){return`
    ${Q("index")} {
      if (index < uniforms.size) {
        let coords = getOutputCoords();
        let batch = coords.x;
        let d2 = coords.u;

        let xFRCCorner = vec3<i32>(coords.y, coords.z, coords.w) * uniforms.strides - uniforms.pads;
        let xFCorner = xFRCCorner.x;
        let xRCorner = xFRCCorner.y;
        let xCCorner = xFRCCorner.z;

        let inputDepthNearestVec4 = (uniforms.xShape.u / 4) * 4;
        let inputDepthVec4Remainder = uniforms.xShape.u % 4;

        var dotProd = 0.0;
        for (var wF = 0; wF < uniforms.filterDims[0]; wF++) {
          let xF = xFCorner + wF * uniforms.dilations[0];
          if (xF < 0 || xF >= uniforms.xShape.y) {
            continue;
          }

          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {
            let xR = xRCorner + wR * uniforms.dilations[1];
            if (xR < 0 || xR >= uniforms.xShape.z) {
              continue;
            }

            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {
              let xC = xCCorner + wC * uniforms.dilations[2];
              if (xC < 0 || xC >= uniforms.xShape.w) {
                continue;
              }

              for (var d1 = 0; d1 < inputDepthNearestVec4; d1 += 4) {
                let xValues = vec4<f32>(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                let wValues = vec4<f32>(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (inputDepthVec4Remainder == 1) {
                dotProd += getX(batch, xF, xR, xC, inputDepthNearestVec4) *
                  getW(wF, wR, wC, inputDepthNearestVec4, d2);
              } else if (inputDepthVec4Remainder == 2) {
                let xValues = vec2<f32>(
                  getX(batch, xF, xR, xC, inputDepthNearestVec4),
                  getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1)
                );
                let wValues = vec2<f32>(
                  getW(wF, wR, wC, inputDepthNearestVec4, d2),
                  getW(wF, wR, wC, inputDepthNearestVec4 + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (inputDepthVec4Remainder == 3) {
                let xValues = vec3<f32>(
                  getX(batch, xF, xR, xC, inputDepthNearestVec4),
                  getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1),
                  getX(batch, xF, xR, xC, inputDepthNearestVec4 + 2)
                );
                let wValues = vec3<f32>(
                  getW(wF, wR, wC, inputDepthNearestVec4, d2),
                  getW(wF, wR, wC, inputDepthNearestVec4 + 1, d2),
                  getW(wF, wR, wC, inputDepthNearestVec4 + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }`}};function UK(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,filter:i}=t,{strides:s,pad:a,dilations:l}=o,u=$.computeConv3DInfo(n.shape,i.shape,s,l,a),c=[u.padInfo.front,u.padInfo.top,u.padInfo.left],p=[{type:"int32",data:[u.filterDepth,u.filterHeight,u.filterWidth]},{type:"int32",data:[...c]},{type:"int32",data:[u.strideDepth,u.strideHeight,u.strideWidth]},{type:"int32",data:[u.dilationDepth,u.dilationHeight,u.dilationWidth]}],d=new Vh(u),m=It(n.dtype,i.dtype);return e.runWebGPUProgram(d,[n,i],m,p)}var LE={kernelName:ul,backendName:"webgpu",kernelFunc:UK};function GK(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,dy:i}=t,{strides:s,pad:a,filterShape:l}=o,u=$.computeConv3DInfo(n.shape,l,s,1,a),c=new Lh(u),p=[{type:"int32",data:[u.padInfo.front,u.padInfo.top,u.padInfo.left]},{type:"int32",data:[u.strideDepth,u.strideHeight,u.strideWidth]},{type:"int32",data:[u.batchSize]},{type:"int32",data:[u.outDepth]},{type:"int32",data:[u.outHeight]},{type:"int32",data:[u.outWidth]},{type:"int32",data:[u.inDepth]},{type:"int32",data:[u.inHeight]},{type:"int32",data:[u.inWidth]}];return e.runWebGPUProgram(c,[n,i],i.dtype,p)}var ME={kernelName:Zd,backendName:"webgpu",kernelFunc:GK};function HK(r){let{inputs:t,backend:e,attrs:o}=r,{dy:n,filter:i}=t,{strides:s,pad:a,inputShape:l}=o,u=$.computeConv3DInfo(l,i.shape,s,1,a),c=new Mh(u),p=[{type:"int32",data:[u.filterDepth,u.filterHeight,u.filterWidth]},{type:"int32",data:[u.filterDepth-1-u.padInfo.front,u.filterHeight-1-u.padInfo.top,u.filterWidth-1-u.padInfo.left]},{type:"int32",data:[u.strideDepth,u.strideHeight,u.strideWidth]},{type:"int32",data:[u.outDepth]},{type:"int32",data:[u.outHeight]},{type:"int32",data:[u.outWidth]},{type:"int32",data:[u.outChannels]}];return e.runWebGPUProgram(c,[n,i],n.dtype,p)}var BE={kernelName:cl,backendName:"webgpu",kernelFunc:HK};var KK=ke({opType:ie.COS}),VE={kernelName:pl,backendName:"webgpu",kernelFunc:KK};var qK=ke({opType:ie.COSH}),WE={kernelName:dl,backendName:"webgpu",kernelFunc:qK};var Wh=class{constructor(t,e,o,n){this.variableNames=["Image","Boxes","BoxInd"],this.uniforms="extrapolationValue : f32,",this.workgroupSize=[64,1,1],this.size=!0;let[i]=e;this.outputShape=[i,o[0],o[1],t],this.dispatchLayout=oe(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize),this.methodId=n==="bilinear"?1:0,this.cropHeightBiggerThan1=this.outputShape[1]>1,this.cropWidthBiggerThan1=this.outputShape[2]>1,this.shaderKey=`cropAndResize_${this.methodId}_${this.cropHeightBiggerThan1}_${this.cropWidthBiggerThan1}`}getUserCode(){let[t,e]=["f32(uniforms.imageShape[1] - 1)","f32(uniforms.imageShape[2] - 1)"],[o,n,i]=this.cropHeightBiggerThan1?[`(${t} / f32(uniforms.outShape[1] - 1))`,"(y2-y1) * height_ratio",`y1*${t} + f32(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${t}`],[s,a,l]=this.cropWidthBiggerThan1?[`(${e} / f32(uniforms.outShape[2] - 1))`,"(x2-x1) * width_ratio",`x1*${e} + f32(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${e}`];return`
    ${Q("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let height_ratio = f32(${o});
        let width_ratio = f32(${s});
        let b = coords[0];
        let y = coords[1];
        let x = coords[2];
        let d = coords[3];
        // get box vals
        let y1 = getBoxes(b, 0);
        let x1 = getBoxes(b, 1);
        let y2 = getBoxes(b, 2);
        let x2 = getBoxes(b, 3);
        // get image in batch index
        let bInd = i32(round(getBoxInd(b)));
        if(bInd < 0 || bInd >= uniforms.outShape[0]) {
          return;
        }
        let height_scale = ${n};
        let width_scale = ${a};
        let in_y = ${i};
        if( in_y < 0.0 || in_y > ${t} ) {
          setOutputAtIndex(index, uniforms.extrapolationValue);
          return;
        }
        let in_x = ${l};
        if( in_x < 0.0 || in_x > ${e} ) {
          setOutputAtIndex(index, uniforms.extrapolationValue);
          return;
        }
        let sourceFracIndexCR = vec2<f32>(in_x,in_y);
        if(${this.methodId} == 1) {
          // Compute the four integer indices.
          let sourceFloorCR = vec2<i32>(sourceFracIndexCR);
          let sourceCeilCR = vec2<i32>(ceil(sourceFracIndexCR));
          let topLeft = getImage(bInd, sourceFloorCR.y, sourceFloorCR.x, d);
          let bottomLeft = getImage(bInd, sourceCeilCR.y, sourceFloorCR.x, d);
          let topRight = getImage(bInd, sourceFloorCR.y, sourceCeilCR.x, d);
          let bottomRight = getImage(bInd, sourceCeilCR.y, sourceCeilCR.x, d);
          let fracCR = sourceFracIndexCR - vec2<f32>(sourceFloorCR);
          let top = topLeft + (topRight - topLeft) * fracCR.x;
          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          let newValue = top + (bottom - top) * fracCR.y;
          setOutputAtIndex(index, newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          let sourceNearestCR = vec2<i32>(floor(
            sourceFracIndexCR + vec2<f32>(0.5,0.5)));
          let newValue = getImage(
            bInd, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutputAtIndex(index, newValue);
        }
      }
    }
    `}};var jK=r=>{let{inputs:t,backend:e,attrs:o}=r,{image:n,boxes:i,boxInd:s}=t,{cropSize:a,method:l,extrapolationValue:u}=o,c=new Wh(n.shape[3],i.shape,a,l),p=[{type:"float32",data:[u]}];return e.runWebGPUProgram(c,[n,i,s],"float32",p)},zE={kernelName:hl,backendName:"webgpu",kernelFunc:jK};var bc=function(r){return r.Prod="*",r.Sum="+",r}(bc||{}),Gp=class{constructor(t,e,o,n){this.variableNames=["x"],this.uniforms="index : f32,",this.size=!0,this.workgroupSize=[128,1,1],this.outputShape=e,this.dispatchLayout=oe(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize),this.exclusive=o,this.reverse=n,this.op=t,this.shaderKey=`cum_${this.op}_${this.exclusive}_${this.reverse}`}getUserCode(){let t=this.outputShape.length,e=this.op===bc.Prod?"1.0":"0.0",o=this.exclusive?e:`getX(${UE(t,"coords",this.op)})`,n=this.outputShape[this.outputShape.length-1],i="",s="";return this.exclusive?(i=this.reverse?`end != ${n-1}`:"end != 0",s=this.reverse?"end + 1":"end - 1"):(i=this.reverse?`end + pow2 < ${n}`:"end >= pow2",s=this.reverse?"end + pow2":"end - pow2"),`
      ${Q("index")} {
       if (index < uniforms.size) {
         var coords = getCoordsFromIndex(index);

         let end = ${GE(t,"coords",this.op)};
         var val = ${o};
         let pow2 = i32(pow(2.0, uniforms.index));
         if (${i}) {
           let idx = ${s};
           ${GE(t,"coords",this.op)} = idx;
           val ${this.op}= getX(${UE(t,"coords",this.op)});
         }
         setOutputAtIndex(index, val);
       }
      }
    `}};function UE(r,t,e){if(r===1)return`${t}`;if(r===2)return`${t}.x, ${t}.y`;if(r===3)return`${t}.x, ${t}.y, ${t}.z`;if(r===4)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative ${e} for rank ${r} is not yet supported`)}function GE(r,t,e){if(r===1)return`${t}`;if(r===2)return`${t}.y`;if(r===3)return`${t}.z`;if(r===4)return`${t}.w`;throw Error(`Cumulative ${e} for rank ${r} is not yet supported`)}function zh(r,t,e,o,n,i){let s=t.shape.length,a=$.getAxesPermutation([o],s),l=t;a!=null&&(l=mr({inputs:{x:t},backend:e,attrs:{perm:a}}));let u=$.getInnerMostAxes(1,s)[0];if(u!==s-1)throw new Error(`WebGPU cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${o}`);let c=l.shape[u],p=$t({inputs:{x:l},backend:e});for(let d=0;d<=Math.ceil(Math.log2(c))-1;d++){let m=new Gp(r,l.shape,!1,i),f=p,g=[{type:"float32",data:[d]}];p=e.runWebGPUProgram(m,[p],p.dtype,g),e.disposeData(f.dataId)}if(n){let d=new Gp(r,l.shape,n,i),m=p,f=[{type:"float32",data:[0]}];p=e.runWebGPUProgram(d,[p],p.dtype,f),e.disposeData(m.dataId)}if(a!=null){let d=$.getUndoAxesPermutation(a),m=mr({inputs:{x:p},backend:e,attrs:{perm:d}});return e.disposeData(p.dataId),e.disposeData(l.dataId),m}return p}function XK(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{axis:i,exclusive:s,reverse:a}=o;return zh(bc.Prod,n,e,i,s,a)}var HE={kernelName:ml,backendName:"webgpu",kernelFunc:XK};function YK(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{axis:i,exclusive:s,reverse:a}=o;return zh(bc.Sum,n,e,i,s,a)}var KE={kernelName:fl,backendName:"webgpu",kernelFunc:YK};function QK(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,weights:i}=t,{size:s,binaryOutput:a}=o,l=n.shape.length===1,c=S.sizeFromShape(i.shape)>0,p=i.dtype,d=l?[n.shape[0]]:[n.shape[0],n.shape[1]],m=l?[s]:[n.shape[0],s],f=St({backend:e,attrs:{shape:m,value:0,dtype:p}}),g=new yc(d,c,a),x=[{type:"int32",data:[s]}],y=c?[n,i]:[n];return e.runWebGPUProgram(g,y,p,x,f)}var qE={kernelName:gl,backendName:"webgpu",kernelFunc:QK};var Uh=class{constructor(t,e){this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.uniforms="blockSize : i32,",this.outputShape=t,this.dispatchLayout=oe(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey=`depthToSpace_${e}`,this.dataFormat=e}getUserCode(){return`
      ${Q("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let h = ${this.getHeightCoordString()};
          let w = ${this.getWidthCoordString()};
          let d = ${this.getDepthCoordString()};

          let in_h = h / uniforms.blockSize;
          let offset_h = h % uniforms.blockSize;
          let in_w = w / uniforms.blockSize;
          let offset_w = w % uniforms.blockSize;
          let offset_d = (offset_h * uniforms.blockSize + offset_w) *
            ${this.getOutputDepthSize()};
          let in_d = d + offset_d;

          let rlt = ${this.getInputSamplingString()};
          setOutputAtIndex(index, rlt);
        }
      }`}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?"uniforms.outShape[3]":"uniforms.outShape[1]"}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};function ZK(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{blockSize:i,dataFormat:s}=o,a=n.shape[0],l=s==="NHWC"?n.shape[1]:n.shape[2],u=s==="NHWC"?n.shape[2]:n.shape[3],c=s==="NHWC"?n.shape[3]:n.shape[1],p=l*i,d=u*i,m=c/(i*i),f=s==="NHWC"?[a,p,d,m]:[a,m,p,d],g=[{type:"int32",data:[i]}],x=new Uh(f,s);return e.runWebGPUProgram(x,[n],n.dtype,g)}var jE={kernelName:xl,backendName:"webgpu",kernelFunc:ZK};var Gh=class{constructor(t,e,o,n=!1,i=null,s=!1){this.variableNames=["x","W"],this.uniforms="pads : vec2<i32>, inDims : vec2<i32>,",this.workgroupSize=[16,16,1],this.outputShape=t,this.dispatchLayout={x:[3],y:[2],z:[0,1]},this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize),n&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),this.addBias=n,this.activation=i,this.hasPreluActivation=s,this.filterHeight=e,this.filterWidth=o,this.shaderKey=`depthwiseNCHW_${this.activation}_${this.filterHeight}_${this.filterWidth}`}getUserCode(){let t=this.filterWidth*this.filterHeight,e=this.workgroupSize[0]*this.workgroupSize[1]*this.workgroupSize[2],o=this.workgroupSize[1]+this.filterHeight-1,n=this.workgroupSize[0]+this.filterWidth-1;return`
      ${or(this.activation,this.hasPreluActivation,!1,4)}

      var<workgroup> mm_Asub : array<array<f32, ${n}>, ${o}>;
      var<workgroup> mm_Bsub : array<array<f32, ${this.filterWidth}>, ${this.filterHeight}>;
      fn readX(batch : i32, channel : i32, row : i32, col : i32) -> f32 {
        var value = 0.0;
        if (row >=0 && row < uniforms.inDims[0] && col >=0 && col < uniforms.inDims[1])
        {
          value = getX(batch, channel, row, col);
        }
        return value;
      }

      ${Q()} {
        let coords = getOutputCoords();
        let batch = coords[0];
        let xRCCorner = vec2<i32>(coords.zw) - uniforms.pads;
        let channelMul = uniforms.wShape[3];
        let d1 = coords[1] / channelMul;
        let q = coords[1] % channelMul;

        let inputRowStart = xRCCorner.x;
        let inputColStart = xRCCorner.y;

        let localRow = i32(localId.y);
        let localCol = i32(localId.x);

        // Load one tile of X into local memory.
        for (var inputRow = localRow; inputRow < ${o}; inputRow = inputRow + ${this.workgroupSize[1]}) {
          for (var inputCol = localCol; inputCol < ${n}; inputCol = inputCol + ${this.workgroupSize[0]}) {
            let rowOffset = inputRow - localRow;
            let colOffset = inputCol - localCol;
            mm_Asub[inputRow][inputCol] = readX(batch, d1, inputRowStart + rowOffset, inputColStart + colOffset);
          }
        }

        // Load one tile of W into local memory.
        var wIndex = i32(localIndex);
        ${t<e?`if (wIndex < ${t})`:`for(; wIndex < ${t}; wIndex = wIndex + ${e})`}

        {
          let wRow = wIndex / ${this.filterWidth};
          let wCol = wIndex % ${this.filterWidth};
          mm_Bsub[wRow][wCol] = getW(wRow, wCol, d1, q);
        }

        workgroupBarrier();

        var value = 0.0;
        for (var wR = 0; wR < ${this.filterHeight}; wR = wR + 1) {
          for (var wC = 0; wC < ${this.filterWidth}; wC = wC + 1) {
            let xVal = mm_Asub[localRow + wR][localCol + wC];
            let wVal = mm_Bsub[wR][wC];
            value = fma(xVal, wVal, value);
          }
        }
        ${Jr(this.addBias,this.activation)}
        if (coordsInBounds4D(coords, uniforms.outShape)) {
          setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
        }
      }
    `}};var Sc=class{constructor(t,e=!1,o=null,n=!1){this.variableNames=["x","W"],this.uniforms="pads : vec2<i32>, inDims : vec2<i32>, virtualWidth : i32,",this.workgroupSize=[64,1,1],this.workPerThread=4,this.outputComponent=4,this.outputShape=t.outShape,this.virtualWidth=Math.ceil(this.outputShape[2]/this.workPerThread)*this.workPerThread;let i=[this.outputShape[0],this.outputShape[1],this.virtualWidth,this.outputShape[3]];this.dispatchLayout=oe(i),this.dispatch=Z(this.dispatchLayout,i,this.workgroupSize,[this.outputComponent*this.workPerThread,1,1]),S.assert(t.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),e&&this.variableNames.push("bias"),n&&this.variableNames.push("preluActivationWeights"),this.convInfo=t,this.addBias=e,this.activation=o,this.hasPreluActivation=n,this.shaderKey=`depthwiseVec4_${o}_${this.convInfo.filterHeight}_${this.convInfo.filterWidth}_${this.convInfo.strideHeight}_${this.convInfo.strideWidth}_${this.workPerThread}`}getUserCode(){let t=(this.workPerThread-1)*this.convInfo.strideWidth+this.convInfo.filterWidth,e=this.convInfo.strideHeight,o=this.convInfo.strideWidth;return`
      ${or(this.activation,this.hasPreluActivation,!0,4)}
      fn readX(batch : i32, row : i32, col : i32, channel : i32) -> vec4<f32> {
        var value = vec4<f32>(0.0);
        if (col >=0 && col < uniforms.inDims[1]) {
          value = getX(batch, row, col, channel);
        }
        return value;
      }

      ${Q("index")} {
        let width0 = uniforms.outShape[3] / ${this.outputComponent};
        let d1 = (index % width0) * ${this.outputComponent};
        var index1 = index / width0;
        let width1 = uniforms.virtualWidth / ${this.workPerThread};
        let c = (index1 % width1) * ${this.workPerThread};
        index1 = index1 / width1;
        let r = index1 % uniforms.outShape[1];
        let batch = index1 / uniforms.outShape[1];

        let xRCCorner = vec2<i32>(r, c) * vec2<i32>(${e}, ${o}) - uniforms.pads;

        let xRCorner = xRCCorner.x;
        let xCCorner = xRCCorner.y;
        var xVals : array<vec4<f32>, ${t}>;
        var dotProd : array<vec4<f32>, ${this.workPerThread}>;
        for (var i = 0; i < ${this.workPerThread}; i++) {
          dotProd[i] = vec4<f32>(0.0);
        }

        // Use constant instead of uniform can give better performance.
        for (var wR = 0; wR < ${this.convInfo.filterHeight}; wR = wR + 1) {
          let xR = xRCorner + wR;
          if (xR >=0 && xR < uniforms.inDims[0]) {
            for (var i = 0; i < ${t}; i++) {
              xVals[i] = readX(batch, xR, xCCorner + i, d1);
            }
            for (var wC = 0; wC < ${this.convInfo.filterWidth}; wC = wC + 1) {
              let wValue = getW(wR, wC, d1, 0);
              for (var i = 0; i < ${this.workPerThread}; i++) {
                dotProd[i] = fma(xVals[i * ${o} + wC], wValue, dotProd[i]);
              }
            }
          }
        }

        for (var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let coords = vec4<i32>(batch, r, c + i, d1);
          if (coordsInBounds4D(coords, uniforms.outShape)) {
            var value = dotProd[i];
            ${Jr(this.addBias,this.activation)}
            setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
          }
        }
      }
    `}};var wc=class{constructor(t,e=!1,o=null,n=!1){this.variableNames=["x","W"],this.uniforms=`pads : vec2<i32>, inDims : vec2<i32>, filterHeight : i32,
      filterWidth : i32, strides : vec2<i32>, dilations : vec2<i32>,`,this.workgroupSize=[256,1,1],this.size=!0,this.outputShape=t.outShape,this.dispatchLayout=oe(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize),this.isChannelsLast=t.dataFormat==="channelsLast",e&&this.variableNames.push("bias"),n&&this.variableNames.push("preluActivationWeights"),this.convInfo=t,this.addBias=e,this.activation=o,this.hasPreluActivation=n,this.shaderKey=`depthwise_${this.activation}_${this.isChannelsLast}`}getUserCode(){let t=this.isChannelsLast?"getX(batch, xR, xC, d1);":"getX(batch, d1, xR, xC);";return`
      ${or(this.activation,this.hasPreluActivation,!1,4)}

      ${Q("index")} {
        if (index < uniforms.size) {
          let coords = getOutputCoords();
          let batch = coords[0];
          let xRCCorner = vec2<i32>(coords.${this.isChannelsLast?"yz":"zw"}) * uniforms.strides - uniforms.pads;
          let d2 = coords[${this.isChannelsLast?3:1}];
          let channelMul = uniforms.wShape[3];
          let d1 = d2 / channelMul;
          let q = d2 % channelMul;

          let inputRowStart = xRCCorner.x;
          let inputColStart = xRCCorner.y;
          let inputRowEnd = inputRowStart + uniforms.filterHeight *
              uniforms.dilations[0];
          let inputColEnd = inputColStart + uniforms.filterWidth *
              uniforms.dilations[1];

          // Convolve x(?, ?, d1)|x(d1, ?, ?) with w(:, :, d1, q) to get
          // y(yR, yC, d2)|y(d2, yR, yC). ? = to be determined. : = across all
          // values in that axis. x(?, ?, d1) and y(yR, yC, d2) is for NHWC.
          // x(d1, ?, ?) and y(d2, yR, yC) is for NCHW.
          var value = 0.0;

          // Extract if checking out of for loop for performance.
          if (inputRowStart >= 0 && inputColStart >= 0 &&
            inputRowEnd < uniforms.inDims[0] &&
                inputColEnd < uniforms.inDims[1]) {
              for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {
                let xR = inputRowStart + wR * uniforms.dilations[0];

                for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {
                  let xC = inputColStart + wC * uniforms.dilations[1];

                  let xVal = ${t};
                  let wVal = getW(wR, wC, d1, q);
                  value = value + xVal * wVal;
                }
              }
            } else {
              for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {
                let xR = inputRowStart + wR * uniforms.dilations[0];

                if (xR < 0 || xR >= uniforms.inDims[0]) {
                  continue;
                }

                for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {
                  let xC = inputColStart + wC * uniforms.dilations[1];

                  if (xC < 0 || xC >= uniforms.inDims[1]) {
                    continue;
                  }

                  let xVal = ${t};
                  let wVal = getW(wR, wC, d1, q);
                  value = value + xVal * wVal;
                }
              }
            }
            ${Jr(this.addBias,this.activation)}
          setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
        }
      }
    `}};function JK(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,filter:i}=t,{strides:s,pad:a,dataFormat:l,dilations:u,dimRoundingMode:c}=o,p=$.convertConv2DDataFormat(l),d=u;d==null&&(d=[1,1]);let m=$.computeConv2DInfo(n.shape,i.shape,s,d,a,c,!0,p),f=[{type:"int32",data:[m.padInfo.top,m.padInfo.left]},{type:"int32",data:[m.inHeight,m.inWidth]}],g=m.dataFormat==="channelsLast",x;return!g&&m.inHeight>16&&m.inWidth>16&&m.strideHeight===1&&m.strideWidth===1&&m.dilationWidth===1&&m.dilationHeight===1&&m.inChannels===m.outChannels?x=new Gh(m.outShape,m.filterHeight,m.filterWidth):g&&m.outHeight>4&&m.outWidth>4&&m.strideWidth<=2&&m.inChannels===m.outChannels&&m.dilationHeight===1&&m.dilationWidth===1&&m.inChannels%4===0?(x=new Sc(m),f.push({type:"int32",data:[x.virtualWidth]})):(x=new wc(m),f.push({type:"int32",data:[m.filterHeight]},{type:"int32",data:[m.filterWidth]},{type:"int32",data:[m.strideHeight,m.strideWidth]},{type:"int32",data:[m.dilationHeight,m.dilationWidth]})),e.runWebGPUProgram(x,[n,i],n.dtype,f)}var XE={kernelName:yl,backendName:"webgpu",kernelFunc:JK};var Hh=class{constructor(t){this.variableNames=["x","dy"],this.uniforms=`strides : vec2<i32>, pads : vec2<i32>, filterDims : vec2<i32>, outHeight : i32,
      outWidth : i32, inHeight : i32, inWidth : i32, batchSize : i32, channelMul : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t.filterShape,this.dispatchLayout=oe(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="depthwise_conv2d_backprop_filter"}getUserCode(){return`
      ${Q("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let wR = coords[0];
        let wC = coords[1];
        let d1 = coords[2];
        let dm = coords[3];
        let d2 = d1 * uniforms.channelMul + dm;

        var dotProd = 0.0;
        for (var b = 0; b < uniforms.batchSize; b++) {
          for (var yR = 0; yR < uniforms.outHeight; yR++) {
            let xR = wR + yR * uniforms.strides[0] - uniforms.pads[0];

            if (xR < 0 || xR >= uniforms.inHeight) {
              continue;
            }

            for (var yC = 0; yC < uniforms.outWidth; yC++) {
              let xC = wC + yC * uniforms.strides[1] - uniforms.pads[1];

              if (xC < 0 || xC >= uniforms.inWidth) {
                continue;
              }

              let dyValue = getDy(b, yR, yC, d2);
              let xValue = getX(b, xR, xC, d1);
              dotProd += xValue * dyValue;
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
    `}},Kh=class{constructor(t){this.variableNames=["dy","W"],this.uniforms=`strides : vec2<i32>, pads : vec2<i32>, filterDims : vec2<i32>,
       outHeight : i32, outWidth : i32, channelMul : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t.inShape,this.dispatchLayout=oe(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="depthwise_conv2d_backprop_input"}getUserCode(){return`
      ${Q("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords[0];
        let d1 = coords[3];
        let dyCorner = coords.yz - uniforms.pads;
        let dyRCorner = dyCorner.x;
        let dyCCorner = dyCorner.y;

        var dotProd = 0.0;
        for (var wR = 0; wR < uniforms.filterDims[0]; wR++) {
          let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[0]);

          if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
            continue;
          }

          let idyR = i32(dyR);
          let wRPerm = uniforms.filterDims[0] - 1 - wR;

          for (var wC = 0; wC < uniforms.filterDims[1]; wC++) {
            let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[1]);

            if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
              continue;
            }

            let idyC = i32(dyC);
            let wCPerm = uniforms.filterDims[1] - 1 - wC;

            for (var dm = 0; dm < uniforms.channelMul; dm++) {
              let d2 = d1 * uniforms.channelMul + dm;
              let xValue = getDy(batch, idyR, idyC, d2);
              let wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
    `}};function eq(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,dy:i}=t,{strides:s,dilations:a,pad:l,dimRoundingMode:u,filterShape:c}=o,p=$.computeConv2DInfo(n.shape,c,s,a,l,u,!0),d=new Hh(p),m=[{type:"int32",data:[p.strideHeight,p.strideWidth]},{type:"int32",data:[p.padInfo.top,p.padInfo.left]},{type:"int32",data:[p.filterHeight,p.filterWidth]},{type:"int32",data:[p.outHeight]},{type:"int32",data:[p.outWidth]},{type:"int32",data:[p.inHeight]},{type:"int32",data:[p.inWidth]},{type:"int32",data:[p.batchSize]},{type:"int32",data:[p.outChannels/p.inChannels]}];return e.runWebGPUProgram(d,[n,i],"float32",m)}var YE={kernelName:vl,backendName:"webgpu",kernelFunc:eq};function tq(r){let{inputs:t,backend:e,attrs:o}=r,{dy:n,filter:i}=t,{strides:s,dilations:a,pad:l,dimRoundingMode:u,inputShape:c}=o,p=$.computeConv2DInfo(c,i.shape,s,a,l,u,!0),d=new Kh(p),m=[{type:"int32",data:[p.strideHeight,p.strideWidth]},{type:"int32",data:[p.filterHeight-1-p.padInfo.top,p.filterWidth-1-p.padInfo.left]},{type:"int32",data:[p.filterHeight,p.filterWidth]},{type:"int32",data:[p.outHeight]},{type:"int32",data:[p.outWidth]},{type:"int32",data:[p.outChannels/p.inChannels]}];return e.runWebGPUProgram(d,[n,i],n.dtype,m)}var QE={kernelName:bl,backendName:"webgpu",kernelFunc:tq};var qh=class{constructor(t){this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[t,t],this.dispatchLayout=oe(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="diag"}getUserCode(){return`
      ${Q("index")} {
        if (index < uniforms.size) {
          let coords = getOutputCoords();
          let value = select(0.0, getX(coords[0]), coords[0] == coords[1]);
          setOutputAtIndex(index, value);
        }
      }
    `}};function rq(r){let{inputs:t,backend:e}=r,{x:o}=t,n=[...o.shape,...o.shape],i=S.sizeFromShape(o.shape),s=me({inputs:{x:o},backend:e,attrs:{shape:[i]}}),a=new qh(i),l=e.runWebGPUProgram(a,[s],s.dtype),u=me({inputs:{x:l},backend:e,attrs:{shape:n}});return e.disposeData(s.dataId),e.disposeData(l.dataId),u}var ZE={kernelName:Sl,backendName:"webgpu",kernelFunc:rq};var jh=class{constructor(t){this.variableNames=["x","w"],this.uniforms="filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t.outShape,this.dispatchLayout=oe(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="dilation2d"}getUserCode(){return`
       ${Q("index")} {
         if (index < uniforms.size) {
           let neg_infinity = -3.4e38;
           let coords = getOutputCoords();
           let batch = coords.x;
           let d1 = coords.w;
           let outTopLeftCorner = coords.yz * uniforms.strides - uniforms.pads;
           let hBeg = outTopLeftCorner.x;
           let wBeg = outTopLeftCorner.y;

           var curVal = neg_infinity;
           for (var h = 0; h < uniforms.filterDims[0]; h = h + 1) {
             let hIn = hBeg + h * uniforms.dilations[0];

             if (hIn >= 0 && hIn < uniforms.xShape[1]) {
               for (var w = 0; w < uniforms.filterDims[1]; w = w + 1) {
                 let wIn = wBeg + w * uniforms.dilations[1];

                 if (wIn >= 0 && wIn < uniforms.xShape[2]) {
                   let val = getX(batch, hIn, wIn, d1) + getW(h, w, d1);
                   if (val > curVal) {
                     curVal = val;
                   }
                 }
               }
             }
           }

           setOutputAtIndex(index, curVal);
         }
       }
     `}};function oq(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,filter:i}=t,{strides:s,pad:a,dilations:l}=o,u=$.computeDilation2DInfo(n.shape,i.shape,s,a,"NHWC",l),c=[u.padInfo.top,u.padInfo.left],p=[{type:"int32",data:[u.filterHeight,u.filterWidth]},{type:"int32",data:[...c]},{type:"int32",data:[u.strideHeight,u.strideWidth]},{type:"int32",data:[u.dilationHeight,u.dilationWidth]}],d=new jh(u);return e.runWebGPUProgram(d,[n,i],n.dtype,p)}var JE={kernelName:wl,backendName:"webgpu",kernelFunc:oq};var Xh=class{constructor(t,e){if(this.variableNames=["x","w","dy"],this.uniforms="filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>, dySize: i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=t.inShape,this.dispatchLayout=oe(t.outShape),this.dispatch=Z(this.dispatchLayout,t.outShape,this.workgroupSize),e!=="float32"&&e!=="int32")throw new Error(`Dilation2DBackpropInput only supports float32 and int32
          types, does not support ${e} type.`);this.type=e,this.shaderKey="dilation2DBackpropInput"}getUserCode(){return`
       ${Q("index")} {
         if (index < uniforms.dySize) {
           let coords = getDyCoordsFromIndex(index);
           let b = coords[0];
           let r = coords[1];
           let c = coords[2];
           let d = coords[3];

           let dyCorner = vec2<i32>(r, c) * uniforms.strides - uniforms.pads;
           var curVal = -3.4e38;  // neg_infinity
           var xRMax = 0;
           var xCMax = 0;

           // In the case of multiple argmax branches, we only back-propagate
           // along the last branch, i.e., the one with largest value of
           // 'wR * uniforms.filterDims[1] + wC', similarly to the max-pooling
           // backward routines.
           for (var wR = 0; wR < uniforms.filterDims[0]; wR++) {
             let xR = dyCorner.x + wR * uniforms.dilations[0];

             if (xR >= 0 && xR < uniforms.xShape[1]) {
               for (var wC = 0; wC < uniforms.filterDims[1]; wC++) {
                 let xC = dyCorner.y + wC * uniforms.dilations[1];

                 if (xC >= 0 && xC < uniforms.xShape[2]) {
                   let val = getX(b, xR, xC, d) + getW(wR, wC, d);
                   if (val > curVal) {
                     curVal = val;
                     xRMax = xR;
                     xCMax = xC;
                   }
                 }
               }
             }
           }

           let flatIndexIn = d + uniforms.xShape[3] *
               (xCMax + uniforms.xShape[2] * (xRMax + uniforms.xShape[1] * b));
           let value = getDy(b, r, c, d);
           ${Zr("&result[flatIndexIn]","value",this.type)}
         }
       }
     `}},Yh=class{constructor(t,e,o){if(this.variableNames=["x","w","dy"],this.uniforms="filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>, dySize: i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=t.filterShape,this.dispatchLayout=oe(t.outShape),this.dispatch=Z(this.dispatchLayout,t.outShape,this.workgroupSize),o!=="float32"&&o!=="int32")throw new Error(`Dilation2DBackpropFilter only supports float32 and int32
          types, does not support ${o} type.`);this.type=o,this.shaderKey="dilation2DBackpropFilter"}getUserCode(){return`
       ${Q("index")} {
         if (index < uniforms.dySize) {
           let coords = getDyCoordsFromIndex(index);
           let b = coords[0];
           let r = coords[1];
           let c = coords[2];
           let d = coords[3];

           let dyCorner = vec2<i32>(r, c) * uniforms.strides - uniforms.pads;
           var curVal = -3.4e38;  // neg_infinity
           var wRMax = 0;
           var wCMax = 0;

           // In the case of multiple argmax branches, we only back-propagate
           // along the last branch, i.e., the one with largest value of
           // 'wR * uniforms.filterDims[1] + wC', similarly to the max-pooling
           // backward routines.
           for (var wR = 0; wR < uniforms.filterDims[0]; wR++) {
             let xR = dyCorner.x + wR * uniforms.dilations[0];

             if (xR >= 0 && xR < uniforms.xShape[1]) {
               for (var wC = 0; wC < uniforms.filterDims[1]; wC++) {
                 let xC = dyCorner.y + wC * uniforms.dilations[1];

                 if (xC >= 0 && xC < uniforms.xShape[2]) {
                   let val = getX(b, xR, xC, d) + getW(wR, wC, d);
                   if (val > curVal) {
                     curVal = val;
                     wRMax = wR;
                     wCMax = wC;
                   }
                 }
               }
             }
           }

           let flatIndexIn = d + uniforms.wShape[2] * (wCMax + wRMax * uniforms.wShape[1]);
           let value = getDy(b, r, c, d);
           ${Zr("&result[flatIndexIn]","value",this.type)}
         }
       }
     `}};function nq(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,filter:i,dy:s}=t,{strides:a,pad:l,dilations:u}=o,c=$.computeDilation2DInfo(n.shape,i.shape,a,l,"NHWC",u),p=i.dtype,d=new Yh(c,i.shape,p),m=[{type:"int32",data:[c.filterHeight,c.filterWidth]},{type:"int32",data:[c.padInfo.top,c.padInfo.left]},{type:"int32",data:[c.strideHeight,c.strideWidth]},{type:"int32",data:[c.dilationHeight,c.dilationWidth]},{type:"int32",data:[S.sizeFromShape(c.outShape)]}],f=St({backend:e,attrs:{shape:i.shape,value:0,dtype:p}});return e.runWebGPUProgram(d,[n,i,s],p,m,f)}var e3={kernelName:JS,backendName:"webgpu",kernelFunc:nq};function iq(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,filter:i,dy:s}=t,{strides:a,pad:l,dilations:u}=o,c=$.computeDilation2DInfo(n.shape,i.shape,a,l,"NHWC",u),p=n.dtype,d=new Xh(c,p),m=[{type:"int32",data:[c.filterHeight,c.filterWidth]},{type:"int32",data:[c.padInfo.top,c.padInfo.left]},{type:"int32",data:[c.strideHeight,c.strideWidth]},{type:"int32",data:[c.dilationHeight,c.dilationWidth]},{type:"int32",data:[S.sizeFromShape(c.outShape)]}],f=St({backend:e,attrs:{shape:c.inShape,value:0,dtype:p}});return e.runWebGPUProgram(d,[n,i,s],p,m,f)}var t3={kernelName:ZS,backendName:"webgpu",kernelFunc:iq};var Qh=class{constructor(t,e,o){this.variableNames=["Image"],this.uniforms="alpha: f32,",this.workgroupSize=[64,1,1],this.pixelsOpType=Hi.DRAW,this.size=!0,this.outputShape=t,this.dispatchLayout=oe(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize),this.type=e,this.textureFormat=o,this.shaderKey=`draw_${e}_${o}`}getUserCode(){let t,e=this.type==="float32"?"value":"value / 255.0";return t=`
      if (uniforms.numChannels == 1) {
        rgba[0] = ${e};
        rgba[1] = ${e};
        rgba[2] = ${e};
      } else {
        rgba[d] = ${e};
      }`,`
       @group(0) @binding(0) var outImage : texture_storage_2d<${this.textureFormat}, write>;
       ${Q("index")} {
         if (index < uniforms.size) {
           var rgba = vec4<f32>(0.0, 0.0, 0.0, uniforms.alpha);
           for (var d = 0; d < uniforms.numChannels; d = d + 1) {
             let value = f32(inBuf[index * uniforms.numChannels + d]);
             ${t}
           }
           rgba.x = rgba.x * rgba.w;
           rgba.y = rgba.y * rgba.w;
           rgba.z = rgba.z * rgba.w;
           let coords = getCoordsFromIndex(index);
           textureStore(outImage, vec2<i32>(coords.yx), rgba);
         }
       }
      `}};function sq(r){let{inputs:t,backend:e,attrs:o}=r,{image:n}=t,{canvas:i,options:s}=o,[a,l]=n.shape.slice(0,2),{imageOptions:u}=s||{},c=u?.alpha||1,p=e.device.features.has("bgra8unorm-storage")?"bgra8unorm":"rgba8unorm",d=[a,l],m=new Qh(d,n.dtype,p);i.width=l,i.height=a;let f="webgpu",g=i.getContext(f),x;g||(x=new OffscreenCanvas(l,a),g=x.getContext(f));let y=n.shape.length===3?n.shape[2]:1;g.configure({device:e.device,format:p,usage:GPUTextureUsage.STORAGE_BINDING,alphaMode:"premultiplied"});let b="int32",I=e.makeTensorInfo(d,b),N=e.tensorMap.get(I.dataId);N.resource=g.getCurrentTexture(),N.external=!0;let F=[{type:"uint32",data:[y]},{type:"float32",data:[c]}];if(e.runWebGPUProgram(m,[n],b,F,I),x){let B=i.getContext("2d");if(!B)throw new Error("Please make sure this canvas has only been used for 2d or webgpu context!");B.drawImage(x,0,0)}return e.disposeData(I.dataId),n}var r3={kernelName:mp,backendName:"webgpu",kernelFunc:sq};var lv=Ze({opType:Ce.MUL,cpuKernelImpl:LT,supportsComplex:!0}),o3={kernelName:yi,backendName:"webgpu",kernelFunc:lv};function uv(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{axis:i,keepDims:s}=o;return to(n,i,s,"sum",e)}var n3={kernelName:Tu,backendName:"webgpu",kernelFunc:uv};function aq(r){let{inputs:t,backend:e,attrs:o}=r,{equation:n}=o,i=t,{allDims:s,summedDims:a,idDims:l}=$.decodeEinsumEquation(n,i.length);$.checkEinsumDimSizes(s.length,l,i);let{path:u,steps:c}=$.getEinsumComputePath(a,l),p=c.length,d=null,m=s.length,f=[];for(let g=0;g<p;++g){for(let x of c[g]){let{permutationIndices:y,expandDims:b}=$.getEinsumPermutation(m,l[x]),I;$.isIdentityPermutation(y)?I=i[x]:(I=mr({inputs:{x:i[x]},backend:e,attrs:{perm:y}}),f.push(I));let N=I.shape.slice();for(let F=0;F<b.length;++F)N.splice(b[F],0,1);S.arraysEqual(I.shape,N)||(I=me({inputs:{x:I},backend:e,attrs:{shape:N}}),f.push(I)),d===null?d=I:(d=lv({inputs:{a:I,b:d},backend:e}),f.push(d))}g<p-1&&(u[g]>=0&&(d=uv({inputs:{x:d},backend:e,attrs:{axis:u[g]-(s.length-m),keepDims:!1}}),f.push(d)),m--)}for(let g of f)g!==d&&e.disposeData(g.dataId);return d}var i3={kernelName:_l,backendName:"webgpu",kernelFunc:aq};var lq=ke({opType:ie.ELU}),s3={kernelName:kl,backendName:"webgpu",kernelFunc:lq};var uq=r=>{let{inputs:t,backend:e}=r,{dy:o,y:n}=t,i=new Wn(Ce.ELU_DER,o.shape,n.shape);return e.runWebGPUProgram(i,[o,n],o.dtype)},a3={kernelName:Jd,backendName:"webgpu",kernelFunc:uq};var cq=Ze({opType:Ce.EQUAL,dtype:"bool",cpuKernelImpl:wT}),l3={kernelName:si,backendName:"webgpu",kernelFunc:cq};var pq=ke({opType:ie.ERF}),u3={kernelName:Il,backendName:"webgpu",kernelFunc:pq};var dq=ke({opType:ie.EXP,cpuKernelImpl:CT,dtype:"float32"}),c3={kernelName:ai,backendName:"webgpu",kernelFunc:dq};function Zh(r){let{inputs:t,attrs:e,backend:o}=r,{dim:n}=e,{input:i}=t,s=i.shape.length,a=i.shape.slice(),l=n;return n<0&&(S.assert(-(s+1)<=n,()=>`Axis must be in the interval [${-(s+1)}, ${s}]`),l=s+n+1),a.splice(l,0,1),me({inputs:{x:i},backend:o,attrs:{shape:a}})}var p3={kernelName:Tl,backendName:"webgpu",kernelFunc:Zh};var mq=ke({opType:ie.EXPM1,cpuKernelImpl:_T}),d3={kernelName:li,backendName:"webgpu",kernelFunc:mq};var Hp=class{constructor(t,e){this.variableNames=["real","imag"],this.outputShape=[],this.uniforms="exponentMultiplier : f32, denominator: f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=oe(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize),this.component=t,this.shaderKey=`fft_${t}`}getUserCode(){return`
    fn unaryOpComplex(real: f32, expR: f32, imag: f32, expI: f32) -> f32 {
      ${this.component==="real"?"return real * expR - imag * expI;":"return real * expI + imag * expR;"}
    }

    fn mulMatDFT(batch: i32, index: i32) -> f32 {
      let indexRatio = f32(index) / f32(uniforms.realShape[1]);
      let exponentMultiplierTimesIndexRatio =
          uniforms.exponentMultiplier * indexRatio;

      var result = 0.0;

      for (var i = 0; i < uniforms.realShape[1]; i = i + 1) {
        // x = (-2|2 * PI / N) * index * i;
        let x = exponentMultiplierTimesIndexRatio * f32(i);
        let expR = cos(x);
        let expI = sin(x);
        let real = getReal(batch, i);
        let imag = getImag(batch, i);

        result = result +
            unaryOpComplex(real, expR, imag, expI) / uniforms.denominator;
      }

      return result;
    }

    ${Q("index")} {
      if (index < uniforms.size) {
        let coords = getOutputCoords();
        setOutputAtIndex(index, mulMatDFT(coords[0], coords[1]));
      }
    }
  `}};function Jh(r,t,e){let o=e.tensorMap.get(r.dataId),n=S.sizeFromShape(r.shape),i=r.shape[r.shape.length-1],s=n/i,a=[],l=me({inputs:{x:r},backend:e,attrs:{shape:[s,i]}});a.push(l);let u=l.shape,c=new Hp("real",u),p=new Hp("imag",u),d=[{dataId:o.complexTensorInfos.real.dataId,dtype:o.complexTensorInfos.real.dtype,shape:u},{dataId:o.complexTensorInfos.imag.dataId,dtype:o.complexTensorInfos.imag.dtype,shape:u}],m=t?2*Math.PI:-2*Math.PI,f=t?u[1]:1,g=[{type:"float32",data:[m]},{type:"float32",data:[f]}],x=e.runWebGPUProgram(c,d,"float32",g);a.push(x);let y=e.runWebGPUProgram(p,d,"float32",g);a.push(y);let b=ho({inputs:{real:x,imag:y},backend:e});a.push(b);let I=me({inputs:{x:b},backend:e,attrs:{shape:r.shape}});return a.forEach(N=>e.disposeData(N.dataId)),I}function fq(r){let{inputs:t,backend:e}=r,{input:o}=t;return Jh(o,!1,e)}var m3={kernelName:El,backendName:"webgpu",kernelFunc:fq};var eg=class{constructor(t){this.outputShape=[],this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=oe(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="flipLeftRight"}getUserCode(){return`
      ${Q("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let coordX = uniforms.xShape[2] - coords[2] - 1;
          let outputValue = getX(coords[0], coords[1], coordX, coords[3]);
          setOutputAtIndex(index, outputValue);
        }
      }
    `}};var f3={kernelName:Rl,backendName:"webgpu",kernelFunc:({inputs:r,backend:t})=>{let{image:e}=r,o=t,n=new eg(e.shape);return o.runWebGPUProgram(n,[e],e.dtype)}};var hq=ke({opType:ie.FLOOR,cpuKernelImpl:kT}),h3={kernelName:ui,backendName:"webgpu",kernelFunc:hq};var gq=Ze({opType:Ce.FLOOR_DIV,cpuKernelImpl:IT,dtype:"int32"}),g3={kernelName:ci,backendName:"webgpu",kernelFunc:gq};var tg=class{constructor(t,e,o=!1){this.pixelsOpType=Hi.FROM_PIXELS,this.outputShape=[0],this.variableNames=[],this.workgroupSize=[256,1,1],this.outputShape=t,this.dispatchLayout=oe(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize,[e,1,1]),this.importVideo=o,this.shaderKey=`fromPixels_${this.importVideo}`}getUserCode(){let t=this.importVideo?"textureLoad(src, vec2<i32>(coords.yx));":"textureLoad(src, vec2<i32>(coords.yx), 0)";return`
      @binding(1) @group(0) var src: ${this.importVideo?"texture_external":"texture_2d<f32>"};
      ${Q("index")} {
        let flatIndex = index * uniforms.numChannels;
        if (flatIndex < uniforms.size) {
          let coords = getCoordsFromIndex(flatIndex);
          let values = ${t};
          for (var i = 0; i < uniforms.numChannels; i = i + 1) {
            result[flatIndex + i] = i32(floor(255.0 * values[i]));
          }
        }
      }
  `}};var x3={kernelName:bs,backendName:"webgpu",kernelFunc:xq},Cc,cv=G().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");function xq(r){let{inputs:t,backend:e,attrs:o}=r,{pixels:n}=t,{numChannels:i}=o;if(n==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let s=typeof HTMLVideoElement<"u"&&n instanceof HTMLVideoElement,a=typeof HTMLImageElement<"u"&&n instanceof HTMLImageElement,l=typeof HTMLCanvasElement<"u"&&n instanceof HTMLCanvasElement||typeof OffscreenCanvas<"u"&&n instanceof OffscreenCanvas,u=typeof ImageBitmap<"u"&&n instanceof ImageBitmap,[c,p]=s?[n.videoWidth,n.videoHeight]:[n.width,n.height],d=[p,c,i],m=G().getBool("WEBGPU_IMPORT_EXTERNAL_TEXTURE")&&s,f=s||a;if(u||l||f){let b;if(m)b=e.device.importExternalTexture({source:n});else{if(f){let pe=G().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(Cc==null||pe!==cv)&&(cv=pe,Cc=document.createElement("canvas").getContext("2d",{willReadFrequently:cv})),Cc.canvas.width=c,Cc.canvas.height=p,Cc.drawImage(n,0,0,c,p),n=Cc.canvas}let X=GPUTextureUsage.COPY_DST|GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.TEXTURE_BINDING,ue=e.textureManager.acquireTexture(d[1],d[0],"rgba8unorm",X);e.queue.copyExternalImageToTexture({source:n},{texture:ue},[d[1],d[0]]),b=ue}let I=S.sizeFromShape(d),N=S.computeStrides(d),F=new tg(d,i,m),B=[{type:"uint32",data:[I]},{type:"uint32",data:[i]},{type:"uint32",data:[...N]}],z=e.makeTensorInfo([p,c],"int32"),H=e.tensorMap.get(z.dataId);H.resource=b;let K=e.runWebGPUProgram(F,[z],"int32",B);return e.disposeData(z.dataId),K}let g=n.data,x=g;if(i!=null&&i!==4){x=new Uint8Array(n.width*n.height*i);let b=g.length,I=0;for(let N=0;N<b;N++)N%4<i&&(x[I++]=g[N])}let y=e.makeTensorInfo(d,"int32",new Int32Array(x));return e.uploadToGPU(y.dataId),y}var rg=class{constructor(t,e,o,n,i){this.uniforms="varianceEpsilon : f32,",this.workgroupSize=[128,1,1],this.size=!0,this.variableNames=["x","mean","variance"],$.assertAndGetBroadcastShape(t,e),$.assertAndGetBroadcastShape(t,o),this.outputShape=t,this.dispatchLayout=oe(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize),n!=null&&($.assertAndGetBroadcastShape(t,n),this.variableNames.push("offset")),i!=null&&($.assertAndGetBroadcastShape(t,i),this.variableNames.push("scale")),this.offsetShape=n,this.scaleShape=i,this.shaderKey="batchNorm"}getUserCode(){let t="0.0";this.offsetShape!=null&&(t="getOffsetByOutputIndex(index)");let e="1.0";return this.scaleShape!=null&&(e="getScaleByOutputIndex(index)"),`
      ${Q("index")} {
        if (index < uniforms.size)
        {
          let xValue = getXByOutputIndex(index);
          let meanValue = getMeanByOutputIndex(index);
          let varianValue = getVarianceByOutputIndex(index);
          let offsetValue = ${t};
          let scaleValue = ${e};
          let inv = scaleValue * inverseSqrt(varianValue + f32(uniforms.varianceEpsilon));
          setOutputAtIndex(index,dot(vec3<f32>(xValue, -meanValue, offsetValue), vec3<f32>(inv, inv, 1.0)));
        }
      }
  `}};var y3={kernelName:$l,backendName:"webgpu",kernelFunc:({inputs:r,attrs:t,backend:e})=>{let{x:o,scale:n,offset:i,mean:s,variance:a}=r,{varianceEpsilon:l}=t,u=e,c=[o,s,a],p=null;i!=null&&(p=i.shape,c.push(i));let d=null;n!=null&&(d=n.shape,c.push(n));let m=new rg(o.shape,s.shape,a.shape,p,d),f=[{type:"float32",data:[l]}];return u.runWebGPUProgram(m,c,o.dtype,f)}};function yq(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,filter:i,bias:s,preluActivationWeights:a}=t,{strides:l,pad:u,dataFormat:c,dilations:p,dimRoundingMode:d,activation:m,leakyreluAlpha:f}=o,g=$.convertConv2DDataFormat(c),x=$.computeConv2DInfo(n.shape,i.shape,l,p,u,d,!1,g);return Dh({x:n,filter:i,convInfo:x,backend:e,bias:s,preluActivationWeights:a,leakyreluAlpha:f,activation:m})}var v3={kernelName:ws,backendName:"webgpu",kernelFunc:yq};function vq(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,filter:i,bias:s,preluActivationWeights:a}=t,{strides:l,pad:u,dilations:c,dimRoundingMode:p,activation:d,leakyreluAlpha:m}=o,f=c;f==null&&(f=[1,1]),S.assert($.eitherStridesOrDilationsAreOne(l,f),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${f}'`);let g=$.computeConv2DInfo(n.shape,i.shape,l,f,u,p,!0),x=[n,i],y=s!=null,b=a!=null;y&&x.push(s),b&&x.push(a);let I=[{type:"int32",data:[g.padInfo.top,g.padInfo.left]},{type:"int32",data:[g.inHeight,g.inWidth]}],N;return g.outHeight>4&&g.outWidth>4&&g.strideWidth<=2&&g.inChannels===g.outChannels&&g.dilationHeight===1&&g.dilationWidth===1&&g.inChannels%4===0?(N=new Sc(g,y,d,b),I.push({type:"int32",data:[N.virtualWidth]})):(N=new wc(g,y,d,b),I.push({type:"int32",data:[g.filterHeight]},{type:"int32",data:[g.filterWidth]},{type:"int32",data:[g.strideHeight,g.strideWidth]},{type:"int32",data:[g.dilationHeight,g.dilationWidth]})),d==="leakyrelu"&&(I.push({type:"float32",data:[m]}),N.uniforms+=" alpha : f32,"),e.runWebGPUProgram(N,x,"float32",I)}var b3={kernelName:Cs,backendName:"webgpu",kernelFunc:vq};var og=class{constructor(t,e){this.variableNames=["A","indices"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=oe(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey=`gathernd_${t}`,this.sliceDim=t,this.uniforms=`sliceDim : i32, strides : ${ft(t)},`}getUserCode(){let t;return this.sliceDim>1?t="uniforms.strides[j]":t="uniforms.strides",`
      ${Q("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          var flattenIndex = 0;
          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
            let indexTemp = i32(round(getIndices(coords[0], j)));
            let strideNum = ${t};
            flattenIndex = flattenIndex + indexTemp * strideNum;
          }

          setOutputAtIndex(index, getA(flattenIndex, coords[1]));
        }
      }
      `}};function bq(r){let{inputs:t,backend:e}=r,{params:o,indices:n}=t,i=n.shape,s=i[i.length-1],a=S.sizeFromShape(o.shape),[l,u,c,p]=$.prepareAndValidate(o,n),d=me({inputs:{x:n},backend:e,attrs:{shape:[u,s]}}),m=me({inputs:{x:o},backend:e,attrs:{shape:[S.sizeFromShape(o.shape)/c,c]}});if(e.shouldExecuteOnCPU([o,n])||o.dtype==="string"){let b=e.readSync(n.dataId),I=e.bufferSync(o),N=TT(b,I,o.dtype,u,s,c,p,o.shape,a);return e.makeTensorInfo(l,o.dtype,N.values)}let f=new og(s,[u,c]),g=[{type:"int32",data:[s]},{type:"int32",data:p}],x=e.runWebGPUProgram(f,[m,d],m.dtype,g),y=me({inputs:{x},backend:e,attrs:{shape:l}});return e.disposeData(d.dataId),e.disposeData(m.dataId),e.disposeData(x.dataId),y}var S3={kernelName:Al,backendName:"webgpu",kernelFunc:bq};var ng=class{constructor(t,e){this.variableNames=["A","indices"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t.slice(),this.aShape=t,this.outputShape=e,this.dispatchLayout=oe(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="gather"}getUserCode(){let t=Sq(this.aShape);return`
      ${Q("index")} {
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          let indexZ = i32(getIndices(resRC.x, resRC.z));
          let inBounds = select(0.0, 1.0, indexZ >= 0 && indexZ < uniforms.aShape[2]);
          setOutputAtIndex(index, inBounds * getA(${t}));
        }
      }
    `}};function Sq(r){let t=["resRC.x","resRC.y","resRC.z","resRC.w"],e=[];for(let o=0;o<r.length;o++)o===2?e.push("indexZ"):e.push(`${t[o]}`);return e.join()}function pv(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,indices:i}=t,{axis:s,batchDims:a}=o,l=S.parseAxisParam(s,n.shape)[0],u=$.segment_util.collectGatherOpShapeInfo(n,i,l,a),c=S.sizeFromShape(i.shape),p=[],d=me({inputs:{x:n},backend:e,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),m=me({inputs:{x:i},backend:e,attrs:{shape:[u.batchSize,c/u.batchSize]}});p.push(d),p.push(m);let f=[u.batchSize,u.outerSize,c/u.batchSize,u.sliceSize];if(e.shouldExecuteOnCPU([n,i])){let I=e.tensorMap.get(m.dataId).values,N=Le(m.shape,m.dtype,I),B=e.tensorMap.get(d.dataId).values,z=Le(d.shape,d.dtype,B),H=ET(z,N,f);return p.forEach(K=>e.disposeData(K.dataId)),e.makeTensorInfo(u.outputShape,H.dtype,H.values)}let g=new ng(d.shape,f),x=e.runWebGPUProgram(g,[d,m],d.dtype);p.push(x);let y=me({inputs:{x},backend:e,attrs:{shape:u.outputShape}});return p.forEach(b=>e.disposeData(b.dataId)),y}var w3={kernelName:Pl,backendName:"webgpu",kernelFunc:pv};var wq=Ze({opType:Ce.GREATER,cpuKernelImpl:RT,dtype:"bool"}),C3={kernelName:pi,backendName:"webgpu",kernelFunc:wq};var Cq=Ze({opType:Ce.GREATER_EQUAL,dtype:"bool",cpuKernelImpl:NT}),_3={kernelName:di,backendName:"webgpu",kernelFunc:Cq};function _q(r){let{inputs:t,backend:e}=r,{input:o}=t;return Jh(o,!0,e)}var k3={kernelName:Dl,backendName:"webgpu",kernelFunc:_q};var kq=ke({opType:ie.IS_FINITE,dtype:"bool"}),I3={kernelName:Ol,backendName:"webgpu",kernelFunc:kq};var Iq=ke({opType:ie.IS_INF,dtype:"bool"}),T3={kernelName:Ll,backendName:"webgpu",kernelFunc:Iq};var Tq=ke({opType:ie.IS_NAN,dtype:"bool"}),E3={kernelName:Ml,backendName:"webgpu",kernelFunc:Tq};function Eq(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{alpha:i}=o,s=[{type:"float32",data:[i]}],a=new eo(n.shape,ie.LEAKYRELU,"alpha : f32,");return e.runWebGPUProgram(a,[n],"float32",s)}var N3={kernelName:Bl,backendName:"webgpu",kernelFunc:Eq};var Nq=Ze({opType:Ce.LESS,dtype:"bool",cpuKernelImpl:PT}),R3={kernelName:mi,backendName:"webgpu",kernelFunc:Nq};var Rq=Ze({opType:Ce.LESS_EQUAL,dtype:"bool",cpuKernelImpl:$T}),$3={kernelName:fi,backendName:"webgpu",kernelFunc:Rq};var ig=class{constructor(t){this.variableNames=[],this.outputShape=[],this.uniforms="start : f32, step : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[t],this.dispatchLayout=oe(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="linSpace"}getUserCode(){return`
      ${Q("index")} {
        if (index < uniforms.size) {
          setOutputAtIndex(index, uniforms.start + f32(index) * uniforms.step);
        }
      }
    `}};function $q(r){let{backend:t,attrs:e}=r,{start:o,stop:n,num:i}=e,s=(n-o)/(i-1),a=new ig(i),l=[{type:"float32",data:[o]},{type:"float32",data:[s]}];return t.runWebGPUProgram(a,[],"float32",l)}var P3={kernelName:Vl,backendName:"webgpu",kernelFunc:$q};var Pq=ke({opType:ie.LOG,cpuKernelImpl:AT}),A3={kernelName:hi,backendName:"webgpu",kernelFunc:Pq};var Aq=ke({opType:ie.LOG1P}),D3={kernelName:Wl,backendName:"webgpu",kernelFunc:Aq};var Dq=Ze({opType:Ce.LOGICAL_AND,dtype:"bool"}),F3={kernelName:zl,backendName:"webgpu",kernelFunc:Dq};var Fq=ke({opType:ie.LOGICAL_NOT}),O3={kernelName:Ul,backendName:"webgpu",kernelFunc:Fq};var Oq=Ze({opType:Ce.LOGICAL_OR}),L3={kernelName:Gl,backendName:"webgpu",kernelFunc:Oq};var M3=`
  var powValue = 0.0;
  let basis = uniforms.bias + uniforms.alpha * sum;
  if (uniforms.beta == 0.5) {
    powValue = inverseSqrt(basis);
  } else if (uniforms.beta == 1.0) {
    powValue = 1.0 / basis;
  } else {
    powValue = exp(log(basis) * (-uniforms.beta));
  }
`,sg=class{constructor(t){this.outputShape=[],this.variableNames=["x"],this.uniforms="radius : i32, bias : f32, alpha : f32, beta : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=oe(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="lrn"}getUserCode(){return`
    ${Q("index")} {
      if (index < uniforms.size) {
        let coords = getOutputCoords();
        let b = coords[0];
        let r = coords[1];
        let c = coords[2];
        let d = coords[3];

        let x = getX(b, r, c, d);
        var sum = 0.0;
        for (var i = -uniforms.radius; i <= uniforms.radius; i = i + 1) {
          let idx = d + i;
          if (idx >= 0 && idx < uniforms.xShape[3]) {
            let z = getX(b, r, c, idx);
            sum = sum + z * z;
          }
        }
        ${M3}

        setOutputAtIndex(index, x * powValue);
      }
    }
  `}},ag=class{constructor(t,e){this.outputShape=[],this.variableNames=["x"],this.uniforms="radius : i32, bias : f32, alpha : f32, beta : f32,",this.workgroupSize=[256,1,1],this.maxAllowRadius=16,S.assert(e<=this.maxAllowRadius,()=>`Radius must be less than or equal to ${this.maxAllowRadius}, current radius is ${e}`),this.outputShape=t,this.elementsPerWorkgroup=this.workgroupSize[0]-2*this.maxAllowRadius,this.dispatchLayout={x:[3],y:[2],z:[0,1]},this.dispatch=Z(this.dispatchLayout,this.outputShape,[this.elementsPerWorkgroup,this.workgroupSize[1],this.workgroupSize[2]]),this.shaderKey="lrn_shared"}getUserCode(){return`
    var <workgroup>lrnSub: array<f32, ${this.workgroupSize[0]}>;
    const elementsPerWorkgroup = ${this.elementsPerWorkgroup};
    const maxAllowRadius = ${this.maxAllowRadius};

    ${Q()} {
      let localDepth = i32(localId.x);
      let workgroupDepth = i32(workgroupId.x) * elementsPerWorkgroup;
      let xDepth = workgroupDepth + localDepth - maxAllowRadius;
      let b = i32(globalId.z) / uniforms.xShape[1];
      let r = i32(globalId.z) - b * uniforms.xShape[1];
      let c = i32(globalId.y);
      let d = workgroupDepth + localDepth;

      var x = 0.0;
      if (xDepth >= 0 && xDepth < uniforms.xShape[3]) {
        x = getX(b, r, c, xDepth);
      }
      lrnSub[localDepth] = x;
      workgroupBarrier();

      if (localDepth < elementsPerWorkgroup && d < uniforms.outShape[3]) {
        var sum = 0.0;
        let index = localDepth + maxAllowRadius;
        for (var i = -uniforms.radius; i <= uniforms.radius; i = i + 1) {
          let z = lrnSub[index + i];
          sum = sum + z * z;
        }
        ${M3}

        setOutputAtCoords(b, r, c, d, lrnSub[index] * powValue);
      }
    } `}};function Lq(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{depthRadius:i,bias:s,alpha:a,beta:l}=o,u;i>16?u=new sg(n.shape):u=new ag(n.shape,i);let c=[{type:"int32",data:[i]},{type:"float32",data:[s]},{type:"float32",data:[a]},{type:"float32",data:[l]}];return e.runWebGPUProgram(u,[n],n.dtype,c)}var B3={kernelName:Hl,backendName:"webgpu",kernelFunc:Lq};var lg=class{constructor(t){this.outputShape=[],this.variableNames=["inputImage","outputImage","dy"],this.uniforms="depthRadius : i32, bias : f32, alpha : f32, beta : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=oe(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="lrn_grad"}getUserCode(){return`
    ${Q("index")} {
      if (index < uniforms.size) {
        let coords = getOutputCoords();
        let b = coords[0];
        let r = coords[1];
        let c = coords[2];

        let MIN_DEPTH_BEGIN = 0;
        let MAX_DEPTH_END = uniforms.outShape[3];
        var result = 0.0;
        for (var d = MIN_DEPTH_BEGIN; d < MAX_DEPTH_END; d++) {
          let depthBegin = max(MIN_DEPTH_BEGIN, d - uniforms.depthRadius);
          let depthEnd = min(MAX_DEPTH_END, d + uniforms.depthRadius + 1);

          var norm = 0.0;
          for (var k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; k++) {
            if (k < depthBegin) {
              continue;
            } else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            } else {
              break;
            }
          }

          norm = uniforms.alpha * norm + uniforms.bias;

          for (var k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; k++) {
            if (k < depthBegin) {
              continue;
            } else if (k >= depthBegin && k < depthEnd) {
              var dyi = -2.0 * uniforms.alpha * uniforms.beta
                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d) / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * uniforms.beta);
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            } else {
              break;
            }
          }
        }

        setOutputAtIndex(index, result);
      }
    }
  `}};function Mq(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,y:i,dy:s}=t,{depthRadius:a,bias:l,alpha:u,beta:c}=o,p=new lg(n.shape),d=[{type:"int32",data:[a]},{type:"float32",data:[l]},{type:"float32",data:[u]},{type:"float32",data:[c]}];return e.runWebGPUProgram(p,[n,i,s],n.dtype,d)}var V3={kernelName:em,backendName:"webgpu",kernelFunc:Mq};var Bq=Ze({opType:Ce.MAX,cpuKernelImpl:FT}),W3={kernelName:gi,backendName:"webgpu",kernelFunc:Bq};function Vq(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{filterSize:i,strides:s,pad:a,dimRoundingMode:l}=o,c=$.computePool2DInfo(n.shape,i,s,1,a,l);return Sh(n,c,"max",e)}var z3={kernelName:ql,backendName:"webgpu",kernelFunc:Vq};function Wq(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{filterSize:i,strides:s,pad:a,dataFormat:l,dimRoundingMode:u}=o,c=[1,1,1],p=$.computePool3DInfo(n.shape,i,s,c,a,u,l),d=new qi(p,"max"),m=[{type:"int32",data:[p.strideDepth,p.strideHeight,p.strideWidth]},{type:"int32",data:[p.padInfo.front,p.padInfo.top,p.padInfo.left]},{type:"int32",data:[p.inDepth,p.inHeight,p.inWidth]},{type:"int32",data:[p.effectiveFilterDepth,p.effectiveFilterHeight,p.effectiveFilterWidth]}];return e.runWebGPUProgram(d,[n],n.dtype,m)}var U3={kernelName:jl,backendName:"webgpu",kernelFunc:Wq};var ug=class{constructor(t){this.variableNames=["dy","maxPos"],this.uniforms=`strides : vec2<i32>, pads : vec2<i32>, dilations : vec2<i32>, filterDims : vec2<i32>,
       outHeight : i32, outWidth : i32`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t.inShape,this.dispatchLayout=oe(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="maxPool2DBackprop"}getUserCode(){return`
      ${Q("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords[0];
        let d = coords[3];

        let dyRCCorner = vec2<i32>(coords.yz) - uniforms.pads;
        let dyRCorner = dyRCCorner.x;
        let dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        let lastIndex = uniforms.filterDims[0] * uniforms.filterDims[1] - 1;
        for (var wR = 0; wR < uniforms.filterDims[0]; wR += uniforms.dilations[0]) {
          let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[0]);

          if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
            continue;
          }
          let idyR = i32(dyR);

          for (var wC = 0; wC < uniforms.filterDims[1]; wC += uniforms.dilations[1]) {
            let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[1]);

            if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
              continue;
            }
            let idyC = i32(dyC);

            let dyValue = getDy(batch, idyR, idyC, d);
            let maxPosValue = lastIndex - i32(getMaxPos(batch, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            let curPosValue = wR * uniforms.filterDims[1] + wC;
            let mask = select(0.0, 1.0, maxPosValue == curPosValue);
            dotProd += dyValue * mask;
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
    `}},cg=class{constructor(t){this.variableNames=["dy","maxPos"],this.uniforms=`strides : vec3<i32>, pads : vec3<i32>, filterDims : vec3<i32>,
      outDepth : i32, outHeight : i32, outWidth : i32`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t.inShape,this.dispatchLayout=oe(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="maxPool3DBackprop"}getUserCode(){return`
      ${Q("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords.x;
        let ch = coords.u;

        let dyCorner = vec3<i32>(coords.y, coords.z, coords.w) - uniforms.pads;
        let dyDCorner = dyCorner.x;
        let dyRCorner = dyCorner.y;
        let dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        let lastIndex = uniforms.filterDims[0] * uniforms.filterDims[1] * uniforms.filterDims[2] - 1;

        for (var wD = 0; wD < uniforms.filterDims[0]; wD++) {
          let dyD = f32(dyDCorner + wD) / f32(uniforms.strides[0]);

          if (dyD < 0.0 || dyD >= f32(uniforms.outDepth) || fract(dyD) > 0.0) {
            continue;
          }
          let idyD = i32(dyD);

          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {
            let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[1]);

            if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
              continue;
            }
            let idyR = i32(dyR);

            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {
              let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[2]);

              if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
                continue;
              }
              let idyC = i32(dyC);

              let dyValue = getDy(batch, idyD, idyR, idyC, ch);
              let maxPosValue = lastIndex - i32(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              let curPosValue = wD * uniforms.filterDims[1] * uniforms.filterDims[2] + wR * uniforms.filterDims[2] + wC;
              let mask = select(0.0, 1.0, maxPosValue == curPosValue);
              dotProd += dyValue * mask;
            }
          }
        }

        setOutputAtIndex(index, dotProd);
      }
    }
    `}};function zq(r){let{inputs:t,backend:e,attrs:o}=r,{dy:n,input:i}=t,s=i,{filterSize:a,strides:l,pad:u,dimRoundingMode:c}=o,p=[1,1,1],d=$.computePool3DInfo(s.shape,a,l,p,u,c),m=new qi(d,"max",!0),f=[{type:"int32",data:[d.strideDepth,d.strideHeight,d.strideWidth]},{type:"int32",data:[d.padInfo.front,d.padInfo.top,d.padInfo.left]},{type:"int32",data:[d.inDepth,d.inHeight,d.inWidth]},{type:"int32",data:[d.effectiveFilterDepth,d.effectiveFilterHeight,d.effectiveFilterWidth]}],g=e.runWebGPUProgram(m,[s],"int32",f),x=new cg(d);f=[{type:"int32",data:[d.strideDepth,d.strideHeight,d.strideWidth]},{type:"int32",data:[d.effectiveFilterDepth-1-d.padInfo.front,d.effectiveFilterHeight-1-d.padInfo.top,d.effectiveFilterWidth-1-d.padInfo.left]},{type:"int32",data:[d.effectiveFilterDepth,d.effectiveFilterHeight,d.effectiveFilterWidth]},{type:"int32",data:[d.outDepth]},{type:"int32",data:[d.outHeight]},{type:"int32",data:[d.outWidth]}];let y=e.runWebGPUProgram(x,[n,g],s.dtype,f);return e.disposeData(g.dataId),y}var G3={kernelName:rm,backendName:"webgpu",kernelFunc:zq};function Uq(r){let{inputs:t,backend:e,attrs:o}=r,{dy:n,input:i,output:s}=t,a=i;Lp([i,s],"maxPoolGrad");let{filterSize:l,strides:u,pad:c,dimRoundingMode:p}=o,d=$.computePool2DInfo(a.shape,l,u,1,c,p),m=new dn(d,"max",!0),f=[{type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.padInfo.top,d.padInfo.left]},{type:"int32",data:[d.dilationHeight,d.dilationWidth]},{type:"int32",data:[d.inHeight,d.inWidth]},{type:"int32",data:[d.effectiveFilterHeight,d.effectiveFilterWidth]}],g=e.runWebGPUProgram(m,[a],"int32",f),x=new ug(d);f=[{type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.effectiveFilterHeight-1-d.padInfo.top,d.effectiveFilterWidth-1-d.padInfo.left]},{type:"int32",data:[d.dilationHeight,d.dilationWidth]},{type:"int32",data:[d.effectiveFilterHeight,d.effectiveFilterWidth]},{type:"int32",data:[d.outHeight]},{type:"int32",data:[d.outWidth]}];let y=e.runWebGPUProgram(x,[n,g],a.dtype,f);return e.disposeData(g.dataId),y}var H3={kernelName:tm,backendName:"webgpu",kernelFunc:Uq};function Gq(r){let{inputs:t,backend:e,attrs:o}=r,{filterSize:n,strides:i,pad:s,includeBatchInIndex:a}=o,{x:l}=t;S.assert(l.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${l.shape.length}.`);let u=[1,1];S.assert($.eitherStridesOrDilationsAreOne(i,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);let c=$.computePool2DInfo(l.shape,n,i,u,s),p=[{type:"int32",data:[c.strideHeight,c.strideWidth]},{type:"int32",data:[c.padInfo.top,c.padInfo.left]},{type:"int32",data:[c.dilationHeight,c.dilationWidth]},{type:"int32",data:[c.inHeight,c.inWidth]},{type:"int32",data:[c.effectiveFilterHeight,c.effectiveFilterWidth]}],d=new dn(c,"max",!1),m=e.runWebGPUProgram(d,[l],l.dtype,p);d=new dn(c,"max",!0,!0,a);let f=e.runWebGPUProgram(d,[l],"int32",p);return[m,f]}var K3={kernelName:Xl,backendName:"webgpu",kernelFunc:Gq};function Hq(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{axis:i,keepDims:s}=o;return to(n,i,s,"min",e)}var q3={kernelName:Ql,backendName:"webgpu",kernelFunc:Hq};var Kq=Ze({opType:Ce.MIN,cpuKernelImpl:OT}),j3={kernelName:xi,backendName:"webgpu",kernelFunc:Kq};var pg=class{constructor(t,e,o){this.uniforms="",this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.map((n,i)=>n[0]+t[i]+n[1]),this.dispatchLayout=oe(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize),this.xShape=t,e.map((n,i)=>{this.uniforms+=` pad${i} : vec2<i32>,`}),this.offset=o==="reflect"?0:1,this.shaderKey=`mirrorPad_${o}`}getUserCode(){let t=this.xShape.length,e=this.xShape.map((u,c)=>`uniforms.pad${c}[0]`).join(","),o=this.xShape.map((u,c)=>`uniforms.pad${c}[0] + uniforms.xShape${t>1?`[${c}]`:""}`).join(","),n=t===1?"start":"start[i]",i=t===1?"end":"end[i]",s=t===1?"outC":"outC[i]",a=ft(t),l=t>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,t):"coords";return`
      ${Q("index")} {
        if (index < uniforms.size) {
          let start = ${a}(${e});
          let end = ${a}(${o});
          var outC = getCoordsFromIndex(index);
          for (var i = 0; i < ${t}; i = i + 1) {
            if (${s} < ${n}) {
              ${s} = ${n} * 2 - ${s} - ${this.offset};
            } else if(${s} >= ${i}) {
              ${s} = (${i} - 1) * 2 - ${s} + ${this.offset};
            }
          }
          let coords = outC - start;
          setOutputAtIndex(index, getX(${l}));
        }
      }
    `}};var X3={kernelName:Zl,backendName:"webgpu",kernelFunc:({inputs:r,attrs:t,backend:e})=>{let{x:o}=r,{paddings:n,mode:i}=t,s=e,a=n.map(c=>({type:"int32",data:[c[0],c[1]]})),l=new pg(o.shape,n,i);return s.runWebGPUProgram(l,[o],o.dtype,a)}};var qq=Ze({opType:Ce.MOD}),Y3={kernelName:Jl,backendName:"webgpu",kernelFunc:qq};var dg=class{constructor(t,e){this.variableNames=["probs"],this.outputShape=[],this.uniforms="seed : f32, numOutcomes: i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[t,e],this.dispatchLayout=oe(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="multinomial"}getUserCode(){return`
    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    fn random (seed : f32, resultUV : vec2<f32>) -> f32 {
      let HASHSCALE1 = 443.8975;
      let p = resultUV * seed;
      var p3  = fract(vec3<f32>(p.xyx) * HASHSCALE1);
      p3 = p3 + dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${Q("index")} {
      if (index < uniforms.size) {
        let coords = getOutputCoords();
        let batch = coords[0];

        let resUV = vec2<f32>(f32(coords[1]) / f32(uniforms.outShape[1]),
            f32(coords[0]) / f32(uniforms.outShape[0]));
        let r = random(uniforms.seed, resUV);
        var cdf = 0.0;
        for (var i = 0; i < uniforms.numOutcomes - 1; i = i + 1) {
          cdf = cdf + getProbs(batch, i);

          if (r < cdf) {
            setOutputAtIndexI32(index, i);
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutputAtIndexI32(index, uniforms.numOutcomes - 1);
      }
    }
  `}};var mg=class{constructor(t){this.variableNames=["logits"],this.outputShape=t,this.dispatchLayout=oe(this.outputShape),this.dispatch=[this.outputShape[0],1,1],this.outputShape[1]>=4096?this.workgroupSize=[256,1,1]:this.workgroupSize=[64,1,1],this.shaderKey="softmax"}getUserCode(){return`
    var<workgroup> buf : array<f32, ${this.workgroupSize[0]}>;
    var<workgroup> rowMaxShared : f32;
    var<workgroup> rowSumShared : f32;
    const blockSize = ${this.workgroupSize[0]};
    ${Q("index")} {
      let row = index / blockSize;
      let tid = i32(localId.x);
      let cols = uniforms.outShape[1];

      var threadMax = -3.402823e+38f;
      for (var col = tid; col < cols; col += blockSize) {
        let value = getLogits(row, col);
        threadMax = max(threadMax, value);
      }
      if (tid < cols) {
        buf[tid] = threadMax;
      }
      workgroupBarrier();

      var reduceSize = min(cols, blockSize);
      for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {
        reduceSize = currSize + (reduceSize & 1);
        if (tid < currSize) {
          buf[tid] = max(buf[tid], buf[tid + reduceSize]);
        }
        workgroupBarrier();
      }

      if (tid == 0) {
        rowMaxShared = buf[0];
      }
      workgroupBarrier();

      var threadSum = 0.0;
      for (var col = tid; col < cols; col += blockSize) {
        let subExp = exp(getLogits(row, col) - rowMaxShared);
        threadSum += subExp;
      }
      buf[tid] = threadSum;
      workgroupBarrier();

      for (var currSize = blockSize >> 1;  currSize > 0; currSize = currSize >> 1) {
        if (tid < currSize) {
          buf[tid] = buf[tid] + buf[tid + currSize];
        }
        workgroupBarrier();
      }

      if (tid == 0) {
        rowSumShared = buf[0];
      }
      workgroupBarrier();

      for (var col = tid; col < cols; col += blockSize) {
        let value = exp(getLogits(row, col) - rowMaxShared) / rowSumShared;
        setOutputAtCoords(row, col, value);
      }
  }
    `}};function dv(r){let{inputs:t,backend:e,attrs:o}=r,{logits:n}=t,{dim:i}=o,s=me({inputs:{x:n},backend:e,attrs:{shape:[S.sizeFromShape(n.shape)/n.shape[i],n.shape[i]]}}),a=new mg(s.shape),l=e.runWebGPUProgram(a,[s],n.dtype),u=me({inputs:{x:l},backend:e,attrs:{shape:n.shape}});return e.disposeData(s.dataId),e.disposeData(l.dataId),u}var Q3={kernelName:Ru,backendName:"webgpu",kernelFunc:dv};function jq(r){let{inputs:t,backend:e,attrs:o}=r,{logits:n}=t,{numSamples:i,seed:s,normalized:a}=o,l=a?n:dv({inputs:{logits:n},backend:e,attrs:{dim:n.shape.length-1}}),u=l.shape[0],c=l.shape[1],p=new dg(u,i),d=[{type:"float32",data:[s]},{type:"int32",data:[c]}],m=e.runWebGPUProgram(p,[l],"int32",d);return a||e.disposeData(l.dataId),m}var Z3={kernelName:eu,backendName:"webgpu",kernelFunc:jq};function Xq(r){let{inputs:t,backend:e}=r,{x:o}=t;if(e.shouldExecuteOnCPU([o])){let i=e.tensorMap.get(o.dataId),[s,a]=MT(i.values,o.shape,o.dtype);return e.makeTensorInfo(a,o.dtype,s)}let n=new eo(o.shape,ie.NEG);return e.runWebGPUProgram(n,[o],o.dtype)}var J3={kernelName:gs,backendName:"webgpu",kernelFunc:Xq};function Yq(r){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:e,attrs:o}=r,{boxes:n,scores:i}=t,{maxOutputSize:s,iouThreshold:a,scoreThreshold:l}=o,u=e.readSync(n.dataId),c=e.readSync(i.dataId),{selectedIndices:p}=Xr.nonMaxSuppressionV3Impl(u,c,s,a,l);return e.makeTensorInfo([p.length],"int32",new Int32Array(p))}var eN={kernelName:tu,backendName:"webgpu",kernelFunc:Yq};function Qq(r){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:e,attrs:o}=r,{boxes:n,scores:i}=t,{maxOutputSize:s,iouThreshold:a,scoreThreshold:l,softNmsSigma:u}=o,c=e.readSync(n.dataId),p=e.readSync(i.dataId),d=s,m=a,f=l,g=u,{selectedIndices:x,selectedScores:y}=Xr.nonMaxSuppressionV5Impl(c,p,d,m,f,g);return[e.makeTensorInfo([x.length],"int32",new Int32Array(x)),e.makeTensorInfo([y.length],"float32",new Float32Array(y))]}var tN={kernelName:ru,backendName:"webgpu",kernelFunc:Qq};var fg=class{constructor(t,e){this.variableNames=["x"],this.uniforms="onValue : f32, offValue : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[t,e],this.dispatchLayout=oe(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="onehot"}getUserCode(){return`
      ${Q("index")} {
        if(index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          setOutputAtIndex(index, mix(uniforms.offValue, uniforms.onValue,
                                      f32(i32(round(getX(coords.x))) == coords.y)));
        }
      }
    `}};function Zq(r){let{inputs:t,backend:e,attrs:o}=r,{indices:n}=t,{dtype:i,depth:s,onValue:a,offValue:l}=o,u=S.sizeFromShape(n.shape),c=new fg(u,s),p=me({inputs:{x:n},backend:e,attrs:{shape:[u]}}),d=[{type:"float32",data:[a]},{type:"float32",data:[l]}],m=e.runWebGPUProgram(c,[p],i,d);e.disposeData(p.dataId);let f=[...n.shape,s],g=me({inputs:{x:m},backend:e,attrs:{shape:f}});return e.disposeData(m.dataId),g}var rN={kernelName:nu,backendName:"webgpu",kernelFunc:Zq};function Kp(r){let{inputs:t,backend:e}=r,{x:o}=t;if(o.dtype==="complex64"){let n=zn({inputs:{input:o},backend:e}),i=Kp({inputs:{x:n},backend:e}),s=Zs({inputs:{input:o},backend:e}),a=Kp({inputs:{x:s},backend:e}),l=ho({inputs:{real:i,imag:a},backend:e});return e.disposeData(n.dataId),e.disposeData(i.dataId),e.disposeData(s.dataId),e.disposeData(a.dataId),l}else return St({attrs:{shape:o.shape,dtype:o.dtype,value:o.dtype==="string"?"":0},backend:e})}var oN={kernelName:Uu,backendName:"webgpu",kernelFunc:Kp};function nN(r){let{inputs:t,backend:e}=r,{x:o}=t;if(o.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(o.dtype==="complex64"){let n=zn({inputs:{input:o},backend:e}),i=nN({inputs:{x:n},backend:e}),s=Zs({inputs:{input:o},backend:e}),a=Kp({inputs:{x:s},backend:e}),l=ho({inputs:{real:i,imag:a},backend:e});return e.disposeData(n.dataId),e.disposeData(i.dataId),e.disposeData(s.dataId),e.disposeData(a.dataId),l}else return St({attrs:{shape:o.shape,dtype:o.dtype,value:1},backend:e})}var iN={kernelName:ou,backendName:"webgpu",kernelFunc:nN};function Jq(r){let{inputs:t,backend:e,attrs:o}=r,{axis:n}=o;if(t.length===1)return Zh({inputs:{input:t[0]},backend:e,attrs:{dim:n}});let i=t[0].shape,s=t[0].dtype;t.forEach(c=>{S.assertShapesMatch(i,c.shape,"All tensors passed to stack must have matching shapes"),S.assert(s===c.dtype,()=>"All tensors passed to stack must have matching dtypes")});let a=[],l=t.map(c=>{let p=Zh({inputs:{input:c},backend:e,attrs:{dim:n}});return a.push(p),p}),u=av({inputs:l,backend:e,attrs:{axis:n}});return a.forEach(c=>e.disposeData(c.dataId)),u}var sN={kernelName:iu,backendName:"webgpu",kernelFunc:Jq};function mv(r,t=!1){let e=r.length,o=ft(e),n=r.map((p,d)=>`uniforms.pad${d}[0]`).join(","),i=r.map((p,d)=>`uniforms.pad${d}[0] + uniforms.xShape${e>1?`[${d}]`:""}`).join(","),s=e>1?`${o}(${n})`:`${n}`,a=e>1?`${o}(${i})`:`${i}`,l=e>1?"any(paddedCoords < start)":"paddedCoords < start",u=e>1?"any(paddedCoords >= end)":"paddedCoords >= end",c=e>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,e):"coords";return`
        let start = ${s};
        let end = ${a};
        if (${l} || ${u}) {
          setOutputAtIndex(index, ${t?0:"uniforms.constantValue"});
        } else {
          let coords = paddedCoords - start;
          setOutputAtIndex(index, getX(${c}));
        }
  `}var hg=class{constructor(t,e){this.variableNames=["x"],this.uniforms="constantValue : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.map((o,n)=>o[0]+t[n]+o[1]),this.dispatchLayout=oe(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize),e.map((o,n)=>{this.uniforms+=` pad${n} : vec2<i32>,`}),this.xShape=t,this.shaderKey="pad"}getUserCode(){return`
      ${Q("index")} {
        if (index < uniforms.size) {
          let paddedCoords = getCoordsFromIndex(index);
          ${mv(this.xShape)}
        }
      }
    `}};var ej=r=>{let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{paddings:i,constantValue:s}=o;if(i.every(u=>S.arraysEqual(u,[0,0])))return $t({inputs:{x:n},backend:e});if(S.sizeFromShape(n.shape)===0){let u=i.map((c,p)=>c[0]+n.shape[p]+c[1]);return St({backend:e,attrs:{shape:u,value:s,dtype:n.dtype}})}let a=[{type:"float32",data:[s]}];i.map(u=>a.push({type:"int32",data:[u[0],u[1]]}));let l=new hg(n.shape,i);return e.runWebGPUProgram(l,[n],n.dtype,a)},aN={kernelName:su,backendName:"webgpu",kernelFunc:ej};var tj=Ze({opType:Ce.POW}),lN={kernelName:au,backendName:"webgpu",kernelFunc:tj};function rj(r){let{inputs:t,backend:e}=r,{x:o,alpha:n}=t,i=new Wn(Ce.PRELU,o.shape,n.shape);return e.runWebGPUProgram(i,[o,n],"float32")}var uN={kernelName:lu,backendName:"webgpu",kernelFunc:rj};function oj(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{axis:i,keepDims:s}=o;return to(n,i,s,"prod",e)}var cN={kernelName:xs,backendName:"webgpu",kernelFunc:oj};var nj=r=>{let{backend:t,attrs:e}=r,{start:o,stop:n,step:i,dtype:s}=e,a=WT(o,n,i,s);return t.makeTensorInfo([a.length],s,a)},pN={kernelName:uu,backendName:"webgpu",kernelFunc:nj};var ij=Ze({opType:Ce.DIV}),dN={kernelName:Cl,backendName:"webgpu",kernelFunc:ij};var sj=ke({opType:ie.RECIPROCAL}),mN={kernelName:cu,backendName:"webgpu",kernelFunc:sj};var aj=ke({opType:ie.RELU}),fN={kernelName:pu,backendName:"webgpu",kernelFunc:aj};var lj=ke({opType:ie.RELU6}),hN={kernelName:hu,backendName:"webgpu",kernelFunc:lj};var gg=class{constructor(t,e,o){this.variableNames=["x"],this.uniforms="adjustHeightWidth : vec2<f32>, halfPixelCenters : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[t[0],e,o,t[3]],this.dispatchLayout=oe(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="resizeBilinear"}getUserCode(){return`
      ${Q("index")} {
        if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let d = coords[3];
          let rc = coords.yz;

          let effectiveInSize = vec2<f32>(
            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveOutSize = vec2<f32>(
            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveInputOverOutputRatioRC =
              effectiveInSize / effectiveOutSize;

          // Fractional source index
          let sourceFracIndexRC =
            (vec2<f32>(rc) + vec2<f32>(uniforms.halfPixelCenters)) *
            effectiveInputOverOutputRatioRC - vec2<f32>(uniforms.halfPixelCenters);

          // Compute the four integer indices.
          let sourceFloorRC = vec2<i32>(sourceFracIndexRC);
          let sourceCeilRC = vec2<i32>(
            min(vec2<f32>(uniforms.xShape.yz) - vec2<f32>(1.0), ceil(sourceFracIndexRC)));

          let topLeft = getX(b, sourceFloorRC.x, sourceFloorRC.y, d);
          let bottomLeft = getX(b, sourceCeilRC.x, sourceFloorRC.y, d);
          let topRight = getX(b, sourceFloorRC.x, sourceCeilRC.y, d);
          let bottomRight = getX(b, sourceCeilRC.x, sourceCeilRC.y, d);

          let fracRC = sourceFracIndexRC - vec2<f32>(sourceFloorRC);

          let top = topLeft + (topRight - topLeft) * fracRC.y;
          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
          let newValue = top + (bottom - top) * fracRC.x;

          setOutputAtIndex(index, newValue);
        }
      }
    `}};function uj(r){let{inputs:t,backend:e,attrs:o}=r,{images:n}=t,{alignCorners:i,size:s,halfPixelCenters:a}=o,[l,u]=s,c=i&&l>1?1:0,p=i&&u>1?1:0,m=[{type:"float32",data:[c,p]},{type:"float32",data:[a?.5:0]}],f=new gg(n.shape,l,u);return e.runWebGPUProgram(f,[n],"float32",m)}var gN={kernelName:fu,backendName:"webgpu",kernelFunc:uj};var xg=class{constructor(t,e){this.variableNames=["dy"],this.uniforms=`effectiveXSize : vec2<i32>, effectiveYSize : vec2<i32>, heightScale : f32, widthScale : f32,
       invHeightScale : f32, invWidthScale : f32, winHeight : i32, winWidth : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=oe(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize),this.alignCorners=e,this.shaderKey=`resizeBilinearBackprop_${e}`}getUserCode(){return`
      ${Q("index")} {
        if (index < uniforms.size) {
          let coords = getOutputCoords();
          let b = coords[0];
          let d = coords[3];
          let r = coords[1];
          let c = coords[2];

          var accumulator = 0.0;

          // Compute bounds for where in dy we will look
          let startRLerp = floor(f32(r) * uniforms.invHeightScale);
          let startDyR = i32(startRLerp - f32(uniforms.winHeight / 2));

          let startCLerp = floor(f32(c) * uniforms.invWidthScale);
          let startDyC = i32(startCLerp - f32(uniforms.winWidth / 2));

          // Loop over dy
          for (var dyROffset = 0; dyROffset < uniforms.winHeight; dyROffset++) {
            let dyR = startDyR + dyROffset;

            // Guard against the window exceeding the bounds of dy
            if (dyR < 0 || dyR >= uniforms.dyShape[1]) {
              continue;
            }

            for (var dyCOffset = 0; dyCOffset < uniforms.winWidth; dyCOffset++) {
              let dyC = startDyC + dyCOffset;

              // Guard against the window exceeding the bounds of dy
              if (dyC < 0 || dyC >= uniforms.dyShape[2]) {
                continue;
              }

              let dxR = f32(dyR) * uniforms.heightScale;
              let topDxRIndex = i32(floor(dxR));
              let bottomDxRIndex = i32(min(ceil(dxR), f32(uniforms.outShape[1] - 1)));
              let dxRLerp = dxR - f32(topDxRIndex);
              let inverseDxRLerp = 1.0 - dxRLerp;

              let dxC = f32(dyC) * uniforms.widthScale;
              let leftDxCIndex = i32(floor(dxC));
              let rightDxCIndex = i32(min(ceil(dxC), f32(uniforms.outShape[2] - 1)));
              let dxCLerp = dxC - f32(leftDxCIndex);
              let inverseDxCLerp = 1.0 - dxCLerp;

              if (r == topDxRIndex && c == leftDxCIndex) {
                // topLeft
                accumulator +=
                  getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
              }

              if (r == topDxRIndex && c == rightDxCIndex) {
                // topRight
                accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
              }

              if (r == bottomDxRIndex && c == leftDxCIndex) {
                // bottomLeft
                accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
              }

              if (r == bottomDxRIndex && c == rightDxCIndex) {
                // bottomRight
                accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
              }
            }
          }
          // End loop over dy

          setOutputAtIndex(index, accumulator);
        }
      }
    `}};function cj(r){let{inputs:t,backend:e,attrs:o}=r,{images:n,dy:i}=t,{alignCorners:s}=o,[,a,l]=n.shape,[,u,c]=i.shape,p=[s&&u>1?a-1:a,s&&c>1?l-1:l],d=[s&&u>1?u-1:u,s&&c>1?c-1:c],m=p[0]/d[0],f=p[1]/d[1],g=1/m,x=1/f,y=Math.ceil(g)*2+2,b=Math.ceil(x)*2+2,I=new xg(n.shape,s),N=[{type:"int32",data:p},{type:"int32",data:d},{type:"float32",data:[m]},{type:"float32",data:[f]},{type:"float32",data:[g]},{type:"float32",data:[x]},{type:"int32",data:[y]},{type:"int32",data:[b]}];return e.runWebGPUProgram(I,[i],i.dtype,N)}var xN={kernelName:lm,backendName:"webgpu",kernelFunc:cj};var yg=class{constructor(t,e,o,n){this.variableNames=["x"],this.uniforms="adjustHeightWidth : vec2<f32>, roundBase : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[t[0],e,o,t[3]],this.dispatchLayout=oe(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize),this.halfPixelCenters=n,this.shaderKey=`resizeNearest_${n}`}getUserCode(){let t;return this.halfPixelCenters?t="max((vec2<f32>(rc) + vec2<f32>(0.5)) * effectiveInputOverOutputRatioRC, vec2<f32>(0.0))":t="vec2<f32>(rc) * effectiveInputOverOutputRatioRC",`
      ${Q("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let d = coords[3];
          let rc = coords.yz;

          let effectiveInSize = vec2<f32>(
            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveOutSize = vec2<f32>(
            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveInputOverOutputRatioRC =
              effectiveInSize / effectiveOutSize;

          // Fractional source index
          let sourceFracIndexRC = ${t};

          // Compute the coordinators of nearest neighbor point.
          let inputShapeRC = vec2<f32>(f32(uniforms.xShape.y), f32(uniforms.xShape.z));
          let sourceNearestRC = vec2<i32>(
            min(inputShapeRC - 1.0, floor(sourceFracIndexRC + uniforms.roundBase)));
          let newValue = getX(b, sourceNearestRC.x, sourceNearestRC.y, d);

          setOutputAtIndex(index, newValue);
        }
      }
    `}};function pj(r){let{inputs:t,backend:e,attrs:o}=r,{images:n}=t,{alignCorners:i,halfPixelCenters:s,size:a}=o,[l,u]=a,c=i&&l>1?1:0,p=i&&u>1?1:0,m=[{type:"float32",data:[c,p]},{type:"float32",data:[i?.5:0]}],f=new yg(n.shape,l,u,s);return e.runWebGPUProgram(f,[n],n.dtype,m)}var yN={kernelName:mu,backendName:"webgpu",kernelFunc:pj};var vg=class{constructor(t,e){this.variableNames=["dy"],this.uniforms=`effectiveXSize : vec2<i32>, effectiveYSize : vec2<i32>, invHeightScale : f32, invWidthScale : f32,
       winHeight : i32, winWidth : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=oe(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize),this.alignCorners=e,this.shaderKey=`resizeNearestNeigborBackprop_${e}`}getUserCode(){return`
      ${Q("index")} {
        if (index < uniforms.size) {
          let coords = getOutputCoords();
          let b = coords[0];
          let d = coords[3];
          let r = coords[1];
          let c = coords[2];

          var accumulator = 0.0;

          // Compute bounds for where in dy we will look
          let startRLerp = floor(f32(r) * uniforms.invHeightScale);
          let startDyR = i32(floor(startRLerp - f32(uniforms.winHeight / 2)));

          let startCLerp = floor(f32(c) * uniforms.invWidthScale);
          let startDyC = i32(floor(startCLerp - f32(uniforms.winWidth / 2)));

          // Loop over dy
          for (var dyROffset = 0; dyROffset < uniforms.winHeight; dyROffset++) {
            let dyR = startDyR + dyROffset;

            // Guard against the window exceeding the bounds of dy
            if (dyR < 0 || dyR >= uniforms.dyShape[1]) {
              continue;
            }

            for (var dyCOffset = 0; dyCOffset < uniforms.winWidth; dyCOffset++) {
              let dyC = startDyC + dyCOffset;

              // Guard against the window exceeding the bounds of dy
              if (dyC < 0 || dyC >= uniforms.dyShape[2]) {
                continue;
              }

              let sourceFracRow = f32(uniforms.effectiveXSize[0]) *
                  (f32(dyR) / f32(uniforms.effectiveYSize[0]));

              let sourceFracCol = f32(uniforms.effectiveXSize[1]) *
                  (f32(dyC) / f32(uniforms.effectiveYSize[1]));

              let sourceNearestRow =
                  i32(min(f32(uniforms.outShape[1] - 1),
                  ${this.alignCorners?"floor(sourceFracRow + 0.5)":"floor(sourceFracRow)"}));

              let sourceNearestCol =
                  i32(min(f32(uniforms.outShape[2] - 1),
                  ${this.alignCorners?"floor(sourceFracCol + 0.5)":"floor(sourceFracCol)"}));

              if (r == sourceNearestRow && c == sourceNearestCol) {
                accumulator += getDy(b, dyR, dyC, d);
              }
            }
          }
          // End loop over dy

          setOutputAtIndex(index, accumulator);
        }
      }
    `}};function dj(r){let{inputs:t,backend:e,attrs:o}=r,{images:n,dy:i}=t,{alignCorners:s}=o,[,a,l]=n.shape,[,u,c]=i.shape,p=[s&&u>1?a-1:a,s&&c>1?l-1:l],d=[s&&u>1?u-1:u,s&&c>1?c-1:c],m=p[0]/d[0],f=p[1]/d[1],g=1/m,x=1/f,y=Math.ceil(g)*2+2,b=Math.ceil(x)*2+2,I=new vg(n.shape,s),N=[{type:"int32",data:p},{type:"int32",data:d},{type:"float32",data:[g]},{type:"float32",data:[x]},{type:"int32",data:[y]},{type:"int32",data:[b]}];return e.runWebGPUProgram(I,[i],i.dtype,N)}var vN={kernelName:am,backendName:"webgpu",kernelFunc:dj};var bg=class{constructor(t){this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=oe(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms=" axis : vec4<i32>,",this.shaderKey="reverse"}getUserCode(){return`
      
      // Using uniform variables as judging conditions, so the function has
      // coherent execution within all threads.
      fn getReverseCoords(coords : vec4<i32>) -> vec4<i32> {
        var reverseCoords = coords;
        if (uniforms.axis[0] == 1) {
          reverseCoords[0] = uniforms.xShape[0] - coords[0] - 1;
        }
        if (uniforms.axis[1] == 1) {
          reverseCoords[1] = uniforms.xShape[1] - coords[1] - 1;
        }
        if (uniforms.axis[2] == 1) {
          reverseCoords[2] = uniforms.xShape[2] - coords[2] - 1;
        }
        if (uniforms.axis[3] == 1) {
          reverseCoords[3] = uniforms.xShape[3] - coords[3] - 1;
        }

        return reverseCoords;
      }
    
      ${Q("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let reverseCoords = getReverseCoords(coords);
          setOutputAtIndex(index, getX(reverseCoords[0],
              reverseCoords[1], reverseCoords[2], reverseCoords[3]));
        }
      }
    `}};function mj(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{dims:i}=o,s=n.shape.length;if(s===0)return $t({inputs:{x:n},backend:e});let a=n.shape,l=[1,1,1,1];a.forEach((x,y)=>{let b=y+4-s;l[b]=x});let u=S.parseAxisParam(i,n.shape),c=[0,0,0,0];u.forEach(x=>{let y=x+4-s;c[y]=1});let p=[{type:"int32",data:c}],d=me({inputs:{x:n},backend:e,attrs:{shape:l}}),m=new bg(l),f=e.runWebGPUProgram(m,[d],d.dtype,p);e.disposeData(d.dataId);let g=me({inputs:{x:f},backend:e,attrs:{shape:a}});return e.disposeData(f.dataId),g}var bN={kernelName:gu,backendName:"webgpu",kernelFunc:mj};var Sg=class{constructor(t,e){this.outputShape=[],this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=oe(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms=`centerX : f32, centerY : f32, sinRadians : f32,
          cosRadians : f32,`,this.shaderKey="rotate",this.outputShape=t,typeof e=="number"?(this.uniforms+=" fillValue : f32,",this.fillSnippet="var outputValue = uniforms.fillValue;",this.shaderKey+="_float"):(this.uniforms+=" fillValue : vec3<f32>,",this.fillSnippet="var outputValue = uniforms.fillValue[coords[3]];",this.shaderKey+="_vec3")}getUserCode(){return`
        ${Q("index")} {
          if (index < uniforms.size) {
            let coords = getCoordsFromIndex(index);
            let coordXFloat = (f32(coords[2]) - uniforms.centerX) *
                uniforms.cosRadians - (f32(coords[1]) - uniforms.centerY) *
                uniforms.sinRadians;
            let coordYFloat = (f32(coords[2]) - uniforms.centerX) *
                uniforms.sinRadians + (f32(coords[1]) - uniforms.centerY) *
                uniforms.cosRadians;
            let coordX = i32(round(coordXFloat + uniforms.centerX));
            let coordY = i32(round(coordYFloat + uniforms.centerY));
            ${this.fillSnippet}
            if(coordX >= 0 && coordX < uniforms.xShape[2] && coordY >= 0 &&
                coordY < uniforms.xShape[1]) {
              outputValue = getX(coords[0], coordY, coordX, coords[3]);
            }
            setOutputAtIndex(index, outputValue);
          }
        }
      `}};var SN={kernelName:Hu,backendName:"webgpu",kernelFunc:({inputs:r,attrs:t,backend:e})=>{let{image:o}=r,{radians:n,fillValue:i,center:s}=t,a=e,l=new Sg(o.shape,i),[u,c]=$.getImageCenter(s,o.shape[1],o.shape[2]),p=[{type:"float32",data:[u]},{type:"float32",data:[c]},{type:"float32",data:[Math.sin(n)]},{type:"float32",data:[Math.cos(n)]}];return typeof i=="number"?p.push({type:"float32",data:[Number.parseFloat(i.toFixed(2))]}):p.push({type:"float32",data:i}),a.runWebGPUProgram(l,[o],o.dtype,p)}};var fj=ke({opType:ie.ROUND}),wN={kernelName:xu,backendName:"webgpu",kernelFunc:fj};var hj=ke({opType:ie.RSQRT,cpuKernelImpl:zT}),CN={kernelName:bi,backendName:"webgpu",kernelFunc:hj};var mn=class{constructor(t,e,o,n,i,s,a,l=!0){this.variableNames=["updates","indices"],this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=s,this.type=a,this.sumDupeIndices=l,this.dispatchLayout=oe(t),this.dispatch=Z(this.dispatchLayout,t,this.workgroupSize),this.sliceDimGreaterThanOne=e>1,this.shaderKey=`scatter_${o}_${n}_${this.sliceDimGreaterThanOne}_${a}_${l}_${i.length}`;let u=ft(i.length);this.uniforms=`sliceDim : i32, strides: ${u}, updatesSize: i32,`,this.updatesRank=n,this.indicesRank=o}getUserCode(){let t="";this.indicesRank===1?t="coords[0]":this.indicesRank===2&&(t="coords[0], j");let e=`getIndices(${t})`,o=this.sliceDimGreaterThanOne?"uniforms.strides[j]":"uniforms.strides",n="",i="";this.dispatchLayout.x.length===1?(n="flattenedIndex",i=`
      fn getUpdatesCoordsFromFlatIndex(index : i32) -> i32 {
        return index;
      }
      `):this.dispatchLayout.x.length===2&&(n="vec2<i32>(flattenedIndex, coords[1])",i=`
      fn getUpdatesCoordsFromFlatIndex(index : i32) -> vec2<i32> {
        // N.B. |updates| could be a scalar tensor, conceptually representing a
        // 2D tensor with all values equal to that. By design, its size must be
        // the same as |outShape[1]| in one dimension, and |indicesShape[0]|
        // gives the other.
        let sliceSize = uniforms.outShape[1];
        let d0 = index / sliceSize;
        let d1 = index - d0 * sliceSize;
        return vec2<i32>(d0, d1);
      }
      `);let a=`getUpdates(${Array.from({length:this.updatesRank},(u,c)=>`coords[${c}]`).join(", ")})`;return`
    ${i}
      ${Q("index")} {
        if (index < uniforms.updatesSize) {
          let coords = getUpdatesCoordsFromFlatIndex(index);
          var flattenedIndex = 0;
          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
            let indexInside = i32(round(${e}));
            flattenedIndex = flattenedIndex + indexInside * ${o};
          }
          let updateValue =
              ${Gi(this.type)}(${a});
          let flatIndex = getOutputIndexFromCoords(${n});

          ${this.sumDupeIndices?Zr("&result[flatIndex]","updateValue",this.type):"atomicStore(&result[flatIndex], bitcast<i32>(updateValue));"}
        }
      }`}};function gj(r){let{inputs:t,backend:e,attrs:o}=r,{indices:n,updates:i}=t,{shape:s}=o,{sliceRank:a,numUpdates:l,sliceSize:u,strides:c,outputSize:p}=$.calculateShapes(i,n,s),d=[p/u,u];if(p===0)return e.makeTensorInfo(s,n.dtype);let m=me({inputs:{x:n},backend:e,attrs:{shape:[l,a]}}),f=me({inputs:{x:i},backend:e,attrs:{shape:[l,u]}}),g=f.dtype,x=St({backend:e,attrs:{shape:d,value:0,dtype:g}}),y=S.sizeFromShape(f.shape),b=[{type:"int32",data:[a]},{type:"int32",data:c},{type:"int32",data:[y]}],I=new mn(f.shape,a,m.shape.length,f.shape.length,c,d,g),N=e.runWebGPUProgram(I,[f,m],g,b,x),F=me({inputs:{x:N},backend:e,attrs:{shape:s}});return e.disposeData(m.dataId),e.disposeData(f.dataId),e.disposeData(N.dataId),F}var _N={kernelName:yu,backendName:"webgpu",kernelFunc:gj};var wg=class{constructor(t,e){this.outputShape=[],this.variableNames=["sortedSequence","values"],this.uniforms="numInputs : i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=oe(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize),this.side=e,this.shaderKey=`search_sorted_${e}`}getUserCode(){return`
      fn findBound(batch: i32, value: f32) -> i32 {
        var left = i32(0);
        var right = uniforms.numInputs;
        while (left < right) {
          var mid = (left + right) / 2;
          if (getSortedSequence(batch, mid) ${this.side==="left"?"<":"<="} value) {
            left = mid + 1;
          } else {
            right = mid;
          }
        }
        return right;
      }

      ${Q("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let value = getValuesByOutputIndex(index);
          setOutputAtIndexI32(index, findBound(coords[0], value));
        }
      }
    `}};function xj(r){let{inputs:t,backend:e,attrs:o}=r,{sortedSequence:n,values:i}=t,{side:s}=o,a=new wg([i.shape[0],i.shape[1]],s),l=[{type:"int32",data:[n.shape[1]]}];return e.runWebGPUProgram(a,[n,i],"int32",l)}var kN={kernelName:bu,backendName:"webgpu",kernelFunc:xj};var Cg=class{constructor(t,e,o){this.variableNames=["c","a","b"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=oe(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize),this.cRank=t,this.rank=o,this.shaderKey="select"}getUserCode(){let t,e;if(this.rank>4)throw Error(`Where for rank ${this.rank} is not yet supported`);if(this.rank===1)e="resRC",t="resRC";else{let n=["resRC.x","resRC.y","resRC.z","resRC.w"],i=[],s=[];for(let a=0;a<this.outputShape.length;a++)s.push(`${n[a]}`),a<this.cRank&&i.push(`${n[a]}`);t=i.join(),e=s.join()}return`
      ${Q("index")} {
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          let cVal = getC(${t});
          if (cVal >= 1.0) {
            setOutputAtIndex(index, getA(${e}));
          } else {
            setOutputAtIndex(index, getB(${e}));
          }
        }
      }
    `}};function yj(r){let{inputs:t,backend:e}=r,{condition:o,t:n,e:i}=t,s=new Cg(o.shape.length,n.shape,n.shape.length);return e.runWebGPUProgram(s,[o,n,i],It(n.dtype,i.dtype))}var IN={kernelName:Su,backendName:"webgpu",kernelFunc:yj};var vj=ke({opType:ie.SELU}),TN={kernelName:wu,backendName:"webgpu",kernelFunc:vj};var bj=ke({opType:ie.SIGMOID}),EN={kernelName:Si,backendName:"webgpu",kernelFunc:bj};var Sj=ke({opType:ie.SIGN}),NN={kernelName:ku,backendName:"webgpu",kernelFunc:Sj};var wj=ke({opType:ie.SIN}),RN={kernelName:Cu,backendName:"webgpu",kernelFunc:wj};var Cj=ke({opType:ie.SINH}),$N={kernelName:_u,backendName:"webgpu",kernelFunc:Cj};var _j=ke({opType:ie.SOFTPLUS}),PN={kernelName:Iu,backendName:"webgpu",kernelFunc:_j};var _g=class{constructor(t,e,o,n,i,s){this.variableNames=["x"],this.outputShape=[],this.uniforms="",this.workgroupSize=[64,1,1],this.size=!0;let a=new Array(n.length);for(let l=0;l<a.length;l++)a[l]=n[i[l]];this.outputShape=a,this.newDim=i,this.dispatchLayout=oe(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize),this.xShape=t,this.paddedXShape=e,this.uniforms+=`reshapedPaddedXShape : ${ft(n.length)}, paddedXShapeStrides : ${ft(s)}, `,o.map((l,u)=>{this.uniforms+=` pad${u} : vec2<i32>,`}),this.shaderKey=`spaceToBatchND_${i}`}getUserCode(){let t=ft(this.outputShape.length),e=tv(this.newDim);return`
      ${Ap(this.paddedXShape,"PaddedX")}
      ${Q("index")} {
        if(index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let switchedIndex = getIndexFromCoords${this.outputShape.length}D(${t}(${e}), uniforms.reshapedPaddedXShape);
          let paddedCoords = getPaddedXCoordsFromIndex(switchedIndex);
          ${mv(this.xShape,!0)}
        }
      }
    `}};var kj=r=>{let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{blockShape:i,paddings:s}=o;S.assert(n.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGPU backend not implemented yet");let a=i.reduce((b,I)=>b*I),l=[[0,0]];l.push(...s);for(let b=1+i.length;b<n.shape.length;++b)l.push([0,0]);let u=l.map((b,I)=>b[0]+n.shape[I]+b[1]),c=$.getReshaped(u,i,a,!1),p=$.getPermuted(c.length,i.length,!1),d=$.getReshapedPermuted(u,i,a,!1),m=S.computeStrides(u),f=new _g(n.shape,u,l,c,p,m.length),g=[{type:"int32",data:c},{type:"int32",data:m}];l.map(b=>g.push({type:"int32",data:[b[0],b[1]]}));let x=e.runWebGPUProgram(f,[n],n.dtype,g),y=me({inputs:{x},backend:e,attrs:{shape:d}});return e.disposeData(x.dataId),y},AN={kernelName:Eu,backendName:"webgpu",kernelFunc:kj};var kg=class{constructor(t,e,o){this.variableNames=["input","indices","segmentIds"],this.outputShape=[],this.uniforms="segmentSize : i32, sparseSize : i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=t,this.type=o,this.dispatchLayout=oe([e]),this.dispatch=Z(this.dispatchLayout,[e],this.workgroupSize),this.shaderKey="sparseSegmentSum"}getUserCode(){return`
    ${Q("index")} {
      if (index < uniforms.sparseSize) {
        let indexInSegmentIds = index / uniforms.segmentSize;
        let indexInSegment = index % uniforms.segmentSize;
        let indexInInput = indices[indexInSegmentIds];
        let segmentId = segmentIds[indexInSegmentIds];

        let value = input[indexInInput * uniforms.segmentSize + indexInSegment];
        let outIndex = segmentId * uniforms.segmentSize + indexInSegment;
        ${Zr("&result[outIndex]","value",this.type)}
      }
    }
  `}},Ig=class{constructor(t,e){this.variableNames=["segmentIds"],this.outputShape=[],this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=[t],this.dispatchLayout=oe(e),this.dispatch=Z(this.dispatchLayout,e,this.workgroupSize),this.shaderKey="sparseSegmentIdCountProgram"}getUserCode(){return`
    ${Q("index")} {
      if (index < uniforms.segmentIdsShape) {
        let segmentId = segmentIds[index];
        ${Zr("&result[segmentId]","1","int32")}
      }
    }
  `}},Tg=class{constructor(t,e){this.variableNames=["segmentSum","sameSegmentIdCount"],this.outputShape=[],this.uniforms="segmentSize : i32",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.type=e,this.dispatchLayout=oe(t),this.dispatch=Z(this.dispatchLayout,t,this.workgroupSize),this.shaderKey="sparseSegmentMean"}getUserCode(){return`
    ${Q("index")} {
      if (index < uniforms.size) {
        let segmentId = index / uniforms.segmentSize;
        let count = sameSegmentIdCount[segmentId];
        if (count != 0) {
          ${this.type==="float32"?"setOutputAtIndex(index, segmentSum[index] / f32(count));":"setOutputAtIndexI32(index, segmentSum[index] / count);"}
        }
      }
    }
  `}};function Eg(r,t,e,o=!1,n){let s=S.sizeFromShape(r.shape)/r.shape[0],a=r.dtype,l=S.sizeFromShape(t.shape),u=n.readSync(e.dataId),p=l>0?u[l-1]+1:0,d,m=r.shape.slice();m[0]=p;let f=l*s,g=St({backend:n,attrs:{shape:m,value:0,dtype:a}});d=new kg(m,f,a);let x=[{type:"int32",data:[s]},{type:"int32",data:[f]}],y=n.runWebGPUProgram(d,[r,t,e],a,x,g);if(o)return y;let b=St({backend:n,attrs:{shape:[p],value:0,dtype:"int32"}});d=new Ig(p,e.shape);let I=n.runWebGPUProgram(d,[e],"int32",null,b),N=St({backend:n,attrs:{shape:m,value:0,dtype:a}});d=new Tg(m,a),x=[{type:"int32",data:[s]}];let F=n.runWebGPUProgram(d,[y,I],a,x,N);return n.disposeData(y.dataId),n.disposeData(I.dataId),F}function Ij(r){let{inputs:t,backend:e}=r,{data:o,indices:n,segmentIds:i}=t;return Eg(o,n,i,!1,e)}var DN={kernelName:$u,backendName:"webgpu",kernelFunc:Ij};function Tj(r){let{inputs:t,backend:e}=r,{data:o,indices:n,segmentIds:i}=t;return Eg(o,n,i,!0,e)}var FN={kernelName:Pu,backendName:"webgpu",kernelFunc:Tj};var Ng=class{constructor(t,e){this.variableNames=["A"],this.workgroupSize=[64,1,1],this.size=!0;let o=new Array(t.length);for(let n=0;n<o.length;n++)o[n]=t[n]*e[n];this.outputShape=o,this.dispatchLayout=oe(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize),this.rank=this.outputShape.length,this.shaderKey="tile"}getUserCode(){let t=Ej(this.rank,"uniforms.");return`
      ${Q("index")} {
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          setOutputAtIndex(index, getA(${t}));
        }
      }
    `}};function Ej(r,t=""){if(r>=5)throw Error(`Tile for rank ${r} is not yet supported`);if(r===1)return`(resRC % ${t}aShape)`;let e=["resRC.x","resRC.y","resRC.z","resRC.w"],o=[];for(let n=0;n<r;n++)o.push(`(${e[n]} % ${t}aShape[${n}])`);return o.join()}function qp(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{reps:i}=o;if(e.shouldExecuteOnCPU([n])||n.dtype==="string"||n.shape.length>=5){let l=e.readSync(n.dataId),u=n.dtype==="string"?l.map(d=>S.decodeString(d)):l,c=Le(n.shape,n.dtype,u),p=XT(c,i);return e.makeTensorInfo(p.shape,p.dtype,p.values)}let s=new Ng(n.shape,i);return e.runWebGPUProgram(s,[n],n.dtype)}var ON={kernelName:ki,backendName:"webgpu",kernelFunc:qp};function Nj(r){let{inputs:t,backend:e,attrs:o}=r,{sparseIndices:n,sparseValues:i,defaultValue:s}=t,{outputShape:a}=o,{sliceRank:l,numUpdates:u,sliceSize:c,strides:p,outputSize:d}=$.calculateShapes(i,n,a),m=!1;if(i.dtype==="string"){let H=e.bufferSync(n),K=e.bufferSync(i),X=S.decodeString(e.readSync(s.dataId)[0]),te=UT(H,K,a,d,c,u,l,p,X,m);return e.makeTensorInfo(a,te.dtype,te.values)}let f=[d/c,c],g=me({inputs:{x:n},backend:e,attrs:{shape:[u,l]}}),x=i.shape.length?me({inputs:{x:i},backend:e,attrs:{shape:[u,c]}}):$t({inputs:{x:i},backend:e}),y=x.dtype,b=e.makeTensorInfo([],y,S.makeZerosTypedArray(1,y)),I=me({inputs:{x:s},backend:e,attrs:{shape:Array(f.length).fill(1)}}),N=qp({inputs:{x:I},backend:e,attrs:{reps:f}}),F=S.sizeFromShape([u,c]),B=[{type:"int32",data:[l]},{type:"int32",data:p},{type:"int32",data:[F]}];switch(u){case 0:break;case 1:{let H=new mn([u,c],l,g.shape.length,x.shape.length,p,f,y,m);e.runWebGPUProgram(H,[x,g],y,B,N)}break;default:{let H=new mn([u,c],l,g.shape.length,b.shape.length,p,f,y,m);e.runWebGPUProgram(H,[b,g],y,B,N)}{let H=new mn([u,c],l,g.shape.length,x.shape.length,p,f,y);e.runWebGPUProgram(H,[x,g],y,B,N)}}let z=me({inputs:{x:N},backend:e,attrs:{shape:a}});return e.disposeData(g.dataId),e.disposeData(x.dataId),e.disposeData(I.dataId),e.disposeData(b.dataId),e.disposeData(N.dataId),z}var LN={kernelName:Au,backendName:"webgpu",kernelFunc:Nj};function Rj(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{numOrSizeSplits:i,axis:s}=o,a=S.parseAxisParam(s,n.shape)[0],l=$.prepareSplitSize(n,i,a),u=n.shape.length,c=new Array(u).fill(0),p=n.shape.slice();return l.map(d=>{let m=[...p];m[a]=d;let f=Go({inputs:{x:n},backend:e,attrs:{begin:c,size:m}});return c[a]+=d,f})}var MN={kernelName:Nu,backendName:"webgpu",kernelFunc:Rj};var $j=ke({opType:ie.SQRT}),BN={kernelName:wi,backendName:"webgpu",kernelFunc:$j};var VN={kernelName:pm,backendName:"webgpu",kernelFunc:({inputs:r,backend:t})=>{let{x:e}=r,o=t,n=new eo(e.shape,ie.SQUARE);return o.runWebGPUProgram(n,[e],e.dtype)}};var Pj=Ze({opType:Ce.SQUARED_DIFFERENCE}),WN={kernelName:Ci,backendName:"webgpu",kernelFunc:Pj};function Aj({inputs:r,attrs:t,backend:e}){let{x:o}=r,n=new eo(o.shape,ie.STEP,"stepAlpha : f32,"),i=[{type:"float32",data:[t.alpha]}];return e.runWebGPUProgram(n,[o],o.dtype,i)}var zN={kernelName:Gu,backendName:"webgpu",kernelFunc:Aj};var Rg=class{constructor(t){this.variableNames=["x"],this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=oe(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]);let e=ft(this.outputShape.length);this.uniforms=`begin : ${e},  strides : ${e}, `,this.shaderKey="stridedSlice"}getUserCode(){let t=this.outputShape.length,e="";if(t===1)e="coords * uniforms.strides + uniforms.begin";else{let n=0;e=this.outputShape.map((i,s)=>(n++,this.outputShape.length===1?`coords * uniforms.strides[${s}] + uniforms.begin[${s}]`:`coords[${n-1}] * uniforms.strides[${s}] + uniforms.begin[${s}]`)).join(",")}return`
       ${Q("index")} {
         if (index < uniforms.size) {
           let coords = getCoordsFromIndex(index);
           setOutputAtIndex(index, getX(${e}));
         }
       }
     `}};function Dj(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{begin:i,end:s,strides:a,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:p,shrinkAxisMask:d}=o,{finalShapeSparse:m,finalShape:f,isIdentity:g,sliceDim0:x,isSimpleSlice:y,begin:b,end:I,strides:N}=Gt.sliceInfo(n.shape,i,s,a,l,u,c,p,d),F;if(g)F=me({inputs:{x:n},backend:e,attrs:{shape:f}});else if(x||y){S.assert(n.shape.length>=1,()=>`Input must have rank at least 1, got: ${n.shape.length}`);let B=Gt.computeOutShape(b,I,N),z=Go({inputs:{x:n},backend:e,attrs:{begin:b,size:B}});F=me({inputs:{x:z},backend:e,attrs:{shape:f}}),e.disposeData(z.dataId)}else if(e.shouldExecuteOnCPU([n])){let z=e.readSync(n.dataId),H=Le(n.shape,n.dtype,z),K=KT(m,H,N,b);F=e.makeTensorInfo(f,n.dtype,K.values)}else{let z=new Rg(m),H=[{type:"int32",data:b},{type:"int32",data:N}],K=e.runWebGPUProgram(z,[n],n.dtype,H);F=me({inputs:{x:K},backend:e,attrs:{shape:f}}),e.disposeData(K.dataId)}return F}var UN={kernelName:Fu,backendName:"webgpu",kernelFunc:Dj};function Fj(r){let{inputs:t,backend:e,attrs:o}=r,{separator:n,nGramWidths:i,leftPad:s,rightPad:a,padWidth:l,preserveShortSequences:u}=o,{data:c,dataSplits:p}=t,d=e.readSync(c.dataId),m=e.readSync(p.dataId),[f,g]=qT(d,m,n,i,s,a,l,u);return[e.makeTensorInfo([f.length],"string",f),e.makeTensorInfo(p.shape,"int32",g)]}var GN={kernelName:Ou,backendName:"webgpu",kernelFunc:Fj};var Oj=Ze({opType:Ce.SUB,cpuKernelImpl:jT,supportsComplex:!0}),HN={kernelName:_i,backendName:"webgpu",kernelFunc:Oj};var Lj=ke({opType:ie.TAN}),KN={kernelName:Lu,backendName:"webgpu",kernelFunc:Lj};var Mj=ke({opType:ie.TANH}),qN={kernelName:Mu,backendName:"webgpu",kernelFunc:Mj};function Bj(r){let{inputs:t,backend:e,attrs:o}=r,{tensor:n,indices:i,updates:s}=t,{}=o,{sliceRank:a,numUpdates:l,sliceSize:u,strides:c,outputSize:p}=$.calculateShapes(s,i,n.shape),d=[p/u,u];if(p===0)return e.makeTensorInfo(n.shape,i.dtype);let m=[],f=me({inputs:{x:i},backend:e,attrs:{shape:[l,a]}});m.push(f);let g=me({inputs:{x:s},backend:e,attrs:{shape:[l,u]}});m.push(g);let x=me({inputs:{x:n},backend:e,attrs:{shape:d}});m.push(x);let y=qp({inputs:{x},backend:e,attrs:{reps:Array(d.length).fill(1)}}),b=new mn([l,u],a,f.shape.length,g.shape.length,c,d,n.dtype,!1),I=S.sizeFromShape([l,u]),N=[{type:"int32",data:[a]},{type:"int32",data:c},{type:"int32",data:[I]}],F=e.runWebGPUProgram(b,[g,f],x.dtype,N,y);m.push(F);let B=me({inputs:{x:F},backend:e,attrs:{shape:n.shape}});return m.forEach(z=>e.disposeData(z.dataId)),B}var jN={kernelName:vu,backendName:"webgpu",kernelFunc:Bj};var $g=class{constructor(t){this.variableNames=["x","indices"],this.workgroupSize=[256,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=oe(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms=`inputSize : i32, firstPass : i32, negativeInf : f32,
        dir : i32, inc : i32,`,this.shaderKey="swap"}getUserCode(){return`
        ${Q("index")} {
          if (index < uniforms.size) {
            let outC = getCoordsFromIndex(index);
            let batch = outC[0];
            let elemIdx = outC[1];
            // We compare elements pair-wise within a group of size 2 * inc.
            // The comparing rule for each group alternates between ascending
            // and descending. Within each group, we compare each pair at
            // positions i and i+inc. To decide whether an element at position i
            // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
            // inc, it is in the first half of the group, we denote it as x0,
            // otherwise we denote it as x1.
            // For example, as shown in the Bitonic top K paper referenced
            // above, Figure5(a) shows that element[1] is in the second half of
            // the group when group size is 2, but it is in the first half of
            // the group when group size is 4.
            let isFirstInPair = elemIdx % (2 * uniforms.inc) < uniforms.inc;
            var i = 0;
            if (isFirstInPair) {
              i = elemIdx;
            } else {
              i = elemIdx - uniforms.inc;
            }

            var i0 = 0;
            if (uniforms.firstPass == 1) {
              i0 = i;
            } else {
              i0 = i32(getIndices(batch, i));
            }

            var i1 = 0;
            if (uniforms.firstPass == 1) {
              i1 = i + uniforms.inc;
            } else {
              i1 = i32(getIndices(batch, i + uniforms.inc));
            }

            var x0 = f32(0.0);
            var x1 = f32(0.0);
            if (i0 < uniforms.inputSize) {
              x0 = getX(batch, i0);
            } else {
              x0 = uniforms.negativeInf;
            }
            if (i1 < uniforms.inputSize) {
              x1 = getX(batch, i1);
            } else {
              x1 = uniforms.negativeInf;
            }

            let reverse = elemIdx % (2 * uniforms.dir) >= uniforms.dir;
            let isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
            if (reverse == isGreater) {
              // Elements in opposite order of direction
              let iTemp = i0;
              i0 = i1;
              i1 = iTemp;
            }
            if (isFirstInPair) {
              setOutputAtIndex(index, f32(i0));
            } else {
              setOutputAtIndex(index, f32(i1));
            }
          }
        }
      `}},Pg=class{constructor(t){this.variableNames=["x","indices"],this.workgroupSize=[256,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=oe(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms="inputSize : i32, firstPass : i32, k : i32,",this.shaderKey="merge"}getUserCode(){return`
        ${Q("index")} {
          if (index < uniforms.size) {
            let outC = getCoordsFromIndex(index);
            let batch = outC[0];
            let elemIdx = outC[1];
            // The output size is half of the previous size.
            // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _
            // (k=4), we only need to output the indices at positions |, the
            // indices at positions _ can be thrown away, see Figure5(b) After
            // Phase 2 (Merge phase) in the Bitonic Top K paper referenced
            // above.
            // For example, the paper shows we only need to output the orange
            // bars. The output sequence should look like this | | | | | | | |.
            // Because the sequence is halved, to map the output index back to
            // the previous sequence to find the corresponding value, we need
            // to double the index. When we double the index, we basically
            // interpolate a position, so 2i looks like
            // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k
            // position of each 2k positions by - elemIdx % k. E.g. for output
            // at index 4,5,6,7, we want to get the corresponding element at
            // original index 8,9,10,11, for output at index 8,9,10,11,
            // we want to get the corresponding element at original index
            // 16,17,18,19, so on and so forth.

            var i = 0;
            if (elemIdx < uniforms.k) {
              i = elemIdx;
            } else {
              i = elemIdx * 2 - elemIdx % uniforms.k;
            }
            var i0 = 0;
            if (uniforms.firstPass == 1) {
              i0 = i;
            } else {
              i0 = i32(getIndices(batch, i));
            }
            var i1 = 0;
            if (uniforms.firstPass == 1) {
              i1 = i + uniforms.k;
            } else {
              i1 = i32(getIndices(batch, i + uniforms.k));
            }

            let x0 = getX(batch, i0);
            var x1 = f32(0.0);
            if (i1 < uniforms.inputSize) {
              x1 = getX(batch, i1);
            } else {
              x1 = x0;
            }

            if (x0 >= x1) {
              setOutputAtIndex(index, f32(i0));
            } else {
              setOutputAtIndex(index, f32(i1));
            }
          }
        }
      `}};function _c(r,t){t!==null&&r.disposeData(t.dataId)}function XN(r){let t=1;for(;t<r;)t*=2;return t}function Vj(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{k:i,sorted:s}=o,a=n.shape,l=a[a.length-1];if(e.shouldExecuteOnCPU([n])){let F=e.readSync(n.dataId),[B,z]=YT(F,a,n.dtype,i,s);return[e.makeTensorInfo(B.shape,B.dtype,B.values),e.makeTensorInfo(z.shape,z.dtype,z.values)]}if(i===0)return a[a.length-1]=0,[e.makeTensorInfo(a,n.dtype,[]),e.makeTensorInfo(a,"int32",[])];if(l===1)return[n,St({attrs:{shape:a,dtype:"int32",value:0},backend:e})];let c=S.sizeFromShape(a)/l,p=me({inputs:{x:n},attrs:{shape:[c,l]},backend:e}),d=XN(i),m=XN(l),f=null,g=()=>f===null?[p,p]:[p,f],x=(F,B,z)=>{let H=g(),K=new $g(z),te=[{type:"int32",data:[l]},{type:"int32",data:[f===null?1:0]},{type:"float32",data:[Number.NEGATIVE_INFINITY]},{type:"int32",data:[F]},{type:"int32",data:[B]}],ue=f;f=e.runWebGPUProgram(K,H,"int32",te),_c(e,ue)};for(let F=1;F<d;F*=2){let B=F*2;for(let z=F;z>=1;z/=2)x(B,z,[c,m])}for(let F=m;F>d;F/=2){let B=g(),z=new Pg([c,F/2]),K=[{type:"int32",data:[l]},{type:"int32",data:[f===null?1:0]},{type:"int32",data:[d]}],X=f;f=e.runWebGPUProgram(z,B,"int32",K),_c(e,X);let te=d/2,ue=te*2;for(let pe=te;pe>=1;pe/=2)x(ue,pe,f.shape)}let y=f;f=Go({inputs:{x:f},backend:e,attrs:{begin:0,size:[c,i]}}),_c(e,y);let b=pv({inputs:{x:p,indices:f},backend:e,attrs:{axis:1,batchDims:1}});_c(e,p);let I=a.slice(0,-1);I.push(i),y=f,f=me({inputs:{x:f},attrs:{shape:I},backend:e}),_c(e,y);let N=b;return b=me({inputs:{x:b},attrs:{shape:I},backend:e}),_c(e,N),[b,f]}var YN={kernelName:Bu,backendName:"webgpu",kernelFunc:Vj};var Ag=class{constructor(t){this.variableNames=["Image","Transforms"],this.uniforms="interpolationModeId : i32, fillModeId : i32, fillValue : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=oe(this.outputShape),this.dispatch=Z(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="transform"}getUserCode(){return`
          fn mapCoord(outCoord : f32, len : f32) -> f32{
            var inCoord = outCoord;
            if(uniforms.fillModeId == 2) {
              if (inCoord < 0.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz2 = 2.0 * len;
                  if (inCoord < sz2) {
                    inCoord = sz2 * f32(i32(f32(-inCoord / sz2))) +
                    inCoord;
                  }
                  if (inCoord < -len) {
                    inCoord = inCoord + sz2;
                  } else {
                    inCoord = -inCoord - 1.0;
                  }
                }
              } else if (inCoord > len - 1.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz2 = 2.0 * len;
                  inCoord = inCoord - sz2 * f32(i32(f32(inCoord / sz2)));
                  if (inCoord >= len) {
                    inCoord = sz2 - inCoord - 1.0;
                  }
                }
              }
              return clamp(inCoord, 0.0, len - 1.0);
            } else if (uniforms.fillModeId == 3) {
              if (inCoord < 0.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz = len - 1.0;
                  inCoord = inCoord + len * (f32(i32(f32(-inCoord / sz))) + 1.0);
                }
              } else if (inCoord > len - 1.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz = len - 1.0;
                  inCoord = inCoord - len * f32(i32(f32(inCoord / sz)));
                }
              }
              return clamp(inCoord, 0.0, len - 1.0);
            } else if (uniforms.fillModeId == 4) {
              return clamp(outCoord, 0.0, len - 1.0);
            }
            return outCoord;
          }
          fn readWithFillValue(batch : i32, coordY : i32, coordX : i32,
            channel : i32) -> f32 {
            var outputValue : f32;
            if (0 <= coordY && coordY < uniforms.imageShape[1] && 0 <= coordX && coordX < uniforms.imageShape[2]) {
                outputValue = getImage(batch, coordY, coordX, channel);
            } else {
              outputValue = uniforms.fillValue;
            }
            return outputValue;
          }

          ${Q("index")} {
            if (index < uniforms.size) {
              let coords = getCoordsFromIndex(index);
              var outputValue : f32;
              let batch = coords[0];
              let x = coords[2];
              let y = coords[1];
              let channel = coords[3];
              let xf = f32(x);
              let yf = f32(y);
              let a1 = getTransforms(batch, 0);
              let a2 = getTransforms(batch, 1);
              let a3 = getTransforms(batch, 2);
              let b1 = getTransforms(batch, 3);
              let b2 = getTransforms(batch, 4);
              let b3 = getTransforms(batch, 5);
              let c1 = getTransforms(batch, 6);
              let c2 = getTransforms(batch, 7);
              let projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = uniforms.fillValue;
              } else {
                let inX = (a1 * xf + a2 * yf + a3) / projection;
                let inY = (b1 * xf + b2 * yf + b3) / projection;
                let mapX = mapCoord(inX, f32(uniforms.imageShape[2]));
                let mapY = mapCoord(inY, f32(uniforms.imageShape[1]));

                if (uniforms.interpolationModeId == 1) {
                  let coordY = i32(round(mapY));
                  let coordX = i32(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  let yFloor = floor(mapY);
                  let xFloor = floor(mapX);
                  let yCeil = yFloor + 1.0;
                  let xCeil = xFloor + 1.0;
                  let valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, i32(yFloor), i32(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, i32(yFloor), i32(xCeil), channel);
                  let valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, i32(yCeil), i32(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, i32(yCeil), i32(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutputAtIndex(index, outputValue);
            }
          }
        `}};function Wj(r){let{inputs:t,backend:e,attrs:o}=r,{image:n,transforms:i}=t,{interpolation:s,fillMode:a,fillValue:l,outputShape:u}=o,[c,p,d,m]=n.shape,[f,g]=u??[p,d],x=[c,f,g,m],y=new Ag(x),b=s==="nearest"?1:2,I;switch(a){case"constant":I=1;break;case"reflect":I=2;break;case"wrap":I=3;break;case"nearest":I=4;break;default:I=1;break}let N=[{type:"int32",data:[b]},{type:"int32",data:[I]},{type:"float32",data:[l]}];return e.runWebGPUProgram(y,[n,i],"float32",N)}var QN={kernelName:Vu,backendName:"webgpu",kernelFunc:Wj};function zj(r){let{inputs:t,backend:e,attrs:o}=r,{value:n}=t,{axis:i}=o;i<0&&(i+=n.shape.length);let s=n,a=s.shape.length,l=n.shape[i],u=new Array(a-1),c=0;for(let g=0;g<a;g++)g!==i&&(u[c++]=s.shape[g]);let p=[],d=new Array(a).fill(0),m=s.shape.slice();m[i]=1;let f=new Array(l);for(let g=0;g<f.length;g++){d[i]=g;let x=Go({inputs:{x:s},backend:e,attrs:{begin:d,size:m}}),y=me({inputs:{x},backend:e,attrs:{shape:u}});f[g]=y,p.push(x)}return p.forEach(g=>e.disposeData(g.dataId)),f}var ZN={kernelName:Wu,backendName:"webgpu",kernelFunc:zj};var Dg=class{constructor(t,e,o){if(this.outputShape=[],this.variableNames=["x","segmentIds"],this.uniforms="numSegments : i32, xSize: i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=e,this.dispatchLayout=oe(t),this.dispatch=Z(this.dispatchLayout,t,this.workgroupSize),o!=="float32"&&o!=="int32")throw new Error(`UnsortedSegmentSum only supports float32 and int32
              types, does not support ${o} type.`);this.type=o,this.shaderKey="unsortedSegmentSum"}getUserCode(){return`
    ${Q("index")} {
      if (index < uniforms.xSize) {
        let coords = getXCoordsFromIndex(index);
        let b = coords[0];
        let inCol = coords[1];

        let segmentId = i32(getSegmentIds(inCol));
        if (segmentId >= 0) {
          let flatIndex = b * uniforms.numSegments + segmentId % uniforms.numSegments;
          let value = getX(b, inCol);

          ${Zr("&result[flatIndex]","value",this.type)}
        }
      }
    }
  `}};function Uj(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,segmentIds:i}=t,{numSegments:s}=o,a=n.shape.length,l=[],u=0,c=$.getAxesPermutation([u],a),p=n;c!=null&&(p=mr({inputs:{x:n},backend:e,attrs:{perm:c}}),l.push(p),u=$.getInnerMostAxes(1,a)[0]);let d=$.segment_util.computeOutShape(p.shape,u,s),m=S.sizeFromShape([p.shape[u]]),f=me({inputs:{x:p},backend:e,attrs:{shape:[-1,m]}});l.push(f);let g=n.dtype,x=[f.shape[0],s],y=St({backend:e,attrs:{shape:x,value:0,dtype:g}}),b=new Dg(f.shape,x,g),I=[{type:"int32",data:[s]},{type:"int32",data:[S.sizeFromShape(f.shape)]}],N=e.runWebGPUProgram(b,[f,i],g,I,y),F=me({inputs:{x:N},backend:e,attrs:{shape:d}});l.push(N);let B=F;if(c!=null){l.push(F);let z=$.getUndoAxesPermutation(c);B=mr({inputs:{x:B},backend:e,attrs:{perm:z}})}return l.forEach(z=>e.disposeData(z.dataId)),B}var JN={kernelName:zu,backendName:"webgpu",kernelFunc:Uj};var Gj=[DI,ZT,JT,eE,tE,rE,nE,iE,sE,aE,lE,uE,cE,pE,dE,hE,gE,xE,yE,vE,SE,wE,CE,TE,EE,NE,OI,$E,AE,DE,FE,OE,LE,ME,BE,VE,WE,zE,HE,KE,qE,jE,YE,QE,XE,ZE,JE,e3,t3,r3,i3,s3,a3,l3,u3,c3,p3,d3,m3,PI,f3,x3,h3,g3,y3,v3,b3,S3,w3,C3,_3,FI,k3,PE,I3,T3,E3,N3,R3,$3,P3,D3,A3,F3,O3,L3,B3,V3,mE,W3,z3,H3,U3,G3,K3,fE,q3,j3,X3,Y3,Z3,o3,J3,eN,tN,_E,rN,iN,sN,aN,lN,uN,cN,pN,kE,dN,mN,fN,hN,AI,gN,xN,yN,vN,bN,SN,wN,CN,_N,kN,IN,TN,EN,NN,RN,$N,bE,zN,UN,GN,Q3,PN,AN,DN,FN,LN,MN,BN,VN,WN,HN,n3,KN,qN,jN,ON,YN,QN,oE,ZN,JN,oN];for(let r of Gj)gm(r);var $R=function(r,t){return($R=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,o){e.__proto__=o}||function(e,o){for(var n in o)Object.prototype.hasOwnProperty.call(o,n)&&(e[n]=o[n])})(r,t)};function PR(r,t){if(typeof t!="function"&&t!==null)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");function e(){this.constructor=r}$R(r,t),r.prototype=t===null?Object.create(t):(e.prototype=t.prototype,new e)}var xt=function(){return(xt=Object.assign||function(r){for(var t,e=1,o=arguments.length;e<o;e++)for(var n in t=arguments[e])Object.prototype.hasOwnProperty.call(t,n)&&(r[n]=t[n]);return r}).apply(this,arguments)};function ot(r,t,e,o){return new(e||(e=Promise))(function(n,i){function s(u){try{l(o.next(u))}catch(c){i(c)}}function a(u){try{l(o.throw(u))}catch(c){i(c)}}function l(u){var c;u.done?n(u.value):(c=u.value,c instanceof e?c:new e(function(p){p(c)})).then(s,a)}l((o=o.apply(r,t||[])).next())})}function nt(r,t){var e,o,n,i,s={label:0,sent:function(){if(1&n[0])throw n[1];return n[1]},trys:[],ops:[]};return i={next:a(0),throw:a(1),return:a(2)},typeof Symbol=="function"&&(i[Symbol.iterator]=function(){return this}),i;function a(l){return function(u){return function(c){if(e)throw new TypeError("Generator is already executing.");for(;s;)try{if(e=1,o&&(n=2&c[0]?o.return:c[0]?o.throw||((n=o.return)&&n.call(o),0):o.next)&&!(n=n.call(o,c[1])).done)return n;switch(o=0,n&&(c=[2&c[0],n.value]),c[0]){case 0:case 1:n=c;break;case 4:return s.label++,{value:c[1],done:!1};case 5:s.label++,o=c[1],c=[0];continue;case 7:c=s.ops.pop(),s.trys.pop();continue;default:if(n=s.trys,!((n=n.length>0&&n[n.length-1])||c[0]!==6&&c[0]!==2)){s=0;continue}if(c[0]===3&&(!n||c[1]>n[0]&&c[1]<n[3])){s.label=c[1];break}if(c[0]===6&&s.label<n[1]){s.label=n[1],n=c;break}if(n&&s.label<n[2]){s.label=n[2],s.ops.push(c);break}n[2]&&s.ops.pop(),s.trys.pop();continue}c=t.call(r,s)}catch(p){c=[6,p],o=0}finally{e=n=0}if(5&c[0])throw c[1];return{value:c[0]?c[1]:void 0,done:!0}}([l,u])}}}function Js(r,t,e){if(e||arguments.length===2)for(var o,n=0,i=t.length;n<i;n++)!o&&n in t||(o||(o=Array.prototype.slice.call(t,0,n)),o[n]=t[n]);return r.concat(o||Array.prototype.slice.call(t))}var fn=["nose","left_eye","right_eye","left_ear","right_ear","left_shoulder","right_shoulder","left_elbow","right_elbow","left_wrist","right_wrist","left_hip","right_hip","left_knee","right_knee","left_ankle","right_ankle"],Xp=["nose","left_eye_inner","left_eye","left_eye_outer","right_eye_inner","right_eye","right_eye_outer","left_ear","right_ear","mouth_left","mouth_right","left_shoulder","right_shoulder","left_elbow","right_elbow","left_wrist","right_wrist","left_pinky","right_pinky","left_index","right_index","left_thumb","right_thumb","left_hip","right_hip","left_knee","right_knee","left_ankle","right_ankle","left_heel","right_heel","left_foot_index","right_foot_index"],Hj={left:[1,2,3,7,9,11,13,15,17,19,21,23,25,27,29,31],right:[4,5,6,8,10,12,14,16,18,20,22,24,26,28,30,32],middle:[0]},Kj={left:[1,3,5,7,9,11,13,15],right:[2,4,6,8,10,12,14,16],middle:[0]},qj=[[0,1],[0,2],[1,3],[2,4],[5,6],[5,7],[5,11],[6,8],[6,12],[7,9],[8,10],[11,12],[11,13],[12,14],[13,15],[14,16]],jj=[[0,1],[0,4],[1,2],[2,3],[3,7],[4,5],[5,6],[6,8],[9,10],[11,12],[11,13],[11,23],[12,14],[14,16],[12,24],[13,15],[15,17],[16,18],[16,20],[15,17],[15,19],[15,21],[16,22],[17,19],[18,20],[23,25],[23,24],[24,26],[25,27],[26,28],[27,29],[28,30],[27,31],[28,32],[29,31],[30,32]];function Fg(r){return r instanceof SVGAnimatedLength?r.baseVal.value:r}function AR(r){return ot(this,void 0,void 0,function(){var t,e;return nt(this,function(o){switch(o.label){case 0:return t=document.createElement("canvas"),r instanceof at?[4,Wi.toPixels(r,t)]:[3,2];case 1:return o.sent(),[3,3];case 2:t.width=Fg(r.width),t.height=Fg(r.height),e=t.getContext("2d"),r instanceof ImageData?e.putImageData(r,0,0):e.drawImage(r,0,0),o.label=3;case 3:return[2,t]}})})}function DR(r){return ot(this,void 0,void 0,function(){var t,e,o,n,i,s;return nt(this,function(a){switch(a.label){case 0:return r instanceof at?(t=r.shape.slice(0,2),e=t[0],o=t[1],n=ImageData.bind,[4,Wi.toPixels(r)]):[3,2];case 1:return[2,new(n.apply(ImageData,[void 0,a.sent(),o,e]))];case 2:return i=document.createElement("canvas"),s=i.getContext("2d"),i.width=Fg(r.width),i.height=Fg(r.height),s.drawImage(r,0,0),[2,s.getImageData(0,0,i.width,i.height)]}})})}function Xj(r){return ot(this,void 0,void 0,function(){var t,e;return nt(this,function(o){switch(o.label){case 0:return r instanceof SVGImageElement||r instanceof OffscreenCanvas?[4,AR(r)]:[3,2];case 1:return e=o.sent(),[3,3];case 2:e=r,o.label=3;case 3:return t=e,[2,Wi.fromPixels(t,4)]}})})}function FR(r){if(r<0||r>=256)throw new Error("Mask value must be in range [0, 255] but got ".concat(r));if(!Number.isInteger(r))throw new Error("Mask value must be an integer but got ".concat(r))}var jp={runtime:"mediapipe",enableSmoothing:!0,enableSegmentation:!1,smoothSegmentation:!0,modelType:"full"},Yj=function(){function r(t){this.mask=t}return r.prototype.toCanvasImageSource=function(){return ot(this,void 0,void 0,function(){return nt(this,function(t){return[2,this.mask]})})},r.prototype.toImageData=function(){return ot(this,void 0,void 0,function(){return nt(this,function(t){return[2,DR(this.mask)]})})},r.prototype.toTensor=function(){return ot(this,void 0,void 0,function(){return nt(this,function(t){return[2,Xj(this.mask)]})})},r.prototype.getUnderlyingType=function(){return"canvasimagesource"},r}();function Qj(r){return FR(r),"person"}var Zj=function(){function r(t){var e,o=this;switch(this.width=0,this.height=0,this.selfieMode=!1,this.poseSolution=new RR.Pose({locateFile:function(n,i){if(t.solutionPath){var s=t.solutionPath.replace(/\/+$/,"");return"".concat(s,"/").concat(n)}return"".concat(i,"/").concat(n)}}),t.modelType){case"lite":e=0;break;case"heavy":e=2;break;case"full":default:e=1}this.poseSolution.setOptions({modelComplexity:e,smoothLandmarks:t.enableSmoothing,enableSegmentation:t.enableSegmentation,smoothSegmentation:t.smoothSegmentation,selfieMode:this.selfieMode}),this.poseSolution.onResults(function(n){if(o.height=n.image.height,o.width=n.image.width,n.poseLandmarks==null)o.poses=[];else{var i=o.translateOutput(n.poseLandmarks,n.poseWorldLandmarks);n.segmentationMask&&(i.segmentation={maskValueToLabel:Qj,mask:new Yj(n.segmentationMask)}),o.poses=[i]}})}return r.prototype.translateOutput=function(t,e){var o=this,n={keypoints:t.map(function(i,s){return{x:i.x*o.width,y:i.y*o.height,z:i.z,score:i.visibility,name:Xp[s]}})};return e!=null&&(n.keypoints3D=e.map(function(i,s){return{x:i.x,y:i.y,z:i.z,score:i.visibility,name:Xp[s]}})),n},r.prototype.estimatePoses=function(t,e,o){return ot(this,void 0,void 0,function(){var n,i;return nt(this,function(s){switch(s.label){case 0:return e&&e.flipHorizontal&&e.flipHorizontal!==this.selfieMode&&(this.selfieMode=e.flipHorizontal,this.poseSolution.setOptions({selfieMode:this.selfieMode})),t instanceof at?(i=ImageData.bind,[4,Wi.toPixels(t)]):[3,2];case 1:return n=new(i.apply(ImageData,[void 0,s.sent(),t.shape[1],t.shape[0]])),[3,3];case 2:n=t,s.label=3;case 3:return t=n,[4,this.poseSolution.send({image:t},o)];case 4:return s.sent(),[2,this.poses]}})})},r.prototype.dispose=function(){this.poseSolution.close()},r.prototype.reset=function(){this.poseSolution.reset()},r.prototype.initialize=function(){return this.poseSolution.initialize()},r}();function Jj(r){return ot(this,void 0,void 0,function(){var t,e;return nt(this,function(o){switch(o.label){case 0:return t=function(n){if(n==null)return xt({},jp);var i=xt({},n);return i.runtime="mediapipe",i.enableSegmentation==null&&(i.enableSegmentation=jp.enableSegmentation),i.enableSmoothing==null&&(i.enableSmoothing=jp.enableSmoothing),i.smoothSegmentation==null&&(i.smoothSegmentation=jp.smoothSegmentation),i.modelType==null&&(i.modelType=jp.modelType),i}(r),[4,(e=new Zj(t)).initialize()];case 1:return o.sent(),[2,e]}})})}function Ic(r){return r instanceof at?{height:r.shape[0],width:r.shape[1]}:{height:r.height,width:r.width}}function OR(r){return r-2*Math.PI*Math.floor((r+Math.PI)/(2*Math.PI))}function Tv(r){return r instanceof at?r:Wi.fromPixels(r)}function LR(r,t,e){return Cv(e,"inputResolution"),[1/e.width*r[0][0]*t.width,1/e.height*r[0][1]*t.width,r[0][3]*t.width,1/e.width*r[1][0]*t.height,1/e.height*r[1][1]*t.height,r[1][3]*t.height,0,0]}function Cv(r,t){S.assert(r.width!==0,function(){return"".concat(t," width cannot be 0.")}),S.assert(r.height!==0,function(){return"".concat(t," height cannot be 0.")})}function fv(r,t,e){var o=e.rotationVectorStartKeypointIndex,n=e.rotationVectorEndKeypointIndex,i=r.locationData,s=i.relativeKeypoints[o].x*t.width,a=i.relativeKeypoints[o].y*t.height,l=i.relativeKeypoints[n].x*t.width,u=i.relativeKeypoints[n].y*t.height,c=2*Math.sqrt((l-s)*(l-s)+(u-a)*(u-a)),p=function(d,m,f){var g,x=d.locationData,y=f.rotationVectorStartKeypointIndex,b=f.rotationVectorEndKeypointIndex;g=f.rotationVectorTargetAngle?f.rotationVectorTargetAngle:Math.PI*f.rotationVectorTargetAngleDegree/180;var I=x.relativeKeypoints[y].x*m.width,N=x.relativeKeypoints[y].y*m.height,F=x.relativeKeypoints[b].x*m.width,B=x.relativeKeypoints[b].y*m.height;return OR(g-Math.atan2(-(B-N),F-I))}(r,t,e);return{xCenter:s/t.width,yCenter:a/t.height,width:c/t.width,height:c/t.height,rotation:p}}function MR(r){if(r.length!==16)throw new Error("Array length must be 16 but got ".concat(r.length));return[[r[0],r[1],r[2],r[3]],[r[4],r[5],r[6],r[7]],[r[8],r[9],r[10],r[11]],[r[12],r[13],r[14],r[15]]]}function hv(r,t,e,o,n,i,s){return r[t][n]*(r[e][i]*r[o][s]-r[e][s]*r[o][i])}function kr(r,t,e){var o=(t+1)%4,n=(t+2)%4,i=(t+3)%4,s=(e+1)%4,a=(e+2)%4,l=(e+3)%4;return hv(r,o,n,i,s,a,l)+hv(r,n,i,o,s,a,l)+hv(r,i,o,n,s,a,l)}function eR(r,t,e){e===void 0&&(e={ignoreRotation:!1});for(var o=[],n=0,i=r;n<i.length;n++){var s=i[n],a=s.x-.5,l=s.y-.5,u=e.ignoreRotation?0:t.rotation,c=Math.cos(u)*a-Math.sin(u)*l,p=Math.sin(u)*a+Math.cos(u)*l;c=c*t.width+t.xCenter,p=p*t.height+t.yCenter;var d=s.z*t.width,m=xt({},s);m.x=c,m.y=p,m.z=d,o.push(m)}return o}function BR(r,t){var e=function(o,n,i,s){var a=n-o,l=s-i;if(a===0)throw new Error("Original min and max are both ".concat(o,", range cannot be 0."));var u=l/a;return{scale:u,offset:i-o*u}}(0,255,t[0],t[1]);return Ne(function(){return fe(ae(r,e.scale),e.offset)})}function _v(r,t,e){var o,n,i,s,a,l,u,c,p,d,m,f,g,x,y=t.outputTensorSize,b=t.keepAspectRatio,I=t.borderMode,N=t.outputTensorFloatRange,F=Ic(r),B=function(K,X){return X?{xCenter:X.xCenter*K.width,yCenter:X.yCenter*K.height,width:X.width*K.width,height:X.height*K.height,rotation:X.rotation}:{xCenter:.5*K.width,yCenter:.5*K.height,width:K.width,height:K.height,rotation:0}}(F,e),z=function(K,X,te){if(te===void 0&&(te=!1),!te)return{top:0,left:0,right:0,bottom:0};var ue=X.height,pe=X.width;Cv(X,"targetSize"),Cv(K,"roi");var xe,be,Te=ue/pe,qe=K.height/K.width,je=0,st=0;return Te>qe?(xe=K.width,be=K.width*Te,st=(1-qe/Te)/2):(xe=K.height/Te,be=K.height,je=(1-Te/qe)/2),K.width=xe,K.height=be,{top:st,left:je,right:je,bottom:st}}(B,y,b),H=(o=B,n=F.width,i=F.height,s=!1,a=o.width,l=o.height,u=s?-1:1,c=Math.cos(o.rotation),p=Math.sin(o.rotation),d=o.xCenter,m=o.yCenter,f=1/n,g=1/i,(x=new Array(16))[0]=a*c*u*f,x[1]=-l*p*f,x[2]=0,x[3]=(-.5*a*c*u+.5*l*p+d)*f,x[4]=a*p*u*g,x[5]=l*c*g,x[6]=0,x[7]=(-.5*l*c-.5*a*p*u+m)*g,x[8]=0,x[9]=0,x[10]=a*f,x[11]=0,x[12]=0,x[13]=0,x[14]=0,x[15]=1,MR(x));return{imageTensor:Ne(function(){var K=Tv(r),X=Cr(LR(H,F,y),[1,8]),te=I==="zero"?"constant":"nearest",ue=Mn.transform(dr(Ue(K,"float32")),X,"bilinear",te,0,[y.height,y.width]);return N!=null?BR(ue,N):ue}),padding:z,transformationMatrix:H}}function tR(r,t,e,o){return o===1?.5*(r+t):r+(t-r)*e/(o-1)}function eX(r){return Ne(function(){var t=function(n){return Ne(function(){return[Oe(n,[0,0,0],[1,-1,1]),Oe(n,[0,0,1],[1,-1,-1])]})}(r),e=t[0],o=t[1];return{boxes:ct(o),logits:ct(e)}})}function VR(r){return r!=null&&r.currentTime!=null}function rR(r){for(var t={locationData:{relativeKeypoints:[]}},e=Number.MAX_SAFE_INTEGER,o=Number.MIN_SAFE_INTEGER,n=Number.MAX_SAFE_INTEGER,i=Number.MIN_SAFE_INTEGER,s=0;s<r.length;++s){var a=r[s];e=Math.min(e,a.x),o=Math.max(o,a.x),n=Math.min(n,a.y),i=Math.max(i,a.y),t.locationData.relativeKeypoints.push({x:a.x,y:a.y})}return t.locationData.relativeBoundingBox={xMin:e,yMin:n,xMax:o,yMax:i,width:o-e,height:i-n},t}function tX(r,t,e,o){return ot(this,void 0,void 0,function(){var n,i,s,a,l;return nt(this,function(u){switch(u.label){case 0:return r.sort(function(c,p){return Math.max.apply(Math,p.score)-Math.max.apply(Math,c.score)}),n=Cr(r.map(function(c){return[c.locationData.relativeBoundingBox.yMin,c.locationData.relativeBoundingBox.xMin,c.locationData.relativeBoundingBox.yMax,c.locationData.relativeBoundingBox.xMax]})),i=Rt(r.map(function(c){return c.score[0]})),[4,Mn.nonMaxSuppressionAsync(n,i,t,e)];case 1:return[4,(s=u.sent()).array()];case 2:return a=u.sent(),l=r.filter(function(c,p){return a.indexOf(p)>-1}),Xe([n,i,s]),[2,l]}})})}function WR(r,t){return r.map(function(e){var o=xt(xt({},e),{x:e.x*t.width,y:e.y*t.height});return e.z!=null&&(o.z=e.z*t.width),o})}function rX(r,t,e){return ot(this,void 0,void 0,function(){var o,n,i,s,a,l,u,c,p,d,m,f,g,x,y,b,I,N,F,B,z,H,K,X;return nt(this,function(te){switch(te.label){case 0:if(o=ct(t,[0]),n=o.shape,i=n[0],s=n[1],a=n[2],r.length!==a)throw new Error("Expected heatmap to have same number of channels as the number of landmarks. But got landmarks length: "+"".concat(r.length,", heatmap length: ").concat(a));return l=[],[4,o.buffer()];case 1:for(u=te.sent(),c=0;c<r.length;c++)if(p=r[c],d=xt({},p),l.push(d),m=Math.trunc(d.x*s),f=Math.trunc(d.y*i),!(m<0||m>=s||f<0||m>=i)){for(g=Math.trunc((e.kernelSize-1)/2),x=Math.max(0,m-g),y=Math.min(s,m+g+1),b=Math.max(0,f-g),I=Math.min(i,f+g+1),N=0,F=0,B=0,z=0,H=b;H<I;++H)for(K=x;K<y;++K)X=u.get(H,K,c),N+=X,z=Math.max(z,X),F+=K*X,B+=H*X;z>=e.minConfidenceToRefine&&N>0&&(d.x=F/s/N,d.y=B/i/N)}return o.dispose(),[2,l]}})})}function oR(r,t){var e=t.left,o=t.top,n=t.left+t.right,i=t.top+t.bottom;return r.map(function(s){return xt(xt({},s),{x:(s.x-e)/(1-n),y:(s.y-o)/(1-i),z:s.z/(1-n)})})}function oX(r,t,e){return on()==="webgl"?function(o,n,i){var s=i.combineWithPreviousRatio.toFixed(2),a={variableNames:["prevMask","newMask"],outputShape:o.shape,userCode:`
  void main() {
      ivec2 coords = getOutputCoords();
      int height = coords[0];
      int width = coords[1];

      float prevMaskValue = getPrevMask(height, width);
      float newMaskValue = getNewMask(height, width);

      /*
      * Assume p := newMaskValue
      * H(p) := 1 + (p * log(p) + (1-p) * log(1-p)) / log(2)
      * uncertainty alpha(p) =
      *   Clamp(1 - (1 - H(p)) * (1 - H(p)), 0, 1) [squaring the
      * uncertainty]
      *
      * The following polynomial approximates uncertainty alpha as a
      * function of (p + 0.5):
      */
      const float c1 = 5.68842;
      const float c2 = -0.748699;
      const float c3 = -57.8051;
      const float c4 = 291.309;
      const float c5 = -624.717;
      float t = newMaskValue - 0.5;
      float x = t * t;

      float uncertainty =
        1.0 - min(1.0, x * (c1 + x * (c2 + x * (c3 + x * (c4 + x * c5)))));

      float outputValue = newMaskValue + (prevMaskValue - newMaskValue) *
                             (uncertainty * `.concat(s,`);

      setOutput(outputValue);
    }
`)},l=Ri();return Ne(function(){var u=l.compileAndRun(a,[o,n]);return cr().makeTensorFromDataId(u.dataId,u.shape,u.dtype)})}(r,t,e):Ne(function(){var o=$e(t,.5),n=Ut(o),i=$e(1,Fn(1,ae(n,fe(5.68842,ae(n,fe(-.748699,ae(n,fe(-57.8051,ae(n,fe(291.309,ae(n,-624.717)))))))))));return fe(t,ae($e(r,t),ae(i,e.combineWithPreviousRatio)))})}function nX(r,t,e){return ot(this,void 0,void 0,function(){var o,n,i,s,a;return nt(this,function(l){switch(l.label){case 0:return o=r[0],n=r[1],i=function(u,c,p){return Ne(function(){var d,m,f,g;p.reverseOutputOrder?(m=ct(Oe(u,[0,p.boxCoordOffset+0],[-1,1])),d=ct(Oe(u,[0,p.boxCoordOffset+1],[-1,1])),g=ct(Oe(u,[0,p.boxCoordOffset+2],[-1,1])),f=ct(Oe(u,[0,p.boxCoordOffset+3],[-1,1]))):(d=ct(Oe(u,[0,p.boxCoordOffset+0],[-1,1])),m=ct(Oe(u,[0,p.boxCoordOffset+1],[-1,1])),f=ct(Oe(u,[0,p.boxCoordOffset+2],[-1,1])),g=ct(Oe(u,[0,p.boxCoordOffset+3],[-1,1]))),m=fe(ae(Fe(m,p.xScale),c.w),c.x),d=fe(ae(Fe(d,p.yScale),c.h),c.y),p.applyExponentialOnBoxSize?(f=ae(Ar(Fe(f,p.hScale)),c.h),g=ae(Ar(Fe(g,p.wScale)),c.w)):(f=ae(Fe(f,p.hScale),c.h),g=ae(Fe(g,p.wScale),c.h));var x=$e(d,Fe(f,2)),y=$e(m,Fe(g,2)),b=fe(d,Fe(f,2)),I=fe(m,Fe(g,2)),N=mt([Y(x,[p.numBoxes,1]),Y(y,[p.numBoxes,1]),Y(b,[p.numBoxes,1]),Y(I,[p.numBoxes,1])],1);if(p.numKeypoints)for(var F=0;F<p.numKeypoints;++F){var B=p.keypointCoordOffset+F*p.numValuesPerKeypoint,z=void 0,H=void 0;p.reverseOutputOrder?(z=ct(Oe(u,[0,B],[-1,1])),H=ct(Oe(u,[0,B+1],[-1,1]))):(H=ct(Oe(u,[0,B],[-1,1])),z=ct(Oe(u,[0,B+1],[-1,1])));var K=fe(ae(Fe(z,p.xScale),c.w),c.x),X=fe(ae(Fe(H,p.yScale),c.h),c.y);N=mt([N,Y(K,[p.numBoxes,1]),Y(X,[p.numBoxes,1])],1)}return N})}(n,t,e),s=Ne(function(){var u=o;return e.sigmoidScore?(e.scoreClippingThresh!=null&&(u=Bm(o,-e.scoreClippingThresh,e.scoreClippingThresh)),u=qr(u)):u}),[4,iX(i,s,e)];case 1:return a=l.sent(),Xe([i,s]),[2,a]}})})}function iX(r,t,e){return ot(this,void 0,void 0,function(){var o,n,i,s,a,l,u,c,p,d,m,f;return nt(this,function(g){switch(g.label){case 0:return o=[],[4,r.data()];case 1:return n=g.sent(),[4,t.data()];case 2:for(i=g.sent(),s=0;s<e.numBoxes;++s)if(!(e.minScoreThresh!=null&&i[s]<e.minScoreThresh||(a=s*e.numCoords,l=sX(n[a+0],n[a+1],n[a+2],n[a+3],i[s],e.flipVertically,s),(u=l.locationData.relativeBoundingBox).width<0||u.height<0))){if(e.numKeypoints>0)for((c=l.locationData).relativeKeypoints=[],p=e.numKeypoints*e.numValuesPerKeypoint,d=0;d<p;d+=e.numValuesPerKeypoint)m=a+e.keypointCoordOffset+d,f={x:n[m+0],y:e.flipVertically?1-n[m+1]:n[m+1]},c.relativeKeypoints.push(f);o.push(l)}return[2,o]}})})}function sX(r,t,e,o,n,i,s){return{score:[n],ind:s,locationData:{relativeBoundingBox:{xMin:t,yMin:i?1-e:r,xMax:o,yMax:i?1-r:e,width:o-t,height:e-r}}}}function aX(r,t){return r==="none"?t:function(e){return 1/(1+Math.exp(-e))}(t)}function nR(r,t,e,o){return ot(this,void 0,void 0,function(){var n,i,s,a,l,u,c,p;return nt(this,function(d){switch(d.label){case 0:return e=e||t.flipHorizontally||!1,o=o||t.flipVertically||!1,n=r.size,i=n/t.numLandmarks,[4,r.data()];case 1:for(s=d.sent(),a=[],l=0;l<t.numLandmarks;++l)u=l*i,(p={x:0,y:0}).x=e?t.inputImageWidth-s[u]:s[u],i>1&&(p.y=o?t.inputImageHeight-s[u+1]:s[u+1]),i>2&&(p.z=s[u+2]),i>3&&(p.score=aX(t.visibilityActivation,s[u+3])),a.push(p);for(c=0;c<a.length;++c)(p=a[c]).x=p.x/t.inputImageWidth,p.y=p.y/t.inputImageHeight,p.z=p.z/t.inputImageWidth/(t.normalizeZ||1);return[2,a]}})})}function iR(r,t,e){var o=r.width,n=r.height,i=r.rotation;if(e.rotation==null&&e.rotationDegree==null||(i=function(c,p){return p.rotation!=null?c+=p.rotation:p.rotationDegree!=null&&(c+=Math.PI*p.rotationDegree/180),OR(c)}(i,e)),i===0)r.xCenter=r.xCenter+o*e.shiftX,r.yCenter=r.yCenter+n*e.shiftY;else{var s=(t.width*o*e.shiftX*Math.cos(i)-t.height*n*e.shiftY*Math.sin(i))/t.width,a=(t.width*o*e.shiftX*Math.sin(i)+t.height*n*e.shiftY*Math.cos(i))/t.height;r.xCenter=r.xCenter+s,r.yCenter=r.yCenter+a}if(e.squareLong){var l=Math.max(o*t.width,n*t.height);o=l/t.width,n=l/t.height}else if(e.squareShort){var u=Math.min(o*t.width,n*t.height);o=u/t.width,n=u/t.height}return r.width=o*e.scaleX,r.height=n*e.scaleY,r}function lX(r,t){return r.map(function(e){var o=xt(xt({},e),{x:e.x/t.width,y:e.y/t.height});return e.z!=null&&(e.z=e.z/t.width),o})}var ji=function(){function r(t){this.alpha=t,this.initialized=!1}return r.prototype.apply=function(t,e){var o;return this.initialized?o=e==null?this.storedValue+this.alpha*(t-this.storedValue):this.storedValue+this.alpha*e*Math.asinh((t-this.storedValue)/e):(o=t,this.initialized=!0),this.rawValue=t,this.storedValue=o,o},r.prototype.applyWithAlpha=function(t,e,o){return this.alpha=e,this.apply(t,o)},r.prototype.hasLastRawValue=function(){return this.initialized},r.prototype.lastRawValue=function(){return this.rawValue},r.prototype.reset=function(){this.initialized=!1},r}(),gv=function(){function r(t){this.frequency=t.frequency,this.minCutOff=t.minCutOff,this.beta=t.beta,this.thresholdCutOff=t.thresholdCutOff,this.thresholdBeta=t.thresholdBeta,this.derivateCutOff=t.derivateCutOff,this.x=new ji(this.getAlpha(this.minCutOff)),this.dx=new ji(this.getAlpha(this.derivateCutOff)),this.lastTimestamp=0}return r.prototype.apply=function(t,e,o){if(t==null)return t;var n=Math.trunc(e);if(this.lastTimestamp>=n)return t;this.lastTimestamp!==0&&n!==0&&(this.frequency=1/(1e-6*(n-this.lastTimestamp))),this.lastTimestamp=n;var i=this.x.hasLastRawValue()?(t-this.x.lastRawValue())*o*this.frequency:0,s=this.dx.applyWithAlpha(i,this.getAlpha(this.derivateCutOff)),a=this.minCutOff+this.beta*Math.abs(s),l=this.thresholdCutOff!=null?this.thresholdCutOff+this.thresholdBeta*Math.abs(s):null;return this.x.applyWithAlpha(t,this.getAlpha(a),l)},r.prototype.getAlpha=function(t){return 1/(1+this.frequency/(2*Math.PI*t))},r}(),kv=function(){function r(t){this.config=t}return r.prototype.apply=function(t,e,o){var n=this;if(t==null)return this.reset(),null;this.initializeFiltersIfEmpty(t);var i=1;if(!this.config.disableValueScaling){if(o<this.config.minAllowedObjectScale)return Js([],t,!0);i=1/o}return t.map(function(s,a){var l=xt(xt({},s),{x:n.xFilters[a].apply(s.x,e,i),y:n.yFilters[a].apply(s.y,e,i)});return s.z!=null&&(l.z=n.zFilters[a].apply(s.z,e,i)),l})},r.prototype.reset=function(){this.xFilters=null,this.yFilters=null,this.zFilters=null},r.prototype.initializeFiltersIfEmpty=function(t){var e=this;this.xFilters!=null&&this.xFilters.length===t.length||(this.xFilters=t.map(function(o){return new gv(e.config)}),this.yFilters=t.map(function(o){return new gv(e.config)}),this.zFilters=t.map(function(o){return new gv(e.config)}))},r}(),xv=function(){function r(t){this.config=t,this.window=[],this.lowPassFilter=new ji(1),this.lastValue=0,this.lastValueScale=1,this.lastTimestamp=-1}return r.prototype.apply=function(t,e,o){if(t==null)return t;var n,i=Math.trunc(e);if(this.lastTimestamp>=i)return t;if(this.lastTimestamp===-1)n=1;else{for(var s=t*o-this.lastValue*this.lastValueScale,a=i-this.lastTimestamp,l=s,u=a,c=(1+this.window.length)*(1e6/30),p=0,d=this.window;p<d.length;p++){var m=d[p];if(u+m.duration>c)break;l+=m.distance,u+=m.duration}var f=l/(1e-6*u);n=1-1/(1+this.config.velocityScale*Math.abs(f)),this.window.unshift({distance:s,duration:a}),this.window.length>this.config.windowSize&&this.window.pop()}return this.lastValue=t,this.lastValueScale=o,this.lastTimestamp=i,this.lowPassFilter.applyWithAlpha(t,n)},r}(),uX=function(){function r(t){this.config=t}return r.prototype.apply=function(t,e,o){var n=this;if(t==null)return this.reset(),null;var i=1;if(!this.config.disableValueScaling){if(o<this.config.minAllowedObjectScale)return Js([],t,!0);i=1/o}return this.initializeFiltersIfEmpty(t),t.map(function(s,a){var l=xt(xt({},s),{x:n.xFilters[a].apply(s.x,e,i),y:n.yFilters[a].apply(s.y,e,i)});return s.z!=null&&(l.z=n.zFilters[a].apply(s.z,e,i)),l})},r.prototype.reset=function(){this.xFilters=null,this.yFilters=null,this.zFilters=null},r.prototype.initializeFiltersIfEmpty=function(t){var e=this;this.xFilters!=null&&this.xFilters.length===t.length||(this.xFilters=t.map(function(o){return new xv(e.config)}),this.yFilters=t.map(function(o){return new xv(e.config)}),this.zFilters=t.map(function(o){return new xv(e.config)}))},r}(),yv=function(){function r(t){if(t.velocityFilter!=null)this.keypointsFilter=new uX(t.velocityFilter);else{if(t.oneEuroFilter==null)throw new Error("Either configure velocityFilter or oneEuroFilter, but got "+"".concat(t,"."));this.keypointsFilter=new kv(t.oneEuroFilter)}}return r.prototype.apply=function(t,e,o,n,i){if(n===void 0&&(n=!1),t==null)return this.keypointsFilter.reset(),null;var s=i!=null?function(u,c){return(u.width*c.width+u.height*c.height)/2}(i,o):1,a=n?WR(t,o):t,l=this.keypointsFilter.apply(a,e,s);return n?lX(l,o):l},r}(),sR=function(){function r(t){this.alpha=t.alpha}return r.prototype.apply=function(t){var e=this;if(t==null)return this.visibilityFilters=null,null;this.visibilityFilters!=null&&this.visibilityFilters.length===t.length||(this.visibilityFilters=t.map(function(a){return new ji(e.alpha)}));for(var o=[],n=0;n<t.length;++n){var i=t[n],s=xt({},i);s.score=this.visibilityFilters[n].apply(i.score),o.push(s)}return o},r}(),cX={reduceBoxesInLowestlayer:!1,interpolatedScaleAspectRatio:1,featureMapHeight:[],featureMapWidth:[],numLayers:5,minScale:.1484375,maxScale:.75,inputSizeHeight:224,inputSizeWidth:224,anchorOffsetX:.5,anchorOffsetY:.5,strides:[8,16,32,32,32],aspectRatios:[1],fixedAnchorSize:!0},kc={runtime:"tfjs",modelType:"full",enableSmoothing:!0,enableSegmentation:!1,smoothSegmentation:!0,detectorModelUrl:"https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/detector/1",landmarkModelUrl:"https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/landmark/full/2"},pX={maxPoses:1,flipHorizontal:!1},dX={applyExponentialOnBoxSize:!1,flipVertically:!1,ignoreClasses:[],numClasses:1,numBoxes:2254,numCoords:12,boxCoordOffset:0,keypointCoordOffset:4,numKeypoints:4,numValuesPerKeypoint:2,sigmoidScore:!0,scoreClippingThresh:100,reverseOutputOrder:!0,xScale:224,yScale:224,hScale:224,wScale:224,minScoreThresh:.5},mX=.3,aR={shiftX:0,shiftY:0,scaleX:1.25,scaleY:1.25,squareLong:!0},fX={outputTensorSize:{width:224,height:224},keepAspectRatio:!0,outputTensorFloatRange:[-1,1],borderMode:"zero"},hX={outputTensorSize:{width:256,height:256},keepAspectRatio:!0,outputTensorFloatRange:[0,1],borderMode:"zero"},gX={numLandmarks:39,inputImageWidth:256,inputImageHeight:256,visibilityActivation:"sigmoid",flipHorizontally:!1,flipVertically:!1},xX={numLandmarks:39,inputImageWidth:1,inputImageHeight:1,visibilityActivation:"sigmoid",flipHorizontally:!1,flipVertically:!1},yX={kernelSize:7,minConfidenceToRefine:.5},lR={alpha:.1},vX={oneEuroFilter:{frequency:30,minCutOff:.05,beta:80,derivateCutOff:1,minAllowedObjectScale:1e-6}},bX={oneEuroFilter:{frequency:30,minCutOff:.01,beta:10,derivateCutOff:1,minAllowedObjectScale:1e-6}},SX={oneEuroFilter:{frequency:30,minCutOff:.1,beta:40,derivateCutOff:1,minAllowedObjectScale:1e-6,disableValueScaling:!0}},wX={activation:"none"},CX={combineWithPreviousRatio:.7},_X=function(){function r(t){this.mask=t}return r.prototype.toCanvasImageSource=function(){return ot(this,void 0,void 0,function(){return nt(this,function(t){return[2,AR(this.mask)]})})},r.prototype.toImageData=function(){return ot(this,void 0,void 0,function(){return nt(this,function(t){return[2,DR(this.mask)]})})},r.prototype.toTensor=function(){return ot(this,void 0,void 0,function(){return nt(this,function(t){return[2,this.mask]})})},r.prototype.getUnderlyingType=function(){return"tensor"},r}();function kX(r){return FR(r),"person"}var IX=function(){function r(t,e,o,n,i,s){this.detectorModel=t,this.landmarkModel=e,this.enableSmoothing=o,this.enableSegmentation=n,this.smoothSegmentation=i,this.modelType=s,this.regionOfInterest=null,this.prevFilteredSegmentationMask=null,this.anchors=function(p){p.reduceBoxesInLowestLayer==null&&(p.reduceBoxesInLowestLayer=!1),p.interpolatedScaleAspectRatio==null&&(p.interpolatedScaleAspectRatio=1),p.fixedAnchorSize==null&&(p.fixedAnchorSize=!1);for(var d=[],m=0;m<p.numLayers;){for(var f=[],g=[],x=[],y=[],b=m;b<p.strides.length&&p.strides[b]===p.strides[m];){var I=tR(p.minScale,p.maxScale,b,p.strides.length);if(b===0&&p.reduceBoxesInLowestLayer)x.push(1),x.push(2),x.push(.5),y.push(.1),y.push(I),y.push(I);else{for(var N=0;N<p.aspectRatios.length;++N)x.push(p.aspectRatios[N]),y.push(I);if(p.interpolatedScaleAspectRatio>0){var F=b===p.strides.length-1?1:tR(p.minScale,p.maxScale,b+1,p.strides.length);y.push(Math.sqrt(I*F)),x.push(p.interpolatedScaleAspectRatio)}}b++}for(var B=0;B<x.length;++B){var z=Math.sqrt(x[B]);f.push(y[B]/z),g.push(y[B]*z)}var H=0,K=0;if(p.featureMapHeight.length>0)H=p.featureMapHeight[m],K=p.featureMapWidth[m];else{var X=p.strides[m];H=Math.ceil(p.inputSizeHeight/X),K=Math.ceil(p.inputSizeWidth/X)}for(var te=0;te<H;++te)for(var ue=0;ue<K;++ue)for(var pe=0;pe<f.length;++pe){var xe={xCenter:(ue+p.anchorOffsetX)/K,yCenter:(te+p.anchorOffsetY)/H,width:0,height:0};p.fixedAnchorSize?(xe.width=1,xe.height=1):(xe.width=g[pe],xe.height=f[pe]),d.push(xe)}m=b}return d}(cX);var a=Rt(this.anchors.map(function(p){return p.width})),l=Rt(this.anchors.map(function(p){return p.height})),u=Rt(this.anchors.map(function(p){return p.xCenter})),c=Rt(this.anchors.map(function(p){return p.yCenter}));this.anchorTensor={x:u,y:c,w:a,h:l},this.prevFilteredSegmentationMask=this.enableSegmentation?Cr([],[0,0]):null}return r.prototype.estimatePoses=function(t,e,o){return ot(this,void 0,void 0,function(){var n,i,s,a,l,u,c,p,d,m,f,g,x,y,b,I,N,F,B,z,H,K,X;return nt(this,function(te){switch(te.label){case 0:return n=function(ue){var pe;if((pe=ue==null?pX:xt({},ue)).maxPoses==null&&(pe.maxPoses=1),pe.maxPoses<=0)throw new Error("Invalid maxPoses ".concat(pe.maxPoses,". Should be > 0."));if(pe.maxPoses>1)throw new Error("Multi-pose detection is not implemented yet. Please set maxPoses to 1.");return pe}(e),t==null?(this.reset(),[2,[]]):(this.maxPoses=n.maxPoses,this.timestamp=o!=null?1e3*o:VR(t)?1e6*t.currentTime:null,i=Ic(t),s=Ne(function(){return Ue(Tv(t),"float32")}),(a=this.regionOfInterest)!=null?[3,2]:[4,this.detectPose(s)]);case 1:if((l=te.sent()).length===0)return this.reset(),s.dispose(),[2,[]];u=l[0],a=this.poseDetectionToRoi(u,i),te.label=2;case 2:return[4,this.poseLandmarksByRoi(a,s)];case 3:return c=te.sent(),s.dispose(),c==null?(this.reset(),[2,[]]):(p=c.landmarks,d=c.auxiliaryLandmarks,m=c.poseScore,f=c.worldLandmarks,g=c.segmentationMask,x=this.poseLandmarkFiltering(p,d,f,i),y=x.actualLandmarksFiltered,b=x.auxiliaryLandmarksFiltered,I=x.actualWorldLandmarksFiltered,N=this.poseLandmarksToRoi(b,i),this.regionOfInterest=N,F=this.smoothSegmentation&&g!=null?this.poseSegmentationFiltering(g):g,(B=y!=null?WR(y,i):null)!=null&&B.forEach(function(ue,pe){ue.name=Xp[pe]}),(z=I)!=null&&z.forEach(function(ue,pe){ue.name=Xp[pe]}),H={score:m,keypoints:B,keypoints3D:z},F!==null&&(K=Ne(function(){var ue=dr(F,2),pe=jr(ue,[[0,0],[0,0],[0,1]]);return of(pe,[[0,0],[0,0],[0,2]],"symmetric")}),this.smoothSegmentation||Xe(F),X={maskValueToLabel:kX,mask:new _X(K)},H.segmentation=X),[2,[H]])}})})},r.prototype.poseSegmentationFiltering=function(t){var e=this.prevFilteredSegmentationMask;return e.size===0?this.prevFilteredSegmentationMask=t:(this.prevFilteredSegmentationMask=oX(e,t,CX),Xe(t)),Xe(e),this.prevFilteredSegmentationMask},r.prototype.dispose=function(){this.detectorModel.dispose(),this.landmarkModel.dispose(),Xe([this.anchorTensor.x,this.anchorTensor.y,this.anchorTensor.w,this.anchorTensor.h,this.prevFilteredSegmentationMask])},r.prototype.reset=function(){this.regionOfInterest=null,this.enableSegmentation&&(Xe(this.prevFilteredSegmentationMask),this.prevFilteredSegmentationMask=Cr([],[0,0])),this.visibilitySmoothingFilterActual=null,this.visibilitySmoothingFilterAuxiliary=null,this.landmarksSmoothingFilterActual=null,this.landmarksSmoothingFilterAuxiliary=null},r.prototype.detectPose=function(t){return ot(this,void 0,void 0,function(){var e,o,n,i,s,a,l,u,c,p;return nt(this,function(d){switch(d.label){case 0:return e=_v(t,fX),o=e.imageTensor,n=e.padding,i=this.detectorModel.predict(o),s=eX(i),a=s.boxes,[4,nX([l=s.logits,a],this.anchorTensor,dX)];case 1:return(u=d.sent()).length===0?(Xe([o,i,l,a]),[2,u]):[4,tX(u,this.maxPoses,mX)];case 2:return c=d.sent(),p=function(m,f){m===void 0&&(m=[]);for(var g=f.left,x=f.top,y=f.left+f.right,b=f.top+f.bottom,I=0;I<m.length;I++){var N=m[I],F=N.locationData.relativeBoundingBox,B=(F.xMin-g)/(1-y),z=(F.yMin-x)/(1-b),H=F.width/(1-y),K=F.height/(1-b);F.xMin=B,F.yMin=z,F.width=H,F.height=K,F.xMax=B+H,F.yMax=z+K;var X=N.locationData.relativeKeypoints;X&&X.forEach(function(te){var ue=(te.x-g)/(1-y),pe=(te.y-x)/(1-b);te.x=ue,te.y=pe})}return m}(c,n),Xe([o,i,l,a]),[2,p]}})})},r.prototype.poseDetectionToRoi=function(t,e){return iR(fv(t,e,{rotationVectorEndKeypointIndex:1,rotationVectorStartKeypointIndex:0,rotationVectorTargetAngleDegree:90}),e,aR)},r.prototype.poseLandmarksByRoi=function(t,e){return ot(this,void 0,void 0,function(){var o,n,i,s,a,l,u,c,p,d,m,f,g,x;return nt(this,function(y){switch(y.label){case 0:if(o=Ic(e),n=_v(e,hX,t),i=n.imageTensor,s=n.padding,a=n.transformationMatrix,this.modelType!=="lite"&&this.modelType!=="full"&&this.modelType!=="heavy")throw new Error("Model type must be one of lite, full or heavy,"+"but got ".concat(this.modelType));return l=["ld_3d","output_poseflag","activation_heatmap","world_3d"],this.enableSegmentation&&l.push("activation_segmentation"),u=this.landmarkModel.execute(i,l),[4,this.tensorsToPoseLandmarksAndSegmentation(u)];case 1:return(c=y.sent())==null?(Xe(u),Xe(i),[2,null]):(p=c.landmarks,d=c.auxiliaryLandmarks,m=c.poseScore,f=c.worldLandmarks,g=c.segmentationMask,[4,this.poseLandmarksAndSegmentationInverseProjection(o,t,s,a,p,d,f,g)]);case 2:return x=y.sent(),Xe(u),Xe(i),[2,xt({poseScore:m},x)]}})})},r.prototype.poseLandmarksAndSegmentationInverseProjection=function(t,e,o,n,i,s,a,l){return ot(this,void 0,void 0,function(){var u,c,p,d,m,f;return nt(this,function(g){return u=oR(i,o),c=oR(s,o),p=eR(u,e),d=eR(c,e),m=function(x,y){for(var b=[],I=0,N=x;I<N.length;I++){var F=N[I],B=F.x,z=F.y,H=y.rotation,K=Math.cos(H)*B-Math.sin(H)*z,X=Math.sin(H)*B+Math.cos(H)*z,te=xt({},F);te.x=K,te.y=X,b.push(te)}return b}(a,e),f=null,this.enableSegmentation&&(f=Ne(function(){var x=l.shape,y=x[0],b=x[1],I=function(B){var z=MR(new Array(16).fill(0));z[0][0]=kr(B,0,0),z[1][0]=-kr(B,0,1),z[2][0]=kr(B,0,2),z[3][0]=-kr(B,0,3),z[0][2]=kr(B,2,0),z[1][2]=-kr(B,2,1),z[2][2]=kr(B,2,2),z[3][2]=-kr(B,2,3),z[0][1]=-kr(B,1,0),z[1][1]=kr(B,1,1),z[2][1]=-kr(B,1,2),z[3][1]=kr(B,1,3),z[0][3]=-kr(B,3,0),z[1][3]=kr(B,3,1),z[2][3]=-kr(B,3,2),z[3][3]=kr(B,3,3);for(var H=B[0][0]*z[0][0]+B[1][0]*z[0][1]+B[2][0]*z[0][2]+B[3][0]*z[0][3],K=0;K<z.length;K++)for(var X=0;X<z.length;X++)z[K][X]/=H;return z}(n),N=Cr(LR(I,{width:b,height:y},t),[1,8]),F=[1,y,b,1];return ct(Mn.transform(Y(l,F),N,"bilinear","constant",0,[t.height,t.width]),[0,3])}),Xe(l)),[2,{landmarks:p,auxiliaryLandmarks:d,worldLandmarks:m,segmentationMask:f}]})})},r.prototype.tensorsToPoseLandmarksAndSegmentation=function(t){return ot(this,void 0,void 0,function(){var e,o,n,i,s,a,l,u,c,p,d,m,f;return nt(this,function(g){switch(g.label){case 0:return e=t[0],o=t[1],n=t[2],i=t[3],s=this.enableSegmentation?t[4]:null,[4,o.data()];case 1:return(a=g.sent()[0])<.5?[2,null]:[4,nR(e,gX)];case 2:return[4,rX(g.sent(),n,yX)];case 3:return l=g.sent(),u=l.slice(0,33),c=l.slice(33,35),[4,nR(i,xX)];case 4:return p=g.sent(),d=p.slice(0,33),m=function(x,y,b){b===void 0&&(b=!0);for(var I=[],N=0;N<x.length;N++){var F=xt({},y[N]);b&&(F.score=x[N].score),I.push(F)}return I}(u,d,!0),f=this.enableSegmentation?function(x,y,b){return Ne(function(){var I=ct(x,[0]),N=I.shape[2];if(N===1){var F=I;switch(y.activation){case"none":break;case"sigmoid":F=qr(F);break;case"softmax":throw new Error("Softmax activation requires two channels.");default:throw new Error("Activation not supported (".concat(y.activation,")"))}var B=b?Mn.resizeBilinear(F,[b.height,b.width]):F;return ct(B,[2])}throw new Error("Unsupported number of tensor channels ".concat(N))})}(s,wX):null,[2,{landmarks:u,auxiliaryLandmarks:c,poseScore:a,worldLandmarks:m,segmentationMask:f}]}})})},r.prototype.poseLandmarksToRoi=function(t,e){return iR(fv(rR(t),e,{rotationVectorStartKeypointIndex:0,rotationVectorEndKeypointIndex:1,rotationVectorTargetAngleDegree:90}),e,aR)},r.prototype.poseLandmarkFiltering=function(t,e,o,n){var i,s,a;if(this.timestamp!=null&&this.enableSmoothing){var l=fv(rR(e),n,{rotationVectorEndKeypointIndex:0,rotationVectorStartKeypointIndex:1,rotationVectorTargetAngleDegree:90});this.visibilitySmoothingFilterActual==null&&(this.visibilitySmoothingFilterActual=new sR(lR)),i=this.visibilitySmoothingFilterActual.apply(t),this.visibilitySmoothingFilterAuxiliary==null&&(this.visibilitySmoothingFilterAuxiliary=new sR(lR)),s=this.visibilitySmoothingFilterAuxiliary.apply(e),a=this.visibilitySmoothingFilterActual.apply(o),this.landmarksSmoothingFilterActual==null&&(this.landmarksSmoothingFilterActual=new yv(vX)),i=this.landmarksSmoothingFilterActual.apply(i,this.timestamp,n,!0,l),this.landmarksSmoothingFilterAuxiliary==null&&(this.landmarksSmoothingFilterAuxiliary=new yv(bX)),s=this.landmarksSmoothingFilterAuxiliary.apply(s,this.timestamp,n,!0,l),this.worldLandmarksSmoothingFilterActual==null&&(this.worldLandmarksSmoothingFilterActual=new yv(SX)),a=this.worldLandmarksSmoothingFilterActual.apply(o,this.timestamp)}else i=t,s=e,a=o;return{actualLandmarksFiltered:i,auxiliaryLandmarksFiltered:s,actualWorldLandmarksFiltered:a}},r}();function TX(r){return ot(this,void 0,void 0,function(){var t,e,o,n,i,s;return nt(this,function(a){switch(a.label){case 0:return t=function(l){var u=xt({},l??kc);if(u.enableSmoothing==null&&(u.enableSmoothing=kc.enableSmoothing),u.enableSegmentation==null&&(u.enableSegmentation=kc.enableSegmentation),u.smoothSegmentation==null&&(u.smoothSegmentation=kc.smoothSegmentation),u.modelType==null&&(u.modelType=kc.modelType),u.detectorModelUrl==null&&(u.detectorModelUrl=kc.detectorModelUrl),u.landmarkModelUrl==null)switch(u.modelType){case"lite":u.landmarkModelUrl="https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/landmark/lite/2";break;case"heavy":u.landmarkModelUrl="https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/landmark/heavy/2";break;case"full":default:u.landmarkModelUrl="https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/landmark/full/2"}return u}(r),e=typeof t.detectorModelUrl=="string"&&t.detectorModelUrl.indexOf("https://tfhub.dev")>-1,o=typeof t.landmarkModelUrl=="string"&&t.landmarkModelUrl.indexOf("https://tfhub.dev")>-1,[4,Promise.all([Ui(t.detectorModelUrl,{fromTFHub:e}),Ui(t.landmarkModelUrl,{fromTFHub:o})])];case 1:return n=a.sent(),i=n[0],s=n[1],[2,new IX(i,s,t.enableSmoothing,t.enableSegmentation,t.smoothSegmentation,t.modelType)]}})})}var ea,nr,zR=function(){function r(t){(function(e){if(e.maxTracks<1)throw new Error("Must specify 'maxTracks' to be at least 1, but "+"encountered ".concat(e.maxTracks));if(e.maxAge<=0)throw new Error("Must specify 'maxAge' to be positive, but "+"encountered ".concat(e.maxAge));if(e.keypointTrackerParams!==void 0){if(e.keypointTrackerParams.keypointConfidenceThreshold<0||e.keypointTrackerParams.keypointConfidenceThreshold>1)throw new Error("Must specify 'keypointConfidenceThreshold' to be in the range [0, 1], but encountered "+"".concat(e.keypointTrackerParams.keypointConfidenceThreshold));if(e.keypointTrackerParams.minNumberOfKeypoints<1)throw new Error("Must specify 'minNumberOfKeypoints' to be at least 1, but "+"encountered ".concat(e.keypointTrackerParams.minNumberOfKeypoints));for(var o=0,n=e.keypointTrackerParams.keypointFalloff;o<n.length;o++){var i=n[o];if(i<=0)throw new Error("Must specify each keypoint falloff parameterto be positive "+"but encountered ".concat(i))}}})(t),this.tracks=[],this.maxTracks=t.maxTracks,this.maxAge=1e3*t.maxAge,this.minSimilarity=t.minSimilarity,this.nextID=1}return r.prototype.apply=function(t,e){this.filterOldTracks(e);var o=this.computeSimilarity(t);return this.assignTracks(t,o,e),this.updateTracks(e),t},r.prototype.getTracks=function(){return this.tracks.slice()},r.prototype.getTrackIDs=function(){return new Set(this.tracks.map(function(t){return t.id}))},r.prototype.filterOldTracks=function(t){var e=this;this.tracks=this.tracks.filter(function(o){return t-o.lastTimestamp<=e.maxAge})},r.prototype.assignTracks=function(t,e,o){for(var n=Array.from(Array(e[0].length).keys()),i=[],s=0,a=Array.from(Array(t.length).keys());s<a.length;s++){var l=a[s];if(n.length!==0){for(var u=-1,c=-1,p=0,d=n;p<d.length;p++){var m=d[p],f=e[l][m];f>=this.minSimilarity&&f>c&&(u=m,c=f)}if(u>=0){var g=this.tracks[u];g=Object.assign(g,this.createTrack(t[l],o,g.id)),t[l].id=g.id;var x=n.indexOf(u);n.splice(x,1)}else i.push(l)}else i.push(l)}for(var y=0,b=i;y<b.length;y++){l=b[y];var I=this.createTrack(t[l],o);this.tracks.push(I),t[l].id=I.id}},r.prototype.updateTracks=function(t){this.tracks.sort(function(e,o){return o.lastTimestamp-e.lastTimestamp}),this.tracks=this.tracks.slice(0,this.maxTracks)},r.prototype.createTrack=function(t,e,o){var n={id:o||this.nextTrackID(),lastTimestamp:e,keypoints:Js([],t.keypoints,!0).map(function(i){return xt({},i)})};return t.box!==void 0&&(n.box=xt({},t.box)),n},r.prototype.nextTrackID=function(){var t=this.nextID;return this.nextID+=1,t},r.prototype.remove=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];this.tracks=this.tracks.filter(function(o){return!t.includes(o.id)})},r.prototype.reset=function(){this.tracks=[]},r}(),EX=function(r){function t(e){return r.call(this,e)||this}return PR(t,r),t.prototype.computeSimilarity=function(e){var o=this;return e.length===0||this.tracks.length===0?[[]]:e.map(function(n){return o.tracks.map(function(i){return o.iou(n,i)})})},t.prototype.iou=function(e,o){var n=Math.max(e.box.xMin,o.box.xMin),i=Math.max(e.box.yMin,o.box.yMin),s=Math.min(e.box.xMax,o.box.xMax),a=Math.min(e.box.yMax,o.box.yMax);if(n>=s||i>=a)return 0;var l=(s-n)*(a-i);return l/(e.box.width*e.box.height+o.box.width*o.box.height-l)},t}(zR),NX=function(r){function t(e){var o=r.call(this,e)||this;return o.keypointThreshold=e.keypointTrackerParams.keypointConfidenceThreshold,o.keypointFalloff=e.keypointTrackerParams.keypointFalloff,o.minNumKeyoints=e.keypointTrackerParams.minNumberOfKeypoints,o}return PR(t,r),t.prototype.computeSimilarity=function(e){if(e.length===0||this.tracks.length===0)return[[]];for(var o=[],n=0,i=e;n<i.length;n++){for(var s=i[n],a=[],l=0,u=this.tracks;l<u.length;l++){var c=u[l];a.push(this.oks(s,c))}o.push(a)}return o},t.prototype.oks=function(e,o){for(var n=this.area(o.keypoints)+1e-6,i=0,s=0,a=0;a<e.keypoints.length;++a){var l=e.keypoints[a],u=o.keypoints[a];if(!(l.score<this.keypointThreshold||u.score<this.keypointThreshold)){s+=1;var c=Math.pow(l.x-u.x,2)+Math.pow(l.y-u.y,2),p=2*this.keypointFalloff[a];i+=Math.exp(-1*c/(2*n*Math.pow(p,2)))}}return s<this.minNumKeyoints?0:i/s},t.prototype.area=function(e){var o=this,n=e.filter(function(l){return l.score>o.keypointThreshold}),i=Math.min.apply(Math,Js([1],n.map(function(l){return l.x}),!1)),s=Math.max.apply(Math,Js([0],n.map(function(l){return l.x}),!1)),a=Math.min.apply(Math,Js([1],n.map(function(l){return l.y}),!1));return(s-i)*(Math.max.apply(Math,Js([0],n.map(function(l){return l.y}),!1))-a)},t}(zR);function UR(r){switch(r){case nr.BlazePose:return Xp.reduce(function(t,e,o){return t[e]=o,t},{});case nr.PoseNet:case nr.MoveNet:return fn.reduce(function(t,e,o){return t[e]=o,t},{});default:throw new Error("Model ".concat(r," is not supported."))}}(function(r){r.Keypoint="keypoint",r.BoundingBox="boundingBox"})(ea||(ea={})),function(r){r.MoveNet="MoveNet",r.BlazePose="BlazePose",r.PoseNet="PoseNet"}(nr||(nr={}));var GR=Object.freeze({__proto__:null,getKeypointIndexBySide:function(r){switch(r){case nr.BlazePose:return Hj;case nr.PoseNet:case nr.MoveNet:return Kj;default:throw new Error("Model ".concat(r," is not supported."))}},getAdjacentPairs:function(r){switch(r){case nr.BlazePose:return jj;case nr.PoseNet:case nr.MoveNet:return qj;default:throw new Error("Model ".concat(r," is not supported."))}},getKeypointIndexByName:UR}),uR=["SinglePose.Lightning","SinglePose.Thunder","MultiPose.Lightning"],HR={modelType:"SinglePose.Lightning",enableSmoothing:!0},cR={},pR={frequency:30,minCutOff:2.5,beta:300,derivateCutOff:2.5,thresholdCutOff:.5,thresholdBeta:5,disableValueScaling:!0},vv={maxTracks:18,maxAge:1e3,minSimilarity:.2,keypointTrackerParams:{keypointConfidenceThreshold:.3,keypointFalloff:[.026,.025,.025,.035,.035,.079,.079,.072,.072,.062,.062,.107,.107,.087,.087,.089,.089],minNumberOfKeypoints:4}},dR={maxTracks:18,maxAge:1e3,minSimilarity:.15,trackerParams:{}};function RX(r,t,e,o){for(var n={},i=0,s=fn;i<s.length;i++){var a=s[i];n[a]=[t[e[a]].y*o.height,t[e[a]].x*o.width]}if(function(b,I){return(b[I.left_hip].score>.2||b[I.right_hip].score>.2)&&(b[I.left_shoulder].score>.2||b[I.right_shoulder].score>.2)}(t,e)){var l=(n.left_hip[0]+n.right_hip[0])/2,u=(n.left_hip[1]+n.right_hip[1])/2,c=function(b,I,N,F,B){for(var z=["left_shoulder","right_shoulder","left_hip","right_hip"],H=0,K=0,X=0;X<z.length;X++)(be=Math.abs(F-N[z[X]][0]))>H&&(H=be),(Te=Math.abs(B-N[z[X]][1]))>K&&(K=Te);for(var te=0,ue=0,pe=0,xe=Object.keys(N);pe<xe.length;pe++){var be,Te,qe=xe[pe];b[I[qe]].score<.2||((be=Math.abs(F-N[qe][0]))>te&&(te=be),(Te=Math.abs(B-N[qe][1]))>ue&&(ue=Te))}return[H,K,te,ue]}(t,e,n,l,u),p=c[0],d=c[1],m=c[2],f=c[3],g=Math.max(1.9*d,1.9*p,1.2*m,1.2*f),x=[l-(g=Math.min(g,Math.max(u,o.width-u,l,o.height-l))),u-g];if(g>Math.max(o.width,o.height)/2)return Iv(r==null,o);var y=2*g;return{yMin:x[0]/o.height,xMin:x[1]/o.width,yMax:(x[0]+y)/o.height,xMax:(x[1]+y)/o.width,height:(x[0]+y)/o.height-x[0]/o.height,width:(x[1]+y)/o.width-x[1]/o.width}}return Iv(r==null,o)}function Iv(r,t){var e,o,n,i;return r?t.width>t.height?(e=1,o=t.height/t.width,n=0,i=(t.width/2-t.height/2)/t.width):(e=t.width/t.height,o=1,n=(t.height/2-t.width/2)/t.height,i=0):t.width>t.height?(e=t.width/t.height,o=1,n=(t.height/2-t.width/2)/t.height,i=0):(e=1,o=t.height/t.width,n=0,i=(t.width/2-t.height/2)/t.width),{yMin:n,xMin:i,yMax:n+e,xMax:i+o,height:e,width:o}}function $X(r){var t,e=r==null?HR:xt({},r);if(e.modelType==null)e.modelType="SinglePose.Lightning";else if(uR.indexOf(e.modelType)<0)throw new Error("Invalid architecture ".concat(e.modelType,". ")+"Should be one of ".concat(uR));if(e.enableSmoothing==null&&(e.enableSmoothing=!0),e.minPoseScore!=null&&(e.minPoseScore<0||e.minPoseScore>1))throw new Error("minPoseScore should be between 0.0 and 1.0");if(e.multiPoseMaxDimension!=null&&(e.multiPoseMaxDimension%32!=0||e.multiPoseMaxDimension<32))throw new Error("multiPoseMaxDimension must be a multiple of 32 and higher than 0");if(e.modelType==="MultiPose.Lightning"&&e.enableTracking==null&&(e.enableTracking=!0),e.modelType==="MultiPose.Lightning"&&e.enableTracking===!0)if(e.trackerType==null&&(e.trackerType=ea.BoundingBox),e.trackerType===ea.Keypoint)e.trackerConfig!=null?e.trackerConfig=function(o){var n=mR(vv,o);return n.keypointTrackerParams=xt({},vv.keypointTrackerParams),o.keypointTrackerParams!=null&&(o.keypointTrackerParams.keypointConfidenceThreshold!=null&&(n.keypointTrackerParams.keypointConfidenceThreshold=o.keypointTrackerParams.keypointConfidenceThreshold),o.keypointTrackerParams.keypointFalloff!=null&&(n.keypointTrackerParams.keypointFalloff=o.keypointTrackerParams.keypointFalloff),o.keypointTrackerParams.minNumberOfKeypoints!=null&&(n.keypointTrackerParams.minNumberOfKeypoints=o.keypointTrackerParams.minNumberOfKeypoints)),n}(e.trackerConfig):e.trackerConfig=vv;else{if(e.trackerType!==ea.BoundingBox)throw new Error("Tracker type not supported by MoveNet");e.trackerConfig!=null?e.trackerConfig=(t=e.trackerConfig,mR(dR,t)):e.trackerConfig=dR}return e}function mR(r,t){var e={maxTracks:r.maxTracks,maxAge:r.maxAge,minSimilarity:r.minSimilarity};return t.maxTracks!=null&&(e.maxTracks=t.maxTracks),t.maxAge!=null&&(e.maxAge=t.maxAge),t.minSimilarity!=null&&(e.minSimilarity=t.minSimilarity),e}var PX=function(){function r(t,e){this.moveNetModel=t,this.modelInputResolution={height:0,width:0},this.keypointIndexByName=UR(nr.MoveNet),e.modelType==="SinglePose.Lightning"?(this.modelInputResolution.width=192,this.modelInputResolution.height=192):e.modelType==="SinglePose.Thunder"&&(this.modelInputResolution.width=256,this.modelInputResolution.height=256),this.multiPoseModel=e.modelType==="MultiPose.Lightning",this.multiPoseModel||(this.keypointFilter=new kv(pR),this.cropRegionFilterYMin=new ji(.9),this.cropRegionFilterXMin=new ji(.9),this.cropRegionFilterYMax=new ji(.9),this.cropRegionFilterXMax=new ji(.9)),this.enableSmoothing=e.enableSmoothing,e.minPoseScore?this.minPoseScore=e.minPoseScore:this.minPoseScore=.25,e.multiPoseMaxDimension?this.multiPoseMaxDimension=e.multiPoseMaxDimension:this.multiPoseMaxDimension=256,this.enableTracking=e.enableTracking,this.multiPoseModel&&this.enableTracking&&(e.trackerType===ea.Keypoint?this.tracker=new NX(e.trackerConfig):e.trackerType===ea.BoundingBox&&(this.tracker=new EX(e.trackerConfig)),this.enableSmoothing&&(this.keypointFilterMap=new Map))}return r.prototype.runSinglePersonPoseModel=function(t){return ot(this,void 0,void 0,function(){var e,o,n,i,s;return nt(this,function(a){switch(a.label){case 0:if((e=this.moveNetModel.execute(t)).shape.length!==4||e.shape[0]!==1||e.shape[1]!==1||e.shape[2]!==17||e.shape[3]!==3)throw e.dispose(),new Error("Unexpected output shape from model: [".concat(e.shape,"]"));return on()==="webgpu"?[3,1]:(o=e.dataSync(),[3,3]);case 1:return[4,e.data()];case 2:o=a.sent(),a.label=3;case 3:for(e.dispose(),n={keypoints:[],score:0},i=0,s=0;s<17;++s)n.keypoints[s]={y:o[3*s],x:o[3*s+1],score:o[3*s+2]},n.keypoints[s].score>.2&&(++i,n.score+=n.keypoints[s].score);return i>0&&(n.score/=i),[2,n]}})})},r.prototype.runMultiPersonPoseModel=function(t){return ot(this,void 0,void 0,function(){var e,o,n,i,s,a,l,u;return nt(this,function(c){switch(c.label){case 0:if((e=this.moveNetModel.execute(t)).shape.length!==3||e.shape[0]!==1||e.shape[2]!==56)throw e.dispose(),new Error("Unexpected output shape from model: [".concat(e.shape,"]"));return on()==="webgpu"?[3,1]:(o=e.dataSync(),[3,3]);case 1:return[4,e.data()];case 2:o=c.sent(),c.label=3;case 3:for(e.dispose(),n=[],i=o.length/56,s=0;s<i;++s)for(n[s]={keypoints:[]},a=56*s+51,n[s].box={yMin:o[a],xMin:o[a+1],yMax:o[a+2],xMax:o[a+3],width:o[a+3]-o[a+1],height:o[a+2]-o[a]},l=56*s+55,n[s].score=o[l],n[s].keypoints=[],u=0;u<17;++u)n[s].keypoints[u]={y:o[56*s+3*u],x:o[56*s+3*u+1],score:o[56*s+3*u+2]};return[2,n]}})})},r.prototype.estimatePoses=function(t,e,o){return e===void 0&&(e=cR),ot(this,void 0,void 0,function(){var n,i,s,a,l,u;return nt(this,function(c){switch(c.label){case 0:return e=function(p){return p==null?cR:xt({},p)}(e),t==null?(this.reset(),[2,[]]):(o==null?VR(t)&&(o=1e6*t.currentTime):o*=1e3,n=Tv(t),i=Ic(n),s=dr(n,0),t instanceof at||n.dispose(),a=[],this.multiPoseModel?[3,2]:[4,this.estimateSinglePose(s,i,o)]);case 1:return a=c.sent(),[3,4];case 2:return[4,this.estimateMultiplePoses(s,i,o)];case 3:a=c.sent(),c.label=4;case 4:for(l=0;l<a.length;++l)for(u=0;u<a[l].keypoints.length;++u)a[l].keypoints[u].name=fn[u],a[l].keypoints[u].y*=i.height,a[l].keypoints[u].x*=i.width;return[2,a]}})})},r.prototype.estimateSinglePose=function(t,e,o){return ot(this,void 0,void 0,function(){var n,i,s,a,l=this;return nt(this,function(u){switch(u.label){case 0:return this.cropRegion||(this.cropRegion=Iv(this.cropRegion==null,e)),n=Ne(function(){var c=Cr([[l.cropRegion.yMin,l.cropRegion.xMin,l.cropRegion.yMax,l.cropRegion.xMax]]),p=Sr([1],"int32"),d=[l.modelInputResolution.height,l.modelInputResolution.width];return Ue(Mn.cropAndResize(t,c,p,d,"bilinear",0),"int32")}),t.dispose(),[4,this.runSinglePersonPoseModel(n)];case 1:if(i=u.sent(),n.dispose(),i.score<this.minPoseScore)return this.reset(),[2,[]];for(s=0;s<i.keypoints.length;++s)i.keypoints[s].y=this.cropRegion.yMin+i.keypoints[s].y*this.cropRegion.height,i.keypoints[s].x=this.cropRegion.xMin+i.keypoints[s].x*this.cropRegion.width;return o!=null&&this.enableSmoothing&&(i.keypoints=this.keypointFilter.apply(i.keypoints,o,1)),a=RX(this.cropRegion,i.keypoints,this.keypointIndexByName,e),this.cropRegion=this.filterCropRegion(a),[2,[i]]}})})},r.prototype.estimateMultiplePoses=function(t,e,o){return ot(this,void 0,void 0,function(){var n,i,s,a,l,u,c,p,d,m,f,g=this;return nt(this,function(x){switch(x.label){case 0:return e.width>e.height?(i=this.multiPoseMaxDimension,s=Math.round(this.multiPoseMaxDimension*e.height/e.width),n=Mn.resizeBilinear(t,[s,i]),l=i,u=32*Math.ceil(s/32),a=jr(n,[[0,0],[0,u-s],[0,0],[0,0]])):(i=Math.round(this.multiPoseMaxDimension*e.width/e.height),s=this.multiPoseMaxDimension,n=Mn.resizeBilinear(t,[s,i]),l=32*Math.ceil(i/32),u=s,a=jr(n,[[0,0],[0,0],[0,l-i],[0,0]])),n.dispose(),t.dispose(),c=Ue(a,"int32"),a.dispose(),[4,this.runMultiPersonPoseModel(c)];case 1:for(p=x.sent(),c.dispose(),p=p.filter(function(y){return y.score>=g.minPoseScore}),m=0;m<p.length;++m)for(d=0;d<p[m].keypoints.length;++d)p[m].keypoints[d].y*=u/s,p[m].keypoints[d].x*=l/i;if(this.enableTracking&&(this.tracker.apply(p,o),this.enableSmoothing)){for(m=0;m<p.length;++m)this.keypointFilterMap.has(p[m].id)||this.keypointFilterMap.set(p[m].id,new kv(pR)),p[m].keypoints=this.keypointFilterMap.get(p[m].id).apply(p[m].keypoints,o,1);f=this.tracker.getTrackIDs(),this.keypointFilterMap.forEach(function(y,b){f.has(b)||g.keypointFilterMap.delete(b)})}return[2,p]}})})},r.prototype.filterCropRegion=function(t){if(t){var e=this.cropRegionFilterYMin.apply(t.yMin),o=this.cropRegionFilterXMin.apply(t.xMin),n=this.cropRegionFilterYMax.apply(t.yMax),i=this.cropRegionFilterXMax.apply(t.xMax);return{yMin:e,xMin:o,yMax:n,xMax:i,height:n-e,width:i-o}}return this.cropRegionFilterYMin.reset(),this.cropRegionFilterXMin.reset(),this.cropRegionFilterYMax.reset(),this.cropRegionFilterXMax.reset(),null},r.prototype.dispose=function(){this.moveNetModel.dispose()},r.prototype.reset=function(){this.cropRegion=null,this.resetFilters()},r.prototype.resetFilters=function(){this.keypointFilter.reset(),this.cropRegionFilterYMin.reset(),this.cropRegionFilterXMin.reset(),this.cropRegionFilterYMax.reset(),this.cropRegionFilterXMax.reset()},r}();function AX(r){return r===void 0&&(r=HR),ot(this,void 0,void 0,function(){var t,e,o,n;return nt(this,function(i){switch(i.label){case 0:return t=$X(r),o=!0,t.modelUrl?(o=typeof t.modelUrl=="string"&&t.modelUrl.indexOf("https://tfhub.dev")>-1,[4,Ui(t.modelUrl,{fromTFHub:o})]):[3,2];case 1:return e=i.sent(),[3,4];case 2:return n=void 0,t.modelType==="SinglePose.Lightning"?n="https://tfhub.dev/google/tfjs-model/movenet/singlepose/lightning/4":t.modelType==="SinglePose.Thunder"?n="https://tfhub.dev/google/tfjs-model/movenet/singlepose/thunder/4":t.modelType==="MultiPose.Lightning"&&(n="https://tfhub.dev/google/tfjs-model/movenet/multipose/lightning/1"),[4,Ui(n,{fromTFHub:o})];case 3:e=i.sent(),i.label=4;case 4:return on()==="webgl"&&G().set("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",0),[2,new PX(e,t)]}})})}var fR={architecture:"MobileNetV1",outputStride:16,multiplier:.75,inputResolution:{height:257,width:257}},hR=["MobileNetV1","ResNet50"],gR={MobileNetV1:[8,16],ResNet50:[16]},DX=[8,16,32],xR={MobileNetV1:[.5,.75,1],ResNet50:[1]},yR=[1,2,4],vR={maxPoses:1,flipHorizontal:!1},FX={maxPoses:5,flipHorizontal:!1,scoreThreshold:.5,nmsRadius:20},OX=[-123.15,-115.9,-103.06];function bv(r){return Math.floor(r/2)}var LX=function(){function r(t,e){this.priorityQueue=new Array(t),this.numberOfElements=-1,this.getElementValue=e}return r.prototype.enqueue=function(t){this.priorityQueue[++this.numberOfElements]=t,this.swim(this.numberOfElements)},r.prototype.dequeue=function(){var t=this.priorityQueue[0];return this.exchange(0,this.numberOfElements--),this.sink(0),this.priorityQueue[this.numberOfElements+1]=null,t},r.prototype.empty=function(){return this.numberOfElements===-1},r.prototype.size=function(){return this.numberOfElements+1},r.prototype.all=function(){return this.priorityQueue.slice(0,this.numberOfElements+1)},r.prototype.max=function(){return this.priorityQueue[0]},r.prototype.swim=function(t){for(;t>0&&this.less(bv(t),t);)this.exchange(t,bv(t)),t=bv(t)},r.prototype.sink=function(t){for(;2*t<=this.numberOfElements;){var e=2*t;if(e<this.numberOfElements&&this.less(e,e+1)&&e++,!this.less(t,e))break;this.exchange(t,e),t=e}},r.prototype.getValueAt=function(t){return this.getElementValue(this.priorityQueue[t])},r.prototype.less=function(t,e){return this.getValueAt(t)<this.getValueAt(e)},r.prototype.exchange=function(t,e){var o=this.priorityQueue[t];this.priorityQueue[t]=this.priorityQueue[e],this.priorityQueue[e]=o},r}();function MX(r,t,e,o,n,i){for(var s=i.shape,a=s[0],l=s[1],u=!0,c=Math.max(e-n,0),p=Math.min(e+n+1,a),d=c;d<p;++d){for(var m=Math.max(o-n,0),f=Math.min(o+n+1,l),g=m;g<f;++g)if(i.get(d,g,r)>t){u=!1;break}if(!u)break}return u}function BX(r){return ot(this,void 0,void 0,function(){return nt(this,function(t){return[2,Promise.all(r.map(function(e){return e.buffer()}))]})})}function KR(r,t,e,o){return{y:o.get(r,t,e),x:o.get(r,t,e+17)}}function qR(r,t,e){var o=KR(r.heatmapY,r.heatmapX,r.id,e),n=o.y,i=o.x;return{x:r.heatmapX*t+i,y:r.heatmapY*t+n}}function jR(r,t,e,o){var n=e.x,i=e.y;return r.some(function(s){var a,l,u,c,p,d,m=s.keypoints;return a=i,l=n,u=m[o].y,c=m[o].x,(p=u-a)*p+(d=c-l)*d<=t})}var bR=fn.reduce(function(r,t,e){return r[t]=e,r},{}),XR=[["nose","left_eye"],["left_eye","left_ear"],["nose","right_eye"],["right_eye","right_ear"],["nose","left_shoulder"],["left_shoulder","left_elbow"],["left_elbow","left_wrist"],["left_shoulder","left_hip"],["left_hip","left_knee"],["left_knee","left_ankle"],["nose","right_shoulder"],["right_shoulder","right_elbow"],["right_elbow","right_wrist"],["right_shoulder","right_hip"],["right_hip","right_knee"],["right_knee","right_ankle"]].map(function(r){var t=r[0],e=r[1];return[bR[t],bR[e]]}),Sv=XR.map(function(r){return r[1]}),SR=XR.map(function(r){return r[0]});function wR(r,t,e){return r<t?t:r>e?e:r}function wv(r,t,e,o){return{y:wR(Math.round(r.y/t),0,e-1),x:wR(Math.round(r.x/t),0,o-1)}}function CR(r,t){return{x:r.x+t.x,y:r.y+t.y}}function _R(r,t,e,o,n,i,s,a){a===void 0&&(a=2);for(var l=o.shape,u=l[0],c=l[1],p={y:t.y,x:t.x},d=CR(p,function(b,I,N){var F=N.shape[2]/2;return{y:N.get(I.y,I.x,b),x:N.get(I.y,I.x,F+b)}}(r,wv(p,i,u,c),s)),m=0;m<a;m++){var f=wv(d,i,u,c),g=KR(f.y,f.x,e,n);d=CR({x:f.x*i,y:f.y*i},{x:g.x,y:g.y})}var x=wv(d,i,u,c),y=o.get(x.y,x.x,e);return{y:d.y,x:d.x,name:fn[e],score:y}}function VX(r,t,e,o,n,i){var s=t.shape[2],a=Sv.length,l=new Array(s),u=r.part,c=r.score,p=qR(u,o,e);l[u.id]={score:c,name:fn[u.id],y:p.y,x:p.x};for(var d=a-1;d>=0;--d){var m=Sv[d],f=SR[d];l[m]&&!l[f]&&(l[f]=_R(d,l[m],f,t,e,o,i))}for(d=0;d<a;++d)m=SR[d],f=Sv[d],l[m]&&!l[f]&&(l[f]=_R(d,l[m],f,t,e,o,n));return l}function WX(r,t,e){return e.reduce(function(o,n,i){var s=n.y,a=n.x,l=n.score;return jR(r,t,{y:s,x:a},i)||(o+=l),o},0)/e.length}function zX(r,t,e,o,n,i,s,a){return s===void 0&&(s=.5),a===void 0&&(a=20),ot(this,void 0,void 0,function(){var l,u,c,p,d,m,f,g,x,y,b,I;return nt(this,function(N){switch(N.label){case 0:return[4,BX([r,t,e,o])];case 1:for(l=N.sent(),u=l[0],c=l[1],p=l[2],d=l[3],m=[],f=function(F,B,z){for(var H=z.shape,K=H[0],X=H[1],te=H[2],ue=new LX(K*X*te,function(qe){return qe.score}),pe=0;pe<K;++pe)for(var xe=0;xe<X;++xe)for(var be=0;be<te;++be){var Te=z.get(pe,xe,be);Te<F||MX(be,Te,pe,xe,B,z)&&ue.enqueue({score:Te,part:{heatmapY:pe,heatmapX:xe,id:be}})}return ue}(s,1,u),g=a*a;m.length<i&&!f.empty();)x=f.dequeue(),y=qR(x.part,n,c),jR(m,g,y,x.part.id)||(b=VX(x,u,c,n,p,d),I=WX(m,g,b),m.push({keypoints:b,score:I}));return[2,m]}})})}function YR(){for(var r,t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];switch(t.length){case 0:r="fn main() ";break;case 1:r="fn main(".concat(t[0]," : i32)");break;default:throw Error("Unreachable")}return r}var UX=function(){function r(t){this.variableNames=["A","B"],this.size=!0,this.workgroupSize=[32,1,1],this.outputShape=[t[0],1],this.dispatchLayout=Ki.flatDispatchLayout(this.outputShape),this.dispatch=Ki.computeDispatch(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="getpointsConfidenceOp"}return r.prototype.getUserCode=function(){return`
        `.concat(YR("index"),` {
          if (index < uniforms.size) {
            let y = B[index * 2];
            let x = B[index * 2 + 1];
            let outIndex = y * uniforms.aShape.x * uniforms.aShape.z + x * uniforms.aShape.z + index;
            result[index] = A[outIndex];
          }
        }
        `)},r}();function GX(r,t){if(Ri()instanceof mc)return function(e,o){var n=Ri(),i=new UX(o.shape),s=n.runWebGPUProgram(i,[e,o],"float32");return cr().makeTensorFromTensorInfo(s)}(r,t);throw new Error("getPointsConfidenceWebGPU is not supported in this backend!")}var HX=function(){function r(t){if(this.variableNames=["A","B"],this.size=!0,this.supportedLastDimension=2,t.length!==2||t[1]!==this.supportedLastDimension)throw new Error("GetOffsetVectorsProgram only supports shape of [x, ".concat(this.supportedLastDimension,"], but current shape is ").concat(t));this.workgroupSize=[32,1,1],this.outputShape=t;var e=[t[0],1];this.dispatchLayout=Ki.flatDispatchLayout(e),this.dispatch=Ki.computeDispatch(this.dispatchLayout,e,this.workgroupSize),this.shaderKey="GetOffsetVectors"}return r.prototype.getUserCode=function(){return`
    fn getOffsetPoint(y: i32, x: i32, index: i32) -> vec2<i32> {
      let outIndexY = y * uniforms.bShape.x * uniforms.bShape.y + x * uniforms.bShape.y + index;
      let outIndexX = outIndexY + uniforms.bShape.z;
      let outY = i32(B[outIndexY]);
      let outX = i32(B[outIndexX]);
      return vec2<i32>(outY, outX);
    }

    `.concat(YR("index"),` {
      if (index < uniforms.size) {
        let indexY = index * `).concat(this.supportedLastDimension,`;
        let indexX = indexY + 1;
        let heatmapY = A[indexY];
        let heatmapX = A[indexX];
        let out = getOffsetPoint(i32(heatmapY), i32(heatmapX), index);
        result[indexY] = f32(out[0]);
        result[indexX] = f32(out[1]);
      }
    }
    `)},r}();function KX(r,t){if(Ri()instanceof mc)return function(e,o){var n=Ri(),i=new HX(e.shape),s=n.runWebGPUProgram(i,[e,o],"float32");return cr().makeTensorFromTensorInfo(s)}(r,t);throw new Error("getOffsetVectorsGPU is not supported in this backend!")}function QR(r){var t=r.shape,e=t[0],o=t[1],n=t[2];return Ne(function(){var i,s,a=Y(r,[e*o,n]),l=Fm(a,0),u=dr(Fe(l,Re(o,"int32")),1),c=dr((i=l,s=o,Ne(function(){var p=Fe(i,Re(s,"int32"));return $e(i,ae(p,Re(s,"int32")))})),1);return mt([u,c],1)})}function qX(r,t,e){return Ne(function(){var o=function(n,i){for(var s=[],a=0;a<fn.length;a++){var l=n.get(a,0).valueOf(),u=n.get(a,1).valueOf(),c=jX(l,u,a,i),p=c.x,d=c.y;s.push(d),s.push(p)}return Cr(s,[fn.length,2])}(r,e);return fe(Ue(ae(r.toTensor(),Re(t,"int32")),"float32"),o)})}function jX(r,t,e,o){return{y:o.get(r,t,e),x:o.get(r,t,e+fn.length)}}function XX(r,t,e){return ot(this,void 0,void 0,function(){var o,n,i,s,a,l,u,c,p,d;return nt(this,function(m){switch(m.label){case 0:return o=0,n=QR(r),[4,Promise.all([r.buffer(),t.buffer(),n.buffer()])];case 1:return i=m.sent(),s=i[0],a=i[1],l=i[2],[4,(u=qX(l,e,a)).buffer()];case 2:return c=m.sent(),p=Array.from(function(f,g){for(var x=g.shape[0],y=new Float32Array(x),b=0;b<x;b++){var I=g.get(b,0),N=g.get(b,1);y[b]=f.get(I,N,b)}return y}(s,l)),d=p.map(function(f,g){return o+=f,{y:c.get(g,0),x:c.get(g,1),score:f,name:fn[g]}}),n.dispose(),u.dispose(),[2,{keypoints:d,score:o/d.length}]}})})}function YX(r,t,e){return ot(this,void 0,void 0,function(){var o,n,i;return nt(this,function(s){return o=QR(r),n=function(a,l,u){return Ne(function(){var c=KX(a,u);return fe(Ue(ae(a,Re(l,"int32")),"float32"),c)})}(o,e,t),i=GX(r,o),[2,[n,i]]})})}function kR(r,t){return(r-1)%t==0}var IR="https://storage.googleapis.com/tfjs-models/savedmodel/posenet/mobilenet/",TR="https://storage.googleapis.com/tfjs-models/savedmodel/posenet/resnet50/";function ER(r,t){return function(e,o){return(e-1)%o==0}(r,t)?r:Math.floor(r/t)*t+1}var NR=function(){function r(t,e){this.posenetModel=t;var o=this.posenetModel.inputs[0].shape;S.assert(o[1]===-1&&o[2]===-1,function(){return"Input shape [".concat(o[1],", ").concat(o[2],"] ")+"must both be equal to or -1"});var n,i,s=(n=e.inputResolution,i=e.outputStride,{height:ER(n.height,i),width:ER(n.width,i)});(function(a){S.assert(DX.indexOf(a)>=0,function(){return"outputStride of ".concat(a," is invalid. ")+"It must be either 8 or 16."})})(e.outputStride),function(a,l){S.assert(kR(a.height,l),function(){return"height of ".concat(a.height," is invalid for output stride ")+"".concat(l,".")}),S.assert(kR(a.width,l),function(){return"width of ".concat(a.width," is invalid for output stride ")+"".concat(l,".")})}(s,e.outputStride),this.inputResolution=s,this.outputStride=e.outputStride,this.architecture=e.architecture}return r.prototype.estimatePoses=function(t,e){return e===void 0&&(e=vR),ot(this,void 0,void 0,function(){return nt(this,function(o){return[2,this.estimatePosesGPU(t,e,!1)]})})},r.prototype.estimatePosesGPU=function(t,e,o){return e===void 0&&(e=vR),o===void 0&&(o=!1),ot(this,void 0,void 0,function(){var n,i,s,a,l,u,c,p,d,m,f,g,x,y,b,I,N,F;return nt(this,function(B){switch(B.label){case 0:return n=function(z){var H=z;if(H.maxPoses==null&&(H.maxPoses=1),H.maxPoses<=0)throw new Error("Invalid maxPoses ".concat(H.maxPoses,". Should be > 0."));if(H.maxPoses>1){if((H=xt(xt({},FX),H)).scoreThreshold<0||H.scoreThreshold>1)throw new Error("Invalid scoreThreshold ".concat(H.scoreThreshold,". ")+"Should be in range [0.0, 1.0]");if(H.nmsRadius<=0)throw new Error("Invalid nmsRadius ".concat(H.nmsRadius,"."))}return H}(e),t==null?[2,o?[[],[]]:[]]:(this.maxPoses=n.maxPoses,i=_v(t,{outputTensorSize:this.inputResolution,keepAspectRatio:!0,borderMode:"replicate"}),s=i.imageTensor,a=i.padding,l=this.architecture==="ResNet50"?fe(s,OX):BR(s,[-1,1]),u=this.posenetModel.predict(l),this.architecture==="ResNet50"?(c=ct(u[2],[0]),p=ct(u[3],[0]),d=ct(u[0],[0]),m=ct(u[1],[0])):(c=ct(u[0],[0]),p=ct(u[1],[0]),d=ct(u[2],[0]),m=ct(u[3],[0])),f=qr(p),this.maxPoses!==1?[3,5]:o?[4,YX(f,c,this.outputStride)]:[3,2]);case 1:return x=B.sent(),b=x[0],y=x[1],g=[b,y],[3,4];case 2:return[4,XX(f,c,this.outputStride)];case 3:b=B.sent(),g=[b],B.label=4;case 4:return[3,7];case 5:if(o)throw new Error("GPU renderer only supports single pose!");return[4,zX(f,c,d,m,this.outputStride,this.maxPoses,n.scoreThreshold,n.nmsRadius)];case 6:g=B.sent(),B.label=7;case 7:if(o){if(n.flipHorizontal===!0)throw new Error("flipHorizontal is not supported!");I=this.getCanvasInfo(Ic(t),this.inputResolution,a)}else F=Ic(t),N=function(z,H,K,X){var te=H.height,ue=H.width,pe=te/(K.height*(1-X.top-X.bottom)),xe=ue/(K.width*(1-X.left-X.right)),be=-X.top*K.height,Te=-X.left*K.width;if(xe===1&&pe===1&&be===0&&Te===0)return z;for(var qe=0,je=z;qe<je.length;qe++)for(var st=0,qt=je[qe].keypoints;st<qt.length;st++){var Jt=qt[st];Jt.x=(Jt.x+Te)*xe,Jt.y=(Jt.y+be)*pe}return z}(g,F,this.inputResolution,a),n.flipHorizontal&&(N=function(z,H){for(var K=0,X=z;K<X.length;K++)for(var te=0,ue=X[K].keypoints;te<ue.length;te++){var pe=ue[te];pe.x=H.width-1-pe.x}return z}(N,F));return s.dispose(),l.dispose(),Xe(u),c.dispose(),p.dispose(),d.dispose(),m.dispose(),f.dispose(),[2,o?[g,I]:N]}})})},r.prototype.getCanvasInfo=function(t,e,o){var n=t.height,i=t.width,s=n/(e.height*(1-o.top-o.bottom)),a=i/(e.width*(1-o.left-o.right)),l=-o.top*e.height;return[-o.left*e.width,l,a,s,t.width,t.height]},r.prototype.dispose=function(){this.posenetModel.dispose()},r.prototype.reset=function(){},r}();function QX(r){return r===void 0&&(r=fR),ot(this,void 0,void 0,function(){var t,e,o,n,i;return nt(this,function(s){switch(s.label){case 0:return(t=function(c){var p=c||fR;if(p.architecture==null&&(p.architecture="MobileNetV1"),hR.indexOf(p.architecture)<0)throw new Error("Invalid architecture ".concat(p.architecture,". ")+"Should be one of ".concat(hR));if(p.inputResolution==null&&(p.inputResolution={height:257,width:257}),p.outputStride==null&&(p.outputStride=16),gR[p.architecture].indexOf(p.outputStride)<0)throw new Error("Invalid outputStride ".concat(p.outputStride,". ")+"Should be one of ".concat(gR[p.architecture]," ")+"for architecture ".concat(p.architecture,"."));if(p.multiplier==null&&(p.multiplier=1),xR[p.architecture].indexOf(p.multiplier)<0)throw new Error("Invalid multiplier ".concat(p.multiplier,". ")+"Should be one of ".concat(xR[p.architecture]," ")+"for architecture ".concat(p.architecture,"."));if(p.quantBytes==null&&(p.quantBytes=4),yR.indexOf(p.quantBytes)<0)throw new Error("Invalid quantBytes ".concat(p.quantBytes,". ")+"Should be one of ".concat(yR," ")+"for architecture ".concat(p.architecture,"."));if(p.architecture==="MobileNetV1"&&p.outputStride===32&&p.multiplier!==1)throw new Error("When using an output stride of 32, you must select 1 as the multiplier.");return p}(r)).architecture!=="ResNet50"?[3,2]:(a=t.outputStride,l=t.quantBytes,u="model-stride".concat(a,".json"),e=l===4?TR+"float/"+u:TR+"quant".concat(l,"/")+u,[4,Ui(t.modelUrl||e)]);case 1:return o=s.sent(),[2,new NR(o,t)];case 2:return n=function(c,p,d){var m={1:"100",.75:"075",.5:"050"},f="model-stride".concat(c,".json");return d===4?IR+"float/".concat(m[p],"/")+f:IR+"quant".concat(d,"/").concat(m[p],"/")+f}(t.outputStride,t.multiplier,t.quantBytes),[4,Ui(t.modelUrl||n)];case 3:return i=s.sent(),[2,new NR(i,t)]}var a,l,u})})}function ZR(r,t){return ot(this,void 0,void 0,function(){var e,o;return nt(this,function(n){switch(r){case nr.PoseNet:return[2,QX(t)];case nr.BlazePose:if(o=void 0,(e=t)!=null){if(e.runtime==="tfjs")return[2,TX(t)];if(e.runtime==="mediapipe")return[2,Jj(t)];o=e.runtime}throw new Error("Expect modelConfig.runtime to be either 'tfjs' "+"or 'mediapipe', but got ".concat(o));case nr.MoveNet:return[2,AX(t)];default:throw new Error("".concat(r," is not a supported model name."))}})})}var JR={modelType:{SINGLEPOSE_LIGHTNING:"SinglePose.Lightning",SINGLEPOSE_THUNDER:"SinglePose.Thunder",MULTIPOSE_LIGHTNING:"MultiPose.Lightning"}};var ta={},Og={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function e$(r,t){ta[r]=t}function ro(r,t){if(!(r in ta)||t!=null){let o=eY(r,t);if(o!==null)ta[r]=o;else return console.log("Could not get context for WebGL version",r),null}let e=ta[r];return e==null||e.isContextLost()?(delete ta[r],ro(r)):(e.disable(e.DEPTH_TEST),e.disable(e.STENCIL_TEST),e.disable(e.BLEND),e.disable(e.DITHER),e.disable(e.POLYGON_OFFSET_FILL),e.disable(e.SAMPLE_COVERAGE),e.enable(e.SCISSOR_TEST),e.enable(e.CULL_FACE),e.cullFace(e.BACK),ta[r])}function JX(r){if(!G().getBool("IS_SAFARI")&&typeof OffscreenCanvas<"u"&&r===2)return new OffscreenCanvas(300,150);if(typeof document<"u")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function eY(r,t){if(r!==1&&r!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");let e=t??JX(r);return e.addEventListener("webglcontextlost",o=>{o.preventDefault(),delete ta[r]},!1),G().getBool("SOFTWARE_WEBGL_ENABLED")&&(Og.failIfMajorPerformanceCaveat=!1),r===1?e.getContext("webgl",Og)||e.getContext("experimental-webgl",Og):e.getContext("webgl2",Og)}var ra=function(r){return r[r.DENSE=0]="DENSE",r[r.SHARED_BATCH=1]="SHARED_BATCH",r}(ra||{}),fr=function(r){return r[r.RENDER=0]="RENDER",r[r.UPLOAD=1]="UPLOAD",r[r.PIXELS=2]="PIXELS",r[r.DOWNLOAD=3]="DOWNLOAD",r}(fr||{}),ir=function(r){return r[r.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",r[r.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",r[r.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",r[r.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",r[r.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16",r}(ir||{});function oa(r,t){return[t,r]}function t$(r,t){return r*t}function Yp(r){let t=S.sizeFromShape(r),e=Math.ceil(t/4);return S.sizeToSquarishShape(e)}function hn(r,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(r/2))]}function r$(r,t){let[e,o]=hn(r,t);return e*o*4}function Qp(r,t){let e=r,o,n,i,s,a,l,u,c,p,d;return G().getNumber("WEBGL_VERSION")===2?(o=e.R32F,n=e.R16F,i=e.RGBA16F,s=e.RGBA32F,a=e.RED,u=4,c=1,p=e.HALF_FLOAT,d=e.FLOAT,l=e.RGBA8):(o=r.RGBA,n=r.RGBA,i=r.RGBA,s=e.RGBA,a=r.RGBA,u=4,c=4,p=t!=null?t.HALF_FLOAT_OES:null,d=r.FLOAT,l=r.RGBA),{internalFormatFloat:o,internalFormatHalfFloat:n,internalFormatPackedHalfFloat:i,internalFormatPackedFloat:s,textureFormatFloat:a,downloadTextureFormat:l,downloadUnpackNumChannels:u,defaultNumChannels:c,textureTypeHalfFloat:p,textureTypeFloat:d}}function ve(r,t){let e=t();return G().getBool("DEBUG")&&tY(r),e}function tY(r){let t=r.getError();if(t!==r.NO_ERROR)throw new Error("WebGL Error: "+nY(r,t))}var rY=596e-10,oY=65504;function o$(r){return!!(G().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||r===0||rY<Math.abs(r)&&Math.abs(r)<oY)}function nY(r,t){switch(t){case r.NO_ERROR:return"NO_ERROR";case r.INVALID_ENUM:return"INVALID_ENUM";case r.INVALID_VALUE:return"INVALID_VALUE";case r.INVALID_OPERATION:return"INVALID_OPERATION";case r.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case r.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case r.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}function Zp(r,t){return Un(r,()=>r.getExtension(t),'Extension "'+t+'" not supported on this browser.')}function n$(r,t){let e=Un(r,()=>r.createShader(r.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(ve(r,()=>r.shaderSource(e,t)),ve(r,()=>r.compileShader(e)),r.getShaderParameter(e,r.COMPILE_STATUS)===!1)throw console.log(r.getShaderInfoLog(e)),new Error("Failed to compile vertex shader.");return e}function i$(r,t){let e=Un(r,()=>r.createShader(r.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(ve(r,()=>r.shaderSource(e,t)),ve(r,()=>r.compileShader(e)),G().get("ENGINE_COMPILE_ONLY"))return e;if(r.getShaderParameter(e,r.COMPILE_STATUS)===!1)throw Pv(t,r.getShaderInfoLog(e)),new Error("Failed to compile fragment shader.");return e}var iY=/ERROR: [0-9]+:([0-9]+):/g;function Pv(r,t){let e=iY.exec(t);if(e==null){console.log(`Couldn't parse line number in error: ${t}`),console.log(r);return}let o=+e[1],n=r.split(`
`),i=n.length.toString().length+2,s=n.map((p,d)=>S.rightPad((d+1).toString(),i)+p),a=0;for(let p=0;p<s.length;p++)a=Math.max(s[p].length,a);let l=s.slice(0,o-1),u=s.slice(o-1,o),c=s.slice(o);console.log(l.join(`
`)),console.log(t.split(`
`)[0]),console.log(`%c ${S.rightPad(u[0],a)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join(`
`))}function s$(r){return Un(r,()=>r.createProgram(),"Unable to create WebGLProgram.")}function a$(r,t){if(ve(r,()=>r.linkProgram(t)),!G().get("ENGINE_COMPILE_ONLY")&&r.getProgramParameter(t,r.LINK_STATUS)===!1)throw console.log(r.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}function Mg(r,t){if(ve(r,()=>r.validateProgram(t)),r.getProgramParameter(t,r.VALIDATE_STATUS)===!1)throw console.log(r.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function l$(r,t){let e=Un(r,()=>r.createBuffer(),"Unable to create WebGLBuffer");return ve(r,()=>r.bindBuffer(r.ARRAY_BUFFER,e)),ve(r,()=>r.bufferData(r.ARRAY_BUFFER,t,r.STATIC_DRAW)),e}function u$(r,t){let e=Un(r,()=>r.createBuffer(),"Unable to create WebGLBuffer");return ve(r,()=>r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,e)),ve(r,()=>r.bufferData(r.ELEMENT_ARRAY_BUFFER,t,r.STATIC_DRAW)),e}function c$(r){return Un(r,()=>r.createTexture(),"Unable to create WebGLTexture.")}function p$(r,t){let e=G().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(r<=0||t<=0){let o=`[${r}x${t}]`;throw new Error("Requested texture size "+o+" is invalid.")}if(r>e||t>e){let o=`[${r}x${t}]`,n=`[${e}x${e}]`;throw new Error("Requested texture size "+o+" greater than WebGL maximum on this browser / GPU "+n+".")}}function d$(r){return Un(r,()=>r.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function Av(r,t,e,o,n,i,s){let a=r.getAttribLocation(t,e);return a===-1?!1:(ve(r,()=>r.bindBuffer(r.ARRAY_BUFFER,o)),ve(r,()=>r.vertexAttribPointer(a,n,r.FLOAT,!1,i,s)),ve(r,()=>r.enableVertexAttribArray(a)),!0)}function sY(r,t,e){lY(r,e),ve(r,()=>r.activeTexture(r.TEXTURE0+e)),ve(r,()=>r.bindTexture(r.TEXTURE_2D,t))}function m$(r,t,e){return Un(r,()=>r.getUniformLocation(t,e),'uniform "'+e+'" not present in program.')}function f$(r,t,e){return r.getUniformLocation(t,e)}function h$(r,t,e,o){ve(r,()=>sY(r,t,o)),ve(r,()=>r.uniform1i(e,o))}function Bg(r,t,e){ve(r,()=>r.bindFramebuffer(r.FRAMEBUFFER,e)),ve(r,()=>r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,t,0))}function Dv(r,t){ve(r,()=>r.bindFramebuffer(r.FRAMEBUFFER,t)),ve(r,()=>r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,null,0))}function Jp(r){let t=r.checkFramebufferStatus(r.FRAMEBUFFER);if(t!==r.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+aY(r,t))}function aY(r,t){switch(t){case r.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case r.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case r.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case r.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}function Un(r,t,e){let o=ve(r,()=>t());if(o==null)throw new Error(e);return o}function lY(r,t){let e=r.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,o=t+r.TEXTURE0;if(o<r.TEXTURE0||o>e){let n=`[gl.TEXTURE0, gl.TEXTURE${e}]`;throw new Error(`textureUnit must be in ${n}.`)}}function Xi(r,t=2){return S.sizeFromShape(r.slice(0,r.length-t))}function Yi(r){if(r.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[r.length>1?r[r.length-2]:1,r[r.length-1]]}function ed(r){let t=[1,1,1];return r.length===0||r.length===1&&r[0]===1||(t=[Xi(r),...Yi(r)]),t}function g$(r,t=!1){let e=G().getNumber("WEBGL_MAX_TEXTURE_SIZE"),o=G().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");o===1/0&&G().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(o=e/2),t&&(e=e*2,o=o*2,r=r.map((a,l)=>l>=r.length-2?S.nearestLargerEven(r[l]):r[l]),r.length===1&&(r=[2,r[0]])),r.length!==2&&(r=S.squeezeShape(r).newShape);let n=S.sizeFromShape(r),i=null;r.length<=1&&n<=e?i=[1,n]:r.length===2&&r[0]<=e&&r[1]<=e?i=r:r.length===3&&r[0]*r[1]<=e&&r[2]<=e?i=[r[0]*r[1],r[2]]:r.length===3&&r[0]<=e&&r[1]*r[2]<=e?i=[r[0],r[1]*r[2]]:r.length===4&&r[0]*r[1]*r[2]<=e&&r[3]<=e?i=[r[0]*r[1]*r[2],r[3]]:r.length===4&&r[0]<=e&&r[1]*r[2]*r[3]<=e&&(i=[r[0],r[1]*r[2]*r[3]]);let s=i!=null&&Math.max(...i)>o&&Math.min(...i)<=(t?2:1)&&Math.min(...i)>0;if(i==null||s)if(t){let a=Xi(r),l=2,u=2;r.length&&([l,u]=Yi(r)),n=a*(l/2)*(u/2),i=S.sizeToSquarishShape(n).map(c=>c*2)}else i=S.sizeToSquarishShape(n);return i}function Lg(r){return r%2===0}function na(r,t){if(r=r.slice(-2),t=t.slice(-2),S.arraysEqual(r,t)||!r.length||!t.length||r[0]===0||r[1]===0||t[0]===0||t[1]===0)return!0;if(r.length!==t.length){let e=r[r.length-1],o=t[t.length-1];if(e===o||Lg(e)&&Lg(o)&&(r[0]===1||t[0]===1))return!0}return r[1]===t[1]&&Lg(r[0])&&Lg(t[0])}var Nv,Rv;function x$(r){if(Nv==null){let t=ro(r);Nv=t.getParameter(t.MAX_TEXTURE_SIZE)}return Nv}function y$(r){if(Rv==null){let t=ro(r);Rv=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,Rv)}function v$(r){if(r===0)return 0;let t,e=ro(r);return go(e,"EXT_disjoint_timer_query_webgl2")&&r===2?t=2:go(e,"EXT_disjoint_timer_query")?t=1:t=0,t}function go(r,t){return r.getExtension(t)!=null}function Fv(r){try{if(ro(r)!=null)return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function b$(r){if(r===0)return!1;let t=ro(r);if(r===1){if(!go(t,"OES_texture_float"))return!1}else if(!go(t,"EXT_color_buffer_float"))return!1;return $v(t)}function S$(r){if(r===0)return!1;let t=ro(r);if(r===1){if(!go(t,"OES_texture_float")||!go(t,"WEBGL_color_buffer_float"))return!1}else{if(go(t,"EXT_color_buffer_float"))return $v(t);let o="EXT_color_buffer_half_float";if(go(t,o)){let n=t.getExtension(o);return uY(t,n)}return!1}return $v(t)}function $v(r){let t=Qp(r),e=r.createTexture();r.bindTexture(r.TEXTURE_2D,e),r.texImage2D(r.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);let i=r.createFramebuffer();r.bindFramebuffer(r.FRAMEBUFFER,i),r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,e,0);let s=r.checkFramebufferStatus(r.FRAMEBUFFER)===r.FRAMEBUFFER_COMPLETE;return r.bindTexture(r.TEXTURE_2D,null),r.bindFramebuffer(r.FRAMEBUFFER,null),r.deleteTexture(e),r.deleteFramebuffer(i),s}function uY(r,t){let e=Qp(r,t),o=r.createTexture();r.bindTexture(r.TEXTURE_2D,o),r.texImage2D(r.TEXTURE_2D,0,e.internalFormatHalfFloat,1,1,0,e.textureFormatFloat,e.textureTypeHalfFloat,null);let s=r.createFramebuffer();r.bindFramebuffer(r.FRAMEBUFFER,s),r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,o,0);let a=r.checkFramebufferStatus(r.FRAMEBUFFER)===r.FRAMEBUFFER_COMPLETE;return r.bindTexture(r.TEXTURE_2D,null),r.bindFramebuffer(r.FRAMEBUFFER,null),r.deleteTexture(o),r.deleteFramebuffer(s),a}function w$(r){return r!==2?!1:ro(r).fenceSync!=null}function gn(r,t){Array.isArray(r)||(r=[r]),r.forEach(e=>{e!=null&&S.assert(e.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the WebGL backend.`)})}var Pe=G();Pe.registerFlag("HAS_WEBGL",()=>Pe.getNumber("WEBGL_VERSION")>0);Pe.registerFlag("WEBGL_VERSION",()=>Fv(2)?2:Fv(1)?1:0);Pe.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);Pe.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>Pe.get("WEBGL_VERSION")===2);Pe.registerFlag("WEBGL_CPU_FORWARD",()=>!0);Pe.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);Pe.registerFlag("WEBGL_PACK",()=>Pe.getBool("HAS_WEBGL"));Pe.registerFlag("WEBGL_PACK_NORMALIZATION",()=>Pe.getBool("WEBGL_PACK"));Pe.registerFlag("WEBGL_PACK_CLIP",()=>Pe.getBool("WEBGL_PACK"));Pe.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>Pe.getBool("WEBGL_PACK"));Pe.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>Pe.getBool("WEBGL_PACK"));Pe.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>Pe.getBool("WEBGL_PACK"));Pe.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>Pe.getBool("WEBGL_PACK"));Pe.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>Pe.getBool("WEBGL_PACK"));Pe.registerFlag("WEBGL_PACK_REDUCE",()=>Pe.getBool("WEBGL_PACK"));Pe.registerFlag("WEBGL_LAZILY_UNPACK",()=>Pe.getBool("WEBGL_PACK"));Pe.registerFlag("WEBGL_CONV_IM2COL",()=>Pe.getBool("WEBGL_PACK"));Pe.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",()=>Pe.getBool("WEBGL_PACK"));Pe.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>x$(Pe.getNumber("WEBGL_VERSION")));Pe.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>y$(Pe.getNumber("WEBGL_VERSION")));Pe.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{let r=Pe.getNumber("WEBGL_VERSION");return r===0?0:v$(r)});Pe.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>Pe.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!Ni.isMobile());Pe.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>b$(Pe.getNumber("WEBGL_VERSION")));Pe.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>Pe.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:Pe.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));Pe.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>S$(Pe.getNumber("WEBGL_VERSION")));Pe.registerFlag("WEBGL_FENCE_API_ENABLED",()=>w$(Pe.getNumber("WEBGL_VERSION")));Pe.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>Pe.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);Pe.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,r=>{if(typeof r!="number")throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but got ${r}.`);if(r<0&&r!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${r}.`)});Pe.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>Ni.isMobile()?1:-1,r=>{if(typeof r!="number")throw new Error(`WEBGL_FLUSH_THRESHOLD must be a number but got ${r}.`);if(r<0&&r!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${r}.`)});Pe.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128);Pe.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1);Pe.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5);Pe.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128);Pe.registerFlag("WEBGL_EXP_CONV",()=>!1);Pe.registerFlag("SOFTWARE_WEBGL_ENABLED",()=>Pe.getBool("IS_TEST"));Pe.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",()=>1/0);Pe.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",()=>!1);Pe.registerFlag("WEBGL2_ISNAN_CUSTOM",()=>!1);Pe.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);function wt(){let r,t,e,o,n,i,s,a,l,u;return G().getNumber("WEBGL_VERSION")===2?(r="#version 300 es",t="in",e="out",o="in",n="texture",i="outputColor",s="out vec4 outputColor;",a=G().getBool("WEBGL2_ISNAN_CUSTOM")?`
      bool isnan_custom(float val) {
        uint floatToUint = floatBitsToUint(val);
        return (floatToUint & 0x7fffffffu) > 0x7f800000u;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `:"",l="",u=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(r="",t="attribute",e="varying",o="varying",n="texture2D",i="gl_FragColor",s="",a=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,l=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,u=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:r,attribute:t,varyingVs:e,varyingFs:o,texture2D:n,output:i,defineOutput:s,defineSpecialNaN:a,defineSpecialInf:l,defineRound:u}}function Ho(r,t,e="index"){let o=S.computeStrides(t);return o.map((n,i)=>{let s=`int ${r[i]} = ${e} / ${n}`,a=i===o.length-1?`int ${r[i+1]} = ${e} - ${r[i]} * ${n}`:`index -= ${r[i]} * ${n}`;return`${s}; ${a};`}).join("")}function ia(r,t,e="index"){let o=S.computeStrides(t);return o.map((n,i)=>{let s=`int ${r[i]} = ${e} / outShapeStrides[${i}]`,a=i===o.length-1?`int ${r[i+1]} = ${e} - ${r[i]} * outShapeStrides[${i}]`:`index -= ${r[i]} * outShapeStrides[${i}]`;return`${s}; ${a};`}).join("")}function cY(r,t){let e=r.length,o=r.map(i=>`${t}[${i}]`),n=new Array(e-1);n[e-2]=o[e-1];for(let i=e-3;i>=0;--i)n[i]=`(${n[i+1]} * ${o[i+1]})`;return n}function C$(r,t,e="index"){let o=r.map((i,s)=>s),n=cY(o,t);return n.map((i,s)=>{let a=`int ${r[s]} = ${e} / ${n[s]}`,l=s===n.length-1?`int ${r[s+1]} = ${e} - ${r[s]} * ${n[s]}`:`index -= ${r[s]} * ${n[s]}`;return`${a}; ${l};`}).join("")}function Tc(r){let t=S.computeStrides(r).map(e=>e.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;
  }
`}function Ec(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}var Wg=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`;var{getBroadcastDims:_$}=$;function k$(r,t,e){let o=[];if(r.forEach(m=>{let f=S.sizeFromShape(m.shapeInfo.logicalShape);if(m.shapeInfo.isUniform?o.push(`uniform float ${m.name}${f>1?`[${f}]`:""};`):(o.push(`uniform sampler2D ${m.name};`),o.push(`uniform int offset${m.name};`)),e.enableShapeUniforms){let{uniformShape:g}=zg(e.packedInputs,m.shapeInfo.logicalShape,m.shapeInfo.texShape);switch(g.length){case 1:o.push(`uniform int ${m.name}Shape;`);break;case 2:o.push(`uniform ivec2 ${m.name}Shape;`);break;case 3:o.push(`uniform ivec3 ${m.name}Shape;`);break;case 4:o.push(`uniform ivec4 ${m.name}Shape;`);break;default:break}o.push(`uniform ivec2 ${m.name}TexShape;`)}}),e.enableShapeUniforms){switch(t.logicalShape.length){case 1:o.push("uniform int outShape;");break;case 2:o.push("uniform ivec2 outShape;"),o.push("uniform int outShapeStrides;");break;case 3:o.push("uniform ivec3 outShape;"),o.push("uniform ivec2 outShapeStrides;");break;case 4:o.push("uniform ivec4 outShape;"),o.push("uniform ivec3 outShapeStrides;");break;default:break}o.push("uniform ivec2 outTexShape;")}e.customUniforms&&e.customUniforms.forEach(m=>{o.push(`uniform ${m.type} ${m.name}${m.arrayIndex?`[${m.arrayIndex}]`:""};`)});let n=o.join(`
`),i=r.map(m=>pY(m,t,e.packedInputs,e.enableShapeUniforms)).join(`
`),s=t.texShape,a=wt(),l=fY(a),u,c,p=xY(a);return t.isPacked?(u=dY(t.logicalShape,s,e.enableShapeUniforms),c=gY(a)):(u=mY(t.logicalShape,s,e.enableShapeUniforms),c=hY(a)),e.packedInputs&&(p+=SY),[p,l,c,n,u,i,e.userCode].join(`
`)}function Rc(r,t=!1){let e=r.shapeInfo.logicalShape;switch(e.length){case 0:return AY(r,t);case 1:return FY(r,t);case 2:return LY(r,t);case 3:return BY(r,t);case 4:return WY(r,t);case 5:return zY(r);case 6:return UY(r);default:throw new Error(`${e.length}-D input sampling is not yet supported`)}}function I$(r,t){switch(r.shapeInfo.logicalShape.length){case 0:return PY(r);case 1:return DY(r,t);case 2:return OY(r,t);case 3:return MY(r,t);default:return VY(r,t)}}function pY(r,t,e=!1,o){let n="";e?n+=I$(r,o):n+=Rc(r,o);let i=r.shapeInfo.logicalShape,s=t.logicalShape;return i.length<=s.length&&(e?n+=GY(r,t):n+=HY(r,t)),n}function dY(r,t,e){switch(r.length){case 0:return T$();case 1:return wY(r,t,e);case 2:return RY(r,t,e);case 3:return _Y(r,t,e);default:return IY(r,t,e)}}function mY(r,t,e){switch(r.length){case 0:return T$();case 1:return CY(r,t,e);case 2:return $Y(r,t,e);case 3:return kY(r,t,e);case 4:return TY(r,t,e);case 5:return EY(r,t);case 6:return NY(r,t);default:throw new Error(`${r.length}-D output sampling is not yet supported`)}}function fY(r){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${r.texture2D}(textureSampler, uv).r;
    }
  `}function hY(r){return`
    void setOutput(float val) {
      ${r.output} = vec4(val, 0, 0, 0);
    }
  `}function gY(r){return`
    void setOutput(vec4 val) {
      ${r.output} = val;
    }
  `}function xY(r){return`${r.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${r.varyingFs} vec2 resultUV;
    ${r.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${r.defineSpecialNaN}
    ${r.defineSpecialInf}
    ${r.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${yY}
    ${vY}
    ${bY}
  `}var yY=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,vY=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,bY=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,SY=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function T$(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function wY(r,t,e){let o=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return o[0]===1?e?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${o[1]}.0);
      }
    `:o[1]===1?e?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${o[0]}.0);
      }
    `:e?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${o[0]}, ${o[1]}));
      return 2 * (resTexRC.x * ${o[1]} + resTexRC.y);
    }
  `}function CY(r,t,e){return t[0]===1?e?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${t[1]}.0);
      }
    `:t[1]===1?e?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${t[0]}.0);
      }
    `:e?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      return resTexRC.x * ${t[1]} + resTexRC.y;
    }
  `}function _Y(r,t,e){if(e)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;let o=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],n=Math.ceil(r[2]/2),i=n*Math.ceil(r[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${o[0]}, ${o[1]}));
      int index = resTexRC.x * ${o[1]} + resTexRC.y;

      int b = index / ${i};
      index -= b * ${i};

      int r = 2 * (index / ${n});
      int c = imod(index, ${n}) * 2;

      return ivec3(b, r, c);
    }
  `}function kY(r,t,e){if(e)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${ia(["r","c","d"],r)}
    return ivec3(r, c, d);
  }
`;let o=Ho(["r","c","d"],r);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${o}
      return ivec3(r, c, d);
    }
  `}function IY(r,t,e){if(e)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;let o=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],n=Math.ceil(r[r.length-1]/2),i=n*Math.ceil(r[r.length-2]/2),s=i,a="",l="b, r, c";for(let u=2;u<r.length-1;u++)s*=r[r.length-u-1],a=`
      int b${u} = index / ${s};
      index -= b${u} * ${s};
    `+a,l=`b${u}, `+l;return`
    ivec${r.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${o[0]}, ${o[1]}));
      int index = resTexRC.x * ${o[1]} + resTexRC.y;

      ${a}

      int b = index / ${i};
      index -= b * ${i};

      int r = 2 * (index / ${n});
      int c = imod(index, ${n}) * 2;

      return ivec${r.length}(${l});
    }
  `}function TY(r,t,e){if(e)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${ia(["r","c","d","d2"],r)}
      return ivec4(r, c, d, d2);
    }
  `;let o=Ho(["r","c","d","d2"],r);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${o}
      return ivec4(r, c, d, d2);
    }
  `}function EY(r,t){let e=Ho(["r","c","d","d2","d3"],r);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},
                             ${t[1]}));

      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${e}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function NY(r,t){let e=Ho(["r","c","d","d2","d3","d4"],r);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${e}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function RY(r,t,e){let o=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(S.arraysEqual(r,t))return e?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${o[0]}, ${o[1]}));
      }
    `;let n=Math.ceil(r[1]/2);return e?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${o[0]}, ${o[1]}));

      int index = resTexRC.x * ${o[1]} + resTexRC.y;
      int r = 2 * (index / ${n});
      int c = imod(index, ${n}) * 2;

      return ivec2(r, c);
    }
  `}function $Y(r,t,e){return S.arraysEqual(r,t)?e?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));
      }
    `:r[1]===1?e?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:r[0]===1?e?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:e?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      int r = index / ${r[1]};
      int c = index - r * ${r[1]};
      return ivec2(r, c);
    }
  `}function sa(r){return`offset${r}`}function PY(r){let t=r.name,e="get"+t.charAt(0).toUpperCase()+t.slice(1),o=wt();return`
    vec4 ${e}() {
      return ${o.texture2D}(${t}, halfCR);
    }
  `}function AY(r,t){let e=r.name,o="get"+e.charAt(0).toUpperCase()+e.slice(1);if(r.shapeInfo.isUniform)return`float ${o}() {return ${e};}`;let[n,i]=r.shapeInfo.texShape;if(n===1&&i===1)return`
      float ${o}() {
        return sampleTexture(${e}, halfCR);
      }
    `;let s=sa(e);if(t)return`
    float ${o}() {
      vec2 uv = uvFromFlat(${e}TexShape[0], ${e}TexShape[1], ${s});
      return sampleTexture(${e}, uv);
    }
  `;let[a,l]=r.shapeInfo.texShape;return`
    float ${o}() {
      vec2 uv = uvFromFlat(${a}, ${l}, ${s});
      return sampleTexture(${e}, uv);
    }
  `}function DY(r,t){let e=r.name,o="get"+e.charAt(0).toUpperCase()+e.slice(1),n=r.shapeInfo.texShape,i=wt();if(t)return`
    vec4 ${o}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${e}TexShape[0]) / 2.0), ceil(float(${e}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${i.texture2D}(${e}, uv);
    }
  `;let s=[Math.ceil(n[0]/2),Math.ceil(n[1]/2)];return`
    vec4 ${o}(int index) {
      vec2 uv = packedUVfrom1D(
        ${s[0]}, ${s[1]}, index);
      return ${i.texture2D}(${e}, uv);
    }
  `}function FY(r,t){let e=r.name,o="get"+e.charAt(0).toUpperCase()+e.slice(1);if(r.shapeInfo.isUniform)return`
      float ${o}(int index) {
        ${$c(r)}
      }
    `;let n=r.shapeInfo.texShape,i=n[0],s=n[1];if(s===1&&i===1)return`
      float ${o}(int index) {
        return sampleTexture(${e}, halfCR);
      }
    `;let a=sa(e);return s===1?t?`
      float ${o}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${a}) + 0.5) / float(${e}TexShape[0]));
        return sampleTexture(${e}, uv);
      }
    `:`
      float ${o}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${a}) + 0.5) / ${i}.0);
        return sampleTexture(${e}, uv);
      }
    `:i===1?t?`
      float ${o}(int index) {
        vec2 uv = vec2((float(index + ${a}) + 0.5) / float(${e}TexShape[1]), 0.5);
        return sampleTexture(${e}, uv);
      }
    `:`
      float ${o}(int index) {
        vec2 uv = vec2((float(index + ${a}) + 0.5) / ${s}.0, 0.5);
        return sampleTexture(${e}, uv);
      }
    `:t?`
    float ${o}(int index) {
      vec2 uv = uvFromFlat(${e}TexShape[0], ${e}TexShape[1], index + ${a});
      return sampleTexture(${e}, uv);
    }
  `:`
    float ${o}(int index) {
      vec2 uv = uvFromFlat(${i}, ${s}, index + ${a});
      return sampleTexture(${e}, uv);
    }
  `}function OY(r,t){let e=r.shapeInfo.logicalShape,o=r.name,n="get"+o.charAt(0).toUpperCase()+o.slice(1),i=r.shapeInfo.texShape,s=i[0],a=i[1],l=wt();if(i!=null&&S.arraysEqual(e,i))return t?`
      vec4 ${n}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}TexShape[1], ${o}TexShape[0]);

        return ${l.texture2D}(${o}, uv);
      }
    `:`
      vec4 ${n}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${a}.0, ${s}.0);

        return ${l.texture2D}(${o}, uv);
      }
    `;if(t)return`
    vec4 ${n}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${o}TexShape[0]) / 2.0), ceil(float(${o}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${o}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${l.texture2D}(${o}, uv);
    }
  `;let u=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],c=Math.ceil(e[1]/2);return`
    vec4 ${n}(int row, int col) {
      vec2 uv = packedUVfrom2D(${c}, ${u[0]}, ${u[1]}, row, col);
      return ${l.texture2D}(${o}, uv);
    }
  `}function LY(r,t){let e=r.shapeInfo.logicalShape,o=r.name,n="get"+o.charAt(0).toUpperCase()+o.slice(1),i=r.shapeInfo.texShape;if(i!=null&&S.arraysEqual(e,i)){if(t)return`
      float ${n}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}TexShape[1], ${o}TexShape[0]);
        return sampleTexture(${o}, uv);
      }
    `;let d=i[0],m=i[1];return`
    float ${n}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${m}.0, ${d}.0);
      return sampleTexture(${o}, uv);
    }
  `}let{newShape:s,keptDims:a}=S.squeezeShape(e),l=s;if(l.length<e.length){let d=Pc(r,l),m=["row","col"];return`
      ${Rc(d,t)}
      float ${n}(int row, int col) {
        return ${n}(${Ac(m,a)});
      }
    `}if(r.shapeInfo.isUniform)return`
      float ${n}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${e[1]}, 1)));
        ${$c(r)}
      }
    `;let u=i[0],c=i[1],p=sa(o);return c===1?t?`
      float ${n}(int row, int col) {
        float index = dot(vec3(row, col, ${p}), vec3(${o}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${o}TexShape[0]));
        return sampleTexture(${o}, uv);
      }
    `:`
    float ${n}(int row, int col) {
      float index = dot(vec3(row, col, ${p}), vec3(${e[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);
      return sampleTexture(${o}, uv);
    }
  `:u===1?t?`
      float ${n}(int row, int col) {
        float index = dot(vec3(row, col, ${p}), vec3(${o}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${o}TexShape[1]), 0.5);
        return sampleTexture(${o}, uv);
      }
    `:`
    float ${n}(int row, int col) {
      float index = dot(vec3(row, col, ${p}), vec3(${e[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${c}.0, 0.5);
      return sampleTexture(${o}, uv);
    }
  `:t?`
      float ${n}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${o}Shape[1] + col + ${p};
        vec2 uv = uvFromFlat(${o}TexShape[0], ${o}TexShape[1], index);
        return sampleTexture(${o}, uv);
      }
    `:`
  float ${n}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${e[1]} + col + ${p};
    vec2 uv = uvFromFlat(${u}, ${c}, index);
    return sampleTexture(${o}, uv);
  }
`}function MY(r,t){let e=r.shapeInfo.logicalShape,o=r.name,n="get"+o.charAt(0).toUpperCase()+o.slice(1),i=r.shapeInfo.texShape,s=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)];if(e[0]===1){let d=e.slice(1),m=[1,2],f=Pc(r,d),g=["b","row","col"];return`
        ${I$(f,t)}
        vec4 ${n}(int b, int row, int col) {
          return ${n}(${Ac(g,m)});
        }
      `}let a=wt();if(t)return`
    vec4 ${n}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${o}TexShape[0]) / 2.0), ceil(float(${o}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${o}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${o}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${a.texture2D}(${o}, uv);
    }
  `;let l=s[0],u=s[1],c=Math.ceil(e[2]/2),p=c*Math.ceil(e[1]/2);return`
    vec4 ${n}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${l}, ${u}, ${p}, ${c}, b, row, col);
      return ${a.texture2D}(${o}, uv);
    }
  `}function BY(r,t){let e=r.shapeInfo.logicalShape,o=r.name,n="get"+o.charAt(0).toUpperCase()+o.slice(1),i=e[1]*e[2],s=e[2],{newShape:a,keptDims:l}=S.squeezeShape(e),u=a;if(u.length<e.length){let g=Pc(r,u),x=["row","col","depth"];return`
        ${Rc(g,t)}
        float ${n}(int row, int col, int depth) {
          return ${n}(${Ac(x,l)});
        }
      `}if(r.shapeInfo.isUniform)return`
      float ${n}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${i}, ${s}, 1)));
        ${$c(r)}
      }
    `;let c=r.shapeInfo.texShape,p=c[0],d=c[1],m=r.shapeInfo.flatOffset;if(d===i&&m==null)return t?`
      float ${n}(int row, int col, int depth) {
        int stride1 = ${o}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${o}TexShape[1], ${o}TexShape[0]);
        return sampleTexture(${o}, uv);
      }
    `:`
        float ${n}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${s}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${d}.0, ${p}.0);
          return sampleTexture(${o}, uv);
        }
      `;if(d===s&&m==null)return t?`
      float ${n}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${o}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${o}TexShape[1], ${o}TexShape[0]);
        return sampleTexture(${o}, uv);
      }
    `:`
    float ${n}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${e[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}.0, ${p}.0);
      return sampleTexture(${o}, uv);
    }
  `;let f=sa(o);return t?`
    float ${n}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${o}Shape[1] * ${o}Shape[2];
      int stride1 = ${o}Shape[2];
      int index = row * stride0 + col * stride1 + depth + ${f};
      vec2 uv = uvFromFlat(${o}TexShape[0], ${o}TexShape[1], index);
      return sampleTexture(${o}, uv);
    }
    `:`
      float ${n}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${i} + col * ${s} + depth + ${f};
        vec2 uv = uvFromFlat(${p}, ${d}, index);
        return sampleTexture(${o}, uv);
      }
  `}function VY(r,t){let e=r.name,o="get"+e.charAt(0).toUpperCase()+e.slice(1),n=wt();if(t)return`
    vec4 ${o}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${e}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${e}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${e}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${e}TexShape[0]) / 2.0), ceil(float(${e}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${n.texture2D}(${e}, uv);
    }
  `;let i=r.shapeInfo.logicalShape,s=i.length,a=r.shapeInfo.texShape,l=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],u=l[0],c=l[1],p=Math.ceil(i[s-1]/2),d=p*Math.ceil(i[s-2]/2),m="int b, int row, int col",f=`b * ${d} + (row / 2) * ${p} + (col / 2)`;for(let g=2;g<s-1;g++)m=`int b${g}, `+m,d*=i[s-g-1],f=`b${g} * ${d} + `+f;return`
    vec4 ${o}(${m}) {
      int index = ${f};
      int texR = index / ${c};
      int texC = index - texR * ${c};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}, ${u});
      return ${n.texture2D}(${e}, uv);
    }
  `}function WY(r,t){let e=r.shapeInfo.logicalShape,o=r.name,n="get"+o.charAt(0).toUpperCase()+o.slice(1),i=e[3],s=e[2]*i,a=e[1]*s,{newShape:l,keptDims:u}=S.squeezeShape(e);if(l.length<e.length){let b=Pc(r,l),I=["row","col","depth","depth2"];return`
      ${Rc(b,t)}
      float ${n}(int row, int col, int depth, int depth2) {
        return ${n}(${Ac(I,u)});
      }
    `}if(r.shapeInfo.isUniform)return`
      float ${n}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${a}, ${s}, ${i}, 1)));
        ${$c(r)}
      }
    `;let c=r.shapeInfo.flatOffset,p=r.shapeInfo.texShape,d=p[0],m=p[1],f=`int stride2 = ${o}Shape[3];`,g=`int stride1 = ${o}Shape[2] * stride2;`,x=`int stride0 = ${o}Shape[1] * stride1;`;if(m===a&&c==null)return t?`
      float ${n}(int row, int col, int depth, int depth2) {
        ${f}
        ${g}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${o}TexShape[1], ${o}TexShape[0]);
        return sampleTexture(${o}, uv);
      }
    `:`
      float ${n}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${s}, ${i}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${m}.0, ${d}.0);
        return sampleTexture(${o}, uv);
      }
    `;if(m===i&&c==null)return t?`
      float ${n}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${o}Shape[1] * ${o}Shape[2], ${o}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${o}TexShape[1], ${o}TexShape[0]);
        return sampleTexture(${o}, uv);
      }
    `:`
      float ${n}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${e[1]*e[2]}, ${e[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${m}.0, ${d}.0);
        return sampleTexture(${o}, uv);
      }
    `;let y=sa(o);return t?`
    float ${n}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${f}
      ${g}
      ${x}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${o}TexShape[0], ${o}TexShape[1], index + ${y});
      return sampleTexture(${o}, uv);
    }
  `:`
    float ${n}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${a} + col * ${s} +
          depth * ${i} + depth2;
      vec2 uv = uvFromFlat(${d}, ${m}, index + ${y});
      return sampleTexture(${o}, uv);
    }
  `}function zY(r){let t=r.shapeInfo.logicalShape,e=r.name,o="get"+e.charAt(0).toUpperCase()+e.slice(1),n=t[4],i=t[3]*n,s=t[2]*i,a=t[1]*s,{newShape:l,keptDims:u}=S.squeezeShape(t);if(l.length<t.length){let g=Pc(r,l),x=["row","col","depth","depth2","depth3"];return`
      ${Rc(g)}
      float ${o}(int row, int col, int depth, int depth2, int depth3) {
        return ${o}(${Ac(x,u)});
      }
    `}if(r.shapeInfo.isUniform)return`
      float ${o}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${a}, ${s}, ${i}, ${n})) +
          depth3;
        ${$c(r)}
      }
    `;let c=r.shapeInfo.flatOffset,p=r.shapeInfo.texShape,d=p[0],m=p[1];if(m===a&&c==null)return`
      float ${o}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${s}, ${i}, ${n}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${m}.0, ${d}.0);
        return sampleTexture(${e}, uv);
      }
    `;if(m===n&&c==null)return`
      float ${o}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]},
               ${t[2]*t[3]}, ${t[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${m}.0, ${d}.0);
        return sampleTexture(${e}, uv);
      }
    `;let f=sa(e);return`
    float ${o}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${a} + col * ${s} + depth * ${i} +
          depth2 * ${n} + depth3 + ${f};
      vec2 uv = uvFromFlat(${d}, ${m}, index);
      return sampleTexture(${e}, uv);
    }
  `}function UY(r){let t=r.shapeInfo.logicalShape,e=r.name,o="get"+e.charAt(0).toUpperCase()+e.slice(1),{newShape:n,keptDims:i}=S.squeezeShape(t);if(n.length<t.length){let x=Pc(r,n),y=["row","col","depth","depth2","depth3","depth4"];return`
      ${Rc(x)}
      float ${o}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${o}(${Ac(y,i)});
      }
    `}let s=t[5],a=t[4]*s,l=t[3]*a,u=t[2]*l,c=t[1]*u;if(r.shapeInfo.isUniform)return`
      float ${o}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${c}, ${u}, ${l}, ${a})) +
          dot(
            vec2(depth3, depth4),
            vec2(${s}, 1)));
        ${$c(r)}
      }
    `;let p=r.shapeInfo.flatOffset,d=r.shapeInfo.texShape,m=d[0],f=d[1];if(f===c&&p==null)return`
      float ${o}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${u}, ${l}, ${a}, ${s})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${m}.0);
        return sampleTexture(${e}, uv);
      }
    `;if(f===s&&p==null)return`
      float ${o}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]*t[4]},
               ${t[2]*t[3]*t[4]},
               ${t[3]*t[4]},
               ${t[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${m}.0);
        return sampleTexture(${e}, uv);
      }
    `;let g=sa(e);return`
    float ${o}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${c} + col * ${u} + depth * ${l} +
          depth2 * ${a} + depth3 * ${s} + depth4 + ${g};
      vec2 uv = uvFromFlat(${m}, ${f}, index);
      return sampleTexture(${e}, uv);
    }
  `}function $c(r){let t=r.name,e=S.sizeFromShape(r.shapeInfo.logicalShape);return e<2?`return ${t};`:`
    for (int i = 0; i < ${e}; i++) {
      if (i == index) {
        return ${t}[i];
      }
    }
  `}function GY(r,t){let e=r.name,o=e.charAt(0).toUpperCase()+e.slice(1),n="get"+o+"AtOutCoords",i=r.shapeInfo.logicalShape.length,s=t.logicalShape.length,a=_$(r.shapeInfo.logicalShape,t.logicalShape),l=Me(s),u=s-i,c,p=["x","y","z","w","u","v"];i===0?c="":s<2&&a.length>=1?c="coords = 0;":c=a.map(b=>`coords.${p[b+u]} = 0;`).join(`
`);let d="";s<2&&i>0?d="coords":d=r.shapeInfo.logicalShape.map((b,I)=>`coords.${p[I+u]}`).join(", ");let m="return outputValue;",g=S.sizeFromShape(r.shapeInfo.logicalShape)===1,y=S.sizeFromShape(t.logicalShape)===1;if(i===1&&!g&&!y)m=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(g&&!y)s===1?m=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:m=`
        return vec4(outputValue.x);
      `;else if(a.length){let b=i-2,I=i-1;a.indexOf(b)>-1&&a.indexOf(I)>-1?m="return vec4(outputValue.x);":a.indexOf(b)>-1?m="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":a.indexOf(I)>-1&&(m="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${n}() {
      ${l} coords = getOutputCoords();
      ${c}
      vec4 outputValue = get${o}(${d});
      ${m}
    }
  `}function HY(r,t){let e=r.name,o=e.charAt(0).toUpperCase()+e.slice(1),n="get"+o+"AtOutCoords",i=t.texShape,s=r.shapeInfo.texShape,a=r.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!r.shapeInfo.isUniform&&a===l&&r.shapeInfo.flatOffset==null&&S.arraysEqual(s,i))return`
      float ${n}() {
        return sampleTexture(${e}, resultUV);
      }
    `;let u=Me(l),c=_$(r.shapeInfo.logicalShape,t.logicalShape),p=l-a,d,m=["x","y","z","w","u","v"];a===0?d="":l<2&&c.length>=1?d="coords = 0;":d=c.map(g=>`coords.${m[g+p]} = 0;`).join(`
`);let f="";return l<2&&a>0?f="coords":f=r.shapeInfo.logicalShape.map((g,x)=>`coords.${m[x+p]}`).join(", "),`
    float ${n}() {
      ${u} coords = getOutputCoords();
      ${d}
      return get${o}(${f});
    }
  `}function Me(r){if(r<=1)return"int";if(r===2)return"ivec2";if(r===3)return"ivec3";if(r===4)return"ivec4";if(r===5)return"ivec5";if(r===6)return"ivec6";throw Error(`GPU for rank ${r} is not yet supported`)}function zg(r,t,e){let{newShape:o,keptDims:n}=S.squeezeShape(t),i=t.length,s=r&&i===3&&t[0]===1,a=s?t.slice(1):o,l=!r&&i>1&&!S.arraysEqual(t,e)&&o.length<i||s;return{useSqueezeShape:l,uniformShape:l?a:t,keptDims:n}}function Pc(r,t){let e=JSON.parse(JSON.stringify(r));return e.shapeInfo.logicalShape=t,e}function Ac(r,t){return t.map(e=>r[e]).join(", ")}function N$(r,t,e,o){let n=e.map((c,p)=>{let d={logicalShape:c.shape,texShape:c.isUniform?null:c.texData.texShape,isUniform:c.isUniform,isPacked:c.isUniform?!1:c.texData.isPacked,flatOffset:null};return c.texData!=null&&c.texData.slice!=null&&c.texData.slice.flatOffset>0&&(d.flatOffset=c.texData.slice.flatOffset),{name:t.variableNames[p],shapeInfo:d}}),i=n.map(c=>c.shapeInfo),s={logicalShape:o.shape,texShape:o.texData.texShape,isUniform:!1,isPacked:o.texData.isPacked,flatOffset:null},a=k$(n,s,t),l=i$(r.gl,a),u=r.createProgram(l);return G().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:l,source:a,webGLProgram:u,inShapeInfos:i,outShapeInfo:s,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(r.buildVao(u),Object.assign({program:t,fragmentShader:l,source:a,webGLProgram:u,inShapeInfos:i,outShapeInfo:s},Ov(r,t,u)))}function Ov(r,t,e){let o=[],n=[],i,s,a,l=null,u=null;u=r.getUniformLocation(e,"NAN",!1),G().getNumber("WEBGL_VERSION")===1&&(l=r.getUniformLocation(e,"INFINITY",!1));let c=!1;for(let p of t.variableNames){let d={name:p,uniform:r.getUniformLocation(e,p,c),offset:r.getUniformLocation(e,`offset${p}`,c)};t.enableShapeUniforms&&(d.shape=r.getUniformLocation(e,`${p}Shape`,c),d.texShape=r.getUniformLocation(e,`${p}TexShape`,c)),o.push(d)}if(t.enableShapeUniforms&&(i=r.getUniformLocation(e,"outShape",c),a=r.getUniformLocation(e,"outShapeStrides",c),s=r.getUniformLocation(e,"outTexShape",c)),t.customUniforms)for(let p of t.customUniforms)n.push(r.getUniformLocation(e,p.name,c));return{variablesLocations:o,customUniformLocations:n,infLoc:l,nanLoc:u,outShapeLocation:i,outShapeStridesLocation:a,outTexShapeLocation:s}}function E$(r,t){if(r.length!==t.length)throw Error(`Binary was compiled with ${r.length} inputs, but was executed with ${t.length} inputs`);r.forEach((e,o)=>{let n=e.logicalShape,i=t[o],s=i.shape;if(!S.arraysEqual(n,s))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${n} and ${s} must match`);if(e.isUniform&&i.isUniform)return;let a=e.texShape,l=i.isUniform?null:i.texData.texShape;if(!S.arraysEqual(a,l))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${a} and ${l} must match`)})}function R$(r,t,e,o,n){t.program.enableShapeUniforms||(E$(t.inShapeInfos,e),E$([t.outShapeInfo],[o]));let i=o.texData.texture,s=o.texData.texShape;o.texData.isPacked?r.setOutputPackedMatrixTexture(i.texture,s[0],s[1]):r.setOutputMatrixTexture(i.texture,s[0],s[1]),r.setProgram(t.webGLProgram),r.bindVertexArray(t.webGLProgram.vao),G().getNumber("WEBGL_VERSION")===1&&t.infLoc!==null&&r.gl.uniform1f(t.infLoc,1/0),t.nanLoc!==null&&r.gl.uniform1f(t.nanLoc,NaN);for(let l=0;l<e.length;++l){let u=e[l],{uniform:c,offset:p,shape:d,texShape:m}=t.variablesLocations[l];if(d){let{uniformShape:f}=zg(t.program.packedInputs,u.shape,u.texData.texShape);switch(f.length){case 1:r.gl.uniform1iv(d,new Int32Array(f));break;case 2:r.gl.uniform2iv(d,new Int32Array(f));break;case 3:r.gl.uniform3iv(d,new Int32Array(f));break;case 4:r.gl.uniform4iv(d,new Int32Array(f));break;default:break}}if(m&&r.gl.uniform2i(m,u.texData.texShape[0],u.texData.texShape[1]),c!=null){if(u.isUniform){if(S.sizeFromShape(u.shape)<2)r.gl.uniform1f(c,u.uniformValues[0]);else{let f=u.uniformValues;f instanceof Float32Array||(f=new Float32Array(f)),r.gl.uniform1fv(c,f)}continue}u.texData.slice!=null&&p!=null&&r.gl.uniform1i(p,u.texData.slice.flatOffset),r.setInputMatrixTexture(u.texData.texture.texture,c,l)}}let a=t.outShapeLocation;if(a)switch(o.shape.length){case 1:r.gl.uniform1iv(a,new Int32Array(o.shape));break;case 2:r.gl.uniform2iv(a,new Int32Array(o.shape));break;case 3:r.gl.uniform3iv(a,new Int32Array(o.shape));break;case 4:r.gl.uniform4iv(a,new Int32Array(o.shape));break;default:break}if(t.outShapeStridesLocation){let l=S.computeStrides(o.shape);switch(o.shape.length){case 2:r.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(l));break;case 3:r.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(l));break;case 4:r.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(l));break;default:break}}if(t.outTexShapeLocation&&r.gl.uniform2i(t.outTexShapeLocation,o.texData.texShape[0],o.texData.texShape[1]),t.program.customUniforms&&n)for(let l=0;l<t.program.customUniforms.length;++l){let u=t.program.customUniforms[l],c=t.customUniformLocations[l],p=n[l];if(u.type==="float")r.gl.uniform1fv(c,p);else if(u.type==="vec2")r.gl.uniform2fv(c,p);else if(u.type==="vec3")r.gl.uniform3fv(c,p);else if(u.type==="vec4")r.gl.uniform4fv(c,p);else if(u.type==="int")r.gl.uniform1iv(c,p);else if(u.type==="ivec2")r.gl.uniform2iv(c,p);else if(u.type==="ivec3")r.gl.uniform3iv(c,p);else if(u.type==="ivec4")r.gl.uniform4iv(c,p);else throw Error(`uniform type ${u.type} is not supported yet.`)}r.executeProgram()}function $$(r,t,e){let o="";t.concat(e).forEach(s=>{let a=s.texData!=null&&s.texData.slice!=null&&s.texData.slice.flatOffset>0;if(r.enableShapeUniforms&&!s.isUniform){let l=s.texData.texShape,{useSqueezeShape:u,uniformShape:c,keptDims:p}=zg(r.packedInputs,s.shape,l),d="",m="",f="";if(c.length===1&&r.packedInputs){let F=[Math.ceil(l[0]/2),Math.ceil(l[1]/2)];d=`${F[0]>1}_${F[1]>1}`}else if(c.length===2&&!r.packedInputs)m=`${c[0]>1}_${c[1]>1}`;else if(c.length>2&&!r.packedInputs){let F=S.computeStrides(c);f=`${F[0]===l[1]}_${F[F.length-1]===l[1]}`}let g=s.shape.length,x=c.length===2&&S.arraysEqual(s.shape,l),y=S.sizeFromShape(s.shape)===1,b=$.getBroadcastDims(s.shape,e.shape),I=!r.packedInputs&&g===e.shape.length&&S.arraysEqual(l,e.texData.texShape),N=r.packedInputs||c.length>2?"":`${l[0]>1}_${l[1]>1}`;o+=`${g}_${I}_${u?p:""}_${c.length}_${y}_${b}_${x}_${d}_${m}_${f}_${N}_${a}`}else{let l=s.isUniform?"uniform":s.texData.texShape;o+=`${s.shape}_${l}_${a}`}});let n=r.userCode,i=r.constructor.name;return i+="_"+o+"_"+n+`${G().getNumber("WEBGL_VERSION")}`,i}function lt(r){return G().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&r<=4}var Ug=class{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=ra.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];let e=wt();this.outputShape=t,this.enableShapeUniforms=lt(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?ia(["r","c","d"],t):Ho(["r","c","d"],t)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${e.output} = result;
      }
    `}};var Gg=class{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=ra.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];let e=wt();this.outputShape=t,this.enableShapeUniforms=lt(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?ia(["r","c","d"],t):Ho(["r","c","d"],t)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${e.output} = result;
      }
    `}};var Hg=class{constructor(t){this.variableNames=["A"],this.outTexUsage=fr.DOWNLOAD;let e=wt();this.outputShape=t,this.userCode=`
      ${Wg}

      void main() {
        float x = getAAtOutCoords();
        ${e.output} = encode_float(x);
      }
    `}};var Kg=class{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=fr.DOWNLOAD;let e=wt();this.outputShape=t,this.userCode=`
      ${Wg}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${e.output} = encode_float(x);
      }
    `}};var jY={R:0,G:1,B:2,A:3},td=class{constructor(t,e=!1,o="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];let n=wt();this.outputShape=t,this.enableShapeUniforms=lt(this.outputShape.length);let i="result";e&&(i="floor(result * 255. + 0.5)");let s="";for(let a=0;a<o.length;a++){let l=o[a];s+=`
          if(offset == ${a}) {
            result = values[${jY[l]}];
          }`}this.userCode=`
      ${this.enableShapeUniforms?Ec():Tc(t)}

      void main() {
        ivec3 coords = getOutputCoords();
        int flatIndex = getFlatIndex(coords);
        float result = 0.;
        int offset = imod(flatIndex, ${o.length});

        flatIndex = idiv(flatIndex, ${o.length}, 1.);

        int r = flatIndex / texShape[1];
        if (r < texShape[0]) {
          int c = imod(flatIndex, texShape[1]);
          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
          vec4 values = ${n.texture2D}(A, uv);
          ${s}
        }
        ${n.output} = vec4(${i}, 0., 0., 0.);
      }
    `}};var qg=class{constructor(t,e=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];let o=wt();this.outputShape=t,this.enableShapeUniforms=lt(this.outputShape.length);let n="",i="result";e&&(i="floor(result * 255. + 0.5)");for(let s=0;s<=1;s++)for(let a=0;a<=1;a++){let l=s*2+a;n+=`
          localCoords = coords;
          if(localCoords[2] + ${a} < ${this.enableShapeUniforms?"outShape[2]":`${t[2]}`}) {
          localCoords[2] += ${a};
          if (localCoords[1] + ${s} < ${this.enableShapeUniforms?"outShape[1]":`${t[1]}`}) {
            localCoords[1] += ${s};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${o.texture2D}(A, uv);

            if (offset == 0) {
              result[${l}] = values[0];
            } else if (offset == 1) {
              result[${l}] = values[1];
            } else if (offset == 2) {
              result[${l}] = values[2];
            } else {
              result[${l}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?Ec():Tc(t)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${n}

          ${o.output} = ${i};
        }
    `}};function P$(r){let t=wt(),e=`${t.version}
    precision highp float;
    ${t.attribute} vec3 clipSpacePos;
    ${t.attribute} vec2 uv;
    ${t.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return n$(r,e)}function A$(r){let t=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return l$(r,t)}function D$(r){let t=new Uint16Array([0,1,2,2,1,3]);return u$(r,t)}function rd(r,t,e,o,n,i){p$(t,e);let s=c$(r),a=r.TEXTURE_2D;return ve(r,()=>r.bindTexture(a,s)),ve(r,()=>r.texParameteri(a,r.TEXTURE_WRAP_S,r.CLAMP_TO_EDGE)),ve(r,()=>r.texParameteri(a,r.TEXTURE_WRAP_T,r.CLAMP_TO_EDGE)),ve(r,()=>r.texParameteri(a,r.TEXTURE_MIN_FILTER,r.NEAREST)),ve(r,()=>r.texParameteri(a,r.TEXTURE_MAG_FILTER,r.NEAREST)),G().getNumber("WEBGL_VERSION")===1?ve(r,()=>r.texImage2D(a,0,o,t,e,0,n,i,null)):ve(r,()=>r.texStorage2D(a,1,o,t,e)),ve(r,()=>r.bindTexture(r.TEXTURE_2D,null)),{texture:s,texShape:[e,t]}}function Lv(r){return r.internalFormatFloat}function F$(r,t,e,o){let[n,i]=oa(t,e);return rd(r,n,i,Lv(o),o.textureFormatFloat,r.FLOAT)}function Mv(r){return r.internalFormatHalfFloat}function O$(r,t,e,o){let[n,i]=oa(t,e);return rd(r,n,i,Mv(o),o.textureFormatFloat,o.textureTypeHalfFloat)}function Bv(r){return r.downloadTextureFormat}function L$(r,t,e,o){let[n,i]=oa(t,e);return rd(r,n,i,Bv(o),r.RGBA,r.UNSIGNED_BYTE)}function Vv(r){return r.internalFormatPackedFloat}function M$(r,t,e,o){let[n,i]=hn(t,e);return rd(r,n,i,Vv(o),r.RGBA,r.FLOAT)}function Wv(r){return r.internalFormatPackedHalfFloat}function B$(r,t,e,o){let[n,i]=hn(t,e);return rd(r,n,i,Wv(o),r.RGBA,o.textureTypeHalfFloat)}function V$(r,t,e){return ve(r,()=>r.bindBuffer(r.ARRAY_BUFFER,e)),Av(r,t,"clipSpacePos",e,3,20,0)&&Av(r,t,"uv",e,2,20,12)}function W$(r,t,e,o,n,i){ve(r,()=>r.bindTexture(r.TEXTURE_2D,t));let s,a,l;n instanceof Uint8Array?(s=new Uint8Array(e*o*4),a=r.UNSIGNED_BYTE,l=r.RGBA):(s=new Float32Array(e*o*4),a=r.FLOAT,l=i.internalFormatPackedFloat),s.set(n),G().getNumber("WEBGL_VERSION")===2?ve(r,()=>r.texSubImage2D(r.TEXTURE_2D,0,0,0,e,o,r.RGBA,a,s)):ve(r,()=>r.texImage2D(r.TEXTURE_2D,0,l,e,o,0,r.RGBA,a,s)),ve(r,()=>r.bindTexture(r.TEXTURE_2D,null))}function z$(r,t,e){ve(r,()=>r.bindTexture(r.TEXTURE_2D,t)),e.data instanceof Uint8Array?G().getNumber("WEBGL_VERSION")===2?ve(r,()=>r.texSubImage2D(r.TEXTURE_2D,0,0,0,e.width,e.height,r.RGBA,r.UNSIGNED_BYTE,e.data)):ve(r,()=>r.texImage2D(r.TEXTURE_2D,0,r.RGBA,e.width,e.height,0,r.RGBA,r.UNSIGNED_BYTE,e.data)):G().getNumber("WEBGL_VERSION")===2?ve(r,()=>r.texSubImage2D(r.TEXTURE_2D,0,0,0,r.RGBA,r.UNSIGNED_BYTE,e)):ve(r,()=>r.texImage2D(r.TEXTURE_2D,0,r.RGBA,r.RGBA,r.UNSIGNED_BYTE,e)),ve(r,()=>r.bindTexture(r.TEXTURE_2D,null))}function U$(r,t,e,o){let n=r.createBuffer();ve(r,()=>r.bindBuffer(r.PIXEL_PACK_BUFFER,n));let a=4*4*t*e;return ve(r,()=>r.bufferData(r.PIXEL_PACK_BUFFER,a,r.STREAM_READ)),ve(r,()=>r.readPixels(0,0,e,t,r.RGBA,r.FLOAT,0)),ve(r,()=>r.bindBuffer(r.PIXEL_PACK_BUFFER,null)),n}function G$(r,t,e){let o=r,n=new Float32Array(e);return o.bindBuffer(o.PIXEL_PACK_BUFFER,t),o.getBufferSubData(o.PIXEL_PACK_BUFFER,0,n),o.bindBuffer(o.PIXEL_PACK_BUFFER,null),n}function H$(r,t,e,o){let[n,i]=oa(t,e),s=4,a=new Uint8Array(t$(t*e,s));return ve(r,()=>r.readPixels(0,0,n,i,o.downloadTextureFormat,r.UNSIGNED_BYTE,a)),new Float32Array(a.buffer)}function K$(r,t,e,o,n,i,s,a){let l=r,u=new Float32Array(r$(i,s));return l.bindBuffer(l.PIXEL_PACK_BUFFER,t),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,u),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),u}function q$(r,t,e){let o=new Float32Array(t*e*4);return ve(r,()=>r.readPixels(0,0,e,t,r.RGBA,r.FLOAT,o)),o}var Dc=class{constructor(t){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];let e=G().getNumber("WEBGL_VERSION");if(t!=null?(this.gl=t,e$(e,t)):this.gl=ro(e),t=this.gl,G().getNumber("WEBGL_VERSION")===2){let i=t;this.createVertexArray=()=>ve(i,()=>i.createVertexArray()),this.bindVertexArray=s=>ve(i,()=>i.bindVertexArray(s)),this.deleteVertexArray=s=>ve(i,()=>i.deleteVertexArray(s)),this.getVertexArray=()=>ve(i,()=>i.getParameter(i.VERTEX_ARRAY_BINDING))}else if(t!=null){let i=t.getExtension("OES_vertex_array_object");if(i==null)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>ve(t,()=>i.createVertexArrayOES()),this.bindVertexArray=s=>ve(t,()=>i.bindVertexArrayOES(s)),this.deleteVertexArray=s=>ve(t,()=>i.deleteVertexArrayOES(s)),this.getVertexArray=()=>ve(t,()=>t.getParameter(i.VERTEX_ARRAY_BINDING_OES))}let o="WEBGL_color_buffer_float",n="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),G().getNumber("WEBGL_VERSION")===1){let i="OES_texture_float",s="OES_texture_half_float";if(this.textureFloatExtension=Zp(this.gl,i),go(this.gl,s))this.textureHalfFloatExtension=Zp(this.gl,s);else if(G().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(o),go(this.gl,n))this.colorBufferHalfFloatExtension=Zp(this.gl,n);else if(G().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(o="EXT_color_buffer_float",go(this.gl,o))this.colorBufferFloatExtension=this.gl.getExtension(o);else if(go(this.gl,n))this.colorBufferHalfFloatExtension=this.gl.getExtension(n);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=A$(this.gl),this.indexBuffer=D$(this.gl),this.framebuffer=d$(this.gl),this.textureConfig=Qp(this.gl,this.textureHalfFloatExtension)}get debug(){return G().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");let t=this.gl;ve(t,()=>t.finish()),ve(t,()=>t.bindFramebuffer(t.FRAMEBUFFER,null)),ve(t,()=>t.deleteFramebuffer(this.framebuffer)),ve(t,()=>t.bindBuffer(t.ARRAY_BUFFER,null)),ve(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,null)),ve(t,()=>t.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(t,e){return this.throwIfDisposed(),F$(this.gl,t,e,this.textureConfig)}createFloat16MatrixTexture(t,e){return this.throwIfDisposed(),O$(this.gl,t,e,this.textureConfig)}createUnsignedBytesMatrixTexture(t,e){return this.throwIfDisposed(),L$(this.gl,t,e,this.textureConfig)}uploadPixelDataToTexture(t,e){this.throwIfDisposed(),z$(this.gl,t,e)}uploadDenseMatrixToTexture(t,e,o,n){this.throwIfDisposed(),W$(this.gl,t,e,o,n,this.textureConfig)}createFloat16PackedMatrixTexture(t,e){return this.throwIfDisposed(),B$(this.gl,t,e,this.textureConfig)}createPackedMatrixTexture(t,e){return this.throwIfDisposed(),M$(this.gl,t,e,this.textureConfig)}deleteMatrixTexture(t){this.throwIfDisposed(),this.outputTexture===t&&(Dv(this.gl,this.framebuffer),this.outputTexture=null),ve(this.gl,()=>this.gl.deleteTexture(t))}downloadByteEncodedFloatMatrixFromOutputTexture(t,e,o){return this.downloadMatrixDriver(t,()=>H$(this.gl,e,o,this.textureConfig))}downloadPackedMatrixFromBuffer(t,e,o,n,i,s){return K$(this.gl,t,e,o,n,i,s,this.textureConfig)}downloadFloat32MatrixFromBuffer(t,e){return G$(this.gl,t,e)}createBufferFromTexture(t,e,o){this.bindTextureToFrameBuffer(t);let n=U$(this.gl,e,o,this.textureConfig);return this.unbindTextureToFrameBuffer(),n}createAndWaitForFence(){let t=this.createFence(this.gl);return this.pollFence(t)}createFence(t){let e,o;if(G().getBool("WEBGL_FENCE_API_ENABLED")){let n=t,i=n.fenceSync(n.SYNC_GPU_COMMANDS_COMPLETE,0);t.flush(),o=()=>{let s=n.clientWaitSync(i,0,0);return s===n.ALREADY_SIGNALED||s===n.CONDITION_SATISFIED},e=i}else G().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(e=this.beginQuery(),this.endQuery(),o=()=>this.isQueryAvailable(e,G().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):o=()=>!0;return{query:e,isFencePassed:o}}downloadMatrixFromPackedTexture(t,e,o){return this.downloadMatrixDriver(t,()=>q$(this.gl,e,o))}createProgram(t){this.throwIfDisposed();let e=this.gl;this.vertexShader==null&&(this.vertexShader=P$(e));let o=s$(e);ve(e,()=>e.attachShader(o,this.vertexShader)),ve(e,()=>e.attachShader(o,t)),a$(e,o);let n=Object.assign(o,{vao:this.createVertexArray()});return this.debug&&Mg(e,n),n}buildVao(t){this.setProgram(t),this.bindVertexArray(t.vao);let e=this.gl;ve(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,this.indexBuffer)),V$(e,t,this.vertexBuffer)}deleteProgram(t){this.throwIfDisposed(),t===this.program&&(this.program=null),t!=null&&(ve(this.gl,()=>this.gl.deleteProgram(t)),this.deleteVertexArray(t.vao))}setProgram(t){this.throwIfDisposed(),this.program=t,this.program!=null&&this.debug&&Mg(this.gl,this.program),ve(this.gl,()=>this.gl.useProgram(t))}getUniformLocation(t,e,o=!0){return this.throwIfDisposed(),o?m$(this.gl,t,e):f$(this.gl,t,e)}getAttributeLocation(t,e){return this.throwIfDisposed(),ve(this.gl,()=>this.gl.getAttribLocation(t,e))}getUniformLocationNoThrow(t,e){return this.throwIfDisposed(),this.gl.getUniformLocation(t,e)}setInputMatrixTexture(t,e,o){this.throwIfDisposed(),this.throwIfNoProgram(),h$(this.gl,t,e,o)}setOutputMatrixTexture(t,e,o){this.setOutputMatrixTextureDriver(t,o,e)}setOutputPackedMatrixTexture(t,e,o){this.throwIfDisposed();let[n,i]=hn(e,o);this.setOutputMatrixTextureDriver(t,n,i)}setOutputMatrixWriteRegion(t,e,o,n){this.setOutputMatrixWriteRegionDriver(o,t,n,e)}setOutputPackedMatrixWriteRegion(t,e,o,n){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&Mg(this.gl,this.program),Jp(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();let t=this.gl;if(this.debug){let e=this.getVertexArray();console.assert(e===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}ve(t,()=>t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),ve(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=Zp(this.gl,G().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(G().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let o=this.gl,n=this.getQueryTimerExtensionWebGL2(),i=o.createQuery();return o.beginQuery(n.TIME_ELAPSED_EXT,i),i}let t=this.getQueryTimerExtensionWebGL1(),e=t.createQueryEXT();return t.beginQueryEXT(t.TIME_ELAPSED_EXT,e),e}endQuery(){if(G().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let e=this.gl,o=this.getQueryTimerExtensionWebGL2();e.endQuery(o.TIME_ELAPSED_EXT);return}let t=this.getQueryTimerExtensionWebGL1();t.endQueryEXT(t.TIME_ELAPSED_EXT)}waitForQueryAndGetTime(t){return j(this,null,function*(){return yield S.repeatedTry(()=>this.disposed||this.isQueryAvailable(t,G().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(t,G().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))})}getQueryTime(t,e){if(e===0)return null;if(e===2){let o=this.gl;return o.getQueryParameter(t,o.QUERY_RESULT)/1e6}else{let o=this.getQueryTimerExtensionWebGL1();return o.getQueryObjectEXT(t,o.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(t,e){if(e===0)return!0;if(e===2){let o=this.gl,n=this.getQueryTimerExtensionWebGL2(),i=o.getQueryParameter(t,o.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),i&&!this.disjoint}else{let o=this.getQueryTimerExtensionWebGL1(),n=o.getQueryObjectEXT(t,o.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(o.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(t){return new Promise(e=>{this.addItemToPoll(()=>t.isFencePassed(),()=>e())})}pollItems(){let t=YY(this.itemsToPoll.map(e=>e.isDoneFn));for(let e=0;e<=t;++e){let{resolveFn:o}=this.itemsToPoll[e];o()}this.itemsToPoll=this.itemsToPoll.slice(t+1)}addItemToPoll(t,e){if(this.itemsToPoll.push({isDoneFn:t,resolveFn:e}),this.itemsToPoll.length>1)return;let o;"setTimeoutCustom"in G().platform&&(o=G().platform.setTimeoutCustom.bind(G().platform)),S.repeatedTry(()=>(this.pollItems(),this.itemsToPoll.length===0),()=>0,null,o)}bindTextureToFrameBuffer(t){this.throwIfDisposed(),Bg(this.gl,t,this.framebuffer),this.debug&&Jp(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(Bg(this.gl,this.outputTexture,this.framebuffer),this.debug&&Jp(this.gl)):Dv(this.gl,this.framebuffer)}downloadMatrixDriver(t,e){this.bindTextureToFrameBuffer(t);let o=e();return this.unbindTextureToFrameBuffer(),o}setOutputMatrixTextureDriver(t,e,o){this.throwIfDisposed();let n=this.gl;Bg(n,t,this.framebuffer),this.debug&&Jp(n),this.outputTexture=t,ve(n,()=>n.viewport(0,0,e,o)),ve(n,()=>n.scissor(0,0,e,o))}setOutputMatrixWriteRegionDriver(t,e,o,n){this.throwIfDisposed(),ve(this.gl,()=>this.gl.scissor(t,e,o,n))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}};function YY(r){let t=0;for(;t<r.length&&r[t]();++t);return t-1}var{addImpl:j$,bincountImpl:jg,bincountReduceImpl:X$,bitwiseAndImpl:Y$,castImpl:Q$,ceilImpl:Z$,concatImpl:J$,equalImpl:eP,expImpl:tP,expm1Impl:rP,floorImpl:oP,gatherNdImpl:nP,gatherV2Impl:iP,greaterImpl:sP,greaterEqualImpl:aP,lessImpl:lP,lessEqualImpl:uP,linSpaceImpl:cP,logImpl:pP,maxImpl:dP,maximumImpl:mP,minimumImpl:fP,multiplyImpl:hP,negImpl:gP,notEqualImpl:xP,prodImpl:yP,raggedGatherImpl:vP,raggedRangeImpl:bP,raggedTensorToTensorImpl:SP,rangeImpl:wP,rsqrtImpl:CP,scatterImpl:_P,sigmoidImpl:kP,simpleAbsImpl:Xg,sliceImpl:IP,sparseFillEmptyRowsImpl:TP,sparseReshapeImpl:EP,sparseSegmentReductionImpl:Yg,sqrtImpl:NP,staticRegexReplaceImpl:RP,stridedSliceImpl:$P,stringNGramsImpl:PP,stringSplitImpl:AP,stringToHashBucketFastImpl:DP,subImpl:FP,tileImpl:OP,topKImpl:LP,transposeImpl:aa,uniqueImpl:MP}=Up;function zv(r,t){return["x","y","z","w","u","v"].slice(0,t).map(e=>`${r}.${e}`)}function Pt(r,t){return t===1?[r]:zv(r,t)}function BP(r,t){if(r===1)return"rc";let e="";for(let o=0;o<r;o++)e+=t[o],o<r-1&&(e+=",");return e}var Qg=class{constructor(t){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=t,this.rank=t.length,this.enableShapeUniforms=lt(this.outputShape.length),this.rank===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{let e=Pt("rc",this.rank),o=Me(this.rank),n=this.getOutOfBoundsCondition(e),i=this.getSetup(e),s=this.getOutput(e);this.userCode=`
        void main() {
          ${o} rc = getOutputCoords();

          if(${n}) {
            setOutput(vec4(0));
          } else {
            ${i}

            setOutput(vec4(${s}));
          }
        }
      `}}getSourceCoordsArr(t){let e=[];for(let o=0;o<=1;o++)for(let n=0;n<=1;n++){let i=`${o===0?"r":"rp1"}, ${n===0?"c":"cp1"}`;for(let s=2;s<this.rank;s++)i=`${t[t.length-1-s]},`+i;e.push(i)}return e}getOutOfBoundsCondition(t){if(this.rank===1)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let e="";for(let o=this.rank-2;o<this.rank;o++)e+=`${t[o]} >= ${this.enableShapeUniforms?`outShape[${o}]`:this.outputShape[o]}`,o<this.rank-1&&(e+="||");return e}getSetup(t){if(this.rank===1)return"";let e=t.slice(-2),o=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],n=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${e[0]};
      int c = ${e[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${o};
      bool rEdge = rp1 >= ${n};
    `}getOutput(t){let e=this.getSourceCoordsArr(t);return this.rank===1?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${e[0]}),
            cEdge ? 0. : getA(${e[1]}),
            rEdge ? 0. : getA(${e[2]}),
            rEdge || cEdge ? 0. : getA(${e[3]})`}};var Fc=class{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=t,this.enableShapeUniforms=lt(this.outputShape.length);let o="";for(let n=0;n<4;n++){let i="thisRC = rc;";n%2===1&&(i+="thisRC.z += 1;"),n>1&&(i+="thisRC.y += 1;"),o+=`
        ${i}
        ${n>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${n}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${n>0?"}":""}
      `}this.userCode=`
      ${QY(e,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?Ec():Tc(t)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":t[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":t[2]};

        ${o}

        setOutput(result);
      }
    `}};function QY(r,t){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${t?C$(["r","c","d"],"inputShape"):Ho(["r","c","d"],r)}
      return ivec3(r, c, d);
    }
  `}var Zg=class{constructor(t){this.gpgpu=t,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(t,e,o){let n=WP(e,o),i=zP(t,n,o);i in this.freeTextures||(this.freeTextures[i]=[]),i in this.usedTextures||(this.usedTextures[i]=[]);let s=VP(t,n,this.gpgpu.gl,this.gpgpu.textureConfig,o);if(this.freeTextures[i].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=s,this.log();let l=this.freeTextures[i].pop();return this.usedTextures[i].push(l),l}let a;return n===ir.PACKED_2X2_FLOAT32?a=this.gpgpu.createPackedMatrixTexture(t[0],t[1]):n===ir.PACKED_2X2_FLOAT16?a=this.gpgpu.createFloat16PackedMatrixTexture(t[0],t[1]):n===ir.UNPACKED_FLOAT32?a=this.gpgpu.createFloat32MatrixTexture(t[0],t[1]):n===ir.UNPACKED_FLOAT16?a=this.gpgpu.createFloat16MatrixTexture(t[0],t[1]):n===ir.PACKED_4X1_UNSIGNED_BYTE&&(a=this.gpgpu.createUnsignedBytesMatrixTexture(t[0],t[1])),this.usedTextures[i].push(a),this.numUsedTextures++,this._numBytesAllocated+=s,this.log(),a}releaseTexture(t,e,o,n){if(this.freeTextures==null)return;let i=WP(o,n),s=zP(e,i,n);s in this.freeTextures||(this.freeTextures[s]=[]);let a=VP(e,i,this.gpgpu.gl,this.gpgpu.textureConfig,n),l=G().getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");l!==-1&&this._numBytesAllocated>l?(this.gpgpu.deleteMatrixTexture(t.texture),this._numBytesAllocated-=a):(this.freeTextures[s].push(t),this.numFreeTextures++,this._numBytesFree+=a),this.numUsedTextures--;let u=this.usedTextures[s],c=u&&u.indexOf(t);if(c==null||c<0)throw new Error("Cannot release a texture that was never provided by this texture manager");u[c]=u[u.length-1],u.pop(),this.log()}log(){if(!this.logEnabled)return;let t=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${t})`);let e=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*e)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(let t in this.freeTextures)this.freeTextures[t].forEach(e=>{this.gpgpu.deleteMatrixTexture(e.texture)});for(let t in this.usedTextures)this.usedTextures[t].forEach(e=>{this.gpgpu.deleteMatrixTexture(e.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}};function ZY(r,t){let e=r;if(t===e.R32F)return 4;if(t===e.R16F)return 2;if(t===e.RGBA32F)return 16;if(t===r.RGBA)return 16;if(t===e.RGBA16F)return 8;if(t===e.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}function VP(r,t,e,o,n){let i=JY(t,o),s;if(n){let[l,u]=hn(r[0],r[1]);s=l*u}else{let[l,u]=oa(r[0],r[1]);s=l*u}let a=ZY(e,i);return s*a}function JY(r,t){switch(r){case ir.PACKED_2X2_FLOAT32:return Vv(t);case ir.PACKED_2X2_FLOAT16:return Wv(t);case ir.UNPACKED_FLOAT32:return Lv(t);case ir.UNPACKED_FLOAT16:return Mv(t);case ir.PACKED_4X1_UNSIGNED_BYTE:return Bv(t);default:throw new Error(`Unknown physical texture type ${r}`)}}function eQ(r){return G().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?r?ir.PACKED_2X2_FLOAT32:ir.UNPACKED_FLOAT32:r?ir.PACKED_2X2_FLOAT16:ir.UNPACKED_FLOAT16}function WP(r,t){if(r===fr.UPLOAD)return ir.PACKED_2X2_FLOAT32;if(r===fr.RENDER||r==null)return eQ(t);if(r===fr.DOWNLOAD||r===fr.PIXELS)return ir.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${r}`)}function zP(r,t,e){return`${r[0]}_${r[1]}_${t}_${e}`}var Zt=class{constructor(t,e){this.variableNames=["A"],this.outputShape=t,this.enableShapeUniforms=lt(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${e}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}},Vt="if (isnan(x)) return x;",UP="return x;",Uv="return abs(x);";var GP="return (x >= 0.0) ? x : (exp(x) - 1.0);",HP=Vt+`
  return (x < 0.0) ? 0.0 : x;
`,KP=Vt+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,xn="return x;",qP="return 1.0 / (1.0 + exp(-1.0 * x));";var XP="return x;",YP=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,QP=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,ZP=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,JP="return 1.0 / (1.0 + exp(-1.0 * x));",Lr=class{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.enableShapeUniforms=lt(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${e}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}};var Jg=class{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=t,this.enableShapeUniforms=lt(this.outputShape.length);let e=t.length,o=Pt("rc",e),n=Me(e),i=BP(e,o),s=o.slice(-2),a=e<=1?"rc":`vec2(${s.join(",")})`;this.userCode=`
      void main() {
        ${n} rc = getOutputCoords();
        vec4 packedInput = getA(${i});

        setOutput(getChannel(packedInput, ${a}));
      }
    `}};var rQ=Xr.whereImpl,oQ=1e-7,nQ=1e-4,e0={};function iQ(r){return r in e0||(e0[r]={}),e0[r]}var sQ=G().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),aQ=600;function lQ(){return G().global.screen==null?1024:G().global.screen.height*G().global.screen.width*window.devicePixelRatio*aQ/1024/1024}var eA=(()=>{class r extends Cn{nextDataId(){return r.nextDataId++}constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!G().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let o;if(e!=null){if(e instanceof Dc)o=e;else{let n=ro(G().getNumber("WEBGL_VERSION"),e);o=new Dc(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{let n=ro(G().getNumber("WEBGL_VERSION"));o=new Dc(n),this.binaryCache=iQ(G().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=o,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new Zg(this.gpgpu),this.numMBBeforeWarning=lQ(),this.texData=new cs(this,cr())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,o,n,i,s,a){let l=this.makeTensorInfo(o,n),u=this.texData.get(l.dataId);u.isPacked=!1,u.texture={texture:e,texShape:[i,s]},u.texShape=[i,s];let c=ed(o),p=new td(c,!1,a),d=this.runWebGLProgram(p,[l],n,[[i,s]]);return d.shape=o,u.texture=null,this.disposeIntermediateTensorInfo(l),d.dataId}write(e,o,n){if((G().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||G().getBool("DEBUG"))&&this.checkNumericalProblems(e),n==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let i={id:this.nextDataId()};return this.texData.set(i,{shape:o,dtype:n,values:e,usage:fr.UPLOAD,refCount:1}),i}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){let o=this.texData.get(e);o.refCount++}decRef(e){if(this.texData.has(e)){let o=this.texData.get(e);o.refCount--}}move(e,o,n,i,s){if(G().getBool("DEBUG")&&this.checkNumericalProblems(o),i==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:i,values:o,usage:fr.UPLOAD,refCount:s})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){let o=this.texData.get(e),{values:n,dtype:i,complexTensorInfos:s,slice:a,shape:l,isPacked:u}=o;if(a!=null){let m;u?m=new Lr(l,xn):m=new Zt(l,xn);let f=this.runWebGLProgram(m,[{dataId:e,shape:l,dtype:i}],i),g=this.readSync(f.dataId);return this.disposeIntermediateTensorInfo(f),g}if(n!=null)return this.convertAndCacheOnCPU(e);if(i==="string")return n;let c=this.activeTimers!=null,p;c&&(p=S.now());let d;if(i==="complex64"){let m=this.readSync(s.real.dataId),f=this.readSync(s.imag.dataId);d=$.mergeRealAndImagArrays(m,f)}else d=this.getValuesFromTexture(e);return c&&(this.downloadWaitMs+=S.now()-p),this.convertAndCacheOnCPU(e,d)}read(e){return j(this,null,function*(){if(this.pendingRead.has(e)){let g=this.pendingRead.get(e);return new Promise(x=>g.push(x))}let o=this.texData.get(e),{values:n,shape:i,slice:s,dtype:a,complexTensorInfos:l,isPacked:u}=o;if(s!=null){let g;u?g=new Lr(i,xn):g=new Zt(i,xn);let x=this.runWebGLProgram(g,[{dataId:e,shape:i,dtype:a}],a),y=this.read(x.dataId);return this.disposeIntermediateTensorInfo(x),y}if(n!=null)return this.convertAndCacheOnCPU(e);if(G().getBool("DEBUG")&&!G().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&G().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let c=null,p;if(a!=="complex64"&&G().get("WEBGL_BUFFER_SUPPORTED")){p=this.decode(e);let g=this.texData.get(p.dataId);c=this.gpgpu.createBufferFromTexture(g.texture.texture,...Yp(i))}this.pendingRead.set(e,[]),a!=="complex64"&&(yield this.gpgpu.createAndWaitForFence());let d;if(a==="complex64"){let g=yield Promise.all([this.read(l.real.dataId),this.read(l.imag.dataId)]),x=g[0],y=g[1];d=$.mergeRealAndImagArrays(x,y)}else if(c==null)d=this.getValuesFromTexture(e);else{let g=S.sizeFromShape(i);d=this.gpgpu.downloadFloat32MatrixFromBuffer(c,g)}if(p!=null&&this.disposeIntermediateTensorInfo(p),c!=null){let g=this.gpgpu.gl;ve(g,()=>g.deleteBuffer(c))}let m=this.convertAndCacheOnCPU(e,d),f=this.pendingRead.get(e);return this.pendingRead.delete(e),f.forEach(g=>g(m)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&cr().removeDataId(e,this),this.pendingDeletes--),m})}readToGPU(e,o={}){let n=this.texData.get(e),{values:i,shape:s,slice:a,dtype:l,isPacked:u,texture:c}=n;if(l==="complex64")throw new Error("Does not support reading texture for complex64 dtype.");if(a!=null){let f;u?f=new Lr(s,xn):f=new Zt(s,xn);let g=this.runWebGLProgram(f,[{dataId:e,shape:s,dtype:l}],l),x=this.readToGPU(g,o);return this.disposeIntermediateTensorInfo(g),x}if(c==null)throw i!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");let p=this.decode(e,o.customTexShape),d=cr().makeTensorFromTensorInfo(p),m=this.texData.get(p.dataId);return Object.assign({tensorRef:d},m.texture)}bufferSync(e){let o=this.readSync(e.dataId);if(e.dtype==="string")try{let n=o.map(i=>S.decodeString(i));return Le(e.shape,e.dtype,n)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Le(e.shape,e.dtype,o)}checkNumericalProblems(e){if(e!=null)for(let o=0;o<e.length;o++){let n=e[o];if(!o$(n))throw G().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${n} cannot be represented on this device.`)}}getValuesFromTexture(e){let{shape:o,dtype:n,isPacked:i}=this.texData.get(e),s=S.sizeFromShape(o);if(G().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){let m=this.decode(e),f=this.texData.get(m.dataId),g=this.gpgpu.downloadMatrixFromPackedTexture(f.texture.texture,...Yp(o)).subarray(0,s);return this.disposeIntermediateTensorInfo(m),g}let a=G().getBool("WEBGL_PACK")&&i===!0,l=a?ed(o):o,u=a?new Kg(l):new Hg(l),c=this.runWebGLProgram(u,[{shape:l,dtype:n,dataId:e}],"float32"),p=this.texData.get(c.dataId),d=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(p.texture.texture,p.texShape[0],p.texShape[1]).subarray(0,s);return this.disposeIntermediateTensorInfo(c),d}timerAvailable(){return G().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){let o=this.activeTimers,n=[],i=!1;this.programTimersStack==null?(this.programTimersStack=n,i=!0):this.activeTimers.push(n),this.activeTimers=n,e();let s=S.flatten(this.activeTimers.map(u=>u.query)).filter(u=>u!=null),a=S.flatten(this.activeTimers.map(u=>u.name)).filter(u=>u!=null);this.activeTimers=o,i&&(this.programTimersStack=null);let l={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return j(this,null,function*(){if(G().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){let u=yield Promise.all(s);l.kernelMs=S.sum(u),l.getExtraProfileInfo=()=>u.map((c,p)=>({name:a[p],ms:c})).map(c=>`${c.name}: ${c.ms}`).join(", ")}else l.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,l})}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return G().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:S.now(),endMs:null}}endTimer(e){return G().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=S.now(),e)}getQueryTime(e){return j(this,null,function*(){if(G().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);let o=e;return o.endMs-o.startMs})}disposeData(e,o=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(o?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!o&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);let{complexTensorInfos:n}=this.texData.get(e);return n!=null&&(this.disposeData(n.real.dataId,o),this.disposeData(n.imag.dataId,o)),this.texData.delete(e),!0}releaseGPUData(e){let{texture:o,dtype:n,texShape:i,usage:s,isPacked:a,slice:l}=this.texData.get(e),u=l&&l.origDataId||e,c=this.dataRefCount.get(u);c>1?this.dataRefCount.set(u,c-1):(this.dataRefCount.delete(u),o!=null&&(this.numBytesInGPU-=this.computeBytes(i,n),this.textureManager.releaseTexture(o,i,s,a)));let p=this.texData.get(e);p.texture=null,p.texShape=null,p.isPacked=!1,p.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,o=sQ){return G().getBool("WEBGL_CPU_FORWARD")&&e.every(n=>this.texData.get(n.dataId).texture==null&&S.sizeFromShape(n.shape)<o)}getGPGPUContext(){return this.gpgpu}where(e){$.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");let o=e.dataSync();return rQ(e.shape,o)}packedUnaryOp(e,o,n){let i=new Lr(e.shape,o),s=this.compileAndRun(i,[e],n);return cr().makeTensorFromTensorInfo(s)}abs(e){if(this.shouldExecuteOnCPU([e])&&e.dtype!=="complex64"){let i=Xg(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,i)}if(G().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,Uv,e.dtype);let o=new Zt(e.shape,Uv),n=this.compileAndRun(o,[e]);return cr().makeTensorFromTensorInfo(n)}makeTensorInfo(e,o,n){let i;if(o==="string"&&n!=null&&n.length>0&&S.isString(n[0])){let s=n.map(a=>S.encodeString(a));i=this.write(s,e,o)}else i=this.write(n,e,o);return this.texData.get(i).usage=null,{dataId:i,shape:e,dtype:o}}makeOutput(e,o,n){return cr().makeTensorFromTensorInfo(this.makeTensorInfo(e,o,n),this)}unpackTensor(e){let o=new Jg(e.shape);return this.runWebGLProgram(o,[e],e.dtype)}packTensor(e){let o=new Qg(e.shape);return this.runWebGLProgram(o,[e],e.dtype,null,!0)}packedReshape(e,o){let n=[Xi(e.shape),...Yi(e.shape)],i={dtype:e.dtype,shape:n,dataId:e.dataId},s=[Xi(o),...Yi(o)],a=new Fc(s,n),l=!0,u=[n],c=this.runWebGLProgram(a,[i],e.dtype,u,l);return{dataId:c.dataId,shape:o,dtype:c.dtype}}decode(e,o){let n=this.texData.get(e),{isPacked:i,shape:s,dtype:a}=n;if(o!=null){let m=S.sizeFromShape(s),f=o[0]*o[1]*4;S.assert(m<=f,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}let l=ed(s),u;i?u=new Gg(l):u=new Ug(l);let c=!0,p=[o??Yp(l)],d=this.runWebGLProgram(u,[{shape:l,dtype:a,dataId:e}],a,p,c,o);return{dtype:a,shape:s,dataId:d.dataId}}runWebGLProgram(e,o,n,i,s=!1,a){let l=this.makeTensorInfo(e.outputShape,n),u=this.texData.get(l.dataId);if(e.packedOutput&&(u.isPacked=!0),e.outPackingScheme===ra.DENSE){let b=a??Yp(e.outputShape);u.texShape=b.map(I=>I*2)}if(e.outTexUsage!=null&&(u.usage=e.outTexUsage),S.sizeFromShape(l.shape)===0)return u.values=S.getTypedArrayFromDType(l.dtype,0),l;let c=[],p=o.map(b=>{if(b.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let I=this.texData.get(b.dataId);if(I.texture==null){if(!e.packedInputs&&S.sizeFromShape(b.shape)<=G().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:b.shape,texData:null,isUniform:!0,uniformValues:I.values};e.packedInputs&&(I.isPacked=!0,I.shape=b.shape)}if(this.uploadToGPU(b.dataId),!!I.isPacked!=!!e.packedInputs)b=I.isPacked?this.unpackTensor(b):this.packTensor(b),c.push(b),I=this.texData.get(b.dataId);else if(I.isPacked&&!na(I.shape,b.shape)){let N=b,F=b.shape;b.shape=I.shape,b=this.packedReshape(b,F),c.push(b),I=this.texData.get(b.dataId),N.shape=F}return{shape:b.shape,texData:I,isUniform:!1}});this.uploadToGPU(l.dataId);let d={shape:l.shape,texData:u,isUniform:!1},m=$$(e,p,d),f=this.getAndSaveBinary(m,()=>N$(this.gpgpu,e,p,d)),g=this.activeTimers!=null,x;g&&(x=this.startTimer()),G().get("ENGINE_COMPILE_ONLY")||R$(this.gpgpu,f,p,d,i),c.forEach(b=>this.disposeIntermediateTensorInfo(b)),g&&(x=this.endTimer(x),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(x)}));let y=G().getNumber("WEBGL_FLUSH_THRESHOLD");if(y>0){let b=S.now();b-this.lastGlFlushTime>y&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=b)}if(!G().getBool("WEBGL_LAZILY_UNPACK")&&u.isPacked&&s===!1){let b=this.unpackTensor(l);return this.disposeIntermediateTensorInfo(l),b}return l}compileAndRun(e,o,n,i,s=!1){return n=n||o[0].dtype,this.runWebGLProgram(e,o,n,i,s)}getAndSaveBinary(e,o){return e in this.binaryCache||(this.binaryCache[e]=o()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(G().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(o=>{this.gpgpu.deleteProgram(this.binaryCache[o].webGLProgram),delete this.binaryCache[o]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement<"u"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=Ne(()=>{if(!G().get("WEBGL_RENDER_FLOAT32_ENABLED")){let e=G().getBool("DEBUG");G().set("DEBUG",!1);let o=this.abs(Re(1e-8)).dataSync()[0];if(G().set("DEBUG",e),o>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?oQ:nQ}uploadToGPU(e){let o=this.texData.get(e),{shape:n,dtype:i,values:s,texture:a,usage:l,isPacked:u}=o;if(a!=null)return;let c=this.activeTimers!=null,p;c&&(p=S.now());let d=o.texShape;if(d==null&&(d=g$(n,u),o.texShape=d),s!=null){let m=ed(n),f,g=d[1],x=d[0],y=s instanceof Uint8Array||s instanceof Uint8ClampedArray;(u||!y)&&([g,x]=hn(d[0],d[1])),u?f=new qg(m,y):f=new td(m,y);let b=y?[x,g]:d,I=this.makeTensorInfo(b,i),N=this.texData.get(I.dataId);y?N.usage=fr.PIXELS:N.usage=fr.UPLOAD,N.texShape=b,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(I.dataId),g,x,s);let F=[[x,g]],z=this.runWebGLProgram(f,[I],i,F,!0),H=this.texData.get(z.dataId);o.texShape=H.texShape,o.isPacked=H.isPacked,o.usage=H.usage,G().get("ENGINE_COMPILE_ONLY")?this.disposeData(z.dataId):(o.texture=H.texture,o.values=null,this.texData.delete(z.dataId)),this.disposeIntermediateTensorInfo(I),c&&(this.uploadWaitMs+=S.now()-p)}else{let m=this.acquireTexture(d,l,i,u);o.texture=m}}convertAndCacheOnCPU(e,o){let n=this.texData.get(e),{dtype:i}=n;return o!=null&&(n.values=uQ(o,i)),n.values}acquireTexture(e,o,n,i){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){let s=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${s} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,o,i)}computeBytes(e,o){return e[0]*e[1]*S.bytesPerElement(o)}checkCompileCompletion(){for(let[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}checkCompileCompletionAsync(){return j(this,null,function*(){let e=[];if(this.gpgpu.parallelCompilationExtension){for(let[,o]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(o));return Promise.all(e)}else{for(let[,o]of Object.entries(this.binaryCache)){let n=new Promise(i=>{try{this.checkCompletion_(o),i(!0)}catch(s){throw s}});e.push(n)}return Promise.all(e)}})}checkCompletionAsync_(e){return j(this,null,function*(){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(yield r1(),this.checkCompletionAsync_(e))})}checkCompletion_(e){if(this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)===!1)throw console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)===!1?(Pv(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(let e of Object.values(this.binaryCache)){this.gpgpu.buildVao(e.webGLProgram);let{variablesLocations:o,customUniformLocations:n,infLoc:i,nanLoc:s,outShapeLocation:a,outShapeStridesLocation:l,outTexShapeLocation:u}=Ov(this.gpgpu,e.program,e.webGLProgram);e.variablesLocations=o,e.customUniformLocations=n,e.infLoc=i,e.nanLoc=s,e.outShapeLocation=a,e.outShapeStridesLocation=l,e.outTexShapeLocation=u}}createTensorFromGPUData(e,o,n){e.channels=e.channels||"RGBA";let{texture:i,height:s,width:a,channels:l}=e,u=cr().backend;if(!u.gpgpu.gl.isTexture(i))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");let c=u.writeTexture(i,o,n,s,a,l);return cr().makeTensorFromDataId(c,o,n,u)}}return r.nextDataId=0,r})();function uQ(r,t){if(t==="float32"||t==="complex64")return r;if(t==="int32"||t==="bool"){let e=t==="int32"?new Int32Array(r.length):new Uint8Array(r.length);for(let o=0;o<e.length;++o)e[o]=Math.round(r[o]);return e}else throw new Error(`Unknown dtype ${t}`)}Ni.isBrowser()&&Im("webgl",()=>new eA,2);var Oc=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`;var Mr=class{constructor(t,e,o){this.variableNames=["A","B"],this.outputShape=$.assertAndGetBroadcastShape(e,o),this.enableShapeUniforms=lt(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${t}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}};var no=`
  result.r = isNaN.r ? NAN : result.r;
  result.g = isNaN.g ? NAN : result.g;
  result.b = isNaN.b ? NAN : result.b;
  result.a = isNaN.a ? NAN : result.a;
`;var oo=class{constructor(t,e,o,n=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=$.assertAndGetBroadcastShape(e,o);let i=this.outputShape.length;this.enableShapeUniforms=lt(i);let s="";if(n)if(i===0||S.sizeFromShape(this.outputShape)===1)s=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(s=`
          ${Me(i)} coords = getOutputCoords();
        `,i===1)this.enableShapeUniforms?s+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:s+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{let l=Pt("coords",i);this.enableShapeUniforms?s+=`
            bool nextRowOutOfBounds =
              (${l[i-2]} + 1) >= outShape[${i} - 2];
            bool nextColOutOfBounds =
              (${l[i-1]} + 1) >= outShape[${i} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:s+=`
            bool nextRowOutOfBounds =
              (${l[i-2]} + 1) >= ${this.outputShape[i-2]};
            bool nextColOutOfBounds =
              (${l[i-1]} + 1) >= ${this.outputShape[i-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${t}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${s}

        setOutput(result);
      }
    `}};function At(r){let{inputs:t,backend:e}=r,{x:o}=t;return e.incRef(o.dataId),{dataId:o.dataId,shape:o.shape,dtype:o.dtype}}var tA={kernelName:In,backendName:"webgl",kernelFunc:At};function Br(r){let{inputs:t,backend:e}=r,{real:o,imag:n}=t,i=e.makeTensorInfo(o.shape,"complex64"),s=e.texData.get(i.dataId),a=At({inputs:{x:o},backend:e}),l=At({inputs:{x:n},backend:e});return s.complexTensorInfos={real:a,imag:l},i}var rA={kernelName:hs,backendName:"webgl",kernelFunc:Br};var Gv="return (a < 0.) ? b * a : a;",Hv=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function cQ(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{alpha:i}=o,s=e.makeTensorInfo([],"float32",S.createScalarValue(i,"float32")),a=G().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new oo(Hv,n.shape,s.shape):new Mr(Gv,n.shape,s.shape),l=e.runWebGLProgram(a,[n,s],"float32");return e.disposeIntermediateTensorInfo(s),l}var oA={kernelName:Bl,backendName:"webgl",kernelFunc:cQ};var Kv="return (a < 0.) ? b * a : a;",qv=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function pQ(r){let{inputs:t,backend:e}=r,{x:o,alpha:n}=t,i=G().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new oo(qv,o.shape,n.shape):new Mr(Kv,o.shape,n.shape);return e.runWebGLProgram(i,[o,n],"float32")}var nA={kernelName:lu,backendName:"webgl",kernelFunc:pQ};var No="if (isnan(x)) return x;";function Ie({opSnippet:r,packedOpSnippet:t,cpuKernelImpl:e,dtype:o}){return({inputs:n,backend:i})=>{let{x:s}=n,a=i,l=o||s.dtype;if(a.shouldExecuteOnCPU([s])&&e!=null){let p=a.texData.get(s.dataId),d=e(p.values,l);return a.makeTensorInfo(s.shape,l,d)}let u=G().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&t!=null,c;return u?c=new Lr(s.shape,t):c=new Zt(s.shape,r),a.runWebGLProgram(c,[s],l)}}function it({opSnippet:r,packedOpSnippet:t,checkOutOfBounds:e=!1,supportsComplex:o=!1,cpuKernelImpl:n,dtype:i}){return({inputs:s,backend:a})=>{let{a:l,b:u}=s,c=a;if(o&&l.dtype==="complex64"){let f=c.texData.get(l.dataId),g=c.texData.get(u.dataId),[x,y]=[[f.complexTensorInfos.real,g.complexTensorInfos.real],[f.complexTensorInfos.imag,g.complexTensorInfos.imag]].map(I=>{let[N,F]=I,B={dataId:N.dataId,dtype:N.dtype,shape:l.shape},z={dataId:F.dataId,dtype:F.dtype,shape:u.shape},H=new Mr(r,l.shape,u.shape);return c.runWebGLProgram(H,[B,z],It(N.dtype,F.dtype))}),b=Br({inputs:{real:x,imag:y},backend:c});return c.disposeIntermediateTensorInfo(x),c.disposeIntermediateTensorInfo(y),b}let p=i||It(l.dtype,u.dtype);if((l.dtype==="string"||u.dtype==="string"||c.shouldExecuteOnCPU([l,u]))&&n!=null){let f=c.texData.get(l.dataId).values,g=c.texData.get(u.dataId).values,x=l.dtype==="string"?$.fromUint8ToStringArray(f):f,y=l.dtype==="string"?$.fromUint8ToStringArray(g):g,[b,I]=n(l.shape,u.shape,x,y,p),N=c.makeTensorInfo(I,p),F=c.texData.get(N.dataId);return F.values=b,N}let d=G().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&t!=null,m;return d?m=new oo(t,l.shape,u.shape,e):m=new Mr(r,l.shape,u.shape),c.runWebGLProgram(m,[l,u],p)}}function Gn(r,t=!1){if(r==="linear")return t?XP:UP;if(r==="relu")return t?QP:HP;if(r==="elu")return t?YP:GP;if(r==="relu6")return t?ZP:KP;if(r==="prelu")return t?qv:Kv;if(r==="leakyrelu")return t?Hv:Gv;if(r==="sigmoid")return t?JP:qP;throw new Error(`Activation ${r} has not been implemented for the WebGL backend.`)}var Lc=class{constructor(t,e,o,n=!1,i=!1,s=!1,a=null,l=!1,u=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=o,this.enableShapeUniforms=lt(this.outputShape.length);let c=n?t[1]:t[2],p=Math.ceil(c/2),d=n?"i * 2, rc.y":"rc.y, i * 2",m=i?"rc.z, i * 2":"i * 2, rc.z",f=n?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],g=i?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"],x="",y="";a&&(l?x=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${a}
        }`:u?x=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${a}
        }`:x=`vec4 activation(vec4 x) {
          ${a}
        }`,y="result = activation(result);");let b=s?"result += getBiasAtOutCoords();":"";s&&this.variableNames.push("bias"),l&&this.variableNames.push("preluActivationWeights"),u&&this.variableNames.push("leakyreluAlpha");let I="rc.x",N="rc.x";t[0]<e[0]?I=`imod(rc.x, ${t[0]})`:e[0]<t[0]&&(N=`imod(rc.x, ${e[0]})`),this.userCode=`
      ${x}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${p}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        int batchA = ${I};
        int batchB = ${N};
        for (int i = 0; i < ${p}; i++) {
          vec4 a = getMatrixA(batchA, ${d});
          vec4 b = getMatrixB(batchB, ${m});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${f[0]} * ${g[0]});
          result += (${f[1]} * ${g[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${b}

        ${y}

        setOutput(result);
      }
    `}};var jv={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"},od=class{constructor(t,e,o){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=$.assertAndGetBroadcastShape(e,o),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${t}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}};var iA="return a * b;";function nd(r){let{inputs:t,backend:e}=r,{a:o,b:n}=t,i=$.upcastType(o.dtype,n.dtype);if(o.dtype==="complex64"){let a=e.texData.get(o.dataId),l=e.texData.get(n.dataId),u=new od(jv.REAL,o.shape,n.shape),c=new od(jv.IMAG,o.shape,n.shape),p=[{dataId:a.complexTensorInfos.real.dataId,dtype:a.complexTensorInfos.real.dtype,shape:o.shape},{dataId:a.complexTensorInfos.imag.dataId,dtype:a.complexTensorInfos.imag.dtype,shape:o.shape},{dataId:l.complexTensorInfos.real.dataId,dtype:l.complexTensorInfos.real.dtype,shape:n.shape},{dataId:l.complexTensorInfos.imag.dataId,dtype:l.complexTensorInfos.imag.dtype,shape:n.shape}],d=e.runWebGLProgram(u,p,"float32"),m=e.runWebGLProgram(c,p,"float32"),f=Br({inputs:{real:d,imag:m},backend:e});return e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(m),f}if(e.shouldExecuteOnCPU([o,n])){let a=e.texData.get(o.dataId),l=e.texData.get(n.dataId),[u,c]=hP(o.shape,n.shape,a.values,l.values,i),p=e.makeTensorInfo(c,i),d=e.texData.get(p.dataId);return d.values=u,p}let s;return G().getBool("WEBGL_PACK_BINARY_OPERATIONS")?s=new oo(iA,o.shape,n.shape):s=new Mr(iA,o.shape,n.shape),e.runWebGLProgram(s,[o,n],i)}var sA={kernelName:yi,backendName:"webgl",kernelFunc:nd};function aA(r,t,e){let o=[Xi(r.shape),...Yi(r.shape)],n={dtype:r.dtype,shape:o,dataId:r.dataId},i=[Xi(t),...Yi(t)],s=new Fc(i,o),a=!0,l=[o],u=e.runWebGLProgram(s,[n],r.dtype,l,a);return{dataId:u.dataId,shape:t,dtype:u.dtype}}function le(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{shape:i}=o,s=e,a=S.sizeFromShape(n.shape),l=S.inferFromImplicitShape(i,a),u=S.sizeFromShape(l);S.assert(a===u,()=>`The new shape (${l}) has ${u} elements and the old shape (${n.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`);let c=s.texData.get(n.dataId);return c.isPacked&&!na(n.shape,l)&&!(c.texture!==null&&na(c.shape,l))?aA(n,l,s):(s.incRef(n.dataId),{dataId:n.dataId,shape:l,dtype:n.dtype})}var lA={kernelName:du,backendName:"webgl",kernelFunc:le};var id=class{constructor(t,e){this.variableNames=["x"];let{windowSize:o,batchSize:n,inSize:i,outSize:s}=t;this.outputShape=[n,s];let a=Math.floor(o/4)*4,l=o%4,u="sumValue += dot(values, ones);";if(e!=null){let p=1/e;u=`sumValue += dot(values * ${S.isInt(p)?p.toPrecision(2):p}, ones);`}let c="";i%o>0&&(c=`
        if (inIdx < 0 || inIdx >= ${i}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${c}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${o};

        float sumValue = 0.0;

        for (int i = 0; i < ${a}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${u}
        }

        int inIdx = inOffset + ${a};
        if (${l===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${u}
        } else if (${l===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${u}
        } else if (${l===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${u}
        }
        setOutput(sumValue);
      }
    `}};var t0=class{constructor(t,e){this.variableNames=["x"];let{windowSize:o,batchSize:n,inSize:i,outSize:s}=t;this.outputShape=[n,s];let a="0.0",l="";e==="prod"?a="1.0":e==="min"?(a="1.0 / 1e-20",l="min"):e==="max"&&(a="-1.0 / 1e-20",l="max");let u=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;e==="sum"?u="sumValue":e==="prod"?u="prodValue":e==="all"?u="allValue":e==="any"&&(u="anyValue");let c=Math.floor(o/4)*4,p=o%4,d=`
      if (${e==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${e==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${l}(values, minMaxValue);
        if (${e==="min"} || ${e==="max"}) {
          minMaxValue = ${l}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,m="vec4";e==="all"?(a="1.0",d=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,m="bvec4"):e==="any"&&(a="0.0",d=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,m="bvec4");let f="";i%o>0&&(f=`
        if (inIdx < 0 || inIdx >= ${i}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${a};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${f}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${o};

        vec4 minMaxValue = vec4(${a});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${c}; i += 4) {
          int inIdx = inOffset + i;
          ${m} values = ${m}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${d}
        }

        int inIdx = inOffset + ${c};
        if (${p===1}) {
          ${m} values = ${m}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${d}
        } else if (${p===2}) {
          ${m} values = ${m}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${d}
        } else if (${p===3}) {
          ${m} values = ${m}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${d}
        }
        setOutput(${u});
      }
    `}};function mQ(r){let t=[];for(;t.length===0||t[t.length-1].outSize!==1;){let e=t.length?t[t.length-1].outSize:r[1],o=$.computeOptimalWindowSize(e);t.push({inSize:e,windowSize:o,outSize:Math.ceil(e/o)})}return t}function io(r,t,e,o){let n=mQ(r.shape),i=r;for(let s=0;s<n.length;s++){let{inSize:a,windowSize:l,outSize:u}=n[s],c,p;e==="mean"?c=s===0?new id({windowSize:l,inSize:a,batchSize:r.shape[0],outSize:u},a):new id({windowSize:l,inSize:a,batchSize:r.shape[0],outSize:u}):c=new t0({windowSize:l,inSize:a,batchSize:r.shape[0],outSize:u},e),p=i,i=o.runWebGLProgram(c,[i],t),p.dataId!==r.dataId&&o.disposeIntermediateTensorInfo(p)}return i}var r0=class{constructor(t,e){this.variableNames=["A"];let o=new Array(t.length);for(let s=0;s<o.length;s++)o[s]=t[e[s]];this.outputShape=o,this.rank=o.length;let n=Me(this.rank),i=fQ(e);this.userCode=`
    void main() {
      ${n} resRC = getOutputCoords();
      setOutput(getA(${i}));
    }
    `}};function fQ(r){let t=r.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);let e=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],o=new Array(t);for(let n=0;n<r.length;n++)o[r[n]]=e[n];return o.join()}var o0=class{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;let o=new Array(t.length);for(let c=0;c<o.length;c++)o[c]=t[e[c]];if(this.outputShape=o,this.rank=o.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);let n=Me(this.rank),i=zv("rc",this.rank),s=new Array(this.rank);for(let c=0;c<e.length;c++)s[e[c]]=i[c];let a=`vec2(${s.slice(-2).join()})`,l=`++${i[this.rank-1]} < ${o[this.rank-1]}`,u=`getChannel(getA(${s.join()}), ${a})`;this.userCode=`
    void main() {
      ${n} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${u};
      if(${l}) {
        result[1] = ${u};
      }
      --${i[this.rank-1]};
      if(++${i[this.rank-2]} < ${o[this.rank-2]}) {
        result[2] = ${u};
        if(${l}) {
          result[3] = ${u};
        }
      }
      setOutput(result);
    }
    `}};function Qi(r,t,e){let o=G().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new o0(r.shape,t):new r0(r.shape,t);return e.runWebGLProgram(o,[r],r.dtype)}function uA(r,t,e,o){let n=t,i=r.shape.length,s=S.parseAxisParam(n,r.shape),a=s,l=$.getAxesPermutation(a,i),u=l!=null,c=r;u&&(c=Qi(r,l,o),a=$.getInnerMostAxes(a.length,i)),$.assertAxesAreInnerMostDims("sum",a,i);let[p,d]=$.computeOutAndReduceShapes(c.shape,a),m=p;e&&(m=$.expandShapeToKeepDim(p,s));let f=S.sizeFromShape(d),x=S.sizeFromShape(r.shape)/f,y=le({inputs:{x:c},attrs:{shape:[x,f]},backend:o}),b=Nn(r.dtype),I=io(y,b,"sum",o),N=le({inputs:{x:I},attrs:{shape:m},backend:o});return o.disposeIntermediateTensorInfo(y),o.disposeIntermediateTensorInfo(I),u&&o.disposeIntermediateTensorInfo(c),N}function la(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{axis:i,keepDims:s}=o;return uA(n,i,s,e)}var cA={kernelName:Tu,backendName:"webgl",kernelFunc:la};function yt(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{perm:i}=o,s=e,a=n.shape.length,l=new Array(a);for(let c=0;c<l.length;c++)l[c]=n.shape[i[c]];let u;if(s.shouldExecuteOnCPU([n])){let p=s.texData.get(n.dataId).values,d=aa(p,n.shape,n.dtype,i,l);u=s.makeTensorInfo(l,n.dtype);let m=s.texData.get(u.dataId);m.values=d}else u=Qi(n,i,s);return u}var pA={kernelName:Ii,backendName:"webgl",kernelFunc:yt};var Xv=1e3;function ua({a:r,b:t,transposeA:e,transposeB:o,backend:n,bias:i=null,preluActivationWeights:s=null,leakyreluAlpha:a=0,activation:l=null}){let u=r.shape.length,c=t.shape.length,p=e?r.shape[u-2]:r.shape[u-1],d=o?t.shape[c-1]:t.shape[c-2],m=e?r.shape[u-1]:r.shape[u-2],f=o?t.shape[c-2]:t.shape[c-1],g=r.shape.slice(0,-2),x=t.shape.slice(0,-2),y=S.sizeFromShape(g),b=S.sizeFromShape(x),N=un.assertAndGetBroadcastShape(r.shape.slice(0,-2),t.shape.slice(0,-2)).concat([m,f]);S.assert(p===d,()=>`Error in matMul: inner shapes (${p}) and (${d}) of Tensors with shapes ${r.shape} and ${t.shape} and transposeA=${e} and transposeB=${o} must match.`);let F=e?[y,p,m]:[y,m,p],B=o?[b,f,d]:[b,d,f],z=le({inputs:{x:r},backend:n,attrs:{shape:F}}),H=le({inputs:{x:t},backend:n,attrs:{shape:B}}),K=[z,H],X=Math.max(y,b),te=e?z.shape[1]:z.shape[2],ue=i!=null,pe=s!=null,xe=l==="leakyrelu",be=l!=null?Gn(l,!0):null,Te=ue||pe||xe||be!=null,qe;if((m===1||f===1)&&te>Xv&&Te===!1){let st=z,qt=H;e&&(st=yt({inputs:{x:z},backend:n,attrs:{perm:[0,2,1]}}),K.push(st)),o&&(qt=yt({inputs:{x:H},backend:n,attrs:{perm:[0,2,1]}}),K.push(qt));let Jt=f!==1,jo=f===1,yn=st;Jt&&(yn=le({inputs:{x:st},backend:n,attrs:{shape:[X,te,1]}}),K.push(yn));let da=f===1?2:1,ma=qt;jo&&(ma=le({inputs:{x:qt},backend:n,attrs:{shape:[X,1,te]}}),K.push(ma));let Hc=nd({inputs:{a:yn,b:ma},backend:n});qe=la({inputs:{x:Hc},backend:n,attrs:{axis:da,keepDims:!0}}),K.push(Hc)}else{let st=It(r.dtype,t.dtype),qt=new Lc(F,B,[X,m,f],e,o,ue,be,pe,xe),Jt=[z,H];if(i!=null&&Jt.push(i),pe&&Jt.push(s),xe){let jo=n.makeTensorInfo([],"float32",S.createScalarValue(a,"float32"));Jt.push(jo),K.push(jo)}qe=n.runWebGLProgram(qt,Jt,st)}let je=le({inputs:{x:qe},backend:n,attrs:{shape:N}});K.push(qe);for(let st of K)n.disposeIntermediateTensorInfo(st);return je}function hQ(r){let{inputs:t,backend:e,attrs:o}=r,{a:n,b:i,bias:s,preluActivationWeights:a}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:p}=o;return ua({a:n,b:i,transposeA:l,transposeB:u,backend:e,bias:s,preluActivationWeights:a,leakyreluAlpha:p,activation:c})}var dA={kernelName:Ss,backendName:"webgl",kernelFunc:hQ};var mA="return abs(x);";function gQ(r){let{inputs:t,backend:e}=r,{x:o}=t;if(e.shouldExecuteOnCPU([o])&&o.dtype!=="complex64"){let i=e.texData.get(o.dataId),s=Xg(i.values);return e.makeTensorInfo(o.shape,o.dtype,s)}let n;return G().getBool("WEBGL_PACK_UNARY_OPERATIONS")?n=new Lr(o.shape,mA):n=new Zt(o.shape,mA),e.runWebGLProgram(n,[o],o.dtype)}var fA={kernelName:fs,backendName:"webgl",kernelFunc:gQ};var xQ=Vt+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,yQ=Ie({opSnippet:xQ}),hA={kernelName:Ma,backendName:"webgl",kernelFunc:yQ};var vQ=Vt+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,bQ=Ie({opSnippet:vQ}),gA={kernelName:Ba,backendName:"webgl",kernelFunc:bQ};var xA="return a + b;",SQ=it({opSnippet:xA,packedOpSnippet:xA,supportsComplex:!0,cpuKernelImpl:j$}),yA={kernelName:rn,backendName:"webgl",kernelFunc:SQ};var n0=class{constructor(t,e){this.outputShape=[],this.outputShape=t,this.variableNames=e.map((i,s)=>`T${s}`);let o=[];this.variableNames.forEach(i=>{o.push(`float v${i} = get${i}AtOutCoords();`)});let n=this.variableNames.map(i=>`v${i}`).join(" + ");this.userCode=`
      void main() {
        ${o.join(`
        `)}

        float result = ${n};
        setOutput(result);
      }
    `}};var i0=class{constructor(t,e){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.variableNames=e.map((i,s)=>`T${s}`);let o=[];this.variableNames.forEach(i=>{o.push(`vec4 v${i} = get${i}AtOutCoords();`)});let n=this.variableNames.map(i=>`v${i}`).join(" + ");this.userCode=`
      void main() {
        ${o.join(`
        `)}

        vec4 result = ${n};
        setOutput(result);
      }
    `}};function s0(r){let{inputs:t,backend:e}=r,o=t;if(o.length===1)return At({inputs:{x:o[0]},backend:e});if(o.length>G().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){let l=Math.floor(o.length/2),u=s0({inputs:o.slice(0,l),backend:e}),c=s0({inputs:o.slice(l),backend:e});return s0({inputs:[u,c],backend:e})}let n=o.map(l=>l.dtype).reduce((l,u)=>It(l,u)),i=o.map(l=>l.shape),a=G().getBool("WEBGL_PACK")?new i0(o[0].shape,i):new n0(o[0].shape,i);return e.runWebGLProgram(a,o,n)}var vA={kernelName:Va,backendName:"webgl",kernelFunc:s0};function wQ(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{axis:i,keepDims:s}=o,a=n.shape.length,l=S.parseAxisParam(i,n.shape),u=l,c=$.getAxesPermutation(u,a),p=n;c!=null&&(p=yt({inputs:{x:n},backend:e,attrs:{perm:c}}),u=$.getInnerMostAxes(u.length,a)),$.assertAxesAreInnerMostDims("all",u,a);let[d,m]=$.computeOutAndReduceShapes(p.shape,u),f=S.sizeFromShape(m),g=le({inputs:{x:p},backend:e,attrs:{shape:[-1,f]}}),x=io(g,g.dtype,"all",e),y;if(s){let b=$.expandShapeToKeepDim(d,l);y=le({inputs:{x},backend:e,attrs:{shape:b}})}else y=le({inputs:{x},backend:e,attrs:{shape:d}});return e.disposeIntermediateTensorInfo(g),e.disposeIntermediateTensorInfo(x),c!=null&&e.disposeIntermediateTensorInfo(p),y}var bA={kernelName:Wa,backendName:"webgl",kernelFunc:wQ};function CQ(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{axis:i,keepDims:s}=o,a=n.shape.length,l=S.parseAxisParam(i,n.shape),u=l,c=$.getAxesPermutation(u,a),p=n;c!=null&&(p=yt({inputs:{x:n},backend:e,attrs:{perm:c}}),u=$.getInnerMostAxes(u.length,a)),$.assertAxesAreInnerMostDims("any",u,a);let[d,m]=$.computeOutAndReduceShapes(p.shape,u),f=S.sizeFromShape(m),g=le({inputs:{x:p},backend:e,attrs:{shape:[-1,f]}}),x=io(g,g.dtype,"any",e),y;if(s){let b=$.expandShapeToKeepDim(d,l);y=le({inputs:{x},backend:e,attrs:{shape:b}})}else y=le({inputs:{x},backend:e,attrs:{shape:d}});return e.disposeIntermediateTensorInfo(g),e.disposeIntermediateTensorInfo(x),c!=null&&e.disposeIntermediateTensorInfo(p),y}var SA={kernelName:za,backendName:"webgl",kernelFunc:CQ};var a0=class{constructor(t,e,o){this.variableNames=["A"];let{windowSize:n,batchSize:i,outSize:s}=t;o||this.variableNames.push("bestIndicesA"),this.outputShape=[i,s];let a=e==="max"?">":"<",l=o?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${n}; i++) {
          int inIdx = ${l};
          float candidate = getA(batch, inIdx);
          if (candidate ${a} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}};var l0=class{constructor(t,e,o,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,S.assert(t.length>2,()=>`Packed arg${o.charAt(0).toUpperCase()+o.slice(1)} supports only inputs with rank above 2.`);let i=t[t.length-1],s=Math.ceil(i/e);this.outputShape=t.slice(0,-1),s>1&&this.outputShape.push(s),n||this.variableNames.push("bestIndicesA");let a=this.outputShape,l=a.length,u=Me(l),c=Pt("coords",l),p,d;if(s===1){d=l+1;let H=Me(d);p=`
        ${H} sourceLocR = ${H}(${c.join()}, 0);
        ++${c[l-1]};
        ${H} sourceLocG = ${H}(${c.join()}, 0);
        ++${c[l-2]};
        ${H} sourceLocA = ${H}(${c.join()}, 0);
        --${c[l-1]};
        ${H} sourceLocB = ${H}(${c.join()}, 0);
        --${c[l-2]};`}else d=l,p=`
        ${u} sourceLocR = coords;
        ++${c[l-1]};
        ${u} sourceLocG = coords;
        ++${c[l-2]};
        ${u} sourceLocA = coords;
        --${c[l-1]};
        ${u} sourceLocB = coords;
        --${c[l-2]};`;let m=["x","y","z","w","u","v"].slice(0,d),f="."+m[d-1],g=m.map(H=>"int "+H),x=Pt("sourceLocR",d-1).concat("inIdx.r"),y=Pt("sourceLocG",d-1).concat("inIdx.g"),b=Pt("sourceLocB",d-1).concat("inIdx.b"),I=Pt("sourceLocA",d-1).concat("inIdx.a"),N=o==="max"?"greaterThan":"lessThan",F=n?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${x.join()}),
                             getBestIndicesAChannel(${y.join()}),
                             getBestIndicesAChannel(${b.join()}),
                             getBestIndicesAChannel(${I.join()})));`,B=`vec4(
            getAChannel(${x.join()}),
            hasNextCol ? getAChannel(${y.join()}) : 0.,
            hasNextRow ? getAChannel(${b.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${I.join()}) : 0.)`,z=n?"":`
      float getBestIndicesAChannel(${g.join()}) {
        return getChannel(getBestIndicesA(${m.join()}),
                                          vec2(${m.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${g.join()}) {
        return getChannel(getA(${m.join()}),
                               vec2(${m.slice(-2).join()}));
      }
      ${z}
      void main() {
        ${u} coords = getOutputCoords();
        bool hasNextCol = ${c[l-1]} < ${a[l-1]-1};
        bool hasNextRow = ${c[l-2]} < ${a[l-2]-1};
        ${p}
        ivec4 srcIdx = ivec4(sourceLocR${f}, sourceLocG${f},
          sourceLocB${f}, sourceLocA${f}) * ${e};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${B};

        for (int i = 0; i < ${e}; i++) {
          inIdx = srcIdx;
          ${F}
          vec4 candidate = ${B};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${N}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}};function wA(r,t,e,o=null){let n=t.shape[0],i=t.shape[1];o!=null&&(n=o.shape[0],i=o.shape[1]);let s=$.computeOptimalWindowSize(i),a={windowSize:s,inSize:i,batchSize:n,outSize:Math.ceil(i/s)},l=new a0(a,e,o==null),u=[t];o!=null&&u.push(o);let c=r.runWebGLProgram(l,u,"int32");if(c.shape[1]===1)return c;let p=wA(r,t,e,c);return r.disposeIntermediateTensorInfo(c),p}function CA(r,t,e,o=null){let n=o!=null?o.shape:t.shape,i=n[n.length-1],s=$.computeOptimalWindowSize(i),a=new l0(n,s,e,o==null),l=o==null?[t]:[t,o],u=r.runWebGLProgram(a,l,"int32");if(u.shape.length===t.shape.length){let c=CA(r,t,e,u);return r.disposeIntermediateTensorInfo(u),c}return u}function u0(r,t,e,o){let n=[e];if($.assertAxesAreInnerMostDims("arg"+o.charAt(0).toUpperCase()+o.slice(1),n,t.shape.length),!G().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){let i=[],s=r.texData.get(t.dataId),a=s!==null&&s.isPacked,l=t;a&&(l=r.unpackTensor(t),i.push(l));let[u,c]=$.computeOutAndReduceShapes(l.shape,n),p=S.sizeFromShape(c),d=le({inputs:{x:l},backend:r,attrs:{shape:[-1,p]}});i.push(d);let m=wA(r,d,o);i.push(m);let f=le({inputs:{x:m},backend:r,attrs:{shape:u}});return i.forEach(g=>r.disposeIntermediateTensorInfo(g)),f}return CA(r,t,o)}function _Q(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{axis:i}=o,s=S.parseAxisParam(i,n.shape),a=$.getAxesPermutation(s,n.shape.length),l=n,u=[];a!=null&&(l=yt({inputs:{x:n},backend:e,attrs:{perm:a}}),u.push(l),s=$.getInnerMostAxes(s.length,l.shape.length)),$.assertAxesAreInnerMostDims("argMax",[s[0]],l.shape.length);let c=u0(e,l,s[0],"max");return u.forEach(p=>e.disposeIntermediateTensorInfo(p)),c}var _A={kernelName:Ua,backendName:"webgl",kernelFunc:_Q};function kQ(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{axis:i}=o,s=S.parseAxisParam(i,n.shape),a=$.getAxesPermutation(s,n.shape.length),l=n,u=[];a!=null&&(l=yt({inputs:{x:n},backend:e,attrs:{perm:a}}),u.push(l),s=$.getInnerMostAxes(s.length,l.shape.length)),$.assertAxesAreInnerMostDims("argMin",[s[0]],l.shape.length);let c=u0(e,l,s[0],"min");return u.forEach(p=>e.disposeIntermediateTensorInfo(p)),c}var kA={kernelName:Ga,backendName:"webgl",kernelFunc:kQ};var IQ=Vt+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,TQ=Ie({opSnippet:IQ}),IA={kernelName:Ha,backendName:"webgl",kernelFunc:TQ};var EQ=Vt+"return log(x + sqrt(x * x + 1.0));",NQ=Ie({opSnippet:EQ}),TA={kernelName:Ka,backendName:"webgl",kernelFunc:NQ};var RQ=Vt+`
  return atan(x);
`,$Q=Ie({opSnippet:RQ}),EA={kernelName:qa,backendName:"webgl",kernelFunc:$Q};var PQ=Oc+`
  return atan(a, b);
`,AQ=`
  vec4 result = atan(a, b);
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+no+`
  return result;
`,DQ=it({opSnippet:PQ,packedOpSnippet:AQ}),NA={kernelName:Xa,backendName:"webgl",kernelFunc:DQ};var FQ=Vt+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,OQ=Ie({opSnippet:FQ}),RA={kernelName:ja,backendName:"webgl",kernelFunc:OQ};var Ko=class{constructor(t,e,o,n=!1,i=!1){if(this.variableNames=["x"],e==="avg"&&o)throw new Error("Cannot compute positions for average pool.");let s=t.filterWidth,a=t.strideHeight,l=t.strideWidth,u=t.dilationHeight,c=t.dilationWidth,p=t.effectiveFilterHeight,d=t.effectiveFilterWidth,m=t.padInfo.top,f=t.padInfo.left;this.outputShape=t.outShape;let g=e==="avg",x=`((batch  * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + d`,y=`(xR * ${t.inWidth} + xC) * ${t.inChannels} + d`,b="0.0";if(g||(b="-1.0 / 1e-20"),o){let H=">=";this.userCode=`
        const ivec2 strides = ivec2(${a}, ${l});
        const ivec2 pads = ivec2(${m}, ${f});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${p};
              wR += ${u}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${d};
                wC += ${c}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${H} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${n?i?x:y:`wR * ${d} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let I="max",N=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;e==="avg"&&(N="avgValue / max(count, 1.0)");let F=Math.floor(s/4)*4,B=s%4,z=`
      if (${g}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${I}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${a}, ${l});
      const ivec2 pads = ivec2(${m}, ${f});
      const float initializationValue = ${b};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${t.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${b});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${p};
            wR += ${u}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${t.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${F}; wC += 4) {
            int xC = xCCorner + wC * ${c};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              getValue(batch, xR, xC + 2 * ${c}, d),
              getValue(batch, xR, xC + 3 * ${c}, d)
            );

            ${z}
          }

          int xC = xCCorner + ${F};
          if (${B===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${z}
          } else if (${B===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              initializationValue,
              initializationValue
            );

            ${z}
          } else if (${B===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              getValue(batch, xR, xC + 2 * ${c}, d),
              initializationValue
            );

            ${z}
          }
        }
        setOutput(${N});
      }
    `}},Zi=class{constructor(t,e,o,n=!1,i=!1){if(this.variableNames=["x"],e==="avg"&&o)throw new Error("Cannot compute positions for average pool.");let s=t.filterWidth,a=t.strideDepth,l=t.strideHeight,u=t.strideWidth,c=t.dilationDepth,p=t.dilationHeight,d=t.dilationWidth,m=t.effectiveFilterDepth,f=t.effectiveFilterHeight,g=t.effectiveFilterWidth,x=t.padInfo.front,y=t.padInfo.top,b=t.padInfo.left;this.outputShape=t.outShape;let I=e==="avg",N="0.0";if(I||(N="-1.0 / 1e-20"),o){let X=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${a}, ${l}, ${u});
        const ivec3 pads = ivec3(${x}, ${y}, ${b});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${m};
              wD += ${c}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${t.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${f};
                wR += ${p}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${t.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${g};
                  wC += ${d}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${t.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${X} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${n?i?`(((batch * ${t.inDepth} + xD) * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`((xD * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`wD * ${f} * ${g} +
                      wR * ${g} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let F="max",B=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;e==="avg"&&(B="avgValue / max(count, 1.0)");let z=Math.floor(s/4)*4,H=s%4,K=`
      if (${I}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${F}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${a}, ${l}, ${u});
      const ivec3 pads = ivec3(${x}, ${y}, ${b});
      const float initializationValue = ${N};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${t.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${N});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${m};
            wD += ${c}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${t.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${f};
            wR += ${p}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${z}; wC += 4) {
              int xC = xCCorner + wC * ${d};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                getValue(batch, xD, xR, xC + 2 * ${d}, ch),
                getValue(batch, xD, xR, xC + 3 * ${d}, ch)
              );

              ${K}
            }

            int xC = xCCorner + ${z};
            if (${H===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${K}
            } else if (${H===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                initializationValue,
                initializationValue
              );

              ${K}
            } else if (${H===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                getValue(batch, xD, xR, xC + 2 * ${d}, ch),
                initializationValue
              );

              ${K}
            }
          }
        }
        setOutput(${B});
      }
    `}};function LQ(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t;gn(n,"avgPool");let{filterSize:i,strides:s,pad:a,dimRoundingMode:l}=o,u=1;S.assert($.eitherStridesOrDilationsAreOne(s,u),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${s} and dilations '${u}'`);let c=$.computePool2DInfo(n.shape,i,s,u,a,l);if(c.filterWidth===1&&c.filterHeight===1&&S.arraysEqual(c.inShape,c.outShape))return At({inputs:{x:n},backend:e});let p=new Ko(c,"avg",!1);return e.runWebGLProgram(p,[n],"float32")}var $A={kernelName:Ya,backendName:"webgl",kernelFunc:LQ};function MQ(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{filterSize:i,strides:s,pad:a,dimRoundingMode:l,dataFormat:u}=o,c=[1,1,1],p=$.computePool3DInfo(n.shape,i,s,c,a,l,u),d=new Zi(p,"avg",!1);return e.runWebGLProgram(d,[n],"float32")}var PA={kernelName:Qa,backendName:"webgl",kernelFunc:MQ};var c0=class{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;let e=t.filterHeight,o=t.filterWidth,n=t.strideHeight,i=t.strideWidth,s=t.dilationHeight,a=t.dilationWidth,l=t.effectiveFilterHeight,u=t.effectiveFilterWidth,c=l-1-t.padInfo.top,p=u-1-t.padInfo.left,d=1/(e*o);this.userCode=`
      const ivec2 pads = ivec2(${c}, ${p});
      const float avgMultiplier = float(${d});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${l};
            wR += ${s}) {
          float dyR = float(dyRCorner + wR) / ${n}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${u};
            wC+= ${a}) {
            float dyC = float(dyCCorner + wC) / ${i}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}},p0=class{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;let e=t.filterDepth,o=t.filterHeight,n=t.filterWidth,i=t.strideDepth,s=t.strideHeight,a=t.strideWidth,l=t.dilationDepth,u=t.dilationHeight,c=t.dilationWidth,p=t.effectiveFilterDepth,d=t.effectiveFilterHeight,m=t.effectiveFilterWidth,f=p-1-t.padInfo.front,g=d-1-t.padInfo.top,x=m-1-t.padInfo.left,y=1/(e*o*n);this.userCode=`
      const ivec3 pads = ivec3(${f}, ${g}, ${x});
      const float avgMultiplier = float(${y});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${p};
            wD += ${l}) {
          float dyD = float(dyDCorner + wD) / ${i}.0;

          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${d};
              wR += ${u}) {
            float dyR = float(dyRCorner + wR) / ${s}.0;

            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${m};
                wC += ${c}) {
              float dyC = float(dyCCorner + wC) / ${a}.0;

              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function BQ(r){let{inputs:t,backend:e,attrs:o}=r,{dy:n,input:i}=t,s=i,{filterSize:a,strides:l,pad:u,dimRoundingMode:c}=o,p=[1,1,1],d=$.computePool3DInfo(s.shape,a,l,p,u,c),m=new p0(d);return e.runWebGLProgram(m,[n],s.dtype)}var AA={kernelName:Qd,backendName:"webgl",kernelFunc:BQ};function VQ(r){let{inputs:t,backend:e,attrs:o}=r,{dy:n,input:i}=t,s=i;gn([n,i],"avgPoolGrad");let{filterSize:a,strides:l,pad:u}=o,c=$.computePool2DInfo(s.shape,a,l,1,u),p=new c0(c);return e.runWebGLProgram(p,[n],s.dtype)}var DA={kernelName:Yd,backendName:"webgl",kernelFunc:VQ};function WQ(r){let{inputs:t,backend:e,attrs:o}=r,{a:n,b:i}=t,{transposeA:s,transposeB:a}=o;return ua({a:n,b:i,transposeA:s,transposeB:a,backend:e})}var FA={kernelName:Za,backendName:"webgl",kernelFunc:WQ};var d0=class{constructor(t,e,o,n,i,s){this.outputShape=[],this.variableNames=["x","mean","variance"],$.assertAndGetBroadcastShape(t,e),$.assertAndGetBroadcastShape(t,o);let a="0.0";n!=null&&($.assertAndGetBroadcastShape(t,n),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let l="1.0";i!=null&&($.assertAndGetBroadcastShape(t,i),this.variableNames.push("scale"),l="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${a};
        float scale = ${l};
        float inv = scale * inversesqrt(variance + float(${s}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}};var m0=class{constructor(t,e,o,n,i,s){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],$.assertAndGetBroadcastShape(t,e),$.assertAndGetBroadcastShape(t,o);let a="vec4(0.0)";n!=null&&($.assertAndGetBroadcastShape(t,n),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let l="vec4(1.0)";i!=null&&($.assertAndGetBroadcastShape(t,i),this.variableNames.push("scale"),l="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`
      void main() {
        vec4 offset = ${a};
        vec4 scale = ${l};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${s}));

        setOutput((x - mean) * inv + offset);
      }
    `}};var zQ=({inputs:r,backend:t,attrs:e})=>{let{x:o,mean:n,variance:i,offset:s,scale:a}=r;S.assert(n.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),S.assert(s==null||n.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),S.assert(a==null||n.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:l}=e;l==null&&(l=.001);let u=[o,n,i],c=null;s!=null&&(c=s.shape,u.push(s));let p=null;a!=null&&(p=a.shape,u.push(a));let d=G().getBool("WEBGL_PACK_NORMALIZATION")?new m0(o.shape,n.shape,i.shape,c,p,l):new d0(o.shape,n.shape,i.shape,c,p,l);return t.runWebGLProgram(d,u,u[0].dtype)},OA={kernelName:$l,backendName:"webgl",kernelFunc:zQ};var f0=class{constructor(t){this.variableNames=["source"],this.outputShape=t,this.rank=t.length;let e=Me(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let o=UQ(this.rank),n,i=t.map((s,a)=>`sourceLoc.${Yv[a]} = start[${a}] + coords.${Yv[a]};`);n=`
        ${e} sourceLoc;
        ${e} coords = getOutputCoords();
        ${i.join(`
`)}
      `,this.userCode=`
      void main() {
        ${n}
        setOutput(getSource(${o}));
      }
    `}},Yv=["x","y","z","w","u","v"];function UQ(r){if(r===1)return"sourceLoc";if(r<=6)return Yv.slice(0,r).map(t=>"sourceLoc."+t).join(",");throw Error(`Slicing for rank ${r} is not yet supported`)}var h0=class{constructor(t){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.rank=t.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let e=Me(this.rank),o=Pt("coords",this.rank),n=Pt("sourceLoc",this.rank),i=this.rank===1?"sourceLoc":`vec2(${n.slice(-2).join()})`,s=`getChannel(getSource(${n.join()}), ${i})`,a=`
      result.x = ${s};
      if (++${o[this.rank-1]} < ${t[this.rank-1]}) {
        ++${n[this.rank-1]};
        result.y = ${s};
        --${n[this.rank-1]};
      }
    `,l=this.rank===1?"":`
      --${o[this.rank-1]};
      if (++${o[this.rank-2]} < ${t[this.rank-2]}) {
        ++${n[this.rank-2]};
        result.z = ${s};
        if (++${o[this.rank-1]} < ${t[this.rank-1]}) {
          ++${n[this.rank-1]};
          result.w = ${s};
        }
      }
    `,u=this.rank<=4?`sourceLoc = coords +
            ${e}(${t.map((c,p)=>`start[${p}]`).join()});`:t.map((c,p)=>`${n[p]} = ${o[p]} + start[${p}];`).join(`
`);this.userCode=`
      void main() {
        ${e} coords = getOutputCoords();
        ${e} sourceLoc;
        ${u}
        vec4 result = vec4(0.);
        ${a}
        ${l}
        setOutput(result);
      }
    `}};function GQ(r,t,e,o){let n=o.texData.get(r.dataId),i=o.makeTensorInfo(e,r.dtype),s=o.texData.get(i.dataId);Object.assign(s,n),s.refCount=1,s.shape=e,s.dtype=r.dtype;let a=Gt.computeFlatOffset(t,S.computeStrides(r.shape));n.slice&&(a+=n.slice.flatOffset),s.slice={flatOffset:a,origDataId:n.slice&&n.slice.origDataId||r.dataId};let l=o.dataRefCount.get(s.slice.origDataId)||1;return o.dataRefCount.set(s.slice.origDataId,l+1),i}function qo(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{begin:i,size:s}=o,[a,l]=Gt.parseSliceParams(n,i,s);if(Gt.assertParamsValid(n,a,l),S.sizeFromShape(l)===0)return e.makeTensorInfo(l,n.dtype,[]);if(e.shouldExecuteOnCPU([n])||n.dtype==="string"){let p=e.texData.get(n.dataId),d=IP(p.values,a,l,n.shape,n.dtype);return e.makeTensorInfo(l,n.dtype,d)}let{isPacked:u}=e.texData.get(n.dataId),c=Gt.isSliceContinous(n.shape,a,l);if(u||!c){let p=G().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new h0(l):new f0(l),d=[a];return e.runWebGLProgram(p,[n],n.dtype,d)}return e.uploadToGPU(n.dataId),GQ(n,a,l,e)}var LA={kernelName:vs,backendName:"webgl",kernelFunc:qo};var HQ=r=>{let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{blockShape:i,crops:s}=o;S.assert(n.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");let a=i.reduce((b,I)=>b*I),l=$.getReshaped(n.shape,i,a),u=$.getPermuted(l.length,i.length),c=$.getReshapedPermuted(n.shape,i,a),p=$.getSliceBeginCoords(s,i.length),d=$.getSliceSize(c,s,i.length),m=[],f=le({inputs:{x:n},backend:e,attrs:{shape:l}}),g=yt({inputs:{x:f},backend:e,attrs:{perm:u}}),x=le({inputs:{x:g},backend:e,attrs:{shape:c}}),y=qo({inputs:{x},backend:e,attrs:{begin:p,size:d}});return m.push(f),m.push(g),m.push(x),m.forEach(b=>e.disposeIntermediateTensorInfo(b)),y},MA={kernelName:Ja,backendName:"webgl",kernelFunc:HQ};function KQ(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,weights:i}=t,{size:s}=o,a=e.readSync(n.dataId),l=e.readSync(i.dataId),u=jg(a,l,i.dtype,i.shape,s);return e.makeTensorInfo([s],i.dtype,u)}var BA={kernelName:el,backendName:"webgl",kernelFunc:KQ};var qQ=`
  int r = int(a.r) & int(b.r);
  int g = int(a.g) & int(b.g);
  int rb = int(a.b) & int(b.b);
  int ra = int(a.a) & int(b.a);
  return vec4(r, g, rb, ra);
`,jQ=`
  return float(int(a.r) & int(b.r));
`;function XQ(r){let{inputs:t,backend:e}=r,{a:o,b:n}=t,i=G().getBool("WEBGL_PACK_BINARY_OPERATIONS"),s=G().getNumber("WEBGL_VERSION");if(e.shouldExecuteOnCPU([o,n])||s===1){let l=e.texData.get(o.dataId).values,u=e.texData.get(n.dataId).values,[c,p]=Y$(o.shape,n.shape,l,u,o.dtype),d=e.makeTensorInfo(p,o.dtype),m=e.texData.get(d.dataId);return m.values=c,d}let a;return i?a=new oo(qQ,o.shape,n.shape,!1):a=new Mr(jQ,o.shape,n.shape),e.runWebGLProgram(a,[o,n],o.dtype)}var VA={kernelName:tl,backendName:"webgl",kernelFunc:XQ};function YQ(r){let{inputs:t,backend:e}=r,{s0:o,s1:n}=t,i=e.readSync(o.dataId),s=e.readSync(n.dataId),a=$.assertAndGetBroadcastShape(Array.from(i),Array.from(s));return e.makeTensorInfo([a.length],"int32",Int32Array.from(a))}var WA={kernelName:rl,backendName:"webgl",kernelFunc:YQ};var QQ="return float(a != b);",Qv=it({opSnippet:QQ,cpuKernelImpl:xP,dtype:"bool"}),zA={kernelName:vi,backendName:"webgl",kernelFunc:Qv};function Hn(r){let{inputs:t,backend:e}=r,{input:o}=t,n=e.texData.get(o.dataId);return At({inputs:{x:n.complexTensorInfos.real},backend:e})}var UA={kernelName:ys,backendName:"webgl",kernelFunc:Hn};var ZQ="return float(int(x));";function GA(r,t){let e=new Zt(r.shape,ZQ),o=t.runWebGLProgram(e,[r],"int32");return{dataId:o.dataId,shape:o.shape,dtype:o.dtype}}function Zv(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{dtype:i}=o;if(i==="complex64"){if(n.dtype==="complex64")return At({inputs:{x:n},backend:e});let s=Sr(n.shape),a=Zv({inputs:{x:n},backend:e,attrs:{dtype:"float32"}}),l=Br({inputs:{real:a,imag:s},backend:e});return s.dispose(),e.disposeIntermediateTensorInfo(a),l}if(n.dtype==="complex64"){let s=Hn({inputs:{input:n},backend:e}),a=Zv({inputs:{x:s},backend:e,attrs:{dtype:i}});return e.disposeIntermediateTensorInfo(s),a}if(!S.hasEncodingLoss(n.dtype,i)){let s=At({inputs:{x:n},backend:e});return{dataId:s.dataId,shape:s.shape,dtype:i}}if(e.shouldExecuteOnCPU([n])){let s=e.texData.get(n.dataId).values,[a,l,u]=Q$(s,n.shape,n.dtype,i);return e.makeTensorInfo(a,l,u)}if(i==="int32")return GA(n,e);if(i==="bool"){let s=e.makeTensorInfo([],"bool",S.getTypedArrayFromDType("bool",1)),l=Qv({inputs:{a:n,b:s},backend:e});return e.disposeIntermediateTensorInfo(s),l}throw new Error(`Error in Cast: failed to cast ${n.dtype} to ${i}`)}var HA={kernelName:kn,backendName:"webgl",kernelFunc:Zv};var KA="return ceil(x);",JQ=Ie({opSnippet:KA,packedOpSnippet:KA,cpuKernelImpl:Z$}),qA={kernelName:ii,backendName:"webgl",kernelFunc:JQ};var g0=class{constructor(t){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=t,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}};var x0=class{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=t,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}};function eZ(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{clipValueMin:i,clipValueMax:s}=o,a;G().getBool("WEBGL_PACK_CLIP")?a=new x0(n.shape):a=new g0(n.shape);let l=[[i],[s]];return e.runWebGLProgram(a,[n],n.dtype,l)}var jA={kernelName:ol,backendName:"webgl",kernelFunc:eZ};var y0=class{constructor(t){this.variableNames=["real","imag"],this.outputShape=t,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}};function XA(r,t){return{dataId:t.dataId,dtype:t.dtype,shape:r.shape}}function tZ(r){let{inputs:t,backend:e}=r,{x:o}=t,n=e.texData.get(o.dataId),i=new y0(o.shape),s=[XA(o,n.complexTensorInfos.real),XA(o,n.complexTensorInfos.imag)];return e.runWebGLProgram(i,s,s[0].dtype)}var YA={kernelName:nl,backendName:"webgl",kernelFunc:tZ};var v0=class{constructor(t){this.outputShape=[],this.outputShape=$.computeOutShape(t,1),this.variableNames=t.map((s,a)=>`T${a}`);let e=new Array(t.length-1);e[0]=t[0][1];for(let s=1;s<e.length;s++)e[s]=e[s-1]+t[s][1];let o=[`if (yC < ${e[0]}) setOutput(getT0(yR, yC));`];for(let s=1;s<e.length;s++){let a=e[s-1];o.push(`else if (yC < ${e[s]}) setOutput(getT${s}(yR, yC-${a}));`)}let n=e.length,i=e[e.length-1];o.push(`else setOutput(getT${n}(yR, yC-${i}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${o.join(`
        `)}
      }
    `}};var S0=class{constructor(t,e){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=$.computeOutShape(t,e);let o=this.outputShape,n=o.length,i=Me(n),s=Pt("coords",n),a=["x","y","z","w","u","v"].slice(0,n);this.variableNames=t.map((g,x)=>`T${x}`);let l=new Array(t.length-1);l[0]=t[0][e];for(let g=1;g<l.length;g++)l[g]=l[g-1]+t[g][e];let u=a[e],c=a.slice(-2),p=a.join(),d=`if (${u} < ${l[0]}) {
        return getChannel(
            getT0(${p}), vec2(${c.join()}));
        }`;for(let g=1;g<l.length;g++){let x=l[g-1];d+=`
        if (${u} < ${l[g]}  && ${u} >= ${l[g-1]}) {
          return getChannel(
            getT${g}(${b0(a,u,x)}),
            vec2(${b0(c,u,x)}));
        }`}let m=l.length,f=l[l.length-1];d+=`
        return getChannel(
          getT${m}(${b0(a,u,f)}),
          vec2(${b0(c,u,f)}));`,this.userCode=`
      float getValue(${a.map(g=>"int "+g)}) {
        ${d}
      }

      void main() {
        ${i} coords = getOutputCoords();
        vec4 result = vec4(getValue(${s}), 0., 0., 0.);

        ${s[n-1]} = ${s[n-1]} + 1;
        if (${s[n-1]} < ${o[n-1]}) {
          result.g = getValue(${s});
        }

        ${s[n-2]} = ${s[n-2]} + 1;
        if (${s[n-2]} < ${o[n-2]}) {
          result.a = getValue(${s});
        }

        ${s[n-1]} = ${s[n-1]} - 1;
        if (${s[n-2]} < ${o[n-2]} &&
            ${s[n-1]} < ${o[n-1]}) {
          result.b = getValue(${s});
        }
        setOutput(result);
      }
    `}};function b0(r,t,e){let o=r.indexOf(t);return r.map((i,s)=>s===o?`${i} - ${e}`:i).join()}function ca(r){let{inputs:t,backend:e}=r,{input:o}=t,n=e.texData.get(o.dataId);return At({inputs:{x:n.complexTensorInfos.imag},backend:e})}var QA={kernelName:Fl,backendName:"webgl",kernelFunc:ca};function Mc(r,t,e){let o=r[0].dtype;if(o==="complex64"){let m=r.map(b=>Hn({inputs:{input:b},backend:e})),f=r.map(b=>ca({inputs:{input:b},backend:e})),g=Mc(m,t,e),x=Mc(f,t,e),y=Br({inputs:{real:g,imag:x},backend:e});return m.forEach(b=>e.disposeIntermediateTensorInfo(b)),f.forEach(b=>e.disposeIntermediateTensorInfo(b)),e.disposeIntermediateTensorInfo(g),e.disposeIntermediateTensorInfo(x),y}let n=e.shouldExecuteOnCPU(r);if(o==="string"&&(n=!0),n){let m=r.map(N=>{let B=[-1,S.sizeFromShape(N.shape.slice(t))];return le({inputs:{x:N},backend:e,attrs:{shape:B}})}),f=m.map(N=>({vals:e.readSync(N.dataId),shape:N.shape})),g=$.computeOutShape(m.map(N=>N.shape),1),x=m[0].shape[0]===1,y=J$(f,g,o,x),b=$.computeOutShape(r.map(N=>N.shape),t),I=e.makeTensorInfo(b,o,y);return m.forEach(N=>e.disposeIntermediateTensorInfo(N)),I}let i=r.filter(m=>S.sizeFromShape(m.shape)>0),s=G().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&i[0].shape.length>1;if(i.length===1){let m=s?new Zt(r[0].shape,xn):new Lr(r[0].shape,xn);return e.runWebGLProgram(m,r,o)}let a=G().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(i.length>a){let m=[];for(let g=0;g<i.length;g+=a){let x=i.slice(g,g+a);m.push(Mc(x,t,e))}let f=Mc(m,t,e);for(let g of m)e.disposeIntermediateTensorInfo(g);return f}if(s){let m=new S0(i.map(f=>f.shape),t);return e.runWebGLProgram(m,i,o)}let{tensors2D:l,outShape:u}=rZ(i,t,e),c=new v0(l.map(m=>m.shape)),p=e.runWebGLProgram(c,l,o);l.forEach(m=>e.disposeIntermediateTensorInfo(m));let d=le({inputs:{x:p},attrs:{shape:u},backend:e});return e.disposeIntermediateTensorInfo(p),d}function rZ(r,t,e){let o=$.computeOutShape(r.map(i=>i.shape),t);return{tensors2D:r.map(i=>le({inputs:{x:i},attrs:{shape:[-1,S.sizeFromShape(i.shape.slice(t))]},backend:e})),outShape:o}}function Jv(r){let{inputs:t,backend:e,attrs:o}=r,{axis:n}=o,i=S.parseAxisParam(n,t[0].shape)[0],s=t.map(u=>u.shape);$.assertParamsConsistent(s,i);let a=$.computeOutShape(t.map(u=>u.shape),i);if(S.sizeFromShape(a)===0)return e.makeTensorInfo(a,t[0].dtype,[]);let l=t.filter(u=>S.sizeFromShape(u.shape)>0);return l.length===1?At({inputs:{x:l[0]},backend:e}):Mc(l,i,e)}var ZA={kernelName:il,backendName:"webgl",kernelFunc:Jv};var Bc=class{constructor(t,e=!1,o=null,n=!1,i=!1){this.variableNames=["x","W"],this.outputShape=t.outShape;let s=t.padInfo.top,a=t.padInfo.left,l=t.strideHeight,u=t.strideWidth,c=t.dilationHeight,p=t.dilationWidth,d=t.filterHeight,m=t.filterWidth,f=Math.floor(t.inChannels/4)*4,g=t.inChannels%4,x=t.dataFormat==="channelsLast",y=x?1:2,b=x?2:3,I=x?3:1,N="",F="";o&&(n?N=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${o}
        }`:i?N=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${o}
        }`:N=`
          float activation(float x) {
            ${o}
          }
        `,F="result = activation(result);");let B=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),n&&this.variableNames.push("preluActivationWeights"),i&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${N}

      const ivec2 strides = ivec2(${l}, ${u});
      const ivec2 pads = ivec2(${s}, ${a});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${I}];

        ivec2 xRCCorner =
            ivec2(coords[${y}], coords[${b}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${d}; wR++) {
          int xR = xRCorner + wR * ${c};

          if (xR < 0 || xR >= ${t.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${m}; wC++) {
            int xC = xCCorner + wC * ${p};

            if (xC < 0 || xC >= ${t.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${f}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${x}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${g===1}) {

              if (${x}) {
                dotProd +=
                    getX(batch, xR, xC, ${f}) *
                    getW(wR, wC, ${f}, d2);
              } else {
                dotProd +=
                    getX(batch, ${f}, xR, xC) *
                    getW(wR, wC, ${f}, d2);
              }

            } else if (${g===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${f}, d2),
                getW(wR, wC, ${f} + 1, d2)
              );

              if (${x}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${f}),
                  getX(batch, xR, xC, ${f} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${f}, xR, xC),
                  getX(batch, ${f} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${g===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${f}, d2),
                getW(wR, wC, ${f} + 1, d2),
                getW(wR, wC, ${f} + 2, d2)
              );

              if (${x}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${f}),
                  getX(batch, xR, xC, ${f} + 1),
                  getX(batch, xR, xC, ${f} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${f}, xR, xC),
                  getX(batch, ${f} + 1, xR, xC),
                  getX(batch, ${f} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${B}
        ${F}
        setOutput(result);
      }
    `}},w0=class{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;let e=t.padInfo.front,o=t.padInfo.top,n=t.padInfo.left,i=t.strideDepth,s=t.strideHeight,a=t.strideWidth,l=t.dilationDepth,u=t.dilationHeight,c=t.dilationWidth,p=t.filterDepth,d=t.filterHeight,m=t.filterWidth,f=Math.floor(t.inChannels/4)*4,g=t.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${i}, ${s}, ${a});
      const ivec3 pads = ivec3(${e}, ${o}, ${n});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${p}; wF++) {
          int xF = xFCorner + wF * ${l};

          if (xF < 0 || xF >= ${t.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${d}; wR++) {
            int xR = xRCorner + wR * ${u};

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${m}; wC++) {
              int xC = xCCorner + wC * ${c};

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${f}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${g===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${f}) *
                  getW(wF, wR, wC, ${f}, d2);
              } else if (${g===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${f}),
                  getX(batch, xF, xR, xC, ${f} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${f}, d2),
                  getW(wF, wR, wC, ${f} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${g===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${f}),
                  getX(batch, xF, xR, xC, ${f} + 1),
                  getX(batch, xF, xR, xC, ${f} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${f}, d2),
                  getW(wF, wR, wC, ${f} + 1, d2),
                  getW(wF, wR, wC, ${f} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}};var Vc=class{constructor(t,e=!1,o=null,n=!1,i=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=lt(this.outputShape.length);let s=t.padInfo.left,a=t.strideWidth,l=t.dilationWidth,u=t.filterHeight,c=t.filterWidth,p=c,d=`
       int xR; int xC; int xCOffset;
       vec4 wTexel; vec4 previous; vec4 final;`;for(let x=0;x<c;x++)d+=`
           vec4 xTexelC${x*2};
           int xTexelC${x*2}Ready;
           vec4 xTexelC${x*2+1};
           int xTexelC${x*2+1}Ready;
           vec4 xC${x};`;d+=`
     for (int r = 0; r < ${u}; r++) {
      for (int d1 = 0; d1 < ${t.inChannels}; d1 += 2) {
       `;for(let x=0;x<c;x++)d+=`
           xTexelC${x*2} = vec4(0.0);
           xTexelC${x*2}Ready = 0;
           xTexelC${x*2+1} = vec4(0.0);
           xTexelC${x*2+1}Ready = 0;
           xC${x} = vec4(0.0);`;d+=`
         xR = xRCorner + r * dilations[0];
         if (xR >=0 && xR < inDims[0]) {
       `;for(let x=0;x<(p+1)/2;x++){let y=x*2;if(d+=`
           xC = xCCorner + ${y*l};
           `,a===1){if(y<c&&(s%2===1?(d+=`
                 xCOffset = xC + 1;
                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y}Ready == 0) {
                   xTexelC${y} = getX(batch, xR, xCOffset, d1);

                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${y}.zw = vec2(0.0);
                   }
                   xTexelC${y}Ready = 1;
                 }
               `,l===1&&y>0?d+=`
                 xC${y} = vec4(xTexelC${y-2}.zw, xTexelC${y}.xy);
                 `:d+=`
                   xCOffset = xC + 1 - 2;

                   if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       previous.zw = vec2(0.0);
                     }

                     xC${y} = vec4(previous.zw, xTexelC${y}.xy);
                   } else {
                     xC${y} = vec4(0.0, 0.0, xTexelC${y}.xy);
                   }
                   `):d+=`
                 if (xC >= 0 && xC < inDims[1] && xTexelC${y}Ready == 0) {
                   xTexelC${y} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${y}.zw = vec2(0.0);
                   }
                   xTexelC${y}Ready = 1;
                 }

                 xC${y} = xTexelC${y};
                 `,y+1<c)){let b=s%2===0?S.nearestLargerEven(l):l;l%2===0&&s%2===1||l%2!==0&&s%2!==1?(d+=`
                   xCOffset = xC + imod(pads[1], 2) + ${b};

                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                     xTexelC${y+1} = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       xTexelC${y+1}.zw = vec2(0.0);
                     }
                     xTexelC${y+1}Ready = 1;
                   }
                   `,l>1?d+=`
                     xCOffset -= 2;
                     if (xCOffset >= 0 && xCOffset < inDims[1]) {
                      previous = getX(batch, xR, xCOffset, d1);
                      xC${y+1} = vec4(previous.zw, xTexelC${y+1}.xy);
                     } else {
                      xC${y+1} = vec4(0.0, 0.0, xTexelC${y+1}.xy);
                     }
                     `:d+=`
                     xC${y+1} = vec4(xTexelC${y}.zw, xTexelC${y+1}.xy);
                     `):b===1?d+=`
                     xC${y+1} = xTexelC${y};
                     `:d+=`
                     xCOffset = xC + ${b};

                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                       xTexelC${y+1} = getX(batch, xR, xCOffset, d1);
                       if (xCOffset + 1 >= inDims[1]) {
                         xTexelC${y+1}.zw = vec2(0.0);
                       }
                       xTexelC${y+1}Ready = 1;
                     }

                     xC${y+1} = xTexelC${y+1};
                     `}}else y<c&&(s%2===1?(d+=`
                 xCOffset = xC + 1 - strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y}Ready == 0) {
                   xTexelC${y} = getX(batch, xR, xCOffset, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${y}.zw = vec2(0.0);
                   }
                   xTexelC${y}Ready = 1;
                 }

                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${y+1}Ready == 0) {
                   xTexelC${y+1} = getX(batch, xR, xC + 1, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xC + 2 >= inDims[1]) {
                     xTexelC${y+1}.zw = vec2(0.0);
                   }
                   xTexelC${y+1}Ready = 1;
                 }

                 xC${y} = vec4(xTexelC${y}.zw, xTexelC${y+1}.zw);
               `,y+1<c&&(d+=`
                   final = vec4(0.0);
                   xCOffset = xC + 1 + strides[1];
                   if(xCOffset >= 0 && xCOffset < inDims[1]) {
                     final = getX(batch, xR, xCOffset, d1);
                   }
                   xC${y+1} = vec4(xTexelC${y+1}.xy, final.xy);
                 `)):(d+=`
                 if(xC >= 0 && xC < inDims[1] && xTexelC${y}Ready == 0) {
                   xTexelC${y} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${y}.zw = vec2(0.0);
                   }
                   xTexelC${y}Ready = 1;
                 }

                 xCOffset = xC + strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                   xTexelC${y+1} = getX(batch, xR, xCOffset, d1);
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${y+1}.zw = vec2(0.);
                   }
                   xTexelC${y+1}Ready = 1;
                 }

                 xC${y} = vec4(
                   xTexelC${y}.xy, xTexelC${y+1}.xy);
               `,y+1<c&&(d+=`
                   xC${y+1} = vec4(xTexelC${y}.zw, xTexelC${y+1}.zw);
                 `)));y<c&&(d+=`
             wTexel = getW(r, ${y}, d1, d2);
             dotProd += xC${y}.xxzz * vec4(wTexel.xy, wTexel.xy);
             if(d1 + 1 < ${t.inChannels}) {
               dotProd += xC${y}.yyww * vec4(wTexel.zw, wTexel.zw);
             }
           `,y+1<c&&(d+=`
               wTexel = getW(r, ${y+1}, d1, d2);
               dotProd += xC${y+1}.xxzz * vec4(wTexel.xy, wTexel.xy);
               if(d1 + 1 < ${t.inChannels}) {
                 dotProd += xC${y+1}.yyww * vec4(wTexel.zw, wTexel.zw);
               }
             `))}d+=`
     }
   `,d+=`
     }
   `,d+=`
     }
   `;let m="",f="";o&&(n?m=`vec4 activation(vec4 a) {
           vec4 b = getPreluActivationWeightsAtOutCoords();
           ${o}
         }`:i?m=`vec4 activation(vec4 a) {
           vec4 b = getLeakyreluAlphaAtOutCoords();
           ${o}
         }`:m=`vec4 activation(vec4 x) {
           ${o}
         }`,f="result = activation(result);");let g=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),n&&this.variableNames.push("preluActivationWeights"),i&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
       ${m}

       void main() {
         ivec4 coords = getOutputCoords();
         int batch = coords.x;
         ivec2 xRCCorner = coords.yz * strides - pads;
         int d2 = coords.w;
         int xRCorner = xRCCorner.x;
         int xCCorner = xRCCorner.y;

         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
         vec4 dotProd = vec4(0.000000000000001);

         ${d}

         vec4 result = dotProd - vec4(0.000000000000001);
         ${g}
         ${f}
         setOutput(result);
       }
     `}};var C0=class{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=t,this.enableShapeUniforms=lt(this.outputShape.length);let{dataFormat:o}=e,n=wt(),i=o==="channelsLast",s=i?1:2,a=i?2:3,l=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${t[2]} && pos < ${t[1]}) {`,u="";for(let c=0;c<=1;c++)for(let p=0;p<=1;p++)u+=`
          blockIndex = rc.z + ${p};
          pos = rc.y + ${c};

          ${l}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${s}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${a}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${i}) {
                  innerDims = vec2(d1, ch);
                  result[${c*2+p}] = getChannel(
                    getA(rc.x, d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${c*2+p}] = getChannel(
                    getA(rc.x, ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${u}

        ${n.output} = result;
      }
    `}};function _0(r,t){let e=r.length;return e>=3?t?[...r.slice(0,-3),r[e-3]*r[e-2],r[e-1]]:[...r.slice(0,-3),r[e-3],r[e-2]*r[e-1]]:!t&&e===1&&r[0]>1?[r[0],1]:null}function k0({x:r,filter:t,convInfo:e,backend:o,bias:n=null,preluActivationWeights:i=null,leakyreluAlpha:s=0,activation:a=null}){let l=r.shape,u=o.texData.get(r.dataId),c=e.inChannels,p=l[0]*l[1]*l[2],d=e.outChannels,m=e.dataFormat==="channelsLast",f=!1,g=!1,x,y=[];if(i!=null){let N=_0(i.shape,m);N!=null&&(i=le({inputs:{x:i},backend:o,attrs:{shape:N}}),y.push(i))}if(n!=null){let N=_0(n.shape,m);N!=null&&(n=le({inputs:{x:n},backend:o,attrs:{shape:N}}),y.push(n))}if(!((p===1||d===1)&&c>Xv)&&u.isPacked&&m&&u.texture!=null&&l[2]%2!==0&&S.arraysEqual(u.shape.slice(-3),l.slice(-3))){let N=l[0]*l[1]*(l[2]+1),F={dataId:r.dataId,shape:[1,N,e.inChannels],dtype:r.dtype},B=u.shape;u.shape=u.shape.slice(),u.shape[u.shape.length-2]++,S.assert(na(u.shape,F.shape),()=>`packed reshape ${u.shape} to ${F.shape} isn't free`);let z=le({inputs:{x:t},backend:o,attrs:{shape:[1,e.inChannels,e.outChannels]}});y.push(z);let H=ua({a:F,b:z,backend:o,transposeA:f,transposeB:g,bias:n,activation:a,preluActivationWeights:i,leakyreluAlpha:s}),K=o.texData.get(H.dataId);S.assert(K.isPacked,()=>"batchMatMul result is expected to be packed"),u.shape=B,K.shape=e.outShape,x=At({inputs:{x:H},backend:o}),x.shape=e.outShape,y.push(H)}else{let N=e.outHeight*e.outWidth,F=le({inputs:{x:r},backend:o,attrs:{shape:m?[e.batchSize,N,e.inChannels]:[e.batchSize,e.inChannels,N]}}),B=le({inputs:{x:t},backend:o,attrs:{shape:[1,e.inChannels,e.outChannels]}}),z=ua({a:m?F:B,b:m?B:F,transposeA:!m,transposeB:g,backend:o,bias:n,activation:a,preluActivationWeights:i,leakyreluAlpha:s});x=le({inputs:{x:z},backend:o,attrs:{shape:e.outShape}}),y.push(F),y.push(B),y.push(z)}for(let N of y)o.disposeIntermediateTensorInfo(N);return x}function I0({x:r,filter:t,convInfo:e,backend:o,bias:n=null,preluActivationWeights:i=null,leakyreluAlpha:s=0,activation:a=null}){let{filterWidth:l,filterHeight:u,inChannels:c,outWidth:p,outHeight:d,dataFormat:m}=e,f=m==="channelsLast",g=l*u*c,x=d*p,y=[e.batchSize,g,x],b=!0,I=!1,N=[];if(i!=null){let je=_0(i.shape,f);je!=null&&(i=le({inputs:{x:i},backend:o,attrs:{shape:je}}),N.push(i))}if(n!=null){let je=_0(n.shape,f);je!=null&&(n=le({inputs:{x:n},backend:o,attrs:{shape:je}}),N.push(n))}let F=le({inputs:{x:t},backend:o,attrs:{shape:[1,g,S.sizeFromShape(t.shape)/g]}});N.push(F);let B=new C0(y,e),z=[r.shape,[e.padInfo.top,e.padInfo.left],[e.strideHeight,e.strideWidth],[e.dilationHeight,e.dilationWidth],[e.inChannels],[e.filterWidth*e.inChannels],[e.outWidth]],H=o.runWebGLProgram(B,[r],"float32",z),K=le({inputs:{x:H},backend:o,attrs:{shape:y}});N.push(H),N.push(K);let X=n!=null,te=i!=null,ue=a==="leakyrelu",pe=a?Gn(a,!0):null,xe=new Lc(f?K.shape:F.shape,f?F.shape:K.shape,f?[e.batchSize,x,e.outChannels]:[e.batchSize,e.outChannels,x],b,I,X,pe,te,ue),be=f?[K,F]:[F,K];if(n&&be.push(n),te&&be.push(i),ue){let je=o.makeTensorInfo([],"float32",S.createScalarValue(s,"float32"));be.push(je),N.push(je)}let Te=o.runWebGLProgram(xe,be,"float32"),qe=le({inputs:{x:Te},backend:o,attrs:{shape:e.outShape}});N.push(Te);for(let je of N)o.disposeIntermediateTensorInfo(je);return qe}function oZ(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,filter:i}=t,{strides:s,pad:a,dataFormat:l,dilations:u,dimRoundingMode:c}=o,p=$.convertConv2DDataFormat(l),d=$.computeConv2DInfo(n.shape,i.shape,s,u,a,c,!1,p),m;if(d.filterHeight===1&&d.filterWidth===1&&d.dilationHeight===1&&d.dilationWidth===1&&d.strideHeight===1&&d.strideWidth===1&&(d.padInfo.type==="SAME"||d.padInfo.type==="VALID"))m=k0({x:n,filter:i,convInfo:d,backend:e});else if(d.strideWidth<=2&&p==="channelsLast"&&G().getBool("WEBGL_EXP_CONV")){let g=new Vc(d),x=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];m=e.runWebGLProgram(g,[n,i],"float32",x)}else if(G().getBool("WEBGL_CONV_IM2COL"))m=I0({x:n,filter:i,convInfo:d,backend:e});else{let g=new Bc(d);m=e.runWebGLProgram(g,[n,i],"float32")}let f=le({inputs:{x:m},backend:e,attrs:{shape:d.outShape}});return e.disposeIntermediateTensorInfo(m),f}var JA={kernelName:sl,backendName:"webgl",kernelFunc:oZ};var T0=class{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;let e=t.strideHeight,o=t.strideWidth,n=t.padInfo.top,i=t.padInfo.left,s=t.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${t.batchSize}; b++) {
          for (int yR = 0; yR < ${t.outHeight}; yR++) {
            int xR = wR + yR * ${e} - ${n};

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${t.outWidth}; yC++) {
              int xC = wC + yC * ${o} - ${i};

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              ${s?`float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);`:`float dyValue = getDy(b, d2, yR, yC);
              float xValue = getX(b, d1, xR, xC);
              dotProd += (xValue * dyValue);`}
            }
          }
        }
        setOutput(dotProd);
      }
    `}},E0=class{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;let e=t.filterHeight,o=t.filterWidth,n=t.strideHeight,i=t.strideWidth,s=t.dataFormat==="channelsLast",a=e-1-t.padInfo.top,l=o-1-t.padInfo.left,u=s?1:2,c=s?2:3,p=s?3:1;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${l});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${p}];

        ivec2 dyCorner = ivec2(coords[${u}], coords[${c}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${e}; wR++) {
          float dyR = float(dyRCorner + wR) / ${n}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${e} - 1 - wR;

          for (int wC = 0; wC < ${o}; wC++) {
            float dyC = float(dyCCorner + wC) / ${i}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${o} - 1 - wC;

            for (int d2 = 0; d2 < ${t.outChannels}; d2++) {

              if (${s}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}},N0=class{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;let e=t.strideDepth,o=t.strideHeight,n=t.strideWidth,i=t.padInfo.front,s=t.padInfo.top,a=t.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${t.batchSize}; b++) {
          for (int yF = 0; yF < ${t.outDepth}; yF++) {
            int xF = wF + yF * ${e} - ${i};

            if (xF < 0 || xF >= ${t.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${t.outHeight}; yR++) {
              int xR = wR + yR * ${o} - ${s};

              if (xR < 0 || xR >= ${t.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${t.outWidth}; yC++) {
                int xC = wC + yC * ${n} - ${a};

                if (xC < 0 || xC >= ${t.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}},R0=class{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;let e=t.filterDepth,o=t.filterHeight,n=t.filterWidth,i=t.strideDepth,s=t.strideHeight,a=t.strideWidth,l=e-1-t.padInfo.front,u=o-1-t.padInfo.top,c=n-1-t.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${l}, ${u}, ${c});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${e}; wF++) {
          float dyF = float(dyFCorner + wF) / ${i}.0;

          if (dyF < 0.0 || dyF >= ${t.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${e} - 1 - wF;

          for (int wR = 0; wR < ${o}; wR++) {
            float dyR = float(dyRCorner + wR) / ${s}.0;

            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${o} - 1 - wR;

            for (int wC = 0; wC < ${n}; wC++) {
              float dyC = float(dyCCorner + wC) / ${a}.0;

              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${n} - 1 - wC;

              for (int d2 = 0; d2 < ${t.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function nZ(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,dy:i}=t,{strides:s,pad:a,dataFormat:l,dimRoundingMode:u,filterShape:c}=o,p=$.convertConv2DDataFormat(l),d=$.computeConv2DInfo(n.shape,c,s,1,a,u,!1,p),m=new T0(d);return e.runWebGLProgram(m,[n,i],"float32")}var eD={kernelName:al,backendName:"webgl",kernelFunc:nZ};var $0=class{constructor(t){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=t.inShape,this.enableShapeUniforms=lt(this.outputShape.length);let e=t.filterHeight,o=t.filterWidth,n=e-1-t.padInfo.top,i=o-1-t.padInfo.left;this.userCode=`
      const ivec2 pads = ivec2(${n}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];

        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        vec4 result = vec4(0.);
        for (int wR = 0; wR < ${e}; wR++) {
          float dyR = float(dyRCorner + wR) / strides[0];
          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);
          int wRPerm = ${e} - 1 - wR;

          for (int wC = 0; wC < ${o}; wC++) {
            int wCPerm = ${o} - 1 - wC;

            float dyC = float(dyCCorner + wC) / strides[1];
            bool idyCVal = (dyC >= 0.0) && (dyC < ${t.outWidth}.0)
              && (fract(dyC) == 0.0);
            int idyC = int(dyC);

            float dyC2 = float(dyCCorner + wC + 1) / strides[1];
            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${t.outWidth}.0)
              && (fract(dyC2) == 0.0);
            int idyC2 = int(dyC2);

            if (idyCVal && idyCVal2) {
              for (int d2 = 0; d2 < ${t.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?
                  dySample : getDy(batch, idyR, idyC2, d2);

                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));

                dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample2.xy : dySample2.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal) {
              for (int d2 = 0; d2 < ${t.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal2) {
              for (int d2 = 0; d2 < ${t.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC2, d2);
                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            }
          }
        }
        setOutput(result);
      }
    `}};function iZ(r){let{inputs:t,backend:e,attrs:o}=r,{dy:n,filter:i}=t,{inputShape:s,strides:a,pad:l,dataFormat:u,dimRoundingMode:c}=o,p=$.convertConv2DDataFormat(u),d=$.computeConv2DInfo(s,i.shape,a,1,l,c,!1,p);if(G().getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&p==="channelsLast"){let m=[[d.strideHeight,d.strideWidth]],f=new $0(d);return e.runWebGLProgram(f,[n,i],"float32",m)}else{let m=new E0(d);return e.runWebGLProgram(m,[n,i],"float32")}}var tD={kernelName:ll,backendName:"webgl",kernelFunc:iZ};function sZ(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,filter:i}=t,{strides:s,pad:a,dilations:l}=o,u=$.computeConv3DInfo(n.shape,i.shape,s,l,a),c=new w0(u);return e.runWebGLProgram(c,[n,i],"float32")}var rD={kernelName:ul,backendName:"webgl",kernelFunc:sZ};function aZ(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,dy:i}=t,{strides:s,pad:a,filterShape:l}=o,u=$.computeConv3DInfo(n.shape,l,s,1,a),c=new N0(u);return e.runWebGLProgram(c,[n,i],"float32")}var oD={kernelName:Zd,backendName:"webgl",kernelFunc:aZ};function lZ(r){let{inputs:t,backend:e,attrs:o}=r,{dy:n,filter:i}=t,{pad:s,strides:a,inputShape:l}=o,u=$.computeConv3DInfo(l,i.shape,a,1,s),c=new R0(u);return e.runWebGLProgram(c,[n,i],"float32")}var nD={kernelName:cl,backendName:"webgl",kernelFunc:lZ};var uZ=No+`
  return cos(x);
`,cZ=`
  vec4 result = cos(x);
  bvec4 isNaN = isnan(x);
  ${no}
  return result;
`,pZ=Ie({opSnippet:uZ,packedOpSnippet:cZ}),iD={kernelName:pl,backendName:"webgl",kernelFunc:pZ};var dZ=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,mZ=Ie({opSnippet:dZ}),sD={kernelName:dl,backendName:"webgl",kernelFunc:mZ};var P0=class{constructor(t,e,o,n,i){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];let[s,a,l,u]=t,[c]=e,[p,d]=o;this.outputShape=[c,p,d,u];let m=n==="bilinear"?1:0,[f,g]=[`${a-1}.0`,`${l-1}.0`],[x,y,b]=p>1?[`${(a-1)/(p-1)}`,"(y2-y1) * height_ratio",`y1*${f} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${f}`],[I,N,F]=d>1?[`${(l-1)/(d-1)}`,"(x2-x1) * width_ratio",`x1*${g} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${g}`];this.userCode=`
      const float height_ratio = float(${x});
      const float width_ratio = float(${I});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${s}) {
          return;
        }

        float height_scale = ${y};
        float width_scale = ${N};

        float in_y = ${b};
        if( in_y < 0.0 || in_y > ${f} ) {
          setOutput(float(${i}));
          return;
        }
        float in_x = ${F};
        if( in_x < 0.0 || in_x > ${g} ) {
          setOutput(float(${i}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${m} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}};var fZ=r=>{let{inputs:t,backend:e,attrs:o}=r,{image:n,boxes:i,boxInd:s}=t,{cropSize:a,method:l,extrapolationValue:u}=o,c=new P0(n.shape,i.shape,a,l,u);return e.runWebGLProgram(c,[n,i,s],"float32")},aD={kernelName:hl,backendName:"webgl",kernelFunc:fZ};var Wc=function(r){return r.Prod="*",r.Sum="+",r}(Wc||{}),sd=class{constructor(t,e,o,n){this.op=t,this.outputShape=e,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];let i=this.outputShape.length,s=this.op===Wc.Prod?"1.0":"0.0",a=o?s:`getX(${lD(i,"coords",this.op)})`,l=this.outputShape[this.outputShape.length-1],u="",c="";o?(u=n?`end != ${l-1}`:"end != 0",c=n?"end + 1":"end - 1"):(u=n?`end + pow2 < ${l}`:"end >= pow2",c=n?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${Me(i)} coords = getOutputCoords();
        int end = ${uD(i,"coords",this.op)};
        float val = ${a};
        int pow2 = int(pow(2.0, index));
        if (${u}) {
          int idx = ${c};
          ${uD(i,"coords",this.op)} = idx;
          val ${this.op}= getX(${lD(i,"coords",this.op)});
        }
        setOutput(val);
      }
    `}};function lD(r,t,e){if(r===1)return`${t}`;if(r===2)return`${t}.x, ${t}.y`;if(r===3)return`${t}.x, ${t}.y, ${t}.z`;if(r===4)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw new Error(`Cumulative ${e} for rank ${r} is not yet supported`)}function uD(r,t,e){if(r===1)return`${t}`;if(r===2)return`${t}.y`;if(r===3)return`${t}.z`;if(r===4)return`${t}.w`;throw new Error(`Cumulative ${e} for rank ${r} is not yet supported`)}function A0(r,t,e,o,n,i){let s=t.shape.length,a=$.getAxesPermutation([o],s),l=t;a!=null&&(l=yt({inputs:{x:t},backend:e,attrs:{perm:a}}));let u=$.getInnerMostAxes(1,s)[0];if(u!==s-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${o}`);let c=l.shape[u],p=At({inputs:{x:l},backend:e});for(let d=0;d<=Math.ceil(Math.log2(c))-1;d++){let m=new sd(r,l.shape,!1,i),f=[[d]],g=p;p=e.runWebGLProgram(m,[p],p.dtype,f),e.disposeIntermediateTensorInfo(g)}if(n){let d=new sd(r,l.shape,n,i),m=p;p=e.runWebGLProgram(d,[p],p.dtype),e.disposeIntermediateTensorInfo(m)}if(a!=null){let d=$.getUndoAxesPermutation(a),m=yt({inputs:{x:p},backend:e,attrs:{perm:d}});return e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(l),m}return p}function hZ(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{axis:i,exclusive:s,reverse:a}=o;return A0(Wc.Prod,n,e,i,s,a)}var cD={kernelName:ml,backendName:"webgl",kernelFunc:hZ};function gZ(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{axis:i,exclusive:s,reverse:a}=o;return A0(Wc.Sum,n,e,i,s,a)}var pD={kernelName:fl,backendName:"webgl",kernelFunc:gZ};function xZ(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,weights:i}=t,{size:s,binaryOutput:a}=o;if(n.shape.length===1){let l=e.readSync(n.dataId),u=e.readSync(i.dataId),c=jg(l,u,i.dtype,i.shape,s);return e.makeTensorInfo([s],i.dtype,c)}else if(n.shape.length===2){let l=e.bufferSync(n),u=e.bufferSync(i),c=X$(l,u,s,a);return e.makeTensorInfo(c.shape,i.dtype,c.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${n.shape.length}.`)}var dD={kernelName:gl,backendName:"webgl",kernelFunc:xZ};var D0=class{constructor(t,e,o){this.variableNames=["x"],this.outputShape=[],this.outputShape=t,this.blockSize=e,this.dataFormat=o,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${e};
      int offset_h = imod(h, ${e});
      int in_w = w / ${e};
      int offset_w = imod(w, ${e});
      int offset_d = (offset_h * ${e} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};function yZ(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{blockSize:i,dataFormat:s}=o,a=n.shape[0],l=s==="NHWC"?n.shape[1]:n.shape[2],u=s==="NHWC"?n.shape[2]:n.shape[3],c=s==="NHWC"?n.shape[3]:n.shape[1],p=l*i,d=u*i,m=c/(i*i),f=s==="NHWC"?[a,p,d,m]:[a,m,p,d],g=new D0(f,i,s);return e.runWebGLProgram(g,[n],n.dtype)}var mD={kernelName:xl,backendName:"webgl",kernelFunc:yZ};var zc=class{constructor(t,e=!1,o=null,n=!1,i=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=lt(this.outputShape.length);let s=t.filterHeight,a=t.filterWidth,l=t.outChannels/t.inChannels,u="",c="";o&&(n?u=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${o}
        }`:i?u=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${o}
        }`:u=`
          float activation(float x) {
            ${o}
          }
        `,c="result = activation(result);");let p=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),n&&this.variableNames.push("preluActivationWeights"),i&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${u}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${l};
        int q = d2 - d1 * ${l};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${s}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${a}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${p}
        ${c}
        setOutput(result);
      }
    `}};var Uc=class{constructor(t,e=!1,o=null,n=!1,i=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=lt(this.outputShape.length);let s=t.outChannels/t.inChannels,a=t.padInfo.left,l=t.strideWidth,u=t.dilationWidth,c=t.filterHeight,p=t.filterWidth,d=p,m=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let y=0;y<p;y++)m+=`
          vec4 xTexelC${y*2};
          int xTexelC${y*2}Ready;
          vec4 xTexelC${y*2+1};
          int xTexelC${y*2+1}Ready;
          vec4 xC${y};`;m+=`
    for (int r = 0; r < ${c}; r++) {
      `;for(let y=0;y<p;y++)m+=`
          xTexelC${y*2} = vec4(0.0);
          xTexelC${y*2}Ready = 0;
          xTexelC${y*2+1} = vec4(0.0);
          xTexelC${y*2+1}Ready = 0;
          xC${y} = vec4(0.0);`;m+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let y=0;y<(d+1)/2;y++){let b=y*2;if(m+=`
          xC = xCCorner + ${b*u};
          `,l===1){if(b<p&&(a%2===1?(m+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b}Ready == 0) {
                  xTexelC${b} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${b}.zw = vec2(0.0);
                  }
                  xTexelC${b}Ready = 1;
                }
              `,u===1&&b>0?m+=`
                xC${b} = vec4(xTexelC${b-2}.zw, xTexelC${b}.xy);
                `:m+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${b} = vec4(previous.zw, xTexelC${b}.xy);
                  } else {
                    xC${b} = vec4(0.0, 0.0, xTexelC${b}.xy);
                  }
                  `):m+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${b}Ready == 0) {
                  xTexelC${b} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${b}.zw = vec2(0.0);
                  }
                  xTexelC${b}Ready = 1;
                }

                xC${b} = xTexelC${b};
                `,b+1<p)){let I=a%2===0?S.nearestLargerEven(u):u;u%2===0&&a%2===1||u%2!==0&&a%2!==1?(m+=`
                  xCOffset = xC + imod(pads[1], 2) + ${I};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                    xTexelC${b+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${b+1}.zw = vec2(0.0);
                    }
                    xTexelC${b+1}Ready = 1;
                  }
                  `,u>1?m+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);
                     xC${b+1} = vec4(previous.zw, xTexelC${b+1}.xy);
                    } else {
                     xC${b+1} = vec4(0.0, 0.0, xTexelC${b+1}.xy);
                    }
                    `:m+=`
                    xC${b+1} = vec4(xTexelC${b}.zw, xTexelC${b+1}.xy);
                    `):I===1?m+=`
                    xC${b+1} = xTexelC${b};
                    `:m+=`
                    xCOffset = xC + ${I};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                      xTexelC${b+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${b+1}.zw = vec2(0.0);
                      }
                      xTexelC${b+1}Ready = 1;
                    }

                    xC${b+1} = xTexelC${b+1};
                    `}}else b<p&&(a%2===1?(m+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b}Ready == 0) {
                  xTexelC${b} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${b}.zw = vec2(0.0);
                  }
                  xTexelC${b}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${b+1}Ready == 0) {
                  xTexelC${b+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${b+1}.zw = vec2(0.0);
                  }
                  xTexelC${b+1}Ready = 1;
                }

                xC${b} = vec4(xTexelC${b}.zw, xTexelC${b+1}.zw);
              `,b+1<p&&(m+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${b+1} = vec4(xTexelC${b+1}.xy, final.xy);
                `)):(m+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${b}Ready == 0) {
                  xTexelC${b} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${b}.zw = vec2(0.0);
                  }
                  xTexelC${b}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                  xTexelC${b+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${b+1}.zw = vec2(0.);
                  }
                  xTexelC${b+1}Ready = 1;
                }

                xC${b} = vec4(
                  xTexelC${b}.xy, xTexelC${b+1}.xy);
              `,b+1<p&&(m+=`
                  xC${b+1} = vec4(xTexelC${b}.zw, xTexelC${b+1}.zw);
                `)));b<p&&(m+=`
            wTexel = getW(r, ${b}, d1, q);
            dotProd += xC${b} * vec4(wTexel.xz, wTexel.xz);
          `,b+1<p&&(m+=`
              wTexel = getW(r, ${b+1}, d1, q);
              dotProd += xC${b+1} * vec4(wTexel.xz, wTexel.xz);
            `))}m+=`
    }
  `,m+=`
      }
    `;let f="",g="";o&&(n?f=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${o}
        }`:i?f=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${o}
        }`:f=`vec4 activation(vec4 x) {
          ${o}
        }`,g="result = activation(result);");let x=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),n&&this.variableNames.push("preluActivationWeights"),i&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${f}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${s};
        int q = d2 - d1 * ${s};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${m}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${x}
        ${g}
        setOutput(result);
      }
    `}};function vZ(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,filter:i}=t,{strides:s,pad:a,dilations:l,dimRoundingMode:u}=o,c=l;c==null&&(c=[1,1]),S.assert($.eitherStridesOrDilationsAreOne(s,c),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${s} and dilations '${c}'`);let p=$.computeConv2DInfo(n.shape,i.shape,s,c,a,u,!0),d;G().getBool("WEBGL_PACK_DEPTHWISECONV")&&p.strideWidth<=2&&p.outChannels/p.inChannels===1?d=new Uc(p):d=new zc(p);let m=[[p.padInfo.top,p.padInfo.left],[p.strideHeight,p.strideWidth],[p.dilationHeight,p.dilationWidth],[p.inHeight,p.inWidth]];return e.runWebGLProgram(d,[n,i],"float32",m)}var fD={kernelName:yl,backendName:"webgl",kernelFunc:vZ};var F0=class{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;let e=t.strideHeight,o=t.strideWidth,n=t.padInfo.top,i=t.padInfo.left,s=t.outChannels/t.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${s} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${t.batchSize}; b++) {
          for (int yR = 0; yR < ${t.outHeight}; yR++) {
            int xR = wR + yR * ${e} - ${n};

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${t.outWidth}; yC++) {
              int xC = wC + yC * ${o} - ${i};

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}},O0=class{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;let e=t.filterHeight,o=t.filterWidth,n=t.strideHeight,i=t.strideWidth,s=e-1-t.padInfo.top,a=o-1-t.padInfo.left,l=t.outChannels/t.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${s}, ${a});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${e}; wR++) {
          float dyR = float(dyRCorner + wR) / ${n}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${e} - 1 - wR;

          for (int wC = 0; wC < ${o}; wC++) {
            float dyC = float(dyCCorner + wC) / ${i}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${o} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${l}; dm++) {
              int d2 = d1 * ${l} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function bZ(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,dy:i}=t,{strides:s,dilations:a,pad:l,dimRoundingMode:u,filterShape:c}=o,p=$.computeConv2DInfo(n.shape,c,s,a,l,u,!0),d=new F0(p);return e.runWebGLProgram(d,[n,i],"float32")}var hD={kernelName:vl,backendName:"webgl",kernelFunc:bZ};function SZ(r){let{inputs:t,backend:e,attrs:o}=r,{dy:n,filter:i}=t,{strides:s,dilations:a,pad:l,dimRoundingMode:u,inputShape:c}=o,p=$.computeConv2DInfo(c,i.shape,s,a,l,u,!0),d=new O0(p);return e.runWebGLProgram(d,[n,i],"float32")}var gD={kernelName:bl,backendName:"webgl",kernelFunc:SZ};var L0=class{constructor(t){this.variableNames=["X"],this.outputShape=[t,t],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}};function wZ(r){let{inputs:t,backend:e}=r,{x:o}=t,n=[...o.shape,...o.shape],i=S.sizeFromShape(o.shape),s=le({inputs:{x:o},backend:e,attrs:{shape:[i]}}),a=new L0(i),l=e.runWebGLProgram(a,[s],s.dtype),u=le({inputs:{x:l},backend:e,attrs:{shape:n}});return e.disposeIntermediateTensorInfo(s),e.disposeIntermediateTensorInfo(l),u}var xD={kernelName:Sl,backendName:"webgl",kernelFunc:wZ};var M0=class{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;let{inHeight:e,inWidth:o,padInfo:n,strideHeight:i,strideWidth:s,filterHeight:a,filterWidth:l,dilationHeight:u,dilationWidth:c}=t,{top:p,left:d}=n;this.userCode=`
      const ivec2 strides = ivec2(${i}, ${s});
      const ivec2 pads = ivec2(${p}, ${d});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${a}; h++) {
          int hIn = hBeg + h * ${u};

          if (hIn >= 0 && hIn < ${e}) {
            for (int w = 0; w < ${l}; w++) {
              int wIn = wBeg + w * ${c};

              if (wIn >= 0 && wIn < ${o}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}};function CZ(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,filter:i}=t,{strides:s,pad:a,dilations:l}=o,u=$.computeDilation2DInfo(n.shape,i.shape,s,a,"NHWC",l),c,p=new M0(u);c=e.runWebGLProgram(p,[n,i],"float32");let d=le({inputs:{x:c},backend:e,attrs:{shape:u.outShape}});return e.disposeIntermediateTensorInfo(c),d}var yD={kernelName:wl,backendName:"webgl",kernelFunc:CZ};function _Z(r){let{inputs:t,backend:e,attrs:o}=r,{equation:n}=o,i=t,{allDims:s,summedDims:a,idDims:l}=$.decodeEinsumEquation(n,i.length);$.checkEinsumDimSizes(s.length,l,i);let{path:u,steps:c}=$.getEinsumComputePath(a,l),p=c.length,d=null,m=s.length,f=[];for(let g=0;g<p;++g){for(let x of c[g]){let{permutationIndices:y,expandDims:b}=$.getEinsumPermutation(m,l[x]),I;$.isIdentityPermutation(y)?I=i[x]:(I=yt({inputs:{x:i[x]},backend:e,attrs:{perm:y}}),f.push(I));let N=I.shape.slice();for(let F=0;F<b.length;++F)N.splice(b[F],0,1);S.arraysEqual(I.shape,N)||(I=le({inputs:{x:I},backend:e,attrs:{shape:N}}),f.push(I)),d===null?d=I:(d=nd({inputs:{a:I,b:d},backend:e}),f.push(d))}g<p-1&&(u[g]>=0&&(d=la({inputs:{x:d},backend:e,attrs:{axis:u[g]-(s.length-m),keepDims:!1}}),f.push(d)),m--)}for(let g of f)g!==d&&e.disposeIntermediateTensorInfo(g);return d}var vD={kernelName:_l,backendName:"webgl",kernelFunc:_Z};var kZ="return (x >= 0.0) ? x : (exp(x) - 1.0);",IZ=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,TZ=Ie({opSnippet:kZ,packedOpSnippet:IZ}),bD={kernelName:kl,backendName:"webgl",kernelFunc:TZ};var EZ="return (b >= 0.0) ? a : a * (b + 1.0);",NZ=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,RZ=r=>{let{inputs:t,backend:e}=r,{dy:o,y:n}=t,i=G().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new oo(NZ,o.shape,n.shape):new Mr(EZ,o.shape,n.shape);return e.runWebGLProgram(i,[o,n],o.dtype)},SD={kernelName:Jd,backendName:"webgl",kernelFunc:RZ};var $Z=`
  return vec4(equal(a, b));
`,PZ="return float(a == b);",AZ=it({opSnippet:PZ,packedOpSnippet:$Z,dtype:"bool",cpuKernelImpl:eP}),wD={kernelName:si,backendName:"webgl",kernelFunc:AZ};var DZ=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${$.ERF_P};
  float a1 = ${$.ERF_A1};
  float a2 = ${$.ERF_A2};
  float a3 = ${$.ERF_A3};
  float a4 = ${$.ERF_A4};
  float a5 = ${$.ERF_A5};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,FZ=Ie({opSnippet:DZ}),CD={kernelName:Il,backendName:"webgl",kernelFunc:FZ};var OZ=No+`
  return exp(x);
`,LZ=`
  vec4 result = exp(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,eb=Ie({opSnippet:OZ,packedOpSnippet:LZ,cpuKernelImpl:tP,dtype:"float32"}),_D={kernelName:ai,backendName:"webgl",kernelFunc:eb};function B0(r){let{inputs:t,attrs:e,backend:o}=r,{dim:n}=e,{input:i}=t,s=i.shape.length,a=i.shape.slice(),l=n;return n<0&&(S.assert(-(s+1)<=n,()=>`Axis must be in the interval [${-(s+1)}, ${s}]`),l=s+n+1),a.splice(l,0,1),le({inputs:{x:i},backend:o,attrs:{shape:a}})}var kD={kernelName:Tl,backendName:"webgl",kernelFunc:B0};var ID="return exp(x) - 1.0;",MZ=Ie({opSnippet:ID,packedOpSnippet:ID,cpuKernelImpl:rP}),TD={kernelName:li,backendName:"webgl",kernelFunc:MZ};var ad=class{constructor(t,e,o){this.variableNames=["real","imag"];let n=e[1];this.outputShape=e;let i=o?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,s=o?`${n}.0`:"1.0",a;if(t==="real")a="return real * expR - imag * expI;";else if(t==="imag")a="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${t}.`);this.userCode=`
      const float exponentMultiplier = ${i};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${a}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${n});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${n}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${s};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}};function V0(r,t,e){let o=e.texData.get(r.dataId),n=S.sizeFromShape(r.shape),i=r.shape[r.shape.length-1],s=n/i,a=le({inputs:{x:r},backend:e,attrs:{shape:[s,i]}}),l=a.shape,u=new ad("real",l,t),c=new ad("imag",l,t),p=[{dataId:o.complexTensorInfos.real.dataId,dtype:o.complexTensorInfos.real.dtype,shape:l},{dataId:o.complexTensorInfos.imag.dataId,dtype:o.complexTensorInfos.imag.dtype,shape:l}],d=e.runWebGLProgram(u,p,"float32"),m=e.runWebGLProgram(c,p,"float32"),f=Br({inputs:{real:d,imag:m},backend:e});e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(m);let g=le({inputs:{x:f},backend:e,attrs:{shape:r.shape}});return e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(f),g}function BZ(r){let{inputs:t,backend:e}=r,{input:o}=t;return V0(o,!1,e)}var ED={kernelName:El,backendName:"webgl",kernelFunc:BZ};var W0=class{constructor(t,e){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=t,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}};function Kn(r){let{backend:t,attrs:e}=r,{shape:o,value:n}=e,{dtype:i}=e;if(i=i||S.inferDtype(n),i==="string"){let s=S.getArrayFromDType(i,S.sizeFromShape(o));return s.fill(n),t.makeTensorInfo(o,i,s)}else{let s=new W0(o,n),a=[[n]];return t.runWebGLProgram(s,[],i,a)}}var ND={kernelName:Nl,backendName:"webgl",kernelFunc:Kn};var z0=class{constructor(t){this.variableNames=["Image"],this.outputShape=[];let e=t[2];this.outputShape=t,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${e} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${e}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}};var RD={kernelName:Rl,backendName:"webgl",kernelFunc:({inputs:r,backend:t})=>{let{image:e}=r,o=t,n=new z0(e.shape);return o.runWebGLProgram(n,[e],e.dtype)}};var $D="return floor(x);",VZ=Ie({opSnippet:$D,packedOpSnippet:$D,cpuKernelImpl:oP}),PD={kernelName:ui,backendName:"webgl",kernelFunc:VZ};var WZ=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,zZ=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,UZ=it({opSnippet:WZ,packedOpSnippet:zZ,dtype:"int32"}),AD={kernelName:ci,backendName:"webgl",kernelFunc:UZ};var U0=class{constructor(t){this.variableNames=["A"];let e=wt(),[o,n]=t;this.outputShape=t,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${n}.0, ${o}.0);

        vec4 values = ${e.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}};var G0=class{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;let e=wt(),[o,n]=t;this.outputShape=t,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${n}.0, ${o}.0);
            vec4 values = ${e.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${e.output} = result;
      }
    `}};var DD={kernelName:bs,backendName:"webgl",kernelFunc:GZ},Gc,tb=G().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");function GZ(r){let{inputs:t,backend:e,attrs:o}=r,{pixels:n}=t,{numChannels:i}=o,s=typeof HTMLVideoElement<"u"&&n instanceof HTMLVideoElement,a=typeof HTMLImageElement<"u"&&n instanceof HTMLImageElement,[l,u]=s?[n.videoWidth,n.videoHeight]:[n.width,n.height],c=[u,l],p=[u,l,i];if(a||s){let g=G().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(Gc==null||g!==tb)&&(tb=g,Gc=document.createElement("canvas").getContext("2d",{willReadFrequently:tb})),Gc.canvas.width=l,Gc.canvas.height=u,Gc.drawImage(n,0,0,l,u),n=Gc.canvas}let d=e.makeTensorInfo(c,"int32");e.texData.get(d.dataId).usage=fr.PIXELS,e.gpgpu.uploadPixelDataToTexture(e.getTexture(d.dataId),n);let m=G().getBool("WEBGL_PACK")?new G0(p):new U0(p),f=e.runWebGLProgram(m,[d],"int32");return e.disposeData(d.dataId),f}function HZ(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,filter:i,bias:s,preluActivationWeights:a}=t,{strides:l,pad:u,dataFormat:c,dilations:p,dimRoundingMode:d,activation:m,leakyreluAlpha:f}=o,g=$.convertConv2DDataFormat(c),x=$.computeConv2DInfo(n.shape,i.shape,l,p,u,d,!1,g),y,b=[],I=s!=null,N=a!=null,F=m==="leakyrelu",B=()=>{let H=[n,i],K=(X,te)=>{if(te==="NCHW"&&X.shape.length===1&&X.shape[0]!==1){let ue=le({inputs:{x:X},backend:e,attrs:{shape:[X.shape[0],1,1]}});return b.push(ue),ue}return X};if(I&&H.push(K(s,c)),N&&H.push(K(a,c)),F){let X=e.makeTensorInfo([],"float32",S.createScalarValue(f,"float32"));H.push(X),b.push(X)}return H};if(x.filterHeight===1&&x.filterWidth===1&&x.dilationHeight===1&&x.dilationWidth===1&&x.strideHeight===1&&x.strideWidth===1&&(x.padInfo.type==="SAME"||x.padInfo.type==="VALID"))y=k0({x:n,filter:i,convInfo:x,backend:e,bias:s,activation:m,preluActivationWeights:a,leakyreluAlpha:f});else if(x.strideWidth<=2&&g==="channelsLast"&&G().getBool("WEBGL_EXP_CONV")){let H=m?Gn(m,!0):null,K=new Vc(x,I,H,N,F),X=[[x.padInfo.top,x.padInfo.left],[x.strideHeight,x.strideWidth],[x.dilationHeight,x.dilationWidth],[x.inHeight,x.inWidth]],te=B();y=e.runWebGLProgram(K,te,"float32",X)}else if(G().getBool("WEBGL_CONV_IM2COL"))y=I0({x:n,filter:i,convInfo:x,backend:e,bias:s,activation:m,preluActivationWeights:a,leakyreluAlpha:f});else{let H=m?Gn(m,!1):null,K=new Bc(x,I,H,N,F),X=B();y=e.runWebGLProgram(K,X,"float32")}let z=le({inputs:{x:y},backend:e,attrs:{shape:x.outShape}});return b.push(y),b.forEach(H=>e.disposeIntermediateTensorInfo(H)),z}var FD={kernelName:ws,backendName:"webgl",kernelFunc:HZ};function KZ(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,filter:i,bias:s,preluActivationWeights:a}=t,{strides:l,pad:u,dilations:c,dimRoundingMode:p,activation:d,leakyreluAlpha:m}=o,f=[],g=c;g==null&&(g=[1,1]),S.assert($.eitherStridesOrDilationsAreOne(l,g),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${g}'`);let x=$.computeConv2DInfo(n.shape,i.shape,l,g,u,p,!0),y=G().getBool("WEBGL_PACK_DEPTHWISECONV")&&x.strideWidth<=2&&x.outChannels/x.inChannels===1,b=d?Gn(d,y):null,I=[n,i],N=s!=null,F=a!=null,B=d==="leakyrelu";if(N&&I.push(s),F&&I.push(a),B){let X=e.makeTensorInfo([],"float32",S.createScalarValue(m,"float32"));I.push(X),f.push(X)}let z;y?z=new Uc(x,N,b,F,B):z=new zc(x,N,b,F,B);let H=[[x.padInfo.top,x.padInfo.left],[x.strideHeight,x.strideWidth],[x.dilationHeight,x.dilationWidth],[x.inHeight,x.inWidth]],K=e.runWebGLProgram(z,I,"float32",H);return f.forEach(X=>e.disposeIntermediateTensorInfo(X)),K}var OD={kernelName:Cs,backendName:"webgl",kernelFunc:KZ};var H0=class{constructor(t,e,o,n){this.sliceDim=t,this.strides=e,this.paramsShape=n,this.variableNames=["x","indices"],this.outputShape=o;let i=Me(o.length),s=`
    int index;`;for(let a=0;a<this.sliceDim;a++)s+=`
          index = round(getIndices(coords[0], ${a}));
          out_of_bounds = out_of_bounds || index < 0;
          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[a]};
          flattenIndex += index * ${this.strides[a]};`;this.userCode=`
         void main() {
          ${i} coords = getOutputCoords();
          int flattenIndex = 0;
          bool out_of_bounds = false;

          ${s}

          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));
        }
      `}};function qZ(r){let{inputs:t,backend:e}=r,{params:o,indices:n}=t,i=n.shape,s=i[i.length-1],a=S.sizeFromShape(o.shape),[l,u,c,p]=$.prepareAndValidate(o,n),d=le({inputs:{x:n},backend:e,attrs:{shape:[u,s]}}),m=le({inputs:{x:o},backend:e,attrs:{shape:[S.sizeFromShape(o.shape)/c,c]}});if(e.shouldExecuteOnCPU([o,n])||o.dtype==="string"){let y=e.readSync(n.dataId),b=e.bufferSync(o),I=nP(y,b,o.dtype,u,s,c,p,o.shape,a);return e.makeTensorInfo(l,o.dtype,I.values)}let f=new H0(s,p,[u,c],o.shape),g=e.runWebGLProgram(f,[m,d],m.dtype),x=le({inputs:{x:g},backend:e,attrs:{shape:l}});return e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(g),x}var LD={kernelName:Al,backendName:"webgl",kernelFunc:qZ};var K0=class{constructor(t,e){this.variableNames=["A","indices"],this.outputShape=e,this.rank=e.length;let o=Me(this.rank),n=jZ(t,2);this.userCode=`
      void main() {
        ${o} resRC = getOutputCoords();
        int index = int(getIndices(resRC.x, resRC.z));
        float inBounds = (index >= 0) && (index < ${t[2]}) ? 1.0 : 0.0;
        setOutput(inBounds * getA(${n}));
      }
    `}};function jZ(r,t){let e=["resRC.x","resRC.y","resRC.z","resRC.w"],o=[];for(let n=0;n<r.length;n++)n===2?o.push("index"):o.push(`${e[n]}`);return o.join()}function rb(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,indices:i}=t,{axis:s,batchDims:a}=o,l=S.parseAxisParam(s,n.shape)[0];if(G().get("DEBUG")){let b=e.readSync(i.dataId),I=n.shape[l];for(let N=0;N<b.length;++N){let F=b[N];S.assert(F<=I-1&&F>=0,()=>`GatherV2: the index value ${F} is not in [0, ${I-1}]`)}}let u=$.segment_util.collectGatherOpShapeInfo(n,i,l,a),c=S.sizeFromShape(i.shape),p=[],d=le({inputs:{x:n},backend:e,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),m=le({inputs:{x:i},backend:e,attrs:{shape:[u.batchSize,c/u.batchSize]}});p.push(d),p.push(m);let f=[u.batchSize,u.outerSize,c/u.batchSize,u.sliceSize];if(e.shouldExecuteOnCPU([n,i])||n.dtype==="string"){let b=e.bufferSync(m),I=e.bufferSync(d),N=iP(I,b,f);return p.forEach(F=>e.disposeIntermediateTensorInfo(F)),e.makeTensorInfo(u.outputShape,N.dtype,N.values)}let g=new K0(d.shape,f),x=e.runWebGLProgram(g,[d,m],d.dtype);p.push(x);let y=le({inputs:{x},backend:e,attrs:{shape:u.outputShape}});return p.forEach(b=>e.disposeIntermediateTensorInfo(b)),y}var MD={kernelName:Pl,backendName:"webgl",kernelFunc:rb};var XZ="return float(a > b);",YZ=`
  return vec4(greaterThan(a, b));
`,QZ=it({opSnippet:XZ,packedOpSnippet:YZ,cpuKernelImpl:sP,dtype:"bool"}),BD={kernelName:pi,backendName:"webgl",kernelFunc:QZ};var ZZ="return float(a >= b);",JZ=`
  return vec4(greaterThanEqual(a, b));
`,eJ=it({opSnippet:ZZ,packedOpSnippet:JZ,dtype:"bool",cpuKernelImpl:aP}),VD={kernelName:di,backendName:"webgl",kernelFunc:eJ};function tJ(r){let{inputs:t,backend:e}=r,{input:o}=t;return V0(o,!0,e)}var WD={kernelName:Dl,backendName:"webgl",kernelFunc:tJ};var rJ="return float(!isnan(x) && !isinf(x));",oJ=Ie({opSnippet:rJ,dtype:"bool"}),zD={kernelName:Ol,backendName:"webgl",kernelFunc:oJ};var nJ="return float(isinf(x));",iJ=Ie({opSnippet:nJ,dtype:"bool"}),UD={kernelName:Ll,backendName:"webgl",kernelFunc:iJ};var sJ="return float(isnan(x));",aJ=Ie({opSnippet:sJ,dtype:"bool"}),GD={kernelName:Ml,backendName:"webgl",kernelFunc:aJ};var lJ="return float(a < b);",uJ=`
  return vec4(lessThan(a, b));
`,cJ=it({opSnippet:lJ,packedOpSnippet:uJ,cpuKernelImpl:lP,dtype:"bool"}),HD={kernelName:mi,backendName:"webgl",kernelFunc:cJ};var pJ="return float(a <= b);",dJ=`
  return vec4(lessThanEqual(a, b));
`,mJ=it({opSnippet:pJ,packedOpSnippet:dJ,cpuKernelImpl:uP,dtype:"bool"}),KD={kernelName:fi,backendName:"webgl",kernelFunc:mJ};function fJ(r){let{backend:t,attrs:e}=r,{start:o,stop:n,num:i}=e,s=cP(o,n,i);return t.makeTensorInfo([s.length],"float32",s)}var qD={kernelName:Vl,backendName:"webgl",kernelFunc:fJ};var hJ=No+`
  return x < 0.0 ? 0./0. : log(x);
`,gJ=`
  vec4 result = log(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);
  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);
  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);
  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);
  return result;
`,xJ=Ie({opSnippet:hJ,packedOpSnippet:gJ,cpuKernelImpl:pP}),jD={kernelName:hi,backendName:"webgl",kernelFunc:xJ};var yJ=No+`
  return log(1.0 + x);
`,vJ=Ie({opSnippet:yJ}),XD={kernelName:Wl,backendName:"webgl",kernelFunc:vJ};var bJ="return float(a >= 1.0 && b >= 1.0);",SJ=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,wJ=it({opSnippet:bJ,packedOpSnippet:SJ,dtype:"bool"}),YD={kernelName:zl,backendName:"webgl",kernelFunc:wJ};var CJ="return float(!(x >= 1.0));",_J=Ie({opSnippet:CJ}),QD={kernelName:Ul,backendName:"webgl",kernelFunc:_J};var kJ="return float(a >= 1.0 || b >= 1.0);",IJ=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,TJ=it({opSnippet:kJ,packedOpSnippet:IJ,dtype:"bool"}),ZD={kernelName:Gl,backendName:"webgl",kernelFunc:TJ};var q0=class{constructor(t,e,o,n,i){this.variableNames=["x"],this.outputShape=[];let s=e,a=t[3]-1;this.outputShape=t;let l,u=`float(${o}) + float(${n}) * sum`;i===.5?l=`inversesqrt(${u})`:i===1?l=`1.0/(${u})`:l=`exp(log(${u}) * float(-${i}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${s}; j <= ${s}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${a}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${l};
        setOutput(val);
      }
    `}};var j0=class{constructor(t,e,o,n,i){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;let s=e,a=t[3]-1;this.outputShape=t;let l,u=`float(${o}) + float(${n}) * sum`;i===.5?l=`inversesqrt(${u})`:i===1?l=`1.0/(${u})`:l=`exp(log(${u}) * float(-${i}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${s};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${s}; j <= ${s}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${a}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${l};
        setOutput(result);
      }
    `}};var EJ=r=>{let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{depthRadius:i,bias:s,alpha:a,beta:l}=o,u=G().getBool("WEBGL_PACK_NORMALIZATION")?new j0(n.shape,i,s,a,l):new q0(n.shape,i,s,a,l);return e.runWebGLProgram(u,[n],n.dtype)},JD={kernelName:Hl,backendName:"webgl",kernelFunc:EJ};var X0=class{constructor(t,e,o,n,i){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=t,this.depth=t[3],this.depthRadius=e,this.bias=o,this.alpha=n,this.beta=i,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${e})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${e} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${n}) * norm + float(${o});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${n})
                * float(${i})
                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${i});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}};var NJ=r=>{let{inputs:t,backend:e,attrs:o}=r,{x:n,y:i,dy:s}=t,{depthRadius:a,bias:l,alpha:u,beta:c}=o,p=new X0(n.shape,a,l,u,c);return e.runWebGLProgram(p,[n,i,s],n.dtype)},eF={kernelName:em,backendName:"webgl",kernelFunc:NJ};function tF(r,t,e,o){let n=S.sizeFromShape(t),s=S.sizeFromShape(r.shape)/n,a=le({inputs:{x:r},attrs:{shape:[s,n]},backend:o}),l=io(a,r.dtype,"max",o),u=le({inputs:{x:l},attrs:{shape:e},backend:o});return o.disposeIntermediateTensorInfo(a),o.disposeIntermediateTensorInfo(l),u}function ob(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{reductionIndices:i,keepDims:s}=o,a=n.shape.length,l=S.parseAxisParam(i,n.shape),u=l,c=$.getAxesPermutation(u,a),p=c!=null,d=e.shouldExecuteOnCPU([n]),m=n;if(p){if(d){let I=e.texData.get(m.dataId).values,N=new Array(a);for(let z=0;z<N.length;z++)N[z]=n.shape[c[z]];let F=aa(I,n.shape,n.dtype,c,N);m=e.makeTensorInfo(N,n.dtype);let B=e.texData.get(m.dataId);B.values=F}else m=Qi(n,c,e);u=$.getInnerMostAxes(u.length,a)}$.assertAxesAreInnerMostDims("max",u,a);let[f,g]=$.computeOutAndReduceShapes(m.shape,u),x=f;s&&(x=$.expandShapeToKeepDim(f,l));let y;if(d){let I=e.texData.get(m.dataId).values,N=dP(I,S.sizeFromShape(g),x,n.dtype);y=e.makeTensorInfo(x,n.dtype);let F=e.texData.get(y.dataId);F.values=N}else y=tF(m,g,x,e);return p&&e.disposeIntermediateTensorInfo(m),y}var rF={kernelName:Kl,backendName:"webgl",kernelFunc:ob};var RJ=Oc+`
  return max(a, b);
`,$J=`
  vec4 result = vec4(max(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+no+`
  return result;
`,PJ=it({opSnippet:RJ,packedOpSnippet:$J,cpuKernelImpl:mP}),oF={kernelName:gi,backendName:"webgl",kernelFunc:PJ};function AJ(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t;gn(n,"maxPool");let{filterSize:i,strides:s,pad:a,dimRoundingMode:l}=o,u=1;S.assert($.eitherStridesOrDilationsAreOne(s,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '${u}'`);let c=$.computePool2DInfo(n.shape,i,s,u,a,l);if(c.filterWidth===1&&c.filterHeight===1&&S.arraysEqual(c.inShape,c.outShape))return At({inputs:{x:n},backend:e});let p=new Ko(c,"max",!1);return e.runWebGLProgram(p,[n],n.dtype)}var nF={kernelName:ql,backendName:"webgl",kernelFunc:AJ};function DJ(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{filterSize:i,strides:s,pad:a,dataFormat:l,dimRoundingMode:u}=o,c=[1,1,1],p=$.computePool3DInfo(n.shape,i,s,c,a,u,l),d=new Zi(p,"max",!1);return e.runWebGLProgram(d,[n],n.dtype)}var iF={kernelName:jl,backendName:"webgl",kernelFunc:DJ};var Y0=class{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;let e=t.strideHeight,o=t.strideWidth,n=t.dilationHeight,i=t.effectiveFilterHeight,s=t.effectiveFilterWidth,a=i-1-t.padInfo.top,l=s-1-t.padInfo.left,u=i*s-1;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${l});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${i};
          wR += ${n}) {
          float dyR = float(dyRCorner + wR) / ${e}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${s}; wC++) {
            float dyC = float(dyCCorner + wC) / ${o}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${u} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${s} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}},Q0=class{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;let e=t.strideDepth,o=t.strideHeight,n=t.strideWidth,i=t.dilationDepth,s=t.dilationHeight,a=t.dilationWidth,l=t.effectiveFilterDepth,u=t.effectiveFilterHeight,c=t.effectiveFilterWidth,p=l-1-t.padInfo.front,d=u-1-t.padInfo.top,m=c-1-t.padInfo.left,f=l*u*c-1;this.userCode=`
      const ivec3 pads = ivec3(${p}, ${d}, ${m});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${l};
           wD += ${i}) {
          float dyD = float(dyDCorner + wD) / ${e}.0;

          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${u};
              wR += ${s}) {
            float dyR = float(dyRCorner + wR) / ${o}.0;

            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${c};
                wC += ${a}) {
              float dyC = float(dyCCorner + wC) / ${n}.0;

              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${f} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${u} * ${c} +
                  wR * ${c} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function FJ(r){let{inputs:t,backend:e,attrs:o}=r,{dy:n,input:i}=t,s=i,{filterSize:a,strides:l,pad:u,dimRoundingMode:c}=o,p=[1,1,1],d=$.computePool3DInfo(s.shape,a,l,p,u,c),m=new Zi(d,"max",!0),f=e.runWebGLProgram(m,[s],s.dtype),g=new Q0(d),x=e.runWebGLProgram(g,[n,f],s.dtype);return e.disposeIntermediateTensorInfo(f),x}var sF={kernelName:rm,backendName:"webgl",kernelFunc:FJ};function OJ(r){let{inputs:t,backend:e,attrs:o}=r,{dy:n,input:i,output:s}=t,a=i;gn([i,s],"maxPoolGrad");let{filterSize:l,strides:u,pad:c,dimRoundingMode:p}=o,d=$.computePool2DInfo(a.shape,l,u,1,c,p),m=!0,f=new Ko(d,"max",m),g=e.runWebGLProgram(f,[a],a.dtype),x=new Y0(d),y=e.runWebGLProgram(x,[n,g],a.dtype);return e.disposeIntermediateTensorInfo(g),y}var aF={kernelName:tm,backendName:"webgl",kernelFunc:OJ};function lF(r,t,e,o){let n=new Ko(e,"max",!1),i=o.runWebGLProgram(n,[r],"float32");n=new Ko(e,"max",!0,!0,t);let s=o.runWebGLProgram(n,[r],"float32");return[i,s]}var uF={kernelName:Xl,backendName:"webgl",kernelFunc:({inputs:r,attrs:t,backend:e})=>{let{x:o}=r,{filterSize:n,strides:i,pad:s,includeBatchInIndex:a}=t,l=e;S.assert(o.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${o.shape.length}.`);let u=[1,1];S.assert($.eitherStridesOrDilationsAreOne(i,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);let c=$.computePool2DInfo(o.shape,n,i,u,s),[p,d]=lF(o,a,c,l);return[p,d]}};function cF(r,t,e,o){let n=S.sizeFromShape(t),s=S.sizeFromShape(r.shape)/n,a=le({inputs:{x:r},attrs:{shape:[s,n]},backend:o}),l=io(a,"float32","mean",o),u=le({inputs:{x:l},attrs:{shape:e},backend:o});return o.disposeIntermediateTensorInfo(a),o.disposeIntermediateTensorInfo(l),u}var pF={kernelName:Yl,backendName:"webgl",kernelFunc:({inputs:r,attrs:t,backend:e})=>{let{x:o}=r,{keepDims:n,axis:i}=t,s=e,a=o.shape.length,l=S.parseAxisParam(i,o.shape),u=l,c=$.getAxesPermutation(u,a),p=c!=null,d=s.shouldExecuteOnCPU([o]),m=[],f=o;if(p){if(d){let N=s.texData.get(f.dataId).values,F=new Array(a);for(let H=0;H<F.length;H++)F[H]=o.shape[c[H]];let B=aa(N,o.shape,o.dtype,c,F);f=s.makeTensorInfo(F,o.dtype);let z=s.texData.get(f.dataId);z.values=B}else f=Qi(o,c,s);m.push(f),u=$.getInnerMostAxes(u.length,a)}$.assertAxesAreInnerMostDims("sum",u,a);let[g,x]=$.computeOutAndReduceShapes(f.shape,u),y=g;n&&(y=$.expandShapeToKeepDim(g,l));let b=cF(f,x,y,s);for(let I of m)s.disposeIntermediateTensorInfo(I);return b}};function LJ(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{axis:i,keepDims:s}=o,a=n.shape.length,l=S.parseAxisParam(i,n.shape),u=l,c=$.getAxesPermutation(u,a),p=n;c!=null&&(p=yt({inputs:{x:n},backend:e,attrs:{perm:c}}),u=$.getInnerMostAxes(u.length,n.shape.length)),$.assertAxesAreInnerMostDims("min",u,a);let[d,m]=$.computeOutAndReduceShapes(p.shape,u),f=S.sizeFromShape(m),g=le({inputs:{x:p},backend:e,attrs:{shape:[-1,f]}}),x=io(g,g.dtype,"min",e),y;if(s){let b=$.expandShapeToKeepDim(d,l);y=le({inputs:{x},backend:e,attrs:{shape:b}})}else y=le({inputs:{x},backend:e,attrs:{shape:d}});return e.disposeIntermediateTensorInfo(g),e.disposeIntermediateTensorInfo(x),c!=null&&e.disposeIntermediateTensorInfo(p),y}var dF={kernelName:Ql,backendName:"webgl",kernelFunc:LJ};var MJ=Oc+`
  return min(a, b);
`,BJ=`
  vec4 result = vec4(min(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+no+`
  return result;
`,VJ=it({opSnippet:MJ,packedOpSnippet:BJ,cpuKernelImpl:fP}),mF={kernelName:xi,backendName:"webgl",kernelFunc:VJ};var Z0=class{constructor(t,e,o){this.variableNames=["x"],this.outputShape=e.map((c,p)=>c[0]+t[p]+c[1]);let n=t.length,i=Me(n),s=e.map(c=>c[0]).join(","),a=e.map((c,p)=>c[0]+t[p]).join(","),l=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,n),u=o==="reflect"?0:1;if(n===1){this.userCode=`
        int start = ${s};
        int end = ${a};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${u};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${u};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${i} start = ${i}(${s});
      ${i} end = ${i}(${a});

      void main() {
        ${i} outC = getOutputCoords();
        for (int i = 0; i < ${n}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${u};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};
          }
        }
        ${i} coords = outC - start;
        setOutput(getX(${l}));
      }
    `}};var J0=class{constructor(t,e,o){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.map((f,g)=>f[0]+t[g]+f[1]);let n=t.length,i=Me(n),s=e.map(f=>f[0]).join(","),a=e.map((f,g)=>f[0]+t[g]).join(","),l=Pt("rc",n),u=Pt("source",n),c=`${l[n-1]} < ${this.outputShape[n-1]}`,p=n===1?"source":`vec2(${u.slice(-2).join()})`,d=o==="reflect"?0:1,m="";if(n===1){let f=`
        ${i} source = rc;
        if (source < start) {
          source = start * 2 - source - ${d};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${d};
        }
        source -= start;
      `;m=`
        ${i} rc = outputLoc;
        ${f}
        result[0] = getChannel(getX(${u.join()}), ${p});
        ${l[n-1]} += 1;
        if(${c}) {
          ${f}
          result[1] = getChannel(getX(${u.join()}), ${p});
        }
      `}else{let f=`
        ${i} source = rc;
        ${i} lt = ${i}(lessThan(source, start));
        ${i} gte = ${i}(greaterThanEqual(source, end));
        ${i} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${d}) +
                gte * ((end - 1) * 2 - source + ${d});
        source -= start;
      `;m=`
        ${i} rc = outputLoc;
        ${f}
        result[0] = getChannel(getX(${u.join()}), ${p});
        ${l[n-1]} += 1;
        if(${c}) {
          ${f}
          result[1] = getChannel(getX(${u.join()}), ${p});
        }
        rc = outputLoc;
        ${l[n-2]} += 1;
        if(${l[n-2]} < ${this.outputShape[n-2]}) {
          ${f}
          result[2] = getChannel(getX(${u.join()}), ${p});
          ${l[n-1]} += 1;
          if(${c}) {
            ${f}
            result[3] = getChannel(getX(${u.join()}), ${p});
          }
        }
      `}this.userCode=`
      const ${i} start = ${i}(${s});
      const ${i} end = ${i}(${a});

      void main() {
        ${i} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${m}
        setOutput(result);
      }
    `}};var WJ=({inputs:r,backend:t,attrs:e})=>{let{x:o}=r,{paddings:n,mode:i}=e,s=G().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new J0(o.shape,n,i):new Z0(o.shape,n,i);return t.runWebGLProgram(s,[o],o.dtype)},fF={kernelName:Zl,backendName:"webgl",kernelFunc:WJ};var zJ=`if (b == 0.0) return NAN;
  return mod(a, b);`,UJ=`
  vec4 result = mod(a, b);
  bvec4 isNaN = equal(b, vec4(0.0));
  `+no+`
  return result;
`,GJ=it({opSnippet:zJ,packedOpSnippet:UJ}),hF={kernelName:Jl,backendName:"webgl",kernelFunc:GJ};var ex=class{constructor(t,e,o){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[t,o],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${e-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${e-1}));
      }
    `}};var HJ=`
if (a == b) {
  return 1.0;
};
return a / b;`,KJ=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,nb=it({opSnippet:HJ,packedOpSnippet:KJ,checkOutOfBounds:!0}),gF={kernelName:Cl,backendName:"webgl",kernelFunc:nb};var xF="return a - b;",ib=it({opSnippet:xF,packedOpSnippet:xF,supportsComplex:!0,cpuKernelImpl:FP}),yF={kernelName:_i,backendName:"webgl",kernelFunc:ib};function sb(r){let{inputs:t,backend:e,attrs:o}=r,{logits:n}=t,{dim:i}=o,s=S.parseAxisParam([i],n.shape),a=ob({inputs:{x:n},backend:e,attrs:{reductionIndices:s,keepDims:!1}}),l=$.expandShapeToKeepDim(a.shape,s),u=le({inputs:{x:a},backend:e,attrs:{shape:l}}),c=ib({inputs:{a:n,b:u},backend:e}),p=eb({inputs:{x:c},backend:e}),d=la({inputs:{x:p},backend:e,attrs:{axis:s,keepDims:!1}}),m=le({inputs:{x:d},backend:e,attrs:{shape:l}}),f=nb({inputs:{a:p,b:m},backend:e});return e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(u),e.disposeIntermediateTensorInfo(c),e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(m),f}var vF={kernelName:Ru,backendName:"webgl",kernelFunc:sb};function qJ(r){let{inputs:t,backend:e,attrs:o}=r,{logits:n}=t,{numSamples:i,seed:s,normalized:a}=o,l=a?n:sb({inputs:{logits:n},backend:e,attrs:{dim:n.shape.length-1}}),u=l.shape[0],c=l.shape[1],p=new ex(u,c,i),d=[[s]],m=e.runWebGLProgram(p,[l],"int32",d);return a||e.disposeIntermediateTensorInfo(l),m}var bF={kernelName:eu,backendName:"webgl",kernelFunc:qJ};var jJ=Vt+`
  return -x;
`,XJ=`
  vec4 result = -x;
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`;function YJ(r){let{inputs:t,backend:e}=r,{x:o}=t;if(e.shouldExecuteOnCPU([o])){let i=e.texData.get(o.dataId),[s,a]=gP(i.values,o.shape,o.dtype);return e.makeTensorInfo(a,o.dtype,s)}let n;return G().getBool("WEBGL_PACK_UNARY_OPERATIONS")?n=new Lr(o.shape,XJ):n=new Zt(o.shape,jJ),e.runWebGLProgram(n,[o],o.dtype)}var SF={kernelName:gs,backendName:"webgl",kernelFunc:YJ};var QJ=Xr.nonMaxSuppressionV3Impl;function ZJ(r){$.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:e,attrs:o}=r,{boxes:n,scores:i}=t,{maxOutputSize:s,iouThreshold:a,scoreThreshold:l}=o,u=e.readSync(n.dataId),c=e.readSync(i.dataId),{selectedIndices:p}=QJ(u,c,s,a,l);return e.makeTensorInfo([p.length],"int32",new Int32Array(p))}var wF={kernelName:tu,backendName:"webgl",kernelFunc:ZJ};var JJ=Xr.nonMaxSuppressionV4Impl;function eee(r){$.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:e,attrs:o}=r,{boxes:n,scores:i}=t,{maxOutputSize:s,iouThreshold:a,scoreThreshold:l,padToMaxOutputSize:u}=o,c=e.readSync(n.dataId),p=e.readSync(i.dataId),{selectedIndices:d,validOutputs:m}=JJ(c,p,s,a,l,u);return[e.makeTensorInfo([d.length],"int32",new Int32Array(d)),e.makeTensorInfo([],"int32",new Int32Array([m]))]}var CF={kernelName:om,backendName:"webgl",kernelFunc:eee};var tee=Xr.nonMaxSuppressionV5Impl;function ree(r){$.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:e,attrs:o}=r,{boxes:n,scores:i}=t,{maxOutputSize:s,iouThreshold:a,scoreThreshold:l,softNmsSigma:u}=o,c=e.readSync(n.dataId),p=e.readSync(i.dataId),d=s,m=a,f=l,g=u,{selectedIndices:x,selectedScores:y}=tee(c,p,d,m,f,g);return[e.makeTensorInfo([x.length],"int32",new Int32Array(x)),e.makeTensorInfo([y.length],"float32",new Float32Array(y))]}var _F={kernelName:ru,backendName:"webgl",kernelFunc:ree};var tx=class{constructor(t,e,o,n){this.variableNames=["indices"],this.outputShape=[t,e],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${n}), float(${o}),
                      float(index == coords.y)));
      }
    `}};var oee=r=>{let{inputs:t,backend:e,attrs:o}=r,{indices:n}=t,{dtype:i,depth:s,onValue:a,offValue:l}=o,u=S.sizeFromShape(n.shape),c=new tx(u,s,a,l),p=le({inputs:{x:n},backend:e,attrs:{shape:[u]}}),d=e.runWebGLProgram(c,[p],i);e.disposeIntermediateTensorInfo(p);let m=[...n.shape,s],f=le({inputs:{x:d},backend:e,attrs:{shape:m}});return e.disposeIntermediateTensorInfo(d),f},kF={kernelName:nu,backendName:"webgl",kernelFunc:oee};function ld(r){let{inputs:t,backend:e}=r,{x:o}=t;if(o.dtype==="complex64"){let n=Hn({inputs:{input:o},backend:e}),i=ld({inputs:{x:n},backend:e}),s=ca({inputs:{input:o},backend:e}),a=ld({inputs:{x:s},backend:e}),l=Br({inputs:{real:i,imag:a},backend:e});return e.disposeIntermediateTensorInfo(n),e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(s),e.disposeIntermediateTensorInfo(a),l}else return Kn({attrs:{shape:o.shape,dtype:o.dtype,value:o.dtype==="string"?"":0},backend:e})}var IF={kernelName:Uu,backendName:"webgl",kernelFunc:ld};function TF(r){let{inputs:t,backend:e}=r,{x:o}=t;if(o.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(o.dtype==="complex64"){let n=Hn({inputs:{input:o},backend:e}),i=TF({inputs:{x:n},backend:e}),s=ca({inputs:{input:o},backend:e}),a=ld({inputs:{x:s},backend:e}),l=Br({inputs:{real:i,imag:a},backend:e});return e.disposeIntermediateTensorInfo(n),e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(s),e.disposeIntermediateTensorInfo(a),l}else return Kn({attrs:{shape:o.shape,dtype:o.dtype,value:1},backend:e})}var EF={kernelName:ou,backendName:"webgl",kernelFunc:TF};function nee(r){let{inputs:t,backend:e,attrs:o}=r,{axis:n}=o;if(t.length===1)return B0({inputs:{input:t[0]},backend:e,attrs:{dim:n}});let i=t[0].shape,s=t[0].dtype;t.forEach(c=>{S.assertShapesMatch(i,c.shape,"All tensors passed to stack must have matching shapes"),S.assert(s===c.dtype,()=>"All tensors passed to stack must have matching dtypes")});let a=[],l=t.map(c=>{let p=B0({inputs:{input:c},backend:e,attrs:{dim:n}});return a.push(p),p}),u=Jv({inputs:l,backend:e,attrs:{axis:n}});return a.forEach(c=>e.disposeIntermediateTensorInfo(c)),u}var NF={kernelName:iu,backendName:"webgl",kernelFunc:nee};var rx=class{constructor(t,e,o){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=e.map((u,c)=>u[0]+t[c]+u[1]);let n=t.length,i=Me(n),s=e.map(u=>u[0]).join(","),a=e.map((u,c)=>u[0]+t[c]).join(","),l=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,n);if(n===1){this.userCode=`
        int start = ${s};
        int end = ${a};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${i} start = ${i}(${s});
      ${i} end = ${i}(${a});

      void main() {
        ${i} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${i} coords = outC - start;
          setOutput(getX(${l}));
        }
      }
    `}};var ox=class{constructor(t,e,o){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=e.map((g,x)=>g[0]+t[x]+g[1]);let n=t.length,i=Me(n),s=e.map(g=>g[0]).join(","),a=e.map((g,x)=>g[0]+t[x]).join(","),l=Pt("rc",n),u=Pt("source",n),c=`${l[n-1]} < ${this.outputShape[n-1]}`,p=n===1?"source":`vec2(${u.slice(-2).join()})`,d=[`${i} rc = outputLoc;`,`${l[n-1]} += 1;
       if(${c}) {
      `,n===1?"":`}
       rc = outputLoc;
       ${l[n-2]} += 1;
       if(${l[n-2]} < ${this.outputShape[n-2]}) {`,n===1?"":`  ${l[n-1]} += 1;
         if(${c}) {`],m=n===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))",f="";for(let g=0,x=n===1?2:4;g<x;g++)f+=`
        ${d[g]}
        if (${m}) {
          result[${g}] = float(value);
        } else {
          ${i} source = rc - start;
          result[${g}] = getChannel(getX(${u.join()}), ${p});
        }
      `;f+=n===1?"} ":"}}",this.userCode=`
      const ${i} start = ${i}(${s});
      const ${i} end = ${i}(${a});

      void main() {
        ${i} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${f}
        setOutput(result);
      }
    `}};var ab=r=>{let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{paddings:i,constantValue:s}=o;if(S.sizeFromShape(n.shape)===0){let u=i.map((c,p)=>c[0]+n.shape[p]+c[1]);return Kn({backend:e,attrs:{shape:u,value:s,dtype:n.dtype}})}let a=G().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new ox(n.shape,i,s):new rx(n.shape,i,s),l=[[s]];return e.runWebGLProgram(a,[n],n.dtype,l)},RF={kernelName:su,backendName:"webgl",kernelFunc:ab};var iee=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,see=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  bvec4 isNaN1 = lessThan(a, vec4(0.0));
  bvec4 isNaN2 = lessThan(floor(b), b);
  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);
  `+no+`
  return result;
`,aee=it({opSnippet:iee,packedOpSnippet:see}),$F={kernelName:au,backendName:"webgl",kernelFunc:aee};function lee(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{axis:i,keepDims:s}=o,a=n.shape.length,l=[],u=S.parseAxisParam(i,n.shape),c=u,p=$.getAxesPermutation(c,a),d=n;p!=null&&(d=yt({inputs:{x:n},backend:e,attrs:{perm:p}}),c=$.getInnerMostAxes(c.length,a),l.push(d)),$.assertAxesAreInnerMostDims("prod",c,a);let m;if(e.shouldExecuteOnCPU([d])){let f=e.texData.get(d.dataId).values,{outVals:g,outShape:x,outDtype:y}=yP(d.shape,d.dtype,f,c);m=e.makeTensorInfo(x,y,g)}else{let[f,g]=$.computeOutAndReduceShapes(d.shape,c),x=S.sizeFromShape(g),y=le({inputs:{x:d},backend:e,attrs:{shape:[-1,x]}}),b=Nn(n.dtype),I=io(y,b,"prod",e);m=le({inputs:{x:I},backend:e,attrs:{shape:f}}),l.push(y),l.push(I)}if(s){l.push(m);let f=$.expandShapeToKeepDim(m.shape,u);m=le({inputs:{x:m},backend:e,attrs:{shape:f}})}return l.forEach(f=>e.disposeIntermediateTensorInfo(f)),m}var PF={kernelName:xs,backendName:"webgl",kernelFunc:lee};function uee(r){let{inputs:t,backend:e,attrs:o}=r,{paramsNestedSplits:n,paramsDenseValues:i,indices:s}=t,{outputRaggedRank:a}=o,l=n.map(y=>e.readSync(y.dataId)),u=n.map(y=>y.shape),c=e.readSync(i.dataId),p=e.readSync(s.dataId),[d,m,f]=vP(l,u,c,i.shape,i.dtype,p,s.shape,a),g=d.map(y=>e.makeTensorInfo([y.length],"int32",y)),x=e.makeTensorInfo(f,i.dtype,m);return g.concat([x])}var AF={kernelName:nm,backendName:"webgl",kernelFunc:uee};function cee(r){let{inputs:t,backend:e}=r,{starts:o,limits:n,deltas:i}=t,s=e.readSync(o.dataId),a=e.readSync(n.dataId),l=e.readSync(i.dataId),[u,c]=bP(s,o.shape,o.dtype,a,n.shape,l,i.shape),p=e.makeTensorInfo([u.length],"int32",u),d=e.makeTensorInfo([c.length],o.dtype,c);return[p,d]}var DF={kernelName:im,backendName:"webgl",kernelFunc:cee};function pee(r){let{inputs:t,backend:e,attrs:o}=r,{shape:n,values:i,defaultValue:s,rowPartitionTensors:a}=t,{rowPartitionTypes:l}=o,u=e.readSync(n.dataId),c=e.readSync(i.dataId),p=e.readSync(s.dataId),d=a.map(x=>e.readSync(x.dataId)),m=a.map(x=>x.shape),[f,g]=SP(u,n.shape,c,i.shape,i.dtype,p,s.shape,d,m,l);return e.makeTensorInfo(f,i.dtype,g)}var FF={kernelName:sm,backendName:"webgl",kernelFunc:pee};var lb=r=>{let{backend:t,attrs:e}=r,{start:o,stop:n,step:i,dtype:s}=e,a=wP(o,n,i,s);return t.makeTensorInfo([a.length],s,a)},OF={kernelName:uu,backendName:"webgl",kernelFunc:lb};var dee="return 1.0 / x;",mee=Ie({opSnippet:dee}),LF={kernelName:cu,backendName:"webgl",kernelFunc:mee};var fee=Vt+`
  return (x < 0.0) ? 0.0 : x;
`,hee=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,gee=Ie({opSnippet:fee,packedOpSnippet:hee}),MF={kernelName:pu,backendName:"webgl",kernelFunc:gee};var xee=Vt+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,yee=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,vee=Ie({opSnippet:xee,packedOpSnippet:yee}),BF={kernelName:hu,backendName:"webgl",kernelFunc:vee};var nx=class{constructor(t,e,o,n,i){this.variableNames=["A"],this.outputShape=[];let[s,a,l,u]=t;this.outputShape=[s,e,o,u];let c=[n&&e>1?a-1:a,n&&o>1?l-1:l],p=[n&&e>1?e-1:e,n&&o>1?o-1:o],d;i?d="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":d="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${c[0]/p[0]},
          ${c[1]/p[1]});
      const vec2 inputShapeRC = vec2(${a}.0, ${l}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${d};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}};var ix=class{constructor(t,e,o,n,i){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[s,a,l,u]=t;this.outputShape=[s,e,o,u];let c=[n&&e>1?a-1:a,n&&o>1?l-1:l],p=[n&&e>1?e-1:e,n&&o>1?o-1:o],d;i?d="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":d="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${c[0]/p[0]},
          ${c[1]/p[1]},
          ${c[1]/p[1]});
      const vec3 inputShapeRC = vec3(${a}.0, ${l}.0,
                                     ${l}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${d};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${u-1};
        bool hasNextRow = coords.z < ${o-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}};function bee(r){let{inputs:t,backend:e,attrs:o}=r,{images:n}=t,{alignCorners:i,halfPixelCenters:s,size:a}=o,[l,u]=a,c=G().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new ix(n.shape,l,u,i,s):new nx(n.shape,l,u,i,s);return e.runWebGLProgram(c,[n],"float32")}var VF={kernelName:fu,backendName:"webgl",kernelFunc:bee};var sx=class{constructor(t,e,o){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e;let[,n,i]=e,[,s,a]=t,l=[o&&s>1?n-1:n,o&&a>1?i-1:i],u=[o&&s>1?s-1:s,o&&a>1?a-1:a],c=l[0]/u[0],p=l[1]/u[1],d=1/c,m=1/p,f=Math.ceil(d)*2+2,g=Math.ceil(m)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${c});
        const float widthScale = float(${p});

        const float invHeightScale = float(${d});
        const float invWidthScale = float(${m});

        const int winHeight = int(${f});
        const int winWidth = int(${g});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${s}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${a}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${n-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${i-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function See(r){let{inputs:t,backend:e,attrs:o}=r,{images:n,dy:i}=t,{alignCorners:s}=o,a=new sx(i.shape,n.shape,s);return e.runWebGLProgram(a,[i],i.dtype)}var WF={kernelName:lm,backendName:"webgl",kernelFunc:See};var ax=class{constructor(t,e,o,n,i){this.variableNames=["A"],this.outputShape=[];let[s,a,l,u]=t;this.outputShape=[s,e,o,u];let c=[n&&e>1?a-1:a,n&&o>1?l-1:l],p=[n&&e>1?e-1:e,n&&o>1?o-1:o],d=n?"0.5":"0.0",m;i?m="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":m="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${c[0]/p[0]},
          ${c[1]/p[1]});
      const vec2 inputShapeRC = vec2(${a}.0, ${l}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${m};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}};var lx=class{constructor(t,e,o,n,i){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[s,a,l,u]=t;this.outputShape=[s,e,o,u];let c=[n&&e>1?a-1:a,n&&o>1?l-1:l],p=[n&&e>1?e-1:e,n&&o>1?o-1:o],d=n?"0.5":"0.0",m;i?m="max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":m="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${c[0]/p[0]},
          ${c[1]/p[1]},
          ${c[1]/p[1]});
      const vec3 inputShapeRC = vec3(${a}.0, ${l}.0,
                                     ${l}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${m};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${u-1};
        bool hasNextRow = coords.z < ${o-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}};function wee(r){let{inputs:t,backend:e,attrs:o}=r,{images:n}=t,{alignCorners:i,halfPixelCenters:s,size:a}=o,[l,u]=a,c=G().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new lx(n.shape,l,u,i,s):new ax(n.shape,l,u,i,s);return e.runWebGLProgram(c,[n],n.dtype)}var zF={kernelName:mu,backendName:"webgl",kernelFunc:wee};var ux=class{constructor(t,e,o){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e;let[,n,i]=e,[,s,a]=t,l=[o&&s>1?n-1:n,o&&a>1?i-1:i],u=[o&&s>1?s-1:s,o&&a>1?a-1:a],c=l[0]/u[0],p=l[1]/u[1],d=1/c,m=1/p,f=Math.ceil(d)*2+2,g=Math.ceil(m)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${c});
        const float widthScale = float(${p});

        const float invHeightScale = float(${d});
        const float invWidthScale = float(${m});

        const int winHeight = int(${f});
        const int winWidth = int(${g});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${s}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${a}) {
              continue;
            }

            float sourceFracRow =
              float(${l[0]}) *
                (float(dyR) / float(${u[0]}));

            float sourceFracCol =
                float(${l[1]}) *
                  (float(dyC) / float(${u[1]}));

            int sourceNearestRow = int(min(
                float(int(${n}) - 1),
                ${o} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${i}) - 1),
                ${o} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function Cee(r){let{inputs:t,backend:e,attrs:o}=r,{images:n,dy:i}=t,{alignCorners:s}=o,a=new ux(i.shape,n.shape,s);return e.runWebGLProgram(a,[i],i.dtype)}var UF={kernelName:am,backendName:"webgl",kernelFunc:Cee};var cx=class{constructor(t,e){this.variableNames=["x"];let o=t.length;if(o>4)throw new Error(`WebGL backend: Reverse of rank-${o} tensor is not yet supported`);if(this.outputShape=t,o===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${t[0]} - coord - 1));
        }
      `;return}let n=a=>e.indexOf(a)!==-1&&t[a]!==1?`${t[a]} - coords[${a}] - 1`:`coords[${a}]`,i=t.map((a,l)=>n(l)).join(","),s=Me(o);this.userCode=`
      void main() {
        ${s} coords = getOutputCoords();
        setOutput(getX(${i}));
      }
    `}};var px=class{constructor(t,e){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;let o=t.length;if(o>4)throw new Error(`WebGL backend: Reverse of rank-${o} tensor is not yet supported`);this.outputShape=t;let n=Pt("rc",o),i=`${n[o-1]} + 1 < ${this.outputShape[o-1]}`,s=`${n[o-2]} + 1 < ${this.outputShape[o-2]}`,a=Me(o);o===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${t[0]} - rc - 1),
            ${t[0]} - rc - 1);
          if(${i}){
              result.g = getChannel(getX(${t[0]} - (rc  + 1) - 1),
                ${t[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${a} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${l(n.slice())};
          if(${i}){
            result.g = ${u(n.slice())};
          }
          if(${s}) {
            result.b = ${c(n.slice())};
            if(${i}) {
              result.a = ${p(n.slice())};
            }
          }
          setOutput(result);
        }
    `;function l(f){return d(f)}function u(f){return f[o-1]="("+f[o-1]+" + 1)",d(f)}function c(f){return f[o-2]="("+f[o-2]+" + 1)",d(f)}function p(f){return f[o-1]="("+f[o-1]+" + 1)",f[o-2]="("+f[o-2]+" + 1)",d(f)}function d(f){let g=t.map((b,I)=>m(I,f)),x=g.join(","),y=g.slice(-2).join(",");return`getChannel(getX(${x}), vec2(${y}))`}function m(f,g){return e.indexOf(f)!==-1&&t[f]!==1?`${t[f]} - ${g[f]} - 1`:`${g[f]}`}}};function _ee(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{dims:i}=o,s=n.shape.length,a=S.parseAxisParam(i,n.shape);if(s===0)return At({inputs:{x:n},backend:e});let l=G().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new px(n.shape,a):new cx(n.shape,a);return e.runWebGLProgram(l,[n],n.dtype)}var GF={kernelName:gu,backendName:"webgl",kernelFunc:_ee};var dx=class{constructor(t,e){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];let o=t[1],n=t[2];this.outputShape=t;let i="";typeof e=="number"?i=`float outputValue = ${e.toFixed(2)};`:i=`
        vec3 fill = vec3(${e.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${i}
          if(coordX >= 0 && coordX < ${n} && coordY >= 0 && coordY < ${o}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}};var HF={kernelName:Hu,backendName:"webgl",kernelFunc:({inputs:r,attrs:t,backend:e})=>{let{image:o}=r,{radians:n,fillValue:i,center:s}=t,a=e,l=new dx(o.shape,i),[u,c]=$.getImageCenter(s,o.shape[1],o.shape[2]),p=[[u,c,Math.sin(n),Math.cos(n)]];return a.runWebGLProgram(l,[o],o.dtype,p)}};var kee=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,Iee=Ie({opSnippet:kee}),KF={kernelName:xu,backendName:"webgl",kernelFunc:Iee};var Tee="return inversesqrt(x);",Eee=Ie({opSnippet:Tee,cpuKernelImpl:CP}),qF={kernelName:bi,backendName:"webgl",kernelFunc:Eee};var Ji=class{constructor(t,e,o,n,i,s,a=!0,l=!1){this.variableNames=["updates","indices","defaultValue"],this.outputShape=s;let u=Me(i.length),c=Me(s.length),p="";o===1?p="i":o===2&&(p="i, j");let d=`getIndices(${p})`,m="";n===1?m="i":n===2&&(m="i, coords[1]");let f=`getUpdates(${m})`,g="";l&&(g="coords[0], coords[1]");let x=`getDefaultValue(${g})`,y=e>1?"strides[j]":"strides";this.userCode=`
        ${u} strides = ${u}(${i});

        void main() {
          ${c} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${t}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${e}; j++) {
              int index = round(${d});
              flattenedIndex += index * ${y};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${f};
              found = true;
            }
          }
          setOutput(mix(${x}, sum, float(found)));
        }
      `}};var mx=class{constructor(t,e,o,n,i,s,a=!0,l=!1){this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=s;let u=Me(i.length),c=Me(s.length),p="";o===1?p="i":o===2&&(p="i, j");let d=`getIndices(${p})`,m="";n===1?m="i":n===2&&(m="i, coords[1]");let f=`getUpdates(${m})`,g="";l&&(g="coords[0], coords[1]");let x=`getDefaultValue(${g})`,y=e>1?"strides[j]":"strides",b=e>1?"strides[j + 1]":"strides";this.userCode=`
        ${u} strides = ${u}(${i});

        void main() {
          ${c} coords = getOutputCoords();
          vec4 sum = vec4(0.);
          vec4 found = vec4(0.);
          for (int i = 0; i < ${t}; i+=2) {
            ivec2 flattenedIndex = ivec2(0);
            for (int j = 0; j < ${e}; j+=2) {
              ivec4 index = round(${d});
              flattenedIndex += index.xz * ${y};
              if (j + 1 < ${e}) {
                flattenedIndex += index.yw * ${b};
              }
            }
            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||
                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {
              vec4 updVals = ${f};
              if (flattenedIndex[0] == coords[0]) {
                sum.xy += updVals.xy;
                found.xy = vec2(1.);
              } else if (flattenedIndex[0] == coords[0] + 1) {
                sum.zw += updVals.xy;
                found.zw = vec2(1.);
              }
              if (flattenedIndex[1] == coords[0]) {
                sum.xy += updVals.zw;
                found.xy = vec2(1.);
              } else if (flattenedIndex[1] == coords[0] + 1) {
                sum.zw += updVals.zw;
                found.zw = vec2(1.);
              }
            }
          }
          setOutput(mix(${x}, sum, found));
        }
      `}};function Nee(r){let{inputs:t,backend:e,attrs:o}=r,{indices:n,updates:i}=t,{shape:s}=o,{sliceRank:a,numUpdates:l,sliceSize:u,strides:c,outputSize:p}=$.calculateShapes(i,n,s),d=[p/u,u];if(p===0)return e.makeTensorInfo(s,n.dtype);let m=le({inputs:{x:n},backend:e,attrs:{shape:[l,a]}}),f=le({inputs:{x:i},backend:e,attrs:{shape:[l,u]}}),g=e.makeTensorInfo([],"float32",new Float32Array([0])),x;G().getBool("WEBGL_PACK")?x=new mx(l,a,m.shape.length,f.shape.length,c,d):x=new Ji(l,a,m.shape.length,f.shape.length,c,d);let y=e.runWebGLProgram(x,[f,m,g],f.dtype),b=le({inputs:{x:y},backend:e,attrs:{shape:s}});return e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(y),e.disposeIntermediateTensorInfo(g),b}var jF={kernelName:yu,backendName:"webgl",kernelFunc:Nee};var fx=class{constructor(t,e,o,n){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[t,o];let i="while (left < right) {",s=`for (int i = 0; i < ${Math.ceil(Math.log2(e+1))}; ++i) { if (left >= right) break;`,a=G().getNumber("WEBGL_VERSION")===2?i:s,l=n==="left"?"<":"<=";this.userCode=`
       int findBound(int batch, float value) {
         int left = 0;
         int right = numInputs;
         int mid;
         ${a}
           mid = (left + right) / 2;
           if (getSortedSequence(batch, mid) ${l} value) {
             left = mid + 1;
           } else {
             right = mid;
           }
         }
         return right;
       }

       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int valueIndex = coords[1];

         float value = getValues(batch, valueIndex);

         setOutput(float(findBound(batch, value)));
       }
     `}};function Ree(r){let{inputs:t,backend:e,attrs:o}=r,{sortedSequence:n,values:i}=t,{side:s}=o,a=new fx(n.shape[0],n.shape[1],i.shape[1],s),l=[[n.shape[1]]];return e.runWebGLProgram(a,[n,i],"int32",l)}var XF={kernelName:bu,backendName:"webgl",kernelFunc:Ree};var hx=class{constructor(t,e,o){this.variableNames=["c","a","b"],this.outputShape=e;let n,i;if(o>4)throw Error(`Where for rank ${o} is not yet supported`);if(o===1)i="resRC",n="resRC";else{let a=["resRC.x","resRC.y","resRC.z","resRC.w"],l=[],u=[];for(let c=0;c<e.length;c++)u.push(`${a[c]}`),c<t&&l.push(`${a[c]}`);n=l.join(),i=u.join()}let s=Me(o);this.userCode=`
      void main() {
        ${s} resRC = getOutputCoords();
        float cVal = getC(${n});
        if (cVal >= 1.0) {
          setOutput(getA(${i}));
        } else {
          setOutput(getB(${i}));
        }
      }
    `}};function $ee(r){let{inputs:t,backend:e}=r,{condition:o,t:n,e:i}=t,s=new hx(o.shape.length,n.shape,n.shape.length);return e.runWebGLProgram(s,[o,n,i],It(n.dtype,i.dtype))}var YF={kernelName:Su,backendName:"webgl",kernelFunc:$ee};var Pee=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${$.SELU_SCALEALPHA};
  float scale = ${$.SELU_SCALE};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,Aee=Ie({opSnippet:Pee}),QF={kernelName:wu,backendName:"webgl",kernelFunc:Aee};var Dee=No+`
  return 1.0 / (1.0 + exp(-1.0 * x));
`,Fee=`
  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Oee=Ie({opSnippet:Dee,packedOpSnippet:Fee,cpuKernelImpl:kP}),ZF={kernelName:Si,backendName:"webgl",kernelFunc:Oee};var Lee=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,Mee=Ie({opSnippet:Lee}),JF={kernelName:ku,backendName:"webgl",kernelFunc:Mee};var Bee=No+`
  return sin(x);
`,Vee=`
  vec4 result = sin(x);
  bvec4 isNaN = isnan(x);
  ${no}
  return result;
`,Wee=Ie({opSnippet:Bee,packedOpSnippet:Vee}),e4={kernelName:Cu,backendName:"webgl",kernelFunc:Wee};var zee=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,Uee=Ie({opSnippet:zee}),t4={kernelName:_u,backendName:"webgl",kernelFunc:Uee};var Gee=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,Hee=Ie({opSnippet:Gee}),r4={kernelName:Iu,backendName:"webgl",kernelFunc:Hee};var Kee=r=>{let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{blockShape:i,paddings:s}=o;S.assert(n.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");let a=i.reduce((y,b)=>y*b),l=[[0,0]];l.push(...s);for(let y=1+i.length;y<n.shape.length;++y)l.push([0,0]);let u=[],c=ab({inputs:{x:n},backend:e,attrs:{paddings:l,constantValue:0}}),p=$.getReshaped(c.shape,i,a,!1),d=$.getPermuted(p.length,i.length,!1),m=$.getReshapedPermuted(c.shape,i,a,!1),f=le({inputs:{x:c},backend:e,attrs:{shape:p}}),g=yt({inputs:{x:f},backend:e,attrs:{perm:d}}),x=le({inputs:{x:g},backend:e,attrs:{shape:m}});return u.push(c),u.push(f),u.push(g),u.forEach(y=>e.disposeIntermediateTensorInfo(y)),x},o4={kernelName:Eu,backendName:"webgl",kernelFunc:Kee};function qee(r){let{inputs:t,backend:e}=r,{indices:o,values:n,denseShape:i,defaultValue:s}=t;if(i.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
         ${i.shape}`);if(o.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
         ${o.shape}`);if(n.shape.length!==1)throw new Error(`Values must be a vector, saw:
         ${n.shape}`);if(s.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${s.shape}`);let a=e.readSync(o.dataId),l=e.readSync(n.dataId),u=e.readSync(i.dataId),c=e.readSync(s.dataId)[0],[p,d,m,f,g]=TP(a,o.shape,o.dtype,l,n.dtype,u,c);return[e.makeTensorInfo(d,o.dtype,p),e.makeTensorInfo([d[0]],n.dtype,m),e.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(x=>Number(x)))),e.makeTensorInfo([g.length],o.dtype,new Int32Array(g))]}var n4={kernelName:um,backendName:"webgl",kernelFunc:qee};function jee(r){let{inputs:t,backend:e}=r,{inputIndices:o,inputShape:n,newShape:i}=t;if(o.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape ${o.shape}`);if(n.shape.length!==1)throw new Error(`Input shape should be a vector but received shape ${n.shape}`);if(i.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${i.shape}`);let s=Array.from(e.readSync(n.dataId)),a=e.readSync(o.dataId),l=Array.from(e.readSync(i.dataId)),[u,c,p]=EP(a,o.shape,o.dtype,s,l);return[e.makeTensorInfo(c,o.dtype,u),e.makeTensorInfo([p.length],i.dtype,new Int32Array(p))]}var i4={kernelName:cm,backendName:"webgl",kernelFunc:jee};function Xee(r){let{inputs:t,backend:e}=r,{data:o,indices:n,segmentIds:i}=t;if(o.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(n.shape.length!==1)throw new Error(`Indices should be a vector but received shape
              ${n.shape}`);if(i.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
              ${i.shape}`);let s=e.readSync(o.dataId),a=e.readSync(n.dataId),l=e.readSync(i.dataId),[u,c]=Yg(s,o.shape,o.dtype,a,l,!0);return e.makeTensorInfo(c,o.dtype,u)}var s4={kernelName:$u,backendName:"webgl",kernelFunc:Xee};function Yee(r){let{inputs:t,backend:e}=r,{data:o,indices:n,segmentIds:i}=t;if(o.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(n.shape.length!==1)throw new Error(`Indices should be a vector but received shape
             ${n.shape}`);if(i.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
             ${i.shape}`);let s=e.readSync(o.dataId),a=e.readSync(n.dataId),l=e.readSync(i.dataId),[u,c]=Yg(s,o.shape,o.dtype,a,l);return e.makeTensorInfo(c,o.dtype,u)}var a4={kernelName:Pu,backendName:"webgl",kernelFunc:Yee};function Qee(r){let{inputs:t,backend:e,attrs:o}=r,{sparseIndices:n,sparseValues:i,defaultValue:s}=t,{outputShape:a}=o,{sliceRank:l,numUpdates:u,sliceSize:c,strides:p,outputSize:d}=$.calculateShapes(i,n,a),m=!1;if(i.dtype==="string"){let y=e.bufferSync(n),b=e.bufferSync(i),I=S.decodeString(e.readSync(s.dataId)[0]),N=_P(y,b,a,d,c,u,l,p,I,m);return e.makeTensorInfo(a,N.dtype,N.values)}let f=new Ji(u,l,n.shape.length,i.shape.length,p,[d,1],m),g=e.runWebGLProgram(f,[i,n,s],i.dtype),x=le({inputs:{x:g},backend:e,attrs:{shape:a}});return e.disposeIntermediateTensorInfo(g),x}var l4={kernelName:Au,backendName:"webgl",kernelFunc:Qee};function Zee(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{numOrSizeSplits:i,axis:s}=o,a=S.parseAxisParam(s,n.shape)[0],l=$.prepareSplitSize(n,i,a),u=n.shape.length,c=new Array(u).fill(0),p=n.shape.slice();return l.map(d=>{let m=[...p];m[a]=d;let f=qo({inputs:{x:n},backend:e,attrs:{begin:c,size:m}});return c[a]+=d,f})}var u4={kernelName:Nu,backendName:"webgl",kernelFunc:Zee};var c4="return sqrt(x);",Jee=Ie({opSnippet:c4,packedOpSnippet:c4,cpuKernelImpl:NP}),p4={kernelName:wi,backendName:"webgl",kernelFunc:Jee};var ete="return x * x;",tte=Ie({opSnippet:ete}),d4={kernelName:pm,backendName:"webgl",kernelFunc:tte};var m4="return (a - b) * (a - b);",rte=it({opSnippet:m4,packedOpSnippet:m4}),f4={kernelName:Ci,backendName:"webgl",kernelFunc:rte};function ote(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t;if(n.dtype!=="string")throw new Error("Input must be of datatype string");let i=e.readSync(n.dataId),s=$.fromUint8ToStringArray(i),a=RP(s,"string",o);return e.makeTensorInfo(n.shape,"string",a)}var h4={kernelName:Du,backendName:"webgl",kernelFunc:ote};function nte({inputs:r,attrs:t,backend:e}){let{x:o}=r,n=Vt+`
    return x > 0.0 ? 1.0 : float(${t.alpha});
  `,i=new Zt(o.shape,n);return e.runWebGLProgram(i,[o],o.dtype)}var g4={kernelName:Gu,backendName:"webgl",kernelFunc:nte};var gx=class{constructor(t,e,o){this.variableNames=["x"],this.outputShape=o;let n=o.length,i=Me(o.length),s=Me(o.length),a="";if(n===1)a="coords * strides + begin";else{let l=0;a=o.map((u,c)=>(l++,o.length===1?`coords * strides[${c}] + begin[${c}]`:`coords[${l-1}] * strides[${c}] + begin[${c}]`)).join(",")}this.userCode=`
      ${i} begin = ${i}(${t});
      ${i} strides = ${i}(${e});

      void main() {
        ${s} coords = getOutputCoords();
        setOutput(getX(${a}));
      }
    `}};function ite(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{begin:i,end:s,strides:a,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:p,shrinkAxisMask:d}=o,{finalShapeSparse:m,finalShape:f,isIdentity:g,sliceDim0:x,isSimpleSlice:y,begin:b,end:I,strides:N}=Gt.sliceInfo(n.shape,i,s,a,l,u,c,p,d),F;if(g)F=le({inputs:{x:n},backend:e,attrs:{shape:f}});else if(x||y){S.assert(n.shape.length>=1,()=>`Input must have rank at least 1, got: ${n.shape.length}`);let z=Gt.computeOutShape(b,I,N),H=qo({inputs:{x:n},backend:e,attrs:{begin:b,size:z}});F=le({inputs:{x:H},backend:e,attrs:{shape:f}}),e.disposeIntermediateTensorInfo(H)}else if(e.shouldExecuteOnCPU([n])){let H=e.readSync(n.dataId),K=Le(n.shape,n.dtype,H),X=$P(m,K,N,b);F=e.makeTensorInfo(f,n.dtype,X.values)}else{let H=new gx(b,N,m);F=e.runWebGLProgram(H,[n],n.dtype)}let B=le({inputs:{x:F},backend:e,attrs:{shape:f}});return e.disposeIntermediateTensorInfo(F),B}var x4={kernelName:Fu,backendName:"webgl",kernelFunc:ite};function ste(r){let{inputs:t,backend:e,attrs:o}=r,{separator:n,nGramWidths:i,leftPad:s,rightPad:a,padWidth:l,preserveShortSequences:u}=o,{data:c,dataSplits:p}=t,d=e.readSync(c.dataId),m=e.readSync(p.dataId),[f,g]=PP(d,m,n,i,s,a,l,u);return[e.makeTensorInfo([f.length],"string",f),e.makeTensorInfo(p.shape,"int32",g)]}var y4={kernelName:Ou,backendName:"webgl",kernelFunc:ste};function ate(r){let{inputs:t,backend:e,attrs:o}=r,{skipEmpty:n}=o,{input:i,delimiter:s}=t;if(i.dtype!=="string")throw new Error("Input must be of datatype string");if(i.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${i.shape}`);if(s.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${s.shape}`);let a=e.readSync(i.dataId),l=e.readSync(s.dataId)[0],[u,c,p]=AP(a,l,n),d=c.length;return[e.makeTensorInfo([d,2],"int32",u),e.makeTensorInfo([d],"string",c),e.makeTensorInfo([2],"int32",new Int32Array(p))]}var v4={kernelName:dm,backendName:"webgl",kernelFunc:ate};function lte(r){let{inputs:t,backend:e,attrs:o}=r,{numBuckets:n}=o,{input:i}=t;if(i.dtype!=="string")throw new Error("Input must be of datatype string");if(n<=0)throw new Error("Number of buckets must be at least 1");let s=e.readSync(i.dataId),a=DP(s,n);return e.makeTensorInfo(i.shape,"int32",a)}var b4={kernelName:mm,backendName:"webgl",kernelFunc:lte};var ute="return tan(x);",cte=Ie({opSnippet:ute}),S4={kernelName:Lu,backendName:"webgl",kernelFunc:cte};var pte=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,dte=Ie({opSnippet:pte}),w4={kernelName:Mu,backendName:"webgl",kernelFunc:dte};function mte(r){let{inputs:t,backend:e,attrs:o}=r,{tensor:n,indices:i,updates:s}=t,{}=o,{sliceRank:a,numUpdates:l,sliceSize:u,strides:c,outputSize:p}=$.calculateShapes(s,i,n.shape),d=[p/u,u];if(p===0)return e.makeTensorInfo(n.shape,i.dtype);let m=le({inputs:{x:i},backend:e,attrs:{shape:[l,a]}}),f=le({inputs:{x:s},backend:e,attrs:{shape:[l,u]}}),g=le({inputs:{x:n},backend:e,attrs:{shape:d}}),x=new Ji(l,a,m.shape.length,f.shape.length,c,d,!1,!0),y=e.runWebGLProgram(x,[f,m,g],g.dtype),b=le({inputs:{x:y},backend:e,attrs:{shape:n.shape}});return e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(g),e.disposeIntermediateTensorInfo(y),b}var C4={kernelName:vu,backendName:"webgl",kernelFunc:mte};var xx=class{constructor(t,e){this.variableNames=["A"];let o=new Array(t.length);for(let s=0;s<o.length;s++)o[s]=t[s]*e[s];this.outputShape=o,this.rank=o.length;let n=Me(this.rank),i=fte(t);this.userCode=`
      void main() {
        ${n} resRC = getOutputCoords();
        setOutput(getA(${i}));
      }
    `}};function fte(r){let t=r.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(t===1)return`imod(resRC, ${r[0]})`;let e=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],o=[];for(let n=0;n<r.length;n++)o.push(`imod(${e[n]}, ${r[n]})`);return o.join()}function ub(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{reps:i}=o;if(n.dtype==="string"||n.shape.length>5){let l=e.readSync(n.dataId),u=n.dtype==="string"?l.map(d=>S.decodeString(d)):l,c=Le(n.shape,n.dtype,u),p=OP(c,i);return e.makeTensorInfo(p.shape,p.dtype,p.values)}let s=new xx(n.shape,i);return e.runWebGLProgram(s,[n],n.dtype)}var _4={kernelName:ki,backendName:"webgl",kernelFunc:ub};var yx=class{constructor(t){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=t,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}},vx=class{constructor(t){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=t,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}};function pa(r,t){t!==null&&r.disposeIntermediateTensorInfo(t)}function k4(r){let t=1;for(;t<r;)t*=2;return t}function hte(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{k:i,sorted:s}=o,a=G().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=G().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),u=n.shape,c=u[u.length-1];if(e.shouldExecuteOnCPU([n])||c<a||i>l){let X=e.readSync(n.dataId),[te,ue]=LP(X,u,n.dtype,i,s);return[e.makeTensorInfo(te.shape,te.dtype,te.values),e.makeTensorInfo(ue.shape,ue.dtype,ue.values)]}if(i===0)return u[u.length-1]=0,[e.makeTensorInfo(u,n.dtype,[]),e.makeTensorInfo(u,"int32",[])];if(c===1)return[n,Kn({attrs:{shape:u,dtype:"int32",value:0},backend:e})];let p=e.texData.get(n.dataId),d=p!==null&&p.isPacked,m=d?e.unpackTensor(n):n,g=S.sizeFromShape(u)/c,x=le({inputs:{x:m},attrs:{shape:[g,c]},backend:e});d&&pa(e,m);let y=k4(i),b=k4(c),I=null,N=()=>I===null?[x,x]:[x,I],F=(X,te,ue)=>{let pe=N(),xe=new yx(ue),Te=[[c],[I===null?1:0],[Number.NEGATIVE_INFINITY],[X],[te]],qe=I;I=e.runWebGLProgram(xe,pe,"int32",Te),pa(e,qe)};for(let X=1;X<y;X*=2){let te=X*2;for(let ue=X;ue>=1;ue/=2)F(te,ue,[g,b])}for(let X=b;X>y;X/=2){let te=N(),ue=new vx([g,X/2]),xe=[[c],[I===null?1:0],[y]],be=I;I=e.runWebGLProgram(ue,te,"int32",xe),pa(e,be);let Te=y/2,qe=Te*2;for(let je=Te;je>=1;je/=2)F(qe,je,I.shape)}let B=I;I=qo({inputs:{x:I},backend:e,attrs:{begin:0,size:[g,i]}}),pa(e,B);let z=rb({inputs:{x,indices:I},backend:e,attrs:{axis:1,batchDims:1}});pa(e,x);let H=u.slice(0,-1);H.push(i),B=I,I=le({inputs:{x:I},attrs:{shape:H},backend:e}),pa(e,B);let K=z;return z=le({inputs:{x:z},attrs:{shape:H},backend:e}),pa(e,K),[z,I]}var I4={kernelName:Bu,backendName:"webgl",kernelFunc:hte};var bx=class{constructor(t,e,o,n,i,s){this.variableNames=["Image","Transforms"],this.outputShape=s;let a=o==="nearest"?1:2,l;switch(n){case"constant":l=1;break;case"reflect":l=2;break;case"wrap":l=3;break;case"nearest":l=4;break;default:l=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${l} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${l} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${l} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${t} && 0 <= coordX && coordX < ${e}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${i});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${i});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${e}));
                float mapY = mapCoord(inY, float(${t}));

                if (${a} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}};function gte(r){let{inputs:t,backend:e,attrs:o}=r,{image:n,transforms:i}=t,{interpolation:s,fillMode:a,fillValue:l,outputShape:u}=o,[c,p,d,m]=n.shape,[f,g]=u??[p,d],x=[c,f,g,m],y=new bx(p,d,s,a,l,x);return e.runWebGLProgram(y,[n,i],"float32")}var T4={kernelName:Vu,backendName:"webgl",kernelFunc:gte};function xte(r){let{inputs:t,attrs:e,backend:o}=r,{axis:n}=e,{x:i}=t;gn(i,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");let s=o.readSync(i.dataId),{outputValues:a,outputShape:l,indices:u}=MP(s,n,i.shape,i.dtype);return[o.makeTensorInfo(l,i.dtype,a),o.makeTensorInfo([u.length],"int32",u)]}var E4={kernelName:fm,backendName:"webgl",kernelFunc:xte};function yte(r){let{inputs:t,backend:e,attrs:o}=r,{value:n}=t,{axis:i}=o;i<0&&(i+=n.shape.length);let s=n,a=s.shape.length,l=n.shape[i],u=new Array(a-1),c=0;for(let g=0;g<a;g++)g!==i&&(u[c++]=s.shape[g]);let p=[],d=new Array(a).fill(0),m=s.shape.slice();m[i]=1;let f=new Array(l);for(let g=0;g<f.length;g++){d[i]=g;let x=qo({inputs:{x:s},backend:e,attrs:{begin:d,size:m}}),y=le({inputs:{x},backend:e,attrs:{shape:u}});f[g]=y,p.push(x)}return p.forEach(g=>e.disposeIntermediateTensorInfo(g)),f}var N4={kernelName:Wu,backendName:"webgl",kernelFunc:yte};var Sx=class{constructor(t,e){this.variableNames=["x","segmentIds"];let o=t.windowSize,n=t.batchSize,i=t.inSize,s=t.numSegments,a=s*Math.ceil(i/o);this.outputShape=[n,a];let l="0.0",u="sumValue",c=Math.floor(o/4)*4,p=o%4,d=`
        sumValue += dot(values, segFilter);
    `,m="";i%o>0&&(m=`
        if (inIdx < 0 || inIdx >= ${i}) {
          return initializationValue;
        }
      `);let f="";i%o>0&&(f=`
        if (inIdx < 0 || inIdx >= ${i}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${l};

      float getValue(int batch, int inIdx) {
        ${m}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${f}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${s})) * float(${o}));
        int currentSeg = int(mod(float(outIdx), float(${s})));

        float sumValue = 0.0;

        for (int i = 0; i < ${c}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${d}
        }

        int inIdx = inOffset + ${c};
        if (${p===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${d}
        } else if (${p===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${d}
        } else if (${p===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${d}
        }
        setOutput(${u});
      }
    `}};function vte(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,segmentIds:i}=t,{numSegments:s}=o,a=n.shape.length,l=[],u=0,c=$.getAxesPermutation([u],a),p=n;c!=null&&(p=yt({inputs:{x:n},backend:e,attrs:{perm:c}}),l.push(p),u=$.getInnerMostAxes(1,a)[0]);let d=$.segment_util.computeOutShape(p.shape,u,s),m=S.sizeFromShape([p.shape[u]]),f=le({inputs:{x:p},backend:e,attrs:{shape:[-1,m]}});l.push(f);let g=Nn(n.dtype),x=(N,F,B,z,H)=>{let K=N.shape[0],X=N.shape[1],te=$.segment_util.segOpComputeOptimalWindowSize(X,H),ue={windowSize:te,inSize:X,batchSize:K,numSegments:H},pe=new Sx(ue,F),xe=e.compileAndRun(pe,[N,B],z);if(l.push(xe),xe.shape[1]===H)return xe;let be=lb({backend:e,attrs:{start:0,stop:H,step:1,dtype:"float32"}}),Te=ub({inputs:{x:be},backend:e,attrs:{reps:[X/te]}});return l.push(be),l.push(Te),x(xe,F,Te,z,H)},y=x(f,"unsortedSegmentSum",i,g,s),b=le({inputs:{x:y},backend:e,attrs:{shape:d}}),I=b;if(c!=null){l.push(b);let N=$.getUndoAxesPermutation(c);I=yt({inputs:{x:I},backend:e,attrs:{perm:N}})}return l.forEach(N=>e.disposeIntermediateTensorInfo(N)),I}var R4={kernelName:zu,backendName:"webgl",kernelFunc:vte};var bte=[dA,fA,hA,gA,yA,vA,bA,SA,_A,kA,IA,TA,EA,NA,RA,$A,PA,AA,DA,FA,OA,MA,BA,VA,WA,HA,qA,jA,rA,YA,ZA,JA,eD,tD,rD,oD,nD,iD,sD,aD,cD,pD,dD,mD,fD,hD,gD,xD,yD,vD,bD,SD,wD,CD,_D,kD,TD,ED,ND,RD,PD,AD,DD,FD,OD,LD,MD,BD,VD,tA,WD,QA,zD,UD,GD,oA,HD,KD,qD,jD,XD,YD,QD,ZD,JD,eF,rF,oF,nF,iF,sF,aF,uF,pF,dF,mF,fF,hF,bF,sA,SF,wF,CF,_F,zA,kF,EF,NF,RF,$F,nA,PF,AF,DF,FF,OF,UA,gF,LF,MF,BF,lA,VF,WF,zF,UF,GF,HF,KF,qF,jF,XF,YF,QF,ZF,JF,e4,t4,LA,vF,r4,o4,n4,i4,s4,a4,l4,u4,p4,d4,f4,h4,g4,x4,y4,v4,b4,yF,cA,S4,w4,C4,_4,I4,T4,pA,E4,N4,R4,IF];for(let r of bte)gm(r);var Ste=["videoElement"],wte=["canvasElement"];function Cte(r,t){if(r&1&&(k(0,"div",32)(1,"div",33),O(2),T(),k(3,"div",34),O(4,"REPS"),T()()),r&2){let e=M();R(2),We(e.repCount)}}function _te(r,t){r&1&&(k(0,"p"),O(1,"Requesting camera access..."),T())}function kte(r,t){r&1&&(k(0,"p"),O(1,"Loading video feed..."),T())}function Ite(r,t){r&1&&(k(0,"p"),O(1,"Loading AI model, please wait..."),T())}function Tte(r,t){if(r&1&&(k(0,"div",35),se(1,_te,2,0,"p",36)(2,kte,2,0,"p",36)(3,Ite,2,0,"p",36),T()),r&2){let e=M();R(),L("ngIf",!e.videoStream),R(),L("ngIf",e.videoStream&&!e.isCameraReady),R(),L("ngIf",e.isCameraReady&&!e.modelReady)}}function Ete(r,t){r&1&&(k(0,"p"),O(1,"Camera access was lost or denied. Please reload or check permissions."),T())}function Nte(r,t){r&1&&(k(0,"p"),O(1,"AI Model failed to load. Try reloading."),T())}function Rte(r,t){if(r&1){let e=ye();k(0,"button",38),ne("click",function(){J(e);let n=M(2);return ee(n.setupCamera())}),O(1,"Retry Camera"),T()}}function $te(r,t){if(r&1){let e=ye();k(0,"button",38),ne("click",function(){J(e);let n=M(2);return ee(n.loadPoseDetectionModel())}),O(1,"Retry AI Model"),T()}}function Pte(r,t){if(r&1&&(k(0,"div",35),se(1,Ete,2,0,"p",36)(2,Nte,2,0,"p",36)(3,Rte,2,0,"button",37)(4,$te,2,0,"button",37),T()),r&2){let e=M();R(),L("ngIf",!(e.videoStream!=null&&e.videoStream.active)),R(),L("ngIf",!e.modelReady&&(e.videoStream==null?null:e.videoStream.active)),R(),L("ngIf",!(e.videoStream!=null&&e.videoStream.active)),R(),L("ngIf",!e.modelReady&&(e.videoStream==null?null:e.videoStream.active))}}function Ate(r,t){if(r&1){let e=ye();k(0,"button",39),ne("click",function(){J(e);let n=M();return ee(n.startWorkout())}),O(1," Start Workout "),T()}if(r&2){let e=M();L("disabled",!e.isCameraReady||!e.modelReady)}}function Dte(r,t){if(r&1){let e=ye();k(0,"button",40),ne("click",function(){J(e);let n=M();return ee(n.stopWorkout())}),O(1," Stop Workout "),T()}}function Fte(r,t){if(r&1){let e=ye();k(0,"button",41),ne("click",function(){J(e);let n=M();return ee(n.toggleRecording())}),O(1),T()}if(r&2){let e=M();Oo("recording",e.isRecording),R(),Se(" ",e.isRecording?"Stop Recording":"Start Recording"," ")}}function Ote(r,t){if(r&1&&(k(0,"li",49),O(1),et(2,"uppercase"),T()),r&2){let e=t.$implicit;L("ngClass","feedback-"+e.type),R(),Bt(" [",Dt(2,3,e.type),"] ",e.message," ")}}function Lte(r,t){r&1&&(k(0,"div",50),O(1," No feedback yet. Start your workout! "),T())}function Mte(r,t){if(r&1){let e=ye();k(0,"div",42),ne("click",function(){J(e);let n=M();return ee(n.toggleFeedbackVisibility())}),k(1,"div",43),ne("click",function(n){return J(e),ee(n.stopPropagation())}),k(2,"div",44)(3,"h3"),O(4,"Feedback & Log"),T(),k(5,"button",45),ne("click",function(){J(e);let n=M();return ee(n.toggleFeedbackVisibility())}),O(6,"\xD7"),T()(),k(7,"div",46)(8,"ul"),se(9,Ote,3,5,"li",47),T(),se(10,Lte,2,0,"div",48),T()()()}if(r&2){let e=M();R(9),L("ngForOf",e.feedbackMessages),R(),L("ngIf",e.feedbackMessages.length===0)}}var wx=class r{constructor(t){this.hostElement=t}videoElementRef;canvasElementRef;videoStream=null;mediaRecorder=null;recordedChunks=[];poseDetector=null;modelReady=!1;isFeedbackVisible=!1;isControlsExpanded=!1;isCameraReady=!1;isRecording=!1;isWorkoutActive=!1;repCount=0;elapsedTime=0;timerInterval;feedbackMessages=[];currentExercise="Right Bicep Curl";changeDetectorRef=De(ba);ngZone=De(xS);animationFrameId=null;currentRepCycleState="START";exerciseSpecificLogic=null;KEYPOINT_SCORE_THRESHOLD=.5;STABLE_FRAME_COUNT=3;lastFramesStates={};BICEP_ELBOW_ANGLE_UP=50;BICEP_ELBOW_ANGLE_DOWN=160;BICEP_WRIST_ELBOW_VERTICAL_DIFF_DOWN=10;SNATCH_HIP_EXTENSION_ANGLE_START=170;SNATCH_ARM_LOCKOUT_SHOULDER_WRIST_ALIGNMENT_Y=30;SNATCH_KNEE_ANGLE_BOTTOM=80;PRESS_ELBOW_ANGLE_UP=170;PRESS_ELBOW_ANGLE_RACK=90;PRESS_WRIST_SHOULDER_Y_DIFF_UP=-10;PRESS_WRIST_SHOULDER_Y_DIFF_RACK=20;PRESS_WRIST_SHOULDER_X_ALIGNMENT=30;PRESS_TORSO_LEAN_X_ALIGNMENT=40;JERK_ELBOW_LOCKOUT_ANGLE=165;JERK_ELBOW_RACK_ANGLE=90;JERK_KNEE_DIP_ANGLE=90;JERK_SECOND_DIP_KNEE_ANGLE=100;JERK_WRIST_SHOULDER_Y_DIFF_LOCKOUT=-20;JERK_WRIST_SHOULDER_X_ALIGNMENT=30;alternatingArm="";fabPosition={x:0,y:0};isFabDragging=!1;fabDragStartOffset={x:0,y:0};fabElementRef;ngOnInit(){return j(this,null,function*(){this.addFeedback("info","Initializing TensorFlow.js backend...");try{yield Cy("webgl"),yield _y(),this.addFeedback("info",`TensorFlow.js backend set to: ${on()}`)}catch(t){console.error("Error setting TF backend:",t),this.addFeedback("error",`Error setting TF backend: ${t instanceof Error?t.message:String(t)}`);try{yield Cy("cpu"),yield _y(),this.addFeedback("warning",`Fell back to TF.js backend: ${on()}`)}catch(e){this.addFeedback("error",`CPU backend also failed: ${e instanceof Error?e.message:String(e)}`);return}}yield this.setupCamera(),yield this.loadPoseDetectionModel(),this.setExerciseLogic(this.currentExercise),this.initializeFabPosition()})}ngOnDestroy(){this.stopWorkout(),this.stopCamera(),this.poseDetector&&(this.poseDetector.dispose(),this.addFeedback("info","Pose detection model disposed."),this.poseDetector=null)}setupCamera(){return j(this,null,function*(){try{if(navigator.mediaDevices&&navigator.mediaDevices.getUserMedia){if(this.videoStream=yield navigator.mediaDevices.getUserMedia({video:{facingMode:"user",width:{ideal:640},height:{ideal:480}}}),this.videoElementRef&&this.canvasElementRef){let t=this.videoElementRef.nativeElement,e=this.canvasElementRef.nativeElement;t.srcObject=this.videoStream,t.onloadedmetadata=()=>{t.play().then(()=>{this.isCameraReady=!0,this.addFeedback("info","Camera ready."),e.width=t.videoWidth,e.height=t.videoHeight,this.changeDetectorRef.detectChanges()}).catch(o=>{console.error("Error playing video:",o),this.addFeedback("error","Could not start video playback.")})}}}else this.addFeedback("error","getUserMedia not supported in this browser."),this.isCameraReady=!1}catch(t){console.error("Error accessing camera:",t),this.addFeedback("error",`Error accessing camera: ${t instanceof Error?t.message:String(t)}`),t.name==="NotAllowedError"&&this.addFeedback("warning","Camera permission denied. Please allow camera access."),this.isCameraReady=!1}this.changeDetectorRef.detectChanges()})}loadPoseDetectionModel(){return j(this,null,function*(){this.poseDetector&&(this.poseDetector.dispose(),this.poseDetector=null),this.modelReady=!1,this.addFeedback("info","Loading pose detection model (MoveNet Lightning)..."),this.changeDetectorRef.detectChanges();try{let t=nr.MoveNet,e={modelType:JR.modelType.SINGLEPOSE_LIGHTNING};this.poseDetector=yield ZR(t,e),this.modelReady=!0,this.addFeedback("success","Pose detection model loaded successfully!")}catch(t){console.error("Error loading pose detection model:",t),this.addFeedback("error",`Could not load AI model: ${t instanceof Error?t.message:String(t)}`),this.modelReady=!1}finally{this.changeDetectorRef.detectChanges()}})}startWorkout(){if(!this.isCameraReady){this.addFeedback("warning","Camera not ready.");return}if(!this.modelReady||!this.poseDetector){this.addFeedback("warning","AI Model not ready. Please wait or try reloading model.");return}this.isWorkoutActive=!0,this.repCount=0,this.elapsedTime=0,this.lastFramesStates={},this.currentRepCycleState="START",this.feedbackMessages=[{type:"success",message:"Workout started! Form tracking active."}],this.changeDetectorRef.detectChanges(),this.timerInterval=setInterval(()=>{this.elapsedTime++,this.changeDetectorRef.detectChanges()},1e3),this.animationFrameId&&cancelAnimationFrame(this.animationFrameId),this.animationFrameId=requestAnimationFrame(this.processVideoFrame)}stopWorkout(){this.isWorkoutActive=!1,this.timerInterval&&(clearInterval(this.timerInterval),this.timerInterval=null),this.animationFrameId&&(cancelAnimationFrame(this.animationFrameId),this.animationFrameId=null),this.addFeedback("info",`Workout stopped. Total reps: ${this.repCount}. Time: ${this.formatTime(this.elapsedTime)}`);let t=this.canvasElementRef?.nativeElement;if(t){let e=t.getContext("2d");e&&e.clearRect(0,0,t.width,t.height)}this.changeDetectorRef.detectChanges()}stopCamera(){this.videoStream&&(this.videoStream.getTracks().forEach(t=>t.stop()),this.videoStream=null),this.videoElementRef?.nativeElement.srcObject&&(this.videoElementRef.nativeElement.srcObject=null),this.isCameraReady=!1,this.changeDetectorRef.detectChanges()}processVideoFrame=()=>j(this,null,function*(){if(!this.isWorkoutActive||!this.videoElementRef||!this.canvasElementRef||!this.poseDetector||!this.modelReady){this.isWorkoutActive&&(this.animationFrameId=requestAnimationFrame(this.processVideoFrame));return}let t=this.videoElementRef.nativeElement,e=this.canvasElementRef.nativeElement;if(t.readyState<t.HAVE_CURRENT_DATA){this.animationFrameId=requestAnimationFrame(this.processVideoFrame);return}try{if((e.width!==t.videoWidth||e.height!==t.videoHeight)&&(e.width=t.videoWidth,e.height=t.videoHeight,t.videoWidth===0||t.videoHeight===0)){this.animationFrameId=requestAnimationFrame(this.processVideoFrame);return}let o=yield this.poseDetector.estimatePoses(t,{flipHorizontal:!1}),n=e.getContext("2d");if(n&&(n.clearRect(0,0,e.width,e.height),o&&o.length>0)){let i=o[0];this.drawPose(i.keypoints,n),this.analyzePoseForReps(i)}}catch(o){console.error("Error during pose estimation or drawing:",o),this.addFeedback("error","AI processing error. Workout may be affected.")}this.isWorkoutActive&&(this.animationFrameId=requestAnimationFrame(this.processVideoFrame))});drawPose(t,e){e.fillStyle="aqua";for(let i of t)i.score!=null&&i.score>=.3&&(e.beginPath(),e.arc(i.x,i.y,5,0,2*Math.PI),e.fill());let n=GR.getAdjacentPairs(nr.MoveNet);e.strokeStyle="lime",e.lineWidth=3;for(let[i,s]of n){let a=t[i],l=t[s];a&&l&&(a.score??0)>=.3&&(l.score??0)>=.3&&(e.beginPath(),e.moveTo(a.x,a.y),e.lineTo(l.x,l.y),e.stroke())}}setExerciseLogic(t){this.currentRepCycleState="START",this.repCount=0,this.lastFramesStates={},this.addFeedback("info",`Switched to exercise: ${t}`),this.currentExercise=t,t==="Right Bicep Curl"?this.exerciseSpecificLogic=this.analyzeRightBicepCurl:t==="Left Bicep Curl"?this.exerciseSpecificLogic=this.analyzeLeftBicepCurl:t==="Alternating Bicep Curl"?this.exerciseSpecificLogic=this.analyzeAlternatingBicepCurl:t==="Kettlebell Snatch"?this.exerciseSpecificLogic=this.analyzeKettlebellSnatch:t==="Kettlebell Press"?this.exerciseSpecificLogic=this.analyzeKettlebellPress:t==="Goblet Squat"?this.exerciseSpecificLogic=this.analyzeGobletSquat:t==="Deadlift"?this.exerciseSpecificLogic=this.analyzeDeadlift:t==="Kettlebell Jerk"?this.exerciseSpecificLogic=this.analyzeKettlebellJerk:(this.addFeedback("warning",`No specific logic implemented for exercise: ${t}`),this.exerciseSpecificLogic=null),this.changeDetectorRef.detectChanges()}analyzePoseForReps(t){this.exerciseSpecificLogic&&this.exerciseSpecificLogic.call(this,t)}analyzeRightBicepCurl(t){let e=t.keypoints.find(s=>s.name==="right_shoulder"),o=t.keypoints.find(s=>s.name==="right_elbow"),n=t.keypoints.find(s=>s.name==="right_wrist");if(!e||!o||!n||(e.score??0)<this.KEYPOINT_SCORE_THRESHOLD||(o.score??0)<this.KEYPOINT_SCORE_THRESHOLD||(n.score??0)<this.KEYPOINT_SCORE_THRESHOLD)return;let i=this.calculateAngle(e,o,n);i!==null&&(this.currentRepCycleState==="START"?i<this.BICEP_ELBOW_ANGLE_UP&&(this.currentRepCycleState="UP",this.addFeedback("info",`Curl: Up phase detected (Angle: ${i.toFixed(0)}\xB0)`)):this.currentRepCycleState==="UP"&&i>this.BICEP_ELBOW_ANGLE_DOWN&&(this.incrementRep(),this.currentRepCycleState="START",this.addFeedback("success",`Curl: Down phase, Rep Complete! (Angle: ${i.toFixed(0)}\xB0)`)))}analyzeLeftBicepCurl(t){let e=t.keypoints.find(s=>s.name==="left_shoulder"),o=t.keypoints.find(s=>s.name==="left_elbow"),n=t.keypoints.find(s=>s.name==="left_wrist");if(!e||!o||!n||(e.score??0)<this.KEYPOINT_SCORE_THRESHOLD||(o.score??0)<this.KEYPOINT_SCORE_THRESHOLD||(n.score??0)<this.KEYPOINT_SCORE_THRESHOLD)return;let i=this.calculateAngle(e,o,n);i!==null&&(this.currentRepCycleState==="START"?i<this.BICEP_ELBOW_ANGLE_UP&&(this.currentRepCycleState="UP",this.addFeedback("info",`Left Curl: Up phase detected (Angle: ${i.toFixed(0)}\xB0)`)):this.currentRepCycleState==="UP"&&i>this.BICEP_ELBOW_ANGLE_DOWN&&(this.incrementRep(),this.currentRepCycleState="START",this.addFeedback("success",`Left Curl: Down phase, Rep Complete! (Angle: ${i.toFixed(0)}\xB0)`)))}analyzeAlternatingBicepCurl(t){let e=t.keypoints.find(c=>c.name==="right_shoulder"),o=t.keypoints.find(c=>c.name==="right_elbow"),n=t.keypoints.find(c=>c.name==="right_wrist"),i=t.keypoints.find(c=>c.name==="left_shoulder"),s=t.keypoints.find(c=>c.name==="left_elbow"),a=t.keypoints.find(c=>c.name==="left_wrist");if(!e||!o||!n||!i||!s||!a||(e.score??0)<this.KEYPOINT_SCORE_THRESHOLD||(o.score??0)<this.KEYPOINT_SCORE_THRESHOLD||(n.score??0)<this.KEYPOINT_SCORE_THRESHOLD||(i.score??0)<this.KEYPOINT_SCORE_THRESHOLD||(s.score??0)<this.KEYPOINT_SCORE_THRESHOLD||(a.score??0)<this.KEYPOINT_SCORE_THRESHOLD)return;let l=this.calculateAngle(e,o,n),u=this.calculateAngle(i,s,a);l===null||u===null||(this.alternatingArm||(this.alternatingArm="right"),this.alternatingArm==="right"?this.currentRepCycleState==="START"?l<this.BICEP_ELBOW_ANGLE_UP&&(this.currentRepCycleState="UP",this.addFeedback("info",`Alt Curl: Right up phase (Angle: ${l.toFixed(0)}\xB0)`)):this.currentRepCycleState==="UP"&&l>this.BICEP_ELBOW_ANGLE_DOWN&&(this.incrementRep(),this.currentRepCycleState="START",this.alternatingArm="left",this.addFeedback("success",`Alt Curl: Right down, Rep Complete! (Angle: ${l.toFixed(0)}\xB0)`)):this.alternatingArm==="left"&&(this.currentRepCycleState==="START"?u<this.BICEP_ELBOW_ANGLE_UP&&(this.currentRepCycleState="UP",this.addFeedback("info",`Alt Curl: Left up phase (Angle: ${u.toFixed(0)}\xB0)`)):this.currentRepCycleState==="UP"&&u>this.BICEP_ELBOW_ANGLE_DOWN&&(this.incrementRep(),this.currentRepCycleState="START",this.alternatingArm="right",this.addFeedback("success",`Alt Curl: Left down, Rep Complete! (Angle: ${u.toFixed(0)}\xB0)`))))}analyzeKettlebellSnatch(t){this.addFeedback("info","Snatch: Analyzing (placeholder)...");let e=t.keypoints.find(n=>n.name==="right_shoulder"),o=t.keypoints.find(n=>n.name==="right_wrist");e&&o&&(e.score??0)>.5&&(o.score??0)>.5&&o.y<e.y-this.SNATCH_ARM_LOCKOUT_SHOULDER_WRIST_ALIGNMENT_Y}analyzeKettlebellPress(t){let e=t.keypoints.find(p=>p.name==="right_shoulder"),o=t.keypoints.find(p=>p.name==="right_elbow"),n=t.keypoints.find(p=>p.name==="right_wrist"),i=t.keypoints.find(p=>p.name==="right_hip");if(!e||!o||!n||!i||[e,o,n,i].some(p=>(p.score??0)<this.KEYPOINT_SCORE_THRESHOLD))return;let s=this.calculateAngle(e,o,n);if(s===null)return;let a=s>this.PRESS_ELBOW_ANGLE_UP&&n.y<e.y+this.PRESS_WRIST_SHOULDER_Y_DIFF_UP,l=s<this.PRESS_ELBOW_ANGLE_RACK&&Math.abs(n.y-e.y)<this.PRESS_WRIST_SHOULDER_Y_DIFF_RACK+20,u=this.isStateStable("press_overhead",a),c=this.isStateStable("press_racked",l);if(this.currentRepCycleState==="START")u&&(this.currentRepCycleState="UP",this.addFeedback("info",`Press: Lockout achieved (Elbow: ${s.toFixed(0)}\xB0)`),this.lastFramesStates={});else if(this.currentRepCycleState==="UP"){if(c)this.incrementRep(),this.addFeedback("success","Press: Rep complete! Returned to rack."),this.currentRepCycleState="START",this.lastFramesStates={};else if(u){let p=Math.abs(n.x-e.x),d=Math.abs(e.x-i.x);p>this.PRESS_WRIST_SHOULDER_X_ALIGNMENT&&this.addFeedback("warning","Press: Check wrist/shoulder horizontal alignment at lockout."),d>this.PRESS_TORSO_LEAN_X_ALIGNMENT&&this.addFeedback("warning","Press: Possible torso lean at lockout. Stay upright.")}}}analyzeGobletSquat(t){let e=t.keypoints.find(g=>g.name==="left_hip"),o=t.keypoints.find(g=>g.name==="right_hip"),n=t.keypoints.find(g=>g.name==="left_knee"),i=t.keypoints.find(g=>g.name==="right_knee"),s=t.keypoints.find(g=>g.name==="left_ankle"),a=t.keypoints.find(g=>g.name==="right_ankle");if([e,o,n,i,s,a].some(g=>(g?.score??0)<this.KEYPOINT_SCORE_THRESHOLD))return;let l=this.calculateAngle(e,n,s),u=this.calculateAngle(o,i,a);if(!l||!u)return;let c=(l+u)/2,p=c<90,d=c>160,m=this.isStateStable("goblet_down",p),f=this.isStateStable("goblet_up",d);this.currentRepCycleState==="START"&&m?(this.currentRepCycleState="UP",this.addFeedback("info","Squat: Down phase"),this.lastFramesStates={}):this.currentRepCycleState==="UP"&&f&&(this.incrementRep(),this.addFeedback("success","Squat: Rep complete!"),this.currentRepCycleState="START",this.lastFramesStates={})}analyzeDeadlift(t){let e=t.keypoints.find(g=>g.name==="left_hip"),o=t.keypoints.find(g=>g.name==="right_hip"),n=t.keypoints.find(g=>g.name==="left_knee"),i=t.keypoints.find(g=>g.name==="right_knee"),s=t.keypoints.find(g=>g.name==="left_shoulder"),a=t.keypoints.find(g=>g.name==="right_shoulder");if([e,o,n,i,s,a].some(g=>(g?.score??0)<this.KEYPOINT_SCORE_THRESHOLD))return;let l=this.calculateAngle(s,e,n),u=this.calculateAngle(a,o,i);if(l===null||u===null)return;let c=(l+u)/2,p=c<90,d=c>160,m=this.isStateStable("deadlift_bottom",p),f=this.isStateStable("deadlift_top",d);this.currentRepCycleState==="START"&&m?(this.currentRepCycleState="UP",this.addFeedback("info","Deadlift: Bottom position"),this.lastFramesStates={}):this.currentRepCycleState==="UP"&&f&&(this.incrementRep(),this.addFeedback("success","Deadlift: Rep complete!"),this.currentRepCycleState="START",this.lastFramesStates={})}analyzeKettlebellJerk(t){let e=t.keypoints.find(y=>y.name==="right_shoulder"),o=t.keypoints.find(y=>y.name==="right_elbow"),n=t.keypoints.find(y=>y.name==="right_wrist"),i=t.keypoints.find(y=>y.name==="right_hip"),s=t.keypoints.find(y=>y.name==="right_knee"),a=t.keypoints.find(y=>y.name==="right_ankle");if([e,o,n,i,s,a].some(y=>(y?.score??0)<this.KEYPOINT_SCORE_THRESHOLD))return;let l=this.calculateAngle(e,o,n),u=this.calculateAngle(i,s,a),c=n.y<e.y+this.JERK_WRIST_SHOULDER_Y_DIFF_LOCKOUT,p=Math.abs(n.x-e.x),d=u<this.JERK_KNEE_DIP_ANGLE,m=u<this.JERK_SECOND_DIP_KNEE_ANGLE,f=this.isStateStable("jerk_dip",d),g=this.isStateStable("jerk_second_dip",m),x=this.isStateStable("jerk_lockout",l>this.JERK_ELBOW_LOCKOUT_ANGLE&&c);this.currentRepCycleState==="START"?f&&(this.currentRepCycleState="UP",this.addFeedback("info","Jerk: First dip detected (drive)."),this.lastFramesStates={}):this.currentRepCycleState==="UP"&&(g&&c&&(this.currentRepCycleState="UP",this.addFeedback("info","Jerk: Second dip under bell.")),x&&(p>this.JERK_WRIST_SHOULDER_X_ALIGNMENT&&this.addFeedback("warning","Jerk: Check wrist/shoulder alignment at lockout."),this.incrementRep(),this.addFeedback("success","Jerk: Rep complete!"),this.currentRepCycleState="START",this.lastFramesStates={}))}calculateAngle(t,e,o){if(!t||!e||!o||(t.score??0)<this.KEYPOINT_SCORE_THRESHOLD||(e.score??0)<this.KEYPOINT_SCORE_THRESHOLD||(o.score??0)<this.KEYPOINT_SCORE_THRESHOLD)return null;let n=t.x-e.x,i=t.y-e.y,s=o.x-e.x,a=o.y-e.y,l=n*s+i*a,u=Math.sqrt(n*n+i*i),c=Math.sqrt(s*s+a*a);if(u===0||c===0)return null;let p=Math.max(-1,Math.min(1,l/(u*c)));return Math.acos(p)*(180/Math.PI)}isStateStable(t,e){return this.lastFramesStates[t]||(this.lastFramesStates[t]=[]),this.lastFramesStates[t].push(e),this.lastFramesStates[t].length>this.STABLE_FRAME_COUNT&&this.lastFramesStates[t].shift(),this.lastFramesStates[t].length<this.STABLE_FRAME_COUNT?!1:this.lastFramesStates[t].every(o=>o===e)}incrementRep(){this.ngZone.run(()=>{this.repCount++,this.addFeedback("success",`Rep ${this.repCount} counted!`)})}addFeedback(t,e){this.ngZone.run(()=>{let o=`[${new Date().toLocaleTimeString()}] ${e}`;this.feedbackMessages.unshift({type:t,message:o}),this.feedbackMessages.length>20&&this.feedbackMessages.pop(),this.changeDetectorRef.detectChanges()})}formatTime(t){let e=Math.floor(t/60),o=t%60;return`${e.toString().padStart(2,"0")}:${o.toString().padStart(2,"0")}`}toggleFeedbackVisibility(){this.isFeedbackVisible=!this.isFeedbackVisible,this.changeDetectorRef.detectChanges()}toggleControlsExpansion(){this.isControlsExpanded=!this.isControlsExpanded,this.changeDetectorRef.detectChanges()}startRecording(){if(!this.videoStream){this.addFeedback("warning","No video stream to record.");return}if(this.mediaRecorder&&this.mediaRecorder.state==="recording"){this.addFeedback("info","Already recording.");return}try{this.recordedChunks=[];let t=["video/webm; codecs=vp9,opus","video/webm; codecs=vp9","video/webm; codecs=vp8,opus","video/webm; codecs=vp8","video/mp4","video/webm"],e=t.find(o=>MediaRecorder.isTypeSupported(o));if(!e){this.addFeedback("error","No supported video format for recording."),console.error("No supported MediaRecorder MimeType found from list:",t);return}this.addFeedback("info",`Using recording format: ${e}`),this.mediaRecorder=new MediaRecorder(this.videoStream,{mimeType:e}),this.mediaRecorder.ondataavailable=o=>{o.data.size>0&&this.recordedChunks.push(o.data)},this.mediaRecorder.onstop=()=>{let o=new Blob(this.recordedChunks,{type:e}),n=URL.createObjectURL(o),i=document.createElement("a");document.body.appendChild(i),i.style.display="none",i.href=n;let s=e.includes("mp4")?"mp4":e.includes("webm")?"webm":"video";i.download=`workout-${new Date().toISOString().replace(/:/g,"-")}.${s}`,i.click(),window.URL.revokeObjectURL(n),i.remove(),this.addFeedback("success","Video recording saved."),this.isRecording=!1,this.changeDetectorRef.detectChanges()},this.mediaRecorder.onerror=o=>{let n=o;console.error("MediaRecorder error:",n.error||o),this.addFeedback("error",`Recording error: ${n.error?.name||"Unknown error"}`),this.isRecording=!1,this.changeDetectorRef.detectChanges()},this.mediaRecorder.start(),this.isRecording=!0,this.addFeedback("info","Recording started."),this.changeDetectorRef.detectChanges()}catch(t){console.error("Error starting recording:",t),this.addFeedback("error",`Failed to start recording: ${t instanceof Error?t.message:String(t)}`),this.isRecording=!1,this.changeDetectorRef.detectChanges()}}stopRecording(){this.mediaRecorder&&this.mediaRecorder.state==="recording"?(this.mediaRecorder.stop(),this.addFeedback("info","Stopping recording...")):(this.addFeedback("info","Not currently recording."),this.isRecording&&(this.isRecording=!1,this.changeDetectorRef.detectChanges()))}toggleRecording(){this.isRecording?this.stopRecording():this.startRecording()}initializeFabPosition(){this.fabPosition.x=window.innerWidth-56-20,this.fabPosition.y=window.innerHeight-56-20}onFabMouseDown(t){if(t.button!==0)return;t.preventDefault(),this.isFabDragging=!1;let o=t.currentTarget.getBoundingClientRect();this.fabDragStartOffset.x=t.clientX-o.left,this.fabDragStartOffset.y=t.clientY-o.top;let n=5,i=t.clientX,s=t.clientY,a=u=>{let c=u.clientX-i,p=u.clientY-s;!this.isFabDragging&&(Math.abs(c)>n||Math.abs(p)>n)&&(this.isFabDragging=!0),this.isFabDragging&&this.updateFabPosition(u.clientX,u.clientY)},l=()=>{window.removeEventListener("mousemove",a),window.removeEventListener("mouseup",l),this.isFabDragging=!1};window.addEventListener("mousemove",a),window.addEventListener("mouseup",l)}onFabTouchStart(t){if(t.touches.length!==1)return;t.preventDefault(),this.isFabDragging=!1;let o=t.currentTarget.getBoundingClientRect(),n=t.touches[0];this.fabDragStartOffset.x=n.clientX-o.left,this.fabDragStartOffset.y=n.clientY-o.top;let i=5,s=n.clientX,a=n.clientY,l=!1,u=p=>{if(p.touches.length!==1)return;let d=p.touches[0],m=d.clientX-s,f=d.clientY-a;!this.isFabDragging&&(Math.abs(m)>i||Math.abs(f)>i)&&(this.isFabDragging=!0,l=!0),this.isFabDragging&&this.updateFabPosition(d.clientX,d.clientY)},c=()=>{window.removeEventListener("touchmove",u),window.removeEventListener("touchend",c),l||this.toggleControlsExpansion(),this.isFabDragging=!1};window.addEventListener("touchmove",u,{passive:!1}),window.addEventListener("touchend",c)}onDocumentMouseMove(t){this.isFabDragging&&(t.preventDefault(),this.updateFabPosition(t.clientX,t.clientY))}onDocumentTouchMove(t){if(!this.isFabDragging||t.touches.length!==1)return;let e=t.touches[0];this.updateFabPosition(e.clientX,e.clientY)}onDocumentMouseUp(t){this.isFabDragging&&(this.isFabDragging=!1)}onDocumentTouchEnd(t){this.isFabDragging&&(this.isFabDragging=!1)}updateFabPosition(t,e){let o=this.hostElement.nativeElement.getBoundingClientRect(),n=56,i=t-this.fabDragStartOffset.x-o.left,s=e-this.fabDragStartOffset.y-o.top;i=Math.max(0,Math.min(i,o.width-n)),s=Math.max(0,Math.min(s,o.height-n)),this.fabPosition={x:i,y:s}}static \u0275fac=function(e){return new(e||r)(op(xa))};static \u0275cmp=yo({type:r,selectors:[["app-workout-tracker"]],viewQuery:function(e,o){if(e&1&&(Po(Ste,5),Po(wte,5)),e&2){let n;Ao(n=Do())&&(o.videoElementRef=n.first),Ao(n=Do())&&(o.canvasElementRef=n.first)}},hostBindings:function(e,o){e&1&&ne("mousemove",function(i){return o.onDocumentMouseMove(i)},rp)("touchmove",function(i){return o.onDocumentTouchMove(i)},rp)("mouseup",function(i){return o.onDocumentMouseUp(i)},rp)("touchend",function(i){return o.onDocumentTouchEnd(i)},rp)},decls:48,vars:19,consts:[["videoElement",""],["canvasElement",""],[1,"workout-tracker-container"],["class","rep-counter-display-area",4,"ngIf"],[1,"video-area"],["autoplay","","playsinline","","muted","",1,"video-feed"],[1,"pose-canvas"],["class","video-placeholder",4,"ngIf"],[1,"controls-fab",3,"click","mousedown","touchstart"],["width","50px","height","50px","viewBox","0 0 24 24","xmlns","http://www.w3.org/2000/svg","fill","currentColor"],["d","M19.43,12.98c0.04-0.32,0.07-0.64,0.07-0.98s-0.03-0.66-0.07-0.98l2.11-1.65c0.19-0.15,0.24-0.42,0.12-0.64 l-2-3.46c-0.12-0.22-0.39-0.3-0.61-0.22l-2.49,1c-0.52-0.4-1.08-0.73-1.69-0.98l-0.38-2.65C14.46,2.18,14.25,2,14,2h-4 c-0.25,0-0.46,0.18-0.49,0.42L9.11,5.07C8.5,5.32,7.94,5.66,7.41,6.05L4.92,5.05C4.7,4.96,4.44,5.05,4.32,5.26L2.32,8.72 c-0.12,0.22-0.07,0.49,0.12,0.64l2.11,1.65C4.49,11.34,4.46,11.67,4.46,12s0.03,0.66,0.07,0.98l-2.11,1.65 c-0.19,0.15-0.24,0.42-0.12,0.64l2,3.46c0.12,0.22,0.39,0.3,0.61,0.22l2.49-1c0.52,0.4,1.08,0.73,1.69,0.98l0.38,2.65 c0.03,0.24,0.24,0.42,0.49,0.42h4c0.25,0,0.46-0.18,0.49-0.42l0.38-2.65c0.61-0.25,1.17-0.59,1.69-0.98l2.49,1 c0.23,0.09,0.49,0,0.61-0.22l2-3.46c0.12-0.22,0.07-0.49-0.12-0.64L19.43,12.98z M12,15.5c-1.93,0-3.5-1.57-3.5-3.5 s1.57-3.5,3.5-3.5s3.5,1.57,3.5,3.5S13.93,15.5,12,15.5z"],[1,"expandable-controls-panel"],[1,"main-controls"],[1,"exercise-selector"],["for","exercise"],["id","exercise",3,"ngModelChange","ngModel"],["value","Right Bicep Curl"],["value","Left Bicep Curl"],["value","Alternating Bicep Curl"],["value","Kettlebell Snatch"],["value","Kettlebell Press"],["value","Goblet Squat"],["value","Deadlift"],["value","Kettlebell Jerk"],[1,"status-info"],[1,"timer"],[1,"action-buttons"],["class","action-btn start-btn",3,"disabled","click",4,"ngIf"],["class","action-btn stop-btn",3,"click",4,"ngIf"],["class","action-btn record-btn",3,"recording","click",4,"ngIf"],[1,"action-btn","feedback-modal-btn",3,"click"],["class","modal-overlay",3,"click",4,"ngIf"],[1,"rep-counter-display-area"],[1,"rep-count-value"],[1,"rep-count-label"],[1,"video-placeholder"],[4,"ngIf"],["class","action-btn retry-btn",3,"click",4,"ngIf"],[1,"action-btn","retry-btn",3,"click"],[1,"action-btn","start-btn",3,"click","disabled"],[1,"action-btn","stop-btn",3,"click"],[1,"action-btn","record-btn",3,"click"],[1,"modal-overlay",3,"click"],[1,"modal-content",3,"click"],[1,"modal-header"],[1,"modal-close-btn",3,"click"],[1,"modal-body"],[3,"ngClass",4,"ngFor","ngForOf"],["class","no-feedback",4,"ngIf"],[3,"ngClass"],[1,"no-feedback"]],template:function(e,o){if(e&1){let n=ye();k(0,"div",2),se(1,Cte,5,1,"div",3),k(2,"div",4),ce(3,"video",5,0)(5,"canvas",6,1),se(7,Tte,4,3,"div",7)(8,Pte,5,4,"div",7),T(),k(9,"button",8),ne("click",function(){return J(n),ee(o.toggleControlsExpansion())})("mousedown",function(s){return J(n),ee(o.onFabMouseDown(s))})("touchstart",function(s){return J(n),ee(o.onFabTouchStart(s))}),_e(),k(10,"svg",9),ce(11,"path",10),T()(),He(),k(12,"div",11)(13,"div",12)(14,"div",13)(15,"label",14),O(16,"Exercise: "),T(),k(17,"select",15),ls("ngModelChange",function(s){return J(n),as(o.currentExercise,s)||(o.currentExercise=s),ee(s)}),ne("ngModelChange",function(s){return J(n),ee(o.setExerciseLogic(s))}),k(18,"option",16),O(19,"Right Bicep Curl"),T(),k(20,"option",17),O(21,"Left Bicep Curl"),T(),k(22,"option",18),O(23,"Alternating Bicep Curl"),T(),k(24,"option",19),O(25,"Kettlebell Snatch"),T(),k(26,"option",20),O(27,"Kettlebell Press"),T(),k(28,"option",21),O(29,"Goblet Squat"),T(),k(30,"option",22),O(31,"Deadlift"),T(),k(32,"option",23),O(33,"Kettlebell Jerk"),T()()(),k(34,"div",24)(35,"span"),O(36),T(),k(37,"div",25),O(38,"Time: "),k(39,"span"),O(40),T()()(),k(41,"div",26),se(42,Ate,2,1,"button",27)(43,Dte,2,0,"button",28)(44,Fte,2,3,"button",29),k(45,"button",30),ne("click",function(){return J(n),ee(o.toggleFeedbackVisibility())}),O(46," View Log "),T()()()(),se(47,Mte,11,2,"div",31),T()}e&2&&(R(),L("ngIf",o.isWorkoutActive),R(2),Oo("hidden",!o.isCameraReady),R(4),L("ngIf",!o.isCameraReady&&!o.modelReady),R(),L("ngIf",o.isCameraReady&&!o.isWorkoutActive&&(!(o.videoStream!=null&&o.videoStream.active)||!o.modelReady)),R(),np("left",o.fabPosition.x,"px")("top",o.fabPosition.y,"px"),R(3),Oo("expanded",o.isControlsExpanded),R(5),ss("ngModel",o.currentExercise),R(19),Bt("",o.currentExercise," - ",o.modelReady?"AI Ready":"AI Loading..."),R(4),We(o.formatTime(o.elapsedTime)),R(2),L("ngIf",!o.isWorkoutActive),R(),L("ngIf",o.isWorkoutActive),R(),L("ngIf",o.isCameraReady&&(o.videoStream==null?null:o.videoStream.active)),R(3),L("ngIf",o.isFeedbackVisible))},dependencies:[wo,Qn,Jo,So,wS,Ia,Od,Ld,Fd,_a,ka],styles:["[_nghost-%COMP%]{display:flex;flex-direction:column;width:100%;height:100vh;overflow:hidden;background-color:#343a40}.workout-tracker-container[_ngcontent-%COMP%]{display:flex;flex-direction:column;width:100%;flex-grow:1;overflow:hidden;position:relative}.rep-counter-display-area[_ngcontent-%COMP%]{position:absolute;top:20px;left:50%;transform:translate(-50%);z-index:10;background-color:#0009;padding:10px 25px;border-radius:10px;text-align:center;color:#f0f0f0;box-shadow:0 2px 8px #0000004d}.rep-counter-display-area[_ngcontent-%COMP%]   .rep-count-value[_ngcontent-%COMP%]{font-size:4rem;font-weight:700;line-height:1;color:#28a745;text-shadow:1px 1px 2px rgba(0,0,0,.5)}.rep-counter-display-area[_ngcontent-%COMP%]   .rep-count-label[_ngcontent-%COMP%]{font-size:1rem;text-transform:uppercase;letter-spacing:1px;margin-top:2px}.video-area[_ngcontent-%COMP%]{z-index:1;position:relative;width:100%;flex-grow:1;background-color:#000;overflow:hidden;display:flex;justify-content:center;align-items:center}.video-feed[_ngcontent-%COMP%]{display:block;width:100%;height:100%;object-fit:contain}.video-feed.hidden[_ngcontent-%COMP%]{display:none}.pose-canvas[_ngcontent-%COMP%]{position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none}.video-placeholder[_ngcontent-%COMP%]{color:#f8f9fa;text-align:center;padding:20px}.video-placeholder[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{background-color:#007bff}.controls-fab[_ngcontent-%COMP%]{position:absolute;bottom:20px;right:20px;width:56px;height:56px;background-color:#007bff;color:#fff;border-radius:50%;border:none;box-shadow:0 4px 12px #0000004d;display:flex;justify-content:center;align-items:center;cursor:pointer;z-index:990;transition:background-color .3s ease,transform .3s ease}.controls-fab[_ngcontent-%COMP%]:hover{background-color:#0062cc;transform:scale(1.05)}.controls-fab[_ngcontent-%COMP%]   .material-icons-outlined[_ngcontent-%COMP%]{font-size:28px}.expandable-controls-panel[_ngcontent-%COMP%]{position:absolute;bottom:0;left:0;width:100%;background-color:#1e1e1ef2;box-shadow:0 -3px 15px #0006;transform:translateY(100%);transition:transform .3s ease-in-out,opacity .3s ease-in-out;opacity:0;z-index:980;display:flex;justify-content:center;padding-top:15px;padding-bottom:10px;box-sizing:border-box}.expandable-controls-panel.expanded[_ngcontent-%COMP%]{transform:translateY(0);opacity:1}.main-controls[_ngcontent-%COMP%]{color:#f8f9fa;padding:10px 15px;border-radius:8px;width:100%;max-width:700px;display:flex;flex-direction:column;gap:12px}.exercise-selector[_ngcontent-%COMP%]{display:flex;align-items:center;gap:8px}.exercise-selector[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{font-size:.9em}.exercise-selector[_ngcontent-%COMP%]   select[_ngcontent-%COMP%]{padding:6px 10px;border-radius:4px;border:1px solid #6c757d;background-color:#343a40;color:#f8f9fa;flex-grow:1}.status-info[_ngcontent-%COMP%]{display:flex;justify-content:space-around;align-items:center;font-size:.9em;text-align:center;flex-wrap:wrap;gap:10px}.status-info[_ngcontent-%COMP%]   .timer[_ngcontent-%COMP%]{background-color:#0003;padding:5px 10px;border-radius:4px}.status-info[_ngcontent-%COMP%]   .timer[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{font-weight:700;color:#007bff}.action-buttons[_ngcontent-%COMP%]{display:flex;justify-content:center;gap:10px;flex-wrap:wrap}.action-btn[_ngcontent-%COMP%]{padding:10px 15px;font-size:.9em;border:none;border-radius:5px;cursor:pointer;transition:background-color .2s ease,transform .1s ease;color:#fff;min-width:120px;text-align:center}.action-btn[_ngcontent-%COMP%]:hover{opacity:.9}.action-btn[_ngcontent-%COMP%]:active{transform:translateY(1px)}.action-btn[_ngcontent-%COMP%]:disabled{background-color:#6c757d!important;cursor:not-allowed;opacity:.7}.start-btn[_ngcontent-%COMP%]{background-color:#28a745}.start-btn[_ngcontent-%COMP%]:hover{background-color:#1e7e34}.stop-btn[_ngcontent-%COMP%]{background-color:#dc3545}.stop-btn[_ngcontent-%COMP%]:hover{background-color:#bd2130}.record-btn[_ngcontent-%COMP%]{background-color:#17a2b8}.record-btn[_ngcontent-%COMP%]:hover{background-color:#117a8b}.record-btn.recording[_ngcontent-%COMP%]{background-color:#ffc107;color:#343a40}.record-btn.recording[_ngcontent-%COMP%]:hover{background-color:#d39e00}.feedback-modal-btn[_ngcontent-%COMP%]{background-color:#6c757d}.feedback-modal-btn[_ngcontent-%COMP%]:hover{background-color:#545b62}.modal-overlay[_ngcontent-%COMP%]{position:fixed;top:0;left:0;width:100%;height:100%;background-color:#0009;display:flex;justify-content:center;align-items:center;z-index:1000;padding:20px;box-sizing:border-box}.modal-content[_ngcontent-%COMP%]{background-color:#fff;color:#212529;padding:20px;border-radius:8px;box-shadow:0 5px 15px #0000004d;width:100%;max-width:600px;max-height:80vh;display:flex;flex-direction:column}.modal-header[_ngcontent-%COMP%]{display:flex;justify-content:space-between;align-items:center;border-bottom:1px solid #eee;padding-bottom:10px;margin-bottom:15px}.modal-header[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%]{margin:0;font-size:1.4em}.modal-close-btn[_ngcontent-%COMP%]{background:none;border:none;font-size:1.8em;line-height:1;cursor:pointer;padding:0 5px;color:#6c757d}.modal-close-btn[_ngcontent-%COMP%]:hover{color:#343a40}.modal-body[_ngcontent-%COMP%]{flex-grow:1}.modal-body[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%]{list-style-type:none;padding:0;margin:0}.modal-body[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]{padding:6px 0;font-size:.9em;border-bottom:1px solid #f0f0f0;word-break:break-word}.modal-body[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]:last-child{border-bottom:none}.modal-body[_ngcontent-%COMP%]   .feedback-info[_ngcontent-%COMP%]{color:#007bff}.modal-body[_ngcontent-%COMP%]   .feedback-success[_ngcontent-%COMP%]{color:#28a745}.modal-body[_ngcontent-%COMP%]   .feedback-warning[_ngcontent-%COMP%]{color:#ffc107}.modal-body[_ngcontent-%COMP%]   .feedback-error[_ngcontent-%COMP%]{color:#dc3545}.no-feedback[_ngcontent-%COMP%]{color:#6c757d;font-style:italic;padding:20px 0;text-align:center}"]})};var J_t=[{path:"",component:zd,title:"My Routines"},{path:"routine/new",component:wn,data:{mode:"routineBuilder",isNew:!0},title:"Create New Routine"},{path:"routine/edit/:routineId",component:wn,data:{mode:"routineBuilder",isNew:!1},title:"Edit Routine"},{path:"routine/view/:routineId",component:wn,data:{mode:"routineBuilder",isNew:!1,isView:!0},title:"View Routine"},{path:"log/manual/new",component:wn,data:{mode:"manualLogEntry",isNew:!0},title:"Log Past Workout"},{path:"log/manual/new/from/:routineId",component:wn,data:{mode:"manualLogEntry",isNew:!0,prefillFromRoutine:!0},title:"Log Workout from Routine"},{path:"log/manual/edit/:logId",component:wn,data:{mode:"manualLogEntry",isNew:!1},title:"Edit Workout Log"},{path:"play",component:up,data:{mode:"newRoutine",isNew:!1},title:"Workout Session"},{path:"play/:routineId",component:up,title:"Workout Session"},{path:"summary/:logId",component:qd,title:"Workout Summary"},{path:"routine/kb-workout-tracker",component:wx}];export{J_t as WORKOUT_TRACKER_ROUTES};
